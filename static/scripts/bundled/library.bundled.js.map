{"version":3,"sources":["webpack:///library.bundled.js","webpack:///./galaxy/scripts/mvc/ui/ui-select.js","webpack:///./galaxy/scripts/mvc/library/library-model.js","webpack:///./galaxy/scripts/mvc/library/library-dataset-view.js","webpack:///./galaxy/scripts/apps/library.js","webpack:///./galaxy/scripts/galaxy.library.js","webpack:///./galaxy/scripts/mvc/library/library-util.js","webpack:///./galaxy/scripts/mvc/library/library-folderlist-view.js","webpack:///./galaxy/scripts/mvc/library/library-folderrow-view.js","webpack:///./galaxy/scripts/mvc/library/library-librarylist-view.js","webpack:///./galaxy/scripts/mvc/library/library-libraryrow-view.js","webpack:///./galaxy/scripts/mvc/library/library-librarytoolbar-view.js","webpack:///./galaxy/scripts/mvc/library/library-foldertoolbar-view.js","webpack:///./galaxy/scripts/libs/jquery/jstree.js","webpack:///./galaxy/scripts/mvc/library/library-library-view.js","webpack:///./galaxy/scripts/mvc/library/library-folder-view.js","webpack:///./galaxy/scripts/utils/add-logging.js","webpack:///./galaxy/scripts/mvc/base-mvc.js"],"names":["webpackJsonp","139","module","exports","__webpack_require__","Backbone","_","Object","defineProperty","value","_utils","_utils2","obj","__esModule","default","View","extend","optionsDefault","css","placeholder","data","multiple","minimumInputLength","initialData","initialize","options","this","merge","setElement","_template","container","console","log","append","$el","select_data","_refresh","_setValue","self","onchange","on","new_value","before","_getValue","undefined","after","text","select2","disabled","enable","disable","add","push","id","del","index","_getIndex","splice","remove","update","key","select_opt","containerCssClass","ajax","dropdownCssClass","escapeMarkup","formatResult","formatSelection","initSelection","selected","dropdownAutoWidth","findIndex","length","call","156","_libraryUtil","_libraryUtil2","Library","Model","urlRoot","Galaxy","root","isVisible","show_deleted","get","Libraries","Collection","model","search","search_term","lowercase_term","toLowerCase","filter","indexOf","getVisible","filters","item","sortLibraries","sort_key","sort_order","comparator","generateLibraryComparator","sort","LibraryItem","Ldda","FolderAsModel","Folder","sortFolder","generateFolderComparator","FolderContainer","defaults","folder","parse","reset","i","folder_contents","type","folder_item","file_item","emit","error","HistoryItem","HistoryContents","url","GalaxyHistory","GalaxyHistories","Jstree","Item","221","$","jQuery","_interopRequireDefault","_toastr","_toastr2","_libraryModel","_libraryModel2","_uiSelect","_uiSelect2","LibraryDatasetView","el","edit_mode","events","click .toolbtn_modify_dataset","click .toolbtn_cancel_modifications","click .toolbtn-download-dataset","click .toolbtn-import-dataset","click .copy-link-to-clipboard","click .make-private","click .remove-restrictions","click .toolbtn_save_permissions","click .toolbtn_save_modifications","select_genome","select_extension","list_extensions","auto","description","list_genomes","fetchExtAndGenomes","fetchDataset","fetch","success","show_permissions","showPermissions","show_version","fetchVersion","render","response","responseJSON","err_msg","onclick","libraries","library_router","back","template","templateDataset","html","tooltip","ldda_id","ldda","renderVersion","templateVersion","enableModification","templateModifyDataset","renderSelectBoxes","genome_build","file_ext","downloadDataset","ld_ids","processDownload","method","param","inputs","each","split","pair","appendTo","submit","info","importIntoHistory","refreshUserHistoriesList","templateBulkImportInModal","modal","show","closing_events","title","body","histories","models","buttons","Import","importCurrentIntoHistory","Close","hide","callback","warning","window","location","disableButton","new_history_name","val","post","name","done","new_history","processImportToHistory","fail","xhr","status","always","enableButton","history_id","find","historyItem","getJSON","save","content","source","templateDatasetPermissions","fetched_permissions","access_dataset_roles","set","is_unrestricted","is_admin","config","is_admin_user","prepareSelectBoxes","_serializeRoles","role_list","selected_roles","replace","accessSelectObject","_generate_select_options","selector","modifySelectObject","modify_item_roles","manageSelectObject","manage_dataset_roles","select_options","role","element","join","dataType","quietMillis","term","page","q","page_limit","results","more","total","roles","saveModifications","is_changed","ld","new_name","new_info","new_genome_build","new_ext","dataset_view","patch","copyToClipboard","e","preventDefault","href","history","lastIndexOf","substr","prompt","makeDatasetPrivate","removeDatasetRestrictions","_extractIds","roles_list","ids_list","savePermissions","event","access_ids","manage_ids","modify_ids","access_ids[]","manage_ids[]","modify_ids[]","datatypes","extension","description_url","a","b","unshift","genomes","current_genome","current_ext","289","tracksterApp","_galaxy2","GalaxyApp","_galaxy","libraryApp","290","_baseMvc","_baseMvc2","_libraryFolderlistView","_libraryFolderlistView2","_libraryLibrarylistView","_libraryLibrarylistView2","_libraryLibrarytoolbarView","_libraryLibrarytoolbarView2","_libraryFoldertoolbarView","_libraryFoldertoolbarView2","_libraryDatasetView","_libraryDatasetView2","_libraryLibraryView","_libraryLibraryView2","_libraryFolderView","_libraryFolderView2","LibraryRouter","Router","routesHit","bind","trackPageview","routes","","page/:show_page","library/:library_id/permissions","folders/:folder_id/permissions","folders/:id","folders/:id/page/:show_page","folders/:folder_id/datasets/:dataset_id","folders/:folder_id/datasets/:dataset_id/permissions","folders/:folder_id/datasets/:dataset_id/versions/:ldda_id","folders/:folder_id/download/:format","folders/:folder_id/import/:source","navigate","trigger","getFragment","test","ga","LibraryPrefs","SessionStorageModel","with_deleted","without_restricted","sort_by","library_page_size","folder_page_size","GalaxyLibrary","libraryToolbarView","libraryListView","libraryView","folderToolbarView","folderListView","datasetView","ga_code","s","o","g","r","m","arguments","l","Date","createElement","getElementsByTagName","async","src","parentNode","insertBefore","document","preferences","unbind","LibraryToolbarView","LibraryListView","show_page","FolderToolbarView","FolderListView","parseInt","folder_id","format","download","dataset_id","library_id","LibraryView","folderView","FolderView","showImportModal","start","pushState","291","itemA","itemB","has","libraryA","libraryB","292","_libraryFolderrowView","_libraryFolderrowView2","progress","progressStep","folderContainer","current_sort_order","current_sort_key","click #select-all-checkboxes","click .dataset_row","click .folder_row","click .sort-folder-name","click .sort-folder-file_ext","click .sort-folder-description","click .sort-folder-state","collection","include_deleted","page_count","rowViews","listenTo","renderOne","removeOne","rePaint","fetchFolder","attributes","folder_container","templateFolder","upper_folder_id","path","metadata","full_path","parent_library_id","order","row","findWhere","showDatasetDetails","paginate","total_items_count","Math","ceil","page_start","items_to_render","slice","items_shown","renderPaginator","removeAllRows","renderAll","checkEmptiness","addAll","postRender","fetched_metadata","contains_file_or_folder","configureElements","reverse","rowView","FolderRowView","sortColumnClicked","currentTarget","className","renderSortIcon","selectAll","target","checked","$row","closest","makeDarkRow","makeWhiteRow","selectClickedRow","checkbox","localName","removeClass","addClass","293","click .undelete_dataset_btn","click .undelete_folder_btn","click .edit_folder_btn","click .cancel_folder_btn","click .save_folder_btn","visibility_config","edit_folder_btn","save_folder_btn","cancel_folder_btn","permission_folder_btn","prepareButtons","templateRowDeletedFolder","templateRowFolder","templateRowDeletedFile","templateRowFile","content_item","button_config","vis_config","undeleteDataset","that","dataset","destroy","updated_dataset","undeleteFolder","updated_folder","startModifications","repaint","cancelModifications","new_description","row_view","old_element","replaceWith","294","_libraryLibraryrowView","_libraryLibraryrowView2","_underscore","_underscore2","click .sort-libraries-link","all_fetched","templateLibraryList","libraries_to_render","is_public","where","deleted","is_deleted","total_libraries_count","libraries_shown","renderRows","fetchDeleted","library","LibraryRowView","sort_clicked","searchLibraries","trim","searching","295","click .edit_library_btn","click .cancel_library_btn","click .save_library_btn","click .delete_library_btn","click .undelete_library_btn","element_visibility_config","upload_library_btn","edit_library_btn","permission_library_btn","save_library_btn","cancel_library_btn","delete_library_btn","undelete_library_btn","tmpl","templateRow","edit_button_clicked","cancel_library_modification","save_library_modification","new_synopsis","delete_library","undelete_library","296","click #create_new_library_btn","click #include_deleted_chk","click #exclude_restricted_chk","click .page_size_prompt","keyup .library-search-input","toolbar_template","templateToolBar","is_anonym","user","isAdmin","isAnonymous","admin_user","anon_user","paginator_template","templatePaginator","createLibraryFromModal","stopPropagation","templateNewLibraryInModal","Create","createNewLibrary","libraryDetails","serializeNewLibrary","validateNewLibrary","clearLibraryModal","showPageSizePrompt","synopsis","includeDeletedChecked","excludeRestrictedChecked","297","click #toolbtn_create_folder","click #toolbtn_bulk_import","click #include_deleted_datasets_chk","click #toolbtn_bulk_delete","click .toolbtn-show-locinfo","can_add_library_item","chain_call_control","total_number","failed_number","disabled_jstree_element","jstree","template_defaults","mutiple_add_dataset_options","user_library_import_dir","allow_library_path_paste","library_import_dir","createFolderFromModal","templateNewFolderInModal","create_new_folder_event","folderDetails","serialize_new_folder","validate_new_folder","current_folder_id","url_items","fragment","modalBulkImport","findCheckedRows","importAllIntoHistory","last_used_history_id","history_name","dataset_ids","folder_ids","row_id","substring","datasets_to_import","library_dataset_id","library_folder_id","initChainCallControl","action","chainCallImportingIntoHistory","updateProgress","width","round","txt_representation","addFilesFromHistoryModal","template_modal","templateAddFilesFromHistory","Add","addAllDatasetsFromHistory","closing_callback","fetchAndDisplayHistoryContents","change","importFilesFromPathModal","templateImportPathModal","importFromPathsClicked","cache","importFilesFromGalaxyFolderModal","templateBrowserModal","importFromJstreePath","renderJstree","core","plugins","types","icon","file","three_state","err_code","preserve_dirs","is","link_data","space_to_tab","to_posix_lines","tag_using_filenames","file_type","dbkey","paths","valid_paths","trimmed","chainCallImportingFolders","templateAddingDatasetsProgressBar","folder_name","templateDeletingItemsProgressBar","templateImportIntoHistoryProgressBar","all_nodes","get_selected","selected_nodes","node","state","selection_type","li_attr","full_source","chainCallImportingUserdirFiles","history_contents","history_contents_template","templateHistoryContents","contents","prop","checked_hdas","history_item_ids","history_item_types","items_to_add","hid","item_type","history_item_id","from_hdca_id","from_hda_id","chainCallAddingHdas","history_item_set","popped_item","pop","when","hdas_set","added_hdas","chainCallDeletingItems","items_to_delete","deleted_items","item_to_delete","updated_item","model_class","checkIncludeDeleted","deleteSelectedItems","$checkedValues","items_total","showLocInfo","showLocInfoModal","templateLocInfoInModal","298","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","apply","_temp1","_temp2","instance_counter","ccp_node","ccp_mode","ccp_inst","themes_loaded","attr","_d","_node","setAttribute","appendChild","version","idregex","create","tmp","opt","k","plugin","init","_id","_cnt","_wrk","_data","themes","dots","icons","last_error","working","worker_queue","reference","needle","ignore","inst","_model","fn","arg","is_method","args","Array","prototype","result","instance","isPlainObject","expr","createPseudo","hasClass","strings","check_callback","noop","animation","dir","stripes","variant","responsive","expand_selected_onload","worker","force_text","deco","opts","Child","#","parent","parents","children","children_d","loaded","changed","force_full_redraw","redraw_timeout","default_state","opened","settings","proxy","teardown","ready","rtl","original_container_html","clone","addBack","nodeType","nodeValue","get_string","li_height","get_container_ul","height","load_node","keep_html","empty","removeData","selection","getSelection","sel","removeAllRanges","collapse","toggle_node","focus","activate_node","tagName","which","is_open","close_node","get_prev_dom","is_closed","open_node","get_node","get_next_dom","is_selected","j","concat","vakata","array_unique","setTimeout","set_theme","set_theme_variant","mouseleave","not","mouseenter","hover_node","dehover_node","off","ev","triggerHandler","get_container","isFunction","_firstChild","dom","firstChild","nextSibling","_nextSibling","_previousSibling","previousSibling","as_dom","ex","get_path","glue","ids","p","get_text","strict","parentsUntil","next","eq","lastChild","get_parent","get_children_dom","is_parent","is_loaded","is_loading","loading","is_leaf","c","isArray","_load_nodes","array_remove_item","_load_node","nodes","is_callback","t","d","x","getResponseHeader","_append_json_data","_append_html_data","reason","JSON","stringify","f","_node_changed","cb","dat","par","chd","dpc","v","_parse_model_from_html","redraw","w","df","t_id","t_cnt","func","rslt","parse_flat","ps","tid","toString","a_attr","original","hasOwnProperty","parse_nest","cnt","mod","inArray","Blob","URL","Worker","createObjectURL","onmessage","shift","postMessage","_parse_model_from_flat_json","_parse_model_from_json","_redraw","redraw_node","full","deep","ind","old","querySelector","getElementById","activeElement","cloneNode","childNodes","style","backgroundImage","backgroundPosition","backgroundSize","createTextNode","innerHTML","t1","t2","end","stop","slideDown","display","ok","_open_to","slideUp","open_all","original_obj","_this","close_all","is_disabled","enable_node","disable_node","last_clicked","metaKey","ctrlKey","shiftKey","select_node","deselect_node","deselect_all","supress_event","prevent_open","select_all","old_selection","map","get_top_selected","get_bottom_selected","get_state","open","scroll","left","scrollLeft","top","scrollTop","set_state","res","n","isEmptyObject","refresh","skip_loading","forget_state","refresh_node","to_load","set_id","set_text","get_json","flat","get_icon","no_data","no_state","no_id","no_children","create_node","pos","match","check","position","rename_node","delete_node","array_remove","chk","chc","is_multi","functions","move_node","old_par","old_pos","new_par","old_ins","copy_node","is_foreign","old_parent","old_position","old_instance","new_instance","cut","copy","get_buffer","mode","can_paste","paste","edit","default_text","h1","visibility","h2","class","padding","border","box-sizing","lineHeight","blur","keydown","stopImmediatePropagation","click","mousedown","keyup","min","keypress","fontFamily","fontSize","fontWeight","fontStyle","fontStretch","fontVariant","letterSpacing","wordSpacing","select","theme_name","theme_url","theme","get_theme","variant_name","get_theme_variant","show_stripes","hide_stripes","toggle_stripes","show_dots","hide_dots","toggle_dots","show_icons","hide_icons","toggle_icons","set_icon","hide_icon","removeAttr","show_icon","with_values","nodeName","array","from","to","rest","_i","visible","whole_node","keep_selected_style","cascade","tie_selection","uto","clearTimeout","_undetermined","undetermined","tt","tmp2","show_checkboxes","checkboxes","hide_checkboxes","toggle_checkboxes","is_undetermined","is_checked","uncheck_node","check_node","check_all","uncheck_all","get_checked","get_top_checked","get_bottom_checked","contextmenu","show_at_node","items","separator_before","separator_after","_disabled","label","new_node","rename","ccp","submenu","last_ts","timeStamp","show_contextmenu","pageX","pageY","context","y","offset","_show_contextmenu","one","cls","right_to_left","vakata_context","position_x","position_y","is_visible","hide_onmouseleave","_trigger","event_name","_execute","_parse","str","sep","_class","shortcut","shortcut_label","_show_submenu","outerWidth","h","dw","dh","outerHeight","contains","relatedTarget","siblings","last","prevAll","first","nextAll","mouseup","dnd","open_timeout","is_draggable","check_while_dragging","always_copy","inside_pos","mlt","origin","lastmv","laster","opento","marker","op","pr","ip","tm","ins","ref","rel","helper","z","_get","vakata_dnd","is_down","is_drag","helper_w","init_x","init_y","scroll_l","scroll_t","scroll_e","scroll_i","is_touch","scroll_speed","scroll_proximity","helper_left","helper_top","threshold","threshold_touch","_clean","clearInterval","drag","_scroll","init_only","setInterval","originalEvent","changedTouches","elementFromPoint","pageXOffset","pageYOffset","unselectable","onselectstart","MozUserSelect","margin","zIndex","abs","wh","ww","dt","dl","ht","hl","scrollHeight","offsetHeight","scrollWidth","offsetWidth","fuzzy","case_sensitive","show_only_matches","close_opened_onclear","search_leaves_only","search_callback","opn","querySelectorAll","skip_async","clear_search","caseSensitive","isMatch","_search_open","pattern","txt","matchmask","pattern_alphabet","match_bitapScore","MATCH_LOCATION","MATCH_DISTANCE","distance","MATCH_THRESHOLD","patternLen","mask","charAt","accuracy","proximity","score","binMin","binMid","lastRd","finish","rd","charMatch","textLen","scoreThreshold","bestLoc","binMax","locations","floor","max","ttl","save_state","restore_state","st","sec","storage","clear_state","localStorage","setItem","getItem","removeItem","_delete_ids","get_rules","max_children","valid_children","max_depth","get_type","rules","set_type","old_type","old_icon","unique","duplicate","counter","div","wholerow","Event","altKey","299","fetchLibrary","access_library_role_list","templateLibraryPermissions","selected_access_library_roles","selected_add_item_roles","add_library_item_role_list","selected_manage_library_roles","manage_library_role_list","selected_modify_library_roles","modify_library_role_list","_createSelectOptions","addSelectObject","init_data","is_library_access","add_ids","add_ids[]","300","templateFolderPermissions","selected_manage_folder_roles","manage_folder_role_list","selected_modify_folder_roles","modify_folder_role_list","45","addLogging","namespace","addTo","_logNamespace","LOGGING_FNS","forEach","logFn","logger","8","_interopRequireWildcard","newObj","mixin","mixinHash1","propsHash","lastArg","wrapTemplate","jsonNamespace","templateFn","json","view","templateVars","_l","buildComparator","attribute_name","ascending","_backbone","_addLogging","_addLogging2","_localization","_localization2","LoggableMixin","initialAttrs","_checkEnabledSessionStorage","Error","existing","isNew","_read","clear","silent","sessionStorage","err","alert","sync","returned","_create","_update","_delete","toJSON","DOMException","navigator","userAgent","_log","omit","SearchableModelMixin","searchAttributes","searchAliases","searchAttribute","attrKey","searchFor","attrVal","_searchArrayAttribute","any","elem","matches","matchesAll","terms","all","HiddenUntilActivatedViewMixin","hiddenUntilActivated","$activator","HUAVOptions","$elementShown","showFn","toggle","showSpeed","hasBeenShown","hidden","isHidden","onshowFirstTime","onshow","onhide","DraggableViewMixin","draggable","$dragHandle","toggleDraggable","draggableOff","draggableOn","dragStartHandler","_dragStartHandler","dragEndHandler","_dragEndHandler","handle","addEventListener","removeEventListener","dataTransfer","effectAllowed","setData","SelectableViewMixin","selectable","$selector","_renderSelected","toggleClass","toggleSelector","hideSelector","showSelector","speed","fxSpeed","toggleSelect","deselect"],"mappings":"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,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,mCACA,+DACA,QACA,UACA,qCACA,OACA,kCACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,2CACA,OACA,4BACA,yDACA,QACA,UACA,4CACA,OACA,6BACA,0DACA,QACA,UACA,WAEA,sCACA,8BACA,qBACA,0CACA,SACA,UAEA,sCACA,+BACA,qBACA,0CACA,SACA,UAEA,QACA,qBACA,SACA,SAEA,wCACA,QACA,6BACA,OACA,iEACA,wKACA,WACA,OACA,SACA,UAEA,SAEA,UACFuF,KAAK,MAIfhF,gBAAiB,WACb,MAAO9K,GAAEuK,UAGD,wCACA,6BACA,2EACA,qJACA,+CACA,uBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8HAEA,8BACA,2DACA,OACA,2EACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,2CACA,+DACA,QACA,UACA,qCACA,OACA,iDACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SAEA,SAEA,UACFuF,KAAK,MAIf9E,sBAAuB,WACnB,MAAOhL,GAAEuK,UAGD,wCACA,6BACA,kLACA,oCACA,eACA,YACA,8KACA,uCACA,aACA,YACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8BACA,2DACA,OACA,oHACA,oIACA,QACA,OACA,iCACA,OACA,0EACA,QACA,QACA,OACA,oCACA,OACA,oEACA,QACA,QACA,OACA,4BACA,kDACA,QACA,OACA,2CACA,sDACA,QACA,OACA,mCACA,oDACA,QACA,mBACA,kCACA,wEACA,QACA,qCACA,yDACA,2EACA,iBACA,+BACA,UACA,QACA,OACA,yCACA,qEACA,QACA,OACA,oCACA,0EACA,QACA,OACA,+BACA,4DACA,QACA,OACA,mCACA,+DACA,QACA,OACA,yCACA,8IACA,QAEA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SACA,SAEA,UACFuF,KAAK,MAIfvB,2BAA4B,WACxB,MAAOvO,GAAEuK,UAGD,wCACA,6BACA,2EACA,mJACA,qCACA,wBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,sDACA,oCACA,wBACA,yKACA,iBACA,+IACA,UACA,SACA,8BACA,uCACA,kDACA,mEACA,8KACA,QACA,uCACA,+LACA,4CACA,yHACA,iBACA,oGACA,UACA,6CACA,mEACA,iDACA,qFACA,mGACA,mGACA,SACA,4DACA,mEACA,iDACA,sLACA,SACA,iLACA,uCACA,aACA,YACA,SAEA,UACFuF,KAAK,MAIf5D,0BAA2B,WACvB,MAAOlM,GAAEuK,UAED,QACA,mCACA,mBACA,qHACA,8CACA,mGACA,YACA,YACA,SACA,mCACA,kBACA,4GACA,WACA,SACA,UACFuF,KAAK,OHzCnBjQ,GAAQW,SG+CJ4H,mBAAoBA,KH5CKjE,KAAKtE,EAASC,EAAoB,GAAIA,EAAoB,GAAIA,EAAoB,GAAIA,EAAoB,KAIjIkT,IACA,SAAUpT,EAAQC,EAASC,GAEjC,YIjiCO,SAASmT,GAAa9R,GACzB,GAAI+R,GAAA1S,QAAc2S,UAAUhS,GJmiChClB,OAAOC,eAAeL,EAAS,cAC3BM,OAAO,IAEXN,EIviCgBoT,cAFhB,IAAAG,GAAAtT,EAAA,KJ6iCIoT,EAEJ,SAAgC5S,GAAO,MAAOA,IAAOA,EA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A,QACA,8CACA,yDACA,0DACA,4DACA,OACA,oDACA,6CACA,UACA,QACA,OACA,mDACA,gIACA,UACA,8CACA,yHACA,UACA,6GACA,+HACA,UACA,8CACA,uGACA,uKACA,qCACA,YACA,OACA,UACA,QACA,SACFuF,KAAK,MAIf4O,uBAAwB,WACpB,MAAO1e,GAAEuK,UAED,mFACA,OACA,+CACA,QACA,YACA,2BACA,kCACA,QACA,OACA,qCACA,QACA,OACA,gDACA,QACA,OACA,iDACA,QACA,OACA,mDACA,QACA,OACA,oDACA,6CACA,UACA,QACA,OACA,wHACA,qMACA,wCACA,YACA,QACA,SACFuF,KAAK,MAIf0O,yBAA0B,WACtB,MAAOxe,GAAEuK,UAED,wFACA,OACA,gDACA,QACA,YACA,2BACA,kCACA,QACA,OACA,yCACA,QACA,OACA,SACA,QACA,YACA,OACA,mDACA,QACA,YACA,OACA,wHACA,oMACA,wCACA,YACA,QACA,SACFuF,KAAK,ORipDnBjQ,GAAQW,SQ3oDJmc,cAAeA,KR8oDUxY,KAAKtE,EAASC,EAAoB,GAAIA,EAAoB,GAAIA,EAAoB,KAIzG+f,IACA,SAAUjgB,EAAQC,EAASC,GAEjC,cAC4B,SAASC,EAAU4H,GAsB/C,QAASE,GAAuBvH,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GApBvFL,OAAOC,eAAeL,EAAS,cAC3BM,OAAO,GS1iEX,IAAA2H,GAAAhI,EAAA,IT+iEIiI,EAAWF,EAAuBC,GS9iEtCE,EAAAlI,EAAA,KTkjEImI,EAAiBJ,EAAuBG,GSjjE5C8X,EAAAhgB,EAAA,KTqjEIigB,EAA0BlY,EAAuBiY,GSpjErDE,EAAAlgB,EAAA,GTwjEImgB,EAAepY,EAAuBmY,GSvjEtClI,EAAkB/X,EAASU,KAAKC,QAChC2H,GAAI,qBAEJE,QACI2X,6BAA8B,gBAGlC1Z,UACI6T,WAAY,KACZtC,UAAW,KACXoI,aAAa,GAQjBjf,WAAY,SAASC,GACjBC,KAAKD,QAAU8e,EAAAzf,QAAEgG,SAASpF,KAAKD,YAAeA,EAASC,KAAKoF,SAC5D,IAAIwY,GAAO5d,IACXA,MAAK+K,MAAQ,KAEb/K,KAAK+Y,WAAa,GAAIlS,GAAAzH,QAAkBuE,UACxC3D,KAAK+Y,WAAW9S,IAASjG,KAAK+Y,WAAW1V,QAAzC,iBACArD,KAAK+Y,WAAW1Q,OACZC,QAAS,WACLsV,EAAKjV,UAET7C,MAAO,SAASjC,EAAO+E,OACkB,KAA1BA,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAM8C,EAASC,aAAaC,SAEvCnC,EAAAvH,QAAW0G,MAAM,0BAWjC6C,OAAQ,SAAS5I,GACbC,KAAKD,QAAU8e,EAAAzf,QAAEE,OAAOU,KAAKD,QAASA,GACtCC,KAAKE,WAAW,qBAChB,IAAIiJ,GAAWnJ,KAAKgf,sBAChBC,EAAsB,KACtB5T,EAAS,KACT6T,EAAY,SAAArb,GAAA,OAAiC,IAAxBA,EAAMH,IAAI,UAKnC,IAJA6C,EAAE,YAAYmF,WACS,KAAZ3L,IACPsL,MAAmC,KAAnBtL,EAAQsL,OAAyBtL,EAAQsL,OAAS,MAE9C,OAApBrL,KAAK+Y,YAAkC,OAAX1N,EAC5BrL,KAAKuE,gBAED0a,EADA3b,OAAO0F,UAAUuN,YAAY7S,IAAI,gBACX1D,KAAK+Y,WAAW1N,OAEhBrL,KAAK+Y,WAAWoG,OAClCC,SAAS,IAGb9b,OAAO0F,UAAUuN,YAAY7S,IAAI,wBACjCub,EAAsBJ,EAAAzf,QAAE8E,OAAO+a,EAAqBC,QAErD,IAAe,OAAX7T,EAAiB,CACxB,GAAI/H,OAAO0F,UAAUuN,YAAY7S,IAAI,gBACjCub,EAAsB5T,MACnB,CACH,GAAIgU,GAAa,SAAAxb,GAAA,OAAkC,IAAzBA,EAAMH,IAAI,WACpCub,GAAsBJ,EAAAzf,QAAE8E,OAAOmH,EAAQgU,GAEvC/b,OAAO0F,UAAUuN,YAAY7S,IAAI,wBACjCub,EAAsBJ,EAAAzf,QAAE8E,OAAO+a,EAAqBC,QAGxDD,OAI2B,OAA3Bjf,KAAKD,QAAQ4W,WAAsB3W,KAAKD,QAAQ4W,UAAY,KAC5D3W,KAAKD,QAAQ4W,UAAY,GAE7B3W,KAAKD,QAAQuf,sBAAwBL,EAAoBnc,MACzD,IAAI0X,GAAalX,OAAO0F,UAAUuN,YAAY7S,IAAI,sBAAwB1D,KAAKD,QAAQ4W,UAAY,EACnG3W,MAAKD,QAAQkZ,WAAaqB,KAAKC,KAC3Bva,KAAKD,QAAQuf,sBAAwBhc,OAAO0F,UAAUuN,YAAY7S,IAAI,sBAEtE1D,KAAKD,QAAQuf,sBAAwB,GAAK9E,EAAaxa,KAAKD,QAAQuf,uBACpEL,EAAsBA,EAAoBvE,MACtCF,EACAA,EAAalX,OAAO0F,UAAUuN,YAAY7S,IAAI,sBAElD1D,KAAKD,QAAQwf,gBAAkBN,EAAoBnc,OAG/CQ,OAAO0F,UAAUuN,YAAY7S,IAAI,qBAAuB1D,KAAKD,QAAQ4W,UACrE3W,KAAKD,QAAQuf,sBAAwBhc,OAAO0F,UAAUuN,YAAY7S,IAAI,uBAEtEub,MAEJjf,KAAKQ,IAAI6I,KACLF,GACIrG,OAAQ,EACRkX,MAAO1W,OAAO0F,UAAUuN,YAAY7S,IAAI,cACxCK,YAAaT,OAAO0F,UAAUiM,mBAAmBlV,QAAQgE,eAGjET,OAAO0F,UAAUiM,mBAAmB2F,gBAAgB5a,KAAKD,SACzDC,KAAKwf,WAAWP,KAEhBjf,KAAKQ,IAAI6I,KACLF,GACIrG,OAAQ,EACRkX,MAAO1W,OAAO0F,UAAUuN,YAAY7S,IAAI,cACxCK,YAAaT,OAAO0F,UAAUiM,mBAAmBlV,QAAQgE,eAGjET,OAAO0F,UAAUiM,mBAAmB2F,gBAAgB5a,KAAKD,UAE7DwG,EAAE,yBAAyB+C,UAC3B/C,EAAE,WAAW/G,IAAI,WAAY,SAGjCigB,aAAc,WACV,GAAIzf,KAAKD,QAAQgf,YACb/e,KAAK2I,aACF,CACH,GAAIiV,GAAO5d,IACXA,MAAK+Y,WAAW9S,IAASjG,KAAK+Y,WAAW1V,QAAzC,gBACArD,KAAK+Y,WAAW1Q,OACZrG,QAAQ,EACRsG,QAAS,WACLsV,EAAK7d,QAAQgf,aAAc,EAC3BnB,EAAKjV,UAET7C,MAAO,SAASjC,EAAO+E,OACkB,KAA1BA,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAM8C,EAASC,aAAaC,SAEvCnC,EAAAvH,QAAW0G,MAAM,2BAWrC0Z,WAAY,SAASP,GACjB,IAAK,GAAIzZ,GAAI,EAAGA,EAAIyZ,EAAoBnc,OAAQ0C,IAAK,CACjD,GAAIka,GAAUT,EAAoBzZ,EAClCxF,MAAKoZ,WAAYsG,QAASA,MAQlCtG,UAAW,SAASrZ,GAChB,GAAI2f,GAAU3f,EAAQ2f,QAClBpE,EAAU,GAAIqD,GAAAvf,QAA4BugB,eAAeD,EAC7D1f,MAAKQ,IAAIqM,KAAK,sBAAsBtM,OAAO+a,EAAQrU,KAOvD2Y,aAAc,WAC6C,QAAnDtc,OAAO0F,UAAUuN,YAAY7S,IAAI,cACjCJ,OAAO0F,UAAUuN,YAAYjJ,KAAM7I,WAAY,SAE/CnB,OAAO0F,UAAUuN,YAAYjJ,KAAM7I,WAAY,QAEnDzE,KAAK2I,UAOTpE,cAAe,WACyC,SAAhDjB,OAAO0F,UAAUuN,YAAY7S,IAAI,aACsB,QAAnDJ,OAAO0F,UAAUuN,YAAY7S,IAAI,cACjC1D,KAAK+Y,WAAWxU,cAAc,OAAQ,OACoB,SAAnDjB,OAAO0F,UAAUuN,YAAY7S,IAAI,eACxC1D,KAAK+Y,WAAWxU,cAAc,OAAQ,UAUlDsb,gBAAiB,SAAS9b,GAEtB,GAAqB,KADFwC,EAAEuZ,KAAK/b,GACD,CACrB,GAAIkL,GAAU,IACdA,GAAUjP,KAAK+Y,WAAWjV,OAAOC,GACjC/D,KAAKD,QAAQggB,WAAY,EACzB/f,KAAK2I,QAAS0C,OAAQ4D,EAAS0H,UAAW,QAE1C3W,MAAKD,QAAQggB,WAAY,EACzB/f,KAAK2I,UAQbqW,oBAAqB,WACjB,MAAOH,GAAAzf,QAAE+J,UAED,mDACA,2BACA,qCACA,QACA,sEACA,SACA,gBACA,QACA,iGACA,iHACA,kGACA,SACA,SACA,gBACA,6CACA,UACA,0BACA,0EACA,OACA,OACA,8EACA,QACA,0CACA,wCACA,+BACA,WACA,iCAEA,WACA,WACA,SACA,UACFuF,KAAK,OTuhEnBjQ,GAAQW,SSjhEJsX,gBAAiBA,KTohEQ3T,KAAKtE,EAASC,EAAoB,GAAIA,EAAoB,KAIjFshB,IACA,SAAUxhB,EAAQC,EAASC,GAEjC,cAC4B,SAASC,EAAU4H,EAAG3H,GAElDC,OAAOC,eAAeL,EAAS,cAC3BM,OAAO,GUtyEX,IAAA2H,GAAAhI,EAAA,IV2yEIiI,EAEJ,SAAgCzH,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,IAFjDwH,GUzyElCiZ,EAAiBhhB,EAASU,KAAKC,QAC/B6H,QACI8Y,0BAA2B,sBAC3BC,4BAA6B,8BAC7BC,0BAA2B,4BAC3BC,4BAA6B,iBAC7BC,8BAA+B,oBAGnCnZ,WAAW,EAEXoZ,2BACIC,oBAAoB,EACpBC,kBAAkB,EAClBC,wBAAwB,EACxBC,kBAAkB,EAClBC,oBAAoB,EACpBC,oBAAoB,EACpBC,sBAAsB,GAG1B/gB,WAAY,SAAS4f,GACjB1f,KAAK2I,OAAO+W,IAGhB/W,OAAQ,SAAS+W,OACU,KAAZA,IACPA,EAAUpc,OAAO0F,UAAUkM,gBAAgB6D,WAAWrV,IAAI1D,KAAKQ,IAAId,KAAK,QAE5EM,KAAKmd,eAAeuC,EACpB,IAAIoB,GAAO9gB,KAAK+gB,aAShB,OARA/gB,MAAKE,WACD4gB,GACIpB,QAASA,EACTjC,cAAezd,KAAKsgB,0BACpBpZ,UAAWlH,KAAKkH,aAGxBlH,KAAKQ,IAAIwK,OACFhL,MAGXme,QAAS,SAASuB,GAGdnZ,EAAE,YAAYmF,MAGd,IAAI6S,GAAcve,KAAKQ,GAGvBR,MAAK2I,SACL4V,EAAYC,YAAYxe,KAAKQ,KAE7BR,KAAKQ,IAAIqM,KAAK,iBAAiBvD,WAOnC6T,eAAgB,SAASuC,GACrB,GAAIhC,GAAa1d,KAAKsgB,2BAEC,IAAnBtgB,KAAKkH,WACLwW,EAAWgD,kBAAmB,EAC9BhD,EAAWiD,oBAAqB,EAChCjD,EAAWkD,oBAAqB,GACD,IAA3BlB,EAAQhc,IAAI,YACZga,EAAWmD,sBAAuB,EAClCnD,EAAW6C,oBAAqB,EAChC7C,EAAW8C,kBAAmB,EAC9B9C,EAAW+C,wBAAyB,IACF,IAA3Bf,EAAQhc,IAAI,aACnBga,EAAWgD,kBAAmB,EAC9BhD,EAAWiD,oBAAqB,EAChCjD,EAAWmD,sBAAuB,GACE,IAAhCnB,EAAQhc,IAAI,kBACZga,EAAW6C,oBAAqB,IAEG,IAAnCb,EAAQhc,IAAI,qBACZga,EAAW8C,kBAAmB,IAEK,IAAnCd,EAAQhc,IAAI,qBACZga,EAAW+C,wBAAyB,MAGlB,IAAnBzgB,KAAKkH,YACZwW,EAAW6C,oBAAqB,EAChC7C,EAAW8C,kBAAmB,EAC9B9C,EAAW+C,wBAAyB,EACpC/C,EAAWgD,kBAAmB,EAC9BhD,EAAWiD,oBAAqB,EAChCjD,EAAWkD,oBAAqB,EAChClD,EAAWmD,sBAAuB,GAGtC7gB,KAAKsgB,0BAA4B5C,GAKrCsD,oBAAqB,WACjBhhB,KAAKkH,WAAY,EACjBlH,KAAKme,WAIT8C,4BAA6B,WAEzBjhB,KAAKkH,WAAY,EACjBlH,KAAKme,WAGT+C,0BAA2B,WACvB,GAAIxB,GAAUpc,OAAO0F,UAAUkM,gBAAgB6D,WAAWrV,IAAI1D,KAAKQ,IAAId,KAAK,OACxE4P,GAAa,EAEbE,EAAWxP,KAAKQ,IAAIqM,KAAK,uBAAuBZ,KACpD,QAAwB,KAAbuD,GAA4BA,IAAakQ,EAAQhc,IAAI,QAAS,CACrE,KAAI8L,EAAS1M,OAAS,GAKlB,WADA6D,GAAAvH,QAAWwM,QAAQ,qDAHnB8T,GAAQpS,IAAI,OAAQkC,GACpBF,GAAa,EAOrB,GAAI+O,GAAkBre,KAAKQ,IAAIqM,KAAK,8BAA8BZ,UACnC,KAApBoS,GAAmCA,IAAoBqB,EAAQhc,IAAI,iBAC1Egc,EAAQpS,IAAI,cAAe+Q,GAC3B/O,GAAa,EAGjB,IAAI6R,GAAenhB,KAAKQ,IAAIqM,KAAK,2BAA2BZ,KAM5D,QAL4B,KAAjBkV,GAAgCA,IAAiBzB,EAAQhc,IAAI,cACpEgc,EAAQpS,IAAI,WAAY6T,GACxB7R,GAAa,GAGbA,EAAY,CACZ,GAAIgP,GAAWte,IACf0f,GAAQ1S,KAAK,MACT6C,OAAO,EACPvH,QAAS,SAASoX,GACdpB,EAASpX,WAAY,EACrBoX,EAASH,QAAQuB,GACjB/Y,EAAAvH,QAAWkJ,QAAQ,8BAEvBxC,MAAO,SAASjC,EAAO+E,OACkB,KAA1BA,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAM8C,EAASC,aAAaC,SAEvCnC,EAAAvH,QAAW0G,MAAM,mEAK7B9F,MAAKkH,WAAY,EACjBlH,KAAKme,QAAQuB,GACb/Y,EAAAvH,QAAWuL,KAAK,yBAIxByW,eAAgB,WACZ,GAAI1B,GAAUpc,OAAO0F,UAAUkM,gBAAgB6D,WAAWrV,IAAI1D,KAAKQ,IAAId,KAAK,OACxE4e,EAAWte,IAEf0f,GAAQ5B,SACJxV,QAAS,SAASoX,GACdA,EAAQpS,IAAI,WAAW,GAEvBhK,OAAO0F,UAAUkM,gBAAgB6D,WAAWtX,IAAIie,GAChDpB,EAASpX,WAAY,GACoC,IAArD5D,OAAO0F,UAAUuN,YAAY7S,IAAI,iBACjC6C,EAAE,YAAYmF,OACd4S,EAASH,QAAQuB,GACjBpB,EAAS9d,IAAIwB,WAC+C,IAArDsB,OAAO0F,UAAUuN,YAAY7S,IAAI,iBACxC4a,EAASH,QAAQuB,GAErB/Y,EAAAvH,QAAWkJ,QAAQ,qCAEvBxC,MAAO,SAASjC,EAAO+E,OACkB,KAA1BA,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAM8C,EAASC,aAAaC,SAEvCnC,EAAAvH,QAAW0G,MAAM,qDAMjCub,iBAAkB,WACd,GAAI3B,GAAUpc,OAAO0F,UAAUkM,gBAAgB6D,WAAWrV,IAAI1D,KAAKQ,IAAId,KAAK,OACxE4e,EAAWte,IAGf0f,GAAQzZ,IAASyZ,EAAQrc,QAAUqc,EAAQ/d,GAA3C,iBACA+d,EAAQ5B,SACJxV,QAAS,SAASoX,GAGdA,EAAQpS,IAAI,WAAW,GACvBhK,OAAO0F,UAAUkM,gBAAgB6D,WAAWtX,IAAIie,GAChDpB,EAASpX,WAAY,EACrBoX,EAASH,QAAQuB,GACjB/Y,EAAAvH,QAAWkJ,QAAQ,gCAEvBxC,MAAO,SAASjC,EAAO+E,OACkB,KAA1BA,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAM8C,EAASC,aAAaC,SAEvCnC,EAAAvH,QAAW0G,MAAM,sDAMjCib,YAAa,WACT,MAAOniB,GAAEuK,UAED,sIACA,yBACA,qCACA,0DACA,iBACA,kGACA,UACA,yCACA,wDACA,kLACA,iBACA,sDACA,UACA,iBACA,YACA,UACA,sCACA,sDACA,6KACA,iBACA,mDACA,UACA,iBACA,YACA,UACA,8BACA,gIACA,qJACA,4IACA,UACA,4BACA,8EACA,uIACA,SACA,uSACA,wXACA,gRACA,sRACA,8SAEA,gNACA,sTACA,QACA,SACFuF,KAAK,OVmwEnBjQ,GAAQW,SU7vEJugB,eAAgBA,KVgwES5c,KAAKtE,EAASC,EAAoB,GAAIA,EAAoB,GAAIA,EAAoB,KAIzG4iB,IACA,SAAU9iB,EAAQC,EAASC,GAEjC,cAC4B,SAASC,EAAUC,EAAG2H,GAclD,QAASE,GAAuBvH,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAZvFL,OAAOC,eAAeL,EAAS,cAC3BM,OAAO,GW/hFX,IAAA2H,GAAAhI,EAAA,IXoiFIiI,EAAWF,EAAuBC,GWniFtCE,EAAAlI,EAAA,KXuiFImI,EAAiBJ,EAAuBG,GWliFxC6P,EAAqB9X,EAASU,KAAKC,QACnC2H,GAAI,UAEJ7B,UACIrB,YAAa,IAGjBoD,QACIoa,gCAAiC,yBACjCC,6BAA8B,wBAC9BC,gCAAiC,2BACjCC,0BAA2B,qBAC3BC,8BAA+B,mBAGnC7hB,WAAY,SAASC,GACjBC,KAAKD,QAAUnB,EAAEwG,SAASpF,KAAKD,YAAeA,EAASC,KAAKoF,UAC5DpF,KAAK2I,UAGTA,OAAQ,WACJ,GAAIiZ,GAAmB5hB,KAAK6hB,kBACxBrU,GAAW,EACXsU,GAAY,CACZxe,QAAOye,OACPvU,EAAWlK,OAAOye,KAAKC,UACvBF,EAAYxe,OAAOye,KAAKE,eAE5BjiB,KAAKQ,IAAI6I,KAAKuY,GAAmBM,WAAY1U,EAAU2U,UAAWL,KAC9DtU,IACAxN,KAAKQ,IAAIqM,KAAK,wBAAwB,GAAGiP,QAAUxY,OAAO0F,UAAUuN,YAAY7S,IAAI,gBACpF1D,KAAKQ,IAAIqM,KAAK,2BAA2B,GAAGiP,QAAUxY,OAAO0F,UAAUuN,YAAY7S,IAC/E,wBAQZkX,gBAAiB,SAAS7a,GACtBC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,EACtC,IAAIqiB,GAAqBpiB,KAAKqiB,mBAC9BriB,MAAKQ,IAAIqM,KAAK,sBAAsBxD,KAChC+Y,GACIzL,UAAWG,SAAS9W,KAAKD,QAAQ4W,WACjCsC,WAAYnC,SAAS9W,KAAKD,QAAQkZ,YAClCqG,sBAAuBtf,KAAKD,QAAQuf,sBACpCC,gBAAiBvf,KAAKD,QAAQwf,gBAC9BzK,kBAAmBxR,OAAO0F,UAAUuN,YAAY7S,IAAI,yBAShE4e,uBAAwB,SAAS1R,GAC7BA,EAAMZ,iBACNY,EAAM2R,iBACN,IAAI3hB,GAAOZ,IACXA,MAAK+K,MAAQzH,OAAOyH,MACpB/K,KAAK+K,MAAMC,MACPC,gBAAgB,EAChBC,MAAO,qBACPC,KAAMnL,KAAKwiB,4BACXlX,SACImX,OAAQ,WACJ7hB,EAAK8hB,oBAETjX,MAAO,WACH7K,EAAKmK,MAAMW,YAS3BgX,iBAAkB,WACd,GAAIC,GAAiB3iB,KAAK4iB,qBAC1B,IAAI5iB,KAAK6iB,mBAAmBF,GAAiB,CACzC,GAAIjD,GAAU,GAAI7Y,GAAAzH,QAAkB+D,QAChCvC,EAAOZ,IACX0f,GAAQ1S,KAAK2V,GACTra,QAAS,SAASoX,GACdpc,OAAO0F,UAAUkM,gBAAgB6D,WAAWtX,IAAIie,GAChD9e,EAAKmK,MAAMW,OACX9K,EAAKkiB,oBACLxf,OAAO0F,UAAUkM,gBAAgBvM,SACjChC,EAAAvH,QAAWkJ,QAAQ,qBAEvBxC,MAAO,SAASjC,EAAO+E,OACkB,KAA1BA,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAM8C,EAASC,aAAaC,SAEvCnC,EAAAvH,QAAW0G,MAAM,4BAK7Ba,GAAAvH,QAAW0G,MAAM,6BAErB,QAAO,GAMXid,mBAAoB,SAAShT,GACzBA,EAAEC,gBACF,IAAI8E,GAAoBzE,OACpB,kDACA/M,OAAO0F,UAAUuN,YAAY7S,IAAI,qBAEZ,OAArBoR,GAA6BA,GAAqBgC,SAAShC,KAC3DxR,OAAO0F,UAAUuN,YAAYjJ,KACzBwH,kBAAmBgC,SAAShC,KAEhCxR,OAAO0F,UAAUkM,gBAAgBvM,QAASgO,UAAW,MAO7DmM,kBAAmB,WACfvc,EAAE,sBAAsB0F,IAAI,IAC5B1F,EAAE,6BAA6B0F,IAAI,IACnC1F,EAAE,0BAA0B0F,IAAI,KAMpC2W,oBAAqB,WACjB,OACIzW,KAAM5F,EAAE,sBAAsB0F,MAC9BhE,YAAa1B,EAAE,6BAA6B0F,MAC5C+W,SAAUzc,EAAE,0BAA0B0F,QAO9C4W,mBAAoB,SAASF,GACzB,MAA+B,KAAxBA,EAAexW,MAM1B8W,sBAAuB,SAASrS,GACxBA,EAAMiL,OAAOC,SACbxY,OAAO0F,UAAUuN,YAAYjJ,KAAMqH,cAAc,IACjDrR,OAAO0F,UAAUkM,gBAAgBuK,iBAEjCnc,OAAO0F,UAAUuN,YAAYjJ,KAAMqH,cAAc,IACjDrR,OAAO0F,UAAUkM,gBAAgBvM,WAOzCua,yBAA0B,SAAStS,GAC3BA,EAAMiL,OAAOC,QACbxY,OAAO0F,UAAUuN,YAAYjJ,KAAMsH,oBAAoB,IAEvDtR,OAAO0F,UAAUuN,YAAYjJ,KAAMsH,oBAAoB,IAE3DtR,OAAO0F,UAAUkM,gBAAgBvM,UAOrCkX,gBAAiB,SAASjP,GACtB,GAAI7M,GAAcwC,EAAE,yBAAyB0F,KAC7CjM,MAAKD,QAAQgE,YAAcA,EAC3BT,OAAO0F,UAAUkM,gBAAgB2K,gBAAgB9b,IAGrD8d,gBAAiB,WACb,MAAOjjB,GAAEuK,UAED,wCACA,0BACA,6BACA,yCACA,wFACA,0DAEA,UACA,wCACA,+FACA,SAEA,kCACA,4DACA,UACA,mDACA,mBACA,WACA,WACA,UACA,sDACA,qBACA,WACA,WACA,SACA,oGACA,wIACA,UACA,UACA,0GACA,gGACA,yGACA,OACA,UACA,UACA,SACA,SACA,+BAEA,SACA,UACFuF,KAAK,MAIf2T,kBAAmB,WACf,MAAOzjB,GAAEuK,UAED,wCACA,uCACA,gDACA,+EACA,sGACA,iBACA,+EACA,yFACA,UACA,iBACA,gGACA,sGACA,UACA,sBACA,wEACA,QACA,4CACA,yFACA,wGACA,iBACA,uGACA,yHACA,UACA,QACA,SACA,0LACA,UACA,SACA,sCACA,WACFuF,KAAK,MAIf8T,0BAA2B,WACvB,MAAO5jB,GAAEuK,UAED,+BACA,SACA,wEACA,4EACA,sEACA,UACA,UACFuF,KAAK,OXy9EnBjQ,GAAQW,SWn9EJqX,mBAAoBA,KXs9EK1T,KAAKtE,EAASC,EAAoB,GAAIA,EAAoB,GAAIA,EAAoB,KAIzGykB,IACA,SAAU3kB,EAAQC,EAASC,GAEjC,cAC4B,SAASC,EAAUC,EAAG2H,EAAGC,GAwBrD,QAASC,GAAuBvH,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAtBvFL,OAAOC,eAAeL,EAAS,cAC3BM,OAAO,GYvwFX,IAAAC,GAAAN,EAAA,GZ4wFIO,EAAUwH,EAAuBzH,GY3wFrC0H,EAAAhI,EAAA,IZ+wFIiI,EAAWF,EAAuBC,GY9wFtCE,EAAAlI,EAAA,KZkxFImI,EAAiBJ,EAAuBG,GYjxF5CE,EAAApI,EAAA,KZqxFIqI,EAAaN,EAAuBK,EYpxFxCpI,GAAA,IACA,IAAIkY,GAAoBjY,EAASU,KAAKC,QAClC2H,GAAI,UAEJE,QACIic,+BAAgC,wBAChCC,6BAA8B,kBAC9BC,sCAAuC,sBACvCC,6BAA8B,sBAC9BC,8BAA+B,cAC/B9B,0BAA2B,sBAG/Btc,UACIqe,sBAAsB,EACtBtI,yBAAyB,EACzBuI,oBACIC,aAAc,EACdC,cAAe,GAEnBC,wBAAyB,WAG7B9Y,MAAO,KAGP+Y,OAAQ,KAGR1Y,UAAW,KAGXvD,cAAe,KAGfC,iBAAkB,KAGlBC,mBAGAC,MACIrG,GAAI,OACJP,KAAM,cACN6G,YACI,sZASRC,gBAEApI,WAAY,SAASC,GACjBC,KAAKD,QAAUnB,EAAEwG,SAASrF,MAAeC,KAAKoF,UAC9CpF,KAAKmI,qBACLnI,KAAK2I,UAGTA,OAAQ,SAAS5I,GACbC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,EACtC,IAAI6hB,GAAmB5hB,KAAK6hB,kBACxBkC,GACApiB,GAAI3B,KAAKD,QAAQ4B,GACjB6L,UAAU,EACVsU,WAAW,EACXkC,6BAA6B,EAE7B1gB,QAAOye,OACPgC,EAAkBvW,SAAWlK,OAAOye,KAAKC,UACzC+B,EAAkBjC,UAAYxe,OAAOye,KAAKE,cAEI,OAA1C3e,OAAOmK,OAAOwW,0BAC6B,IAA3C3gB,OAAOmK,OAAOyW,0BACuB,OAArC5gB,OAAOmK,OAAO0W,qBAEdJ,EAAkBC,6BAA8B,IAGxDhkB,KAAKQ,IAAI6I,KAAKuY,EAAiBmC,KAOnCnJ,gBAAiB,SAAS7a,GACtBC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,EACtC,IAAIqiB,GAAqBpiB,KAAKqiB,mBAC9B9b,GAAE,QACGsG,KAAK,qBACLxD,KACG+Y,GACIzgB,GAAI3B,KAAKD,QAAQ4B,GACjBgV,UAAWG,SAAS9W,KAAKD,QAAQ4W,WACjCsC,WAAYnC,SAAS9W,KAAKD,QAAQkZ,YAClCoB,kBAAmBra,KAAKD,QAAQsa,kBAChCM,YAAa3a,KAAKD,QAAQ4a,YAC1B5F,iBAAkBzR,OAAO0F,UAAUuN,YAAY7S,IAAI,wBAKnE0X,kBAAmB,SAASrb,GACxBC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,IAEI,IAAtCC,KAAKD,QAAQ0jB,qBACbld,EAAE,sBAAsByE,OAExBzE,EAAE,sBAAsBmF,QAEiB,IAAzC1L,KAAKD,QAAQob,yBACT7X,OAAOye,KACFze,OAAOye,KAAKE,eAIb1b,EAAE,yBAAyByE,OAC3BzE,EAAE,gCAAgCmF,SAJlCnF,EAAE,gCAAgCyE,OAClCzE,EAAE,yBAAyByE,SAUnCzE,EAAE,gCAAgCmF,OAClCnF,EAAE,yBAAyBmF,QAE/B1L,KAAKQ,IAAIqM,KAAK,iBAAiBvD,WAInC8a,sBAAuB,SAASxT,GAC5BA,EAAMZ,iBACNY,EAAM2R,iBAGN,IAAI3hB,GAAOZ,KACPmJ,EAAWnJ,KAAKqkB,0BACpBrkB,MAAK+K,MAAQzH,OAAOyH,MACpB/K,KAAK+K,MAAMC,MACPC,gBAAgB,EAChBC,MAAO,oBACPC,KAAMhC,IACNmC,SACImX,OAAQ,WACJ7hB,EAAK0jB,2BAET7Y,MAAO,WACHnI,OAAOyH,MAAMW,YAO7B4Y,wBAAyB,WACrB,GAAIC,GAAgBvkB,KAAKwkB,sBACzB,IAAIxkB,KAAKykB,oBAAoBF,GAAgB,CACzC,GAEIG,GAFArf,EAAS,GAAIwB,GAAAzH,QAAkB2F,cAC/B4f,EAAYhmB,EAASuR,QAAQ0U,SAASra,MAAM,IAG5Cma,GADAC,EAAUxgB,QAAQ,SAAW,EACTwgB,EAAUA,EAAU7hB,OAAS,GAE7B6hB,EAAUA,EAAU7hB,OAAS,GAErDuC,EAAOY,IAAMZ,EAAOhC,QAAUqhB,EAE9Brf,EAAO2H,KAAKuX,GACRjc,QAAS,SAASjD,GACd/B,OAAOyH,MAAMW,OACb/E,EAAAvH,QAAWkJ,QAAQ,mBACnBjD,EAAOiI,KAAM5H,KAAM,WACnBpC,OAAO0F,UAAUqM,eAAe0D,WAAWtX,IAAI4D,IAEnDS,MAAO,SAASjC,EAAO+E,GACnBtF,OAAOyH,MAAMW,WACwB,KAA1B9C,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAM8C,EAASC,aAAaC,SAEvCnC,EAAAvH,QAAW0G,MAAM,6BAK7Ba,GAAAvH,QAAW0G,MAAM,4BAErB,QAAO,GAIX0e,qBAAsB,WAClB,OACIrY,KAAM5F,EAAE,sBAAsB0F,MAC9BhE,YAAa1B,EAAE,6BAA6B0F,QAKpDwY,oBAAqB,SAASF,GAC1B,MAA8B,KAAvBA,EAAcpY,MAIzB0Y,gBAAiB,WAEb,GAA8B,IADT7kB,KAAK8kB,kBACPhiB,OACf6D,EAAAvH,QAAWuL,KAAK,4CACb,CACH,GAAIiT,GAAO5d,IACXA,MAAKoL,UAAY,GAAIvE,GAAAzH,QAAkB+G,gBACvCnG,KAAKoL,UACA/C,QACA+D,KAAK,WACF,GAAIjD,GAAWyU,EAAK9S,2BACpB8S,GAAK7S,MAAQzH,OAAOyH,MACpB6S,EAAK7S,MAAMC,MACPC,gBAAgB,EAChBC,MAAO,sBACPC,KAAMhC,GACFiC,UAAWwS,EAAKxS,UAAUC,SAE9BC,SACIC,OAAQ,WACJqS,EAAKmH,wBAETtZ,MAAO,WACHnI,OAAOyH,MAAMW,aAK5Ba,KAAK,SAAC1I,EAAO+E,OAC2B,KAA1BA,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAM8C,EAASC,aAAaC,SAEvCnC,EAAAvH,QAAW0G,MAAM,0BASrCif,qBAAsB,WAClB/kB,KAAK+K,MAAMgB,cAAc,SACzB,IAAIC,GAAmBhM,KAAK+K,MAAMxE,EAAE,4BAA4B0F,MAC5D2R,EAAO5d,IACX,IAAyB,KAArBgM,EACAzF,EAAE2F,KAAQ5I,OAAOC,KAAjB,iBACI4I,KAAMH,IAELI,KAAK,SAAAC,GACFuR,EAAK7d,QAAQilB,qBAAuB3Y,EAAY1K,GAChDic,EAAKtR,uBAAuBD,EAAY1K,GAAI0K,EAAYF,QAE3DI,KAAK,SAACC,EAAKC,EAAQ3G,GAChBa,EAAAvH,QAAW0G,MAAM,wBAEpB4G,OAAO,WACJkR,EAAK7S,MAAM4B,aAAa,gBAE7B,CACH,GAAIC,GAAarG,EAAE,oDAAoD0F,KACvEjM,MAAKD,QAAQilB,qBAAuBpY,CACpC,IAAIqY,GAAe1e,EAAE,oDAAoDnF,MACzEpB,MAAKsM,uBAAuBM,EAAYqY,GACxCjlB,KAAK+K,MAAM4B,aAAa,YAIhCL,uBAAwB,SAASM,EAAYqY,GACzC,GAAIC,MACAC,IACJnlB,MAAK8kB,kBAAkBxa,KAAK,WACxB,GAAI8a,GAAS7e,EAAEvG,MACVgc,QAAQ,MACRtc,KAAK,KACoB,MAA1B0lB,EAAOC,UAAU,EAAG,GACpBF,EAAWzjB,KAAK0jB,GAEhBF,EAAYxjB,KAAK0jB,IAKzB,KAAK,GADDE,MACK9f,EAAI0f,EAAYpiB,OAAS,EAAG0C,GAAK,EAAGA,IAAK,CAC9C,GAAI+f,GAAqBL,EAAY1f,GACjCsH,EAAc,GAAIjG,GAAAzH,QAAkB2G,WACxC+G,GAAY7G,IAAS6G,EAAYzJ,QAAUuJ,EAA3C,YACAE,EAAYG,QAAUsY,EACtBzY,EAAYI,OAAS,UACrBoY,EAAmB5jB,KAAKoL,GAK5B,IAAK,GAAItH,GAAI2f,EAAWriB,OAAS,EAAG0C,GAAK,EAAGA,IAAK,CAC7C,GAAIggB,GAAoBL,EAAW3f,GAC/BsH,EAAc,GAAIjG,GAAAzH,QAAkB2G,WACxC+G,GAAY7G,IAAS6G,EAAYzJ,QAAUuJ,EAA3C,YACAE,EAAYG,QAAUuY,EACtB1Y,EAAYI,OAAS,iBACrBoY,EAAmB5jB,KAAKoL,GAG5B9M,KAAKylB,sBACD3iB,OAAQwiB,EAAmBxiB,OAC3B4iB,OAAQ,aACRT,aAAcA,IAIlBze,EAAOuG,QAAWzJ,OAAOC,KAAzB,6BAA0DqJ,GAC1D5M,KAAK2lB,8BAA8BL,EAAoBL,IAM3DW,eAAgB,WACZ5lB,KAAKmY,UAAYnY,KAAKoY,aACtB7R,EAAE,wBAAwBsf,MAASvL,KAAKwL,MAAM9lB,KAAKmY,UAAnD,IACA,IAAI4N,GAAwBzL,KAAKwL,MAAM9lB,KAAKmY,UAAxC,YACJ5R,GAAE,oBAAoBnF,KAAK2kB,IAQ/B9O,SAAU,SAASF,EAAWC,GAC1B,GAAIkO,MACAC,IACJnlB,MAAK8kB,kBAAkBxa,KAAK,WACxB,GAAI8a,GAAS7e,EAAEvG,MACVgc,QAAQ,MACRtc,KAAK,KACoB,MAA1B0lB,EAAOC,UAAU,EAAG,GACpBF,EAAWzjB,KAAK0jB,GAEhBF,EAAYxjB,KAAK0jB,IAGzB,IAAInf,GAAS3C,OAAOC,KAAhB,mCAAuDyT,EACvDtX,GAASuK,OAAQib,EAAaC,WAAYA,EAC9CnlB,MAAKkK,gBAAgBjE,EAAKvG,EAAM,QAUpCwK,gBAAiB,SAASjE,EAAKvG,EAAMyK,GACjC,GAAIlE,GAAOvG,EAAM,CAEbA,EAAuB,gBAATA,GAAoBA,EAAO6G,EAAE6D,MAAM1K,EAEjD,IAAI2K,GAAS,EACb9D,GAAE+D,KAAK5K,EAAK6K,MAAM,KAAM,WACpB,GAAIC,GAAOxK,KAAKuK,MAAM,IACtBF,kCAAwCG,EAAK,GAA7C,YAA2DA,EAAK,GAAhE,SAGJjE,mBAAmBN,EAAnB,cAAmCkE,GAAU,QAA7C,KAAwDE,EAAxD,WACKI,SAAS,QACTC,SACA1I,SACL2E,EAAAvH,QAAWuL,KAAK,sCAEhBhE,GAAAvH,QAAW0G,MAAM,uBAIzBkgB,yBAA0B,WACtBhmB,KAAKoL,UAAY,GAAIvE,GAAAzH,QAAkB+G,eACvC,IAAIvF,GAAOZ,IACXA,MAAKoL,UACA/C,QACA+D,KAAK,WACFxL,EAAKmK,MAAQzH,OAAOyH,KACpB,IAAIkb,GAAiBrlB,EAAKslB,6BAC1BtlB,GAAKmK,MAAMC,MACPC,gBAAgB,EAChBC,MAAO,oCACPC,KAAM8a,GACF7a,UAAWxK,EAAKwK,UAAUC,SAE9BC,SACI6a,IAAK,WACDvlB,EAAKwlB,6BAET3a,MAAO,WACHnI,OAAOyH,MAAMW,SAGrB2a,iBAAkB,WACd/iB,OAAO0F,UAAUC,eAAemL,SAAhC,WAAoDxT,EAAKe,IAAQ0S,SAAS,OAGlFzT,EAAK0lB,+BAA+B1lB,EAAKwK,UAAUC,OAAO,GAAG1J,IAC7D4E,EAAE,qBAAqBggB,OAAO,SAAA3V,GAC1BhQ,EAAK0lB,+BAA+B1V,EAAMiL,OAAO9c,WAGxDwN,KAAK,SAAC1I,EAAO+E,OAC2B,KAA1BA,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAM8C,EAASC,aAAaC,SAEvCnC,EAAAvH,QAAW0G,MAAM,yBASjC0gB,yBAA0B,WACtB,GAAI5I,GAAO5d,IACXA,MAAK+K,MAAQzH,OAAOyH,KACpB,IAAIkb,GAAiBjmB,KAAKymB,yBAC1BzmB,MAAK+K,MAAMC,MACPC,gBAAgB,EAChBC,MAAO,+BACPC,KAAM8a,MACN3a,SACIC,OAAQ,WACJqS,EAAK8I,uBAAuB9I,IAEhCnS,MAAO,WACHnI,OAAOyH,MAAMW,SAGrB2a,iBAAkB,WAEd/iB,OAAO0F,UAAUC,eAAemL,SAAhC,WAAoDwJ,EAAKjc,IACrD0S,SAAS,OAIrBrU,KAAK6J,qBAOT1B,mBAAoB,WAChB,GAAIyV,GAAO5d,IACXf,GAAAG,QAAUsE,KACNuC,IAAQ3C,OAAOC,KAAf,qCACA+E,QAAS,SAAS6I,GACdyM,EAAK7V,kBACL,KAAK,GAAI7F,KAAOiP,GACZyM,EAAK7V,gBAAgBrG,MACjBC,GAAIwP,EAAUjP,GAAKkP,UACnBhQ,KAAM+P,EAAUjP,GAAKkP,UACrBnJ,YAAakJ,EAAUjP,GAAK+F,YAC5BoJ,gBAAiBF,EAAUjP,GAAKmP,iBAGxCuM,GAAK7V,gBAAgBnD,KAAK,SAAC0M,EAAGC,GAAJ,MAAWD,GAAE3P,GAAK4P,EAAE5P,GAAK,EAAI2P,EAAE3P,GAAK4P,EAAE5P,IAAM,EAAI,IAC1Eic,EAAK7V,gBAAgByJ,QAAQoM,EAAK5V,OAEtC2e,OAAO,IAEX1nB,EAAAG,QAAUsE,KACNuC,IAAQ3C,OAAOC,KAAf,cACA+E,QAAS,SAASmJ,GACdmM,EAAK1V,eACL,KAAK,GAAIhG,KAAOuP,GACZmM,EAAK1V,aAAaxG,MACdC,GAAI8P,EAAQvP,GAAK,GACjBd,KAAMqQ,EAAQvP,GAAK,IAG3B0b,GAAK1V,aAAatD,KAAK,SAAC0M,EAAGC,GAAJ,MAAWD,GAAE3P,GAAK4P,EAAE5P,GAAK,EAAI2P,EAAE3P,GAAK4P,EAAE5P,IAAM,EAAI,KAE3EglB,OAAO,KAIf9c,kBAAmB,WAKf,GAAI+T,GAAO5d,IACXA,MAAK6H,cAAgB,GAAId,GAAA3H,QAAWC,MAChCG,IAAK,wBACLE,KAAMke,EAAK1V,aACX9H,UAAWkD,OAAOyH,MAAMvK,IAAIqM,KAAK,0BACjC9N,MAAO,MAEXiB,KAAK8H,iBAAmB,GAAIf,GAAA3H,QAAWC,MACnCG,IAAK,2BACLE,KAAMke,EAAK7V,gBACX3H,UAAWkD,OAAOyH,MAAMvK,IAAIqM,KAAK,6BACjC9N,MAAO,UAQf6nB,iCAAkC,SAAS7mB,GACvC,GAAI6d,GAAO5d,KACPimB,EAAiBjmB,KAAK6mB,sBAC1B7mB,MAAK+K,MAAQzH,OAAOyH,MACpB/K,KAAK+K,MAAMC,MACPC,gBAAgB,EAChBC,MAAO,iCACPC,KAAM8a,MACN3a,SACIC,OAAQ,WACJqS,EAAKkJ,qBAAqBlJ,EAAM7d,IAEpC0L,MAAO,WACHnI,OAAOyH,MAAMW,SAGrB2a,iBAAkB,WAEd/iB,OAAO0F,UAAUC,eAAemL,SAAhC,WAAoDwJ,EAAKjc,IACrD0S,SAAS,OAKrB9N,EAAE,yBAAyB+M,KAAK,QAAS,WACrC/M,EAAE,mBAAmBud,OAAO,eAEhCvd,EAAE,0BAA0B+M,KAAK,QAAS,WACtC/M,EAAE,mBAAmBud,OAAO,iBAGhC9jB,KAAK6J,oBACL9J,EAAQ8jB,wBAA0B,UAClC7jB,KAAK+mB,aAAahnB,GAElBwG,EAAE,qBAAqBggB,OAAO,SAAA3V,GACC,2BAAvBA,EAAMiL,OAAO9c,OACbgB,EAAQ8jB,wBAA0B,UAClCjG,EAAKmJ,aAAahnB,GAClBwG,EAAE,2BAA2BmF,OAC7BnF,EAAE,8BAA8BmF,OAChCnF,EAAE,yBAAyByE,QACG,yBAAvB4F,EAAMiL,OAAO9c,QACpBwH,EAAE,yBAAyBmF,OAC3BnF,EAAE,2BAA2ByE,OAC7BzE,EAAE,8BAA8ByE,OAChCjL,EAAQ8jB,wBAA0B,QAClCjG,EAAKmJ,aAAahnB,OAW9BgnB,aAAc,SAAShnB,GAEnBC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,EACtC,IAAI8b,GAAS9b,EAAQmN,QAAU,UAC3B2W,EAA0B7jB,KAAKD,QAAQ8jB,uBAC3C7jB,MAAK8jB,OAAS,GAAIjd,GAAAzH,QAAkBgH,OACpCpG,KAAK8jB,OAAO7d,IAASjG,KAAK8jB,OAAOzgB,QAAjC,WAAmDwY,EAAnD,0BAAmFgI,EACnF7jB,KAAK8jB,OAAOzb,OACRC,QAAS,SAASzE,EAAO+E,GACrBrC,EAAE,mBAAmBud,OAAO,WAC5Bvd,EAAE,mBAAmBud,QACjBkD,MACItnB,KAAMmE,GAEVojB,SAAU,QAAS,YACnBC,OACI7hB,QACI8hB,KAAM,iBAEVC,MACID,KAAM,gBAGd/K,UACIiL,aAAa,MAIzBvhB,MAAO,SAASjC,EAAO+E,OACkB,KAA1BA,EAASC,aACuB,SAAnCD,EAASC,aAAaye,SACtB3gB,EAAAvH,QAAWwM,QAAQhD,EAASC,aAAaC,SAEzCnC,EAAAvH,QAAW0G,MAAM8C,EAASC,aAAaC,SAG3CnC,EAAAvH,QAAW0G,MAAM,0BAWjC4gB,uBAAwB,WACpB,GAAIa,GAAgBvnB,KAAK+K,MAAMvK,IAAIqM,KAAK,sBAAsB2a,GAAG,YAC7DC,EAAYznB,KAAK+K,MAAMvK,IAAIqM,KAAK,kBAAkB2a,GAAG,YACrDE,EAAe1nB,KAAK+K,MAAMvK,IAAIqM,KAAK,sBAAsB2a,GAAG,YAC5DG,EAAiB3nB,KAAK+K,MAAMvK,IAAIqM,KAAK,mBAAmB2a,GAAG,YAC3DI,EAAsB5nB,KAAK+K,MAAMvK,IAAIqM,KAAK,cAAc2a,GAAG,YAC3DK,EAAY7nB,KAAK8H,iBAAiB/I,QAClC+oB,EAAQ9nB,KAAK6H,cAAc9I,QAC3BgpB,EAAQxhB,EAAE,yBAAyB0F,MACnC+b,IACJ,IAAKD,EAEE,CACH/nB,KAAK+K,MAAMgB,cAAc,UACzBgc,EAAQA,EAAMxd,MAAM,KACpB,KAAK,GAAI/E,GAAIuiB,EAAMjlB,OAAS,EAAG0C,GAAK,EAAGA,IAAK,CACxC,GAAIyiB,GAAUF,EAAMviB,GAAGsa,MACA,KAAnBmI,EAAQnlB,QACRklB,EAAYtmB,KAAKumB,GAGzBjoB,KAAKylB,sBACD3iB,OAAQklB,EAAYllB,OACpB4iB,OAAQ,oBAEZ1lB,KAAKkoB,2BACDH,MAAOC,EACPT,cAAeA,EACfE,UAAWA,EACXC,aAAcA,EACdC,eAAgBA,EAChBza,OAAQ,aACR2a,UAAWA,EACXD,oBAAqBA,EACrBE,MAAOA,QAvBXnhB,GAAAvH,QAAWuL,KAAK,iDAiCxB8a,qBAAsB,SAAS1lB,GAC3B,GAAIoJ,EACJ,QAAQpJ,EAAQ2lB,QACZ,IAAK,kBACDvc,EAAWnJ,KAAKmoB,oCAChBnoB,KAAK+K,MAAMvK,IAAIqM,KAAK,eAAexD,KAC/BF,GACIif,YAAapoB,KAAKD,QAAQqoB,cAGlC,MACJ,KAAK,oBACDjf,EAAWnJ,KAAKqoB,mCAChBroB,KAAK+K,MAAMvK,IAAIqM,KAAK,eAAexD,KAAKF,IACxC,MACJ,KAAK,aACDA,EAAWnJ,KAAKsoB,uCAChBtoB,KAAK+K,MAAMvK,IAAIqM,KAAK,eAAexD,KAAKF,GAAW8b,aAAcllB,EAAQklB,eACzE,MACJ,SACI3hB,OAAOuC,KAAKC,MAAM,0BAA2B,YAMrD9F,KAAKmY,SAAW,EAChBnY,KAAKoY,aAAe,IAAMrY,EAAQ+C,OAClC9C,KAAKD,QAAQ2jB,mBAAmBC,aAAe5jB,EAAQ+C,OACvD9C,KAAKD,QAAQ2jB,mBAAmBE,cAAgB,GAWpDkD,qBAAsB,SAASlJ,EAAM7d,GACjC,GAAIwoB,GAAYhiB,EAAE,mBACbud,SACA0E,cAAa,GAEdC,EAAiB7pB,EAAEsF,OAAOqkB,EAAW,SAAAG,GAAA,MAA+B,IAAvBA,EAAKC,MAAMrnB,WACxDimB,EAAgBvnB,KAAK+K,MAAMvK,IAAIqM,KAAK,sBAAsB2a,GAAG,YAC7DC,EAAYznB,KAAK+K,MAAMvK,IAAIqM,KAAK,kBAAkB2a,GAAG,YACrDE,EAAe1nB,KAAK+K,MAAMvK,IAAIqM,KAAK,sBAAsB2a,GAAG,YAC5DG,EAAiB3nB,KAAK+K,MAAMvK,IAAIqM,KAAK,mBAAmB2a,GAAG,YAC3DK,EAAY7nB,KAAK8H,iBAAiB/I,QAClC+oB,EAAQ9nB,KAAK6H,cAAc9I,QAC3B6oB,EAAsB5nB,KAAK+K,MAAMvK,IAAIqM,KAAK,cAAc2a,GAAG,YAC3DoB,EAAiBH,EAAe,GAAG/iB,KACnCqiB,IACJ,IAAIU,EAAe3lB,OAAS,EACxB6D,EAAAvH,QAAWuL,KAAK,uCACb,CACH3K,KAAK+K,MAAMgB,cAAc,SACzB,KAAK,GAAIvG,GAAIijB,EAAe3lB,OAAS,EAAG0C,GAAK,EAAGA,QACAtE,KAAxCunB,EAAejjB,GAAGqjB,QAAQ/O,WAC1BiO,EAAMrmB,KAAK+mB,EAAejjB,GAAGqjB,QAAQ/O,UAO7C,IAJA9Z,KAAKylB,sBACD3iB,OAAQilB,EAAMjlB,OACd4iB,OAAQ,oBAEW,WAAnBkD,EAA6B,CAC7B,GAAIE,GAAiB/oB,EAAQmN,OAAzB,SACJlN,MAAKkoB,2BACDH,MAAOA,EACPR,cAAeA,EACfE,UAAWA,EACXC,aAAcA,EACdC,eAAgBA,EAChBza,OAAQ4b,EACRjB,UAAWA,EACXC,MAAOA,EACPF,oBAAqBA,QAEtB,IAAuB,SAAnBgB,EAA2B,CAClC,GAAIE,GAAiB/oB,EAAQmN,OAAzB,OACJlN,MAAK+oB,gCACDhB,MAAOA,EACPF,UAAWA,EACXC,MAAOA,EACPL,UAAWA,EACXC,aAAcA,EACdC,eAAgBA,EAChBza,OAAQ4b,EACRlB,oBAAqBA,OAMrCtB,+BAAgC,SAAS1Z,GACrC,GAAIoc,GAAmB,GAAIniB,GAAAzH,QAAkB4G,iBACzCrE,GAAIiL,IAEJhM,EAAOZ,IACXgpB,GAAiB3gB,OACbC,QAAS,SAAS0gB,GACd,GAAIC,GAA4BroB,EAAKsoB,yBACrCtoB,GAAKwK,UAAU1H,IAAIkJ,GAAYU,KAAM6b,SAAUH,IAC/CpoB,EAAKmK,MAAMvK,IAAIqM,KAAK,6BAA6BxD,KAC7C4f,GACID,iBAAkBA,EAAiB3d,OAAOgQ,aAGlDza,EAAKmK,MAAMvK,IAAIqM,KAAK,8BAA8ByG,KAAK,QAAS,WAC5D/M,EAAE,6CAA6C6iB,KAAK,WAAW,KAEnExoB,EAAKmK,MAAMvK,IAAIqM,KAAK,gCAAgCyG,KAAK,QAAS,WAC9D/M,EAAE,6CAA6C6iB,KAAK,WAAW,MAGvEtjB,MAAO,SAASjC,EAAO+E,OACkB,KAA1BA,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAM8C,EAASC,aAAaC,SAEvCnC,EAAAvH,QAAW0G,MAAM,0BASjCsgB,0BAA2B,WACvB,GAAIiD,GAAerpB,KAAK+K,MAAMvK,IAAIqM,KAAK,6BAA6BA,KAAK,YACrEyc,KACAC,KACAC,IACJ,IAAIH,EAAavmB,OAAS,EACtB6D,EAAAvH,QAAWuL,KAAK,4CACb,CACH3K,KAAK+K,MAAMgB,cAAc,OACzBsd,EAAa/e,KAAK,WACd,GAAImf,GAAMljB,EAAEvG,MACPgc,QAAQ,MACRtc,KAAK,KACV,IAAI+pB,EAAK,CACL,GAAIC,GAAYnjB,EAAEvG,MACbgc,QAAQ,MACRtc,KAAK,OACV4pB,GAAiB5nB,KAAK+nB,GACtBF,EAAmB7nB,KAAKgoB,KAGhC,KAAK,GAAIlkB,GAAI8jB,EAAiBxmB,OAAS,EAAG0C,GAAK,EAAGA,IAAK,CACnD,GAAImkB,GAAkBL,EAAiB9jB,GACnCG,EAAc,GAAIkB,GAAAzH,QAAkBiH,IACxCV,GAAYM,IAAS3C,OAAOC,KAA5B,eAA+CvD,KAAKD,QAAQ4B,GAA5D,YAC8B,eAA1B4nB,EAAmB/jB,GACnBG,EAAY2H,KAAMsc,aAAcD,IAEhChkB,EAAY2H,KAAMuc,YAAaF,IAEnCH,EAAa9nB,KAAKiE,GAEtB3F,KAAKylB,sBACD3iB,OAAQ0mB,EAAa1mB,OACrB4iB,OAAQ,oBAEZ1lB,KAAK8pB,oBAAoBN,KAUjC7D,8BAA+B,SAASoE,EAAkB9E,GACtD,GAAIrkB,GAAOZ,KACPgqB,EAAcD,EAAiBE,KACnC,QAA0B,KAAfD,EAqBP,MApBsD,KAAlDhqB,KAAKD,QAAQ2jB,mBAAmBE,cAChCjd,EAAAvH,QAAWkJ,QAAQ,6EAA8E,IAC7FS,QAAS,WACL8C,OAAOC,SAAWxI,OAAOC,QAG1BvD,KAAKD,QAAQ2jB,mBAAmBE,gBAAkB5jB,KAAKD,QAAQ2jB,mBAAmBC,aACzFhd,EAAAvH,QAAW0G,MAAM,kEACV9F,KAAKD,QAAQ2jB,mBAAmBE,cAAgB5jB,KAAKD,QAAQ2jB,mBAAmBC,cACvFhd,EAAAvH,QAAWwM,QACP,gGACA,IAEI7C,QAAS,WACL8C,OAAOC,SAAWxI,OAAOC,QAKzCD,OAAOyH,MAAMW,QACN,CAEGnF,GAAE2jB,KACZF,EAAYhd,MACRC,QAAS+c,EAAY/c,QACrBC,OAAQ8c,EAAY9c,UAKvBd,KAAK,WACFxL,EAAKglB,iBACLhlB,EAAK+kB,8BAA8BoE,EAAkB9E,KAExD1Y,KAAK,WACF3L,EAAKb,QAAQ2jB,mBAAmBE,eAAiB,EACjDhjB,EAAKglB,iBACLhlB,EAAK+kB,8BAA8BoE,EAAkB9E,MAUjE8D,+BAAgC,SAAShpB,GACrC,GAAI6d,GAAO5d,KACPgqB,EAAcjqB,EAAQgoB,MAAMkC,KAChC,QAA2B,KAAhBD,EAOP,MANsD,KAAlDhqB,KAAKD,QAAQ2jB,mBAAmBE,eAChCjd,EAAAvH,QAAWkJ,QAAQ,mDACnBhF,OAAOyH,MAAMW,QAEb/E,EAAAvH,QAAW0G,MAAM,sBAEd,CAEGS,GAAE2jB,KACZ3jB,EAAE2F,KACK5I,OAAOC,KADd,4CAC8Dqa,EAAKjc,GADnE,WACgF5B,EAAQmN,OADxF,SAEQ8c,EAFR,cAGkBjqB,EAAQ8nB,UAH1B,cAGiD9nB,EAAQ0nB,UAHzD,iBAIQ1nB,EAAQ2nB,aAJhB,mBAKuB3nB,EAAQ4nB,eAL/B,UAKuD5nB,EAAQ+nB,MAL/D,wBAMQ/nB,EAAQ6nB,sBAKfxb,KAAK,SAAAxD,GACFgV,EAAKgI,iBACLhI,EAAKmL,+BAA+BhpB,KAEvCwM,KAAK,WACFqR,EAAK7d,QAAQ2jB,mBAAmBE,eAAiB,EACjDhG,EAAKgI,iBACLhI,EAAKmL,+BAA+BhpB,MAgBhDmoB,0BAA2B,SAASnoB,GAEhC,GAAI6d,GAAO5d,KACPgqB,EAAcjqB,EAAQgoB,MAAMkC,KAChC,QAA0B,KAAfD,EAQP,MAPsD,KAAlDhqB,KAAKD,QAAQ2jB,mBAAmBE,eAChCjd,EAAAvH,QAAWkJ,QAAQ,yEACnBhF,OAAOyH,MAAMW,QAGb/E,EAAAvH,QAAW0G,MAAM,sBAEd,CAEGS,GAAE2jB,KACZ3jB,EAAE2F,KACK5I,OAAOC,KADd,4CAC8Dqa,EAAKjc,GADnE,WACgF5B,EAAQmN,OADxF,SAEQ8c,EAFR,kBAGsBjqB,EAAQwnB,cAH9B,cAGyDxnB,EAAQ0nB,UAHjE,mBAIQ1nB,EAAQ4nB,eAJhB,iBAKqB5nB,EAAQ2nB,aAL7B,cAKuD3nB,EAAQ8nB,UAL/D,UAMQ9nB,EAAQ+nB,MANhB,wBAO4B/nB,EAAQ6nB,sBAInCxb,KAAK,SAAAxD,GACFgV,EAAKgI,iBACLhI,EAAKsK,0BAA0BnoB,KAElCwM,KAAK,WACFqR,EAAK7d,QAAQ2jB,mBAAmBE,eAAiB,EACjDhG,EAAKgI,iBACLhI,EAAKsK,0BAA0BnoB,MAS3C+pB,oBAAqB,SAASK,GAC1B,GAAIvpB,GAAOZ,IACXA,MAAKoqB,WAAa,GAAIvjB,GAAAzH,QAAkB4F,MACxC,IAAIglB,GAAcG,EAASF,KAC3B,QAA0B,KAAfD,EASP,MARsD,KAAlDhqB,KAAKD,QAAQ2jB,mBAAmBE,cAChCjd,EAAAvH,QAAWkJ,QAAQ,sDACZtI,KAAKD,QAAQ2jB,mBAAmBE,gBAAkB5jB,KAAKD,QAAQ2jB,mBAAmBC,aACzFhd,EAAAvH,QAAW0G,MAAM,gEACV9F,KAAKD,QAAQ2jB,mBAAmBE,cAAgB5jB,KAAKD,QAAQ2jB,mBAAmBC,cACvFhd,EAAAvH,QAAWwM,QAAQ,yDAEvBtI,OAAOyH,MAAMW,OACN1L,KAAKoqB,UAEF7jB,GAAE2jB,KACZF,EAAYhd,MACR6c,YAAaG,EAAYtmB,IAAI,kBAKhC0I,KAAK,SAAAvI,GACFP,OAAO0F,UAAUqM,eAAe0D,WAAWtX,IAAIoC,GAC/CjD,EAAKglB,iBACLhlB,EAAKkpB,oBAAoBK,KAE5B5d,KAAK,WACF3L,EAAKb,QAAQ2jB,mBAAmBE,eAAiB,EACjDhjB,EAAKglB,iBACLhlB,EAAKkpB,oBAAoBK,MASrCE,uBAAwB,SAASC,GAC7B,GAAI1pB,GAAOZ,IACXA,MAAKuqB,cAAgB,GAAI1jB,GAAAzH,QAAkB4F,MAC3C,IAAIwlB,GAAiBF,EAAgBL,KACrC,QAA8B,KAAnBO,EAaP,MAZsD,KAAlDxqB,KAAKD,QAAQ2jB,mBAAmBE,cAChCjd,EAAAvH,QAAWkJ,QAAQ,gCACZtI,KAAKD,QAAQ2jB,mBAAmBE,gBAAkB5jB,KAAKD,QAAQ2jB,mBAAmBC,aACzFhd,EAAAvH,QAAW0G,MACP,mGAEG9F,KAAKD,QAAQ2jB,mBAAmBE,cAAgB5jB,KAAKD,QAAQ2jB,mBAAmBC,cACvFhd,EAAAvH,QAAWwM,QACP,6FAGRtI,OAAOyH,MAAMW,OACN1L,KAAKuqB,aAEhBC,GACK1M,UACA1R,KAAK,SAAA9H,GAIF,GAHAhB,OAAO0F,UAAUqM,eAAe0D,WAAW/W,OAAOwoB,EAAe7oB,IACjEf,EAAKglB,iBAEDtiB,OAAO0F,UAAUqM,eAAetV,QAAQiZ,gBAAiB,CACzD,GAAIyR,GAAe,IACD,YAAdnmB,EAAKoB,MAA0C,kBAArBpB,EAAKomB,YAC/BD,EAAe,GAAI5jB,GAAAzH,QAAkB2F,cAAcT,GAC9B,SAAdA,EAAKoB,MAAwC,mBAArBpB,EAAKomB,YACpCD,EAAe,GAAI5jB,GAAAzH,QAAkBiH,KAAK/B,IAE1ChB,OAAOuC,KAAKC,MAAM,mCAAoC,YACtDxC,OAAOuC,KAAKC,MAAMxB,EAAKoB,MAAQpB,EAAKomB,YAAa,aAErDpnB,OAAO0F,UAAUqM,eAAe0D,WAAWtX,IAAIgpB,GAEnD7pB,EAAKypB,uBAAuBC,KAE/B/d,KAAK,WACF3L,EAAKb,QAAQ2jB,mBAAmBE,eAAiB,EACjDhjB,EAAKglB,iBACLhlB,EAAKypB,uBAAuBC,MAOxCK,oBAAqB,SAAS/Z,GACtBA,EAAMiL,OAAOC,QACbxY,OAAO0F,UAAUqM,eAAekE,aAC5BP,iBAAiB,IAGrB1V,OAAO0F,UAAUqM,eAAekE,aAC5BP,iBAAiB,KAQ7B4R,oBAAqB,WACjB,GAAI1F,MACAC,KACA0F,EAAiB7qB,KAAK8kB,iBAC1B,IAA8B,IAA1B+F,EAAe/nB,OACf6D,EAAAvH,QAAWuL,KAAK,uDACb,CACH,GAAIxB,GAAWnJ,KAAKqoB,kCACpBroB,MAAK+K,MAAQzH,OAAOyH,MACpB/K,KAAK+K,MAAMC,MACPC,gBAAgB,EAChBC,MAAO,0BACPC,KAAMhC,MACNmC,SACIG,MAAO,WACHnI,OAAOyH,MAAMW,WAKzB1L,KAAKD,QAAQ2jB,mBAAmBC,aAAe,EAC/C3jB,KAAKD,QAAQ2jB,mBAAmBE,cAAgB,EAChDiH,EAAevgB,KAAK,WAChB,GAAI8a,GAAS7e,EAAEvG,MACVgc,QAAQ,MACRtc,KAAK,UACKwB,KAAXkkB,IAC8B,KAA1BA,EAAOC,UAAU,EAAG,GACpBF,EAAWzjB,KAAK0jB,GAEhBF,EAAYxjB,KAAK0jB,KAK7B,IAAI0F,GAAc5F,EAAYpiB,OAASqiB,EAAWriB,MAClD9C,MAAKoY,aAAe,IAAM0S,EAC1B9qB,KAAKmY,SAAW,CAIhB,KAAK,GADDmS,MACK9kB,EAAI0f,EAAYpiB,OAAS,EAAG0C,GAAK,EAAGA,IAAK,CAC9C,GAAIqY,GAAU,GAAIhX,GAAAzH,QAAkBiH,MAChC1E,GAAIujB,EAAY1f,IAEpB8kB,GAAgB5oB,KAAKmc,GAEzB,IAAK,GAAIrY,GAAI2f,EAAWriB,OAAS,EAAG0C,GAAK,EAAGA,IAAK,CAC7C,GAAIH,GAAS,GAAIwB,GAAAzH,QAAkB2F,eAC/BpD,GAAIwjB,EAAW3f,IAEnB8kB,GAAgB5oB,KAAK2D,GAGzBrF,KAAKD,QAAQ2jB,mBAAmBC,aAAemH,EAE/C9qB,KAAKqqB,uBAAuBC,KAIpCS,YAAa,WACT,GAAIrL,GAAU,KACV9B,EAAO5d,IAC8B,QAArCsD,OAAO0F,UAAUkM,iBACjBwK,EAAUpc,OAAO0F,UAAUkM,gBAAgB6D,WAAWrV,IAAI1D,KAAKD,QAAQga,mBACvE/Z,KAAKgrB,iBAAiBtL,KAEtBA,EAAU,GAAI7Y,GAAAzH,QAAkB+D,SAC5BxB,GAAI3B,KAAKD,QAAQga,oBAErB2F,EAAQrX,OACJC,QAAS,WACLsV,EAAKoN,iBAAiBtL,IAE1B5Z,MAAO,SAASjC,EAAO+E,OACkB,KAA1BA,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAM8C,EAASC,aAAaC,SAEvCnC,EAAAvH,QAAW0G,MAAM,2BAOrCklB,iBAAkB,SAAStL,GACvB,GAAI9B,GAAO5d,KACPmJ,EAAWnJ,KAAKirB,wBACpBjrB,MAAK+K,MAAQzH,OAAOyH,MACpB/K,KAAK+K,MAAMC,MACPC,gBAAgB,EAChBC,MAAO,mBACPC,KAAMhC,GAAWuW,QAASA,EAAS3f,QAAS6d,EAAK7d,UACjDuL,SACIG,MAAO,WACHnI,OAAOyH,MAAMW,YAM7B6L,gBAAiB,SAASxX,GACtB,OAAQA,EAAQmN,QACZ,IAAK,UACDlN,KAAKgmB,0BACL,MACJ,KAAK,YACDhmB,KAAK4mB,kCACD1Z,OAAQ,aAEZ,MACJ,KAAK,OACDlN,KAAKwmB,0BACL,MACJ,KAAK,UACDxmB,KAAK4mB,kCACD1Z,OAAQ,WAEZ,MACJ,SACI5J,OAAO0F,UAAUC,eAAeC,OAChCvC,EAAAvH,QAAW0G,MAAM,4BAQ7Bid,mBAAoB,SAAShT,GACzBA,EAAEC,gBACF,IAAI+E,GAAmB1E,OACnB,8CACA/M,OAAO0F,UAAUuN,YAAY7S,IAAI,oBAEb,OAApBqR,GAA4BA,GAAoB+B,SAAS/B,KACzDzR,OAAO0F,UAAUuN,YAAYjJ,KACzByH,iBAAkB+B,SAAS/B,KAE/BzR,OAAO0F,UAAUqM,eAAe1M,QAC5BhH,GAAI3B,KAAKD,QAAQ4B,GACjBgV,UAAW,MAKvBmO,gBAAiB,WACb,MAAOve,GAAE,qBAAqBsG,KAAK,aAGvCgV,gBAAiB,WACb,MAAOjjB,GAAEuK,UAGD,wCAEA,6BACA,yCACA,+CAEA,2DACA,sGACA,UACA,mFACA,WACA,SACA,qNACA,qEACA,YACA,0CACA,kEACA,oIACA,8FACA,YACA,yCACA,yEACA,6DACA,gFACA,UACA,qDACA,4BACA,+CACA,wDACA,mFACA,UACA,qDACA,kEACA,UACA,UACA,QACA,SACA,iBACA,0LACA,mEACA,OACA,UACA,iOACA,mCACA,mBACA,YACA,0FACA,kIACA,4EACA,YACA,yCACA,kEACA,kEACA,+DACA,QACA,SACA,+NACA,oDACA,8LACA,0CACA,gBACA,YACA,0GACA,8FACA,gDACA,8CACA,aACA,YACA,OACA,UACA,SACA,UAEA,kCACA,SAEA,wDAEA,UACFuF,KAAK,MAIfuc,uBAAwB,WACpB,MAAOrsB,GAAEuK,UAED,QACA,6CACA,UACA,uCACA,YACA,WACA,UACA,OACA,gBACA,sCACA,QACA,gDACA,OACA,uBACA,6CACA,QACA,UACA,6CACA,OACA,oBACA,0CACA,QACA,UACA,uDACA,OACA,mBACA,2GACA,QACA,UACA,OACA,cACA,oCACA,QACA,WACA,WACA,6CACA,UACA,sCACA,YACA,WACA,UACA,OACA,gBACA,sCACA,QACA,gDACA,OACA,uBACA,6CACA,QACA,UACA,OACA,cACA,6BACA,QACA,WACA,WACA,UACFuF,KAAK,MAIf2V,yBAA0B,WACtB,MAAOzlB,GAAEuK,UAED,8BACA,SACA,wEACA,4EACA,UACA,UACFuF,KAAK,MAIf5D,0BAA2B,WACvB,MAAOlM,GAAEuK,UAED,QACA,mCACA,mBACA,iHACA,8CACA,mGACA,YACA,YACA,SACA,mCACA,kBACA,4GACA,WACA,SACA,UACFuF,KAAK,MAIf4Z,qCAAsC,WAClC,MAAO1pB,GAAEuK,UAED,4BACA,2EACA,SACA,yBACA,gJACA,mDACA,SACA,UACFuF,KAAK,MAIfyZ,kCAAmC,WAC/B,MAAOvpB,GAAEuK,UAED,4BACA,iFACA,SACA,yBACA,gJACA,mDACA,SACA,UACFuF,KAAK,MAIf2Z,iCAAkC,WAC9B,MAAOzpB,GAAEuK,UAED,4BACA,SACA,yBACA,gJACA,mDACA,SACA,UACFuF,KAAK,MAIfmY,qBAAsB,WAClB,MAAOjoB,GAAEuK,UAED,gCACA,0JACA,wLACA,mCACA,oFACA,yGACA,WACA,sFACA,uFACA,WACA,SACA,mCACA,kFACA,yFACA,+BACA,WACA,kCACA,mEACA,gCACA,WACA,kCACA,0FACA,gCACA,WACA,kCACA,yEACA,yBACA,WACA,SACA,qGACA,aACA,YACA,qGACA,eACA,YACA,SAEA,4BACA,SACA,SACA,kFACA,QACA,gFACA,4EACA,SACA,OACA,QACA,4CACA,oCACA,0FACA,WACA,SACA,UACFuF,KAAK,MAIf+X,wBAAyB,WACrB,MAAO7nB,GAAEuK,UAED,gCACA,+JACA,sCACA,kCACA,yFACA,+BACA,WACA,kCACA,mEACA,gCACA,WACA,OACA,kCACA,0FACA,gCACA,WACA,kCACA,yEACA,yBACA,WACA,SACA,uKACA,SACA,kFACA,QACA,gFACA,4EACA,SACA,QACA,4CACA,oCACA,0FACA,WACA,SACA,UACFuF,KAAK,MAIfwX,4BAA6B,WACzB,MAAOtnB,GAAEuK,UAED,6BACA,QACA,gCACA,8EACA,8CACA,mGACA,YACA,YACA,SACA,QACA,sCACA,SACA,UACFuF,KAAK,MAIfwa,wBAAyB,WACrB,MAAOtqB,GAAEuK,UAED,gDACA,QACA,6GACA,aACA,YACA,+GACA,eACA,YACA,SACA,OACA,OACA,0DACA,oDACA,iDACA,yDACA,kEACA,0CACA,+GACA,UACA,6CACA,wFACA,0HACA,WACA,QACA,iBACA,6FACA,2GACA,6CACA,kLACA,UACA,QACA,UACA,iGACA,+GACA,6CACA,wFACA,qGACA,WACA,QACA,UACA,UACA,YACA,SACFuF,KAAK,MAIf2T,kBAAmB,WACf,MAAOzjB,GAAEuK,UAED,wCACA,uCACA,gDACA,iGACA,wHACA,iBACA,iGACA,2GACA,UACA,iBACA,kHACA,wHACA,UACA,sBACA,0FACA,QACA,4CACA,2GACA,0HACA,iBACA,yHACA,2IACA,UACA,QACA,SACA,iLACA,UACA,SACA,kCACA,WACFuF,KAAK,OZq1EnBjQ,GAAQW,SY/0EJwX,kBAAmBA,KZk1EM7T,KAAKtE,EAASC,EAAoB,GAAIA,EAAoB,GAAIA,EAAoB,GAAIA,EAAoB,KAIjIwsB,IACA,SAAU1sB,EAAQC,EAASC,Gax+HjC,GAAAysB,GAAAC,EAAAC,GACA,SAAAC,GACA,YAEAF,IAAA1sB,EAAA,IAAAysB,EAAA,MAAAjqB,MAAAmqB,EAAA,kBAAAF,KAAAI,MAAA9sB,EAAA2sB,GAAAD,KAAA3sB,EAAAC,QAAA4sB,IAQC,SAAA9kB,EAAArF,GACD;;;;;;;;;;;;;AAgBA,IAAAqF,EAAAud,OAAA,CASA,GAMA0H,GAAAC,EANAC,EAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,KACA3V,EAAA5P,EAAA,eAAAwlB,KAAA,OACAC,EAAA1V,SAAA2V,EAAAD,EAAAhW,cAAA,KAEAiW,GAAAC,aAAA,mBACAV,EAAAQ,EAAAhW,cAAA,KACAwV,EAAA9P,UAAA,yBACAuQ,EAAAE,YAAAX,GACAA,EAAAQ,EAAAhW,cAAA,KACAwV,EAAA9P,UAAA,gBACA8P,EAAAU,aAAA,YACAT,EAAAO,EAAAhW,cAAA,KACAyV,EAAA/P,UAAA,+BACA8P,EAAAW,YAAAV,GACAQ,EAAAE,YAAAX,GACAA,EAAAC,EAAA,KAOAllB,EAAAud,QAKAsI,QAAA,QAKAhnB,UAKA6hB,YAMAA,WACArN,KAAAzD,IAAA,IAAAA,EAAAhS,QAAA,KAAAgS,EAAApI,QAAA,mBACAse,QAAA,0CASA9lB,EAAAud,OAAAwI,OAAA,SAAArlB,EAAAlH,GACA,GAAAwsB,GAAA,GAAAhmB,GAAAud,OAAAkD,OAAA0E,GACAc,EAAAzsB,CAWA,OAVAA,GAAAwG,EAAAjH,QAAA,KAA6BiH,EAAAud,OAAA1e,SAAArF,GAC7BysB,KAAAvF,UACAlnB,EAAAknB,QAAAuF,EAAAvF,SAEA1gB,EAAA+D,KAAAvK,EAAAknB,QAAA,SAAAzhB,EAAAinB,GACA,SAAAjnB,IACA+mB,IAAAG,OAAAD,EAAA1sB,EAAA0sB,OAGAF,EAAAI,KAAA1lB,EAAAlH,GACAwsB,GAQAhmB,EAAAud,OAAAkD,KAAA,SAAArlB,GACA3B,KAAA4sB,IAAAjrB,EACA3B,KAAA6sB,KAAA,EACA7sB,KAAA8sB,KAAA,KACA9sB,KAAA+sB,OACA/F,MACAgG,QACA7gB,MAAA,EACA8gB,MAAA,EACAC,OAAA,GAEAvqB,YACAwqB,cACAC,SAAA,EACAC,mBAwBA9mB,EAAAud,OAAAwJ,UAAA,SAAAC,GACA,GAAAhB,GAAA,KACArtB,EAAA,IAGA,IAFAquB,KAAA5rB,KAA2B4rB,IAAA5rB,KAE3BzC,MAAA4D,OACA,IAAQ5D,EAAAqH,EAAAgnB,GAAmB,MAAAC,IAE3B,IAAAtuB,MAAA4D,OACA,IAAQ5D,EAAAqH,EAAA,IAAAgnB,EAAAxf,QAAAxH,EAAAud,OAAAuI,QAAA,SAA0D,MAAAmB,IAclE,MAZAtuB,MAAA4D,SAAA5D,IAAA8c,QAAA,YAAAlZ,SAAA5D,IAAAQ,KAAA,WACA6sB,EAAArtB,EAGAqH,EAAA,WAAA+D,KAAA,WACA,GAAAmjB,GAAAlnB,EAAAvG,MAAAN,KAAA,SACA,IAAA+tB,KAAAC,OAAAhuB,KAAA6tB,GAEA,MADAhB,GAAAkB,GACA,IAIAlB,GA0BAhmB,EAAAonB,GAAA7J,OAAA,SAAA8J,GAEA,GAAAC,GAAA,gBAAAD,GACAE,EAAAC,MAAAC,UAAAtT,MAAA3X,KAAA8S,UAAA,GACAoY,EAAA,IAuBA,OAtBAjuB,MAAAsK,KAAA,WAEA,GAAA4jB,GAAA3nB,EAAAud,OAAAwJ,UAAAttB,MACAmK,EAAA0jB,GAAAK,IAAAN,GAAA,IAcA,IAZAK,EAAAJ,GAAA1jB,EACAA,EAAAohB,MAAA2C,EAAAJ,GACA,KAEAI,GAAAL,GAAAD,IAAA1sB,IAAAqF,EAAA4nB,cAAAP,IACArnB,EAAAvG,MAAAN,KAAA,YAAA6G,GAAAud,OAAAwI,OAAAtsB,KAAA4tB,KAGAM,IAAAL,IAAA,IAAAD,KACAK,EAAAC,IAAA,GAGA,OAAAD,OAAA/sB,EACA,WAIA,OAAA+sB,OAAA/sB,EACA+sB,EAAAjuB,MAcAuG,EAAA6nB,KAAA,KAAAtK,OAAAvd,EAAA6nB,KAAAC,aAAA,SAAAvqB,GACA,gBAAAwN,GACA,MAAA/K,GAAA+K,GAAAgd,SAAA,WACA/nB,EAAA+K,GAAA5R,KAAA,YAAAwB,KAQAqF,EAAAud,OAAA1e,SAAA4hB,MAkDAtnB,MAAA,EAoBA6uB,SAAA,EAoBAC,gBAAA,EAKA1oB,MAAAS,EAAAkoB,KAKAC,UAAA,IAKA/uB,UAAA,EAKAqtB,QAKA7gB,MAAA,EAKAlG,KAAA,EAKA0oB,KAAA,EAKA1B,MAAA,EAKAC,OAAA,EAKA0B,SAAA,EAKAC,SAAA,EAKAC,YAAA,GAMAC,wBAAA,EAKAC,QAAA,EAKAC,YAAA,GAEA1oB,EAAAud,OAAAkD,KAAAgH,WASAtB,OAAA,SAAAwC,EAAAC,GACA,GAAAC,GAAA7oB,EAAAud,OAAAmD,QAAAiI,EACA,OAAAE,IACApvB,KAAA+sB,MAAAmC,MACAE,EAAApB,UAAAhuB,KACA,GAAAovB,GAAAD,EAAAnvB,OAEAA,MAUA2sB,KAAA,SAAA1lB,EAAAlH,GACAC,KAAA0tB,QACAhuB,MACA2vB,KACA1tB,GAAA,IACA2tB,OAAA,KACAC,WACAC,YACAC,cACA9G,OAAe+G,QAAA,KAGfC,WACAC,mBAAA,EACAC,gBAAA,EACAC,eACAJ,QAAA,EACAK,QAAA,EACAptB,UAAA,EACArB,UAAA,IAIAtB,KAAAyO,QAAAlI,EAAAU,GAAAsV,SAAA,iBAAAvc,KAAA4sB,KACA5sB,KAAAgwB,SAAAjwB,EACAC,KAAAyO,QAAA6E,KAAA,YAAA/M,EAAA0pB,MAAAjwB,KAAAkwB,SAAAlwB,OAEAA,KAAA+sB,MAAA/F,KAAAmJ,OAAA,EACAnwB,KAAA+sB,MAAA/F,KAAA0I,QAAA,EACA1vB,KAAA+sB,MAAA/F,KAAAoJ,IAAA,QAAApwB,KAAAyO,QAAAjP,IAAA,aACAQ,KAAAyO,QAAAzO,KAAA+sB,MAAA/F,KAAAoJ,IAAA,wCACApwB,KAAAyO,QAAAsd,KAAA,eAEA/rB,KAAAsT,OAMAtT,KAAAqU,QAAA,QAEArU,KAAA+sB,MAAA/F,KAAAqJ,wBAAArwB,KAAAyO,QAAA5B,KAAA,cAAAyjB,OAAA,GACAtwB,KAAA+sB,MAAA/F,KAAAqJ,wBACAxjB,KAAA,MAAA0jB,UACApH,WAAAjlB,OAAA,WACA,WAAAlE,KAAAwwB,YAAAxwB,KAAAywB,WAAA,QAAAlc,KAAAvU,KAAAywB,cAEAzuB,SACAhC,KAAAyO,QAAApF,KAAA,qPAAArJ,KAAA0wB,WAAA,iCACA1wB,KAAA+sB,MAAA/F,KAAA2J,UAAA3wB,KAAA4wB,mBAAApB,SAAA,YAAAqB,UAAA,GAMA7wB,KAAAqU,QAAA,WACArU,KAAA8wB,UAAA,MAOAhT,QAAA,SAAAiT,GACAA,GAAmB/wB,KAAAyO,QAAAuiB,QACnBhxB,KAAAyO,QAAA+H,OAAA,YAAAxW,KAAAkwB,UACAlwB,KAAAkwB,YAOAA,SAAA,WACAlwB,KAAAwW,SACAxW,KAAAyO,QACA6N,YAAA,UACA2U,WAAA,UACApkB,KAAA,qBACA0jB,UACAxE,KAAA,mBAAiC,MAAA/rB,MAAA0b,UAAA3N,QAAA,wBACjC/N,KAAAyO,QAAA,MAOA6E,KAAA,WACAtT,KAAAyO,QACA3N,GAAA,6BACA,GAAAwV,SAAA4a,WAAA5a,SAAA4a,UAAAF,MACA1a,SAAA4a,UAAAF,YAGA,IAAAnlB,OAAAslB,aAAA,CACA,GAAAC,GAAAvlB,OAAAslB,cACA,KACAC,EAAAC,kBACAD,EAAAE,WACS,MAAA9D,QAIT1sB,GAAA,6BAAAyF,EAAA0pB,MAAA,SAAAlgB,GACA/P,KAAAuxB,YAAAxhB,EAAA8L,SACM7b,OACNc,GAAA,gCAAAyF,EAAA0pB,MAAA,SAAAlgB,GACAA,EAAAC,iBACAzJ,EAAAwJ,EAAA0L,eAAA+V,QACAxxB,KAAAyxB,cAAA1hB,EAAA0L,cAAA1L,IACM/P,OACNc,GAAA,kCAAAyF,EAAA0pB,MAAA,SAAAlgB,GACA,aAAAA,EAAA8L,OAAA6V,QAAwC,QACxC,IAAAjc,GAAA,IACA,QAAA1F,EAAA4hB,OACA,QACA,QACA5hB,EAAArK,KAAA,QACAa,EAAAwJ,EAAA0L,eAAApH,QAAAtE,EACA,MACA,SACAA,EAAAC,iBACAhQ,KAAA4xB,QAAA7hB,EAAA0L,eACAzb,KAAA6xB,WAAA9hB,EAAA0L,gBAGAhG,EAAAzV,KAAA8xB,aAAA/hB,EAAA0L,iBACAhG,EAAA3S,QAA4B2S,EAAA+Z,SAAA,kBAAAgC,OAE5B,MACA,SACAzhB,EAAAC,iBACAyF,EAAAzV,KAAA8xB,aAAA/hB,EAAA0L,eACAhG,KAAA3S,QAA2B2S,EAAA+Z,SAAA,kBAAAgC,OAC3B,MACA,SACAzhB,EAAAC,iBACAhQ,KAAA+xB,UAAAhiB,EAAA0L,eACAzb,KAAAgyB,UAAAjiB,EAAA0L,cAAA,SAAAhG,GAAuDzV,KAAAiyB,SAAAxc,GAAA,GAAA+Z,SAAA,kBAAAgC,WAGvD/b,EAAAzV,KAAAkyB,aAAAniB,EAAA0L,iBACAhG,EAAA3S,QAA4B2S,EAAA+Z,SAAA,kBAAAgC,OAE5B,MACA,SACAzhB,EAAAC,iBACAyF,EAAAzV,KAAAkyB,aAAAniB,EAAA0L,eACAhG,KAAA3S,QAA2B2S,EAAA+Z,SAAA,kBAAAgC,OAC3B,MAEA,SACAzhB,EAAAC,iBACAyF,EAAAzV,KAAAiyB,SAAAliB,EAAA0L,eACAhG,KAAA9T,IAAA,MAAA8T,EAAA9T,KACA8T,EAAAzV,KAAAmyB,YAAA1c,GAAAzV,KAAAwoB,eAAA/S,EAGA,MAEA,UACA1F,EAAAC,iBACAyF,EAAAzV,KAAAiyB,SAAAliB,EAAA0L,iBAWMzb,OACNc,GAAA,mBAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACA,GAAAA,EAAA+M,SACA,MAAA/M,EAAAgpB,KAAA/mB,IAAA3B,KAAA+sB,MAAA/F,KAAA0I,SACA1vB,KAAA+sB,MAAA/F,KAAA0I,QAAA,EAMA1vB,KAAAqU,QAAA,YAEArU,KAAA+sB,MAAA/F,KAAAmJ,QAAAnwB,KAAA4wB,mBAAA/jB,KAAA,yBAAA/J,QAAA,CAEA,GADA9C,KAAA+sB,MAAA/F,KAAAmJ,OAAA,EACAnwB,KAAA+sB,MAAA/F,KAAArkB,SAAAG,OAAA,CACA,GAAA9C,KAAAgwB,SAAAhJ,KAAA+H,uBAAA,CACA,GAAAvpB,GAAA4sB,EAAA7F,IACA,KAAA/mB,EAAA,EAAA4sB,EAAApyB,KAAA+sB,MAAA/F,KAAArkB,SAAAG,OAAyD0C,EAAA4sB,EAAO5sB,IAChE+mB,IAAA8F,OAAAryB,KAAA0tB,OAAAhuB,KAAAM,KAAA+sB,MAAA/F,KAAArkB,SAAA6C,IAAA+pB,QAGA,KADAhD,EAAAhmB,EAAA+rB,OAAAC,aAAAhG,GACA/mB,EAAA,EAAA4sB,EAAA7F,EAAAzpB,OAAoC0C,EAAA4sB,EAAO5sB,IAC3CxF,KAAAgyB,UAAAzF,EAAA/mB,IAAA,KAGAxF,KAAAqU,QAAA,WAAkCqR,OAAA,QAAA/iB,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,WAOlC6vB,WAAAjsB,EAAA0pB,MAAA,WAAwCjwB,KAAAqU,QAAA,UAAyBrU,MAAA,KAG3DA,OAENc,GAAA,cAAAyF,EAAA0pB,MAAA,WACA,GAAAza,GAAAxV,KAAAgwB,SAAAhJ,KAAAgG,MACAhtB,MAAA+sB,MAAA/F,KAAAgG,OAAAC,KAAAzX,EAAAyX,KACAjtB,KAAA+sB,MAAA/F,KAAAgG,OAAA4B,QAAApZ,EAAAoZ,QACA5uB,KAAA+sB,MAAA/F,KAAAgG,OAAAE,MAAA1X,EAAA0X,MACAltB,KAAAyyB,UAAAjd,EAAArJ,MAAA,UAAAqJ,EAAAvP,KACAjG,KAAA0yB,kBAAAld,EAAAqZ,UACM7uB,OACNc,GAAA,iBAAAyF,EAAA0pB,MAAA,WACAjwB,UAAA+sB,MAAA/F,KAAAgG,OAAAC,KAAA,2BACAjtB,UAAA+sB,MAAA/F,KAAAgG,OAAAE,MAAA,6BACAltB,UAAA+sB,MAAA/F,KAAAgG,OAAA4B,QAAA,kCACM5uB,OACNc,GAAA,+BAAAyF,EAAA0pB,MAAA,SAAAlgB,GACAxJ,EAAAwJ,EAAA0L,eAAAvX,OAAA,mBAAAyuB,cACM3yB,OACNc,GAAA,gCAAAyF,EAAA0pB,MAAA,SAAAlgB,GACA/P,KAAAyO,QAAA5B,KAAA,mBAAA+lB,IAAA7iB,EAAA0L,eAAAkX,aACApsB,EAAAwJ,EAAA0L,eAAAoX,cACM7yB,OACNc,GAAA,qCAAAyF,EAAA0pB,MAAA,SAAAlgB,GACA/P,KAAA8yB,WAAA/iB,EAAA0L,gBACMzb,OACNc,GAAA,qCAAAyF,EAAA0pB,MAAA,SAAAlgB,GACA/P,KAAA+yB,aAAAhjB,EAAA0L,gBACMzb,QAONwW,OAAA,WACAxW,KAAAyO,QAAAukB,IAAA,WACAzsB,EAAA+P,UAAA0c,IAAA,WAAAhzB,KAAA4sB,MASAvY,QAAA,SAAA4e,EAAAvzB,GACAA,IACAA,MAEAA,EAAAwuB,SAAAluB,KACAA,KAAAyO,QAAAykB,eAAAD,EAAAllB,QAAA,wBAAArO,IAOAyzB,cAAA,WACA,MAAAnzB,MAAAyO,SAQAmiB,iBAAA,WACA,MAAA5wB,MAAAyO,QAAA+gB,SAAA,2BASAkB,WAAA,SAAAxuB,GACA,GAAAoP,GAAAtR,KAAAgwB,SAAAhJ,KAAAuH,OACA,OAAAhoB,GAAA6sB,WAAA9hB,GAAwBA,EAAAvO,KAAA/C,KAAAkC,GACxBoP,KAAApP,GAAoBoP,EAAApP,GACpBA,GASAmxB,YAAA,SAAAC,GAEA,IADAA,MAAAC,WAAA,KACA,OAAAD,GAAA,IAAAA,EAAA9C,UACA8C,IAAAE,WAEA,OAAAF,IASAG,aAAA,SAAAH,GAEA,IADAA,MAAAE,YAAA,KACA,OAAAF,GAAA,IAAAA,EAAA9C,UACA8C,IAAAE,WAEA,OAAAF,IASAI,iBAAA,SAAAJ,GAEA,IADAA,MAAAK,gBAAA,KACA,OAAAL,GAAA,IAAAA,EAAA9C,UACA8C,IAAAK,eAEA,OAAAL,IASArB,SAAA,SAAA/yB,EAAA00B,GACA10B,KAAAyC,KACAzC,IAAAyC,GAEA,IAAA2xB,EACA,KACA,GAAAtzB,KAAA0tB,OAAAhuB,KAAAR,GACAA,EAAAc,KAAA0tB,OAAAhuB,KAAAR,OAEA,MAAAo0B,EAAA/sB,EAAArH,EAAAc,KAAAyO,UAAA3L,SAAAwwB,EAAA/sB,EAAA,IAAArH,EAAA6O,QAAAxH,EAAAud,OAAAuI,QAAA,QAAArsB,KAAAyO,UAAA3L,SAAA9C,KAAA0tB,OAAAhuB,KAAA4zB,EAAAtX,QAAA,gBAAA+P,KAAA,OACA7sB,EAAAc,KAAA0tB,OAAAhuB,KAAA4zB,EAAAtX,QAAA,gBAAA+P,KAAA,WAEA,MAAAuH,EAAA/sB,EAAArH,EAAAc,KAAAyO,UAAA3L,SAAAwwB,EAAAhF,SAAA,UAIA,QAHApvB,GAAAc,KAAA0tB,OAAAhuB,KAAA,KASA,MAHAk0B,KACA10B,EAAA,MAAAA,EAAAyC,GAAA3B,KAAAyO,QAAAlI,EAAA,IAAArH,EAAAyC,GAAAoM,QAAAxH,EAAAud,OAAAuI,QAAA,QAAArsB,KAAAyO,UAEAvP,EACI,MAAA20B,GAAa,WAUjBC,SAAA,SAAA50B,EAAA60B,EAAAC,GAEA,KADA90B,IAAAqwB,QAAArwB,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,KAAAzC,EAAAqwB,QACA,QAEA,IAAA/pB,GAAA4sB,EAAA6B,IAEA,KADAA,EAAAvyB,KAAAsyB,EAAA90B,EAAAyC,GAAAzC,EAAAkC,MACAoE,EAAA,EAAA4sB,EAAAlzB,EAAAqwB,QAAAzsB,OAAqC0C,EAAA4sB,EAAO5sB,IAC5CyuB,EAAAvyB,KAAAsyB,EAAA90B,EAAAqwB,QAAA/pB,GAAAxF,KAAAk0B,SAAAh1B,EAAAqwB,QAAA/pB,IAGA,OADAyuB,KAAA5Y,UAAAX,MAAA,GACAqZ,EAAAE,EAAAvlB,KAAAqlB,GAAAE,GASA/B,aAAA,SAAAhzB,EAAAi1B,GACA,GAAA5H,EAEA,OADArtB,GAAAc,KAAAiyB,SAAA/yB,GAAA,GACAA,EAAA,KAAAc,KAAAyO,QAAA,MACA8d,EAAAvsB,KAAAqzB,YAAArzB,KAAA4wB,mBAAA,MACArqB,EAAAgmB,MAEArtB,MAAA4D,UAGAqxB,KACA5H,EAAAvsB,KAAAyzB,aAAAv0B,EAAA,MACAqH,EAAAgmB,GAEArtB,EAAAovB,SAAA,kBACA/B,EAAAvsB,KAAAqzB,YAAAn0B,EAAAswB,SAAA,0BACAjpB,EAAAgmB,GAEA,QAAAA,EAAAvsB,KAAAyzB,aAAAv0B,EAAA,KACAqH,EAAAgmB,GAEArtB,EAAAk1B,aAAA,0BAAAC,KAAA,gBAAAC,GAAA,KASAxC,aAAA,SAAA5yB,EAAAi1B,GACA,GAAA5H,EAEA,IADArtB,EAAAc,KAAAiyB,SAAA/yB,GAAA,GACAA,EAAA,KAAAc,KAAAyO,QAAA,GAEA,SADA8d,EAAAvsB,KAAA4wB,mBAAA,GAAA2D,YACAhuB,EAAAgmB,EAEA,KAAArtB,MAAA4D,OACA,QAEA,IAAAqxB,EAEA,SADA5H,EAAAvsB,KAAA0zB,iBAAAx0B,EAAA,MACAqH,EAAAgmB,EAEA,YAAAA,EAAAvsB,KAAA0zB,iBAAAx0B,EAAA,MAEA,IADAA,EAAAqH,EAAAgmB,GACArtB,EAAAovB,SAAA,gBACApvB,IAAAswB,SAAA,0BAAAA,SAAA,oBAEA,OAAAtwB,GAGA,UADAqtB,EAAArtB,EAAA,GAAAkX,yBACAmW,EAAA7Q,YAAA,IAAA6Q,EAAA7Q,UAAAvX,QAAA,iBAAAoC,EAAAgmB,IAQAiI,WAAA,SAAAt1B,GAEA,UADAA,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,KAGAzC,EAAAowB,QAQAmF,iBAAA,SAAAv1B,GAEA,MADAA,GAAAc,KAAAiyB,SAAA/yB,GAAA,GACAA,EAAA,KAAAc,KAAAyO,QAAA,GACAzO,KAAA4wB,mBAAApB,SAAA,mBAEAtwB,MAAA4D,SAGA5D,EAAAswB,SAAA,oBAAAA,SAAA,iBAQAkF,UAAA,SAAAx1B,GAEA,OADAA,EAAAc,KAAAiyB,SAAA/yB,OACA,IAAAA,EAAAypB,MAAA+G,QAAAxwB,EAAAswB,SAAA1sB,OAAA,IAQA6xB,UAAA,SAAAz1B,GAEA,OADAA,EAAAc,KAAAiyB,SAAA/yB,KACAA,EAAAypB,MAAA+G,QAQAkF,WAAA,SAAA11B,GAEA,OADAA,EAAAc,KAAAiyB,SAAA/yB,KACAA,EAAAypB,OAAAzpB,EAAAypB,MAAAkM,SAQAjD,QAAA,SAAA1yB,GAEA,OADAA,EAAAc,KAAAiyB,SAAA/yB,KACAA,EAAAypB,MAAAoH,QAQAgC,UAAA,SAAA7yB,GAEA,OADAA,EAAAc,KAAAiyB,SAAA/yB,KACAc,KAAA00B,UAAAx1B,OAAAypB,MAAAoH,QAQA+E,QAAA,SAAA51B,GACA,OAAAc,KAAA00B,UAAAx1B,IAUA4xB,UAAA,SAAA5xB,EAAAyM,GACA,GAAA8gB,GAAA3W,EAAAtQ,EAAA4sB,EAAA2C,CACA,IAAAxuB,EAAAyuB,QAAA91B,GAEA,MADAc,MAAAi1B,YAAA/1B,EAAAwb,QAAA/O,IACA,CAGA,MADAzM,EAAAc,KAAAiyB,SAAA/yB,IAGA,MADAyM,IAAkBA,EAAA5I,KAAA/C,KAAAd,GAAA,IAClB,CAGA,IAAAA,EAAAypB,MAAA+G,OAAA,CAEA,IADAxwB,EAAAypB,MAAA+G,QAAA,EACAjD,EAAA,EAAA3W,EAAA5W,EAAAuwB,WAAA3sB,OAAyC2pB,EAAA3W,EAAO2W,IAAA,CAChD,IAAAjnB,EAAA,EAAA4sB,EAAAlzB,EAAAqwB,QAAAzsB,OAAuC0C,EAAA4sB,EAAO5sB,IAC9CxF,KAAA0tB,OAAAhuB,KAAAR,EAAAqwB,QAAA/pB,IAAAiqB,WAAAlpB,EAAA+rB,OAAA4C,kBAAAl1B,KAAA0tB,OAAAhuB,KAAAR,EAAAqwB,QAAA/pB,IAAAiqB,WAAAvwB,EAAAuwB,WAAAhD,GAEAzsB,MAAA0tB,OAAAhuB,KAAAR,EAAAuwB,WAAAhD,IAAA9D,MAAAhmB,WACAoyB,GAAA,EACA/0B,KAAA+sB,MAAA/F,KAAArkB,SAAA4D,EAAA+rB,OAAA4C,kBAAAl1B,KAAA+sB,MAAA/F,KAAArkB,SAAAzD,EAAAuwB,WAAAhD,WAEAzsB,MAAA0tB,OAAAhuB,KAAAR,EAAAuwB,WAAAhD,IAEAvtB,EAAAswB,YACAtwB,EAAAuwB,cACAsF,GACA/0B,KAAAqU,QAAA,WAA8BqR,OAAA,YAAAgD,KAAAxpB,EAAAyD,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,WA0B9B,MAvBAzD,GAAAypB,MAAAkM,SAAA,EACA70B,KAAAiyB,SAAA/yB,GAAA,GAAAqd,SAAA,kBACAvc,KAAAm1B,WAAAj2B,EAAAqH,EAAA0pB,MAAA,SAAAxjB,GACAvN,EAAAc,KAAA0tB,OAAAhuB,KAAAR,EAAAyC,IACAzC,EAAAypB,MAAAkM,SAAA,EACA31B,EAAAypB,MAAA+G,OAAAjjB,CACA,IAAA6mB,GAAAtzB,KAAAiyB,SAAA/yB,GAAA,EACAA,GAAAypB,MAAA+G,SAAAxwB,EAAAswB,SAAA1sB,QAAAwwB,KAAAxwB,SAAAwwB,EAAAhF,SAAA,gBACAgF,EAAAhX,YAAA,6BAAAC,SAAA,eAEA+W,EAAAhX,YAAA,kBAQAtc,KAAAqU,QAAA,aAA+BqU,KAAAxpB,EAAAuN,WAC/Bd,GACAA,EAAA5I,KAAA/C,KAAAd,EAAAuN,IAEIzM,QACJ,GASAi1B,YAAA,SAAAG,EAAAzpB,EAAA0pB,GACA,GAEA7vB,GAAA4sB,EAFAzc,GAAA,EACAof,EAAA,WAAqB/0B,KAAAi1B,YAAAG,EAAAzpB,GAAA,IACrBiK,EAAA5V,KAAA0tB,OAAAhuB,IACA,KAAA8F,EAAA,EAAA4sB,EAAAgD,EAAAtyB,OAA+B0C,EAAA4sB,EAAO5sB,KACtCoQ,EAAAwf,EAAA5vB,KAAAoQ,EAAAwf,EAAA5vB,IAAAmjB,MAAA+G,QAAA2F,IACAr1B,KAAA40B,WAAAQ,EAAA5vB,KACAxF,KAAA8wB,UAAAsE,EAAA5vB,GAAAuvB,GAEApf,GAAA,EAGAA,IACAhK,MAAAS,OACAT,EAAA5I,KAAA/C,KAAAo1B,GACAzpB,EAAAS,MAAA,IAYA+oB,WAAA,SAAAj2B,EAAAyM,GACA,GAAA2pB,GAAA9f,EAAAxV,KAAAgwB,SAAAhJ,KAAAtnB,IAEA,OAAA8V,GAWAjP,EAAA6sB,WAAA5d,GACAA,EAAAzS,KAAA/C,KAAAd,EAAAqH,EAAA0pB,MAAA,SAAAsF,IACA,IAAAA,GACA5pB,EAAA5I,KAAA/C,MAAA,GAEAA,KAAA,gBAAAu1B,GAAA,yCAAAr2B,EAAA,gBAAAq2B,GAAAhvB,EAAAgvB,KAAA,SAAA9oB,GACAd,EAAA5I,KAAA/C,KAAAyM,MAGKzM,OAEL,gBAAAwV,GACAA,EAAAvP,KACAuP,EAAAjP,EAAAjH,QAAA,KAA0BkW,GAC1BjP,EAAA6sB,WAAA5d,EAAAvP,OACAuP,EAAAvP,IAAAuP,EAAAvP,IAAAlD,KAAA/C,KAAAd,IAEAqH,EAAA6sB,WAAA5d,EAAA9V,QACA8V,EAAA9V,KAAA8V,EAAA9V,KAAAqD,KAAA/C,KAAAd,IAEAqH,EAAAlE,KAAAmT,GACApJ,KAAA7F,EAAA0pB,MAAA,SAAAsF,EAAAD,EAAAE,GACA,GAAA9vB,GAAA8vB,EAAAC,kBAAA,eACA,YAAA/vB,EAAAvB,QAAA,yBAAAoxB,GACAv1B,KAAA01B,kBAAAx2B,EAAAq2B,EAAA,SAAA9oB,GAAkEd,EAAA5I,KAAA/C,KAAAyM,MAGlE,IAAA/G,EAAAvB,QAAA,yBAAAoxB,GACAv1B,KAAA21B,kBAAAz2B,EAAAqH,EAAAgvB,GAAA,SAAA9oB,GAAqEd,EAAA5I,KAAA/C,KAAAyM,MAGrEzM,KAAA+sB,MAAA/F,KAAAmG,YAAsCrnB,MAAA,OAAA4mB,OAAA,OAAA/qB,GAAA,UAAAi0B,OAAA,sBAAAl2B,KAAAm2B,KAAAC,WAAmHn0B,GAAAzC,EAAAyC,GAAA6K,IAAAgpB,KACzJx1B,KAAAgwB,SAAAhJ,KAAAlhB,MAAA/C,KAAA/C,UAAA+sB,MAAA/F,KAAAmG,YACAxhB,EAAA5I,KAAA/C,MAAA,KACQA,OACRuM,KAAAhG,EAAA0pB,MAAA,SAAA8F,GACApqB,EAAA5I,KAAA/C,MAAA,GACAA,KAAA+sB,MAAA/F,KAAAmG,YAAsCrnB,MAAA,OAAA4mB,OAAA,OAAA/qB,GAAA,UAAAi0B,OAAA,sBAAAl2B,KAAAm2B,KAAAC,WAAmHn0B,GAAAzC,EAAAyC,GAAA6K,IAAAupB,KACzJ/1B,KAAAgwB,SAAAhJ,KAAAlhB,MAAA/C,KAAA/C,UAAA+sB,MAAA/F,KAAAmG,aACQntB,SAERs1B,EAAA/uB,EAAAyuB,QAAAxf,IAAAjP,EAAA4nB,cAAA3Y,GAAAqgB,KAAAvwB,MAAAuwB,KAAAC,UAAAtgB,MACA,MAAAtW,EAAAyC,GACA3B,KAAA01B,kBAAAx2B,EAAAo2B,EAAA,SAAA7oB,GACAd,EAAA5I,KAAA/C,KAAAyM,MAIAzM,KAAA+sB,MAAA/F,KAAAmG,YAAmCrnB,MAAA,SAAA4mB,OAAA,OAAA/qB,GAAA,UAAAi0B,OAAA,sBAAAl2B,KAAAm2B,KAAAC,WAAqHn0B,GAAAzC,EAAAyC,MACxJ3B,KAAAgwB,SAAAhJ,KAAAlhB,MAAA/C,KAAA/C,UAAA+sB,MAAA/F,KAAAmG,YACAxhB,EAAA5I,KAAA/C,MAAA,KAIA,gBAAAwV,GACA,MAAAtW,EAAAyC,GACA3B,KAAA21B,kBAAAz2B,EAAAqH,EAAAiP,GAAA,SAAA/I,GACAd,EAAA5I,KAAA/C,KAAAyM,MAIAzM,KAAA+sB,MAAA/F,KAAAmG,YAAmCrnB,MAAA,SAAA4mB,OAAA,OAAA/qB,GAAA,UAAAi0B,OAAA,sBAAAl2B,KAAAm2B,KAAAC,WAAqHn0B,GAAAzC,EAAAyC,MACxJ3B,KAAAgwB,SAAAhJ,KAAAlhB,MAAA/C,KAAA/C,UAAA+sB,MAAA/F,KAAAmG,YACAxhB,EAAA5I,KAAA/C,MAAA,IAIA2L,EAAA5I,KAAA/C,MAAA,GA7EA,MAAAd,EAAAyC,GACA3B,KAAA21B,kBAAAz2B,EAAAc,KAAA+sB,MAAA/F,KAAAqJ,wBAAAC,OAAA,YAAA7jB,GACAd,EAAA5I,KAAA/C,KAAAyM,KAIAd,EAAA5I,KAAA/C,MAAA,IA+EAg2B,cAAA,SAAA92B,IACAA,EAAAc,KAAAiyB,SAAA/yB,KAEAc,KAAA0tB,OAAAiC,QAAAjuB,KAAAxC,EAAAyC,KAWAg0B,kBAAA,SAAArC,EAAA5zB,EAAAu2B,GACA3C,EAAAtzB,KAAAiyB,SAAAqB,GACAA,EAAA9D,YACA8D,EAAA7D,aACA,IAOAlD,GAAA/mB,EAAA4sB,EAPA8D,EAAAx2B,EAAA8nB,GAAA,MAAA9nB,EAAA8vB,WAAA9vB,EACAy2B,EAAA7C,EAAA3xB,GACAy0B,KACAC,KACAzgB,EAAA5V,KAAA0tB,OAAAhuB,KACAu0B,EAAAre,EAAAugB,GACA3gB,EAAAxV,KAAA+sB,MAAA/F,KAAArkB,SAAAG,MAcA,KAZAozB,EAAA5rB,KAAA/D,EAAA0pB,MAAA,SAAAzqB,EAAA8wB,IACA/J,EAAAvsB,KAAAu2B,uBAAAhwB,EAAA+vB,GAAAH,EAAAlC,EAAA1E,QAAA8C,aAEA+D,EAAA10B,KAAA6qB,GACA8J,EAAA30B,KAAA6qB,GACA3W,EAAA2W,GAAAkD,WAAA3sB,SACAuzB,IAAAhE,OAAAzc,EAAA2W,GAAAkD,eAGIzvB,OACJi0B,EAAAzE,SAAA4G,EACAnC,EAAAxE,WAAA4G,EACA7wB,EAAA,EAAA4sB,EAAA6B,EAAA1E,QAAAzsB,OAAmC0C,EAAA4sB,EAAO5sB,IAC1CoQ,EAAAqe,EAAA1E,QAAA/pB,IAAAiqB,WAAA7Z,EAAAqe,EAAA1E,QAAA/pB,IAAAiqB,WAAA4C,OAAAgE,EASAr2B,MAAAqU,QAAA,SAA0B+gB,MAAAiB,EAAA/G,OAAA6G,IAC1B,MAAAA,GACAn2B,KAAAg2B,cAAAG,GACAn2B,KAAAw2B,WAGAx2B,KAAA4wB,mBAAApB,SAAA,wBAAAxtB,SACAhC,KAAAw2B,QAAA,IAEAx2B,KAAA+sB,MAAA/F,KAAArkB,SAAAG,SAAA0S,GACAxV,KAAAqU,QAAA,WAA6BqR,OAAA,QAAA/iB,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,WAE7BszB,EAAAlzB,KAAA/C,MAAA,IAUA01B,kBAAA,SAAApC,EAAA5zB,EAAAu2B,GACA3C,EAAAtzB,KAAAiyB,SAAAqB,GACAA,EAAA9D,YACA8D,EAAA7D,cAEA/vB,EAAA61B,GAEA,iBADA71B,IAAA61B,KAEA71B,EAAAm2B,KAAAvwB,MAAA5F,IAGA6G,EAAAyuB,QAAAt1B,KAAyBA,MACzB,IAAA+2B,GAAA,KACA3I,GACA4I,GAAA12B,KAAA0tB,OAAAoC,cACAoG,IAAAx2B,EACAy2B,IAAA7C,EAAA3xB,GACAiU,EAAA5V,KAAA0tB,OAAAhuB,KACAi3B,KAAA32B,KAAA4sB,IACAgK,MAAA52B,KAAA6sB,KACAuE,IAAApxB,KAAA+sB,MAAA/F,KAAArkB,UAEAk0B,EAAA,SAAAn3B,EAAAwB,GACAxB,SAAoBA,SACpB,IAWA6sB,GAAA/mB,EAAA4sB,EAAA0E,EAXAZ,EAAAx2B,EAAAw2B,IACAC,EAAAz2B,EAAAy2B,IACAC,KACAC,KACA50B,KACAi1B,EAAAh3B,EAAAg3B,GACAC,EAAAj3B,EAAAi3B,KACAC,EAAAl3B,EAAAk3B,MACAhhB,EAAAlW,EAAAkW,EACAqe,EAAAre,EAAAugB,GACA/E,EAAA1xB,EAAA0xB,IAEA2F,EAAA,SAAAxB,EAAAtB,EAAA+C,GAEaA,EADbA,EACaA,EAAA3E,YACb4B,GAAc+C,EAAAxlB,QAAAyiB,EACd,IACAzuB,GAAA4sB,EAAA2C,EAAAhlB,EADAknB,EAAA1B,EAAA5zB,GAAAu1B,WAEA3K,GACA5qB,GAAAs1B,EACA71B,KAAAm0B,EAAAn0B,MAAA,GACA+lB,KAAAoO,EAAApO,OAAAjmB,GAAAq0B,EAAApO,KACAmI,OAAA2E,EACA1E,QAAAyH,EACAxH,SAAA+F,EAAA/F,aACAC,WAAA8F,EAAA9F,eACA/vB,KAAA61B,EAAA71B,KACAipB,SACAE,SAAqBlnB,IAAA,GACrBw1B,QAAoBlnB,KAAA,KACpBmnB,UAAA,EAEA,KAAA5xB,IAAAkxB,GACAA,EAAAW,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAAkxB,EAAAlxB,GAMA,IAHA+vB,KAAA71B,MAAA61B,EAAA71B,KAAAokB,QAAAyR,EAAA71B,KAAAokB,OAAAqD,OACAoF,EAAApF,KAAAoO,EAAA71B,KAAAokB,OAAAqD,MAEAoO,KAAA71B,OACA6sB,EAAA7sB,KAAA61B,EAAA71B,KACA61B,EAAA71B,KAAAokB,QACA,IAAAte,IAAA+vB,GAAA71B,KAAAokB,OACAyR,EAAA71B,KAAAokB,OAAAuT,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAA+vB,EAAA71B,KAAAokB,OAAAte,GAKA,IAAA+vB,GAAA,gBAAAA,GAAA5M,MACA,IAAAnjB,IAAA+vB,GAAA5M,MACA4M,EAAA5M,MAAA0O,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAA+vB,EAAA5M,MAAAnjB,GAIA,IAAA+vB,GAAA,gBAAAA,GAAA1M,QACA,IAAArjB,IAAA+vB,GAAA1M,QACA0M,EAAA1M,QAAAwO,eAAA7xB,KACA+mB,EAAA1D,QAAArjB,GAAA+vB,EAAA1M,QAAArjB,GAOA,IAHA+mB,EAAA1D,QAAAlnB,KACA4qB,EAAA1D,QAAAlnB,GAAAs1B,GAEA1B,GAAA,gBAAAA,GAAA4B,OACA,IAAA3xB,IAAA+vB,GAAA4B,OACA5B,EAAA4B,OAAAE,eAAA7xB,KACA+mB,EAAA4K,OAAA3xB,GAAA+vB,EAAA4B,OAAA3xB,GAUA,KANA+vB,KAAA/F,WAAA,IAAA+F,EAAA/F,WACAjD,EAAA5D,MAAA+G,QAAA,EACAnD,EAAAiD,YACAjD,EAAAkD,eAEA7Z,EAAA2W,EAAA5qB,IAAA4qB,EACA/mB,EAAA,EAAA4sB,EAAA7F,EAAAiD,SAAA1sB,OAA0C0C,EAAA4sB,EAAO5sB,IACjDuvB,EAAAgC,EAAAnhB,EAAA2W,EAAAiD,SAAAhqB,IAAA+mB,EAAA5qB,GAAAq1B,GACAjnB,EAAA6F,EAAAmf,GACAxI,EAAAkD,WAAA/tB,KAAAqzB,GACAhlB,EAAA0f,WAAA3sB,SACAypB,EAAAkD,WAAAlD,EAAAkD,WAAA4C,OAAAtiB,EAAA0f,YASA,cANA8F,GAAA71B,WACA61B,GAAA/F,SACA5Z,EAAA2W,EAAA5qB,IAAAy1B,SAAA7B,EACAhJ,EAAA5D,MAAAhmB,UACAlB,EAAAC,KAAA6qB,EAAA5qB,IAEA4qB,EAAA5qB,IAEA21B,EAAA,SAAA/B,EAAAtB,EAAA+C,GAEaA,EADbA,EACaA,EAAA3E,YACb4B,GAAc+C,EAAAxlB,QAAAyiB,EACd,IAAAzuB,GAAA4sB,EAAA2C,EAAAhlB,EAAAwc,EAAA0K,GAAA,CACA,IACAA,EAAA,IAAAN,EAAA,OAAAC,QACQhhB,EAAAqhB,GAER1K,IACA5qB,IAAA,EACAP,KAAA,gBAAAm0B,KAAA,GACApO,KAAA,gBAAAoO,MAAApO,OAAAjmB,GAAAq0B,EAAApO,KACAmI,OAAA2E,EACA1E,QAAAyH,EACAxH,YACAC,cACA/vB,KAAA,KACAipB,SACAE,SAAoBlnB,IAAA,GACpBw1B,QAAmBlnB,KAAA,KACnBmnB,UAAA,EAEA,KAAA5xB,IAAAkxB,GACAA,EAAAW,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAAkxB,EAAAlxB,GAQA,IALA+vB,KAAA5zB,KAAsB4qB,EAAA5qB,GAAA4zB,EAAA5zB,GAAAu1B,YACtB3B,KAAAn0B,OAAwBmrB,EAAAnrB,KAAAm0B,EAAAn0B,MACxBm0B,KAAA71B,MAAA61B,EAAA71B,KAAAokB,QAAAyR,EAAA71B,KAAAokB,OAAAqD,OACAoF,EAAApF,KAAAoO,EAAA71B,KAAAokB,OAAAqD,MAEAoO,KAAA71B,OACA6sB,EAAA7sB,KAAA61B,EAAA71B,KACA61B,EAAA71B,KAAAokB,QACA,IAAAte,IAAA+vB,GAAA71B,KAAAokB,OACAyR,EAAA71B,KAAAokB,OAAAuT,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAA+vB,EAAA71B,KAAAokB,OAAAte,GAKA,IAAA+vB,GAAA,gBAAAA,GAAA5M,MACA,IAAAnjB,IAAA+vB,GAAA5M,MACA4M,EAAA5M,MAAA0O,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAA+vB,EAAA5M,MAAAnjB,GAIA,IAAA+vB,GAAA,gBAAAA,GAAA1M,QACA,IAAArjB,IAAA+vB,GAAA1M,QACA0M,EAAA1M,QAAAwO,eAAA7xB,KACA+mB,EAAA1D,QAAArjB,GAAA+vB,EAAA1M,QAAArjB,GAaA,IATA+mB,EAAA1D,QAAAlnB,KAAA4qB,EAAA5qB,KACA4qB,EAAA5qB,GAAA4qB,EAAA1D,QAAAlnB,GAAAu1B,YAEA3K,EAAA5qB,KACA4qB,EAAA5qB,GAAAs1B,GAEA1K,EAAA1D,QAAAlnB,KACA4qB,EAAA1D,QAAAlnB,GAAA4qB,EAAA5qB,IAEA4zB,GAAA,gBAAAA,GAAA4B,OACA,IAAA3xB,IAAA+vB,GAAA4B,OACA5B,EAAA4B,OAAAE,eAAA7xB,KACA+mB,EAAA4K,OAAA3xB,GAAA+vB,EAAA4B,OAAA3xB,GAIA,IAAA+vB,KAAA/F,UAAA+F,EAAA/F,SAAA1sB,OAAA,CACA,IAAA0C,EAAA,EAAA4sB,EAAAmD,EAAA/F,SAAA1sB,OAAyC0C,EAAA4sB,EAAO5sB,IAChDuvB,EAAAuC,EAAA/B,EAAA/F,SAAAhqB,GAAA+mB,EAAA5qB,GAAAq1B,GACAjnB,EAAA6F,EAAAmf,GACAxI,EAAAiD,SAAA9tB,KAAAqzB,GACAhlB,EAAA0f,WAAA3sB,SACAypB,EAAAkD,WAAAlD,EAAAkD,WAAA4C,OAAAtiB,EAAA0f,YAGAlD,GAAAkD,WAAAlD,EAAAkD,WAAA4C,OAAA9F,EAAAiD,UAcA,MAZA+F,MAAA/F,WAAA,IAAA+F,EAAA/F,WACAjD,EAAA5D,MAAA+G,QAAA,EACAnD,EAAAiD,YACAjD,EAAAkD,qBAEA8F,GAAA71B,WACA61B,GAAA/F,SACAjD,EAAA6K,SAAA7B,EACA3f,EAAA2W,EAAA5qB,IAAA4qB,EACAA,EAAA5D,MAAAhmB,UACAlB,EAAAC,KAAA6qB,EAAA5qB,IAEA4qB,EAAA5qB,GAGA,IAAAu0B,EAAApzB,QAAAozB,EAAA,GAAAv0B,KAAAT,GAAAg1B,EAAA,GAAA5G,SAAApuB,EAAA,CAGA,IAAAsE,EAAA,EAAA4sB,EAAA8D,EAAApzB,OAAgC0C,EAAA4sB,EAAO5sB,IACvC0wB,EAAA1wB,GAAAgqB,WACA0G,EAAA1wB,GAAAgqB,aAEA5Z,EAAAsgB,EAAA1wB,GAAA7D,GAAAu1B,YAAAhB,EAAA1wB,EAGA,KAAAA,EAAA,EAAA4sB,EAAA8D,EAAApzB,OAAgC0C,EAAA4sB,EAAO5sB,IACvCoQ,EAAAsgB,EAAA1wB,GAAA8pB,OAAA4H,YAAA1H,SAAA9tB,KAAAw0B,EAAA1wB,GAAA7D,GAAAu1B,YAEAjD,EAAAxE,WAAA/tB,KAAAw0B,EAAA1wB,GAAA7D,GAAAu1B,WAGA,KAAA1xB,EAAA,EAAA4sB,EAAA6B,EAAAzE,SAAA1sB,OAAuC0C,EAAA4sB,EAAO5sB,IAC9C+mB,EAAAwK,EAAAnhB,EAAAqe,EAAAzE,SAAAhqB,IAAA2wB,EAAAlC,EAAA1E,QAAA8C,UACAgE,EAAA30B,KAAA6qB,GACA3W,EAAA2W,GAAAkD,WAAA3sB,SACAuzB,IAAAhE,OAAAzc,EAAA2W,GAAAkD,YAGA,KAAAjqB,EAAA,EAAA4sB,EAAA6B,EAAA1E,QAAAzsB,OAAsC0C,EAAA4sB,EAAO5sB,IAC7CoQ,EAAAqe,EAAA1E,QAAA/pB,IAAAiqB,WAAA7Z,EAAAqe,EAAA1E,QAAA/pB,IAAAiqB,WAAA4C,OAAAgE,EAGAS,IACAS,IAAAX,EACAY,IAAA5hB,EACAwb,MACA+E,MACAE,MACA50B,WAGA,CACA,IAAA+D,EAAA,EAAA4sB,EAAA8D,EAAApzB,OAAgC0C,EAAA4sB,EAAO5sB,KACvC+mB,EAAA+K,EAAApB,EAAA1wB,GAAA2wB,EAAAlC,EAAA1E,QAAA8C,aAEA+D,EAAA10B,KAAA6qB,GACA8J,EAAA30B,KAAA6qB,GACA3W,EAAA2W,GAAAkD,WAAA3sB,SACAuzB,IAAAhE,OAAAzc,EAAA2W,GAAAkD,aAMA,KAFAwE,EAAAzE,SAAA4G,EACAnC,EAAAxE,WAAA4G,EACA7wB,EAAA,EAAA4sB,EAAA6B,EAAA1E,QAAAzsB,OAAsC0C,EAAA4sB,EAAO5sB,IAC7CoQ,EAAAqe,EAAA1E,QAAA/pB,IAAAiqB,WAAA7Z,EAAAqe,EAAA1E,QAAA/pB,IAAAiqB,WAAA4C,OAAAgE,EAEAS,IACAS,IAAAX,EACAY,IAAA5hB,EACAwb,MACA+E,MACAE,MACA50B,OAGA,MAAAq1B,IAEAA,EAAA,SAAAA,EAAA9H,GAIA,GAHAhvB,KAAA6sB,KAAAiK,EAAAS,IACAv3B,KAAA0tB,OAAAhuB,KAAAo3B,EAAAU,IAEAxI,EAAA,CACA,GAAAxpB,GAAA4sB,EAAA9gB,EAAAwlB,EAAAr1B,IAAAkU,EAAAmhB,EAAA1F,IAAA5b,EAAAxV,KAAA+sB,MAAA/F,KAAArkB,SAAA+X,QAAA9E,EAAA5V,KAAA0tB,OAAAhuB,IAEA,IAAAiW,EAAA7S,SAAA0S,EAAA1S,QAAAyD,EAAA+rB,OAAAC,aAAA5c,EAAA0c,OAAA7c,IAAA1S,SAAA6S,EAAA7S,OAAA,CAEA,IAAA0C,EAAA,EAAA4sB,EAAAzc,EAAA7S,OAA+B0C,EAAA4sB,EAAO5sB,KACtC,IAAAe,EAAAkxB,QAAA9hB,EAAAnQ,GAAA8L,KAAA,IAAA/K,EAAAkxB,QAAA9hB,EAAAnQ,GAAAgQ,KACAI,EAAAD,EAAAnQ,IAAAmjB,MAAAhmB,UAAA,EAIA,KAAA6C,EAAA,EAAA4sB,EAAA5c,EAAA1S,OAA+B0C,EAAA4sB,EAAO5sB,KACtC,IAAAe,EAAAkxB,QAAAjiB,EAAAhQ,GAAAmQ,KACAC,EAAAJ,EAAAhQ,IAAAmjB,MAAAhmB,UAAA,IAKAm0B,EAAAr1B,IAAAqB,SACA9C,KAAA+sB,MAAA/F,KAAArkB,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,SAAA0vB,OAAAyE,EAAAr1B,MAGAzB,KAAAqU,QAAA,SAA4B+gB,MAAA0B,EAAAT,IAAA/G,OAAAwH,EAAAX,MAE5B,MAAAW,EAAAX,KACAn2B,KAAAg2B,cAAAc,EAAAX,KACAn2B,KAAAw2B,UAIAx2B,KAAAw2B,QAAA,GAEAM,EAAAr1B,IAAAqB,QACA9C,KAAAqU,QAAA,WAA+BqR,OAAA,QAAA/iB,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,WAE/BszB,EAAAlzB,KAAA/C,MAAA,GAEA,IAAAA,KAAAgwB,SAAAhJ,KAAAgI,QAAAnjB,OAAA6rB,MAAA7rB,OAAA8rB,KAAA9rB,OAAA+rB,OACA,IACA,OAAA53B,KAAA8sB,OACA9sB,KAAA8sB,KAAAjhB,OAAA8rB,IAAAE,gBACA,GAAAhsB,QAAA6rB,MACA,oBAAAb,EAAAK,WAAAnpB,QAAA,0BAA4E,uBACnErI,KAAA,sBAIT+wB,EAAA,GAAA5qB,QAAA+rB,OAAA53B,KAAA8sB,MACA2J,EAAAqB,UAAAvxB,EAAA0pB,MAAA,SAAAlgB,GACA+mB,EAAA/zB,KAAA/C,KAAA+P,EAAArQ,MAAA,GACAM,KAAA+sB,MAAA/F,KAAAoG,SAAA,EACAptB,KAAA+sB,MAAA/F,KAAAqG,aAAAvqB,QACA9C,KAAA01B,kBAAAnK,MAAAvrB,UAAA+sB,MAAA/F,KAAAqG,aAAA0K,UAEM/3B,MACNA,KAAA+sB,MAAA/F,KAAAoG,QAKAptB,KAAA+sB,MAAA/F,KAAAqG,aAAA3rB,MAAA4xB,EAAA5zB,EAAAu2B,KAJAj2B,KAAA+sB,MAAA/F,KAAAoG,SAAA,EACAqJ,EAAAuB,YAAAlK,IAMA,MAAA/d,GACA+mB,EAAA/zB,KAAA/C,KAAA62B,EAAA/I,IAAA,OAIAgJ,GAAA/zB,KAAA/C,KAAA62B,EAAA/I,IAAA,IAYAyI,uBAAA,SAAAhB,EAAAtB,EAAA+C,GAESA,EADTA,KACS3E,OAAA2E,MACT/C,GAAU+C,EAAAxlB,QAAAyiB,EACV,IAAAc,GAAAhlB,EAcKvK,EAAA+mB,EAAA0K,EAdLrhB,EAAA5V,KAAA0tB,OAAAhuB,KACAA,GACAiC,IAAA,EACAP,MAAA,EACA+lB,MAAA,EACAmI,OAAA2E,EACA1E,QAAAyH,EACAxH,YACAC,cACA/vB,KAAA,KACAipB,SACAE,SAAiBlnB,IAAA,GACjBw1B,QAAgBlnB,KAAA,KAChBmnB,UAAA,EAEA,KAAA5xB,IAAAxF,MAAA0tB,OAAAoC,cACA9vB,KAAA0tB,OAAAoC,cAAAuH,eAAA7xB,KACA9F,EAAAipB,MAAAnjB,GAAAxF,KAAA0tB,OAAAoC,cAAAtqB,GAgCA,IA7BA+mB,EAAAhmB,EAAA+rB,OAAA9Y,WAAA+b,GAAA,GACAhvB,EAAA+D,KAAAiiB,EAAA,SAAA/mB,EAAA8wB,GAEA,GADAA,EAAA/vB,EAAAuZ,KAAAwW,IACAA,EAAAxzB,OAAmB,QACnBpD,GAAAmpB,QAAArjB,GAAA8wB,EACA,OAAA9wB,IACA9F,EAAAiC,GAAA20B,EAAAY,cAGA3K,EAAAgJ,EAAA/F,SAAA,KAAA8E,GAAA,GACA/H,EAAAzpB,SACAypB,EAAAhmB,EAAA+rB,OAAA9Y,WAAA+S,GAAA,GACAhmB,EAAA+D,KAAAiiB,EAAA,SAAA/mB,EAAA8wB,GACAA,EAAA/vB,EAAAuZ,KAAAwW,GACAA,EAAAxzB,SACApD,EAAAy3B,OAAA3xB,GAAA8wB,MAIA/J,EAAAgJ,EAAA/F,SAAA,WAAA1sB,OAAAyyB,EAAA/F,SAAA,WAAAc,QAAAiF,EAAAjF,QACA/D,EAAAiD,SAAA,cAAAxtB,SACAuqB,IAAAljB,OACAkjB,EAAAhmB,EAAA,WAAA8C,KAAAkjB,GACA7sB,EAAA0B,KAAApB,KAAAgwB,SAAAhJ,KAAAiI,WAAA1C,EAAAnrB,OAAAmrB,EAAAljB,OACAkjB,EAAAgJ,EAAA71B,OACAA,OAAA6sB,EAAAhmB,EAAAjH,QAAA,KAAsCitB,GAAA,KACtC7sB,EAAAipB,MAAAoH,OAAAwF,EAAAjH,SAAA,eACA5uB,EAAAipB,MAAAhmB,SAAA4yB,EAAA/F,SAAA,KAAAlB,SAAA,kBACA5uB,EAAAipB,MAAArnB,SAAAi0B,EAAA/F,SAAA,KAAAlB,SAAA,mBACA5uB,eAAAokB,OACA,IAAAte,IAAA9F,QAAAokB,OACApkB,OAAAokB,OAAAuT,eAAA7xB,KACA9F,EAAAipB,MAAAnjB,GAAA9F,OAAAokB,OAAAte,GAIA+mB,GAAAgJ,EAAA/F,SAAA,KAAAA,SAAA,qBACAjD,EAAAzpB,SACApD,EAAAynB,MAAAoF,EAAA+B,SAAA,4BAAA/B,EAAAR,KAAA,QAEArsB,EAAAipB,MAAAxB,OACAznB,EAAAynB,KAAAznB,EAAAipB,MAAAxB,MAEAoF,EAAAgJ,EAAA/F,SAAA,MAAAA,SAAA,KACA,IACAyH,EAAA,IAAAj3B,KAAA4sB,IAAA,OAAA5sB,KAAA6sB,WACIjX,EAAAqhB,GA4BJ,OA3BAv3B,GAAAiC,GAAAjC,EAAAmpB,QAAAlnB,GAAAjC,EAAAmpB,QAAAlnB,GAAAu1B,WAAAD,EACA1K,EAAAzpB,QACAypB,EAAAjiB,KAAA/D,EAAA0pB,MAAA,SAAAzqB,EAAA8wB,GACAvB,EAAA/0B,KAAAu2B,uBAAAhwB,EAAA+vB,GAAA52B,EAAAiC,GAAAq1B,GACAjnB,EAAA/P,KAAA0tB,OAAAhuB,KAAAq1B,GACAr1B,EAAA8vB,SAAA9tB,KAAAqzB,GACAhlB,EAAA0f,WAAA3sB,SACApD,EAAA+vB,WAAA/vB,EAAA+vB,WAAA4C,OAAAtiB,EAAA0f,cAEKzvB,OACLN,EAAA+vB,WAAA/vB,EAAA+vB,WAAA4C,OAAA3yB,EAAA8vB,WAGA+F,EAAAjH,SAAA,mBACA5uB,EAAAipB,MAAA+G,QAAA,GAGAhwB,EAAAmpB,QAAA,QACAnpB,EAAAmpB,QAAA,MAAAnpB,EAAAmpB,QAAA,MAAA9a,QAAA,oBAAAA,QAAA,mBAEArO,EAAAy3B,OAAA,QACAz3B,EAAAy3B,OAAA,MAAAz3B,EAAAy3B,OAAA,MAAAppB,QAAA,qBAAAA,QAAA,uBAEA6H,EAAAlW,EAAAiC,IAAAjC,EACAA,EAAAipB,MAAAhmB,UACA3C,KAAA+sB,MAAA/F,KAAArkB,SAAAjB,KAAAhC,EAAAiC,IAEAjC,EAAAiC,IAWAs2B,4BAAA,SAAA1C,EAAAtB,EAAA+C,GAESA,EADTA,EACSA,EAAA3E,YACT4B,GAAU+C,EAAAxlB,QAAAyiB,EACV,IAGAzuB,GAAA4sB,EAAA2C,EAAAhlB,EAHAknB,EAAA1B,EAAA5zB,GAAAu1B,WACAthB,EAAA5V,KAAA0tB,OAAAhuB,KACAg3B,EAAA12B,KAAA0tB,OAAAoC,cAEAvD,GACA5qB,GAAAs1B,EACA71B,KAAAm0B,EAAAn0B,MAAA,GACA+lB,KAAAoO,EAAApO,OAAAjmB,GAAAq0B,EAAApO,KACAmI,OAAA2E,EACA1E,QAAAyH,EACAxH,SAAA+F,EAAA/F,aACAC,WAAA8F,EAAA9F,eACA/vB,KAAA61B,EAAA71B,KACAipB,SACAE,SAAiBlnB,IAAA,GACjBw1B,QAAgBlnB,KAAA,KAChBmnB,UAAA,EAEA,KAAA5xB,IAAAkxB,GACAA,EAAAW,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAAkxB,EAAAlxB,GAMA,IAHA+vB,KAAA71B,MAAA61B,EAAA71B,KAAAokB,QAAAyR,EAAA71B,KAAAokB,OAAAqD,OACAoF,EAAApF,KAAAoO,EAAA71B,KAAAokB,OAAAqD,MAEAoO,KAAA71B,OACA6sB,EAAA7sB,KAAA61B,EAAA71B,KACA61B,EAAA71B,KAAAokB,QACA,IAAAte,IAAA+vB,GAAA71B,KAAAokB,OACAyR,EAAA71B,KAAAokB,OAAAuT,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAA+vB,EAAA71B,KAAAokB,OAAAte,GAKA,IAAA+vB,GAAA,gBAAAA,GAAA5M,MACA,IAAAnjB,IAAA+vB,GAAA5M,MACA4M,EAAA5M,MAAA0O,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAA+vB,EAAA5M,MAAAnjB,GAIA,IAAA+vB,GAAA,gBAAAA,GAAA1M,QACA,IAAArjB,IAAA+vB,GAAA1M,QACA0M,EAAA1M,QAAAwO,eAAA7xB,KACA+mB,EAAA1D,QAAArjB,GAAA+vB,EAAA1M,QAAArjB,GAOA,IAHA+mB,EAAA1D,QAAAlnB,KACA4qB,EAAA1D,QAAAlnB,GAAAs1B,GAEA1B,GAAA,gBAAAA,GAAA4B,OACA,IAAA3xB,IAAA+vB,GAAA4B,OACA5B,EAAA4B,OAAAE,eAAA7xB,KACA+mB,EAAA4K,OAAA3xB,GAAA+vB,EAAA4B,OAAA3xB,GAUA,KANA+vB,KAAA/F,WAAA,IAAA+F,EAAA/F,WACAjD,EAAA5D,MAAA+G,QAAA,EACAnD,EAAAiD,YACAjD,EAAAkD,eAEA7Z,EAAA2W,EAAA5qB,IAAA4qB,EACA/mB,EAAA,EAAA4sB,EAAA7F,EAAAiD,SAAA1sB,OAAsC0C,EAAA4sB,EAAO5sB,IAC7CuvB,EAAA/0B,KAAAi4B,4BAAAriB,EAAA2W,EAAAiD,SAAAhqB,IAAA+mB,EAAA5qB,GAAAq1B,GACAjnB,EAAA6F,EAAAmf,GACAxI,EAAAkD,WAAA/tB,KAAAqzB,GACAhlB,EAAA0f,WAAA3sB,SACAypB,EAAAkD,WAAAlD,EAAAkD,WAAA4C,OAAAtiB,EAAA0f,YASA,cANA8F,GAAA71B,WACA61B,GAAA/F,SACA5Z,EAAA2W,EAAA5qB,IAAAy1B,SAAA7B,EACAhJ,EAAA5D,MAAAhmB,UACA3C,KAAA+sB,MAAA/F,KAAArkB,SAAAjB,KAAA6qB,EAAA5qB,IAEA4qB,EAAA5qB,IAWAu2B,uBAAA,SAAA3C,EAAAtB,EAAA+C,GAESA,EADTA,EACSA,EAAA3E,YACT4B,GAAU+C,EAAAxlB,QAAAyiB,EACV,IAAAzuB,GAAA4sB,EAAA2C,EAAAhlB,EAAAwc,EAAA0K,GAAA,EAAArhB,EAAA5V,KAAA0tB,OAAAhuB,KAAAg3B,EAAA12B,KAAA0tB,OAAAoC,aACA,IACAmH,EAAA,IAAAj3B,KAAA4sB,IAAA,OAAA5sB,KAAA6sB,WACIjX,EAAAqhB,GAEJ1K,IACA5qB,IAAA,EACAP,KAAA,gBAAAm0B,KAAA,GACApO,KAAA,gBAAAoO,MAAApO,OAAAjmB,GAAAq0B,EAAApO,KACAmI,OAAA2E,EACA1E,QAAAyH,EACAxH,YACAC,cACA/vB,KAAA,KACAipB,SACAE,SAAgBlnB,IAAA,GAChBw1B,QAAelnB,KAAA,KACfmnB,UAAA,EAEA,KAAA5xB,IAAAkxB,GACAA,EAAAW,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAAkxB,EAAAlxB,GAQA,IALA+vB,KAAA5zB,KAAkB4qB,EAAA5qB,GAAA4zB,EAAA5zB,GAAAu1B,YAClB3B,KAAAn0B,OAAoBmrB,EAAAnrB,KAAAm0B,EAAAn0B,MACpBm0B,KAAA71B,MAAA61B,EAAA71B,KAAAokB,QAAAyR,EAAA71B,KAAAokB,OAAAqD,OACAoF,EAAApF,KAAAoO,EAAA71B,KAAAokB,OAAAqD,MAEAoO,KAAA71B,OACA6sB,EAAA7sB,KAAA61B,EAAA71B,KACA61B,EAAA71B,KAAAokB,QACA,IAAAte,IAAA+vB,GAAA71B,KAAAokB,OACAyR,EAAA71B,KAAAokB,OAAAuT,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAA+vB,EAAA71B,KAAAokB,OAAAte,GAKA,IAAA+vB,GAAA,gBAAAA,GAAA5M,MACA,IAAAnjB,IAAA+vB,GAAA5M,MACA4M,EAAA5M,MAAA0O,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAA+vB,EAAA5M,MAAAnjB,GAIA,IAAA+vB,GAAA,gBAAAA,GAAA1M,QACA,IAAArjB,IAAA+vB,GAAA1M,QACA0M,EAAA1M,QAAAwO,eAAA7xB,KACA+mB,EAAA1D,QAAArjB,GAAA+vB,EAAA1M,QAAArjB,GAaA,IATA+mB,EAAA1D,QAAAlnB,KAAA4qB,EAAA5qB,KACA4qB,EAAA5qB,GAAA4qB,EAAA1D,QAAAlnB,GAAAu1B,YAEA3K,EAAA5qB,KACA4qB,EAAA5qB,GAAAs1B,GAEA1K,EAAA1D,QAAAlnB,KACA4qB,EAAA1D,QAAAlnB,GAAA4qB,EAAA5qB,IAEA4zB,GAAA,gBAAAA,GAAA4B,OACA,IAAA3xB,IAAA+vB,GAAA4B,OACA5B,EAAA4B,OAAAE,eAAA7xB,KACA+mB,EAAA4K,OAAA3xB,GAAA+vB,EAAA4B,OAAA3xB,GAIA,IAAA+vB,KAAA/F,UAAA+F,EAAA/F,SAAA1sB,OAAA,CACA,IAAA0C,EAAA,EAAA4sB,EAAAmD,EAAA/F,SAAA1sB,OAAqC0C,EAAA4sB,EAAO5sB,IAC5CuvB,EAAA/0B,KAAAk4B,uBAAA3C,EAAA/F,SAAAhqB,GAAA+mB,EAAA5qB,GAAAq1B,GACAjnB,EAAA6F,EAAAmf,GACAxI,EAAAiD,SAAA9tB,KAAAqzB,GACAhlB,EAAA0f,WAAA3sB,SACAypB,EAAAkD,WAAAlD,EAAAkD,WAAA4C,OAAAtiB,EAAA0f,YAGAlD,GAAAkD,WAAAlD,EAAAkD,WAAA4C,OAAA9F,EAAAiD,UAcA,MAZA+F,MAAA/F,WAAA,IAAA+F,EAAA/F,WACAjD,EAAA5D,MAAA+G,QAAA,EACAnD,EAAAiD,YACAjD,EAAAkD,qBAEA8F,GAAA71B,WACA61B,GAAA/F,SACAjD,EAAA6K,SAAA7B,EACA3f,EAAA2W,EAAA5qB,IAAA4qB,EACAA,EAAA5D,MAAAhmB,UACA3C,KAAA+sB,MAAA/F,KAAArkB,SAAAjB,KAAA6qB,EAAA5qB,IAEA4qB,EAAA5qB,IAQAw2B,QAAA,WACA,GACA5L,GAAA/mB,EAAA4sB,EADAgD,EAAAp1B,KAAA0tB,OAAAkC,kBAAA5vB,KAAA0tB,OAAAhuB,KAAA,KAAA8vB,SAAA6C,WAAAryB,KAAA0tB,OAAAiC,QAAA0C,WACA0D,EAAAzf,SAAAN,cAAA,KACA,KAAAxQ,EAAA,EAAA4sB,EAAAgD,EAAAtyB,OAA+B0C,EAAA4sB,EAAO5sB,KACtC+mB,EAAAvsB,KAAAo4B,YAAAhD,EAAA5vB,IAAA,EAAAxF,KAAA0tB,OAAAkC,qBACA5vB,KAAA0tB,OAAAkC,mBACAmG,EAAA5J,YAAAI,EAGAvsB,MAAA0tB,OAAAkC,oBACAmG,EAAAra,UAAA1b,KAAA4wB,mBAAA,GAAAlV,UACA1b,KAAAyO,QAAAuiB,QAAAzwB,OAAAw1B,IAGA/1B,KAAA0tB,OAAAkC,mBAAA,EACA5vB,KAAA0tB,OAAAiC,WAOA3vB,KAAAqU,QAAA,UAA2B+gB,WAO3BoB,OAAA,SAAA6B,GACAA,IACAr4B,KAAA0tB,OAAAkC,mBAAA,GAMA5vB,KAAAm4B,WAUAC,YAAA,SAAA1P,EAAA4P,EAAAjD,GACA,GAAAn2B,GAAAc,KAAAiyB,SAAAvJ,GACAyN,GAAA,EACAoC,GAAA,EACAC,GAAA,EACAhzB,GAAA,EACA4sB,GAAA,EACA3F,GAAA,EACAsI,EAAA,GACAQ,EAAAjf,SACAV,EAAA5V,KAAA0tB,OAAAhuB,KACAq2B,GAAA,EACAvgB,GAAA,EACA+W,EAAA,IACA,KAAArtB,EAAa,QACb,UAAAA,EAAAyC,GAAuB,MAAA3B,MAAAw2B,QAAA,EAGvB,IAFA8B,KAAA,IAAAp5B,EAAAswB,SAAA1sB,OACA4lB,EAAApS,SAAAmiB,cAAAz4B,KAAAyO,QAAA,GAAAgqB,cAAA,uBAAAt0B,QAAAjF,EAAAyC,GAAA,UAAAzC,EAAAyC,GAAA,OAAAzC,EAAAyC,GAAAyO,OAAA,GAAArC,QAAAxH,EAAAud,OAAAuI,QAAA,QAAAntB,EAAAyC,GAAAoM,QAAAxH,EAAAud,OAAAuI,QAAA,UAAA/V,SAAAoiB,eAAAx5B,EAAAyC,IAaA+mB,EAAAniB,EAAAmiB,GACA2M,IACAc,EAAAzN,EAAA4G,kBAAA,GACA6G,IAAAn2B,KAAAyO,QAAA,KACA0nB,EAAA,MAEAoC,EAAA7P,EAAA7mB,SAGAy2B,IAAAp5B,EAAAswB,SAAA1sB,QAAA4lB,EAAA8G,SAAA,oBAAA1sB,SACAw1B,GAAA,GAEAA,IACAE,EAAA9P,EAAA8G,SAAA,wBAEAha,EAAAkT,EAAAqD,KAAA,iBACAgK,EAAArN,EAAA8G,SAAA,uBAAAlZ,SAAAqiB,cACAjQ,EAAA1mB,aA1BA,IAFAs2B,GAAA,GAEAjD,EAAA,CAEA,aADAc,EAAA,MAAAj3B,EAAAowB,OAAA/oB,EAAA,IAAArH,EAAAowB,OAAAvhB,QAAAxH,EAAAud,OAAAuI,QAAA,QAAArsB,KAAAyO,SAAA,UACA0nB,GAAAvgB,EAAA1W,EAAAowB,QAAA3G,MAAAoH,QACA,QAEAwI,GAAAhyB,EAAAkxB,QAAAv4B,EAAAyC,GAAA,OAAAw0B,EAAAvgB,EAAA,KAAA4Z,SAAA5Z,EAAA1W,EAAAowB,QAAAE,UAyBA9G,EAAAuD,EAAA2M,WAAA,GAGA7D,EAAA,cACA,KAAAvvB,IAAAtG,GAAA2pB,QACA,GAAA3pB,EAAA2pB,QAAAwO,eAAA7xB,GAAA,CACA,UAAAA,EAAqB,QACrB,WAAAA,EACAkjB,EAAAwD,aAAA1mB,EAAAtG,EAAA2pB,QAAArjB,IAGAuvB,GAAA71B,EAAA2pB,QAAArjB,GAIAgQ,GAAA,UAAAA,GACAkT,EAAAwD,aAAA,oBAEAhtB,EAAAypB,MAAA+G,SAAAxwB,EAAAswB,SAAA1sB,OACAiyB,GAAA,gBAGAA,GAAA71B,EAAAypB,MAAAoH,QAAA7wB,EAAAypB,MAAA+G,OAAA,gCACAhH,EAAAwD,aAAA,gBAAAhtB,EAAAypB,MAAAoH,QAAA7wB,EAAAypB,MAAA+G,SAEA,OAAAxwB,EAAAowB,QAAA1Z,EAAA1W,EAAAowB,QAAAE,SAAA5Z,EAAA1W,EAAAowB,QAAAE,SAAA1sB,OAAA,KAAA5D,EAAAyC,KACAozB,GAAA,gBAEArM,EAAA/mB,GAAAzC,EAAAyC,GACA+mB,EAAAhN,UAAAqZ,EACAA,GAAA71B,EAAAypB,MAAAhmB,SAAA,uBAAAzD,EAAAypB,MAAArnB,SAAA,sBACA,KAAA8wB,IAAAlzB,GAAAi4B,OACA,GAAAj4B,EAAAi4B,OAAAE,eAAAjF,GAAA,CACA,YAAAA,GAAA,MAAAlzB,EAAAi4B,OAAA/E,GAAgD,QAChD,WAAAA,EACA1J,EAAAmQ,WAAA,GAAA3M,aAAAkG,EAAAlzB,EAAAi4B,OAAA/E,IAGA2C,GAAA,IAAA71B,EAAAi4B,OAAA/E,GA6BA,GAzBA2C,EAAAjyB,SACA4lB,EAAAmQ,WAAA,GAAAnd,UAAA,iBAAAqZ,IAEA71B,EAAAioB,OAAA,IAAAjoB,EAAAioB,OAAA,IAAAjoB,EAAAioB,SACA,IAAAjoB,EAAAioB,KACAuB,EAAAmQ,WAAA,GAAAA,WAAA,GAAAnd,WAAA,4BAEA,IAAAxc,EAAAioB,KAAAhjB,QAAA,WAAAjF,EAAAioB,KAAAhjB,QAAA,KACAukB,EAAAmQ,WAAA,GAAAA,WAAA,GAAAnd,WAAA,IAAAxc,EAAAioB,KAAA,4BAGAuB,EAAAmQ,WAAA,GAAAA,WAAA,GAAAC,MAAAC,gBAAA,OAAA75B,EAAAioB,KAAA,IACAuB,EAAAmQ,WAAA,GAAAA,WAAA,GAAAC,MAAAE,mBAAA,gBACAtQ,EAAAmQ,WAAA,GAAAA,WAAA,GAAAC,MAAAG,eAAA,OACAvQ,EAAAmQ,WAAA,GAAAA,WAAA,GAAAnd,WAAA,6BAIA1b,KAAAgwB,SAAAhJ,KAAAiI,WACAvG,EAAAmQ,WAAA,GAAA1M,YAAAoJ,EAAA2D,eAAAh6B,EAAAkC,OAGAsnB,EAAAmQ,WAAA,GAAAM,WAAAj6B,EAAAkC,KAGAk3B,GAAAp5B,EAAAswB,SAAA1sB,QAAA5D,EAAAypB,MAAAoH,QAAA7wB,EAAAypB,MAAA+G,OAAA,CAIA,IAHAjD,EAAA8I,EAAAvf,cAAA,MACAyW,EAAAP,aAAA,gBACAO,EAAA/Q,UAAA,kBACAlW,EAAA,EAAA4sB,EAAAlzB,EAAAswB,SAAA1sB,OAAuC0C,EAAA4sB,EAAO5sB,IAC9CinB,EAAAN,YAAAnsB,KAAAo4B,YAAAl5B,EAAAswB,SAAAhqB,GAAA8yB,GAAA,GAEA5P,GAAAyD,YAAAM,GAKA,GAHA+L,GACA9P,EAAAyD,YAAAqM,IAEAnD,EAAA,CAKA,IAHAc,IACAA,EAAAn2B,KAAAyO,QAAA,IAEAjJ,EAAA,EAAA4sB,EAAA+D,EAAA0C,WAAA/1B,OAAyC0C,EAAA4sB,EAAO5sB,IAChD,GAAA2wB,EAAA0C,WAAArzB,IAAA2wB,EAAA0C,WAAArzB,GAAAkW,YAAA,IAAAya,EAAA0C,WAAArzB,GAAAkW,UAAAvX,QAAA,oBACAooB,EAAA4J,EAAA0C,WAAArzB,EACA,OAGA+mB,IACAA,EAAAgJ,EAAAvf,cAAA,MACAuW,EAAAL,aAAA,gBACAK,EAAA7Q,UAAA,kBACAya,EAAAhK,YAAAI,IAEA4J,EAAA5J,EAEAgM,EAAApC,EAAA0C,WAAA/1B,OACAqzB,EAAA9f,aAAAqS,EAAAyN,EAAA0C,WAAAN,IAGApC,EAAAhK,YAAAzD,GAEAqN,GACArN,EAAAmQ,WAAA,GAAArH,QASA,MANAtyB,GAAAypB,MAAAoH,SAAA7wB,EAAAypB,MAAA+G,SACAxwB,EAAAypB,MAAAoH,QAAA,EACAyC,WAAAjsB,EAAA0pB,MAAA,WACAjwB,KAAAgyB,UAAA9yB,EAAAyC,IAAA,MACK3B,MAAA,IAEL0oB,GAUAsJ,UAAA,SAAA9yB,EAAAyM,EAAA+iB,GACA,GAAA0K,GAAAC,EAAA9D,EAAAD,CACA,IAAA/uB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAgyB,UAAA9yB,EAAAk6B,GAAAztB,EAAA+iB,EAEA,UAGA,KADAxvB,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GACA,QAGA,IADA+sB,MAAAxtB,EAAAlB,KAAAgwB,SAAAhJ,KAAA0H,aACA1uB,KAAA+xB,UAAA7yB,GAIA,MAHAyM,IACAA,EAAA5I,KAAA/C,KAAAd,GAAA,IAEA,CAEA,IAAAc,KAAA20B,UAAAz1B,GAWAq2B,EAAAv1B,KAAAiyB,SAAA/yB,GAAA,GACAo2B,EAAAt1B,KACAu1B,EAAAzyB,SACA5D,EAAAswB,SAAA1sB,SAAA9C,KAAAqzB,YAAAkC,EAAA/F,SAAA,0BACAtwB,EAAAypB,MAAAoH,QAAA,EACA/vB,KAAAo4B,YAAAl5B,GAAA,GACAq2B,EAAAv1B,KAAAiyB,SAAA/yB,GAAA,IAEAwvB,GAMA1uB,KAAAqU,QAAA,eAAmCqU,KAAAxpB,IACnCq2B,EACA/F,SAAA,oBAAAhwB,IAAA,kBAAA85B,MACAhd,YAAA,iBAAAC,SAAA,eAAAwP,KAAA,oBACAyD,SAAA,oBAAA+J,MAAA,MACAC,UAAA9K,EAAA,WACA1uB,KAAA84B,MAAAW,QAAA,GACAnE,EAAAjhB,QAAA,cAAkCqU,KAAAxpB,QAZlCc,KAAAqU,QAAA,eAAmCqU,KAAAxpB,IACnCq2B,EAAA,GAAA7Z,UAAA6Z,EAAA,GAAA7Z,UAAA3N,QAAA,+BACAwnB,EAAA,GAAArJ,aAAA,sBAcAhtB,EAAAypB,MAAAoH,QAAA,EACApkB,GACAA,EAAA5I,KAAA/C,KAAAd,GAAA,GAEAq2B,EAAAzyB,QAOA9C,KAAAqU,QAAA,eAAkCqU,KAAAxpB,IAQlCc,KAAAqU,QAAA,aAA+BqU,KAAAxpB,IAC/BwvB,GAAA6G,EAAAzyB,QAOA9C,KAAAqU,QAAA,cAAiCqU,KAAAxpB,QA/DjC,CACA,GAAAc,KAAA40B,WAAA11B,GACA,MAAAszB,YAAAjsB,EAAA0pB,MAAA,WACAjwB,KAAAgyB,UAAA9yB,EAAAyM,EAAA+iB,IACM1uB,MAAA,IAENA,MAAA8wB,UAAA5xB,EAAA,SAAAuW,EAAAikB,GACA,MAAAA,GAAA15B,KAAAgyB,UAAAvc,EAAA9J,EAAA+iB,KAAA/iB,KAAA5I,KAAA/C,KAAAyV,GAAA,OAkEAkkB,SAAA,SAAAz6B,GAEA,KADAA,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GACA,QAEA,IAAA6D,GAAA4sB,EAAA6B,EAAA/0B,EAAAqwB,OACA,KAAA/pB,EAAA,EAAA4sB,EAAA6B,EAAAnxB,OAA2B0C,EAAA4sB,EAAO5sB,GAAA,EAClC,MAAAA,GACAxF,KAAAgyB,UAAAiC,EAAAzuB,IAAA,IAGA,OAAAe,GAAA,IAAArH,EAAAyC,GAAAoM,QAAAxH,EAAAud,OAAAuI,QAAA,QAAArsB,KAAAyO,UASAojB,WAAA,SAAA3yB,EAAAwvB,GACA,GAAA0K,GAAAC,EAAA/D,EAAAC,CACA,IAAAhvB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAA6xB,WAAA3yB,EAAAk6B,GAAA1K,EAEA,UAGA,UADAxvB,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,OAGA3B,KAAA+xB,UAAA7yB,KAGAwvB,MAAAxtB,EAAAlB,KAAAgwB,SAAAhJ,KAAA0H,YACA4G,EAAAt1B,KACAu1B,EAAAv1B,KAAAiyB,SAAA/yB,GAAA,GACAq2B,EAAAzyB,SACA4rB,EAKA6G,EACA/F,SAAA,oBAAAzD,KAAA,oCAAAuN,MACAhd,YAAA,eAAAC,SAAA,iBAAAwP,KAAA,oBACAyD,SAAA,oBAAA+J,MAAA,MAAAK,QAAAlL,EAAA,WACA1uB,KAAA84B,MAAAW,QAAA,GACAlE,EAAA/F,SAAA,oBAAAxtB,SACAszB,EAAAjhB,QAAA,eAAiCqU,KAAAxpB,OAVjCq2B,EAAA,GAAA7Z,UAAA6Z,EAAA,GAAA7Z,UAAA3N,QAAA,+BACAwnB,EAAAxJ,KAAA,oBAAAyD,SAAA,oBAAAxtB,WAaA9C,EAAAypB,MAAAoH,QAAA,EAOA/vB,KAAAqU,QAAA,cAA8BqU,KAAAxpB,SAC9BwvB,GAAA6G,EAAAzyB,QAOA9C,KAAAqU,QAAA,eAAiCqU,KAAAxpB,QAQjCqyB,YAAA,SAAAryB,GACA,GAAAk6B,GAAAC,CACA,IAAA9yB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAuxB,YAAAryB,EAAAk6B,GAEA,UAEA,MAAAp5B,MAAA+xB,UAAA7yB,GACAc,KAAAgyB,UAAA9yB,GAEAc,KAAA4xB,QAAA1yB,GACAc,KAAA6xB,WAAA3yB,OADA,IAYA26B,SAAA,SAAA36B,EAAAwvB,EAAAoL,GAGA,GAFA56B,IAAaA,EAAA,OACbA,EAAAc,KAAAiyB,SAAA/yB,IACa,QACb,IAAAsG,GAAA4sB,EAAA2H,EAAAzG,EAAA,MAAAp0B,EAAAyC,GAAA3B,KAAA4wB,mBAAA5wB,KAAAiyB,SAAA/yB,GAAA,EACA,KAAAo0B,EAAAxwB,OAAA,CACA,IAAA0C,EAAA,EAAA4sB,EAAAlzB,EAAAuwB,WAAA3sB,OAAyC0C,EAAA4sB,EAAO5sB,IAChDxF,KAAA+xB,UAAA/xB,KAAA0tB,OAAAhuB,KAAAR,EAAAuwB,WAAAjqB,OACAxF,KAAA0tB,OAAAhuB,KAAAR,EAAAuwB,WAAAjqB,IAAAmjB,MAAAoH,QAAA,EAGA,OAAA/vB,MAAAqU,QAAA,YAAqCqU,KAAAxpB,IAErC46B,KAAAxG,EACAyG,EAAA/5B,KACAszB,EAAAtzB,KAAA+xB,UAAA7yB,GAAAo0B,EAAAzmB,KAAA,kBAAA0jB,UAAA+C,EAAAzmB,KAAA,kBACAymB,EAAAhpB,KAAA,WACAyvB,EAAA/H,UACAhyB,KACA,SAAA0oB,EAAAjc,GAA6BA,GAAAzM,KAAA00B,UAAAhM,IAAqC1oB,KAAA65B,SAAAnR,EAAAgG,EAAAoL,IAClEpL,GAAA,KAGA,IAAAoL,EAAAjtB,KAAA,kBAAA/J,QAOA9C,KAAAqU,QAAA,YAA8BqU,KAAA1oB,KAAAiyB,SAAA6H,MAU9BE,UAAA,SAAA96B,EAAAwvB,GAGA,GAFAxvB,IAAaA,EAAA,OACbA,EAAAc,KAAAiyB,SAAA/yB,IACa,QACb,IACAsG,GAAA4sB,EADAkB,EAAA,MAAAp0B,EAAAyC,GAAA3B,KAAA4wB,mBAAA5wB,KAAAiyB,SAAA/yB,GAAA,GACA66B,EAAA/5B,IACA,KAAAszB,EAAAxwB,OAAA,CACA,IAAA0C,EAAA,EAAA4sB,EAAAlzB,EAAAuwB,WAAA3sB,OAAyC0C,EAAA4sB,EAAO5sB,IAChDxF,KAAA0tB,OAAAhuB,KAAAR,EAAAuwB,WAAAjqB,IAAAmjB,MAAAoH,QAAA,CAEA,OAAA/vB,MAAAqU,QAAA,aAAsCqU,KAAAxpB,IAEtCo0B,EAAAtzB,KAAA4xB,QAAA1yB,GAAAo0B,EAAAzmB,KAAA,gBAAA0jB,UAAA+C,EAAAzmB,KAAA,gBACAtG,EAAA+sB,EAAA5vB,MAAA2X,WAAA/Q,KAAA,WAA4CyvB,EAAAlI,WAAA7xB,KAAA0uB,GAAA,KAO5C1uB,KAAAqU,QAAA,aAA8BqU,KAAAxpB,KAQ9B+6B,YAAA,SAAA/6B,GAEA,OADAA,EAAAc,KAAAiyB,SAAA/yB,KACAA,EAAAypB,OAAAzpB,EAAAypB,MAAArnB,UAQA44B,YAAA,SAAAh7B,GACA,GAAAk6B,GAAAC,CACA,IAAA9yB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAk6B,YAAAh7B,EAAAk6B,GAEA,UAGA,KADAl6B,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GACA,QAEAzC,GAAAypB,MAAArnB,UAAA,EACAtB,KAAAiyB,SAAA/yB,GAAA,GAAAswB,SAAA,kBAAAlT,YAAA,mBAOAtc,KAAAqU,QAAA,eAAgCqU,KAAAxpB,KAQhCi7B,aAAA,SAAAj7B,GACA,GAAAk6B,GAAAC,CACA,IAAA9yB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAm6B,aAAAj7B,EAAAk6B,GAEA,UAGA,KADAl6B,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GACA,QAEAzC,GAAAypB,MAAArnB,UAAA,EACAtB,KAAAiyB,SAAA/yB,GAAA,GAAAswB,SAAA,kBAAAjT,SAAA,mBAOAvc,KAAAqU,QAAA,gBAAiCqU,KAAAxpB,KAUjCuyB,cAAA,SAAAvyB,EAAA6Q,GACA,GAAA/P,KAAAi6B,YAAA/6B,GACA,QAQA,IAJAc,KAAA+sB,MAAA/F,KAAAoT,aAAAp6B,KAAA+sB,MAAA/F,KAAAoT,cAAAp6B,KAAA+sB,MAAA/F,KAAAoT,aAAAz4B,KAAAT,EAAAlB,KAAAiyB,SAAAjyB,KAAA+sB,MAAA/F,KAAAoT,aAAAz4B,IAAA,KACA3B,KAAA+sB,MAAA/F,KAAAoT,eAAAp6B,KAAA+sB,MAAA/F,KAAAoT,aAAAzR,MAAAhmB,WAAqF3C,KAAA+sB,MAAA/F,KAAAoT,aAAA,OACrFp6B,KAAA+sB,MAAA/F,KAAAoT,cAAAp6B,KAAA+sB,MAAA/F,KAAArkB,SAAAG,SAAyE9C,KAAA+sB,MAAA/F,KAAAoT,aAAAp6B,KAAAiyB,SAAAjyB,KAAA+sB,MAAA/F,KAAArkB,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,SAAAG,OAAA,KAEzE9C,KAAAgwB,SAAAhJ,KAAArnB,WAAAoQ,EAAAsqB,SAAAtqB,EAAAuqB,SAAAvqB,EAAAwqB,aAAAxqB,EAAAwqB,UAAAv6B,KAAA+sB,MAAA/F,KAAAoT,cAAAp6B,KAAAw0B,WAAAt1B,IAAAc,KAAAw0B,WAAAt1B,KAAAc,KAAA+sB,MAAA/F,KAAAoT,aAAA9K,QAWA,GAAAvf,EAAAwqB,SAAA,CACA,GAIA/0B,GAAA4sB,EAJA3c,EAAAzV,KAAAiyB,SAAA/yB,GAAAyC,GACAmU,EAAA9V,KAAA+sB,MAAA/F,KAAAoT,aAAAz4B,GACAsyB,EAAAj0B,KAAAiyB,SAAAjyB,KAAA+sB,MAAA/F,KAAAoT,aAAA9K,QAAAE,SACAuF,GAAA,CAEA,KAAAvvB,EAAA,EAAA4sB,EAAA6B,EAAAnxB,OAA6B0C,EAAA4sB,EAAO5sB,GAAA,EAEpCyuB,EAAAzuB,KAAAiQ,IACAsf,MAEAd,EAAAzuB,KAAAsQ,IACAif,MAEAA,GAAAd,EAAAzuB,KAAAiQ,GAAAwe,EAAAzuB,KAAAsQ,EACA9V,KAAAw6B,YAAAvG,EAAAzuB,IAAA,KAAAuK,GAGA/P,KAAAy6B,cAAAxG,EAAAzuB,IAAA,EAAAuK,OAKA/P,MAAAmyB,YAAAjzB,GAIAc,KAAAy6B,cAAAv7B,GAAA,EAAA6Q,GAHA/P,KAAAw6B,YAAAt7B,GAAA,KAAA6Q,QAlCA/P,KAAAgwB,SAAAhJ,KAAArnB,WAAAoQ,EAAAsqB,SAAAtqB,EAAAuqB,SAAAvqB,EAAAwqB,WAAAv6B,KAAAmyB,YAAAjzB,GACAc,KAAAy6B,cAAAv7B,GAAA,EAAA6Q,IAGA/P,KAAA06B,cAAA,GACA16B,KAAAw6B,YAAAt7B,GAAA,KAAA6Q,GACA/P,KAAA+sB,MAAA/F,KAAAoT,aAAAp6B,KAAAiyB,SAAA/yB,GAyCAc,MAAAqU,QAAA,iBAAkCqU,KAAA1oB,KAAAiyB,SAAA/yB,MASlC4zB,WAAA,SAAA5zB,GAEA,KADAA,EAAAc,KAAAiyB,SAAA/yB,GAAA,MACAA,EAAA4D,QAAA5D,EAAAswB,SAAA,mBAAA1sB,OACA,QAEA,IAAA2S,GAAAzV,KAAAyO,QAAA5B,KAAA,mBAAAyoB,EAAAt1B,KAAAyO,OACAgH,MAAA3S,QAAsB9C,KAAA+yB,aAAAtd,GAEtBvW,EAAAswB,SAAA,kBAAAjT,SAAA,kBAOAvc,KAAAqU,QAAA,cAA+BqU,KAAA1oB,KAAAiyB,SAAA/yB,KAC/BszB,WAAA,WAA2B8C,EAAAvJ,KAAA,wBAAA7sB,EAAA,GAAAyC,IAA4CzC,EAAA6sB,KAAA,qBAAmC,IAS1GgH,aAAA,SAAA7zB,GAEA,KADAA,EAAAc,KAAAiyB,SAAA/yB,GAAA,MACAA,EAAA4D,SAAA5D,EAAAswB,SAAA,mBAAA1sB,OACA,QAEA5D,GAAA6sB,KAAA,oBAAAyD,SAAA,kBAAAlT,YAAA,kBAOAtc,KAAAqU,QAAA,gBAAiCqU,KAAA1oB,KAAAiyB,SAAA/yB,MAUjCs7B,YAAA,SAAAt7B,EAAAy7B,EAAAC,EAAA7qB,GACA,GAAAujB,GAAA8F,EAAAC,CACA,IAAA9yB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAw6B,YAAAt7B,EAAAk6B,GAAAuB,EAAAC,EAAA7qB,EAEA,UAGA,KADA7Q,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GACA,QAEA2xB,GAAAtzB,KAAAiyB,SAAA/yB,GAAA,GACAA,EAAAypB,MAAAhmB,WACAzD,EAAAypB,MAAAhmB,UAAA,EACA3C,KAAA+sB,MAAA/F,KAAArkB,SAAAjB,KAAAxC,EAAAyC,IACAi5B,IACAtH,EAAAtzB,KAAA25B,SAAAz6B,IAEAo0B,KAAAxwB,QACAwwB,EAAA9D,SAAA,kBAAAjT,SAAA,kBAUAvc,KAAAqU,QAAA,eAAiCqU,KAAAxpB,EAAAyD,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,SAAAiO,MAAAb,IACjC4qB,GAUA36B,KAAAqU,QAAA,WAA8BqR,OAAA,cAAAgD,KAAAxpB,EAAAyD,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,SAAAiO,MAAAb,MAW9B0qB,cAAA,SAAAv7B,EAAAy7B,EAAA5qB,GACA,GAAAqpB,GAAAC,EAAA/F,CACA,IAAA/sB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAy6B,cAAAv7B,EAAAk6B,GAAAuB,EAAA5qB,EAEA,UAGA,KADA7Q,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GACA,QAEA2xB,GAAAtzB,KAAAiyB,SAAA/yB,GAAA,GACAA,EAAAypB,MAAAhmB,WACAzD,EAAAypB,MAAAhmB,UAAA,EACA3C,KAAA+sB,MAAA/F,KAAArkB,SAAA4D,EAAA+rB,OAAA4C,kBAAAl1B,KAAA+sB,MAAA/F,KAAArkB,SAAAzD,EAAAyC,IACA2xB,EAAAxwB,QACAwwB,EAAA9D,SAAA,kBAAAlT,YAAA,kBAUAtc,KAAAqU,QAAA,iBAAmCqU,KAAAxpB,EAAAyD,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,SAAAiO,MAAAb,IACnC4qB,GACA36B,KAAAqU,QAAA,WAA8BqR,OAAA,gBAAAgD,KAAAxpB,EAAAyD,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,SAAAiO,MAAAb,MAU9B8qB,WAAA,SAAAF,GACA,GAAAn1B,GAAA4sB,EAAA7F,EAAAvsB,KAAA+sB,MAAA/F,KAAArkB,SAAA0vB,UAEA,KADAryB,KAAA+sB,MAAA/F,KAAArkB,SAAA3C,KAAA0tB,OAAAhuB,KAAA,KAAA+vB,WAAA4C,SACA7sB,EAAA,EAAA4sB,EAAApyB,KAAA+sB,MAAA/F,KAAArkB,SAAAG,OAAkD0C,EAAA4sB,EAAO5sB,IACzDxF,KAAA0tB,OAAAhuB,KAAAM,KAAA+sB,MAAA/F,KAAArkB,SAAA6C,MACAxF,KAAA0tB,OAAAhuB,KAAAM,KAAA+sB,MAAA/F,KAAArkB,SAAA6C,IAAAmjB,MAAAhmB,UAAA,EAGA3C,MAAAw2B,QAAA,GAOAx2B,KAAAqU,QAAA,cAA+B1R,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,WAC/Bg4B,GACA36B,KAAAqU,QAAA,WAA6BqR,OAAA,aAAA/iB,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,SAAAm4B,cAAAvO,KAS7BmO,aAAA,SAAAC,GACA,GAAAn1B,GAAA4sB,EAAA7F,EAAAvsB,KAAA+sB,MAAA/F,KAAArkB,SAAA0vB,UACA,KAAA7sB,EAAA,EAAA4sB,EAAApyB,KAAA+sB,MAAA/F,KAAArkB,SAAAG,OAAkD0C,EAAA4sB,EAAO5sB,IACzDxF,KAAA0tB,OAAAhuB,KAAAM,KAAA+sB,MAAA/F,KAAArkB,SAAA6C,MACAxF,KAAA0tB,OAAAhuB,KAAAM,KAAA+sB,MAAA/F,KAAArkB,SAAA6C,IAAAmjB,MAAAhmB,UAAA,EAGA3C,MAAA+sB,MAAA/F,KAAArkB,YACA3C,KAAAyO,QAAA5B,KAAA,mBAAAyP,YAAA,kBAQAtc,KAAAqU,QAAA,gBAAiC1R,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,SAAA+lB,KAAA6D,IACjCoO,GACA36B,KAAAqU,QAAA,WAA6BqR,OAAA,eAAA/iB,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,SAAAm4B,cAAAvO,KAS7B4F,YAAA,SAAAjzB,GAEA,UADAA,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,KAGAzC,EAAAypB,MAAAhmB,UAQA6lB,aAAA,SAAA6P,GACA,MAAAA,GAAA9xB,EAAAw0B,IAAA/6B,KAAA+sB,MAAA/F,KAAArkB,SAAA4D,EAAA0pB,MAAA,SAAAzqB,GAAuE,MAAAxF,MAAAiyB,SAAAzsB,IAA2BxF,YAAA+sB,MAAA/F,KAAArkB,SAAA+X,SAQlGsgB,iBAAA,SAAA3C,GACA,GACY7yB,GAAA4sB,EAAA3F,EAAA3W,EADZyW,EAAAvsB,KAAAwoB,cAAA,GACAtpB,IACA,KAAAsG,EAAA,EAAA4sB,EAAA7F,EAAAzpB,OAA6B0C,EAAA4sB,EAAO5sB,IACpCtG,EAAAqtB,EAAA/mB,GAAA7D,IAAA4qB,EAAA/mB,EAEA,KAAAA,EAAA,EAAA4sB,EAAA7F,EAAAzpB,OAA6B0C,EAAA4sB,EAAO5sB,IACpC,IAAAinB,EAAA,EAAA3W,EAAAyW,EAAA/mB,GAAAiqB,WAAA3sB,OAA4C2pB,EAAA3W,EAAO2W,IACnDvtB,EAAAqtB,EAAA/mB,GAAAiqB,WAAAhD,WACAvtB,GAAAqtB,EAAA/mB,GAAAiqB,WAAAhD,GAIAF,KACA,KAAA/mB,IAAAtG,GACAA,EAAAm4B,eAAA7xB,IACA+mB,EAAA7qB,KAAA8D,EAGA,OAAA6yB,GAAA9xB,EAAAw0B,IAAAxO,EAAAhmB,EAAA0pB,MAAA,SAAAzqB,GAAkD,MAAAxF,MAAAiyB,SAAAzsB,IAA2BxF,OAAAusB,GAQ7E0O,oBAAA,SAAA5C,GACA,GACA7yB,GAAA4sB,EADA7F,EAAAvsB,KAAAwoB,cAAA,GACAtpB,IACA,KAAAsG,EAAA,EAAA4sB,EAAA7F,EAAAzpB,OAA6B0C,EAAA4sB,EAAO5sB,IACpC+mB,EAAA/mB,GAAAgqB,SAAA1sB,QACA5D,EAAAwC,KAAA6qB,EAAA/mB,GAAA7D,GAGA,OAAA02B,GAAA9xB,EAAAw0B,IAAA77B,EAAAqH,EAAA0pB,MAAA,SAAAzqB,GAAkD,MAAAxF,MAAAiyB,SAAAzsB,IAA2BxF,OAAAd,GAQ7Eg8B,UAAA,WACA,GAgBI11B,GAhBJmjB,GACA3B,MACAmU,QACAC,QACAC,KAAAr7B,KAAAyO,QAAA6sB,aACAC,IAAAv7B,KAAAyO,QAAA+sB;;;;;;;AASA74B,aAGA,KAAA6C,IAAAxF,MAAA0tB,OAAAhuB,KACAM,KAAA0tB,OAAAhuB,KAAA23B,eAAA7xB,IACA,MAAAA,IACAxF,KAAA0tB,OAAAhuB,KAAA8F,GAAAmjB,MAAAoH,QACApH,EAAA3B,KAAAmU,KAAAz5B,KAAA8D,GAEAxF,KAAA0tB,OAAAhuB,KAAA8F,GAAAmjB,MAAAhmB,UACAgmB,EAAA3B,KAAArkB,SAAAjB,KAAA8D,GAKA,OAAAmjB,IAUA8S,UAAA,SAAA9S,EAAAhd,GACA,GAAAgd,EAAA,CACA,GAAAA,EAAA3B,KAAA,CACA,GAAA0U,GAAAC,EAAArG,EAAAyE,CACA,IAAApR,EAAA3B,KAAAmU,KACA,MAAA50B,GAAAyuB,QAAArM,EAAA3B,KAAAmU,OAKAO,GAAA,EACAC,GAAA,EACArG,EAAAt1B,KACAuG,EAAA+D,KAAAqe,EAAA3B,KAAAmU,KAAA9I,WAAA,SAAA7sB,EAAA8wB,IACAqF,EAAArG,EAAArD,SAAAqE,MAEAhB,EAAAX,UAAA2B,IACAhB,EAAAvD,UAAAuE,IACAhB,EAAAtD,UAAAsE,GAAA,KAEA3N,KAAA3B,MAAA2B,EAAA3B,KAAAmU,MACA50B,EAAA+rB,OAAA4C,kBAAAvM,EAAA3B,KAAAmU,KAAA7E,KAIAhB,EAAAV,WAAA0B,IACAhB,EAAAtD,UAAAsE,EAAA/vB,EAAA0pB,MAAA,SAAAxa,EAAAD,IACAA,GAAAmT,KAAA3B,MAAA2B,EAAA3B,KAAAmU,MACA50B,EAAA+rB,OAAA4C,kBAAAvM,EAAA3B,KAAAmU,KAAA1lB,EAAA9T,IAEA3B,KAAAy7B,UAAA9S,EAAAhd,IACW2pB,GAAA,GAGXoG,GAAA,MAIAA,UACA/S,GAAA3B,KAAAmU,KACAn7B,KAAAy7B,UAAA9S,EAAAhd,KAEA,UApCAgd,GAAA3B,KAAAmU,KACAn7B,KAAAy7B,UAAA9S,EAAAhd,IACA,EAoCA,IAAAgd,EAAA3B,KAAAoU,OASA,MARAzS,GAAA3B,KAAAoU,QAAAzS,EAAA3B,KAAAoU,OAAAC,OAAAn6B,GACAlB,KAAAyO,QAAA6sB,WAAA3S,EAAA3B,KAAAoU,OAAAC,MAEA1S,EAAA3B,KAAAoU,QAAAzS,EAAA3B,KAAAoU,OAAAG,MAAAr6B,GACAlB,KAAAyO,QAAA+sB,UAAA7S,EAAA3B,KAAAoU,OAAAG,WAEA5S,GAAA3B,KAAAoU,OACAp7B,KAAAy7B,UAAA9S,EAAAhd,IACA;;;;;;;;;;;;;;;;;AAmBA,GAAAgd,EAAA3B,KAAArkB,SAQA,MAPAo3B,GAAA/5B,KACAA,KAAA06B,eACAn0B,EAAA+D,KAAAqe,EAAA3B,KAAArkB,SAAA,SAAA6C,EAAA8wB,GACAyD,EAAAS,YAAAlE,WAEA3N,GAAA3B,KAAArkB,SACA3C,KAAAy7B,UAAA9S,EAAAhd,IACA,CAEA,IAAApF,EAAAq1B,cAAAjT,EAAA3B,MAGA,aAFA2B,GAAA3B,KACAhnB,KAAAy7B,UAAA9S,EAAAhd,IACA,EAGA,OAAApF,EAAAq1B,cAAAjT,KACAA,EAAA,KACAhd,GAAmBA,EAAA5I,KAAA/C,MAMnBA,KAAAqU,QAAA,cACA,GAIA,UASAwnB,QAAA,SAAAC,EAAAC,GACA/7B,KAAA+sB,MAAA/F,KAAA2B,OAAA,IAAAoT,KAAqD/7B,KAAAk7B,YACrDa,GAAAx1B,EAAA6sB,WAAA2I,KAAmD/7B,KAAA+sB,MAAA/F,KAAA2B,MAAAoT,EAAAh5B,KAAA/C,UAAA+sB,MAAA/F,KAAA2B,QACnD3oB,KAAA6sB,KAAA,EACA7sB,KAAA0tB,OAAAhuB,MACA2vB,KACA1tB,GAAA,IACA2tB,OAAA,KACAC,WACAC,YACAC,cACA9G,OAAc+G,QAAA,IAGd,IAAAqF,GAAA/0B,KAAA4wB,mBAAA,GAAAlV,SACAogB,IACA97B,KAAAyO,QAAApF,KAAA,cAAA0rB,EAAA,uMAAA/0B,KAAA0wB,WAAA,iCAEA1wB,KAAA8wB,UAAA,aAAArb,EAAAD,GACAA,IACAxV,KAAA4wB,mBAAA,GAAAlV,UAAAqZ,EACA/0B,KAAAy7B,UAAAl1B,EAAAjH,QAAA,KAAqCU,KAAA+sB,MAAA/F,KAAA2B,OAAA,WAMrC3oB,KAAAqU,QAAA,cAGArU,KAAA+sB,MAAA/F,KAAA2B,MAAA,QASAqT,aAAA,SAAA98B,GAEA,KADAA,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GAA+B,QAC/B,IAAAouB,MAAAkM,IAAAj8B,MAAA+sB,MAAA/F,KAAArkB,SAAA0vB,UACA4J,GAAAv6B,KAAAxC,EAAAyC,KACA,IAAAzC,EAAAypB,MAAAoH,QAAkCA,EAAAruB,KAAAxC,EAAAyC,IAClC3B,KAAAiyB,SAAA/yB,GAAA,GAAA2N,KAAA,gBAAAvC,KAAA,WAAkEylB,EAAAruB,KAAA1B,KAAA2B,MAClE3B,KAAAi1B,YAAAgH,EAAA11B,EAAA0pB,MAAA,SAAAmF,GACAp1B,KAAAgyB,UAAAjC,GAAA,KACA/vB,KAAAw6B,YAAAx6B,KAAA+sB,MAAA/F,KAAArkB,UAQA3C,KAAAqU,QAAA,gBAAkCqU,KAAAxpB,EAAAk2B,WAC9Bp1B,QASJk8B,OAAA,SAAAh9B,EAAAyC,GAEA,KADAzC,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GAA+B,QAC/B,IAAA6D,GAAA4sB,EAAAxc,EAAA5V,KAAA0tB,OAAAhuB,IAIA,KAHAiC,IAAAu1B,WAEAthB,EAAA1W,EAAAowB,QAAAE,SAAAjpB,EAAAkxB,QAAAv4B,EAAAyC,GAAAiU,EAAA1W,EAAAowB,QAAAE,WAAA7tB,EACA6D,EAAA,EAAA4sB,EAAAlzB,EAAAqwB,QAAAzsB,OAAqC0C,EAAA4sB,EAAO5sB,IAC5CoQ,EAAA1W,EAAAqwB,QAAA/pB,IAAAiqB,WAAAlpB,EAAAkxB,QAAAv4B,EAAAyC,GAAAiU,EAAA1W,EAAAqwB,QAAA/pB,IAAAiqB,aAAA9tB,CAGA,KAAA6D,EAAA,EAAA4sB,EAAAlzB,EAAAswB,SAAA1sB,OAAsC0C,EAAA4sB,EAAO5sB,IAC7CoQ,EAAA1W,EAAAswB,SAAAhqB,IAAA8pB,OAAA3tB,CAEA,KAAA6D,EAAA,EAAA4sB,EAAAlzB,EAAAuwB,WAAA3sB,OAAwC0C,EAAA4sB,EAAO5sB,IAC/CoQ,EAAA1W,EAAAuwB,WAAAjqB,IAAA+pB,QAAAhpB,EAAAkxB,QAAAv4B,EAAAyC,GAAAiU,EAAA1W,EAAAuwB,WAAAjqB,IAAA+pB,UAAA5tB,CAYA,OAVA6D,GAAAe,EAAAkxB,QAAAv4B,EAAAyC,GAAA3B,KAAA+sB,MAAA/F,KAAArkB,WACA,IAAA6C,IAAiBxF,KAAA+sB,MAAA/F,KAAArkB,SAAA6C,GAAA7D,GAEjB6D,EAAAxF,KAAAiyB,SAAA/yB,EAAAyC,IAAA,GACA6D,GACAA,EAAAumB,KAAA,KAAApqB,SAEAiU,GAAA1W,EAAAyC,IACAzC,EAAAyC,KACAiU,EAAAjU,GAAAzC,GACA,GAQAg1B,SAAA,SAAAh1B,GAEA,UADAA,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,KAAAzC,EAAAkC,MAWA+6B,SAAA,SAAAj9B,EAAA+M,GACA,GAAAmtB,GAAAC,CACA,IAAA9yB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAm8B,SAAAj9B,EAAAk6B,GAAAntB,EAEA,UAGA,UADA/M,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,MACAzC,EAAAkC,KAAA6K,EACAjM,KAAAiyB,SAAA/yB,GAAA,GAAA4D,QACA9C,KAAAo4B,YAAAl5B,EAAAyC,IASA3B,KAAAqU,QAAA,YAA4BnV,MAAAkC,KAAA6K,KAC5B,IAcAmwB,SAAA,SAAAl9B,EAAAa,EAAAs8B,GAEA,KADAn9B,EAAAc,KAAAiyB,SAAA/yB,GAAA,MACa,QACba,MAAAs8B,WAAyCA,KACzC,IASI72B,GAAA4sB,EATJ7F,GACA5qB,GAAAzC,EAAAyC,GACAP,KAAAlC,EAAAkC,KACA+lB,KAAAnnB,KAAAs8B,SAAAp9B,GACA2pB,QAAA3pB,EAAA2pB,QACAsO,OAAAj4B,EAAAi4B,OACAxO,SACAjpB,OAAAK,MAAAw8B,UAAAr9B,EAAAQ,KASA,IANAK,KAAAs8B,KACA9P,EAAA+C,OAAApwB,EAAAowB,OAGA/C,EAAAiD,aAEAzvB,MAAAy8B,SACA,IAAAh3B,IAAAtG,GAAAypB,MACAzpB,EAAAypB,MAAA0O,eAAA7xB,KACA+mB,EAAA5D,MAAAnjB,GAAAtG,EAAAypB,MAAAnjB,GAaA,IATAzF,KAAA08B,cACAlQ,GAAA5qB,GACA4qB,EAAA1D,SAAA0D,EAAA1D,QAAAlnB,UACA4qB,GAAA1D,QAAAlnB,IAGA5B,KAAAs8B,MAAA,MAAAn9B,EAAAyC,IACA06B,EAAA36B,KAAA6qB,IAEAxsB,MAAA28B,YACA,IAAAl3B,EAAA,EAAA4sB,EAAAlzB,EAAAswB,SAAA1sB,OAAuC0C,EAAA4sB,EAAO5sB,IAC9CzF,KAAAs8B,KACAr8B,KAAAo8B,SAAAl9B,EAAAswB,SAAAhqB,GAAAzF,EAAAs8B,GAGA9P,EAAAiD,SAAA9tB,KAAA1B,KAAAo8B,SAAAl9B,EAAAswB,SAAAhqB,GAAAzF,GAIA,OAAAA,MAAAs8B,OAAA,MAAAn9B,EAAAyC,GAAA4qB,EAAAiD,SAAAjD,GAaAoQ,YAAA,SAAAxG,EAAAzN,EAAAkU,EAAAjxB,EAAAgpB,GAGA,GAFA,OAAAwB,IAAqBA,EAAA,OACrBA,EAAAn2B,KAAAiyB,SAAAkE,IACa,QAEb,IADAyG,MAAA17B,EAAA,OAAA07B,GACAA,EAAA1F,WAAA2F,MAAA,sBAAAlI,IAAA30B,KAAA20B,UAAAwB,GACA,MAAAn2B,MAAA8wB,UAAAqF,EAAA,WAA4Cn2B,KAAA28B,YAAAxG,EAAAzN,EAAAkU,EAAAjxB,GAAA,IAE5C+c,KAAcA,GAAStnB,KAAApB,KAAA0wB,WAAA,cACvBhI,EAAAtnB,OAAAF,IAAgCwnB,EAAAtnB,KAAApB,KAAA0wB,WAAA,YAChC,IAAAnE,GAAA8J,EAAA7wB,EAAA4sB,CAMA,QAJA,MAAA+D,EAAAx0B,KACA,WAAAi7B,IAA0BA,EAAA,SAC1B,UAAAA,IAAyBA,EAAA,SAEzBA,GACA,aACArQ,EAAAvsB,KAAAiyB,SAAAkE,EAAA7G,QACAsN,EAAAr2B,EAAAkxB,QAAAtB,EAAAx0B,GAAA4qB,EAAAiD,UACA2G,EAAA5J,CACA,MACA,aACAA,EAAAvsB,KAAAiyB,SAAAkE,EAAA7G,QACAsN,EAAAr2B,EAAAkxB,QAAAtB,EAAAx0B,GAAA4qB,EAAAiD,UAAA,EACA2G,EAAA5J,CACA,MACA,cACA,YACAqQ,EAAA,CACA,MACA,YACAA,EAAAzG,EAAA3G,SAAA1sB,MACA,MACA,SACA85B,IAAeA,EAAA,GAKf,GAFAA,EAAAzG,EAAA3G,SAAA1sB,SAAkC85B,EAAAzG,EAAA3G,SAAA1sB,QAClC4lB,EAAA/mB,KAAiB+mB,EAAA/mB,IAAA,IACjB3B,KAAA88B,MAAA,cAAApU,EAAAyN,EAAAyG,GAEA,MADA58B,MAAAgwB,SAAAhJ,KAAAlhB,MAAA/C,KAAA/C,UAAA+sB,MAAA/F,KAAAmG,aACA,CAIA,KAFA,IAAAzE,EAAA/mB,UAAyB+mB,GAAA/mB,KACzB+mB,EAAA1oB,KAAAk4B,uBAAAxP,EAAAyN,EAAAx0B,GAAAw0B,EAAA5G,QAAA8C,WACc,QAQd,KAPA9F,EAAAvsB,KAAAiyB,SAAAvJ,GACA2N,KACAA,EAAA30B,KAAAgnB,GACA2N,IAAAhE,OAAA9F,EAAAkD,YACAzvB,KAAAqU,QAAA,SAA0B+gB,MAAAiB,EAAA/G,OAAA6G,EAAAx0B,KAE1Bw0B,EAAA1G,WAAA0G,EAAA1G,WAAA4C,OAAAgE,GACA7wB,EAAA,EAAA4sB,EAAA+D,EAAA5G,QAAAzsB,OAAqC0C,EAAA4sB,EAAO5sB,IAC5CxF,KAAA0tB,OAAAhuB,KAAAy2B,EAAA5G,QAAA/pB,IAAAiqB,WAAAzvB,KAAA0tB,OAAAhuB,KAAAy2B,EAAA5G,QAAA/pB,IAAAiqB,WAAA4C,OAAAgE,EAIA,KAFA3N,EAAA6D,EACAA,KACA/mB,EAAA,EAAA4sB,EAAA+D,EAAA3G,SAAA1sB,OAAsC0C,EAAA4sB,EAAO5sB,IAC7C+mB,EAAA/mB,GAAAo3B,EAAAp3B,EAAA,EAAAA,GAAA2wB,EAAA3G,SAAAhqB,EAgBA,OAdA+mB,GAAAqQ,GAAAlU,EAAA/mB,GACAw0B,EAAA3G,SAAAjD,EAEAvsB,KAAAo4B,YAAAjC,GAAA,GACAxqB,GAAiBA,EAAA5I,KAAA/C,UAAAiyB,SAAAvJ,IASjB1oB,KAAAqU,QAAA,eAAgCqU,KAAA1oB,KAAAiyB,SAAAvJ,GAAA4G,OAAA6G,EAAAx0B,GAAAo7B,SAAAH,IAChClU,EAAA/mB,IAUAq7B,YAAA,SAAA99B,EAAA+M,GACA,GAAAmtB,GAAAC,EAAAb,CACA,IAAAjyB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAg9B,YAAA99B,EAAAk6B,GAAAntB,EAEA,UAGA,UADA/M,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,MACA62B,EAAAt5B,EAAAkC,KACApB,KAAA88B,MAAA,cAAA59B,EAAAc,KAAAw0B,WAAAt1B,GAAA+M,IAIAjM,KAAAm8B,SAAAj9B,EAAA+M,GASAjM,KAAAqU,QAAA,eAAgCqU,KAAAxpB,EAAAkC,KAAA6K,EAAAusB,SAChC,IAbAx4B,KAAAgwB,SAAAhJ,KAAAlhB,MAAA/C,KAAA/C,UAAA+sB,MAAA/F,KAAAmG,aACA,KAqBA8P,YAAA,SAAA/9B,GACA,GAAAk6B,GAAAC,EAAAlD,EAAAyG,EAAArQ,EAAA/mB,EAAA4sB,EAAA3F,EAAA3W,EAAAif,CACA,IAAAxuB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAi9B,YAAA/9B,EAAAk6B,GAEA,UAGA,KADAl6B,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GAA+B,QAI/B,IAHAw0B,EAAAn2B,KAAAiyB,SAAA/yB,EAAAowB,QACAsN,EAAAr2B,EAAAkxB,QAAAv4B,EAAAyC,GAAAw0B,EAAA3G,UACAuF,GAAA,GACA/0B,KAAA88B,MAAA,cAAA59B,EAAAi3B,EAAAyG,GAEA,MADA58B,MAAAgwB,SAAAhJ,KAAAlhB,MAAA/C,KAAA/C,UAAA+sB,MAAA/F,KAAAmG,aACA,CAOA,MALA,IAAAyP,IACAzG,EAAA3G,SAAAjpB,EAAA+rB,OAAA4K,aAAA/G,EAAA3G,SAAAoN,IAEArQ,EAAArtB,EAAAuwB,WAAA4C,WACA9F,EAAA7qB,KAAAxC,EAAAyC,IACA8qB,EAAA,EAAA3W,EAAAyW,EAAAzpB,OAA6B2pB,EAAA3W,EAAO2W,IAAA,CACpC,IAAAjnB,EAAA,EAAA4sB,EAAAlzB,EAAAqwB,QAAAzsB,OAAsC0C,EAAA4sB,EAAO5sB,KAE7C,KADAo3B,EAAAr2B,EAAAkxB,QAAAlL,EAAAE,GAAAzsB,KAAA0tB,OAAAhuB,KAAAR,EAAAqwB,QAAA/pB,IAAAiqB,eAEAzvB,KAAA0tB,OAAAhuB,KAAAR,EAAAqwB,QAAA/pB,IAAAiqB,WAAAlpB,EAAA+rB,OAAA4K,aAAAl9B,KAAA0tB,OAAAhuB,KAAAR,EAAAqwB,QAAA/pB,IAAAiqB,WAAAmN,GAGA58B,MAAA0tB,OAAAhuB,KAAA6sB,EAAAE,IAAA9D,MAAAhmB,WACAoyB,GAAA,GAEA,KADA6H,EAAAr2B,EAAAkxB,QAAAlL,EAAAE,GAAAzsB,KAAA+sB,MAAA/F,KAAArkB,aAEA3C,KAAA+sB,MAAA/F,KAAArkB,SAAA4D,EAAA+rB,OAAA4K,aAAAl9B,KAAA+sB,MAAA/F,KAAArkB,SAAAi6B,KAeA,IAJA58B,KAAAqU,QAAA,eAAgCqU,KAAAxpB,EAAAowB,OAAA6G,EAAAx0B,KAChCozB,GACA/0B,KAAAqU,QAAA,WAA6BqR,OAAA,cAAAgD,KAAAxpB,EAAAyD,SAAA3C,KAAA+sB,MAAA/F,KAAArkB,SAAA2sB,OAAA6G,EAAAx0B,KAE7B8qB,EAAA,EAAA3W,EAAAyW,EAAAzpB,OAA6B2pB,EAAA3W,EAAO2W,UACpCzsB,MAAA0tB,OAAAhuB,KAAA6sB,EAAAE,GAGA,OADAzsB,MAAAo4B,YAAAjC,GAAA,IACA,GAaA2G,MAAA,SAAAK,EAAAj+B,EAAAi3B,EAAAyG,EAAA1tB,GACAhQ,OAAAyC,GAAAzC,EAAAc,KAAAiyB,SAAA/yB,GACAi3B,OAAAx0B,GAAAw0B,EAAAn2B,KAAAiyB,SAAAkE,EACA,IAAA5J,GAAA4Q,EAAAN,MAAA,sCAAA1G,EAAAj3B,EACAk+B,EAAAp9B,KAAAgwB,SAAAhJ,KAAAwH,cACA,qBAAA2O,GAAA,cAAAA,GACAjuB,KAAAmuB,UAAAn+B,EAAAyC,KAAAw0B,EAAAx0B,IAAA4E,EAAAkxB,QAAAv4B,EAAAyC,GAAAw0B,EAAA3G,YAAAoN,IAAA,IAAAr2B,EAAAkxB,QAAAtB,EAAAx0B,GAAAzC,EAAAuwB,aAKAlD,KAAA7sB,OAAwB6sB,IAAA7sB,MACxB6sB,KAAA+Q,aAAA,IAAA/Q,EAAA+Q,UAAAH,KAAA,IAAA5Q,EAAA+Q,UAAAH,MACA,IAAA5Q,EAAA+Q,UAAAH,KACAn9B,KAAA+sB,MAAA/F,KAAAmG,YAAmCrnB,MAAA,QAAA4mB,OAAA,OAAA/qB,GAAA,UAAAi0B,OAAA,gCAAAuH,EAAAz9B,KAAAm2B,KAAAC,WAAoIqH,MAAAP,MAAA19B,aAAAyC,KAAAzC,EAAAyC,GAAAw0B,aAAAx0B,KAAAw0B,EAAAx0B,OAEvK4qB,EAAA+Q,UAAAH,OAEA,IAAAC,GAAA72B,EAAA6sB,WAAAgK,KAAA,IAAAA,EAAAr6B,KAAA/C,KAAAm9B,EAAAj+B,EAAAi3B,EAAAyG,EAAA1tB,IAAAkuB,IAAA,IAAAA,EAAAD,MACAn9B,KAAA+sB,MAAA/F,KAAAmG,YAAkCrnB,MAAA,QAAA4mB,OAAA,OAAA/qB,GAAA,UAAAi0B,OAAA,0DAAAuH,EAAAz9B,KAAAm2B,KAAAC,WAA8JqH,MAAAP,MAAA19B,aAAAyC,KAAAzC,EAAAyC,GAAAw0B,aAAAx0B,KAAAw0B,EAAAx0B,OAChM,KAbA3B,KAAA+sB,MAAA/F,KAAAmG,YAAmCrnB,MAAA,QAAA4mB,OAAA,OAAA/qB,GAAA,UAAAi0B,OAAA,6BAAAl2B,KAAAm2B,KAAAC,WAA2HqH,MAAAP,MAAA19B,aAAAyC,KAAAzC,EAAAyC,GAAAw0B,aAAAx0B,KAAAw0B,EAAAx0B,OAC9J,IAqBAwrB,WAAA,WACA,MAAAntB,MAAA+sB,MAAA/F,KAAAmG,YAYAoQ,UAAA,SAAAr+B,EAAAi3B,EAAAyG,EAAAjxB,EAAAgpB,GACA,GAAAyE,GAAAC,EAAAmE,EAAAC,EAAAC,EAAAC,EAAAN,EAAAhH,EAAA9J,EAAA/mB,EAAA4sB,EAAA3F,EAAA3W,EAAAme,CAIA,IAFAkC,EAAAn2B,KAAAiyB,SAAAkE,GACAyG,MAAA17B,EAAA,EAAA07B,GACAzG,EAAa,QACb,KAAAyG,EAAA1F,WAAA2F,MAAA,sBAAAlI,IAAA30B,KAAA20B,UAAAwB,GACA,MAAAn2B,MAAA8wB,UAAAqF,EAAA,WAA4Cn2B,KAAAu9B,UAAAr+B,EAAAi3B,EAAAyG,EAAAjxB,GAAA,IAG5C,IAAApF,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAmc,UAAAX,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAu9B,UAAAr+B,EAAAk6B,GAAAjD,EAAAyG,EAAAjxB,EAAAgpB,EAEA,UAIA,KAFAz1B,OAAAyC,GAAAzC,EAAAc,KAAAiyB,SAAA/yB,KAEA,MAAAA,EAAAyC,GAA+B,QAO/B,IALA67B,GAAAt+B,EAAAowB,QAAA,KAAA4H,WACAwG,EAAAd,EAAA1F,WAAA2F,MAAA,2BAAA1G,EAAAx0B,GAAA3B,KAAAiyB,SAAAkE,EAAA7G,QAAA6G,EACAwH,EAAAz+B,EAAAgvB,SAAAhvB,EAAAgvB,SAAAluB,KAAA0tB,OAAAhuB,KAAAR,EAAAyC,IAAA3B,KAAAuG,EAAAud,OAAAwJ,UAAApuB,EAAAyC,IACA07B,GAAAM,MAAA/Q,KAAA5sB,KAAA4sB,MAAA+Q,EAAA/Q,IACA6Q,EAAAE,KAAA/Q,KAAA4Q,GAAAG,EAAAjQ,OAAAhuB,KAAA89B,IAAAG,EAAAjQ,OAAAhuB,KAAA89B,GAAAhO,SAAAjpB,EAAAkxB,QAAAv4B,EAAAyC,GAAAg8B,EAAAjQ,OAAAhuB,KAAA89B,GAAAhO,WAAA,EACA6N,EACA,QAAAr9B,KAAA49B,UAAA1+B,EAAAi3B,EAAAyG,EAAAjxB,EAAAgpB,KACAgJ,GAAkBA,EAAAV,YAAA/9B,IAClB,EASA,QAJA,MAAAw+B,EAAA/7B,KACA,WAAAi7B,IAA0BA,EAAA,SAC1B,UAAAA,IAAyBA,EAAA,SAEzBA,GACA,aACAA,EAAAr2B,EAAAkxB,QAAAtB,EAAAx0B,GAAA+7B,EAAAlO,SACA,MACA,aACAoN,EAAAr2B,EAAAkxB,QAAAtB,EAAAx0B,GAAA+7B,EAAAlO,UAAA,CACA,MACA,cACA,YACAoN,EAAA,CACA,MACA,YACAA,EAAAc,EAAAlO,SAAA1sB,MACA,MACA,SACA85B,IAAeA,EAAA,GAIf,GADAA,EAAAc,EAAAlO,SAAA1sB,SAAsC85B,EAAAc,EAAAlO,SAAA1sB,SACtC9C,KAAA88B,MAAA,YAAA59B,EAAAw+B,EAAAd,GAAmD5V,MAAA,EAAAqW,SAAAM,KAAA/Q,KAAA+Q,EAAA/Q,MAAA5sB,KAAA4sB,IAAAiR,YAAAF,MAAA/Q,MAEnD,MADA5sB,MAAAgwB,SAAAhJ,KAAAlhB,MAAA/C,KAAA/C,UAAA+sB,MAAA/F,KAAAmG,aACA,CAEA,IAAAjuB,EAAAowB,SAAAoO,EAAA/7B,GAAA,CAQA,IAPA00B,EAAAqH,EAAAlO,SAAA6C,SACA9F,EAAAhmB,EAAAkxB,QAAAv4B,EAAAyC,GAAA00B,IACA,IAAA9J,IACA8J,EAAA9vB,EAAA+rB,OAAA4K,aAAA7G,EAAA9J,GACAqQ,EAAArQ,GAAoBqQ,KAEpBrQ,KACA/mB,EAAA,EAAA4sB,EAAAiE,EAAAvzB,OAA8B0C,EAAA4sB,EAAO5sB,IACrC+mB,EAAA/mB,GAAAo3B,EAAAp3B,EAAA,EAAAA,GAAA6wB,EAAA7wB,EAEA+mB,GAAAqQ,GAAA19B,EAAAyC,GACA+7B,EAAAlO,SAAAjD,EACAvsB,KAAAg2B,cAAA0H,EAAA/7B,IACA3B,KAAAw2B,OAAA,MAAAkH,EAAA/7B,QAEA,CAIA,IAFA4qB,EAAArtB,EAAAuwB,WAAA4C,SACA9F,EAAA7qB,KAAAxC,EAAAyC,IACA6D,EAAA,EAAA4sB,EAAAlzB,EAAAqwB,QAAAzsB,OAAsC0C,EAAA4sB,EAAO5sB,IAAA,CAG7C,IAFA6wB,KACApC,EAAA0J,EAAAjQ,OAAAhuB,KAAAR,EAAAqwB,QAAA/pB,IAAAiqB,WACAhD,EAAA,EAAA3W,EAAAme,EAAAnxB,OAA6B2pB,EAAA3W,EAAO2W,KACpC,IAAAlmB,EAAAkxB,QAAAxD,EAAAxH,GAAAF,IACA8J,EAAA30B,KAAAuyB,EAAAxH,GAGAkR,GAAAjQ,OAAAhuB,KAAAR,EAAAqwB,QAAA/pB,IAAAiqB,WAAA4G,EAKA,IAHAsH,EAAAjQ,OAAAhuB,KAAA89B,GAAAhO,SAAAjpB,EAAA+rB,OAAA4C,kBAAAyI,EAAAjQ,OAAAhuB,KAAA89B,GAAAhO,SAAAtwB,EAAAyC,IAGA6D,EAAA,EAAA4sB,EAAAsL,EAAAnO,QAAAzsB,OAA0C0C,EAAA4sB,EAAO5sB,IACjDxF,KAAA0tB,OAAAhuB,KAAAg+B,EAAAnO,QAAA/pB,IAAAiqB,WAAAzvB,KAAA0tB,OAAAhuB,KAAAg+B,EAAAnO,QAAA/pB,IAAAiqB,WAAA4C,OAAA9F,EAGA,KADA8J,KACA7wB,EAAA,EAAA4sB,EAAAsL,EAAAlO,SAAA1sB,OAA2C0C,EAAA4sB,EAAO5sB,IAClD6wB,EAAA7wB,GAAAo3B,EAAAp3B,EAAA,EAAAA,GAAAk4B,EAAAlO,SAAAhqB,EAgBA,KAdA6wB,EAAAuG,GAAA19B,EAAAyC,GACA+7B,EAAAlO,SAAA6G,EACAqH,EAAAjO,WAAA/tB,KAAAxC,EAAAyC,IACA+7B,EAAAjO,WAAAiO,EAAAjO,WAAA4C,OAAAnzB,EAAAuwB,YAGAvwB,EAAAowB,OAAAoO,EAAA/7B,GACA4qB,EAAAmR,EAAAnO,QAAA8C,SACA9F,EAAA/a,QAAAksB,EAAA/7B,IACAsyB,EAAA/0B,EAAAqwB,QAAAzsB,OACA5D,EAAAqwB,QAAAhD,EAGAA,IAAA8F,SACA7sB,EAAA,EAAA4sB,EAAAlzB,EAAAuwB,WAAA3sB,OAAyC0C,EAAA4sB,EAAO5sB,IAChDxF,KAAA0tB,OAAAhuB,KAAAR,EAAAuwB,WAAAjqB,IAAA+pB,QAAAvvB,KAAA0tB,OAAAhuB,KAAAR,EAAAuwB,WAAAjqB,IAAA+pB,QAAA7U,MAAA,KAAAuZ,GACAlG,MAAAC,UAAAtsB,KAAA6pB,MAAAvrB,KAAA0tB,OAAAhuB,KAAAR,EAAAuwB,WAAAjqB,IAAA+pB,QAAAhD,EAGAvsB,MAAAg2B,cAAAwH,GACAx9B,KAAAg2B,cAAA0H,EAAA/7B,IACA3B,KAAAw2B,OAAA,MAAAgH,GAAA,MAAAE,EAAA/7B,IAiBA,MAfAgK,IAAiBA,EAAA5I,KAAA/C,KAAAd,EAAAw+B,EAAAd,GAcjB58B,KAAAqU,QAAA,aAA8BqU,KAAAxpB,EAAAowB,OAAAoO,EAAA/7B,GAAAo7B,SAAAH,EAAAkB,WAAAN,EAAAO,aAAAN,EAAAJ,SAAAM,KAAA/Q,KAAA+Q,EAAA/Q,MAAA5sB,KAAA4sB,IAAAiR,YAAAF,MAAA/Q,IAAAoR,aAAAL,EAAAM,aAAAj+B,QAC9B,GAYA49B,UAAA,SAAA1+B,EAAAi3B,EAAAyG,EAAAjxB,EAAAgpB,GACA,GAAAyE,GAAAC,EAAAhD,EAAA9J,EAAA/mB,EAAA4sB,EAAA1J,EAAA8U,EAAAE,EAAAC,CAIA,IAFAxH,EAAAn2B,KAAAiyB,SAAAkE,GACAyG,MAAA17B,EAAA,EAAA07B,GACAzG,EAAa,QACb,KAAAyG,EAAA1F,WAAA2F,MAAA,sBAAAlI,IAAA30B,KAAA20B,UAAAwB,GACA,MAAAn2B,MAAA8wB,UAAAqF,EAAA,WAA4Cn2B,KAAA49B,UAAA1+B,EAAAi3B,EAAAyG,EAAAjxB,GAAA,IAG5C,IAAApF,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAmc,UAAAX,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAA49B,UAAA1+B,EAAAk6B,GAAAjD,EAAAyG,EAAAjxB,EAAAgpB,EAEA,UAGA,KADAz1B,OAAAyC,GAAAzC,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GAA+B,QAU/B,QARA67B,GAAAt+B,EAAAowB,QAAA,KAAA4H,WACAwG,EAAAd,EAAA1F,WAAA2F,MAAA,2BAAA1G,EAAAx0B,GAAA3B,KAAAiyB,SAAAkE,EAAA7G,QAAA6G,EACAwH,EAAAz+B,EAAAgvB,SAAAhvB,EAAAgvB,SAAAluB,KAAA0tB,OAAAhuB,KAAAR,EAAAyC,IAAA3B,KAAAuG,EAAAud,OAAAwJ,UAAApuB,EAAAyC,KACAg8B,MAAA/Q,KAAA5sB,KAAA4sB,MAAA+Q,EAAA/Q,IACA,MAAA8Q,EAAA/7B,KACA,WAAAi7B,IAA0BA,EAAA,SAC1B,UAAAA,IAAyBA,EAAA,SAEzBA,GACA,aACAA,EAAAr2B,EAAAkxB,QAAAtB,EAAAx0B,GAAA+7B,EAAAlO,SACA,MACA,aACAoN,EAAAr2B,EAAAkxB,QAAAtB,EAAAx0B,GAAA+7B,EAAAlO,UAAA,CACA,MACA,cACA,YACAoN,EAAA,CACA,MACA,YACAA,EAAAc,EAAAlO,SAAA1sB,MACA,MACA,SACA85B,IAAeA,EAAA,GAIf,GADAA,EAAAc,EAAAlO,SAAA1sB,SAAsC85B,EAAAc,EAAAlO,SAAA1sB,SACtC9C,KAAA88B,MAAA,YAAA59B,EAAAw+B,EAAAd,GAAmD5V,MAAA,EAAAqW,SAAAM,KAAA/Q,KAAA+Q,EAAA/Q,MAAA5sB,KAAA4sB,IAAAiR,YAAAF,MAAA/Q,MAEnD,MADA5sB,MAAAgwB,SAAAhJ,KAAAlhB,MAAA/C,KAAA/C,UAAA+sB,MAAA/F,KAAAmG,aACA,CAGA,MADAzE,EAAAiV,IAAAvB,SAAAl9B,GAA2Cu9B,OAAA,EAAAF,SAAA,EAAAC,UAAA,IAAgDt9B,GAC7E,QAGd,KAFA,IAAAwpB,EAAA/mB,UAAyB+mB,GAAA/mB,KACzB+mB,EAAA1oB,KAAAk4B,uBAAAxP,EAAAgV,EAAA/7B,GAAA+7B,EAAAnO,QAAA8C,WACc,QASd,KARA9F,EAAAvsB,KAAAiyB,SAAAvJ,GACAxpB,KAAAypB,QAAA,IAAAzpB,EAAAypB,MAAA+G,SAAuDnD,EAAA5D,MAAA+G,QAAA,GACvD2G,KACAA,EAAA30B,KAAAgnB,GACA2N,IAAAhE,OAAA9F,EAAAkD,YACAzvB,KAAAqU,QAAA,SAA0B+gB,MAAAiB,EAAA/G,OAAAoO,EAAA/7B,KAG1B6D,EAAA,EAAA4sB,EAAAsL,EAAAnO,QAAAzsB,OAAyC0C,EAAA4sB,EAAO5sB,IAChDxF,KAAA0tB,OAAAhuB,KAAAg+B,EAAAnO,QAAA/pB,IAAAiqB,WAAAzvB,KAAA0tB,OAAAhuB,KAAAg+B,EAAAnO,QAAA/pB,IAAAiqB,WAAA4C,OAAAgE,EAGA,KADAA,KACA7wB,EAAA,EAAA4sB,EAAAsL,EAAAlO,SAAA1sB,OAA0C0C,EAAA4sB,EAAO5sB,IACjD6wB,EAAA7wB,GAAAo3B,EAAAp3B,EAAA,EAAAA,GAAAk4B,EAAAlO,SAAAhqB,EAyBA,OAvBA6wB,GAAAuG,GAAArQ,EAAA5qB,GACA+7B,EAAAlO,SAAA6G,EACAqH,EAAAjO,WAAA/tB,KAAA6qB,EAAA5qB,IACA+7B,EAAAjO,WAAAiO,EAAAjO,WAAA4C,OAAA9F,EAAAkD,YAEAzvB,KAAAg2B,cAAA0H,EAAA/7B,IACA3B,KAAAw2B,OAAA,MAAAkH,EAAA/7B,IACAgK,GAAiBA,EAAA5I,KAAA/C,KAAAusB,EAAAmR,EAAAd,GAejB58B,KAAAqU,QAAA,aAA8BqU,KAAA6D,EAAA6K,SAAAl4B,EAAAowB,OAAAoO,EAAA/7B,GAAAo7B,SAAAH,EAAAkB,WAAAN,EAAAO,aAAAJ,KAAA/Q,KAAA4Q,GAAAG,EAAAjQ,OAAAhuB,KAAA89B,IAAAG,EAAAjQ,OAAAhuB,KAAA89B,GAAAhO,SAAAjpB,EAAAkxB,QAAAv4B,EAAAyC,GAAAg8B,EAAAjQ,OAAAhuB,KAAA89B,GAAAhO,WAAA,EAAA6N,SAAAM,KAAA/Q,KAAA+Q,EAAA/Q,MAAA5sB,KAAA4sB,IAAAiR,YAAAF,MAAA/Q,IAAAoR,aAAAL,EAAAM,aAAAj+B,OAC9BusB,EAAA5qB,IAQAu8B,IAAA,SAAAh/B,GAGA,GAFAA,IAAaA,EAAAc,KAAA+sB,MAAA/F,KAAArkB,SAAA0vB,UACb9rB,EAAAyuB,QAAA91B,KAAwBA,QACxBA,EAAA4D,OAAoB,QACpB,IAAA2S,GAAA2jB,EAAAC,EAAA9M,IACA,KAAA6M,EAAA,EAAAC,EAAAn6B,EAAA4D,OAA+Bs2B,EAAAC,EAASD,KACxC3jB,EAAAzV,KAAAiyB,SAAA/yB,EAAAk6B,MACA3jB,EAAA9T,IAAA,MAAA8T,EAAA9T,IAAmC4qB,EAAA7qB,KAAA+T,EAEnC,KAAA8W,EAAAzpB,OAAoB,QACpB6oB,GAAAY,EACAV,EAAA7rB,KACA4rB,EAAA,YAOA5rB,KAAAqU,QAAA,OAAwBqU,KAAAxpB,KAQxBi/B,KAAA,SAAAj/B,GAGA,GAFAA,IAAaA,EAAAc,KAAA+sB,MAAA/F,KAAArkB,SAAA0vB,UACb9rB,EAAAyuB,QAAA91B,KAAwBA,QACxBA,EAAA4D,OAAoB,QACpB,IAAA2S,GAAA2jB,EAAAC,EAAA9M,IACA,KAAA6M,EAAA,EAAAC,EAAAn6B,EAAA4D,OAA+Bs2B,EAAAC,EAASD,KACxC3jB,EAAAzV,KAAAiyB,SAAA/yB,EAAAk6B,MACA3jB,EAAA9T,IAAA,MAAA8T,EAAA9T,IAAmC4qB,EAAA7qB,KAAA+T,EAEnC,KAAA8W,EAAAzpB,OAAoB,QACpB6oB,GAAAY,EACAV,EAAA7rB,KACA4rB,EAAA,YAOA5rB,KAAAqU,QAAA,QAAyBqU,KAAAxpB,KAOzBk/B,WAAA,WACA,OAAWC,KAAAzS,EAAAlD,KAAAiD,EAAA8B,KAAA5B,IAOXyS,UAAA,WACA,WAAA1S,IAAA,IAAAD,GASA4S,MAAA,SAAAr/B,EAAA09B,GAEA,MADA19B,EAAAc,KAAAiyB,SAAA/yB,KACA0sB,KAAAiR,MAAA,4BAAAlR,GAAqF,QACrF3rB,MAAA4rB,GAAAD,EAAAzsB,EAAA09B,IASA58B,KAAAqU,QAAA,SAA2Bib,OAAApwB,EAAAyC,GAAA+mB,KAAAiD,EAAA0S,KAAAzS,IAE3BD,GAAA,EACAC,GAAA,EACAC,GAAA,GAQA2S,KAAA,SAAAt/B,EAAAu/B,GAEA,KADAv/B,EAAAc,KAAAiyB,SAAA/yB,IACa,QACb,SAAAc,KAAAgwB,SAAAhJ,KAAAwH,eAGA,MAFAxuB,MAAA+sB,MAAA/F,KAAAmG,YAAkCrnB,MAAA,QAAA4mB,OAAA,OAAA/qB,GAAA,UAAAi0B,OAAA,iDAClC51B,KAAAgwB,SAAAhJ,KAAAlhB,MAAA/C,KAAA/C,UAAA+sB,MAAA/F,KAAAmG,aACA,CAEAsR,GAAA,gBAAAA,KAAAv/B,EAAAkC,KACApB,KAAAm8B,SAAAj9B,EAAA,IACAA,EAAAc,KAAA25B,SAAAz6B,EAEA,IAAAkxB,GAAApwB,KAAA+sB,MAAA/F,KAAAoJ,IACAqG,EAAAz2B,KAAAyO,QAAAoX,QACAvU,EAAApS,EAAAswB,SAAA,kBACAha,EAAAjP,EAAA;;;;;;AAOA+uB,EAAAmJ,EACAC,EAAAn4B,EAAA,WAA0B/G,KAAQu9B,SAAA,WAAAxB,IAAA,SAAAF,KAAAjL,EAAA,gBAAAuO,WAAA,YAA2Gl0B,SAAA,QAC7Im0B,EAAAr4B,EAAA,aACAxH,MAAAu2B,EACAuJ,MAAA,sBAEAr/B,KACAs/B,QAAA,IACAC,OAAA,mBACAC,aAAA,aACAvF,QAAA,eACA5I,OAAA7wB,KAAA+sB,MAAA/F,KAAA,eACAiY,WAAAj/B,KAAA+sB,MAAA/F,KAAA,eACAnB,MAAA,SAEAqZ,KAAA34B,EAAA0pB,MAAA,WACA,GAAAzqB,GAAAgQ,EAAAga,SAAA,wBACA8G,EAAA9wB,EAAAyG,KACA,MAAAqqB,IAAqBA,EAAAhB,GACrBoJ,EAAA18B,SACAwT,EAAAgJ,YAAAlN,GACAkE,EAAAxT,SACAhC,KAAAm8B,SAAAj9B,EAAAo2B,IACA,IAAAt1B,KAAAg9B,YAAA99B,EAAAqH,EAAA,eAAAnF,KAAAk1B,GAAAt2B,KAAAgwB,SAAAhJ,KAAAiI,WAAA,mBACAjvB,KAAAm8B,SAAAj9B,EAAAo2B,IAEOt1B,MACPm/B,QAAA,SAAAvuB,GACA,GAAA1O,GAAA0O,EAAA+gB,KACA,MAAAzvB,IACAlC,KAAAjB,MAAAu2B,GAEA,KAAApzB,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GACA0O,EAAAwuB,2BAEA,KAAAl9B,GAAA,KAAAA,IACA0O,EAAAZ,iBACAhQ,KAAAk/B,SAGAG,MAAA,SAAAtvB,GAA8BA,EAAAqvB,4BAC9BE,UAAA,SAAAvvB,GAAkCA,EAAAqvB,4BAClCG,MAAA,SAAA3uB,GACAguB,EAAA/Y,MAAAvL,KAAAklB,IAAAd,EAAAt9B,KAAA,KAAApB,KAAAjB,OAAA8mB,QAAA4Q,KAEAgJ,SAAA,SAAA7uB,GACA,QAAAA,EAAA+gB,MAA+B,YAG/BhE,GACA+R,WAAApuB,EAAA9R,IAAA,kBACAmgC,SAAAruB,EAAA9R,IAAA,gBACAogC,WAAAtuB,EAAA9R,IAAA,kBACAqgC,UAAAvuB,EAAA9R,IAAA,iBACAsgC,YAAAxuB,EAAA9R,IAAA,mBACAugC,YAAAzuB,EAAA9R,IAAA,mBACAwgC,cAAA1uB,EAAA9R,IAAA,qBACAygC,YAAA3uB,EAAA9R,IAAA,mBAEAgW,GAAAuW,KAAA,QAAAza,EAAAya,KAAA,UAAAxrB,OAAA+Q,EAAA6X,WAAAmH,SAAA/vB,OAAAq+B,GACAttB,EAAAkN,YAAAhJ,GACAkpB,EAAAl/B,IAAAmuB,GACAiR,EAAAp/B,IAAAmuB,GAAA9H,MAAAvL,KAAAklB,IAAAd,EAAAt9B,KAAA,KAAAw9B,EAAA,GAAA7/B,OAAA8mB,QAAA4Q,IAAA,GAAAyJ,UAWAzN,UAAA,SAAA0N,EAAAC,GACA,IAAAD,EAAoB,QACpB,SAAAC,EAAA,CACA,GAAAzR,GAAA3uB,KAAAgwB,SAAAhJ,KAAAgG,OAAA2B,GACAA,KAAcA,EAAApoB,EAAAud,OAAAlK,KAAA,WACdwmB,EAAAzR,EAAA,IAAAwR,EAAA,aAEAC,IAAA,IAAA75B,EAAAkxB,QAAA2I,EAAAtU,KACAvlB,EAAA,QAAAhG,OAAA,gCAAA6/B,EAAA,wBACAtU,EAAApqB,KAAA0+B,IAEApgC,KAAA+sB,MAAA/F,KAAAgG,OAAA7gB,MACAnM,KAAAyO,QAAA6N,YAAA,UAAAtc,KAAA+sB,MAAA/F,KAAAgG,OAAA7gB,MAEAnM,KAAA+sB,MAAA/F,KAAAgG,OAAA7gB,KAAAg0B,EACAngC,KAAAyO,QAAA8N,SAAA,UAAA4jB,GACAngC,KAAAyO,QAAAzO,KAAAgwB,SAAAhJ,KAAAgG,OAAA8B,WAAA,oCAAAqR,EAAA,eAOAngC,KAAAqU,QAAA,aAA8BgsB,MAAAF,KAO9BG,UAAA,WAA2B,MAAAtgC,MAAA+sB,MAAA/F,KAAAgG,OAAA7gB,MAM3BumB,kBAAA,SAAA6N,GACAvgC,KAAA+sB,MAAA/F,KAAAgG,OAAA6B,SACA7uB,KAAAyO,QAAA6N,YAAA,UAAAtc,KAAA+sB,MAAA/F,KAAAgG,OAAA7gB,KAAA,IAAAnM,KAAA+sB,MAAA/F,KAAAgG,OAAA6B,SAEA7uB,KAAA+sB,MAAA/F,KAAAgG,OAAA6B,QAAA0R,EACAA,GACAvgC,KAAAyO,QAAA8N,SAAA,UAAAvc,KAAA+sB,MAAA/F,KAAAgG,OAAA7gB,KAAA,IAAAnM,KAAA+sB,MAAA/F,KAAAgG,OAAA6B,UAQA2R,kBAAA,WAAmC,MAAAxgC,MAAA+sB,MAAA/F,KAAAgG,OAAA6B,SAKnC4R,aAAA,WAA8BzgC,KAAA+sB,MAAA/F,KAAAgG,OAAA4B,SAAA,EAAuC5uB,KAAA4wB,mBAAArU,SAAA,mBAKrEmkB,aAAA,WAA8B1gC,KAAA+sB,MAAA/F,KAAAgG,OAAA4B,SAAA,EAAwC5uB,KAAA4wB,mBAAAtU,YAAA,mBAKtEqkB,eAAA,WAAgC3gC,KAAA+sB,MAAA/F,KAAAgG,OAAA4B,QAAqC5uB,KAAA0gC,eAA8B1gC,KAAAygC,gBAKnGG,UAAA,WAA2B5gC,KAAA+sB,MAAA/F,KAAAgG,OAAAC,MAAA,EAAoCjtB,KAAA4wB,mBAAAtU,YAAA,mBAK/DukB,UAAA,WAA2B7gC,KAAA+sB,MAAA/F,KAAAgG,OAAAC,MAAA,EAAqCjtB,KAAA4wB,mBAAArU,SAAA,mBAKhEukB,YAAA,WAA6B9gC,KAAA+sB,MAAA/F,KAAAgG,OAAAC,KAAkCjtB,KAAA6gC,YAA2B7gC,KAAA4gC,aAK1FG,WAAA,WAA4B/gC,KAAA+sB,MAAA/F,KAAAgG,OAAAE,OAAA,EAAqCltB,KAAA4wB,mBAAAtU,YAAA,oBAKjE0kB,WAAA,WAA4BhhC,KAAA+sB,MAAA/F,KAAAgG,OAAAE,OAAA,EAAsCltB,KAAA4wB,mBAAArU,SAAA,oBAKlE0kB,aAAA,WAA8BjhC,KAAA+sB,MAAA/F,KAAAgG,OAAAE,MAAmCltB,KAAAghC,aAA4BhhC,KAAA+gC,cAO7FG,SAAA,SAAAhiC,EAAAioB,GACA,GAAAiS,GAAAC,EAAA/F,EAAAkF,CACA,IAAAjyB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAkhC,SAAAhiC,EAAAk6B,GAAAjS,EAEA,UAGA,UADAjoB,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,MACA62B,EAAAt5B,EAAAioB,KACAjoB,EAAAioB,OACAmM,EAAAtzB,KAAAiyB,SAAA/yB,GAAA,GAAAswB,SAAA,kBAAAA,SAAA,sBACA,IAAArI,EACAnnB,KAAAmhC,UAAAjiC,IAEA,IAAAioB,EACAmM,EAAAhX,YAAA,2BAAAkc,GAAAh5B,IAAA,iBAAA4hC,WAAA,QAEA,IAAAja,EAAAhjB,QAAA,WAAAgjB,EAAAhjB,QAAA,MACAmvB,EAAAhX,YAAAkc,GAAAh5B,IAAA,iBACA8zB,EAAA/W,SAAA4K,EAAA,4BAAA4E,KAAA,MAAA5E,KAGAmM,EAAAhX,YAAAkc,GAAAh5B,IAAA,iBACA8zB,EAAA/W,SAAA,2BAAA/c,IAAA,qBAAA2nB,EAAA,8BAAA4E,KAAA,MAAA5E,KAEA,IAQAmV,SAAA,SAAAp9B,GAEA,UADAA,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,KAAAzC,EAAAioB,MAOAga,UAAA,SAAAjiC,GACA,GAAAk6B,GAAAC,CACA,IAAA9yB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAmhC,UAAAjiC,EAAAk6B,GAEA,UAGA,UADAl6B,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,KACAA,EAAAioB,MAAA,EACAnnB,KAAAiyB,SAAA/yB,GAAA,GAAAswB,SAAA,kBAAAA,SAAA,qBAAAjT,SAAA,4BACA,IAOA8kB,UAAA,SAAAniC,GACA,GAAAk6B,GAAAC,EAAA/F,CACA,IAAA/sB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAqhC,UAAAniC,EAAAk6B,GAEA,UAGA,UADAl6B,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,KACAo0B,EAAAtzB,KAAAiyB,SAAA/yB,GAAA,GACAA,EAAAioB,MAAAmM,EAAAxwB,QAAAwwB,EAAA9D,SAAA,kBAAAA,SAAA,qBAAAzD,KAAA,OACA7sB,EAAAioB,OAAkBjoB,EAAAioB,MAAA,GAClBmM,EAAA9D,SAAA,kBAAAA,SAAA,qBAAAlT,YAAA,4BACA,KAKA/V,EAAA+rB,UAEA/rB,EAAA+rB,OAAA9Y,WAAA,SAAAkP,EAAA4Y,GACA5Y,EAAAniB,EAAAmiB,GAAA,EACA,IAAAqD,GAAAuV,OAUA,OATA5Y,MAAAlP,YACAjT,EAAA+D,KAAAoe,EAAAlP,WAAA,SAAAhU,EAAA8wB,IACA,IAAA/vB,EAAAkxB,QAAAnB,EAAAiL,SAAAt9B,eAAA,mDACA,OAAAqyB,EAAA7F,WAAA,KAAAlqB,EAAAuZ,KAAAwW,EAAA7F,aACA6Q,EAAsBvV,EAAAuK,EAAAiL,UAAAjL,EAAA7F,UACX1E,EAAArqB,KAAA40B,EAAAiL,aAIXxV,GAEAxlB,EAAA+rB,OAAAC,aAAA,SAAAiP,GACA,GAAAh8B,GAAA4sB,EAAAtc,EAAAxE,IACA,KAAA9L,EAAA,EAAAsQ,EAAA0rB,EAAA1+B,OAA8B0C,EAAAsQ,EAAOtQ,IAAA,CACrC,IAAA4sB,EAAA,EAAaA,GAAA5sB,GACbg8B,EAAAh8B,KAAAg8B,EAAApP,GADqBA,KAKrBA,IAAA5sB,GAAgB8L,EAAA5P,KAAA8/B,EAAAh8B,IAEhB,MAAA8L,IAGA/K,EAAA+rB,OAAA4K,aAAA,SAAAsE,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAA9mB,OAAAgnB,GAAAD,GAAA,GAAAD,EAAA1+B,OAGA,OAFA0+B,GAAA1+B,OAAA2+B,EAAA,EAAAD,EAAA1+B,OAAA2+B,IACAD,EAAA9/B,KAAA6pB,MAAAiW,EAAAG,GACAH,GAGAj7B,EAAA+rB,OAAA4C,kBAAA,SAAAsM,EAAAl9B,GACA,GAAAioB,GAAAhmB,EAAAkxB,QAAAnzB,EAAAk9B,EACA,YAAAjV,EAAAhmB,EAAA+rB,OAAA4K,aAAAsE,EAAAjV,GAAAiV,EAUA,IAAAI,GAAAtrB,SAAAN,cAAA,IACA4rB,GAAAlmB,UAAA,8BAMAnV,EAAAud,OAAA1e,SAAAgX,UAMAylB,SAAA,EAMAxa,aAAA,EAMAya,YAAA,EAMAC,qBAAA,EAQAC,QAAA,GAMAC,eAAA,GAEA17B,EAAAud,OAAAmD,QAAA7K,SAAA,SAAArc,EAAAuvB,GACAtvB,KAAAsT,KAAA,WACAgc,EAAAhc,KAAAvQ,KAAA/C,MACAA,KAAA+sB,MAAA3Q,SAAA8lB,KAAA,EACAliC,KAAA+sB,MAAA3Q,SAAAzZ,YACA3C,KAAAgwB,SAAA5T,SAAAiL,cACArnB,KAAAgwB,SAAA5T,SAAA4lB,QAAA,wBAEAhiC,KAAAyO,QACA3N,GAAA,cAAAyF,EAAA0pB,MAAA,WACAjwB,KAAA+sB,MAAA3Q,SAAAylB,QAAA7hC,KAAAgwB,SAAA5T,SAAAylB,QACA7hC,KAAAgwB,SAAA5T,SAAA2lB,qBACA/hC,KAAAyO,QAAA8N,SAAA,8BAEAvc,KAAAgwB,SAAA5T,SAAA6lB,eACAjiC,KAAAyO,QAAA8N,SAAA,8BAEMvc,OACNc,GAAA,iBAAAyF,EAAA0pB,MAAA,WACAjwB,UAAA+sB,MAAA3Q,SAAAylB,QAAA,wCACM7hC,QACN,IAAAA,KAAAgwB,SAAA5T,SAAA4lB,QAAA79B,QAAA,iBACAnE,KAAAyO,QACA3N,GAAA,4JAAAyF,EAAA0pB,MAAA,WAEAjwB,KAAA+sB,MAAA3Q,SAAA8lB,KAAoCC,aAAAniC,KAAA+sB,MAAA3Q,SAAA8lB,KACpCliC,KAAA+sB,MAAA3Q,SAAA8lB,IAAA1P,WAAAjsB,EAAA0pB,MAAAjwB,KAAAoiC,cAAApiC,MAAA,KACOA,OAEPA,KAAAgwB,SAAA5T,SAAA6lB,eACAjiC,KAAAyO,QACA3N,GAAA,eAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACA,GAGA8F,GAAA4sB,EAHAxc,EAAA5V,KAAA0tB,OAAAhuB,KAEA22B,GADAzgB,EAAAlW,EAAA4vB,QACA5vB,EAAA01B,MAEA,KAAA5vB,EAAA,EAAA4sB,EAAAiE,EAAAvzB,OAAgC0C,EAAA4sB,EAAO5sB,IACvCoQ,EAAAygB,EAAA7wB,IAAAmjB,MAAA7M,QAAAlG,EAAAygB,EAAA7wB,IAAA4xB,UAAAxhB,EAAAygB,EAAA7wB,IAAA4xB,SAAAzO,OAAA/S,EAAAygB,EAAA7wB,IAAA4xB,SAAAzO,MAAA7M,QACAlG,EAAAygB,EAAA7wB,IAAAmjB,MAAA7M,SACA9b,KAAA+sB,MAAA3Q,SAAAzZ,SAAAjB,KAAA20B,EAAA7wB,KAGMxF,QAEN,IAAAA,KAAAgwB,SAAA5T,SAAA4lB,QAAA79B,QAAA,YAAAnE,KAAAgwB,SAAA5T,SAAA4lB,QAAA79B,QAAA,SACAnE,KAAAyO,QACA3N,GAAA,eAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACA,GAIAq1B,GAAAvvB,EAAA4sB,EAAA3F,EAAA3W,EAAAyW,EAJA3W,EAAA5V,KAAA0tB,OAAAhuB,KACAu0B,EAAAre,EAAAlW,EAAA4vB,QACA+G,EAAA32B,EAAA01B,MACAgB,KACA5gB,EAAAxV,KAAAgwB,SAAA5T,SAAA4lB,QAAA1M,EAAAt1B,KAAAgwB,SAAA5T,SAAA6lB,aAEA,SAAAzsB,EAAArR,QAAA,QAEA,GAAA8vB,EAAAtL,MAAA2M,EAAA,uBACA,IAAA9vB,EAAA,EAAA4sB,EAAAiE,EAAAvzB,OAAmC0C,EAAA4sB,EAAO5sB,IAC1CoQ,EAAAygB,EAAA7wB,IAAAmjB,MAAA2M,EAAA,wBAEAt1B,MAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAA3C,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAA0vB,OAAAgE,OAGA,KAAA7wB,EAAA,EAAA4sB,EAAAiE,EAAAvzB,OAAmC0C,EAAA4sB,EAAO5sB,IAC1C,GAAAoQ,EAAAygB,EAAA7wB,IAAAmjB,MAAA2M,EAAA,uBACA,IAAA7I,EAAA,EAAA3W,EAAAF,EAAAygB,EAAA7wB,IAAAiqB,WAAA3sB,OAAsD2pB,EAAA3W,EAAO2W,IAC7D7W,IAAAygB,EAAA7wB,IAAAiqB,WAAAhD,IAAA9D,MAAA2M,EAAA,wBAEAt1B,MAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAA3C,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAA0vB,OAAAzc,EAAAygB,EAAA7wB,IAAAiqB,YAMA,QAAAja,EAAArR,QAAA,OAEA,IAAAqB,EAAA,EAAA4sB,EAAA6B,EAAAxE,WAAA3sB,OAA2C0C,EAAA4sB,EAAO5sB,IAClDoQ,EAAAqe,EAAAxE,WAAAjqB,IAAAgqB,SAAA1sB,QACAszB,EAAA10B,KAAAkU,EAAAqe,EAAAxE,WAAAjqB,IAAA8pB,OAIA,KADA8G,EAAA7vB,EAAA+rB,OAAAC,aAAA6D,GACA3J,EAAA,EAAA3W,EAAAsgB,EAAAtzB,OAAkC2pB,EAAA3W,EAAO2W,IAEzC,IADAwH,EAAAre,EAAAwgB,EAAA3J,IACAwH,GAAA,MAAAA,EAAAtyB,IAAA,CAEA,IADAozB,EAAA,EACAvvB,EAAA,EAAA4sB,EAAA6B,EAAAzE,SAAA1sB,OAA2C0C,EAAA4sB,EAAO5sB,IAClDuvB,GAAAnf,EAAAqe,EAAAzE,SAAAhqB,IAAAmjB,MAAA2M,EAAA,qBAEA,IAAAP,IAAA3C,EASA,KARA6B,GAAAtL,MAAA2M,EAAA,yBACAt1B,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAAjB,KAAAuyB,EAAAtyB,KACA4qB,EAAAvsB,KAAAiyB,SAAAgC,GAAA,KACA1H,EAAAzpB,QACAypB,EAAAiD,SAAA,kBAAAjT,SAAA+Y,EAAA,mCAMArB,EAAAj0B,KAAAiyB,SAAAgC,EAAA3E,SAKAtvB,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAA4D,EAAA+rB,OAAAC,aAAAvyB,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,WACO3C,OACPc,GAAAd,KAAAgwB,SAAA5T,SAAA6lB,cAAA,yCAAA17B,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACA,GAIA8F,GAAA4sB,EAAA2C,EAAAxI,EAJArtB,EAAAQ,EAAAgpB,KACA9S,EAAA5V,KAAA0tB,OAAAhuB,KACAy2B,EAAAn2B,KAAAiyB,SAAA/yB,EAAAowB,QACAgE,EAAAtzB,KAAAiyB,SAAA/yB,GAAA,GACAsW,EAAAxV,KAAAgwB,SAAA5T,SAAA4lB,QAAA1M,EAAAt1B,KAAAgwB,SAAA5T,SAAA6lB,aAGA,SAAAzsB,EAAArR,QAAA,QAEA,IADAnE,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAA4D,EAAA+rB,OAAAC,aAAAvyB,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAA0vB,OAAAnzB,EAAAuwB,aACAjqB,EAAA,EAAA4sB,EAAAlzB,EAAAuwB,WAAA3sB,OAA6C0C,EAAA4sB,EAAO5sB,IACpD+mB,EAAA3W,EAAA1W,EAAAuwB,WAAAjqB,IACA+mB,EAAA5D,MAAA2M,EAAA,yBACA/I,KAAA6K,UAAA7K,EAAA6K,SAAAzO,OAAA4D,EAAA6K,SAAAzO,MAAA0Z,eACA9V,EAAA6K,SAAAzO,MAAA0Z,cAAA,EAMA,SAAA7sB,EAAArR,QAAA,MACA,KAAAgyB,GAAA,MAAAA,EAAAx0B,IAAA,CAEA,IADAozB,EAAA,EACAvvB,EAAA,EAAA4sB,EAAA+D,EAAA3G,SAAA1sB,OAA4C0C,EAAA4sB,EAAO5sB,IACnDuvB,GAAAnf,EAAAugB,EAAA3G,SAAAhqB,IAAAmjB,MAAA2M,EAAA,qBAEA,IAAAP,IAAA3C,EASA,KARA+D,GAAAxN,MAAA2M,EAAA,yBACAt1B,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAAjB,KAAAy0B,EAAAx0B,KACA4qB,EAAAvsB,KAAAiyB,SAAAkE,GAAA,KACA5J,EAAAzpB,QACAypB,EAAAiD,SAAA,kBAAAjT,SAAA+Y,EAAA,mCAMAa,EAAAn2B,KAAAiyB,SAAAkE,EAAA7G,SAKA,IAAA9Z,EAAArR,QAAA,SAAAmvB,EAAAxwB,QACAwwB,EAAAzmB,KAAA,kBAAA0P,SAAA+Y,EAAA,oCAEOt1B,OACPc,GAAAd,KAAAgwB,SAAA5T,SAAA6lB,cAAA,2CAAA17B,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACA,GAEA8F,GAAA4sB,EAAA7F,EAFArtB,EAAAc,KAAAiyB,SAAA,KACArc,EAAA5V,KAAA0tB,OAAAhuB,IAEA,KAAA8F,EAAA,EAAA4sB,EAAAlzB,EAAAuwB,WAAA3sB,OAA4C0C,EAAA4sB,EAAO5sB,KACnD+mB,EAAA3W,EAAA1W,EAAAuwB,WAAAjqB,MACA+mB,EAAA6K,UAAA7K,EAAA6K,SAAAzO,OAAA4D,EAAA6K,SAAAzO,MAAA0Z,eACA9V,EAAA6K,SAAAzO,MAAA0Z,cAAA,IAGOriC,OACPc,GAAAd,KAAAgwB,SAAA5T,SAAA6lB,cAAA,6CAAA17B,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACA,GAEA8F,GAAA4sB,EAAA7F,EAFArtB,EAAAQ,EAAAgpB,KACA4K,EAAAtzB,KAAAiyB,SAAA/yB,GAAA,GACAsW,EAAAxV,KAAAgwB,SAAA5T,SAAA4lB,QAAA1M,EAAAt1B,KAAAgwB,SAAA5T,SAAA6lB,aAMA,IALA/iC,KAAAk4B,UAAAl4B,EAAAk4B,SAAAzO,OAAAzpB,EAAAk4B,SAAAzO,MAAA0Z,eACAnjC,EAAAk4B,SAAAzO,MAAA0Z,cAAA,IAIA,IAAA7sB,EAAArR,QAAA,QACA,IAAAqB,EAAA,EAAA4sB,EAAAlzB,EAAAuwB,WAAA3sB,OAA6C0C,EAAA4sB,EAAO5sB,IACpD+mB,EAAAvsB,KAAA0tB,OAAAhuB,KAAAR,EAAAuwB,WAAAjqB,IACA+mB,EAAA5D,MAAA2M,EAAA,yBACA/I,KAAA6K,UAAA7K,EAAA6K,SAAAzO,OAAA4D,EAAA6K,SAAAzO,MAAA0Z,eACA9V,EAAA6K,SAAAzO,MAAA0Z,cAAA,EAMA,SAAA7sB,EAAArR,QAAA,MACA,IAAAqB,EAAA,EAAA4sB,EAAAlzB,EAAAqwB,QAAAzsB,OAA0C0C,EAAA4sB,EAAO5sB,IACjD+mB,EAAAvsB,KAAA0tB,OAAAhuB,KAAAR,EAAAqwB,QAAA/pB,IACA+mB,EAAA5D,MAAA2M,EAAA,yBACA/I,KAAA6K,UAAA7K,EAAA6K,SAAAzO,OAAA4D,EAAA6K,SAAAzO,MAAA0Z,eACA9V,EAAA6K,SAAAzO,MAAA0Z,cAAA,IAEA9V,EAAAvsB,KAAAiyB,SAAA/yB,EAAAqwB,QAAA/pB,IAAA,KACA+mB,EAAAzpB,QACAypB,EAAAiD,SAAA,kBAAAlT,YAAAgZ,EAAA,kCAKA,KADA/I,KACA/mB,EAAA,EAAA4sB,EAAApyB,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAAG,OAA4E0C,EAAA4sB,EAAO5sB,KAGnF,IAAAgQ,EAAArR,QAAA,cAAAoC,EAAAkxB,QAAAz3B,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAA6C,GAAAtG,EAAAuwB,cACA,IAAAja,EAAArR,QAAA,YAAAoC,EAAAkxB,QAAAz3B,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAA6C,GAAAtG,EAAAqwB,UAEAhD,EAAA7qB,KAAA1B,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAA6C,GAGAxF,MAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAA4D,EAAA+rB,OAAAC,aAAAhG,IAGA,IAAA/W,EAAArR,QAAA,SAAAmvB,EAAAxwB,QACAwwB,EAAAzmB,KAAA,kBAAAyP,YAAAgZ,EAAA,oCAEOt1B,QAEP,IAAAA,KAAAgwB,SAAA5T,SAAA4lB,QAAA79B,QAAA,OACAnE,KAAAyO,QACA3N,GAAA,qBAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GAKA,IAHA,GAEA8F,GAAA4sB,EAAA2C,EAAAxI,EAFA0H,EAAAj0B,KAAAiyB,SAAAvyB,EAAA4vB,QACA1Z,EAAA5V,KAAA0tB,OAAAhuB,KACA41B,EAAAt1B,KAAAgwB,SAAA5T,SAAA6lB,cACAhO,GAAA,MAAAA,EAAAtyB,IAAA,CAEA,IADAozB,EAAA,EACAvvB,EAAA,EAAA4sB,EAAA6B,EAAAzE,SAAA1sB,OAAyC0C,EAAA4sB,EAAO5sB,IAChDuvB,GAAAnf,EAAAqe,EAAAzE,SAAAhqB,IAAAmjB,MAAA2M,EAAA,qBAEA,IAAAP,IAAA3C,EASA,KARA6B,GAAAtL,MAAA2M,EAAA,yBACAt1B,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAAjB,KAAAuyB,EAAAtyB,KACA4qB,EAAAvsB,KAAAiyB,SAAAgC,GAAA,KACA1H,EAAAzpB,QACAypB,EAAAiD,SAAA,kBAAAjT,SAAA+Y,EAAA,mCAMArB,EAAAj0B,KAAAiyB,SAAAgC,EAAA3E,UAEOtvB,OACPc,GAAA,mBAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GAEA,GAIAu0B,GAAAc,EAAAvvB,EAAA4sB,EAAA7F,EAJA8Q,EAAA39B,EAAA29B,SACAG,EAAA99B,EAAAo+B,WACAJ,EAAA19B,KAAAiyB,SAAAvyB,EAAA4vB,QACA1Z,EAAA5V,KAAA0tB,OAAAhuB,KACA41B,EAAAt1B,KAAAgwB,SAAA5T,SAAA6lB,aACA,KAAA5E,EAEA,IADApJ,EAAAj0B,KAAAiyB,SAAAuL,GACAvJ,GAAA,MAAAA,EAAAtyB,IAAA,CAEA,IADAozB,EAAA,EACAvvB,EAAA,EAAA4sB,EAAA6B,EAAAzE,SAAA1sB,OAA0C0C,EAAA4sB,EAAO5sB,IACjDuvB,GAAAnf,EAAAqe,EAAAzE,SAAAhqB,IAAAmjB,MAAA2M,EAAA,qBAEA,IAAAP,IAAA3C,EASA,KARA6B,GAAAtL,MAAA2M,EAAA,yBACAt1B,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAAjB,KAAAuyB,EAAAtyB,KACA4qB,EAAAvsB,KAAAiyB,SAAAgC,GAAA,KACA1H,EAAAzpB,QACAypB,EAAAiD,SAAA,kBAAAjT,SAAA+Y,EAAA,mCAMArB,EAAAj0B,KAAAiyB,SAAAgC,EAAA3E,QAIA,IADA2E,EAAAyJ,EACAzJ,GAAA,MAAAA,EAAAtyB,IAAA,CAEA,IADAozB,EAAA,EACAvvB,EAAA,EAAA4sB,EAAA6B,EAAAzE,SAAA1sB,OAAyC0C,EAAA4sB,EAAO5sB,IAChDuvB,GAAAnf,EAAAqe,EAAAzE,SAAAhqB,IAAAmjB,MAAA2M,EAAA,qBAEA,IAAAP,IAAA3C,EACA6B,EAAAtL,MAAA2M,EAAA,wBACArB,EAAAtL,MAAA2M,EAAA,yBACAt1B,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAAjB,KAAAuyB,EAAAtyB,KACA4qB,EAAAvsB,KAAAiyB,SAAAgC,GAAA,KACA1H,EAAAzpB,QACAypB,EAAAiD,SAAA,kBAAAjT,SAAA+Y,EAAA,wCAIA,CACA,IAAArB,EAAAtL,MAAA2M,EAAA,sBASA,KARArB,GAAAtL,MAAA2M,EAAA,yBACAt1B,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAA4D,EAAA+rB,OAAA4C,kBAAAl1B,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAAsxB,EAAAtyB,KACA4qB,EAAAvsB,KAAAiyB,SAAAgC,GAAA,KACA1H,EAAAzpB,QACAypB,EAAAiD,SAAA,kBAAAlT,YAAAgZ,EAAA,mCAOArB,EAAAj0B,KAAAiyB,SAAAgC,EAAA3E,UAEOtvB,QASPA,KAAAoiC,cAAA,WACA,GAAA58B,GAAA4sB,EAAAxc,EAAA5V,KAAA0tB,OAAAhuB,KAAA41B,EAAAt1B,KAAAgwB,SAAA5T,SAAA6lB,cAAAzsB,EAAAxV,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAAsxB,KAAAqO,EAAAtiC,IACA,KAAAwF,EAAA,EAAA4sB,EAAA5c,EAAA1S,OAA2B0C,EAAA4sB,EAAO5sB,IAClCoQ,EAAAJ,EAAAhQ,KAAAoQ,EAAAJ,EAAAhQ,IAAA+pB,UACA0E,IAAA5B,OAAAzc,EAAAJ,EAAAhQ,IAAA+pB,SA2BA,KAvBAvvB,KAAAyO,QAAA5B,KAAA,kBAAA+lB,IAAA,0BACAtoB,KAAA,WACA,GAAAi4B,GAAAhW,EAAA+V,EAAArQ,SAAAjyB,KACA,IAAAusB,EAAA5D,MAAA+G,OAOA,IAAAlqB,EAAA,EAAA4sB,EAAA7F,EAAAkD,WAAA3sB,OAA2C0C,EAAA4sB,EAAO5sB,IAClD+8B,EAAA3sB,EAAA2W,EAAAkD,WAAAjqB,KACA+8B,EAAA5Z,MAAA+G,QAAA6S,EAAAnL,UAAAmL,EAAAnL,SAAAzO,OAAA4Z,EAAAnL,SAAAzO,MAAA0Z,eAAA,IAAAE,EAAAnL,SAAAzO,MAAA0Z,eACApO,EAAAvyB,KAAA6gC,EAAA5gC,IACAsyB,IAAA5B,OAAAkQ,EAAAhT,cAVAhD,GAAA6K,UAAA7K,EAAA6K,SAAAzO,OAAA4D,EAAA6K,SAAAzO,MAAA0Z,eAAA,IAAA9V,EAAA6K,SAAAzO,MAAA0Z,eACApO,EAAAvyB,KAAA6qB,EAAA5qB,IACAsyB,IAAA5B,OAAA9F,EAAAgD,YAaA0E,EAAA1tB,EAAA+rB,OAAAC,aAAA0B,GACAA,EAAA1tB,EAAA+rB,OAAA4C,kBAAAjB,EAAA,KAEAj0B,KAAAyO,QAAA5B,KAAA,wBAAAyP,YAAA,uBACA9W,EAAA,EAAA4sB,EAAA6B,EAAAnxB,OAA2B0C,EAAA4sB,EAAO5sB,IAClCoQ,EAAAqe,EAAAzuB,IAAAmjB,MAAA2M,EAAA,wBACA9f,EAAAxV,KAAAiyB,SAAAgC,EAAAzuB,IAAA,KACAgQ,EAAA1S,QACA0S,EAAAga,SAAA,kBAAAA,SAAA,oBAAAjT,SAAA,wBAKAvc,KAAAo4B,YAAA,SAAAl5B,EAAAo5B,EAAAjD,GAEA,GADAn2B,EAAAowB,EAAA8I,YAAAr1B,KAAA/C,KAAAd,EAAAo5B,EAAAjD,GACA,CACA,GAAA7vB,GAAA4sB,EAAA7F,EAAA,IACA,KAAA/mB,EAAA,EAAA4sB,EAAAlzB,EAAA25B,WAAA/1B,OAAyC0C,EAAA4sB,EAAO5sB,IAChD,GAAAtG,EAAA25B,WAAArzB,IAAAtG,EAAA25B,WAAArzB,GAAAkW,YAAA,IAAAxc,EAAA25B,WAAArzB,GAAAkW,UAAAvX,QAAA,kBACAooB,EAAArtB,EAAA25B,WAAArzB,EACA,OAGA+mB,KACAvsB,KAAAgwB,SAAA5T,SAAA6lB,eAAAjiC,KAAA0tB,OAAAhuB,KAAAR,EAAAyC,IAAAgnB,MAAA7M,UAA0FyQ,EAAA7Q,WAAA,mBAC1F6Q,EAAAlW,aAAAurB,EAAAhJ,WAAA,GAAArM,EAAAsM,WAAA,KAOA,MAJAxD,KAAA,IAAAr1B,KAAAgwB,SAAA5T,SAAA4lB,QAAA79B,QAAA,kBACAnE,KAAA+sB,MAAA3Q,SAAA8lB,KAAiCC,aAAAniC,KAAA+sB,MAAA3Q,SAAA8lB,KACjCliC,KAAA+sB,MAAA3Q,SAAA8lB,IAAA1P,WAAAjsB,EAAA0pB,MAAAjwB,KAAAoiC,cAAApiC,MAAA,KAEAd,GAOAc,KAAAwiC,gBAAA,WAAsCxiC,KAAA+sB,MAAA/F,KAAAgG,OAAAyV,YAAA,EAA0CziC,KAAA4wB,mBAAAtU,YAAA,yBAMhFtc,KAAA0iC,gBAAA,WAAsC1iC,KAAA+sB,MAAA/F,KAAAgG,OAAAyV,YAAA,EAA2CziC,KAAA4wB,mBAAArU,SAAA,yBAMjFvc,KAAA2iC,kBAAA,WAAwC3iC,KAAA+sB,MAAA/F,KAAAgG,OAAAyV,WAAwCziC,KAAA0iC,kBAAiC1iC,KAAAwiC,mBAOjHxiC,KAAA4iC,gBAAA,SAAA1jC,GACAA,EAAAc,KAAAiyB,SAAA/yB,EACA,IAAAsG,GAAA4sB,EAAA5c,EAAAxV,KAAAgwB,SAAA5T,SAAA4lB,QAAA1M,EAAAt1B,KAAAgwB,SAAA5T,SAAA6lB,cAAA1M,EAAAv1B,KAAA+sB,MAAAuI,EAAA,mBAAA3yB,SAAAiT,EAAA5V,KAAA0tB,OAAAhuB,IACA,KAAAR,IAAA,IAAAA,EAAAypB,MAAA2M,EAAA,4BAAA9f,EAAArR,QAAA,sBAAAqR,EAAArR,QAAA,cAAAqR,EAAArR,QAAA,MACA,QAEA,KAAAjF,EAAAypB,MAAA+G,SAAA,IAAAxwB,EAAAk4B,SAAAzO,MAAA0Z,aACA,QAEA,KAAA78B,EAAA,EAAA4sB,EAAAlzB,EAAAuwB,WAAA3sB,OAAwC0C,EAAA4sB,EAAO5sB,IAC/C,QAAAe,EAAAkxB,QAAAv4B,EAAAuwB,WAAAjqB,GAAA+vB,KAAA3f,EAAA1W,EAAAuwB,WAAAjqB,IAAAmjB,MAAA+G,QAAA9Z,EAAA1W,EAAAuwB,WAAAjqB,IAAA4xB,SAAAzO,MAAA0Z,aACA,QAGA,WAGAriC,KAAAyxB,cAAA,SAAAvyB,EAAA6Q,GAIA,GAHA/P,KAAAgwB,SAAA5T,SAAA6lB,gBAAAjiC,KAAAgwB,SAAA5T,SAAA0lB,YAAAv7B,EAAAwJ,EAAA8L,QAAAyS,SAAA,sBACAve,EAAAuqB,SAAA,GAEAt6B,KAAAgwB,SAAA5T,SAAA6lB,gBAAAjiC,KAAAgwB,SAAA5T,SAAA0lB,aAAAv7B,EAAAwJ,EAAA8L,QAAAyS,SAAA,mBACA,MAAAgB,GAAAmC,cAAA1uB,KAAA/C,KAAAd,EAAA6Q,EAEA/P,MAAA6iC,WAAA3jC,GACAc,KAAA8iC,aAAA5jC,EAAA6Q,GAGA/P,KAAA+iC,WAAA7jC,EAAA6Q,GAEA/P,KAAAqU,QAAA,iBAAkCqU,KAAA1oB,KAAAiyB,SAAA/yB,MAUlCc,KAAA+iC,WAAA,SAAA7jC,EAAA6Q,GACA,GAAA/P,KAAAgwB,SAAA5T,SAAA6lB,cAA6C,MAAAjiC,MAAAw6B,YAAAt7B,GAAA,KAAA6Q,EAC7C,IAAAujB,GAAA8F,EAAAC,CACA,IAAA9yB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAA+iC,WAAA7jC,EAAAk6B,GAAArpB,EAEA,UAGA,KADA7Q,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GACA,QAEA2xB,GAAAtzB,KAAAiyB,SAAA/yB,GAAA,GACAA,EAAAypB,MAAA7M,UACA5c,EAAAypB,MAAA7M,SAAA,EACA9b,KAAA+sB,MAAA3Q,SAAAzZ,SAAAjB,KAAAxC,EAAAyC,IACA2xB,KAAAxwB,QACAwwB,EAAA9D,SAAA,kBAAAjT,SAAA,kBAWAvc,KAAAqU,QAAA,cAAgCqU,KAAAxpB,EAAAyD,SAAA3C,KAAA+sB,MAAA3Q,SAAAzZ,SAAAiO,MAAAb,MAUhC/P,KAAA8iC,aAAA,SAAA5jC,EAAA6Q,GACA,GAAA/P,KAAAgwB,SAAA5T,SAAA6lB,cAA6C,MAAAjiC,MAAAy6B,cAAAv7B,GAAA,EAAA6Q,EAC7C,IAAAqpB,GAAAC,EAAA/F,CACA,IAAA/sB,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAA8iC,aAAA5jC,EAAAk6B,GAAArpB,EAEA,UAGA,KADA7Q,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GACA,QAEA2xB,GAAAtzB,KAAAiyB,SAAA/yB,GAAA,GACAA,EAAAypB,MAAA7M,UACA5c,EAAAypB,MAAA7M,SAAA,EACA9b,KAAA+sB,MAAA3Q,SAAAzZ,SAAA4D,EAAA+rB,OAAA4C,kBAAAl1B,KAAA+sB,MAAA3Q,SAAAzZ,SAAAzD,EAAAyC,IACA2xB,EAAAxwB,QACAwwB,EAAA9D,SAAA,kBAAAlT,YAAA,kBAWAtc,KAAAqU,QAAA,gBAAkCqU,KAAAxpB,EAAAyD,SAAA3C,KAAA+sB,MAAA3Q,SAAAzZ,SAAAiO,MAAAb,MASlC/P,KAAAgjC,UAAA,WACA,GAAAhjC,KAAAgwB,SAAA5T,SAAA6lB,cAA6C,MAAAjiC,MAAA66B,YAC7C,IAAAr1B,GAAA4sB,CAAApyB,MAAA+sB,MAAA3Q,SAAAzZ,SAAA0vB,UAEA,KADAryB,KAAA+sB,MAAA3Q,SAAAzZ,SAAA3C,KAAA0tB,OAAAhuB,KAAA,KAAA+vB,WAAA4C,SACA7sB,EAAA,EAAA4sB,EAAApyB,KAAA+sB,MAAA3Q,SAAAzZ,SAAAG,OAAsD0C,EAAA4sB,EAAO5sB,IAC7DxF,KAAA0tB,OAAAhuB,KAAAM,KAAA+sB,MAAA3Q,SAAAzZ,SAAA6C,MACAxF,KAAA0tB,OAAAhuB,KAAAM,KAAA+sB,MAAA3Q,SAAAzZ,SAAA6C,IAAAmjB,MAAA7M,SAAA,EAGA9b,MAAAw2B,QAAA,GAQAx2B,KAAAqU,QAAA,aAA8B1R,SAAA3C,KAAA+sB,MAAA3Q,SAAAzZ,YAQ9B3C,KAAAijC,YAAA,WACA,GAAAjjC,KAAAgwB,SAAA5T,SAAA6lB,cAA6C,MAAAjiC,MAAA06B,cAC7C,IAAAl1B,GAAA4sB,EAAA7F,EAAAvsB,KAAA+sB,MAAA3Q,SAAAzZ,SAAA0vB,UACA,KAAA7sB,EAAA,EAAA4sB,EAAApyB,KAAA+sB,MAAA3Q,SAAAzZ,SAAAG,OAAsD0C,EAAA4sB,EAAO5sB,IAC7DxF,KAAA0tB,OAAAhuB,KAAAM,KAAA+sB,MAAA3Q,SAAAzZ,SAAA6C,MACAxF,KAAA0tB,OAAAhuB,KAAAM,KAAA+sB,MAAA3Q,SAAAzZ,SAAA6C,IAAAmjB,MAAA7M,SAAA,EAGA9b,MAAA+sB,MAAA3Q,SAAAzZ,YACA3C,KAAAyO,QAAA5B,KAAA,mBAAAyP,YAAA,kBASAtc,KAAAqU,QAAA,eAAgC1R,SAAA3C,KAAA+sB,MAAA3Q,SAAAzZ,SAAA+lB,KAAA6D,KAShCvsB,KAAA6iC,WAAA,SAAA3jC,GACA,MAAAc,MAAAgwB,SAAA5T,SAAA6lB,cAA6CjiC,KAAAmyB,YAAAjzB,OAC7CA,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,KACAzC,EAAAypB,MAAA7M,SASA9b,KAAAkjC,YAAA,SAAA7K,GACA,MAAAr4B,MAAAgwB,SAAA5T,SAAA6lB,cAA6CjiC,KAAAwoB,aAAA6P,GAC7CA,EAAA9xB,EAAAw0B,IAAA/6B,KAAA+sB,MAAA3Q,SAAAzZ,SAAA4D,EAAA0pB,MAAA,SAAAzqB,GAA2E,MAAAxF,MAAAiyB,SAAAzsB,IAA2BxF,YAAA+sB,MAAA3Q,SAAAzZ,UAStG3C,KAAAmjC,gBAAA,SAAA9K,GACA,GAAAr4B,KAAAgwB,SAAA5T,SAAA6lB,cAA6C,MAAAjiC,MAAAg7B,iBAAA3C,EAC7C,IACY7yB,GAAA4sB,EAAA3F,EAAA3W,EADZyW,EAAAvsB,KAAAkjC,aAAA,GACAhkC,IACA,KAAAsG,EAAA,EAAA4sB,EAAA7F,EAAAzpB,OAA6B0C,EAAA4sB,EAAO5sB,IACpCtG,EAAAqtB,EAAA/mB,GAAA7D,IAAA4qB,EAAA/mB,EAEA,KAAAA,EAAA,EAAA4sB,EAAA7F,EAAAzpB,OAA6B0C,EAAA4sB,EAAO5sB,IACpC,IAAAinB,EAAA,EAAA3W,EAAAyW,EAAA/mB,GAAAiqB,WAAA3sB,OAA4C2pB,EAAA3W,EAAO2W,IACnDvtB,EAAAqtB,EAAA/mB,GAAAiqB,WAAAhD,WACAvtB,GAAAqtB,EAAA/mB,GAAAiqB,WAAAhD,GAIAF,KACA,KAAA/mB,IAAAtG,GACAA,EAAAm4B,eAAA7xB,IACA+mB,EAAA7qB,KAAA8D,EAGA,OAAA6yB,GAAA9xB,EAAAw0B,IAAAxO,EAAAhmB,EAAA0pB,MAAA,SAAAzqB,GAAkD,MAAAxF,MAAAiyB,SAAAzsB,IAA2BxF,OAAAusB,GAS7EvsB,KAAAojC,mBAAA,SAAA/K,GACA,GAAAr4B,KAAAgwB,SAAA5T,SAAA6lB,cAA6C,MAAAjiC,MAAAi7B,oBAAA5C,EAC7C,IACA7yB,GAAA4sB,EADA7F,EAAAvsB,KAAAkjC,aAAA,GACAhkC,IACA,KAAAsG,EAAA,EAAA4sB,EAAA7F,EAAAzpB,OAA6B0C,EAAA4sB,EAAO5sB,IACpC+mB,EAAA/mB,GAAAgqB,SAAA1sB,QACA5D,EAAAwC,KAAA6qB,EAAA/mB,GAAA7D,GAGA,OAAA02B,GAAA9xB,EAAAw0B,IAAA77B,EAAAqH,EAAA0pB,MAAA,SAAAzqB,GAAkD,MAAAxF,MAAAiyB,SAAAzsB,IAA2BxF,OAAAd,IAmB7EqH,EAAAud,OAAA1e,SAAAi+B,aAMA7I,aAAA,EAMA8I,cAAA,EAkBAC,MAAA,SAAA9tB,EAAAwgB,GACA,OACA3J,QACAkX,kBAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,MAAA,SACAje,OAAA,SAAAhmB,GACA,GAAA+tB,GAAAlnB,EAAAud,OAAAwJ,UAAA5tB,EAAA4tB,WACApuB,EAAAuuB,EAAAwE,SAAAvyB,EAAA4tB,UACAG,GAAAkP,YAAAz9B,KAA8B,gBAAA0kC,GAC9BpR,WAAA,WAA+B/E,EAAA+Q,KAAAoF,IAAuB,OAItDC,QACAL,kBAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,MAAA,SAMAje,OAAA,SAAAhmB,GACA,GAAA+tB,GAAAlnB,EAAAud,OAAAwJ,UAAA5tB,EAAA4tB,WACApuB,EAAAuuB,EAAAwE,SAAAvyB,EAAA4tB,UACAG,GAAA+Q,KAAAt/B,KAGA8C,QACAwhC,kBAAA,EACArc,MAAA,EACAsc,iBAAA,EACAC,WAAA,EACAC,MAAA,SACAje,OAAA,SAAAhmB,GACA,GAAA+tB,GAAAlnB,EAAAud,OAAAwJ,UAAA5tB,EAAA4tB,WACApuB,EAAAuuB,EAAAwE,SAAAvyB,EAAA4tB,UACAG,GAAA0E,YAAAjzB,GACAuuB,EAAAwP,YAAAxP,EAAAjF,gBAGAiF,EAAAwP,YAAA/9B,KAIA4kC,KACAN,kBAAA,EACArc,MAAA,EACAsc,iBAAA,EACAE,MAAA,OACAje,QAAA,EACAqe,SACA7F,KACAsF,kBAAA,EACAC,iBAAA,EACAE,MAAA,MACAje,OAAA,SAAAhmB,GACA,GAAA+tB,GAAAlnB,EAAAud,OAAAwJ,UAAA5tB,EAAA4tB,WACApuB,EAAAuuB,EAAAwE,SAAAvyB,EAAA4tB,UACAG,GAAA0E,YAAAjzB,GACAuuB,EAAAyQ,IAAAzQ,EAAAjF,gBAGAiF,EAAAyQ,IAAAh/B,KAIAi/B,MACAqF,kBAAA,EACArc,MAAA,EACAsc,iBAAA,EACAE,MAAA,OACAje,OAAA,SAAAhmB,GACA,GAAA+tB,GAAAlnB,EAAAud,OAAAwJ,UAAA5tB,EAAA4tB,WACApuB,EAAAuuB,EAAAwE,SAAAvyB,EAAA4tB,UACAG,GAAA0E,YAAAjzB,GACAuuB,EAAA0Q,KAAA1Q,EAAAjF,gBAGAiF,EAAA0Q,KAAAj/B,KAIAq/B,OACAiF,kBAAA,EACArc,MAAA,EACAuc,UAAA,SAAAhkC,GACA,OAAA6G,EAAAud,OAAAwJ,UAAA5tB,EAAA4tB,WAAAgR,aAEAmF,iBAAA,EACAE,MAAA,QACAje,OAAA,SAAAhmB,GACA,GAAA+tB,GAAAlnB,EAAAud,OAAAwJ,UAAA5tB,EAAA4tB,WACApuB,EAAAuuB,EAAAwE,SAAAvyB,EAAA4tB,UACAG,GAAA8Q,MAAAr/B,UASAqH,EAAAud,OAAAmD,QAAAoc,YAAA,SAAAtjC,EAAAuvB,GACAtvB,KAAAsT,KAAA,WACAgc,EAAAhc,KAAAvQ,KAAA/C,KAEA,IAAAgkC,GAAA,CACAhkC,MAAAyO,QACA3N,GAAA,sCAAAyF,EAAA0pB,MAAA,SAAAlgB,GACAA,EAAAC,iBACAg0B,EAAAj0B,EAAAuqB,QAAAvqB,EAAAk0B,UAAA,EACAjkC,KAAA40B,WAAA7kB,EAAA0L,gBACAzb,KAAAkkC,iBAAAn0B,EAAA0L,cAAA1L,EAAAo0B,MAAAp0B,EAAAq0B,MAAAr0B,IAEM/P,OACNc,GAAA,gCAAAyF,EAAA0pB,MAAA,SAAAlgB,GACA/P,KAAA+sB,MAAAsW,YAAAxB,WAAAmC,GAAAj0B,EAAAk0B,UAAAD,EAAA,MACAz9B,EAAA+rB,OAAA+R,QAAA34B,QAEM1L,OAsBNuG,EAAA+P,UAAAxV,GAAA,sBAAAyF,EAAA0pB,MAAA,WAA8DjwB,KAAA+sB,MAAAsW,YAAAxB,SAAA,GAA0C7hC,QAExGA,KAAAkwB,SAAA,WACAlwB,KAAA+sB,MAAAsW,YAAAxB,SACAt7B,EAAA+rB,OAAA+R,QAAA34B,OAEA4jB,EAAAY,SAAAntB,KAAA/C,OAaAA,KAAAkkC,iBAAA,SAAAhlC,EAAAs2B,EAAA8O,EAAAv0B,GAEA,KADA7Q,EAAAc,KAAAiyB,SAAA/yB,KACA,MAAAA,EAAAyC,GAA+B,QAC/B,IAAA6T,GAAAxV,KAAAgwB,SAAAqT,YACA9N,EAAAv1B,KAAAiyB,SAAA/yB,GAAA,GACAoS,EAAAikB,EAAA/F,SAAA,kBACA/Z,GAAA,EACAjQ,GAAA,GACAgQ,EAAA8tB,cAAA9N,IAAAt0B,GAAAojC,IAAApjC,KACAuU,EAAAnE,EAAAizB,SACA/O,EAAA/f,EAAA4lB,KACAiJ,EAAA7uB,EAAA8lB,IAAAv7B,KAAA+sB,MAAA/F,KAAA2J,WAEA3wB,KAAAgwB,SAAAqT,YAAA7I,cAAAx6B,KAAAmyB,YAAAjzB,IACAc,KAAAyxB,cAAAvyB,EAAA6Q,GAGAvK,EAAAgQ,EAAA+tB,MACAh9B,EAAA6sB,WAAA5tB,KACAA,IAAAzC,KAAA/C,KAAAd,EAAAqH,EAAA0pB,MAAA,SAAAzqB,GACAxF,KAAAwkC,kBAAAtlC,EAAAs2B,EAAA8O,EAAA9+B,IACKxF,QAELuG,EAAA4nB,cAAA3oB,IACAxF,KAAAwkC,kBAAAtlC,EAAAs2B,EAAA8O,EAAA9+B,IAcAxF,KAAAwkC,kBAAA,SAAAtlC,EAAAs2B,EAAA8O,EAAA9+B,GACA,GAAA+vB,GAAAv1B,KAAAiyB,SAAA/yB,GAAA,GACAoS,EAAAikB,EAAA/F,SAAA,iBACAjpB,GAAA+P,UAAAmuB,IAAA,sBAAAl+B,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACA,GAAAglC,GAAA,6BAAA1kC,KAAAsgC,YAAA,cACA/5B,GAAA7G,EAAA+O,SAAA8N,SAAAmoB,IACI1kC,OACJA,KAAA+sB,MAAAsW,YAAAxB,SAAA,EACAt7B,EAAA+rB,OAAA+R,QAAAr5B,KAAAsG,GAA6BkkB,IAAA8O,KAAmB9+B,GAUhDxF,KAAAqU,QAAA,oBAAqCqU,KAAAxpB,EAAAs2B,IAAA8O,QAKrC,SAAA/9B,GACA,GAAAo+B,IAAA,EACAC,GACAn2B,SAAA,EACA6e,WAAA,EACAuX,WAAA,EACAC,WAAA,EACAvB,SACAl6B,KAAA,GACA07B,YAAA,EAGAx+B,GAAA+rB,OAAA+R,SACArU,UACAgV,kBAAA,EACA9X,OAAA,GAEA+X,SAAA,SAAAC,GACA3+B,EAAA+P,UAAA4c,eAAA,WAAAgS,EAAA,WACA5X,UAAAsX,EAAAtX,UACA7e,QAAAm2B,EAAAn2B,QACAsuB,UACAvH,EAAAoP,EAAAC,WACAP,EAAAM,EAAAE,eAIAK,SAAA,SAAA3/B,GAEA,UADAA,EAAAo/B,EAAArB,MAAA/9B,KACAA,EAAAk+B,aAAAn9B,EAAA6sB,WAAA5tB,EAAAk+B,YAAAl+B,EAAAk+B,WAA6Ep/B,KAAAkB,EAAA8nB,UAAAsX,EAAAtX,UAAA7e,QAAAm2B,EAAAn2B,aAAyFjJ,EAAAkgB,SAAAlgB,EAAAkgB,OAAA3iB,KAAA,MACtKuB,KAAAkB,EACA8nB,UAAAsX,EAAAtX,UACA7e,QAAAm2B,EAAAn2B,QACAsuB,UACAvH,EAAAoP,EAAAC,WACAP,EAAAM,EAAAE,eAIAM,OAAA,SAAA3vB,EAAA4f,GACA,IAAA5f,EAAY,QACZ4f,KACAuP,EAAAv7B,KAAA,GACAu7B,EAAArB,SAEA,IAEAhX,GAFA8Y,EAAA,GACAC,GAAA,CA4CA,OAzCAjQ,KAAqBgQ,GAAA,QACrB9+B,EAAA+D,KAAAmL,EAAA,SAAAjQ,EAAAyG,GACA,IAAAA,EAAe,QACf24B,GAAArB,MAAA7hC,KAAAuK,IACAq5B,GAAAr5B,EAAAu3B,mBACA6B,GAAA,qDAAA9+B,EAAA+rB,OAAA+R,QAAArU,SAAA9C,MAAA,+BAAyI,oBAEzIoY,GAAA,EACAD,GAAA,eAAAp5B,EAAAs5B,QAAA,UAAAt5B,EAAAy3B,WAAAn9B,EAAA6sB,WAAAnnB,EAAAy3B,YAAAz3B,EAAAy3B,WAA8Hp/B,KAAA2H,EAAAqhB,UAAAsX,EAAAtX,UAAA7e,QAAAm2B,EAAAn2B,UAA2F,0CAAAxC,EAAAu5B,SAAA,mBAAAv5B,EAAAu5B,SAAA,aACzNH,GAAA,qBAAAT,EAAArB,MAAAzgC,OAAA,QACAyD,EAAA+rB,OAAA+R,QAAArU,SAAA9C,QACAmY,GAAA,MACAp5B,EAAAkb,QACA,IAAAlb,EAAAkb,KAAAhjB,QAAA,WAAA8H,EAAAkb,KAAAhjB,QAAA,KAAyEkhC,GAAA,4BAAAp5B,EAAAkb,KAAA,gCAC5Dke,GAAA,WAAAp5B,EAAAkb,KAAA,MAEbke,GAAA,2DAEAA,IAAA9+B,EAAA6sB,WAAAnnB,EAAA03B,OAAA13B,EAAA03B,OAAkDr/B,KAAAkB,EAAA8nB,UAAAsX,EAAAtX,UAAA7e,QAAAm2B,EAAAn2B,UAAyFxC,EAAA03B,QAAA13B,EAAAu5B,SAAA,yEAAAv5B,EAAAu5B,SAAA,MAAAv5B,EAAAw5B,gBAAA,yBAC3Ix5B,EAAA83B,UACAxX,EAAAhmB,EAAA+rB,OAAA+R,QAAAe,OAAAn5B,EAAA83B,SAAA,MACesB,GAAA9Y,GAEf8Y,GAAA,QACAp5B,EAAAw3B,kBACA4B,GAAA,qDAAA9+B,EAAA+rB,OAAA+R,QAAArU,SAAA9C,MAAA,+BAAyI,mBACzIoY,GAAA,KAGAD,IAAAt3B,QAAA,sDACAsnB,IAAqBgQ,GAAA,SAUrBhQ,IAAsBuP,EAAAv7B,KAAAg8B,EAA2B9+B,EAAA+rB,OAAA+R,QAAAY,SAAA,UACjDI,EAAAviC,OAAA,IAAAuiC,GAEAK,cAAA,SAAAjwB,GAEA,GADAA,EAAAlP,EAAAkP,GACAA,EAAA3S,QAAA2S,EAAA+Z,SAAA,MAAA1sB,OAAA,CACA,GAAAiN,GAAA0F,EAAA+Z,SAAA,MACAgG,EAAA/f,EAAA8uB,SAAAlJ,KAAA5lB,EAAAkwB,aACArB,EAAA7uB,EAAA8uB,SAAAhJ,IACA9E,EAAA1mB,EAAA8V,QACA+f,EAAA71B,EAAA8gB,SACAgV,EAAAt/B,EAAAsF,QAAAga,QAAAtf,EAAAsF,QAAAyvB,aACAwK,EAAAv/B,EAAAsF,QAAAglB,SAAAtqB,EAAAsF,QAAA2vB,WAEAmJ,GACAlvB,EAAA+f,GAAAiB,EAAA,GAAAhhB,EAAAkwB,cAAA,mDAGAlwB,EAAA+f,EAAAiB,EAAA,GAAAoP,EAAA,kDAEAvB,EAAAsB,EAAA,GAAAE,GACA/1B,EAAAvQ,IAAA,iBAEAuQ,EAAA/E,SAEAA,KAAA,SAAAsiB,EAAAyP,EAAAr9B,GACA,GAAA+V,GAAA1F,EAAAylB,EAAA8O,EAAA7N,EAAAmP,EAAAC,EAAAC,CAIA,QAHAlB,EAAAn2B,SAAAm2B,EAAAn2B,QAAA3L,QACA8hC,EAAAn2B,QAAAoX,MAAA,KAFA,GAKA,KAAAkX,IAAAzP,EACA,QACA,OAAAyP,KAAAzP,EACAsX,EAAAtX,YACAsX,EAAAC,WAAA9H,EAAAvH,EACAoP,EAAAE,WAAA/H,EAAAuH,CACA,MACA,MAAAvH,KAAAzP,EACAsX,EAAAtX,YACA7X,EAAA6X,EAAAiX,SACAK,EAAAC,WAAApvB,EAAA4lB,KAAA/N,EAAAyY,cACAnB,EAAAE,WAAArvB,EAAA8lB,GACA,MACA,OAAAwB,IAAAzP,EACAsX,EAAAC,WAAA9H,EAAAvH,EACAoP,EAAAE,WAAA/H,EAAAuH,EAGAhX,IAAA5tB,GAAA6G,EAAA+mB,GAAA5tB,KAAA,wBACAA,EAAA6G,EAAA+mB,GAAA5tB,KAAA,uBAEA6G,EAAA+rB,OAAA+R,QAAAe,OAAA1lC,IACAklC,EAAAn2B,QAAApF,KAAAu7B,EAAAv7B,MAEAu7B,EAAArB,MAAAzgC,SACAiN,EAAA60B,EAAAn2B,QACA+mB,EAAAoP,EAAAC,WACAP,EAAAM,EAAAE,WACArO,EAAA1mB,EAAA8V,QACA+f,EAAA71B,EAAA8gB,SACAgV,EAAAt/B,EAAAsF,QAAAga,QAAAtf,EAAAsF,QAAAyvB,aACAwK,EAAAv/B,EAAAsF,QAAAglB,SAAAtqB,EAAAsF,QAAA2vB,YACAmJ,IACAnP,GAAAzlB,EAAA41B,cACAp/B,EAAAsF,QAAAyvB,aAAA,KACA9F,EAAAjvB,EAAAsF,QAAAyvB,aAAA,IAGA9F,EAAAiB,EAAA,GAAAoP,IACArQ,EAAAqQ,GAAApP,EAAA,KAEA6N,EAAAsB,EAAA,GAAAE,IACAxB,EAAAwB,GAAAF,EAAA,KAGAhB,EAAAn2B,QACAjP,KAAY67B,KAAA7F,EAAA+F,IAAA+I,IACZt5B,OACA6B,KAAA,WAAA2kB,QAAAlC,SAAA/S,SAAA,wBACAqoB,EAAAG,YAAA,EAUAx+B,EAAA+rB,OAAA+R,QAAAY,SAAA,UAGAv5B,KAAA,WACAk5B,EAAAG,aACAH,EAAAn2B,QAAA/C,OAAAmB,KAAA,MAAAnB,OAAA4tB,MAAAzsB,KAAA,UAAAqyB,OACA0F,EAAAG,YAAA,EAUAx+B,EAAA+rB,OAAA+R,QAAAY,SAAA,WAIA1+B,EAAA,WACAo+B,EAAA,QAAAp+B,EAAA,QAAA/G,IAAA,YACA,IAAAkiC,IAAA,CAEAkD,GAAAn2B,QAAAlI,EAAA,oCACAq+B,EAAAn2B,QACA3N,GAAA,2BAAAiP,GACAA,EAAAqvB,2BAEA74B,EAAAy/B,SAAAhmC,KAAA+P,EAAAk2B,iBAMAvE,GAAaS,aAAAT,GACbkD,EAAAn2B,QAAA5B,KAAA,yBAAAyP,YAAA,wBAAAgd,MAEA/yB,EAAAvG,MACAkmC,WAAAr5B,KAAA,MAAAnB,OAAA4tB,YACAlF,aAAA,wBAAA7D,UAAAhU,SAAA,wBACAhW,EAAA+rB,OAAA+R,QAAAqB,cAAA1lC,SAGAc,GAAA,2BAAAiP,GACAxJ,EAAAy/B,SAAAhmC,KAAA+P,EAAAk2B,gBACA1/B,EAAAvG,MAAA6M,KAAA,yBAAA0jB,UAAAjU,YAAA,0BAEAxb,GAAA,sBAAAiP,GACAxJ,EAAAvG,MAAA6M,KAAA,yBAAAyP,YAAA,wBACA/V,EAAA+rB,OAAA+R,QAAArU,SAAAgV,oBACAtD,EAAAlP,WACA,SAAA8C,GACA,kBAA4B/uB,EAAA+rB,OAAA+R,QAAA34B,WACpBnF,EAAA+rB,OAAA+R,QAAArU,SAAAgV,sBAGRlkC,GAAA,qBAAAiP,GACAA,EAAAC,iBAGAzJ,EAAAvG,MAAAk/B,OAAA5P,SAAAhB,SAAA,iCAAA/nB,EAAA+rB,OAAA+R,QAAAc,SAAA5+B,EAAAvG,MAAA+rB,KAAA,SACAxlB,EAAA+rB,OAAA+R,QAAA34B,SAGA5K,GAAA,uBAAAiP,GACA,GAAA0F,GAAA,IACA,QAAA1F,EAAA4hB,OACA,QACA,QACA5hB,EAAArK,KAAA,UACAqK,EAAAC,iBACAzJ,EAAAwJ,EAAA0L,eAAApH,QAAAtE,EACA,MACA,SACA60B,EAAAG,aACAH,EAAAn2B,QAAA5B,KAAA,yBAAAs5B,OAAA5W,QAAA,YAAA1iB,KAAA,MAAAnB,OAAAmB,KAAA,yBAAAyP,YAAA,wBAAAgd,YAAA9J,SAAA,KAAAgC,QACAzhB,EAAAqvB,2BACArvB,EAAAC,iBAEA,MACA,SACA40B,EAAAG,aACAtvB,EAAAmvB,EAAAn2B,QAAA5B,KAAA,cAAA0jB,UAAA4V,OAAA3W,SAAA,yBAAAlT,YAAA,wBAAA8pB,QAAA,qCAAAC,QACA5wB,EAAA3S,SAAwB2S,EAAAmvB,EAAAn2B,QAAA5B,KAAA,cAAA0jB,UAAA4V,OAAA3W,SAAA,qCAAA2W,QACxB1wB,EAAA8G,SAAA,wBAAAiT,SAAA,KAAAgC,QACAzhB,EAAAqvB,2BACArvB,EAAAC,iBAEA,MACA,SACA40B,EAAAG,aACAH,EAAAn2B,QAAA5B,KAAA,yBAAAs5B,OAAA3W,SAAA,MAAAxkB,OAAAwkB,SAAA,qCAAAlT,YAAA,wBAAA+pB,QAAA9pB,SAAA,wBAAAiT,SAAA,KAAAgC,QACAzhB,EAAAqvB,2BACArvB,EAAAC,iBAEA,MACA,SACA40B,EAAAG,aACAtvB,EAAAmvB,EAAAn2B,QAAA5B,KAAA,cAAA0jB,UAAA4V,OAAA3W,SAAA,yBAAAlT,YAAA,wBAAAgqB,QAAA,qCAAAD,QACA5wB,EAAA3S,SAAwB2S,EAAAmvB,EAAAn2B,QAAA5B,KAAA,cAAA0jB,UAAA4V,OAAA3W,SAAA,qCAAA6W,SACxB5wB,EAAA8G,SAAA,wBAAAiT,SAAA,KAAAgC,QACAzhB,EAAAqvB,2BACArvB,EAAAC,iBAEA,MACA,SACAzJ,EAAA+rB,OAAA+R,QAAA34B,OACAqE,EAAAC,oBAOAlP,GAAA,mBAAAiP,GACAA,EAAAC,gBACA,IAAAsB,GAAAszB,EAAAn2B,QAAA5B,KAAA,gCAAAkD,EAAA4hB,OAAArC,QACAhe,GAAAge,SAAAsD,IAAA,6BACAthB,EAAAi1B,YAGA97B,SAAA,QAEAlE,EAAA+P,UACAxV,GAAA,qBAAAiP,GACA60B,EAAAG,aAAAx+B,EAAAy/B,SAAApB,EAAAn2B,QAAA,GAAAsB,EAAA8L,SAAwFtV,EAAA+rB,OAAA+R,QAAA34B,SAExF5K,GAAA,+BAAAiP,EAAArQ,GACAklC,EAAAn2B,QAAA5B,KAAA,cAAA2iB,SAAA,KAAAjT,SAAA,yBACAooB,GACAC,EAAAn2B,QAAA8N,SAAA,sBAAA/c,IAAA,mBAGAolC,EAAAn2B,QAAA5B,KAAA,MAAAnB,OAAA4tB,WAGE/yB,GAcFA,EAAAud,OAAA1e,SAAAohC,KAMArI,MAAA,EAMAsI,aAAA,IAMAC,cAAA,EAMAC,sBAAA,EAMAC,aAAA,EAMAC,WAAA,GAIAtgC,EAAAud,OAAAmD,QAAAuf,IAAA,SAAAzmC,EAAAuvB,GACAtvB,KAAAsT,KAAA,WACAgc,EAAAhc,KAAAvQ,KAAA/C,MAEAA,KAAAyO,QACA3N,GAAA,sDAAAyF,EAAA0pB,MAAA,SAAAlgB,GACA,GAAA7Q,GAAAc,KAAAiyB,SAAAliB,EAAA8L,QACAirB,EAAA9mC,KAAAmyB,YAAAjzB,GAAAc,KAAAwoB,eAAA1lB,OAAA,CACA,IAAA5D,KAAAyC,IAAA,MAAAzC,EAAAyC,KAAA,IAAAoO,EAAA4hB,OAAA,eAAA5hB,EAAArK,SACA,IAAA1F,KAAAgwB,SAAAwW,IAAAE,cAAAngC,EAAA6sB,WAAApzB,KAAAgwB,SAAAwW,IAAAE,eAAA1mC,KAAAgwB,SAAAwW,IAAAE,aAAA3jC,KAAA/C,KAAA8mC,EAAA,EAAA9mC,KAAAwoB,cAAA,IAAAtpB,KAGA,MADAc,MAAAyO,QAAA4F,QAAA,oBACA9N,EAAA+rB,OAAAkU,IAAAhvB,MAAAzH,GAAoC+T,QAAA,EAAAijB,OAAA/mC,KAAAd,IAAAc,KAAAiyB,SAAA/yB,GAAA,GAAAk2B,MAAA0R,EAAA,EAAA9mC,KAAAwoB,gBAAAtpB,EAAAyC,KAAwH,sCAAA3B,KAAAsgC,aAAAtgC,KAAAgwB,SAAAhJ,KAAAgG,OAAA8B,WAAA,wEAAAgY,EAAA,EAAAA,EAAA,IAAA9mC,KAAA0wB,WAAA,SAAA1wB,KAAAk0B,SAAAnkB,EAAA0L,eAAA,qEAEvJzb,SAILuG,EAAA,WAEA,GAAAygC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,EAAA5gC,EAAA,wCAA6CmF,OAAAjB,SAAA,OAE7ClE,GAAA+P,UACAhD,KAAA,4BAAAvD,EAAArQ,GACAsnC,GAAA,IAEA1zB,KAAA,2BAAAvD,EAAArQ,GAEA,GADAwnC,GAAgB/E,aAAA+E,GAChBxnC,kBAAAokB,UAGApkB,EAAAkR,MAAAiL,OAAAla,IAAA,kBAAAjC,EAAAkR,MAAAiL,OAAAla,IAAA,CAIA,GAIAmU,GAAAwf,EAAAsQ,EAAA3R,EAAAzuB,EAAAiQ,EAAAikB,EAAAN,EAAAC,EAAA+N,EAAApQ,EAAAqQ,EAAAC,EAAAC,EAJAC,EAAAjhC,EAAAud,OAAAwJ,UAAA5tB,EAAAkR,MAAAiL,QACA4rB,GAAA,EACAzU,GAAA,EACA0U,GAAA,CAGA,IAAAF,KAAAza,OAAAya,EAAAza,MAAAyZ,IAQA,GAPAW,EAAApb,KAAA,kBAAAyb,EAAAlH,aAAAkH,EAAAxX,SAAAhJ,KAAAgG,OAAA8B,WAAA,8BACApvB,EAAAioC,OACAnY,WAAAzD,KAAA,kBAAAyb,EAAAlH,aAAAkH,EAAAxX,SAAAhJ,KAAAgG,OAAA8B,WAAA,8BACAjiB,KAAA,sBAAAnN,OAAAqnC,SAAArnC,OAAAqnC,OAAA/W,SAAAwW,IAAAI,aAAAlnC,OAAAqnC,OAAA/W,SAAAwW,IAAArI,OAAAz+B,EAAAkR,MAAAypB,SAAA36B,EAAAkR,MAAA0pB,UAAA,iBAIA56B,EAAAkR,MAAAiL,SAAA2rB,EAAA/4B,QAAA,IAAA/O,EAAAkR,MAAAiL,SAAA2rB,EAAA5W,mBAAA,QAAA4W,EAAA5W,mBAAApB,WAAA1sB,QAgBA,IADA2kC,EAAAlhC,EAAA7G,EAAAkR,MAAAiL,QAAAG,QAAA,oBACAyrB,EAAA3kC,QAAA2kC,EAAAnY,SAAA9H,GAAA,gDACAwL,EAAAyU,EAAAlD,SACAmD,EAAAhoC,EAAAkR,MAAAwzB,MAAApR,EAAAuI,IACAqK,EAAA6B,EAAA5W,SAEApb,EADAiyB,EAAA9B,EAAA,GACA,aAEA8B,EAAA9B,IAAA,GACA,aAGA8B,EAAA9B,EAAA,8BAEAr/B,EAAA+D,KAAAmL,EAAA,SAAA2c,EAAAkE,GACA,OAAAA,GACA,QACAxgB,EAAAkd,EAAAqI,KAAA,EACA/F,EAAAtC,EAAAuI,IACAtH,EAAAuT,EAAAhT,WAAAiT,GACAjiC,EAAAiiC,EAAAnY,SAAAztB,OACA,MACA,SACAylC,EAAAE,EAAAxX,SAAAwW,IAAAK,WACAU,EAAAC,EAAAvV,SAAAwV,EAAAnY,UACAxZ,EAAAkd,EAAAqI,KAAA,EACA/F,EAAAtC,EAAAuI,IAAAqK,EAAA,IACA3R,EAAAsT,EAAA5lC,GACA6D,EAAA,UAAA8hC,EAAA,WAAAA,EAAAC,EAAA/X,SAAA1sB,OAAAwX,KAAAklB,IAAA8H,EAAAC,EAAA/X,SAAA1sB,OACA,MACA,SACAgT,EAAAkd,EAAAqI,KAAA,EACA/F,EAAAtC,EAAAuI,IAAAqK,EACA3R,EAAAuT,EAAAhT,WAAAiT,GACAjiC,EAAAiiC,EAAAnY,SAAAztB,QAAA,EASA;;;;;AADA63B,GAAA,EACAN,EAAA,EAAAC,EAAA35B,OAAA01B,MAAAtyB,OAAgDs2B,EAAAC,EAASD,IAUzD,GATAgO,EAAA1nC,OAAAqnC,SAAArnC,OAAAqnC,OAAA/W,SAAAwW,IAAAI,aAAAlnC,OAAAqnC,OAAA/W,SAAAwW,IAAArI,OAAAz+B,EAAAkR,MAAAypB,SAAA36B,EAAAkR,MAAA0pB,UAAA,wBACAtD,EAAAxxB,EACA,cAAA4hC,GAAA,MAAA9Q,GAAA52B,OAAAqnC,QAAArnC,OAAAqnC,SAAAS,GAAAvT,IAAAuT,EAAAhT,WAAA90B,OAAA01B,MAAAgE,MACAiO,EAAAG,EAAAvV,SAAAgC,GACA+C,EAAAzwB,EAAAkxB,QAAA/3B,OAAA01B,MAAAgE,GAAAiO,EAAA7X,YACAwH,GAAA,MAGA0C,MAAA8N,KAAAxX,UAAAwX,EAAAxX,SAAAwW,MAAA,IAAAgB,EAAAxX,SAAAwW,IAAAG,sBAAAa,EAAA1K,MAAAsK,EAAA1nC,OAAAqnC,QAAArnC,OAAAqnC,SAAAS,EAAA9nC,OAAAqnC,OAAA9U,SAAAvyB,OAAA01B,MAAAgE,IAAA15B,OAAA01B,MAAAgE,GAAAnF,EAAA+C,GAAmQwP,KAAA,EAAAiB,IAAAD,EAAAvV,SAAAwV,EAAAnY,UAAAsN,IAAAtG,EAAA+G,SAAA39B,OAAAqnC,QAAArnC,OAAAqnC,SAAAS,EAAA3J,YAAAn+B,OAAAqnC,WACnQ,CACAS,KAAAra,aAAqC8Z,EAAAO,EAAAra,aACrC,OAGA,GAAAuM,EASA,MARA,MAAApD,GAAAmR,EAAAnY,SAAA9H,GAAA,mBAAAggB,EAAAxX,SAAAwW,IAAAC,eACAS,EAAA1U,WAAA,SAAAgD,EAAAoS,GAAgD,kBAAqBpS,EAAAxD,UAAA4V,KAAqBJ,EAAAC,GAAAD,EAAAxX,SAAAwW,IAAAC,eAE1FO,GAAmBQ,MAAArR,IAAAlC,EAAA2I,IAAA,MAAAtG,GAAA,SAAAgR,GAAA,IAAA9hC,GAAAgiC,EAAA7S,UAAA4S,GAAA/hC,EAAA,QACnB2hC,EAAA3nC,KAAqB67B,KAAAvlB,EAAA,KAAAylB,IAAAjG,EAAA,OAAsCtqB,OAC3DtL,EAAAioC,OAAA96B,KAAA,sBAAAyP,YAAA,aAAAC,SAAA,aACA0qB,KACAxxB,GAAA,GACA,KAGA,IAAAA,GAAuB,WArFvB,CAEA,IADAikB,GAAA,EACAN,EAAA,EAAAC,EAAA35B,OAAA01B,MAAAtyB,OAA8Cs2B,EAAAC,IAC9CK,KAAA8N,EAAA1K,MAAAp9B,OAAAqnC,SAAArnC,OAAAqnC,OAAA/W,SAAAwW,IAAAI,aAAAlnC,OAAAqnC,OAAA/W,SAAAwW,IAAArI,OAAAz+B,EAAAkR,MAAAypB,SAAA36B,EAAAkR,MAAA0pB,UAAA,wBAAA56B,OAAAqnC,QAAArnC,OAAAqnC,SAAAS,EAAA9nC,OAAAqnC,OAAA9U,SAAAvyB,OAAA01B,MAAAgE,IAAA15B,OAAA01B,MAAAgE,GAAA,YAAwVoN,KAAA,EAAAiB,IAAAD,EAAAvV,SAAA,KAAA2K,IAAA,IAAAS,SAAA39B,OAAAqnC,QAAArnC,OAAAqnC,SAAAS,EAAA3J,YAAAn+B,OAAAqnC,UADjS3N,KAIvD,GAAAM,EAIA,MAHAsN,IAAiBQ,MAAArR,IAAA,IAAAyG,IAAA,QACjBuK,EAAAz7B,WACAhM,GAAAioC,OAAA96B,KAAA,sBAAAyP,YAAA,aAAAC,SAAA,aAgFAyqB,GAAA,EACAtnC,EAAAioC,OAAA96B,KAAA,gBAAAyP,YAAA,aAAAC,SAAA,aACA4qB,EAAAz7B,UAEA4H,KAAA,6BAAAvD,EAAArQ,GACAA,kBAAAokB,SACAqjB,EAAAz7B,OACAs7B,GAAA,EACAtnC,EAAAioC,OAAA96B,KAAA,sBAAAyP,YAAA,aAAAC,SAAA,gBAEAjJ,KAAA,2BAAAvD,EAAArQ,GAEA,GADAwnC,GAAgB/E,aAAA+E,GAChBxnC,kBAAAokB,OAAA,CACAqjB,EAAAz7B,MACA,IAAAlG,GAAA4sB,EAAAgD,IACA,IAAA4R,EAAA,CACA,IAAAxhC,EAAA,EAAA4sB,EAAA1yB,OAAA01B,MAAAtyB,OAA2C0C,EAAA4sB,EAAO5sB,IAClD4vB,EAAA5vB,GAAA9F,OAAAqnC,OAAArnC,OAAAqnC,OAAA9U,SAAAvyB,OAAA01B,MAAA5vB,IAAA9F,OAAA01B,MAAA5vB,GACA9F,OAAAqnC,SACA3R,EAAA5vB,GAAA0oB,SAAAxuB,OAAAqnC,OAGAC,GAAAQ,IAAA9nC,OAAAqnC,SAAArnC,OAAAqnC,OAAA/W,SAAAwW,IAAAI,aAAAlnC,OAAAqnC,OAAA/W,SAAAwW,IAAArI,OAAAz+B,EAAAkR,MAAAypB,SAAA36B,EAAAkR,MAAA0pB,UAAA,yBAAAlF,EAAA4R,EAAA7Q,IAAA6Q,EAAApK,SAGAp3B,GAAAe,EAAA7G,EAAAkR,MAAAiL,QAAAG,QAAA,WACAxW,EAAA1C,QAAAmkC,KAAAnhC,OAAA,UAAAmhC,EAAAnhC,QACAN,IAAAse,QAAA,KAEAte,EAAAwqB,SAAAhJ,KAAAlhB,MAAA/C,KAAA/C,KAAAinC,MAKA3zB,KAAA,yBAAAvD,EAAArQ,IACAA,EAAA6G,EAAA+rB,OAAAkU,IAAAqB,SACAnoC,eAAAokB,QACApkB,EAAAioC,OAAA96B,KAAA,sBAAAnN,OAAAqnC,SAAArnC,OAAAqnC,OAAA/W,SAAAwW,IAAAI,aAAAlnC,OAAAqnC,OAAA/W,SAAAwW,IAAArI,OAAApuB,EAAAsqB,SAAAtqB,EAAAuqB,UAAA,qBAMA,SAAA/zB,GAEA,GAAAuhC,IACAr5B,SAAA,EACAoN,QAAA,EACAksB,SAAA,EACAC,SAAA,EACAL,QAAA,EACAM,SAAA,EACAvoC,MAAA,EACAwoC,OAAA,EACAC,OAAA,EACAC,SAAA,EACAC,SAAA,EACAC,UAAA,EACAC,UAAA,EACAC,UAAA,EAEAjiC,GAAA+rB,OAAAkU,KACAxW,UACAyY,aAAA,GACAC,iBAAA,GACAC,YAAA,EACAC,WAAA,GACAC,UAAA,EACAC,gBAAA,IAEA7D,SAAA,SAAAC,EAAAn1B,GACA,GAAArQ,GAAA6G,EAAA+rB,OAAAkU,IAAAqB,MACAnoC,GAAAkR,MAAAb,EACAxJ,EAAA+P,UAAA4c,eAAA,OAAAgS,EAAA,UAAAxlC,IAEAmoC,KAAA,WACA,OACAnoC,KAAAooC,EAAApoC,KACA+O,QAAAq5B,EAAAr5B,QACAk5B,OAAAG,EAAAH,SAGAoB,OAAA,WACAjB,EAAAH,QAA2BG,EAAAH,OAAA3lC,SAC3B8lC,EAAAS,WAA6BS,cAAAlB,EAAAS,UAAoCT,EAAAS,UAAA,GACjET,GACAr5B,SAAA,EACAoN,QAAA,EACAksB,SAAA,EACAC,SAAA,EACAL,QAAA,EACAM,SAAA,EACAvoC,MAAA,EACAwoC,OAAA,EACAC,OAAA,EACAC,SAAA,EACAC,SAAA,EACAC,UAAA,EACAC,UAAA,EACAC,UAAA,GAEAjiC,EAAA+P,UAAA0c,IAAA,sBAAAzsB,EAAA+rB,OAAAkU,IAAAyC,MACA1iC,EAAA+P,UAAA0c,IAAA,mBAAAzsB,EAAA+rB,OAAAkU,IAAAjN,OAEA2P,QAAA,SAAAC,GACA,IAAArB,EAAAQ,WAAAR,EAAAM,WAAAN,EAAAO,SAEA,MADAP,GAAAS,WAA8BS,cAAAlB,EAAAS,UAAoCT,EAAAS,UAAA,IAClE,CAEA,KAAAT,EAAAS,SAEA,MADAT,GAAAS,SAAAa,YAAA7iC,EAAA+rB,OAAAkU,IAAA0C,QAAA,MACA,CAEA,SAAAC,EAA4B,QAE5B,IAAA3jC,GAAAsiC,EAAAQ,SAAA9M,YACApJ,EAAA0V,EAAAQ,SAAAhN,YACAwM,GAAAQ,SAAA9M,UAAAh2B,EAAAsiC,EAAAO,SAAA9hC,EAAA+rB,OAAAkU,IAAAxW,SAAAyY,cACAX,EAAAQ,SAAAhN,WAAAlJ,EAAA0V,EAAAM,SAAA7hC,EAAA+rB,OAAAkU,IAAAxW,SAAAyY,cACAjjC,IAAAsiC,EAAAQ,SAAA9M,aAAApJ,IAAA0V,EAAAQ,SAAAhN,cAWA/0B,EAAA+rB,OAAAkU,IAAAvB,SAAA,SAAA6C,EAAAQ,WAGA9wB,MAAA,SAAAzH,EAAArQ,EAAA2J,GACA,eAAA0G,EAAArK,MAAAqK,EAAAs5B,eAAAt5B,EAAAs5B,cAAAC,gBAAAv5B,EAAAs5B,cAAAC,eAAA,KACAv5B,EAAAo0B,MAAAp0B,EAAAs5B,cAAAC,eAAA,GAAAnF,MACAp0B,EAAAq0B,MAAAr0B,EAAAs5B,cAAAC,eAAA,GAAAlF,MACAr0B,EAAA8L,OAAAvF,SAAAizB,iBAAAx5B,EAAAs5B,cAAAC,eAAA,GAAAnF,MAAAt4B,OAAA29B,YAAAz5B,EAAAs5B,cAAAC,eAAA,GAAAlF,MAAAv4B,OAAA49B,cAEA3B,EAAAE,SAA4BzhC,EAAA+rB,OAAAkU,IAAAjN,QAC5B,KACAxpB,EAAA0L,cAAAiuB,aAAA,KACA35B,EAAA0L,cAAAkuB,cAAA,WAAiD,UACjD55B,EAAA0L,cAAAqd,QAAgC/oB,EAAA0L,cAAAqd,MAAA8Q,cAAA,QAC3B,MAAApc,IAqBL,MApBAsa,GAAAI,OAAAn4B,EAAAo0B,MACA2D,EAAAK,OAAAp4B,EAAAq0B,MACA0D,EAAApoC,OACAooC,EAAAC,SAAA,EACAD,EAAAr5B,QAAAsB,EAAA0L,cACAqsB,EAAAjsB,OAAA9L,EAAA8L,OACAisB,EAAAU,SAAA,eAAAz4B,EAAArK,MACA,IAAA2D,IACAy+B,EAAAH,OAAAphC,EAAA,+BAAA8C,QAAA7J,KACAi6B,QAAA,QACAoQ,OAAA,IACA/K,QAAA,IACA/B,SAAA,WACAxB,IAAA,UACA0D,WAAA,OACA6K,OAAA,WAGAvjC,EAAA+P,UAAAhD,KAAA,sBAAA/M,EAAA+rB,OAAAkU,IAAAyC,MACA1iC,EAAA+P,UAAAhD,KAAA,mBAAA/M,EAAA+rB,OAAAkU,IAAAjN,OACA,GAEA0P,KAAA,SAAAl5B,GAMA,GALA,cAAAA,EAAArK,MAAAqK,EAAAs5B,eAAAt5B,EAAAs5B,cAAAC,gBAAAv5B,EAAAs5B,cAAAC,eAAA,KACAv5B,EAAAo0B,MAAAp0B,EAAAs5B,cAAAC,eAAA,GAAAnF,MACAp0B,EAAAq0B,MAAAr0B,EAAAs5B,cAAAC,eAAA,GAAAlF,MACAr0B,EAAA8L,OAAAvF,SAAAizB,iBAAAx5B,EAAAs5B,cAAAC,eAAA,GAAAnF,MAAAt4B,OAAA29B,YAAAz5B,EAAAs5B,cAAAC,eAAA,GAAAlF,MAAAv4B,OAAA49B,cAEA3B,EAAAC,QAAA,CACA,IAAAD,EAAAE,QAAA,CACA,KACA1tB,KAAAyvB,IAAAh6B,EAAAo0B,MAAA2D,EAAAI,SAAAJ,EAAAU,SAAAjiC,EAAA+rB,OAAAkU,IAAAxW,SAAA8Y,gBAAAviC,EAAA+rB,OAAAkU,IAAAxW,SAAA6Y,YACAvuB,KAAAyvB,IAAAh6B,EAAAq0B,MAAA0D,EAAAK,SAAAL,EAAAU,SAAAjiC,EAAA+rB,OAAAkU,IAAAxW,SAAA8Y,gBAAAviC,EAAA+rB,OAAAkU,IAAAxW,SAAA6Y,YAmBW,MAjBXf,GAAAH,SACAG,EAAAH,OAAAl9B,SAAA,QACAq9B,EAAAG,SAAAH,EAAAH,OAAAhC,cAEAmC,EAAAE,SAAA,EAWAzhC,EAAA+rB,OAAAkU,IAAAvB,SAAA,QAAAl1B,GAKA,GAAAwlB,IAAA,EAAAkB,GAAA,EACAqP,GAAA,EAAAkE,GAAA,EACAnE,GAAA,EAAAoE,GAAA,EACAC,GAAA,EAAAC,GAAA,EACAC,GAAA,EAAAC,GAAA,CA8DA,OA5DAvC,GAAAO,SAAA,EACAP,EAAAM,SAAA,EACAN,EAAAQ,UAAA,EACA/hC,IAAAwJ,EAAA8L,QAAAuY,aAAA,QAAA7D,UAAA7sB,MAAA2X,WACAnX,OAAA,WACA,sBAAAqQ,KAAAhO,EAAAvG,MAAAR,IAAA,eACAQ,KAAAsqC,aAAAtqC,KAAAuqC,cAAAvqC,KAAAwqC,YAAAxqC,KAAAyqC,eAEAngC,KAAA,WACA,GAAAgrB,GAAA/uB,EAAAvG,MAAAyV,EAAA6f,EAAAiP,QASA,IARAvkC,KAAAsqC,aAAAtqC,KAAAuqC,eACA90B,EAAA8lB,IAAAjG,EAAAzE,SAAA9gB,EAAAq0B,MAAA79B,EAAA+rB,OAAAkU,IAAAxW,SAAA0Y,mBAAkFZ,EAAAO,SAAA,GAClFt4B,EAAAq0B,MAAA3uB,EAAA8lB,IAAAh1B,EAAA+rB,OAAAkU,IAAAxW,SAAA0Y,mBAAwEZ,EAAAO,UAAA,IAExEroC,KAAAwqC,YAAAxqC,KAAAyqC,cACAh1B,EAAA4lB,KAAA/F,EAAAzP,QAAA9V,EAAAo0B,MAAA59B,EAAA+rB,OAAAkU,IAAAxW,SAAA0Y,mBAAkFZ,EAAAM,SAAA,GAClFr4B,EAAAo0B,MAAA1uB,EAAA4lB,KAAA90B,EAAA+rB,OAAAkU,IAAAxW,SAAA0Y,mBAAyEZ,EAAAM,UAAA,IAEzEN,EAAAO,UAAAP,EAAAM,SAEA,MADAN,GAAAQ,SAAA/hC,EAAAvG,OACA,IAIA8nC,EAAAQ,WACA/S,EAAAhvB,EAAA+P,UAAsBmgB,EAAAlwB,EAAAsF,QACtBi6B,EAAAvQ,EAAA1E,SAAqBmZ,EAAAvT,EAAA5F,SACrBgV,EAAAtQ,EAAA1P,QAAoBokB,EAAAxT,EAAA5Q,QACpBqkB,EAAA3U,EAAAiG,YAAwB2O,EAAA5U,EAAA+F,aACxBwK,EAAAkE,GAAAj6B,EAAAq0B,MAAA8F,EAAA3jC,EAAA+rB,OAAAkU,IAAAxW,SAAA0Y,mBAA4EZ,EAAAO,UAAA,GAC5EvC,EAAAkE,MAAAj6B,EAAAq0B,MAAA8F,GAAA3jC,EAAA+rB,OAAAkU,IAAAxW,SAAA0Y,mBAAkFZ,EAAAO,SAAA,GAClFxC,EAAAoE,GAAAl6B,EAAAo0B,MAAAgG,EAAA5jC,EAAA+rB,OAAAkU,IAAAxW,SAAA0Y,mBAA4EZ,EAAAM,UAAA,GAC5EvC,EAAAoE,MAAAl6B,EAAAo0B,MAAAgG,GAAA5jC,EAAA+rB,OAAAkU,IAAAxW,SAAA0Y,mBAAkFZ,EAAAM,SAAA,IAClFN,EAAAO,UAAAP,EAAAM,YACAN,EAAAQ,SAAA/S,IAGAuS,EAAAQ,UAA6B/hC,EAAA+rB,OAAAkU,IAAA0C,SAAA,GAE7BpB,EAAAH,SACAyC,EAAAtzB,SAAA/G,EAAAq0B,MAAA79B,EAAA+rB,OAAAkU,IAAAxW,SAAA4Y,WAAA,IACAyB,EAAAvzB,SAAA/G,EAAAo0B,MAAA59B,EAAA+rB,OAAAkU,IAAAxW,SAAA2Y,YAAA,IACA7C,GAAAsE,EAAA,GAAAtE,IAA6BsE,EAAAtE,EAAA,IAC7BD,GAAAwE,EAAAvC,EAAAG,SAAApC,IAA8CwE,EAAAxE,GAAAiC,EAAAG,SAAA,IAC9CH,EAAAH,OAAAnoC,KACA67B,KAAAgP,EAAA,KACA9O,IAAA6O,EAAA,QAaA7jC,EAAA+rB,OAAAkU,IAAAvB,SAAA,OAAAl1B,IACA,IAEAwpB,KAAA,SAAAxpB,GAMA,GALA,aAAAA,EAAArK,MAAAqK,EAAAs5B,eAAAt5B,EAAAs5B,cAAAC,gBAAAv5B,EAAAs5B,cAAAC,eAAA,KACAv5B,EAAAo0B,MAAAp0B,EAAAs5B,cAAAC,eAAA,GAAAnF,MACAp0B,EAAAq0B,MAAAr0B,EAAAs5B,cAAAC,eAAA,GAAAlF,MACAr0B,EAAA8L,OAAAvF,SAAAizB,iBAAAx5B,EAAAs5B,cAAAC,eAAA,GAAAnF,MAAAt4B,OAAA29B,YAAAz5B,EAAAs5B,cAAAC,eAAA,GAAAlF,MAAAv4B,OAAA49B,cAEA3B,EAAAE,QAWAzhC,EAAA+rB,OAAAkU,IAAAvB,SAAA,OAAAl1B,OAGA,iBAAAA,EAAArK,MAAAqK,EAAA8L,SAAAisB,EAAAjsB,OAAA,CACA,GAAA6lB,GAAAlP,WAAA,WAAuCjsB,EAAAwJ,EAAA8L,QAAAwjB,SAAuB,IAC9D94B,GAAAwJ,EAAA8L,QAAA4oB,IAAA,mBAA2C/C,GAASS,aAAAT,KAIpD,MADAn7B,GAAA+rB,OAAAkU,IAAAuC,UACA,KAGExiC,GAiBFA,EAAAud,OAAA1e,SAAAtB,QASAzB,MAAA,EAMAqoC,OAAA,EAMAC,gBAAA,EAMAC,mBAAA,EAMAC,sBAAA,EAMAC,oBAAA,EAOAC,iBAAA,GAGAxkC,EAAAud,OAAAmD,QAAAnjB,OAAA,SAAA/D,EAAAuvB,GACAtvB,KAAAsT,KAAA,WACAgc,EAAAhc,KAAAvQ,KAAA/C,MAEAA,KAAA+sB,MAAAjpB,OAAAuhC,IAAA,GACArlC,KAAA+sB,MAAAjpB,OAAAwvB,IAAA/sB,IACAvG,KAAA+sB,MAAAjpB,OAAA43B,OACA17B,KAAA+sB,MAAAjpB,OAAAknC,OAEAhrC,KAAAyO,QAAA3N,GAAA,qBAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACA,GAAA8F,GAAA4sB,EAAAzc,EAAA3V,KAAA+sB,MAAAjpB,OAAA43B,IAAAlmB,KAAAC,EAAAlP,GACA,IAAAoP,KAAA7S,SACA9C,KAAA+sB,MAAAjpB,OAAAwvB,IAAA/sB,EAAAvG,KAAAyO,QAAA,GAAAw8B,iBAAA,IAAA1kC,EAAAw0B,IAAAplB,EAAA,SAAA2gB,GAA6F,wBAAAnyB,QAAAmyB,EAAA,UAAAA,EAAA,OAAAA,EAAAlmB,OAAA,GAAArC,QAAAxH,EAAAud,OAAAuI,QAAA,QAAAiK,EAAAvoB,QAAAxH,EAAAud,OAAAuI,QAAA,UAAqJ3d,KAAA,SAClP1O,KAAA+sB,MAAAjpB,OAAAwvB,IAAA9D,SAAA,kBAAAjT,SAAA,iBACAvc,KAAAgwB,SAAAlsB,OAAA8mC,mBAAA5qC,KAAA+sB,MAAAjpB,OAAA43B,IAAA54B,QAAA,CACA,IAAA0C,EAAA,EAAA4sB,EAAAzc,EAAA7S,OAA8B0C,EAAA4sB,EAAO5sB,IACrCgQ,IAAA6c,OAAAryB,KAAAiyB,SAAAtc,EAAAnQ,IAAA+pB,QAEA/Z,GAAAjP,EAAA+rB,OAAA4C,kBAAA3uB,EAAA+rB,OAAAC,aAAA/c,GAAA,KACAC,EAAAD,EAAA1S,OAAAyD,EAAAvG,KAAAyO,QAAA,GAAAw8B,iBAAA,IAAA1kC,EAAAw0B,IAAAvlB,EAAA,SAAA8gB,GAAqF,wBAAAnyB,QAAAmyB,EAAA,UAAAA,EAAA,OAAAA,EAAAlmB,OAAA,GAAArC,QAAAxH,EAAAud,OAAAuI,QAAA,QAAAiK,EAAAvoB,QAAAxH,EAAAud,OAAAuI,QAAA,UAAqJ3d,KAAA,SAAAnI,IAE1OvG,KAAAyO,QAAA5B,KAAA,gBAAAnB,OAAAxH,OAAA,gBAAAA,OAAA,WAAyF,MAAAlE,MAAAwzB,cAA2BlX,YAAA,eACpH7G,IAAAhU,IAAAzB,KAAA+sB,MAAAjpB,OAAAwvB,KACA7d,EAAA2e,aAAA,WAAA7D,UAAAvlB,OACA9G,OAAA,oBAAAoG,KAAA,WAAqD/D,EAAAvG,MAAAwvB,SAAA,wBAAA8E,IAAA,GAAA/X,SAAA,mBAGjDvc,OACJA,KAAAgwB,SAAAlsB,OAAA8mC,mBACA5qC,KAAAyO,QACA3N,GAAA,yBAAAiP,EAAArQ,GACAA,EAAA01B,MAAAtyB,SACAyD,EAAAvG,MAAA6M,KAAA,gBAAAnB,OAAAxH,OAAA,gBAAAA,OAAA,WAAqF,MAAAlE,MAAAwzB,cAA2BlX,YAAA,eAChH5c,EAAA01B,MAAAhB,aAAA,WAAA7D,UAAAvlB,OACA9G,OAAA,oBAAAoG,KAAA,WAAsD/D,EAAAvG,MAAAwvB,SAAA,wBAAA8E,IAAA,GAAA/X,SAAA,oBAGtDzb,GAAA,+BAAAiP,EAAArQ,GACAA,EAAA01B,MAAAtyB,QACAyD,EAAAvG,MAAA6M,KAAA,gBAAArN,IAAA,cAAA0E,OAAA,gBAAAA,OAAA,WAAgG,MAAAlE,MAAAwzB,cAA2BlX,YAAA,kBAa3Htc,KAAA8D,OAAA,SAAAuhC,EAAA6F,GACA,QAAA7F,GAAA,KAAA9+B,EAAAuZ,KAAAulB,EAAAnO,YACA,MAAAl3B,MAAAmrC,cAEA9F,KAAAnO,UACA,IAAA1hB,GAAAxV,KAAAgwB,SAAAlsB,OACAwN,IAAAkE,EAAAnT,MAAAmT,EAAAnT,KACA0zB,EAAA,KACApgB,KACAse,IAIA,IAHAj0B,KAAA+sB,MAAAjpB,OAAA43B,IAAA54B,QACA9C,KAAAmrC,gBAEAD,IAAA,IAAA55B,EACA,MAAA/K,GAAA6sB,WAAA9hB,GACAA,EAAAvO,KAAA/C,KAAAqlC,EAAA9+B,EAAA0pB,MAAA,SAAAsF,GACAA,SAAqBA,OACrBv1B,KAAAi1B,YAAA1uB,EAAAyuB,QAAAO,GAAAhvB,EAAA+rB,OAAAC,aAAAgD,MAAA,WACAv1B,KAAA8D,OAAAuhC,GAAA,KACQ,IACDrlC,QAGPsR,EAAA/K,EAAAjH,UAAoBgS,GACpBA,EAAA5R,OAAkB4R,EAAA5R,SAClB4R,EAAA5R,KAAA2lC,MACA9+B,EAAAlE,KAAAiP,GACA/E,KAAAhG,EAAA0pB,MAAA,WACAjwB,KAAA+sB,MAAA/F,KAAAmG,YAAqCrnB,MAAA,OAAA4mB,OAAA,SAAA/qB,GAAA,YAAAi0B,OAAA,gCAAAl2B,KAAAm2B,KAAAC,UAAAxkB,IACrCtR,KAAAgwB,SAAAhJ,KAAAlhB,MAAA/C,KAAA/C,UAAA+sB,MAAA/F,KAAAmG,aACOntB,OACPoM,KAAA7F,EAAA0pB,MAAA,SAAAsF,GACAA,SAAqBA,OACrBv1B,KAAAi1B,YAAA1uB,EAAAyuB,QAAAO,GAAAhvB,EAAA+rB,OAAAC,aAAAgD,MAAA,WACAv1B,KAAA8D,OAAAuhC,GAAA,KACQ,IACDrlC,OAGPA,MAAA+sB,MAAAjpB,OAAAuhC,MACArlC,KAAA+sB,MAAAjpB,OAAAwvB,IAAA/sB,IACAvG,KAAA+sB,MAAAjpB,OAAA43B,OACA17B,KAAA+sB,MAAAjpB,OAAAknC,OAEAjV,EAAA,GAAAxvB,GAAA+rB,OAAAxuB,OAAAuhC,GAAA,GAAuC+F,cAAA51B,EAAAm1B,eAAAD,MAAAl1B,EAAAk1B,QAEvCnkC,EAAA+D,KAAAtK,KAAA0tB,OAAAhuB,KAAA,SAAA8F,EAAA8wB,GACAA,EAAAl1B,OAAAoU,EAAAu1B,iBAAAv1B,EAAAu1B,gBAAAhoC,KAAA/C,KAAAqlC,EAAA/O,KAAA9gB,EAAAu1B,iBAAAhV,EAAAjyB,OAAAwyB,EAAAl1B,MAAAiqC,YAAA71B,EAAAs1B,oBAAAxU,EAAA3N,MAAA+G,QAAA,IAAA4G,EAAA9G,SAAA1sB,UACA6S,EAAAjU,KAAA8D,GACAyuB,IAAA5B,OAAAiE,EAAA/G,YAGA5Z,EAAA7S,SACAmxB,EAAA1tB,EAAA+rB,OAAAC,aAAA0B,GACAj0B,KAAAsrC,aAAArX,GACAj0B,KAAA+sB,MAAAjpB,OAAAwvB,IAAA/sB,EAAAvG,KAAAyO,QAAA,GAAAw8B,iBAAA,IAAA1kC,EAAAw0B,IAAAplB,EAAA,SAAA2gB,GAA4F,wBAAAnyB,QAAAmyB,EAAA,UAAAA,EAAA,OAAAA,EAAAlmB,OAAA,GAAArC,QAAAxH,EAAAud,OAAAuI,QAAA,QAAAiK,EAAAvoB,QAAAxH,EAAAud,OAAAuI,QAAA,UAAqJ3d,KAAA,SACjP1O,KAAA+sB,MAAAjpB,OAAA43B,IAAA/lB,EACA3V,KAAA+sB,MAAAjpB,OAAAwvB,IAAA9D,SAAA,kBAAAjT,SAAA,kBAWAvc,KAAAqU,QAAA,UAA2B+gB,MAAAp1B,KAAA+sB,MAAAjpB,OAAAwvB,IAAA+R,MAAA3J,IAAA17B,KAAA+sB,MAAAjpB,OAAA43B,OAQ3B17B,KAAAmrC,aAAA,WACAnrC,KAAA+sB,MAAAjpB,OAAAwvB,IAAA9D,SAAA,kBAAAlT,YAAA,iBACAtc,KAAAgwB,SAAAlsB,OAAA+mC,sBACA7qC,KAAA6xB,WAAA7xB,KAAA+sB,MAAAjpB,OAAAknC,IAAA,GAWAhrC,KAAAqU,QAAA,gBAAiC+gB,MAAAp1B,KAAA+sB,MAAAjpB,OAAAwvB,IAAA+R,IAAArlC,KAAA+sB,MAAAjpB,OAAAuhC,IAAA3J,IAAA17B,KAAA+sB,MAAAjpB,OAAA43B,MACjC17B,KAAA+sB,MAAAjpB,OAAAuhC,IAAA,GACArlC,KAAA+sB,MAAAjpB,OAAA43B,OACA17B,KAAA+sB,MAAAjpB,OAAAknC,OACAhrC,KAAA+sB,MAAAjpB,OAAAwvB,IAAA/sB,KASAvG,KAAAsrC,aAAA,SAAA/V,GACA,GAAAD,GAAAt1B,IACAuG,GAAA+D,KAAAirB,EAAAlD,WAAA,SAAA7sB,EAAA8wB,GACA,SAAAA,EAAmB,QACnB,KAASA,EAAA/vB,EAAA,IAAA+vB,EAAAvoB,QAAAxH,EAAAud,OAAAuI,QAAA,QAAAiJ,EAAA7mB,SAA8D,MAAA+e,IACvE8I,KAAAxzB,QACAwyB,EAAAvD,UAAAuE,KACAhB,EAAAvI,MAAAjpB,OAAAknC,IAAAtpC,KAAA40B,EAAA,GAAA30B,IACA2zB,EAAAtD,UAAAsE,EAAA,WAAkChB,EAAAgW,aAAA/V,IAAqB,QAQvD,SAAAhvB,GAEAA,EAAA+rB,OAAAxuB,OAAA,SAAAynC,EAAAC,EAAAzrC,GACAA,SACA,IAAAA,EAAA2qC,QACA3qC,EAAA2qC,OAAA,GAEAa,EAAAxrC,EAAAqrC,cAAAG,IAAAtnC,aACA,IAIAwnC,GAAAC,EAAAC,EAAA7nC,EAJA8nC,EAAA7rC,EAAA+L,UAAA,EACA+/B,EAAA9rC,EAAA+rC,UAAA,IACAC,EAAAhsC,EAAA8oC,WAAA,GACAmD,EAAAT,EAAAzoC,MAyGA,OAvGAkpC,GAAA,KACAjsC,EAAA2qC,OAAA,GAEA3qC,EAAA2qC,QACAe,EAAA,GAAAO,EAAA,EACAN,EAAA,WACA,GAAAO,MACAzmC,EAAA,CACA,KAAAA,EAAA,EAAgBA,EAAAwmC,EAAgBxmC,IAChCymC,EAAAV,EAAAW,OAAA1mC,IAAA,CAEA,KAAAA,EAAA,EAAgBA,EAAAwmC,EAAgBxmC,IAChCymC,EAAAV,EAAAW,OAAA1mC,KAAA,GAAAwmC,EAAAxmC,EAAA,CAEA,OAAAymC,MAEAN,EAAA,SAAA57B,EAAAylB,GACA,GAAA2W,GAAAp8B,EAAAi8B,EACAI,EAAA9xB,KAAAyvB,IAAA6B,EAAApW,EACA,OAAAqW,GAGAM,EAAAC,EAAAP,EAFAO,EAAA,EAAAD,IAKAroC,EAAA,SAAA1C,GAEA,GADAA,EAAArB,EAAAqrC,cAAAhqC,IAAA6C,cACAsnC,IAAAnqC,IAAA,IAAAA,EAAA+C,QAAAonC,GACA,OACAF,SAAA,EACAgB,MAAA,EAGA,KAAAtsC,EAAA2qC,MACA,OACAW,SAAA,EACAgB,MAAA,EAGA,IAAA7mC,GAAA4sB,EAIAka,EAAAC,EAEAC,EAAAh1B,EAAAi1B,EAAAC,EAAAC,EALAC,EAAAxrC,EAAA0B,OACA+pC,EAAAd,EACAe,EAAA1rC,EAAA+C,QAAAonC,EAAAK,GAEAmB,EAAAf,EAAAY,EAEAP,EAAA,EACAW,IASA,MARA,IAAAF,IACAD,EAAAvyB,KAAAklB,IAAAmM,EAAA,EAAAmB,GAAAD,IAEA,KADAC,EAAA1rC,EAAA+O,YAAAo7B,EAAAK,EAAAI,MAEAa,EAAAvyB,KAAAklB,IAAAmM,EAAA,EAAAmB,GAAAD,KAGAC,GAAA,EACAtnC,EAAA,EAAeA,EAAAwmC,EAAgBxmC,IAAA,CAG/B,IAFA8mC,EAAA,EACAC,EAAAQ,EACAT,EAAAC,GACAZ,EAAAnmC,EAAAomC,EAAAW,IAAAM,EACAP,EAAAC,EAEAQ,EAAAR,EAEAA,EAAAjyB,KAAA2yB,OAAAF,EAAAT,GAAA,EAAAA,EAOA,KALAS,EAAAR,EACA/0B,EAAA8C,KAAA4yB,IAAA,EAAAtB,EAAAW,EAAA,GACAE,EAAAnyB,KAAAklB,IAAAoM,EAAAW,EAAAK,GAAAZ,EACAU,EAAA,GAAA3e,OAAA0e,EAAA,GACAC,EAAAD,EAAA,OAAAjnC,GAAA,EACA4sB,EAAAqa,EAAqBra,GAAA5a,EAAY4a,IAOjC,GANAua,EAAAjB,EAAAtqC,EAAA8qC,OAAA9Z,EAAA,IAEAsa,EAAAta,GADA,IAAA5sB,GACAknC,EAAAta,EAAA,SAAAua,GAEAD,EAAAta,EAAA,SAAAua,GAAAH,EAAApa,EAAA,GAAAoa,EAAApa,KAAA,IAAAoa,EAAApa,EAAA,GAEAsa,EAAAta,GAAAqZ,IACAY,EAAAV,EAAAnmC,EAAA4sB,EAAA,KACAya,EAAA,CAIA,GAHAA,EAAAR,EACAS,EAAA1a,EAAA,EACA4a,EAAAtrC,KAAAorC,KACAA,EAAAlB,GAGA,KAFAp0B,GAAA8C,KAAA4yB,IAAA,IAAAtB,EAAAkB,GAOA,GAAAnB,EAAAnmC,EAAA,EAAAomC,GAAAiB,EACA,KAEAL,GAAAE,EAEA,OACArB,QAAAyB,GAAA,EACAT,WAGA,IAAAb,GAA0B1nC,UAAoBA,EAAA0nC,KAE5CjlC,GAiBFA,EAAAud,OAAA1e,SAAAR,KAAA,SAAA0M,EAAAC,GAEA,MAAAvR,MAAAk0B,SAAA5iB,GAAAtR,KAAAk0B,SAAA3iB,GAAA,MAEAhL,EAAAud,OAAAmD,QAAAriB,KAAA,SAAA7E,EAAAuvB,GACAtvB,KAAAsT,KAAA,WACAgc,EAAAhc,KAAAvQ,KAAA/C,MACAA,KAAAyO,QACA3N,GAAA,eAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACAM,KAAA4E,KAAAlF,EAAA4vB,QAAA,IACMtvB,OACNc,GAAA,wCAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACAM,KAAA4E,KAAAlF,EAAA4vB,QAAA5vB,EAAAgpB,KAAA4G,QAAA,GACAtvB,KAAAo4B,YAAA14B,EAAA4vB,QAAA5vB,EAAAgpB,KAAA4G,QAAA,IACMtvB,OACNc,GAAA,oCAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACAM,KAAA4E,KAAAlF,EAAA4vB,QAAA,GACAtvB,KAAAo4B,YAAA14B,EAAA4vB,QAAA,IACMtvB,QAWNA,KAAA4E,KAAA,SAAA1F,EAAAo5B,GACA,GAAA9yB,GAAA4sB,CAEA,KADAlzB,EAAAc,KAAAiyB,SAAA/yB,KACAA,EAAAswB,UAAAtwB,EAAAswB,SAAA1sB,SACA5D,EAAAswB,SAAA5qB,KAAA2B,EAAA0pB,MAAAjwB,KAAAgwB,SAAAprB,KAAA5E,OACAs4B,GACA,IAAA9yB,EAAA,EAAA4sB,EAAAlzB,EAAAuwB,WAAA3sB,OAA0C0C,EAAA4sB,EAAO5sB,IACjDxF,KAAA4E,KAAA1F,EAAAuwB,WAAAjqB,IAAA,IAgBA,IAAAk8B,IAAA,CAMAn7B,GAAAud,OAAA1e,SAAAujB,OAMAzmB,IAAA,SAMAiF,OAAA,oDAMAgmC,KAAA,EAMAjpC,QAAA,GAEAqC,EAAAud,OAAAmD,QAAA0B,MAAA,SAAA5oB,EAAAuvB,GACAtvB,KAAAsT,KAAA,WACAgc,EAAAhc,KAAAvQ,KAAA/C,KACA,IAAAsT,GAAA/M,EAAA0pB,MAAA,WACAjwB,KAAAyO,QAAA3N,GAAAd,KAAAgwB,SAAArH,MAAAxhB,OAAAZ,EAAA0pB,MAAA,WACAyR,GAAaS,aAAAT,GACbA,EAAAlP,WAAAjsB,EAAA0pB,MAAA,WAA0CjwB,KAAAotC,cAAqBptC,MAAA,MAC1DA,QACDA,KACJA,MAAAyO,QACA3N,GAAA,eAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACAM,KAAAyO,QAAAg2B,IAAA,uBAAAnxB,GACAtT,KAAAqtC,iBAAiC/5B,KAC3BtT,QAONA,KAAAotC,WAAA,WACA,GAAAE,IAAa3kB,MAAA3oB,KAAAk7B,YAAAiS,IAAAntC,KAAAgwB,SAAArH,MAAAwkB,IAAAI,KAAA,GAAAx3B,MACbxP,GAAA+rB,OAAAkb,QAAAlgC,IAAAtN,KAAAgwB,SAAArH,MAAAzmB,IAAA2zB,KAAAC,UAAAwX,KAOAttC,KAAAqtC,cAAA,WACA,GAAA5gB,GAAAlmB,EAAA+rB,OAAAkb,QAAA9pC,IAAA1D,KAAAgwB,SAAArH,MAAAzmB,IACA,IAAAuqB,EAAY,IAAMA,EAAAoJ,KAAAvwB,MAAAmnB,GAAqB,MAAAoH,GAAY,SACnD,QAAApH,KAAA0gB,KAAA1gB,EAAA8gB,MAAA,GAAAx3B,MAAA0W,EAAA8gB,IAAA9gB,EAAA0gB,OACA1gB,KAAA9D,QAAuB8D,IAAA9D,OACvB8D,GAAAlmB,EAAA6sB,WAAApzB,KAAAgwB,SAAArH,MAAAzkB,UAAwDuoB,EAAAzsB,KAAAgwB,SAAArH,MAAAzkB,OAAAnB,KAAA/C,KAAAysB,MACxDA,IACAzsB,KAAAyO,QAAAg2B,IAAA,4BAAA10B,EAAArQ,GAA6DA,EAAAwuB,SAAA7Z,QAAA,iBAAyCsU,MAAApiB,EAAAjH,QAAA,KAA4BmtB,OAClIzsB,KAAAy7B,UAAAhP,IACA,KASAzsB,KAAAytC,YAAA,WACA,MAAAlnC,GAAA+rB,OAAAkb,QAAA5rC,IAAA5B,KAAAgwB,SAAArH,MAAAzmB,OAIA,SAAAqE,EAAArF,GACAqF,EAAA+rB,OAAAkb,SAEAlgC,IAAA,SAAApL,EAAA+J,GAA8B,MAAAJ,QAAA6hC,aAAAC,QAAAzrC,EAAA+J,IAC9BvI,IAAA,SAAAxB,GAAyB,MAAA2J,QAAA6hC,aAAAE,QAAA1rC,IACzBN,IAAA,SAAAM,GAAyB,MAAA2J,QAAA6hC,aAAAG,WAAA3rC,MAEvBqE,GA2BFA,EAAAud,OAAA1e,SAAA8hB,OACAmI,OACAjwB,YAGAmH,EAAAud,OAAAmD,QAAAC,MAAA,SAAAnnB,EAAAuvB,GACAtvB,KAAA2sB,KAAA,SAAA1lB,EAAAlH,GACA,GAAAyF,GAAA4sB,CACA,IAAAryB,KAAAmnB,OAAAnnB,EAAAmnB,MAAA,QACA,IAAA1hB,IAAAzF,GAAAmnB,MACA,eAAA1hB,GAAA,MAAAA,GAAAzF,EAAAmnB,MAAAmQ,eAAA7xB,GACA,IAAA4sB,IAAAryB,GAAAmnB,MAAA,QACAnnB,EAAAmnB,MAAA,QAAAmQ,eAAAjF,IAAAryB,EAAAmnB,MAAA1hB,GAAA4sB,KAAAlxB,IACAnB,EAAAmnB,MAAA1hB,GAAA4sB,GAAAryB,EAAAmnB,MAAA,QAAAkL,GAMA9C,GAAA3C,KAAA5pB,KAAA/C,KAAAiH,EAAAlH,GACAC,KAAA0tB,OAAAhuB,KAAA,KAAAgG,KAAA,KAEA1F,KAAA67B,QAAA,SAAAC,EAAAC,GACAzM,EAAAuM,QAAA94B,KAAA/C,KAAA87B,EAAAC,GACA/7B,KAAA0tB,OAAAhuB,KAAA,KAAAgG,KAAA,KAEA1F,KAAAsT,KAAA,WACAtT,KAAAyO,QACA3N,GAAA,eAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACA,GAGA8F,GAAA4sB,EAHAxc,EAAA5V,KAAA0tB,OAAAhuB,KACA22B,EAAA32B,EAAA01B,MACAE,EAAAt1B,KAAAgwB,SAAA9I,MACA6N,EAAA,SACA,KAAAvvB,EAAA,EAAA4sB,EAAAiE,EAAAvzB,OAAgC0C,EAAA4sB,EAAO5sB,IACvCuvB,EAAA,UACAnf,EAAAygB,EAAA7wB,IAAA4xB,UAAAxhB,EAAAygB,EAAA7wB,IAAA4xB,SAAA1xB,MAAA4vB,EAAA1f,EAAAygB,EAAA7wB,IAAA4xB,SAAA1xB,QACAqvB,EAAAnf,EAAAygB,EAAA7wB,IAAA4xB,SAAA1xB,MAEAkQ,EAAAygB,EAAA7wB,IAAA9F,MAAAkW,EAAAygB,EAAA7wB,IAAA9F,KAAAokB,QAAAlO,EAAAygB,EAAA7wB,IAAA9F,KAAAokB,OAAApe,MAAA4vB,EAAA1f,EAAAygB,EAAA7wB,IAAA9F,KAAAokB,OAAApe,QACAqvB,EAAAnf,EAAAygB,EAAA7wB,IAAA9F,KAAAokB,OAAApe,MAEAkQ,EAAAygB,EAAA7wB,IAAAE,KAAAqvB,GACA,IAAAnf,EAAAygB,EAAA7wB,IAAA2hB,MAAAmO,EAAAP,GAAA5N,OAAAjmB,IACA0U,EAAAygB,EAAA7wB,IAAA2hB,KAAAmO,EAAAP,GAAA5N,KAGAvR,GAAA,KAAAlQ,KAAA,KACM1F,OACNsvB,EAAAhc,KAAAvQ,KAAA/C,OAEAA,KAAAo8B,SAAA,SAAAl9B,EAAAa,EAAAs8B,GACA,GAAA72B,GAAA4sB,EACAxc,EAAA5V,KAAA0tB,OAAAhuB,KACA8sB,EAAAzsB,EAAAwG,EAAAjH,QAAA,KAAqCS,GAAY08B,OAAA,OACjDlQ,EAAA+C,EAAA8M,SAAAr5B,KAAA/C,KAAAd,EAAAstB,EAAA6P,EACA,SAAA9P,EAAsB,QACtB,IAAAhmB,EAAAyuB,QAAAzI,GACA,IAAA/mB,EAAA,EAAA4sB,EAAA7F,EAAAzpB,OAA8B0C,EAAA4sB,EAAO5sB,IACrC+mB,EAAA/mB,GAAAE,KAAA6mB,EAAA/mB,GAAA7D,IAAAiU,EAAA2W,EAAA/mB,GAAA7D,KAAAiU,EAAA2W,EAAA/mB,GAAA7D,IAAA+D,KAAAkQ,EAAA2W,EAAA/mB,GAAA7D,IAAA+D,KAAA,UACA3F,KAAA08B,cACAlQ,GAAA/mB,GAAA7D,GACA4qB,EAAA/mB,GAAAqjB,SAAA0D,EAAA/mB,GAAAqjB,QAAAlnB,UACA4qB,GAAA/mB,GAAAqjB,QAAAlnB,QAMA4qB,GAAA7mB,KAAA6mB,EAAA5qB,IAAAiU,EAAA2W,EAAA5qB,KAAAiU,EAAA2W,EAAA5qB,IAAA+D,KAAAkQ,EAAA2W,EAAA5qB,IAAA+D,KAAA,UACA3F,KAAA08B,QACAlQ,EAAAvsB,KAAA8tC,YAAAvhB,GAGA,OAAAA,IAEAvsB,KAAA8tC,YAAA,SAAAvhB,GACA,GAAAhmB,EAAAyuB,QAAAzI,GAAA,CACA,OAAA/mB,GAAA,EAAA4sB,EAAA7F,EAAAzpB,OAAkC0C,EAAA4sB,EAAO5sB,IACzC+mB,EAAA/mB,GAAAxF,KAAA8tC,YAAAvhB,EAAA/mB,GAEA,OAAA+mB,GASA,aAPAA,GAAA5qB,GACA4qB,EAAA1D,SAAA0D,EAAA1D,QAAAlnB,UACA4qB,GAAA1D,QAAAlnB,GAEA4qB,EAAAiD,UAAAjpB,EAAAyuB,QAAAzI,EAAAiD,YACAjD,EAAAiD,SAAAxvB,KAAA8tC,YAAAvhB,EAAAiD,WAEAjD,GAEAvsB,KAAA88B,MAAA,SAAAK,EAAAj+B,EAAAi3B,EAAAyG,EAAA1tB,GACA,QAAAogB,EAAAwN,MAAA/5B,KAAA/C,KAAAm9B,EAAAj+B,EAAAi3B,EAAAyG,EAAA1tB,GAAoE,QACpEhQ,QAAAyC,GAAAzC,EAAAc,KAAAiyB,SAAA/yB,GACAi3B,OAAAx0B,GAAAw0B,EAAAn2B,KAAAiyB,SAAAkE,EACA,IAAA5J,GAAAgJ,EAAA/vB,EAAA4sB,EAAAxc,EAAA1W,KAAAyC,GAAA4E,EAAAud,OAAAwJ,UAAApuB,EAAAyC,IAAA,IAEA,QADAiU,OAAA8X,QAAA9X,EAAA8X,OAAAhuB,KAAAkW,EAAA8X,OAAAhuB,KAAA,KACAy9B,GACA,kBACA,gBACA,gBACA,iBAAAA,IAAA,IAAA52B,EAAAkxB,QAAAv4B,EAAAyC,GAAAw0B,EAAA3G,UAAA,CAEA,GADAjD,EAAAvsB,KAAA+tC,UAAA5X,GACA5J,EAAAyhB,eAAA9sC,IAAA,IAAAqrB,EAAAyhB,cAAAzhB,EAAAyhB,eAAA7X,EAAA3G,SAAA1sB,OAEA,MADA9C,MAAA+sB,MAAA/F,KAAAmG,YAAqCrnB,MAAA,QAAA4mB,OAAA,QAAA/qB,GAAA,WAAAi0B,OAAA,mCAAAuH,EAAAz9B,KAAAm2B,KAAAC,WAAyIqH,MAAAP,MAAA19B,aAAAyC,KAAAzC,EAAAyC,GAAAw0B,aAAAx0B,KAAAw0B,EAAAx0B,OAC9K,CAEA,IAAA4qB,EAAA0hB,iBAAA/sC,IAAA,IAAAqrB,EAAA0hB,iBAAA,IAAA1nC,EAAAkxB,QAAAv4B,EAAAwG,KAAA6mB,EAAA0hB,gBAEA,MADAjuC,MAAA+sB,MAAA/F,KAAAmG,YAAqCrnB,MAAA,QAAA4mB,OAAA,QAAA/qB,GAAA,WAAAi0B,OAAA,qCAAAuH,EAAAz9B,KAAAm2B,KAAAC,WAA2IqH,MAAAP,MAAA19B,aAAAyC,KAAAzC,EAAAyC,GAAAw0B,aAAAx0B,KAAAw0B,EAAAx0B,OAChL,CAEA,IAAAiU,GAAA1W,EAAAuwB,YAAAvwB,EAAAqwB,QAAA,CAEA,IADAgG,EAAA,EACA/vB,EAAA,EAAA4sB,EAAAlzB,EAAAuwB,WAAA3sB,OAA4C0C,EAAA4sB,EAAO5sB,IACnD+vB,EAAAjb,KAAA4yB,IAAA3X,EAAA3f,EAAA1W,EAAAuwB,WAAAjqB,IAAA+pB,QAAAzsB,OAEAyyB,KAAAr2B,EAAAqwB,QAAAzsB,OAAA,GAEAyyB,GAAA,GAAAA,IAAAr0B,KAAqCq0B,EAAA,EACrC,IACA,GAAAhJ,EAAA2hB,YAAAhtC,IAAA,IAAAqrB,EAAA2hB,WAAA3hB,EAAA2hB,UAAA3Y,EAEA,MADAv1B,MAAA+sB,MAAA/F,KAAAmG,YAAsCrnB,MAAA,QAAA4mB,OAAA,QAAA/qB,GAAA,WAAAi0B,OAAA,gCAAAuH,EAAAz9B,KAAAm2B,KAAAC,WAAsIqH,MAAAP,MAAA19B,aAAAyC,KAAAzC,EAAAyC,GAAAw0B,aAAAx0B,KAAAw0B,EAAAx0B,OAC5K,CAEAw0B,GAAAn2B,KAAAiyB,SAAAkE,EAAA7G,QACA/C,EAAAvsB,KAAA+tC,UAAA5X,GACAZ,UACOY,IAIP,UASAn2B,KAAA+tC,UAAA,SAAA7uC,GAEA,KADAA,EAAAc,KAAAiyB,SAAA/yB,IACa,QACb,IAAAqtB,GAAAvsB,KAAAmuC,SAAAjvC,GAAA,EAIA,OAHAqtB,GAAA2hB,YAAAhtC,IAAoCqrB,EAAA2hB,WAAA,GACpC3hB,EAAAyhB,eAAA9sC,IAAuCqrB,EAAAyhB,cAAA,GACvCzhB,EAAA0hB,iBAAA/sC,IAAyCqrB,EAAA0hB,gBAAA,GACzC1hB,GAUAvsB,KAAAmuC,SAAA,SAAAjvC,EAAAkvC,GAEA,SADAlvC,EAAAc,KAAAiyB,SAAA/yB,MACAkvC,EAAA7nC,EAAAjH,QAA+CoG,KAAAxG,EAAAwG,MAAoB1F,KAAAgwB,SAAA9I,MAAAhoB,EAAAwG,OAAAxG,EAAAwG,OASnE1F,KAAAquC,SAAA,SAAAnvC,EAAAwG,GACA,GAAA4vB,GAAA8D,EAAAC,EAAAiV,EAAAC,CACA,IAAAhoC,EAAAyuB,QAAA91B,GAAA,CAEA,IADAA,IAAAwb,QACA0e,EAAA,EAAAC,EAAAn6B,EAAA4D,OAAgCs2B,EAAAC,EAASD,IACzCp5B,KAAAquC,SAAAnvC,EAAAk6B,GAAA1zB,EAEA,UAIA,MAFA4vB,GAAAt1B,KAAAgwB,SAAA9I,MACAhoB,EAAAc,KAAAiyB,SAAA/yB,MACAo2B,EAAA5vB,KAAAxG,KACAovC,EAAApvC,EAAAwG,KACA6oC,EAAAvuC,KAAAs8B,SAAAp9B,GACAA,EAAAwG,SACA,IAAA6oC,GAAAjZ,EAAAgZ,IAAAhZ,EAAAgZ,GAAAnnB,MAAAonB,IAAAjZ,EAAAgZ,GAAAnnB,OACAnnB,KAAAkhC,SAAAhiC,EAAAo2B,EAAA5vB,GAAAyhB,OAAAjmB,GAAAo0B,EAAA5vB,GAAAyhB,OAEA,KAiBA5gB,EAAAud,OAAA1e,SAAAopC,QAMA7D,gBAAA,EAMA8D,UAAA,SAAAtiC,EAAAuiC,GACA,MAAAviC,GAAA,KAAAuiC,EAAA,MAIAnoC,EAAAud,OAAAmD,QAAAunB,OAAA,SAAAzuC,EAAAuvB,GACAtvB,KAAA88B,MAAA,SAAAK,EAAAj+B,EAAAi3B,EAAAyG,EAAA1tB,GACA,QAAAogB,EAAAwN,MAAA/5B,KAAA/C,KAAAm9B,EAAAj+B,EAAAi3B,EAAAyG,EAAA1tB,GAAoE,QAGpE,IAFAhQ,OAAAyC,GAAAzC,EAAAc,KAAAiyB,SAAA/yB,KACAi3B,OAAAx0B,GAAAw0B,EAAAn2B,KAAAiyB,SAAAkE,MACAA,EAAA3G,SAA8B,QAC9B,IAGAhqB,GAAA4sB,EAHAuJ,EAAA,gBAAAwB,EAAAP,EAAA19B,EAAAkC,KACA2zB,KACAvf,EAAAxV,KAAAgwB,SAAAwe,OAAA7D,eACA/0B,EAAA5V,KAAA0tB,OAAAhuB,IACA,KAAA8F,EAAA,EAAA4sB,EAAA+D,EAAA3G,SAAA1sB,OAAsC0C,EAAA4sB,EAAO5sB,IAC7CuvB,EAAArzB,KAAA8T,EAAAI,EAAAugB,EAAA3G,SAAAhqB,IAAApE,KAAAwU,EAAAugB,EAAA3G,SAAAhqB,IAAApE,KAAA6C,cAGA,QADAuR,IAAWmmB,IAAA13B,eACXk5B,GACA,kBACA,QACA,mBAKA,MAJA33B,IAAA,IAAAe,EAAAkxB,QAAAkE,EAAA5G,IAAA71B,EAAAkC,MAAAlC,EAAAkC,KAAAoU,EAAA,8BAAAmmB,EACAn2B,IACAxF,KAAA+sB,MAAA/F,KAAAmG,YAAoCrnB,MAAA,QAAA4mB,OAAA,SAAA/qB,GAAA,YAAAi0B,OAAA,mBAAA+F,EAAA,gCAAAwB,EAAAz9B,KAAAm2B,KAAAC,WAAiKqH,MAAAP,MAAA19B,aAAAyC,KAAAzC,EAAAyC,GAAAw0B,aAAAx0B,KAAAw0B,EAAAx0B,OAErM6D,CACA,mBAKA,MAJAA,IAAA,IAAAe,EAAAkxB,QAAAkE,EAAA5G,GACAvvB,IACAxF,KAAA+sB,MAAA/F,KAAAmG,YAAoCrnB,MAAA,QAAA4mB,OAAA,SAAA/qB,GAAA,YAAAi0B,OAAA,mBAAA+F,EAAA,gCAAAwB,EAAAz9B,KAAAm2B,KAAAC,WAAiKqH,MAAAP,MAAA19B,aAAAyC,KAAAzC,EAAAyC,GAAAw0B,aAAAx0B,KAAAw0B,EAAAx0B,OAErM6D,CACA,iBAKA,MAJAA,IAAA,IAAAe,EAAAkxB,QAAAkE,EAAA5G,GACAvvB,IACAxF,KAAA+sB,MAAA/F,KAAAmG,YAAoCrnB,MAAA,QAAA4mB,OAAA,SAAA/qB,GAAA,YAAAi0B,OAAA,mBAAA+F,EAAA,gCAAAwB,EAAAz9B,KAAAm2B,KAAAC,WAAiKqH,MAAAP,MAAA19B,aAAAyC,KAAAzC,EAAAyC,GAAAw0B,aAAAx0B,KAAAw0B,EAAAx0B,OAErM6D,CACA,iBAKA,MAJAA,GAAAtG,EAAAowB,SAAA6G,EAAAx0B,KAAA,IAAA4E,EAAAkxB,QAAAkE,EAAA5G,GACAvvB,IACAxF,KAAA+sB,MAAA/F,KAAAmG,YAAoCrnB,MAAA,QAAA4mB,OAAA,SAAA/qB,GAAA,YAAAi0B,OAAA,mBAAA+F,EAAA,gCAAAwB,EAAAz9B,KAAAm2B,KAAAC,WAAiKqH,MAAAP,MAAA19B,aAAAyC,KAAAzC,EAAAyC,GAAAw0B,aAAAx0B,KAAAw0B,EAAAx0B,OAErM6D,EAEA,UAEAxF,KAAA28B,YAAA,SAAAxG,EAAAzN,EAAAkU,EAAAjxB,EAAAgpB,GACA,IAAAjM,KAAAtnB,OAAAF,EAAA,CAKA,GAJA,OAAAi1B,IACAA,EAAA,OAEAA,EAAAn2B,KAAAiyB,SAAAkE,IAEA,MAAA7G,GAAAqN,YAAA55B,KAAA/C,KAAAm2B,EAAAzN,EAAAkU,EAAAjxB,EAAAgpB,EAGA,IADAiI,MAAA17B,EAAA,OAAA07B,GACAA,EAAA1F,WAAA2F,MAAA,sBAAAlI,IAAA30B,KAAA20B,UAAAwB,GACA,MAAA7G,GAAAqN,YAAA55B,KAAA/C,KAAAm2B,EAAAzN,EAAAkU,EAAAjxB,EAAAgpB,EAEAjM,KAAeA,KACf,IAAA6D,GAAAoP,EAAAtF,EAAA7wB,EAAA4sB,EAAAxc,EAAA5V,KAAA0tB,OAAAhuB,KAAA8V,EAAAxV,KAAAgwB,SAAAwe,OAAA7D,eAAA1U,EAAAj2B,KAAAgwB,SAAAwe,OAAAC,SAGA,KAFA9S,EAAApP,EAAAvsB,KAAA0wB,WAAA,YACA2F,KACA7wB,EAAA,EAAA4sB,EAAA+D,EAAA3G,SAAA1sB,OAAuC0C,EAAA4sB,EAAO5sB,IAC9C6wB,EAAA30B,KAAA8T,EAAAI,EAAAugB,EAAA3G,SAAAhqB,IAAApE,KAAAwU,EAAAugB,EAAA3G,SAAAhqB,IAAApE,KAAA6C,cAGA,KADAuB,EAAA,GACA,IAAAe,EAAAkxB,QAAAjiB,EAAAmmB,IAAA13B,cAAAoyB,IACAsF,EAAA1F,EAAAlzB,KAAA/C,KAAAusB,IAAA/mB,GAAA0xB,UAEAxO,GAAAtnB,KAAAu6B,EAEA,MAAArM,GAAAqN,YAAA55B,KAAA/C,KAAAm2B,EAAAzN,EAAAkU,EAAAjxB,EAAAgpB,IAcA,IAAAga,GAAAr4B,SAAAN,cAAA,MACA24B,GAAAziB,aAAA,qBACAyiB,EAAAjzB,UAAA,kBACAizB,EAAAxV,UAAA,SACA5yB,EAAAud,OAAAmD,QAAA2nB,SAAA,SAAA7uC,EAAAuvB,GACAtvB,KAAAsT,KAAA,WACAgc,EAAAhc,KAAAvQ,KAAA/C,MAEAA,KAAAyO,QACA3N,GAAA,gCAAAyF,EAAA0pB,MAAA,WACAjwB,KAAA6gC,aACM7gC,OACNc,GAAA,0CAAAyF,EAAA0pB,MAAA,WAEAjwB,KAAA4wB,mBAAArU,SAAA,uBACMvc,OACNc,GAAA,sBAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACAM,KAAAyO,QAAA5B,KAAA,4BAAAyP,YAAA,4BACMtc,OACNc,GAAA,iBAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACAM,KAAAyO,QAAA5B,KAAA,4BAAAyP,YAAA,0BACA,IAAA9W,GAAA4sB,EAAA7F,GAAA,CACA,KAAA/mB,EAAA,EAAA4sB,EAAA1yB,EAAAiD,SAAAG,OAA0C0C,EAAA4sB,EAAO5sB,KACjD+mB,EAAAvsB,KAAAiyB,SAAAvyB,EAAAiD,SAAA6C,IAAA,KACA+mB,EAAAzpB,QACAypB,EAAAiD,SAAA,oBAAAjT,SAAA,4BAGMvc,OACNc,GAAA,mBAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACAM,KAAAiyB,SAAAvyB,EAAAgpB,MAAA,GAAA7b,KAAA,mBAAAyiB,SAAAE,SAAA,oBAAAjT,SAAA,4BACMvc,OACNc,GAAA,wCAAAyF,EAAA0pB,MAAA,SAAAlgB,EAAArQ,GACAM,KAAAiyB,SAAAvyB,EAAAgpB,MAAA,GAAA8G,SAAA,mCAAAzf,EAAArK,KAAA,sDACM1F,OACNc,GAAA,wCAAAyF,EAAA0pB,MAAA,SAAAlgB,GACAA,EAAAC,gBACA,IAAAuc,GAAAhmB,EAAAsoC,MAAA,eAAwCxU,QAAAtqB,EAAAsqB,QAAAC,QAAAvqB,EAAAuqB,QAAAwU,OAAA/+B,EAAA++B,OAAAvU,SAAAxqB,EAAAwqB,SAAA4J,MAAAp0B,EAAAo0B,MAAAC,MAAAr0B,EAAAq0B,OACxC79B,GAAAwJ,EAAA0L,eAAAO,QAAA,gBAAAwT,SAAA,wBAAAnb,QAAAkY,IACMvsB,OACNc,GAAA,2CAAAiP,GACAA,EAAAqvB,0BACA,IAAA7S,GAAAhmB,EAAAsoC,MAAA,SAAkCxU,QAAAtqB,EAAAsqB,QAAAC,QAAAvqB,EAAAuqB,QAAAwU,OAAA/+B,EAAA++B,OAAAvU,SAAAxqB,EAAAwqB,UAClCh0B,GAAAwJ,EAAA0L,eAAAO,QAAA,gBAAAwT,SAAA,wBAAAnb,QAAAkY,GAAAiF,UAEA1wB,GAAA,4CAAAyF,EAAA0pB,MAAA,SAAAlgB,GACAA,EAAAqvB,0BACA,IAAA7S,GAAAhmB,EAAAsoC,MAAA,SAAkCxU,QAAAtqB,EAAAsqB,QAAAC,QAAAvqB,EAAAuqB,QAAAwU,OAAA/+B,EAAA++B,OAAAvU,SAAAxqB,EAAAwqB,UAClCh0B,GAAAwJ,EAAA0L,eAAAO,QAAA,gBAAAwT,SAAA,wBAAAnb,QAAAkY,GAAAiF,SACMxxB,OACNc,GAAA,oDAAAyF,EAAA0pB,MAAA,SAAAlgB,GAGA,MAFAA,GAAAqvB,2BACAp/B,KAAA8yB,WAAA/iB,EAAA0L,gBACA,GACMzb,OACNc,GAAA,mCAAAyF,EAAA0pB,MAAA,SAAAlgB,GACA/P,KAAA+yB,aAAAhjB,EAAA0L,gBACMzb,QAENA,KAAAkwB,SAAA,WACAlwB,KAAAgwB,SAAA4e,UACA5uC,KAAAyO,QAAA5B,KAAA,oBAAA7K,SAEAstB,EAAAY,SAAAntB,KAAA/C,OAEAA,KAAAo4B,YAAA,SAAAl5B,EAAAo5B,EAAA3sB,GAEA,GADAzM,EAAAowB,EAAA8I,YAAAr1B,KAAA/C,KAAAd,EAAAo5B,EAAA3sB,GACA,CACA,GAAA4gB,GAAAoiB,EAAA/V,WAAA,IAEA,IAAAryB,EAAAkxB,QAAAv4B,EAAAyC,GAAA3B,KAAA+sB,MAAA/F,KAAArkB,YAA4D4pB,EAAA7Q,WAAA,4BAC5Dxc,EAAAmX,aAAAkW,EAAArtB,EAAA25B,WAAA,IAEA,MAAA35B,Sbw/HM6vC,IACA,SAAUvwC,EAAQC,EAASC,GAEjC,cAC4B,SAASC,EAAUC,EAAG2H,GAkBlD,QAASE,GAAuBvH,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAhBvFL,OAAOC,eAAeL,EAAS,cAC3BM,OAAO,Gc/kVX,IAAA2H,GAAAhI,EAAA,IdolVIiI,EAAWF,EAAuBC,GcnlVtCE,EAAAlI,EAAA,KdulVImI,EAAiBJ,EAAuBG,GctlV5CE,EAAApI,EAAA,Kd0lVIqI,EAAaN,EAAuBK,GczlVpCsQ,EAAczY,EAASU,KAAKC,QAC5B2H,GAAI,UAEJpD,MAAO,KAEP9D,WAEAoH,QACIQ,kCAAmC,mBAGvC7H,WAAY,SAASC,GACjBC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,GAClCC,KAAKD,QAAQ4B,IACb3B,KAAKgvC,gBAIbA,aAAc,SAASjvC,GACnBC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,GACtCC,KAAK6D,MAAQ,GAAIgD,GAAAzH,QAAkB+D,SAC/BxB,GAAI3B,KAAKD,QAAQ4B,IAErB,IAAIic,GAAO5d,IACXA,MAAK6D,MAAMwE,OACPC,QAAS,WACDsV,EAAK7d,QAAQwI,kBACbqV,EAAKpV,mBAGb1C,MAAO,SAASjC,EAAO+E,OACkB,KAA1BA,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAS8C,EAASC,aAAaC,QAA1C,0BAA4E,IACxEC,QAAS,WACLzF,OAAO0F,UAAUC,eAAeC,UAIxCvC,EAAAvH,QAAW0G,MAAM,4CAA6C,IAC1DiD,QAAS,WACLzF,OAAO0F,UAAUC,eAAeC,cAQxDV,gBAAiB,SAASzI,GACtBC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,GACtCwG,EAAE,YAAYvE,aAE2Bd,KAArClB,KAAKD,QAAQqN,sBAC4D,IAArEpN,KAAKD,QAAQqN,oBAAoB6hC,yBAAyBnsC,OAC1D9C,KAAK6D,MAAMyJ,KAAMC,iBAAiB,IAElCvN,KAAK6D,MAAMyJ,KAAMC,iBAAiB,IAG1C,IAAIC,IAAW,CACXlK,QAAOye,OACPvU,EAAWlK,OAAOye,KAAKC,UAE3B,IAAI7Y,GAAWnJ,KAAKkvC,4BACpBlvC,MAAKQ,IAAI6I,KAAKF,GAAWuW,QAAS1f,KAAK6D,MAAO2J,SAAUA,IAExD,IAAI5M,GAAOZ,IACXuG,GAAE7C,IAAOJ,OAAOC,KAAhB,iBAAqC3C,EAAKe,GAA1C,8BACKyK,KAAK,SAAAgB,GACFxM,EAAK+M,oBACDP,oBAAqBA,MAG5Bb,KAAK,WACF5F,EAAAvH,QAAW0G,MAAM,sEAGzBS,EAAE,yBAAyB+C,UAE3B/C,EAAE,WAAW/G,IAAI,WAAY,SAGjCoO,gBAAiB,SAASC,GAEtB,IAAK,GADDC,MACKtI,EAAI,EAAGA,EAAIqI,EAAU/K,OAAQ0C,IAClCsI,EAAepM,KAAQmM,EAAUrI,GAAG,GAApC,IAA0CqI,EAAUrI,GAAG,GAE3D,OAAOsI,IAGXH,mBAAoB,SAAS5N,GACzBC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,EACtC,IAAIqN,GAAsBpN,KAAKD,QAAQqN,oBACnCxM,EAAOZ,KAEPmvC,EAAgCnvC,KAAK4N,gBAAgBR,EAAoB6hC,0BACzEG,EAA0BpvC,KAAK4N,gBAAgBR,EAAoBiiC,4BACnEC,EAAgCtvC,KAAK4N,gBAAgBR,EAAoBmiC,0BACzEC,EAAgCxvC,KAAK4N,gBAAgBR,EAAoBqiC,yBAE7E7uC,GAAKoN,mBAAqB,GAAIjH,GAAA3H,QAAWC,KACrCW,KAAK0vC,qBAAqB1vC,KAAM,cAAemvC,GAA+B,IAElFvuC,EAAK+uC,gBAAkB,GAAI5oC,GAAA3H,QAAWC,KAClCW,KAAK0vC,qBAAqB1vC,KAAM,WAAYovC,GAAyB,IAEzExuC,EAAKyN,mBAAqB,GAAItH,GAAA3H,QAAWC,KACrCW,KAAK0vC,qBAAqB1vC,KAAM,cAAesvC,GAA+B,IAElF1uC,EAAKuN,mBAAqB,GAAIpH,GAAA3H,QAAWC,KACrCW,KAAK0vC,qBAAqB1vC,KAAM,cAAewvC,GAA+B,KAItFE,qBAAsB,SAAS9uC,EAAMe,EAAIiuC,EAAWC,GAsDhD,MArDAA,IAA0C,IAAtBA,GAA6BA,GAE7CjwC,mBAAoB,EACpBJ,IAAKmC,EACLhC,UAAU,EACVF,YAAa,yBACbW,UAAWQ,EAAKJ,IAAIqM,KAAT,IAAkBlL,GAC7BU,MACI4D,IAAQ3C,OAAOC,KAAf,iBAAoC3C,EAAKe,GAAzC,kDACIkuC,EAEJlhC,SAAU,OACVC,YAAa,IACblP,KAAM,SAASmP,EAAMC,GAEjB,OACIC,EAAGF,EACHG,WAAY,GACZF,KAAMA,IAGdG,QAAS,SAASvP,EAAMoP,GACpB,GAAII,GAAc,GAAPJ,EAAYpP,EAAKyP,KAE5B,QAASF,QAASvP,EAAK0P,MAAOF,KAAMA,KAG5C1M,aAAc,SAA0BgM,GACpC,MAAUA,GAAKrC,KAAf,UAA6BqC,EAAK9I,MAGtCjD,gBAAiB,SAA6B+L,GAC1C,MAAOA,GAAKrC,MAEhBzJ,cAAe,SAAS+L,EAAS9C,GAI7B,GAAIjM,KACJ6G,GAAEkI,EAAQxC,MAAM1B,MAAM,MAAMD,KAAK,WAC7B,GAAIhG,GAAOtE,KAAKuK,MAAM,IACtB7K,GAAKgC,MACDC,GAAI2C,EAAK,GACT6H,KAAM7H,EAAK,OAGnBqH,EAASjM,IAGbG,YAAa+vC,EACbttC,iBAAkB,YAM1BgO,mBAAoB,WAChB,GAAI1P,GAAOZ,IACXuG,GAAE2F,KAAQ5I,OAAOC,KAAjB,0BAA+C3C,EAAKe,GAApD,oCACKyK,KAAK,SAAAgB,GACFxM,EAAKiD,MAAMyJ,KAAMC,iBAAiB,IAClC3M,EAAK4H,iBACD4E,oBAAqBA,IAEzBzG,EAAAvH,QAAWkJ,QAAQ,wCAEtBiE,KAAK,WACF5F,EAAAvH,QAAW0G,MAAM,kEAI7ByK,0BAA2B,WACvB,GAAI3P,GAAOZ,IACXuG,GAAE2F,KAAQ5I,OAAOC,KAAjB,0BAA+C3C,EAAKe,GAApD,2CACKyK,KAAK,SAAAgB,GACFxM,EAAKiD,MAAMyJ,KAAMC,iBAAiB,IAClC3M,EAAK4H,iBACD4E,oBAAqBA,IAEzBzG,EAAAvH,QAAWkJ,QAAQ,iDAEtBiE,KAAK,WACF5F,EAAAvH,QAAW0G,MAAM,uEAI7B0K,YAAa,SAASC,GAElB,IAAK,GADDC,MACKlL,EAAIiL,EAAW3N,OAAS,EAAG0C,GAAK,EAAGA,IACxCkL,EAAShP,KAAK+O,EAAWjL,GAAG7D,GAEhC,OAAO+O,IAEXC,gBAAiB,SAASC,GACtB,GAAIhQ,GAAOZ,KAEP6Q,EAAa7Q,KAAKwQ,YAAYxQ,KAAKgO,mBAAmBxN,IAAIa,QAAQ,SAClEyuC,EAAU9vC,KAAKwQ,YAAYxQ,KAAK2vC,gBAAgBnvC,IAAIa,QAAQ,SAC5DyP,EAAa9Q,KAAKwQ,YAAYxQ,KAAKqO,mBAAmB7N,IAAIa,QAAQ,SAClE0P,EAAa/Q,KAAKwQ,YAAYxQ,KAAKmO,mBAAmB3N,IAAIa,QAAQ,QAEtEkF,GAAE2F,KAAQ5I,OAAOC,KAAjB,iBAAsC3C,EAAKe,GAA3C,uCACIqP,eAAgBH,EAChBk/B,YAAaD,EACb7+B,eAAgBH,EAChBI,eAAgBH,IAEf3E,KAAK,SAAAgB,GAEFxM,EAAK4H,iBACD4E,oBAAqBA,IAEzBzG,EAAAvH,QAAWkJ,QAAQ,wBAEtBiE,KAAK,WACF5F,EAAAvH,QAAW0G,MAAM,qEAI7BopC,2BAA4B,WACxB,MAAOtwC,GAAEuK,UAED,wCACA,6BACA,eACA,oJACA,6BACA,kBACA,YACA,OACA,SACA,OACA,gDACA,QACA,oCACA,wBACA,yKACA,iBACA,+IACA,SACA,SACA,8BACA,+BACA,6CACA,8DACA,iDACA,yKACA,SACA,6DACA,8DACA,iDACA,iHACA,SACA,oDACA,wDACA,iDACA,sGACA,SACA,8CACA,8DACA,iDACA,gGACA,SACA,iLACA,iCACA,aACA,YACA,SACA,UACFuF,KAAK,Od8hVnBjQ,GAAQW,ScxhVJgY,YAAaA,Kd2hVYrU,KAAKtE,EAASC,EAAoB,GAAIA,EAAoB,GAAIA,EAAoB,KAIzGsxC,IACA,SAAUxxC,EAAQC,EAASC,GAEjC,cAC4B,SAASC,EAAUC,EAAG2H,GAkBlD,QAASE,GAAuBvH,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAhBvFL,OAAOC,eAAeL,EAAS,cAC3BM,OAAO,Ge30VX,IAAA2H,GAAAhI,EAAA,Ifg1VIiI,EAAWF,EAAuBC,Ge/0VtCE,EAAAlI,EAAA,Kfm1VImI,EAAiBJ,EAAuBG,Gel1V5CE,EAAApI,EAAA,Kfs1VIqI,EAAaN,EAAuBK,Ger1VpCwQ,EAAa3Y,EAASU,KAAKC,QAC3B2H,GAAI,UAEJpD,MAAO,KAEP9D,WAEAoH,QACIQ,kCAAmC,mBAGvC7H,WAAY,SAASC,GACjBC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,GAClCC,KAAKD,QAAQ4B,IACb3B,KAAKuZ,eAIbA,YAAa,SAASxZ,GAClBC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,GACtCC,KAAK6D,MAAQ,GAAIgD,GAAAzH,QAAkB2F,eAC/BpD,GAAI3B,KAAKD,QAAQ4B,IAErB,IAAIic,GAAO5d,IACXA,MAAK6D,MAAMwE,OACPC,QAAS,WACDsV,EAAK7d,QAAQwI,kBACbqV,EAAKpV,mBAGb1C,MAAO,SAASjC,EAAO+E,OACkB,KAA1BA,EAASC,aAChBlC,EAAAvH,QAAW0G,MAAS8C,EAASC,aAAaC,QAA1C,0BAA4E,IACxEC,QAAS,WACLzF,OAAO0F,UAAUC,eAAeC,UAIxCvC,EAAAvH,QAAW0G,MAAM,4CAA6C,IAC1DiD,QAAS,WACLzF,OAAO0F,UAAUC,eAAeC,cAQxDV,gBAAiB,SAASzI,GACtBC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,GACtCwG,EAAE,YAAYvE,QAEd,IAAIwL,IAAW,CACXlK,QAAOye,OACPvU,EAAWlK,OAAOye,KAAKC,UAE3B,IAAI7Y,GAAWnJ,KAAKiwC,2BACpBjwC,MAAKQ,IAAI6I,KAAKF,GAAW9D,OAAQrF,KAAK6D,MAAO2J,SAAUA,IAEvD,IAAI5M,GAAOZ,IACXuG,GAAE7C,IAAOJ,OAAOC,KAAhB,eAAmC3C,EAAKe,GAAxC,8BACKyK,KAAK,SAAAgB,GACFxM,EAAK+M,oBACDP,oBAAqBA,MAG5Bb,KAAK,WACF5F,EAAAvH,QAAW0G,MAAM,qEAGzBS,EAAE,yBAAyB+C,UAE3B/C,EAAE,WAAW/G,IAAI,WAAY,SAGjCoO,gBAAiB,SAASC,GAEtB,IAAK,GADDC,MACKtI,EAAI,EAAGA,EAAIqI,EAAU/K,OAAQ0C,IAClCsI,EAAepM,KAAQmM,EAAUrI,GAAG,GAApC,IAA0CqI,EAAUrI,GAAG,GAE3D,OAAOsI,IAGXH,mBAAoB,SAAS5N,GACzBC,KAAKD,QAAUnB,EAAEU,OAAOU,KAAKD,QAASA,EACtC,IAAIqN,GAAsBpN,KAAKD,QAAQqN,oBACnCxM,EAAOZ,KAEPovC,EAA0BpvC,KAAK4N,gBAAgBR,EAAoBiiC,4BACnEa,EAA+BlwC,KAAK4N,gBAAgBR,EAAoB+iC,yBACxEC,EAA+BpwC,KAAK4N,gBAAgBR,EAAoBijC,wBAE5EzvC,GAAK+uC,gBAAkB,GAAI5oC,GAAA3H,QAAWC,KAClCW,KAAK0vC,qBAAqB1vC,KAAM,WAAYovC,GAAyB,IAEzExuC,EAAKyN,mBAAqB,GAAItH,GAAA3H,QAAWC,KACrCW,KAAK0vC,qBAAqB1vC,KAAM,cAAekwC,GAA8B,IAEjFtvC,EAAKuN,mBAAqB,GAAIpH,GAAA3H,QAAWC,KACrCW,KAAK0vC,qBAAqB1vC,KAAM,cAAeowC,GAA8B,KAIrFV,qBAAsB,SAAS9uC,EAAMe,EAAIiuC,GAkDrC,OAhDIhwC,mBAAoB,EACpBJ,IAAKmC,EACLhC,UAAU,EACVF,YAAa,yBACbW,UAAWQ,EAAKJ,IAAIqM,KAAT,IAAkBlL,GAC7BU,MACI4D,IAAQ3C,OAAOC,KAAf,eAAkC3C,EAAKe,GAAvC,+BACAgN,SAAU,OACVC,YAAa,IACblP,KAAM,SAASmP,EAAMC,GAEjB,OACIC,EAAGF,EACHG,WAAY,GACZF,KAAMA,IAGdG,QAAS,SAASvP,EAAMoP,GACpB,GAAII,GAAc,GAAPJ,EAAYpP,EAAKyP,KAE5B,QAASF,QAASvP,EAAK0P,MAAOF,KAAMA,KAG5C1M,aAAc,SAA0BgM,GACpC,MAAUA,GAAKrC,KAAf,UAA6BqC,EAAK9I,MAGtCjD,gBAAiB,SAA6B+L,GAC1C,MAAOA,GAAKrC,MAEhBzJ,cAAe,SAAS+L,EAAS9C,GAI7B,GAAIjM,KACJ6G,GAAEkI,EAAQxC,MAAM1B,MAAM,MAAMD,KAAK,WAC7B,GAAIhG,GAAOtE,KAAKuK,MAAM,IACtB7K,GAAKgC,MACDC,GAAI2C,EAAK,GACT6H,KAAM7H,EAAK,OAGnBqH,EAASjM,IAEbG,YAAa+vC,EAAUlhC,KAAK,KAC5BpM,iBAAkB,YAS1BkO,YAAa,SAASC,GAElB,IAAK,GADDC,MACKlL,EAAIiL,EAAW3N,OAAS,EAAG0C,GAAK,EAAGA,IACxCkL,EAAShP,KAAK+O,EAAWjL,GAAG7D,GAEhC,OAAO+O,IAMXC,gBAAiB,SAASC,GACtB,GAAIhQ,GAAOZ,KACP8vC,EAAU9vC,KAAKwQ,YAAYxQ,KAAK2vC,gBAAgBnvC,IAAIa,QAAQ,SAC5DyP,EAAa9Q,KAAKwQ,YAAYxQ,KAAKqO,mBAAmB7N,IAAIa,QAAQ,SAClE0P,EAAa/Q,KAAKwQ,YAAYxQ,KAAKmO,mBAAmB3N,IAAIa,QAAQ,QACtEkF,GAAE2F,KAAQ5I,OAAOC,KAAjB,eAAoC3C,EAAKe,GAAzC,uCACIouC,YAAaD,EACb7+B,eAAgBH,EAChBI,eAAgBH,IAEf3E,KAAK,SAAAgB,GACFxM,EAAK4H,iBACD4E,oBAAqBA,IAEzBzG,EAAAvH,QAAWkJ,QAAQ,wBAEtBiE,KAAK,WACF5F,EAAAvH,QAAW0G,MAAM,oEAI7BmqC,0BAA2B,WACvB,MAAOrxC,GAAEuK,UAED,wCACA,6BACA,sDACA,gJACA,yCACA,sBACA,YACA,OACA,SACA,OACA,8CACA,QACA,oCACA,wBACA,wKACA,iBACA,+IACA,SACA,SACA,8BACA,8BACA,OACA,mDACA,QACA,8DACA,iDACA,uFACA,SACA,OACA,0CACA,QACA,wDACA,iDACA,qGACA,SACA,OACA,oCACA,QACA,8DACA,iDACA,qFACA,SACA,+JACA,iCACA,aACA,YACA,SACA,UACFuF,KAAK,OfiyVnBjQ,GAAQW,Se3xVJkY,WAAYA,Kf8xVavU,KAAKtE,EAASC,EAAoB,GAAIA,EAAoB,GAAIA,EAAoB,KAIzG4xC,GACA,SAAU9xC,EAAQC,EAASC,GAEjC,YgB1hWA,SAAS6xC,GAAWrxC,EAAKsxC,GACrB,GAAIC,OAA0BvvC,KAAlBhC,EAAI8uB,UAA0B9uB,EAAI8uB,UAAY9uB,CA2B1D,YA1BkBgC,KAAdsvC,IACAC,EAAMC,cAAgBF,GAQ1BG,EAAYC,QAAQ,SAAAC,GAChBJ,EAAMI,GAAS,WACX,GAAK7wC,KAAK8wC,OAGV,MAAI9wC,MAAK8wC,OAAOjrC,KACL7F,KAAK8wC,OAAOjrC,KAAKgrC,EAAO7wC,KAAK0wC,cAAe76B,WAEnD7V,KAAK8wC,OAAOD,GAIL7wC,KAAK8wC,OAAOD,GAAOtlB,MAAMvrB,KAAK8wC,OAAQj7B,eAJjD,MASD3W,EhBigWXL,OAAOC,eAAeL,EAAS,cAC3BM,OAAO,GgBniWX,IAAI4xC,IAAe,MAAO,QAAS,OAAQ,OAAQ,QAAS,ShB2kW5DlyC,GAAQW,QgBtiWOmxC,GhB0iWTQ,EACA,SAAUvyC,EAAQC,EAASC,GAEjC,cAC4B,SAAS8H,GAsBrC,QAASC,GAAuBvH,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAAS8xC,GAAwB9xC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAI+xC,KAAa,IAAW,MAAP/xC,EAAe,IAAK,GAAIgD,KAAOhD,GAAWL,OAAOmvB,UAAUqJ,eAAet0B,KAAK7D,EAAKgD,KAAM+uC,EAAO/uC,GAAOhD,EAAIgD,GAAgC,OAAtB+uC,GAAO7xC,QAAUF,EAAY+xC,EiBv8VlQ,QAASC,GAAMC,EAAgDC,GAC3D,GAAItjB,GAAOC,MAAMC,UAAUtT,MAAM3X,KAAK8S,UAAW,GAC7Cw7B,EAAUvjB,EAAK7D,KAEnB,OADA6D,GAAKtc,QAAQ6/B,GACNzyC,EAAEwG,SAASmmB,MAAM3sB,EAAGkvB,GA+Y/B,QAASwjB,GAAanoC,EAAUooC,GAC5BA,EAAgBA,GAAiB,OACjC,IAAIC,GAAa5yC,EAAEuK,SAASA,EAASuF,KAAK,IAC1C,OAAO,UAAC+iC,EAAMC,GACV,GAAIC,IAAiBD,KAAMA,MAAYE,aAEvC,OADAD,GAAaJ,GAAiBE,MACvBD,EAAWG,IAM1B,QAASE,GAAgBC,EAAgB/xC,GACrCA,EAAUA,KACV,IAAIgyC,GAAYhyC,EAAQgyC,UAAY,GAAK,CACzC,OAAO,UAAsBzgC,EAAGC,GAG5B,MAFAD,GAAIA,EAAE5N,IAAIouC,GACVvgC,EAAIA,EAAE7N,IAAIouC,IACFxgC,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,GAAKwgC,GjB4gV9ClzC,OAAOC,eAAeL,EAAS,cAC3BM,OAAO,GiBvlWX,IAAA6f,GAAAlgB,EAAA,GAAYE,EjB4lWJoyC,EAAwBpyB,GiB3lWhCozB,EAAAtzC,EAAA,GAAYC,EjB+lWGqyC,EAAwBgB,GiB9lWvCC,EAAAvzC,EAAA,IjBkmWIwzC,EAAezrC,EAAuBwrC,GiBjmW1CE,EAAAzzC,EAAA,GjBqmWI0zC,EAAiB3rC,EAAuB0rC,GiB7kWxCE,GAKAvB,OAAQ,KAERJ,cAAe,MAEnB,EAAAwB,EAAA9yC,SAAWizC,EAMX,IAAI39B,GAAsB/V,EAASyE,MAAM9D,QACrCQ,WAAY,SAASwyC,GAGjB,GADAtyC,KAAKuyC,+BACAD,EAAa3wC,GACd,KAAM,IAAI6wC,OAAM,+DAEpBxyC,MAAK2B,GAAK2wC,EAAa3wC,EAIvB,IAAI8wC,GAAYzyC,KAAK0yC,WAAU1yC,KAAK2yC,MAAM3yC,KAC1CA,MAAK4yC,OAAQC,QAAQ,IACrB7yC,KAAKgN,KAAKpO,EAAEU,UAAWU,KAAKoF,SAAUqtC,EAAUH,IAC5CO,QAAQ,IAIZ7yC,KAAKc,GAAG,SAAU,WACdd,KAAKgN,UAIbulC,4BAA6B,WACzB,IACI,MAAO1mC,QAAOinC,eAAehwC,QAAU,EACzC,MAAOiwC,GAEL,MADAC,OAAM,+DACC,IAOfC,KAAM,SAAS9oC,EAAQtG,EAAO9D,GACrBA,EAAQ8yC,QACThvC,EAAMwQ,QAAQ,UAAWxQ,KAAW9D,EAExC,IAAImzC,KACJ,QAAQ/oC,GACJ,IAAK,SACD+oC,EAAWlzC,KAAKmzC,QAAQtvC,EACxB,MACJ,KAAK,OACDqvC,EAAWlzC,KAAK2yC,MAAM9uC,EACtB,MACJ,KAAK,SACDqvC,EAAWlzC,KAAKozC,QAAQvvC,EACxB,MACJ,KAAK,SACDqvC,EAAWlzC,KAAKqzC,QAAQxvC,GAYhC,WATiB3C,KAAbgyC,GAAuC,OAAbA,EACtBnzC,EAAQuI,SACRvI,EAAQuI,UAGRvI,EAAQ+F,OACR/F,EAAQ+F,QAGTotC,GAIXC,QAAS,SAAStvC,GACd,IACI,GAAI4tC,GAAO5tC,EAAMyvC,SACbhmC,EAAMwlC,eAAenF,QAAQ9pC,EAAMlC,GAAIk0B,KAAKC,UAAU2b,GAC1D,OAAe,QAARnkC,EAAeA,EAAMmkC,EAI9B,MAAOsB,GACL,KAAMA,YAAeQ,eAAgBC,UAAUC,UAAUtvC,QAAQ,WAAa,GAC1E,KAAM4uC,GAGd,MAAO,OAIXJ,MAAO,SAAS9uC,GACZ,MAAOgyB,MAAKvwB,MAAMwtC,eAAelF,QAAQ/pC,EAAMlC,MAInDyxC,QAAS,SAASvvC,GACd,MAAOA,GAAMsvC,QAAQtvC,IAIzBwvC,QAAS,SAASxvC,GACd,MAAOivC,gBAAejF,WAAWhqC,EAAMlC,KAI3C+wC,MAAO,WACH,OAAQI,eAAezb,eAAer3B,KAAK2B,KAG/C+xC,KAAM,WACF,MAAO7d,MAAKC,UAAU91B,KAAKszC,SAAU,KAAM,OAE/Cpc,SAAU,WACN,6BAA8Bl3B,KAAK2B,GAAnC,QAGR,WACI+S,EAAoBsZ,UAAYpvB,EAAE+0C,KAAKj/B,EAAoBsZ,UAAW,MAAO,aA2BjF,IAAI4lB,IAEAC,oBAQAC,iBAKAC,gBAAiB,SAASC,EAASC,GAC/B,GAAIC,GAAUl0C,KAAK0D,IAAIswC,EAGvB,UAAKC,OAA0B/yC,KAAZgzC,GAAqC,OAAZA,KAIxCt1C,EAAEo2B,QAAQkf,GACHl0C,KAAKm0C,sBAAsBD,EAASD,IAMA,IAH3CC,EACKhd,WACAjzB,cACAE,QAAQ8vC,EAAUhwC,iBAK/BkwC,sBAAuB,SAAS3S,EAAOyS,GAMnC,MAJAA,GAAYA,EAAUhwC,cAIfrF,EAAEw1C,IACL5S,EACA,SAAA6S,GAAA,OAI+C,IAH3CA,EACKnd,WACAjzB,cACAE,QAAQ8vC,EAAUhwC,kBAOnCH,OAAQ,SAASmwC,GACb,GAAIpwC,GAAQ7D,IACZ,OAAOpB,GAAEsF,OAAOlE,KAAK6zC,iBAAkB,SAAA3xC,GAAA,MAAO2B,GAAMkwC,gBAAgB7xC,EAAK+xC,MAW7EK,QAAS,SAASzlC,GACd,GACItE,GAAQsE,EAAKtE,MADI,IAGrB,IAAIA,EAAMzH,QAAU,EAAG,CACnB,GAAIkxC,GAAUzpC,EAAM,EAEpB,OADAypC,GAAUh0C,KAAK8zC,cAAcE,IAAYA,EAClCh0C,KAAK+zC,gBAAgBC,EAASzpC,EAAM,IAG/C,QAASvK,KAAK8D,OAAO+K,GAAM/L,QAS/ByxC,WAAY,SAASC,GACjB,GAAI3wC,GAAQ7D,IAGZ,OADAw0C,GAAQA,EAAM3X,MAAM,wBAAwB34B,OAAO,SAAAsR,GAAA,QAAOA,IACnD5W,EAAE61C,IAAID,EAAO,SAAA3lC,GAEhB,MADAA,GAAOA,EAAKd,QAAQ,KAAM,IACnBlK,EAAMywC,QAAQzlC,OAmB7B6lC,GAOAC,qBAAsB,SAASC,EAAY70C,GAcvC,GAZAA,EAAUA,MAEVC,KAAK60C,aACDC,cAAe90C,KAAKQ,IACpBu0C,OAAQvuC,EAAOwnB,UAAUgnB,OACzBC,UAAW,QAEfr2C,EAAEU,OAAOU,KAAK60C,YAAa90C,OAE3BC,KAAK60C,YAAYK,aAAel1C,KAAK60C,YAAYC,cAActtB,GAAG,YAClExnB,KAAKm1C,OAASn1C,KAAKo1C,WAEfR,EAAY,CACZ,GAAI1D,GAAQlxC,IACZ40C,GAAW9zC,GAAG,QAAS,SAAAmyB,GACnBie,EAAM8D,OAAO9D,EAAM2D,YAAYI,eAO3CG,SAAU,WACN,MAAOp1C,MAAK60C,YAAYC,cAActtB,GAAG,YAI7CwtB,OAAQ,WA2BJ,MAtBIh1C,MAAKm1C,QAEAn1C,KAAK60C,YAAYK,cACdt2C,EAAEw0B,WAAWpzB,KAAK60C,YAAYQ,mBAC9Br1C,KAAK60C,YAAYK,cAAe,EAChCl1C,KAAK60C,YAAYQ,gBAAgBtyC,KAAK/C,OAG1CpB,EAAEw0B,WAAWpzB,KAAK60C,YAAYS,UAC9Bt1C,KAAK60C,YAAYS,OAAOvyC,KAAK/C,MAC7BA,KAAKqU,QAAQ,6BAA8BrU,OAE/CA,KAAKm1C,QAAS,IAIVv2C,EAAEw0B,WAAWpzB,KAAK60C,YAAYU,UAC9Bv1C,KAAK60C,YAAYU,OAAOxyC,KAAK/C,MAC7BA,KAAKqU,QAAQ,8BAA+BrU,OAEhDA,KAAKm1C,QAAS,GAEXn1C,KAAK60C,YAAYE,OAAOxpB,MAAMvrB,KAAK60C,YAAYC,cAAej/B,aAWzE2/B,GAEA11C,WAAY,SAAS0Z,GAEjBxZ,KAAKy1C,UAAYj8B,EAAWi8B,YAAa,GAI7CC,YAAa,WAGT,MAAO11C,MAAKuG,EAAE,eAIlBovC,gBAAiB,WACT31C,KAAKy1C,UACLz1C,KAAK41C,eAEL51C,KAAK61C,eAKbA,YAAa,WACT71C,KAAKy1C,WAAY,EACjBz1C,KAAK81C,iBAAmBl3C,EAAE0U,KAAKtT,KAAK+1C,kBAAmB/1C,MACvDA,KAAKg2C,eAAiBp3C,EAAE0U,KAAKtT,KAAKi2C,gBAAiBj2C,KAEnD,IAAIk2C,GAASl2C,KAAK01C,cACb3pB,KAAK,aAAa,GAClBroB,IAAI,EACTwyC,GAAOC,iBAAiB,YAAan2C,KAAK81C,kBAAkB,GAC5DI,EAAOC,iBAAiB,UAAWn2C,KAAKg2C,gBAAgB,IAI5DJ,aAAc,WACV51C,KAAKy1C,WAAY,CACjB,IAAIS,GAASl2C,KAAK01C,cACb3pB,KAAK,aAAa,GAClBroB,IAAI,EACTwyC,GAAOE,oBAAoB,YAAap2C,KAAK81C,kBAAkB,GAC/DI,EAAOE,oBAAoB,UAAWp2C,KAAKg2C,gBAAgB,IAM/DD,kBAAmB,SAASnlC,GAMxB,MALAA,GAAMylC,aAAaC,cAAgB,OAGnC1lC,EAAMylC,aAAaE,QAAQ,OAAQ1gB,KAAKC,UAAU91B,KAAK6D,MAAMyvC,WAC7DtzC,KAAKqU,QAAQ,sBAAuBzD,EAAO5Q,OACpC,GAMXi2C,gBAAiB,SAASrlC,GAEtB,MADA5Q,MAAKqU,QAAQ,oBAAqBzD,EAAO5Q,OAClC,IAaXw2C,GAEA12C,WAAY,SAAS0Z,GAEjBxZ,KAAKy2C,WAAaj9B,EAAWi9B,aAAc,EAE3Cz2C,KAAK2C,SAAW6W,EAAW7W,WAAY,GAI3C+zC,UAAW,WACP,MAAO12C,MAAKuG,EAAE,cAIlBowC,gBAAiB,WAEb32C,KAAK02C,YACA7pC,KAAK,QACL+pC,YAAY,oBAAqB52C,KAAK2C,UACtCi0C,YAAY,eAAgB52C,KAAK2C,WAI1Ck0C,eAAgB,WAEP72C,KAAK02C,YAAYlvB,GAAG,YAGrBxnB,KAAK82C,eAFL92C,KAAK+2C,gBAUbA,aAAc,SAASC,GACnBA,MAAkB91C,KAAV81C,EAAsBA,EAAQh3C,KAAKi3C,QAE3Cj3C,KAAKy2C,YAAa,EAClBz2C,KAAKqU,QAAQ,cAAc,EAAMrU,MACjCA,KAAK22C,kBACDK,EACAh3C,KAAK02C,YAAY1rC,KAAKgsC,GAEtBh3C,KAAK02C,YAAY1rC,QAQzB8rC,aAAc,SAASE,GACnBA,MAAkB91C,KAAV81C,EAAsBA,EAAQh3C,KAAKi3C,QAE3Cj3C,KAAKy2C,YAAa,EAClBz2C,KAAKqU,QAAQ,cAAc,EAAOrU,MAC9Bg3C,EACAh3C,KAAK02C,YAAYhrC,KAAKsrC,GAEtBh3C,KAAK02C,YAAYhrC,QAKzBwrC,aAAc,SAAStmC,GACf5Q,KAAK2C,SACL3C,KAAKm3C,SAASvmC,GAEd5Q,KAAKkgC,OAAOtvB,IAQpBsvB,OAAQ,SAAStvB,GAOb,MALK5Q,MAAK2C,WACN3C,KAAKqU,QAAQ,WAAYrU,KAAM4Q,GAC/B5Q,KAAK2C,UAAW,EAChB3C,KAAK22C,oBAEF,GAOXQ,SAAU,SAASvmC,GAOf,MALI5Q,MAAK2C,WACL3C,KAAKqU,QAAQ,cAAerU,KAAM4Q,GAClC5Q,KAAK2C,UAAW,EAChB3C,KAAK22C,oBAEF,GjB8oWfl4C,GAAQW,SiB3lWJizC,cAAeA,EACf39B,oBAAqBA,EACrBw8B,MAAOA,EACP0C,qBAAsBA,EACtBc,8BAA+BA,EAC/Bc,mBAAoBA,EACpBgB,oBAAqBA,EACrBlF,aAAcA,EACdO,gBAAiBA,KjB8lWQ9uC,KAAKtE,EAASC,EAAoB,OAI5D","file":"library.bundled.js","sourcesContent":["webpackJsonp([6],{\n\n/***/ 139:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A plugin for initializing select2 input items.\n * Make sure the select2 library itself is loaded beforehand.\n * Also the element to which select2 will be appended has to\n * be created before select2 initialization (and passed as option).\n */\nvar View = Backbone.View.extend({\n    // options\n    optionsDefault: {\n        css: \"\",\n        placeholder: \"No data available\",\n        data: [],\n        value: null,\n        multiple: false,\n        minimumInputLength: 0,\n        // example format of initial data: \"id:name,55:anotherrole@role.com,27:role@role.com\"\n        initialData: \"\"\n    },\n\n    // initialize\n    initialize: function initialize(options) {\n        // configure options\n        this.options = _utils2.default.merge(options, this.optionsDefault);\n\n        // create new element\n        this.setElement(this._template(this.options));\n\n        // check if container exists\n        if (!this.options.container) {\n            console.log(\"ui-select::initialize() : container not specified.\");\n            return;\n        }\n\n        // add to dom\n        this.options.container.append(this.$el);\n\n        // link selection dictionary\n        this.select_data = this.options.data;\n\n        // refresh\n        this._refresh();\n\n        if (!this.options.multiple) {\n            // initial value\n            if (this.options.value) {\n                this._setValue(this.options.value);\n            }\n\n            // add change event\n            var self = this;\n            if (this.options.onchange) {\n                this.$el.on(\"change\", function () {\n                    self.options.onchange(self.value());\n                });\n            }\n        }\n    },\n\n    // value\n    value: function value(new_value) {\n        // get current id/value\n        var before = this._getValue();\n\n        // check if new_value is defined\n        if (new_value !== undefined) {\n            this._setValue(new_value);\n        }\n\n        // get current id/value\n        var after = this._getValue();\n\n        // fire onchange\n        if (after != before && this.options.onchange) {\n            this.options.onchange(after);\n        }\n\n        // return current value\n        return after;\n    },\n\n    // label\n    text: function text() {\n        return this.$el.select2(\"data\").text;\n    },\n\n    // disabled\n    disabled: function disabled() {\n        return !this.$el.select2(\"enable\");\n    },\n\n    // enable\n    enable: function enable() {\n        this.$el.select2(\"enable\", true);\n    },\n\n    // disable\n    disable: function disable() {\n        this.$el.select2(\"enable\", false);\n    },\n\n    // add\n    add: function add(options) {\n        // add options\n        this.select_data.push({\n            id: options.id,\n            text: options.text\n        });\n\n        // refresh\n        this._refresh();\n    },\n\n    // remove\n    del: function del(id) {\n        // search option\n        var index = this._getIndex(id);\n\n        // check if found\n        if (index != -1) {\n            // remove options\n            this.select_data.splice(index, 1);\n\n            // refresh\n            this._refresh();\n        }\n    },\n\n    // remove\n    remove: function remove() {\n        this.$el.select2(\"destroy\");\n    },\n\n    // update\n    update: function update(options) {\n        // copy options\n        this.select_data = [];\n        for (var key in options.data) {\n            this.select_data.push(options.data[key]);\n        }\n\n        // refresh\n        this._refresh();\n    },\n\n    // refresh\n    _refresh: function _refresh() {\n        // add select2 data based on type of input\n        if (!this.options.multiple) {\n            var selected = this._getValue();\n            var select_opt = {\n                data: this.select_data,\n                containerCssClass: this.options.css,\n                placeholder: this.options.placeholder,\n                dropdownAutoWidth: true\n            };\n            this.$el.select2(select_opt);\n            // select previous value (if exists)\n            this._setValue(selected);\n        } else {\n            var select_opt = {\n                multiple: this.options.multiple,\n                containerCssClass: this.options.css,\n                placeholder: this.options.placeholder,\n                minimumInputLength: this.options.minimumInputLength,\n                ajax: this.options.ajax,\n                dropdownCssClass: this.options.dropdownCssClass,\n                escapeMarkup: this.options.escapeMarkup,\n                formatResult: this.options.formatResult,\n                formatSelection: this.options.formatSelection,\n                initSelection: this.options.initSelection,\n                initialData: this.options.initialData\n            };\n            this.$el.select2(select_opt);\n        }\n    },\n\n    // get index\n    _getIndex: function _getIndex(value) {\n        // returns the index of the searched value\n        _.findIndex(this.select_data, { id: value });\n    },\n\n    // get value\n    _getValue: function _getValue() {\n        return this.$el.select2(\"val\");\n    },\n\n    // set value\n    _setValue: function _setValue(new_value) {\n        var index = this._getIndex(new_value);\n        if (index == -1) {\n            if (this.select_data.length > 0) {\n                new_value = this.select_data[0].id;\n            }\n        }\n        this.$el.select2(\"val\", new_value);\n    },\n\n    // element\n    _template: function _template(options) {\n        return \"<input type=\\\"hidden\\\" value=\\\"\" + this.options.initialData + \"\\\"/>\";\n    }\n}); // dependencies\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 156:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _libraryUtil = __webpack_require__(291);\n\nvar _libraryUtil2 = _interopRequireDefault(_libraryUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// ============================================================================\n// LIBRARY RELATED MODELS\n\nvar Library = Backbone.Model.extend({\n    urlRoot: Galaxy.root + \"api/libraries/\",\n\n    /** based on show_deleted would this lib show in the list of lib's?\n     *  @param {Boolean} show_deleted are we including deleted libraries?\n     */\n    isVisible: function isVisible(show_deleted) {\n        var isVisible = true;\n        if (!show_deleted && this.get(\"deleted\")) {\n            isVisible = false;\n        }\n        return isVisible;\n    }\n});\n\nvar Libraries = Backbone.Collection.extend({\n    urlRoot: Galaxy.root + \"api/libraries\",\n\n    model: Library,\n\n    initialize: function initialize(options) {\n        options = options || {};\n    },\n\n    search: function search(search_term) {\n        /**\n         * Search the collection and return only the models that have\n         * the search term in their names.\n         * [the term to search]\n         * @type {string}\n         */\n        if (search_term == \"\") return this;\n        var lowercase_term = search_term.toLowerCase();\n        return this.filter(function (data) {\n            var lowercase_name = data.get(\"name\").toLowerCase();\n            return lowercase_name.indexOf(lowercase_term) !== -1;\n        });\n    },\n\n    /** Get every 'shown' library in this collection based on deleted filter\n     *  @param {Boolean} show_deleted are we including deleted libraries?\n     *  @returns array of library models\n     */\n    getVisible: function getVisible(show_deleted, filters) {\n        filters = filters || [];\n        var filteredLibraries = new Libraries(this.filter(function (item) {\n            return item.isVisible(show_deleted);\n        }));\n\n        return filteredLibraries;\n    },\n\n    sortLibraries: function sortLibraries(sort_key, sort_order) {\n        this.comparator = _libraryUtil2.default.generateLibraryComparator(sort_key, sort_order);\n        this.sort();\n    }\n});\n\n// ============================================================================\n// FOLDER RELATED MODELS\n\nvar LibraryItem = Backbone.Model.extend({});\n\nvar Ldda = LibraryItem.extend({\n    urlRoot: Galaxy.root + \"api/libraries/datasets/\"\n});\n\nvar FolderAsModel = LibraryItem.extend({\n    urlRoot: Galaxy.root + \"api/folders/\"\n});\n\nvar Folder = Backbone.Collection.extend({\n    model: LibraryItem,\n\n    sortFolder: function sortFolder(sort_key, sort_order) {\n        this.comparator = _libraryUtil2.default.generateFolderComparator(sort_key, sort_order);\n        this.sort();\n    }\n});\n\nvar FolderContainer = Backbone.Model.extend({\n    defaults: {\n        folder: new Folder(),\n        urlRoot: Galaxy.root + \"api/folders/\",\n        id: \"unknown\"\n    },\n    parse: function parse(obj) {\n        // empty the collection\n        this.get(\"folder\").reset();\n        // response is not a simple array, it contains metadata\n        // this will update the inner collection\n        for (var i = 0; i < obj.folder_contents.length; i++) {\n            if (obj.folder_contents[i].type === \"folder\") {\n                var folder_item = new FolderAsModel(obj.folder_contents[i]);\n                this.get(\"folder\").add(folder_item);\n            } else if (obj.folder_contents[i].type === \"file\") {\n                var file_item = new Ldda(obj.folder_contents[i]);\n                this.get(\"folder\").add(file_item);\n            } else {\n                Galaxy.emit.error(\"Unknown folder item type encountered while parsing response.\");\n            }\n        }\n        return obj;\n    }\n});\n\n// ============================================================================\n// HISTORY RELATED MODELS\n// TODO UNITE\n\nvar HistoryItem = Backbone.Model.extend({\n    urlRoot: Galaxy.root + \"api/histories/\"\n});\n\nvar HistoryContents = Backbone.Collection.extend({\n    urlRoot: Galaxy.root + \"api/histories/\",\n    initialize: function initialize(options) {\n        this.id = options.id;\n    },\n    url: function url() {\n        return this.urlRoot + this.id + \"/contents\";\n    },\n    model: HistoryItem\n});\n\nvar GalaxyHistory = Backbone.Model.extend({\n    urlRoot: Galaxy.root + \"api/histories/\"\n});\n\nvar GalaxyHistories = Backbone.Collection.extend({\n    url: Galaxy.root + \"api/histories\",\n    model: GalaxyHistory\n});\n\n// ============================================================================\n// JSTREE MODEL\n/** Represents folder structure parsable by the jstree component.\n *\n */\n\nvar Jstree = Backbone.Model.extend({\n    urlRoot: Galaxy.root + \"api/remote_files\"\n});\n\nexports.default = {\n    Library: Library,\n    Libraries: Libraries,\n    Item: Ldda,\n    Ldda: Ldda,\n    FolderAsModel: FolderAsModel,\n    Folder: Folder,\n    FolderContainer: FolderContainer,\n    HistoryItem: HistoryItem,\n    HistoryContents: HistoryContents,\n    GalaxyHistory: GalaxyHistory,\n    GalaxyHistories: GalaxyHistories,\n    Jstree: Jstree\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 221:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toastr = __webpack_require__(42);\n\nvar _toastr2 = _interopRequireDefault(_toastr);\n\nvar _libraryModel = __webpack_require__(156);\n\nvar _libraryModel2 = _interopRequireDefault(_libraryModel);\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiSelect = __webpack_require__(139);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LibraryDatasetView = Backbone.View.extend({\n    el: \"#center\",\n\n    model: null,\n\n    options: {},\n\n    defaults: {\n        edit_mode: false\n    },\n\n    events: {\n        \"click .toolbtn_modify_dataset\": \"enableModification\",\n        \"click .toolbtn_cancel_modifications\": \"render\",\n        \"click .toolbtn-download-dataset\": \"downloadDataset\",\n        \"click .toolbtn-import-dataset\": \"importIntoHistory\",\n        \"click .copy-link-to-clipboard\": \"copyToClipboard\",\n        \"click .make-private\": \"makeDatasetPrivate\",\n        \"click .remove-restrictions\": \"removeDatasetRestrictions\",\n        \"click .toolbtn_save_permissions\": \"savePermissions\",\n        \"click .toolbtn_save_modifications\": \"saveModifications\"\n    },\n\n    // genome select\n    select_genome: null,\n\n    // extension select\n    select_extension: null,\n\n    // extension types\n    list_extensions: [],\n\n    // datatype placeholder for extension auto-detection\n    auto: {\n        id: \"auto\",\n        text: \"Auto-detect\",\n        description: \"This system will try to detect the file type automatically.\" + \" If your file is not detected properly as one of the known formats,\" + \" it most likely means that it has some format problems (e.g., different\" + \" number of columns on different rows). You can still coerce the system\" + \" to set your data to the format you think it should be.\" + \" You can also upload compressed files, which will automatically be decompressed.\"\n    },\n\n    // genomes\n    list_genomes: [],\n\n    initialize: function initialize(options) {\n        this.options = _.extend(this.options, options);\n        this.fetchExtAndGenomes();\n        if (this.options.id) {\n            this.fetchDataset();\n        }\n    },\n\n    fetchDataset: function fetchDataset(options) {\n        this.options = _.extend(this.options, options);\n        this.model = new _libraryModel2.default.Item({\n            id: this.options.id\n        });\n        var self = this;\n        this.model.fetch({\n            success: function success() {\n                if (self.options.show_permissions) {\n                    self.showPermissions();\n                } else if (self.options.show_version) {\n                    self.fetchVersion();\n                } else {\n                    self.render();\n                }\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(response.responseJSON.err_msg + \" Click this to go back.\", \"\", {\n                        onclick: function onclick() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    _toastr2.default.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function onclick() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    render: function render(options) {\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n        var template = this.templateDataset();\n        this.$el.html(template({ item: this.model }));\n        $(\".peek\").html(this.model.get(\"peek\"));\n        $(\"#center [data-toggle]\").tooltip();\n    },\n\n    fetchVersion: function fetchVersion(options) {\n        this.options = _.extend(this.options, options);\n        var self = this;\n        if (!this.options.ldda_id) {\n            this.render();\n            _toastr2.default.error(\"Library dataset version requested but no id provided.\");\n        } else {\n            this.ldda = new _libraryModel2.default.Ldda({\n                id: this.options.ldda_id\n            });\n            this.ldda.url = this.ldda.urlRoot + this.model.id + \"/versions/\" + this.ldda.id;\n            this.ldda.fetch({\n                success: function success() {\n                    self.renderVersion();\n                },\n                error: function error(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        _toastr2.default.error(response.responseJSON.err_msg);\n                    } else {\n                        _toastr2.default.error(\"An error occurred.\");\n                    }\n                }\n            });\n        }\n    },\n\n    renderVersion: function renderVersion() {\n        $(\".tooltip\").remove();\n        var template = this.templateVersion();\n        this.$el.html(template({ item: this.model, ldda: this.ldda }));\n        $(\".peek\").html(this.ldda.get(\"peek\"));\n    },\n\n    enableModification: function enableModification() {\n        $(\".tooltip\").remove();\n        var template = this.templateModifyDataset();\n        this.$el.html(template({ item: this.model }));\n        this.renderSelectBoxes({\n            genome_build: this.model.get(\"genome_build\"),\n            file_ext: this.model.get(\"file_ext\")\n        });\n        $(\".peek\").html(this.model.get(\"peek\"));\n        $(\"#center [data-toggle]\").tooltip();\n    },\n\n    downloadDataset: function downloadDataset() {\n        var url = Galaxy.root + \"api/libraries/datasets/download/uncompressed\";\n        var data = { ld_ids: this.id };\n        this.processDownload(url, data);\n    },\n\n    processDownload: function processDownload(url, data, method) {\n        //url and data options required\n        if (url && data) {\n            //data can be string of parameters or array/object\n            data = typeof data == \"string\" ? data : $.param(data);\n            //split params into form inputs\n            var inputs = \"\";\n            $.each(data.split(\"&\"), function () {\n                var pair = this.split(\"=\");\n                inputs += \"<input type=\\\"hidden\\\" name=\\\"\" + pair[0] + \"\\\" value=\\\"\" + pair[1] + \"\\\" />\";\n            });\n            //send request\n            $(\"<form action=\\\"\" + url + \"\\\" method=\\\"\" + (method || \"post\") + \"\\\">\" + inputs + \"</form>\").appendTo(\"body\").submit().remove();\n\n            _toastr2.default.info(\"Your download will begin soon.\");\n        }\n    },\n\n    importIntoHistory: function importIntoHistory() {\n        this.refreshUserHistoriesList(function (self) {\n            var template = self.templateBulkImportInModal();\n            self.modal = Galaxy.modal;\n            self.modal.show({\n                closing_events: true,\n                title: \"Import into History\",\n                body: template({ histories: self.histories.models }),\n                buttons: {\n                    Import: function Import() {\n                        self.importCurrentIntoHistory();\n                    },\n                    Close: function Close() {\n                        Galaxy.modal.hide();\n                    }\n                }\n            });\n        });\n    },\n\n    refreshUserHistoriesList: function refreshUserHistoriesList(callback) {\n        var self = this;\n        this.histories = new _libraryModel2.default.GalaxyHistories();\n        this.histories.fetch({\n            success: function success(histories) {\n                if (histories.length === 0) {\n                    _toastr2.default.warning(\"You have to create history first. Click this to do so.\", \"\", {\n                        onclick: function onclick() {\n                            window.location = Galaxy.root;\n                        }\n                    });\n                } else {\n                    callback(self);\n                }\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(response.responseJSON.err_msg);\n                } else {\n                    _toastr2.default.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    importCurrentIntoHistory: function importCurrentIntoHistory() {\n        this.modal.disableButton(\"Import\");\n        var new_history_name = this.modal.$(\"input[name=history_name]\").val();\n        var self = this;\n        if (new_history_name !== \"\") {\n            $.post(Galaxy.root + \"api/histories\", {\n                name: new_history_name\n            }).done(function (new_history) {\n                self.processImportToHistory(new_history.id);\n            }).fail(function (xhr, status, error) {\n                _toastr2.default.error(\"An error occurred.\");\n            }).always(function () {\n                self.modal.enableButton(\"Import\");\n            });\n        } else {\n            var history_id = $(this.modal.$el).find(\"select[name=dataset_import_single] option:selected\").val();\n            this.processImportToHistory(history_id);\n            this.modal.enableButton(\"Import\");\n        }\n    },\n\n    processImportToHistory: function processImportToHistory(history_id) {\n        var historyItem = new _libraryModel2.default.HistoryItem();\n        historyItem.url = historyItem.urlRoot + history_id + \"/contents\";\n        // set the used history as current so user will see the last one\n        // that he imported into in the history panel on the 'analysis' page\n        jQuery.getJSON(Galaxy.root + \"history/set_as_current?id=\" + history_id);\n        // save the dataset into selected history\n        historyItem.save({ content: this.id, source: \"library\" }, {\n            success: function success() {\n                Galaxy.modal.hide();\n                _toastr2.default.success(\"Dataset imported. Click this to start analyzing it.\", \"\", {\n                    onclick: function onclick() {\n                        window.location = Galaxy.root;\n                    }\n                });\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(\"Dataset not imported. \" + response.responseJSON.err_msg);\n                } else {\n                    _toastr2.default.error(\"An error occured. Dataset not imported. Please try again.\");\n                }\n            }\n        });\n    },\n\n    showPermissions: function showPermissions(options) {\n        var template = this.templateDatasetPermissions();\n        var self = this;\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n        if (this.options.fetched_permissions !== undefined) {\n            if (this.options.fetched_permissions.access_dataset_roles.length === 0) {\n                this.model.set({ is_unrestricted: true });\n            } else {\n                this.model.set({ is_unrestricted: false });\n            }\n        }\n        this.$el.html(template({\n            item: this.model,\n            is_admin: Galaxy.config.is_admin_user\n        }));\n        $.get(Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?scope=current\").done(function (fetched_permissions) {\n            self.prepareSelectBoxes({\n                fetched_permissions: fetched_permissions,\n                is_admin: Galaxy.config.is_admin_user\n            });\n        }).fail(function () {\n            _toastr2.default.error(\"An error occurred while attempting to fetch dataset permissions.\");\n        });\n        $(\"#center [data-toggle]\").tooltip();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    _serializeRoles: function _serializeRoles(role_list) {\n        var selected_roles = [];\n        for (var i = 0; i < role_list.length; i++) {\n            // Replace the : and , in role's name since these are select2 separators for initialData\n            selected_roles.push(role_list[i][1] + \":\" + role_list[i][0].replace(\":\", \" \").replace(\",\", \" &\"));\n        }\n        return selected_roles;\n    },\n\n    prepareSelectBoxes: function prepareSelectBoxes(options) {\n        this.options = _.extend(this.options, options);\n        this.accessSelectObject = new _uiSelect2.default.View(this._generate_select_options({\n            selector: \"access_perm\",\n            initialData: this._serializeRoles(this.options.fetched_permissions.access_dataset_roles)\n        }));\n        this.modifySelectObject = new _uiSelect2.default.View(this._generate_select_options({\n            selector: \"modify_perm\",\n            initialData: this._serializeRoles(this.options.fetched_permissions.modify_item_roles)\n        }));\n        this.manageSelectObject = new _uiSelect2.default.View(this._generate_select_options({\n            selector: \"manage_perm\",\n            initialData: this._serializeRoles(this.options.fetched_permissions.manage_dataset_roles)\n        }));\n    },\n\n    _generate_select_options: function _generate_select_options(options) {\n        var select_options = {\n            minimumInputLength: 0,\n            multiple: true,\n            placeholder: \"Click to select a role\",\n            formatResult: function roleFormatResult(role) {\n                return role.name + \" type: \" + role.type;\n            },\n            formatSelection: function roleFormatSelection(role) {\n                return role.name;\n            },\n            initSelection: function initSelection(element, callback) {\n                // the input tag has a value attribute preloaded that points to a preselected role's id\n                // this function resolves that id attribute to an object that select2 can render\n                // using its formatResult renderer - that way the role name is shown preselected\n                var data = [];\n                $(element.val().split(\",\")).each(function () {\n                    var item = this.split(\":\");\n                    data.push({\n                        id: item[0],\n                        name: item[1]\n                    });\n                });\n                callback(data);\n            },\n            dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n        select_options.container = this.$el.find(\"#\" + options.selector);\n        select_options.css = options.selector;\n        select_options.initialData = options.initialData.join(\",\");\n        select_options.ajax = {\n            url: Galaxy.root + \"api/libraries/datasets/\" + this.id + \"/permissions?scope=available\",\n            dataType: \"json\",\n            quietMillis: 100,\n            data: function data(term, page) {\n                // page is the one-based page number tracked by Select2\n                return {\n                    q: term, //search term\n                    page_limit: 10, // page size, should be same as used in 'more' variable below\n                    page: page // page number\n                };\n            },\n            results: function results(data, page) {\n                var more = page * 10 < data.total; // whether or not there are more results available\n                // notice we return the value of more so Select2 knows if more results can be loaded\n                return { results: data.roles, more: more };\n            }\n        };\n        return select_options;\n    },\n\n    /**\n     * Save the changes made to the library dataset.\n     */\n    saveModifications: function saveModifications(options) {\n        var is_changed = false;\n        var ld = this.model;\n        var new_name = this.$el.find(\".input_dataset_name\").val();\n        if (typeof new_name !== \"undefined\" && new_name !== ld.get(\"name\")) {\n            if (new_name.length > 0) {\n                ld.set(\"name\", new_name);\n                is_changed = true;\n            } else {\n                _toastr2.default.warning(\"Library dataset name has to be at least 1 character long.\");\n                return;\n            }\n        }\n        var new_info = this.$el.find(\".input_dataset_misc_info\").val();\n        if (typeof new_info !== \"undefined\" && new_info !== ld.get(\"misc_info\")) {\n            ld.set(\"misc_info\", new_info);\n            is_changed = true;\n        }\n        var new_genome_build = this.select_genome.$el.select2(\"data\").id;\n        if (typeof new_genome_build !== \"undefined\" && new_genome_build !== ld.get(\"genome_build\")) {\n            ld.set(\"genome_build\", new_genome_build);\n            is_changed = true;\n        }\n        var new_ext = this.select_extension.$el.select2(\"data\").id;\n        if (typeof new_ext !== \"undefined\" && new_ext !== ld.get(\"file_ext\")) {\n            ld.set(\"file_ext\", new_ext);\n            is_changed = true;\n        }\n        var dataset_view = this;\n        if (is_changed) {\n            ld.save(null, {\n                patch: true,\n                success: function success(ld) {\n                    dataset_view.render();\n                    _toastr2.default.success(\"Changes to library dataset saved.\");\n                },\n                error: function error(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        _toastr2.default.error(response.responseJSON.err_msg);\n                    } else {\n                        _toastr2.default.error(\"An error occured while attempting to update the library dataset.\");\n                    }\n                }\n            });\n        } else {\n            dataset_view.render();\n            _toastr2.default.info(\"Nothing has changed.\");\n        }\n    },\n\n    copyToClipboard: function copyToClipboard(e) {\n        e.preventDefault();\n        var href = Backbone.history.location.href;\n        if (href.lastIndexOf(\"/permissions\") !== -1) {\n            href = href.substr(0, href.lastIndexOf(\"/permissions\"));\n        }\n        window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", href);\n    },\n\n    makeDatasetPrivate: function makeDatasetPrivate() {\n        var self = this;\n        $.post(Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=make_private\").done(function (fetched_permissions) {\n            self.model.set({ is_unrestricted: false });\n            self.showPermissions({\n                fetched_permissions: fetched_permissions\n            });\n            _toastr2.default.success(\"The dataset is now private to you.\");\n        }).fail(function () {\n            _toastr2.default.error(\"An error occurred while attempting to make dataset private.\");\n        });\n    },\n\n    removeDatasetRestrictions: function removeDatasetRestrictions() {\n        var self = this;\n        $.post(Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=remove_restrictions\").done(function (fetched_permissions) {\n            self.model.set({ is_unrestricted: true });\n            self.showPermissions({\n                fetched_permissions: fetched_permissions\n            });\n            _toastr2.default.success(\"Access to this dataset is now unrestricted.\");\n        }).fail(function () {\n            _toastr2.default.error(\"An error occurred while attempting to make dataset unrestricted.\");\n        });\n    },\n\n    /**\n     * Extract the role ids from Select2 elements's 'data'\n     */\n    _extractIds: function _extractIds(roles_list) {\n        var ids_list = [];\n        for (var i = roles_list.length - 1; i >= 0; i--) {\n            ids_list.push(roles_list[i].id);\n        }\n        return ids_list;\n    },\n\n    /**\n     * Save the permissions for roles entered in the select boxes.\n     */\n    savePermissions: function savePermissions(event) {\n        var self = this;\n        var access_ids = this._extractIds(this.accessSelectObject.$el.select2(\"data\"));\n        var manage_ids = this._extractIds(this.manageSelectObject.$el.select2(\"data\"));\n        var modify_ids = this._extractIds(this.modifySelectObject.$el.select2(\"data\"));\n        $.post(Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=set_permissions\", {\n            \"access_ids[]\": access_ids,\n            \"manage_ids[]\": manage_ids,\n            \"modify_ids[]\": modify_ids\n        }).done(function (fetched_permissions) {\n            self.showPermissions({\n                fetched_permissions: fetched_permissions\n            });\n            _toastr2.default.success(\"Permissions saved.\");\n        }).fail(function () {\n            _toastr2.default.error(\"An error occurred while attempting to set dataset permissions.\");\n        });\n    },\n\n    /**\n     * If needed request all extensions and/or genomes from Galaxy\n     * and save them in sorted arrays.\n     */\n    fetchExtAndGenomes: function fetchExtAndGenomes() {\n        var self = this;\n        if (this.list_genomes.length == 0) {\n            _utils2.default.get({\n                url: Galaxy.root + \"api/datatypes?extension_only=False\",\n                success: function success(datatypes) {\n                    for (var key in datatypes) {\n                        self.list_extensions.push({\n                            id: datatypes[key].extension,\n                            text: datatypes[key].extension,\n                            description: datatypes[key].description,\n                            description_url: datatypes[key].description_url\n                        });\n                    }\n                    self.list_extensions.sort(function (a, b) {\n                        return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                    });\n                    self.list_extensions.unshift(self.auto);\n                }\n            });\n        }\n        if (this.list_extensions.length == 0) {\n            _utils2.default.get({\n                url: Galaxy.root + \"api/genomes\",\n                success: function success(genomes) {\n                    for (var key in genomes) {\n                        self.list_genomes.push({\n                            id: genomes[key][1],\n                            text: genomes[key][0]\n                        });\n                    }\n                    self.list_genomes.sort(function (a, b) {\n                        return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                    });\n                }\n            });\n        }\n    },\n\n    renderSelectBoxes: function renderSelectBoxes(options) {\n        // This won't work properly unlesss we already have the data fetched.\n        // See this.fetchExtAndGenomes()\n        // TODO switch to common resources:\n        // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n        var self = this;\n        var current_genome = \"?\";\n        var current_ext = \"auto\";\n        if (typeof options !== \"undefined\") {\n            if (typeof options.genome_build !== \"undefined\") {\n                current_genome = options.genome_build;\n            }\n            if (typeof options.file_ext !== \"undefined\") {\n                current_ext = options.file_ext;\n            }\n        }\n        this.select_genome = new _uiSelect2.default.View({\n            css: \"dataset-genome-select\",\n            data: self.list_genomes,\n            container: self.$el.find(\"#dataset_genome_select\"),\n            value: current_genome\n        });\n        this.select_extension = new _uiSelect2.default.View({\n            css: \"dataset-extension-select\",\n            data: self.list_extensions,\n            container: self.$el.find(\"#dataset_extension_select\"),\n            value: current_ext\n        });\n    },\n\n    templateDataset: function templateDataset() {\n        return _.template([\n        // CONTAINER START\n        '<div class=\"library_style_container\">', '<div id=\"library_toolbar\">', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download dataset\" class=\"btn btn-default toolbtn-download-dataset primary-button toolbar-item\" type=\"button\">', '<span class=\"fa fa-download\"></span>', \"&nbsp;Download\", \"</button>\", '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import dataset into history\" class=\"btn btn-default toolbtn-import-dataset primary-button toolbar-item\" type=\"button\">', '<span class=\"fa fa-book\"></span>', \"&nbsp;to History\", \"</button>\", '<% if (item.get(\"can_user_modify\")) { %>', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify library item\" class=\"btn btn-default toolbtn_modify_dataset primary-button toolbar-item\" type=\"button\">', '<span class=\"fa fa-pencil\"></span>', \"&nbsp;Modify\", \"</button>\", \"<% } %>\", '<% if (item.get(\"can_user_manage\")) { %>', '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/permissions\">', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Manage permissions\" class=\"btn btn-default toolbtn_change_permissions primary-button toolbar-item\" type=\"button\">', '<span class=\"fa fa-group\"></span>', \"&nbsp;Permissions\", \"</button>\", \"</a>\", \"<% } %>\", \"</div>\",\n\n        // BREADCRUMBS\n        '<ol class=\"breadcrumb\">', '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>', '<% _.each(item.get(\"full_path\"), function(path_item) { %>', \"<% if (path_item[0] != item.id) { %>\", '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ', \"<% } else { %>\", '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>', \"<% } %>\", \"<% }); %>\", \"</ol>\", '<% if (item.get(\"is_unrestricted\")) { %>', \"<div>\", 'This dataset is unrestricted so everybody with the link can access it. Just share <span class=\"copy-link-to-clipboard\"><a href=\"\"a>this page</a></span>.', \"</div>\", \"<% } %>\",\n\n        // TABLE START\n        '<div class=\"dataset_table\">', '<table class=\"grid table table-striped table-condensed\">', \"<tr>\", '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>', '<td><%= _.escape(item.get(\"name\")) %></td>', \"</tr>\", '<% if (item.get(\"file_ext\")) { %>', \"<tr>\", '<th scope=\"row\">Data type</th>', '<td><%= _.escape(item.get(\"file_ext\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"genome_build\")) { %>', \"<tr>\", '<th scope=\"row\">Genome build</th>', '<td><%= _.escape(item.get(\"genome_build\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"file_size\")) { %>', \"<tr>\", '<th scope=\"row\">Size</th>', '<td><%= _.escape(item.get(\"file_size\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"date_uploaded\")) { %>', \"<tr>\", '<th scope=\"row\">Date uploaded (UTC)</th>', '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"uploaded_by\")) { %>', \"<tr>\", '<th scope=\"row\">Uploaded by</th>', '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"metadata_data_lines\")) { %>', \"<tr>\", '<th scope=\"row\">Data Lines</th>', '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"metadata_comment_lines\")) { %>', \"<tr>\", '<th scope=\"row\">Comment Lines</th>', '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"metadata_columns\")) { %>', \"<tr>\", '<th scope=\"row\">Number of Columns</th>', '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"metadata_column_types\")) { %>', \"<tr>\", '<th scope=\"row\">Column Types</th>', '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"message\")) { %>', \"<tr>\", '<th scope=\"row\">Message</th>', '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"misc_blurb\")) { %>', \"<tr>\", '<th scope=\"row\">Misc. blurb</th>', '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"misc_info\")) { %>', \"<tr>\", '<th scope=\"row\">Misc. info</th>', '<td scope=\"row\"><%= _.escape(item.get(\"misc_info\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"tags\")) { %>', \"<tr>\", '<th scope=\"row\">Tags</th>', '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>', \"</tr>\", \"<% } %>\", '<% if ( item.get(\"uuid\") !== \"ok\" ) { %>', \"<tr>\", '<th scope=\"row\">UUID</th>', '<td scope=\"row\"><%= _.escape(item.get(\"uuid\")) %></td>', \"</tr>\", \"<% } %>\", '<% if ( item.get(\"state\") !== \"ok\" ) { %>', \"<tr>\", '<th scope=\"row\">State</th>', '<td scope=\"row\"><%= _.escape(item.get(\"state\")) %></td>', \"</tr>\", \"<% } %>\", \"</table>\", '<% if (item.get(\"job_stderr\")) { %>', \"<h4>Job Standard Error</h4>\", '<pre class=\"code\">', '<%= _.escape(item.get(\"job_stderr\")) %>', \"</pre>\", \"<% } %>\", '<% if (item.get(\"job_stdout\")) { %>', \"<h4>Job Standard Output</h4>\", '<pre class=\"code\">', '<%= _.escape(item.get(\"job_stdout\")) %>', \"</pre>\", \"<% } %>\", \"<div>\", '<pre class=\"peek\">', \"</pre>\", \"</div>\", '<% if (item.get(\"has_versions\")) { %>', \"<div>\", \"<h3>Expired versions:</h3>\", \"<ul>\", '<% _.each(item.get(\"expired_versions\"), function(version) { %>', '<li><a title=\"See details of this version\" href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/versions/<%- version[0] %>\"><%- version[1] %></a></li>', \"<% }) %>\", \"<ul>\", \"</div>\", \"<% } %>\",\n        // TABLE END\n        \"</div>\",\n        // CONTAINER END\n        \"</div>\"].join(\"\"));\n    },\n\n    templateVersion: function templateVersion() {\n        return _.template([\n        // CONTAINER START\n        '<div class=\"library_style_container\">', '<div id=\"library_toolbar\">', '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go to latest dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">', '<span class=\"fa fa-caret-left fa-lg\"></span>', \"&nbsp;Latest dataset\", \"</button>\", \"<a>\", \"</div>\",\n\n        // BREADCRUMBS\n        '<ol class=\"breadcrumb\">', '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>', '<% _.each(item.get(\"full_path\"), function(path_item) { %>', \"<% if (path_item[0] != item.id) { %>\", '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ', \"<% } else { %>\", '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>', \"<% } %>\", \"<% }); %>\", \"</ol>\", '<div class=\"alert alert-warning\">This is an expired version of the library dataset: <%= _.escape(item.get(\"name\")) %></div>',\n        // DATASET START\n        '<div class=\"dataset_table\">', '<table class=\"grid table table-striped table-condensed\">', \"<tr>\", '<th scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(ldda.id) %>\">Name</th>', '<td><%= _.escape(ldda.get(\"name\")) %></td>', \"</tr>\", '<% if (ldda.get(\"file_ext\")) { %>', \"<tr>\", '<th scope=\"row\">Data type</th>', '<td><%= _.escape(ldda.get(\"file_ext\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (ldda.get(\"genome_build\")) { %>', \"<tr>\", '<th scope=\"row\">Genome build</th>', '<td><%= _.escape(ldda.get(\"genome_build\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (ldda.get(\"file_size\")) { %>', \"<tr>\", '<th scope=\"row\">Size</th>', '<td><%= _.escape(ldda.get(\"file_size\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (ldda.get(\"date_uploaded\")) { %>', \"<tr>\", '<th scope=\"row\">Date uploaded (UTC)</th>', '<td><%= _.escape(ldda.get(\"date_uploaded\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (ldda.get(\"uploaded_by\")) { %>', \"<tr>\", '<th scope=\"row\">Uploaded by</th>', '<td><%= _.escape(ldda.get(\"uploaded_by\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (ldda.get(\"metadata_data_lines\")) { %>', \"<tr>\", '<th scope=\"row\">Data Lines</th>', '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_data_lines\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (ldda.get(\"metadata_comment_lines\")) { %>', \"<tr>\", '<th scope=\"row\">Comment Lines</th>', '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_comment_lines\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (ldda.get(\"metadata_columns\")) { %>', \"<tr>\", '<th scope=\"row\">Number of Columns</th>', '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_columns\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (ldda.get(\"metadata_column_types\")) { %>', \"<tr>\", '<th scope=\"row\">Column Types</th>', '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_column_types\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (ldda.get(\"message\")) { %>', \"<tr>\", '<th scope=\"row\">Message</th>', '<td scope=\"row\"><%= _.escape(ldda.get(\"message\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (ldda.get(\"misc_blurb\")) { %>', \"<tr>\", '<th scope=\"row\">Miscellaneous blurb</th>', '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_blurb\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (ldda.get(\"misc_info\")) { %>', \"<tr>\", '<th scope=\"row\">Miscellaneous information</th>', '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_info\")) %></td>', \"</tr>\", \"<% } %>\", '<% if (item.get(\"tags\")) { %>', \"<tr>\", '<th scope=\"row\">Tags</th>', '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>', \"</tr>\", \"<% } %>\", \"</table>\", \"<div>\", '<pre class=\"peek\">', \"</pre>\", \"</div>\",\n        // DATASET END\n        \"</div>\",\n        // CONTAINER END\n        \"</div>\"].join(\"\"));\n    },\n\n    templateModifyDataset: function templateModifyDataset() {\n        return _.template([\n        // CONTAINER START\n        '<div class=\"library_style_container\">', '<div id=\"library_toolbar\">', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Cancel modifications\" class=\"btn btn-default toolbtn_cancel_modifications primary-button toolbar-item\" type=\"button\">', '<span class=\"fa fa-times\"></span>', \"&nbsp;Cancel\", \"</button>\", '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_modifications primary-button toolbar-item\" type=\"button\">', '<span class=\"fa fa-floppy-o\"></span>', \"&nbsp;Save\", \"</button>\", \"</div>\",\n\n        // BREADCRUMBS\n        '<ol class=\"breadcrumb\">', '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>', '<% _.each(item.get(\"full_path\"), function(path_item) { %>', \"<% if (path_item[0] != item.id) { %>\", '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ', \"<% } else { %>\", '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>', \"<% } %>\", \"<% }); %>\", \"</ol>\", '<div class=\"dataset_table\">', '<table class=\"grid table table-striped table-condensed\">', \"<tr>\", '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>', '<td><input class=\"input_dataset_name form-control\" type=\"text\" placeholder=\"name\" value=\"<%= _.escape(item.get(\"name\")) %>\"></td>', \"</tr>\", \"<tr>\", '<th scope=\"row\">Data type</th>', \"<td>\", '<span id=\"dataset_extension_select\" class=\"dataset-extension-select\" />', \"</td>\", \"</tr>\", \"<tr>\", '<th scope=\"row\">Genome build</th>', \"<td>\", '<span id=\"dataset_genome_select\" class=\"dataset-genome-select\" />', \"</td>\", \"</tr>\", \"<tr>\", '<th scope=\"row\">Size</th>', '<td><%= _.escape(item.get(\"file_size\")) %></td>', \"</tr>\", \"<tr>\", '<th scope=\"row\">Date uploaded (UTC)</th>', '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>', \"</tr>\", \"<tr>\", '<th scope=\"row\">Uploaded by</th>', '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>', \"</tr>\", '<tr scope=\"row\">', '<th scope=\"row\">Data Lines</th>', '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>', \"</tr>\", '<th scope=\"row\">Comment Lines</th>', '<% if (item.get(\"metadata_comment_lines\") === \"\") { %>', '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>', \"<% } else { %>\", '<td scope=\"row\">unknown</td>', \"<% } %>\", \"</tr>\", \"<tr>\", '<th scope=\"row\">Number of Columns</th>', '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>', \"</tr>\", \"<tr>\", '<th scope=\"row\">Column Types</th>', '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>', \"</tr>\", \"<tr>\", '<th scope=\"row\">Message</th>', '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>', \"</tr>\", \"<tr>\", '<th scope=\"row\">Misc. blurb</th>', '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>', \"</tr>\", \"<tr>\", '<th scope=\"row\">Misc. information</th>', '<td><input class=\"input_dataset_misc_info form-control\" type=\"text\" placeholder=\"info\" value=\"<%= _.escape(item.get(\"misc_info\")) %>\"></td>', \"</tr>\",\n        //TODO: add functionality to modify tags here\n        '<% if (item.get(\"tags\")) { %>', \"<tr>\", '<th scope=\"row\">Tags</th>', '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>', \"</tr>\", \"<% } %>\", \"</table>\", \"<div>\", '<pre class=\"peek\">', \"</pre>\", \"</div>\", \"</div>\",\n        // CONTAINER END\n        \"</div>\"].join(\"\"));\n    },\n\n    templateDatasetPermissions: function templateDatasetPermissions() {\n        return _.template([\n        // CONTAINER START\n        '<div class=\"library_style_container\">', '<div id=\"library_toolbar\">', '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">', '<span class=\"fa fa-file-o\"></span>', \"&nbsp;Dataset Details\", \"</button>\", \"<a>\", \"</div>\",\n\n        // BREADCRUMBS\n        '<ol class=\"breadcrumb\">', '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>', '<% _.each(item.get(\"full_path\"), function(path_item) { %>', \"<% if (path_item[0] != item.id) { %>\", '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ', \"<% } else { %>\", '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>', \"<% } %>\", \"<% }); %>\", \"</ol>\", '<h1>Dataset: <%= _.escape(item.get(\"name\")) %></h1>', '<div class=\"alert alert-warning\">', \"<% if (is_admin) { %>\", \"You are logged in as an <strong>administrator</strong> therefore you can manage any dataset on this Galaxy instance. Please make sure you understand the consequences.\", \"<% } else { %>\", \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\", \"<% } %>\", \"</div>\", '<div class=\"dataset_table\">', \"<h2>Library-related permissions</h2>\", \"<h4>Roles that can modify the library item</h4>\", '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"></div>', '<div class=\"alert alert-info roles-selection\">User with <strong>any</strong> of these roles can modify name, metadata, and other information about this library item.</div>', \"<hr/>\", \"<h2>Dataset-related permissions</h2>\", '<div class=\"alert alert-warning\">Changes made below will affect <strong>every</strong> library item that was created from this dataset and also every history this dataset is part of.</div>', '<% if (!item.get(\"is_unrestricted\")) { %>', '<p>You can <span class=\"remove-restrictions\"><a href=\"\">remove all access restrictions</a></span> on this dataset.</p>', \"<% } else { %>\", '<p>You can <span class=\"make-private\"><a href=\"\">make this dataset private</a></span> to you.</p>', \"<% } %>\", \"<h4>Roles that can access the dataset</h4>\", '<div id=\"access_perm\" class=\"access_perm roles-selection\"></div>', '<div class=\"alert alert-info roles-selection\">', \"User has to have <strong>all these roles</strong> in order to access this dataset.\", \" Users without access permission <strong>cannot</strong> have other permissions on this dataset.\", \" If there are no access roles set on the dataset it is considered <strong>unrestricted</strong>.\", \"</div>\", \"<h4>Roles that can manage permissions on the dataset</h4>\", '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"></div>', '<div class=\"alert alert-info roles-selection\">', \"User with <strong>any</strong> of these roles can manage permissions of this dataset. If you remove yourself you will lose the ability manage this dataset unless you are an admin.\", \"</div>\", '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">', '<span class=\"fa fa-floppy-o\"></span>', \"&nbsp;Save\", \"</button>\", \"</div>\",\n        // CONTAINER END\n        \"</div>\"].join(\"\"));\n    },\n\n    templateBulkImportInModal: function templateBulkImportInModal() {\n        return _.template([\"<div>\", '<div class=\"library-modal-item\">', \"Select history: \", '<select id=\"dataset_import_single\" name=\"dataset_import_single\" style=\"width:50%; margin-bottom: 1em; \" autofocus>', \"<% _.each(histories, function(history) { %>\", '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>', \"<% }); %>\", \"</select>\", \"</div>\", '<div class=\"library-modal-item\">', \"or create new: \", '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">', \"</input>\", \"</div>\", \"</div>\"].join(\"\"));\n    }\n});\n\nexports.default = {\n    LibraryDatasetView: LibraryDatasetView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 289:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.tracksterApp = tracksterApp;\n\nvar _galaxy = __webpack_require__(290);\n\nvar _galaxy2 = _interopRequireDefault(_galaxy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction tracksterApp(options) {\n    new _galaxy2.default.GalaxyApp(options);\n}\n\nwindow.libraryApp = tracksterApp;\n\n/***/ }),\n\n/***/ 290:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _toastr = __webpack_require__(42);\n\nvar _toastr2 = _interopRequireDefault(_toastr);\n\nvar _baseMvc = __webpack_require__(8);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _libraryModel = __webpack_require__(156);\n\nvar _libraryModel2 = _interopRequireDefault(_libraryModel);\n\nvar _libraryFolderlistView = __webpack_require__(292);\n\nvar _libraryFolderlistView2 = _interopRequireDefault(_libraryFolderlistView);\n\nvar _libraryLibrarylistView = __webpack_require__(294);\n\nvar _libraryLibrarylistView2 = _interopRequireDefault(_libraryLibrarylistView);\n\nvar _libraryLibrarytoolbarView = __webpack_require__(296);\n\nvar _libraryLibrarytoolbarView2 = _interopRequireDefault(_libraryLibrarytoolbarView);\n\nvar _libraryFoldertoolbarView = __webpack_require__(297);\n\nvar _libraryFoldertoolbarView2 = _interopRequireDefault(_libraryFoldertoolbarView);\n\nvar _libraryDatasetView = __webpack_require__(221);\n\nvar _libraryDatasetView2 = _interopRequireDefault(_libraryDatasetView);\n\nvar _libraryLibraryView = __webpack_require__(299);\n\nvar _libraryLibraryView2 = _interopRequireDefault(_libraryLibraryView);\n\nvar _libraryFolderView = __webpack_require__(300);\n\nvar _libraryFolderView2 = _interopRequireDefault(_libraryFolderView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// ============================================================================\n/**\n * The Data Libraries router. Takes care about triggering routes\n * and sends users to proper pieces of the application.\n */\nvar LibraryRouter = Backbone.Router.extend({\n    initialize: function initialize() {\n        this.routesHit = 0;\n        // keep count of number of routes handled by the application\n        Backbone.history.on(\"route\", function () {\n            this.routesHit++;\n        }, this);\n\n        this.bind(\"route\", this.trackPageview);\n    },\n\n    routes: {\n        \"\": \"libraries\",\n        \"page/:show_page\": \"libraries_page\",\n        \"library/:library_id/permissions\": \"library_permissions\",\n        \"folders/:folder_id/permissions\": \"folder_permissions\",\n        \"folders/:id\": \"folder_content\",\n        \"folders/:id/page/:show_page\": \"folder_page\",\n        \"folders/:folder_id/datasets/:dataset_id\": \"dataset_detail\",\n        \"folders/:folder_id/datasets/:dataset_id/permissions\": \"dataset_permissions\",\n        \"folders/:folder_id/datasets/:dataset_id/versions/:ldda_id\": \"dataset_version\",\n        \"folders/:folder_id/download/:format\": \"download\",\n        \"folders/:folder_id/import/:source\": \"import_datasets\"\n    },\n\n    /**\n     * If more than one route has been hit the user did not land on current\n     * page directly so we can go back safely. Otherwise go to the home page.\n     * Use replaceState if available so the navigation doesn't create an\n     * extra history entry\n     */\n    back: function back() {\n        if (this.routesHit > 1) {\n            window.history.back();\n        } else {\n            this.navigate(\"#\", { trigger: true, replace: true });\n        }\n    },\n\n    /**\n     * Track every route change as a page view in Google Analytics.\n     */\n    trackPageview: function trackPageview() {\n        var url = Backbone.history.getFragment();\n        //prepend slash\n        if (!/^\\//.test(url) && url != \"\") {\n            url = \"/\" + url;\n        }\n        if (typeof ga !== \"undefined\") {\n            ga(\"send\", \"pageview\", Galaxy.root + \"library/list\" + url);\n        }\n    }\n});\n\n// ============================================================================\n/** session storage for library preferences */\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n// === MAIN GALAXY LIBRARY MODULE ====\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n\nvar LibraryPrefs = _baseMvc2.default.SessionStorageModel.extend({\n    defaults: {\n        with_deleted: false,\n        without_restricted: false,\n        sort_order: \"asc\",\n        sort_by: \"name\",\n        library_page_size: 20,\n        folder_page_size: 15\n    }\n});\n\n// ============================================================================\n/**\n * Main view of the Galaxy Data Libraries. Stores pointers to other subviews\n * and defines what router should do on the route triggers.\n */\nvar GalaxyLibrary = Backbone.View.extend({\n    libraryToolbarView: null,\n    libraryListView: null,\n    library_router: null,\n    libraryView: null,\n    folderToolbarView: null,\n    folderListView: null,\n    datasetView: null,\n\n    initialize: function initialize() {\n        // This should go upstream in the js app once available\n        if (window.Galaxy.config.ga_code) {\n            (function (i, s, o, g, r, a, m) {\n                i[\"GoogleAnalyticsObject\"] = r;\n                i[r] = i[r] || function () {\n                    (i[r].q = i[r].q || []).push(arguments);\n                }, i[r].l = 1 * new Date();\n                a = s.createElement(o), m = s.getElementsByTagName(o)[0];\n                a.async = 1;\n                a.src = g;\n                m.parentNode.insertBefore(a, m);\n            })(window, document, \"script\", \"//www.google-analytics.com/analytics.js\", \"ga\");\n            ga(\"create\", window.Galaxy.config.ga_code, \"auto\");\n            ga(\"send\", \"pageview\");\n        }\n\n        Galaxy.libraries = this;\n\n        this.preferences = new LibraryPrefs({ id: \"global-lib-prefs\" });\n\n        this.library_router = new LibraryRouter();\n\n        this.library_router.on(\"route:libraries\", function () {\n            if (Galaxy.libraries.libraryToolbarView) {\n                Galaxy.libraries.libraryToolbarView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.libraryToolbarView = new _libraryLibrarytoolbarView2.default.LibraryToolbarView();\n            Galaxy.libraries.libraryListView = new _libraryLibrarylistView2.default.LibraryListView();\n        });\n\n        this.library_router.on(\"route:libraries_page\", function (show_page) {\n            if (Galaxy.libraries.libraryToolbarView === null) {\n                Galaxy.libraries.libraryToolbarView = new _libraryLibrarytoolbarView2.default.LibraryToolbarView();\n                Galaxy.libraries.libraryListView = new _libraryLibrarylistView2.default.LibraryListView({ show_page: show_page });\n            } else {\n                Galaxy.libraries.libraryListView.render({\n                    show_page: show_page\n                });\n            }\n        });\n\n        this.library_router.on(\"route:folder_content\", function (id) {\n            if (Galaxy.libraries.folderToolbarView) {\n                Galaxy.libraries.folderToolbarView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.folderToolbarView = new _libraryFoldertoolbarView2.default.FolderToolbarView({ id: id });\n            Galaxy.libraries.folderListView = new _libraryFolderlistView2.default.FolderListView({ id: id });\n        });\n\n        this.library_router.on(\"route:folder_page\", function (id, show_page) {\n            if (Galaxy.libraries.folderToolbarView === null) {\n                Galaxy.libraries.folderToolbarView = new _libraryFoldertoolbarView2.default.FolderToolbarView({ id: id });\n                Galaxy.libraries.folderListView = new _libraryFolderlistView2.default.FolderListView({\n                    id: id,\n                    show_page: show_page\n                });\n            } else {\n                Galaxy.libraries.folderListView.render({\n                    id: id,\n                    show_page: parseInt(show_page)\n                });\n            }\n        });\n\n        this.library_router.on(\"route:download\", function (folder_id, format) {\n            if ($(\"#folder_list_body\").find(\":checked\").length === 0) {\n                _toastr2.default.info(\"You must select at least one dataset to download\");\n                Galaxy.libraries.library_router.navigate(\"folders/\" + folder_id, { trigger: true, replace: true });\n            } else {\n                Galaxy.libraries.folderToolbarView.download(folder_id, format);\n                Galaxy.libraries.library_router.navigate(\"folders/\" + folder_id, { trigger: false, replace: true });\n            }\n        });\n\n        this.library_router.on(\"route:dataset_detail\", function (folder_id, dataset_id) {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new _libraryDatasetView2.default.LibraryDatasetView({\n                id: dataset_id,\n                show_version: false,\n                show_permissions: false\n            });\n        });\n\n        this.library_router.on(\"route:dataset_version\", function (folder_id, dataset_id, ldda_id) {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new _libraryDatasetView2.default.LibraryDatasetView({\n                id: dataset_id,\n                ldda_id: ldda_id,\n                show_version: true\n            });\n        });\n\n        this.library_router.on(\"route:dataset_permissions\", function (folder_id, dataset_id) {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new _libraryDatasetView2.default.LibraryDatasetView({\n                id: dataset_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:library_permissions\", function (library_id) {\n            if (Galaxy.libraries.libraryView) {\n                Galaxy.libraries.libraryView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.libraryView = new _libraryLibraryView2.default.LibraryView({\n                id: library_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:folder_permissions\", function (folder_id) {\n            if (Galaxy.libraries.folderView) {\n                Galaxy.libraries.folderView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.folderView = new _libraryFolderView2.default.FolderView({\n                id: folder_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:import_datasets\", function (folder_id, source) {\n            if (Galaxy.libraries.folderToolbarView && Galaxy.libraries.folderListView) {\n                Galaxy.libraries.folderToolbarView.showImportModal({\n                    source: source\n                });\n            } else {\n                Galaxy.libraries.folderToolbarView = new _libraryFoldertoolbarView2.default.FolderToolbarView({ id: folder_id });\n                Galaxy.libraries.folderListView = new _libraryFolderlistView2.default.FolderListView({ id: folder_id });\n                Galaxy.libraries.folderToolbarView.showImportModal({\n                    source: source\n                });\n            }\n        });\n\n        Backbone.history.start({ pushState: false });\n    }\n});\n\nexports.default = {\n    GalaxyApp: GalaxyLibrary\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 291:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n * Create alphabetical based two-argument comparator\n * that takes into account that Folder comes before Dataset.\n * If sort_key is not present it is set to ''.\n * @param  {str} sort_key   key to sort by\n * @param  {str} sort_order order to sort by (asc, desc)\n * @return {function} two-argument comparator function\n */\nvar generateFolderComparator = function generateFolderComparator(sort_key, sort_order) {\n    return function (itemA, itemB) {\n        if (itemA.get(\"type\") === itemB.get(\"type\")) {\n            if (!itemA.has(sort_key) && !itemB.has(sort_key)) {\n                return 0;\n            } else if (!itemA.has(sort_key)) {\n                return 1;\n            } else if (!itemB.has(sort_key)) {\n                return -1;\n            }\n            if (itemA.get(sort_key).toLowerCase() > itemB.get(sort_key).toLowerCase()) {\n                return sort_order === \"asc\" ? 1 : -1;\n            }\n            if (itemB.get(sort_key).toLowerCase() > itemA.get(sort_key).toLowerCase()) {\n                return sort_order === \"asc\" ? -1 : 1;\n            }\n            return 0; // equal\n        } else {\n            if (itemA.get(\"type\") === \"folder\") {\n                return -1; // folder is always before dataset\n            }\n            return 1;\n        }\n    };\n};\n/**\n * Create alphabetical based two-argument comparator\n * @param  {str} sort_key   key to sort by\n * @param  {str} sort_order order to sort by (asc, desc)\n * @return {function} two-argument comparator function\n */\nvar generateLibraryComparator = function generateLibraryComparator(sort_key, sort_order) {\n    return function (libraryA, libraryB) {\n        if (libraryA.get(sort_key).toLowerCase() > libraryB.get(sort_key).toLowerCase()) {\n            return sort_order === \"asc\" ? 1 : -1;\n        }\n        if (libraryB.get(sort_key).toLowerCase() > libraryA.get(sort_key).toLowerCase()) {\n            return sort_order === \"asc\" ? -1 : 1;\n        }\n        return 0; // equal\n    };\n};\nexports.default = {\n    generateFolderComparator: generateFolderComparator,\n    generateLibraryComparator: generateLibraryComparator\n};\n\n/***/ }),\n\n/***/ 292:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toastr = __webpack_require__(42);\n\nvar _toastr2 = _interopRequireDefault(_toastr);\n\nvar _libraryModel = __webpack_require__(156);\n\nvar _libraryModel2 = _interopRequireDefault(_libraryModel);\n\nvar _libraryFolderrowView = __webpack_require__(293);\n\nvar _libraryFolderrowView2 = _interopRequireDefault(_libraryFolderrowView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FolderListView = Backbone.View.extend({\n    el: \"#folder_items_element\",\n    // progress percentage\n    progress: 0,\n    // progress rate per one item\n    progressStep: 1,\n\n    folderContainer: null,\n\n    current_sort_order: \"asc\",\n\n    current_sort_key: \"name\",\n\n    events: {\n        \"click #select-all-checkboxes\": \"selectAll\",\n        \"click .dataset_row\": \"selectClickedRow\",\n        \"click .folder_row\": \"selectClickedRow\",\n        \"click .sort-folder-name\": \"sortColumnClicked\",\n        \"click .sort-folder-file_ext\": \"sortColumnClicked\",\n        \"click .sort-folder-description\": \"sortColumnClicked\",\n        \"click .sort-folder-state\": \"sortColumnClicked\"\n    },\n\n    collection: null,\n\n    defaults: {\n        include_deleted: false,\n        page_count: null,\n        show_page: null\n    },\n\n    /**\n     * Initialize and fetch the folder from the server.\n     * @param  {object} options an object with options\n     */\n    initialize: function initialize(options) {\n        this.options = _.defaults(this.options || {}, this.defaults, options);\n        this.modal = null;\n        // map of folder item ids to item views = cache\n        this.rowViews = {};\n\n        // create a collection of folder items for this view\n        this.collection = new _libraryModel2.default.Folder();\n\n        // start to listen if someone modifies the collection\n        this.listenTo(this.collection, \"add\", this.renderOne);\n        this.listenTo(this.collection, \"remove\", this.removeOne);\n        this.listenTo(this.collection, \"sort\", this.rePaint);\n        this.listenTo(this.collection, \"reset\", this.rePaint);\n\n        this.fetchFolder();\n    },\n\n    fetchFolder: function fetchFolder(options) {\n        var options = options || {};\n        this.options.include_deleted = options.include_deleted;\n        var self = this;\n\n        this.folderContainer = new _libraryModel2.default.FolderContainer({\n            id: this.options.id\n        });\n        this.folderContainer.url = this.folderContainer.attributes.urlRoot + this.options.id + \"/contents\";\n\n        if (this.options.include_deleted) {\n            this.folderContainer.url = this.folderContainer.url + \"?include_deleted=true\";\n        }\n        this.folderContainer.fetch({\n            success: function success(folder_container) {\n                self.folder_container = folder_container;\n                self.render();\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(response.responseJSON.err_msg + \" Click this to go back.\", \"\", {\n                        onclick: function onclick() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    _toastr2.default.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function onclick() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    render: function render(options) {\n        this.options = _.extend(this.options, options);\n        var template = this.templateFolder();\n        $(\".tooltip\").hide();\n\n        // find the upper id in the full path\n        var path = this.folderContainer.attributes.metadata.full_path;\n        var upper_folder_id;\n        if (path.length === 1) {\n            // the library is above us\n            upper_folder_id = 0;\n        } else {\n            upper_folder_id = path[path.length - 2][0];\n        }\n\n        this.$el.html(template({\n            path: this.folderContainer.attributes.metadata.full_path,\n            parent_library_id: this.folderContainer.attributes.metadata.parent_library_id,\n            id: this.options.id,\n            upper_folder_id: upper_folder_id,\n            order: this.current_sort_order\n        }));\n\n        // when dataset_id is present render its details too\n        if (this.options.dataset_id) {\n            var row = _.findWhere(self.rowViews, {\n                id: this.options.dataset_id\n            });\n            if (row) {\n                row.showDatasetDetails();\n            } else {\n                _toastr2.default.error(\"Requested dataset not found. Showing folder instead.\");\n            }\n        } else {\n            if (this.options.show_page === null || this.options.show_page < 1) {\n                this.options.show_page = 1;\n            }\n            this.paginate();\n        }\n        $(\"#center [data-toggle]\").tooltip();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    paginate: function paginate(options) {\n        this.options = _.extend(this.options, options);\n\n        if (this.options.show_page === null || this.options.show_page < 1) {\n            this.options.show_page = 1;\n        }\n        this.options.total_items_count = this.folder_container.get(\"folder\").models.length;\n        this.options.page_count = Math.ceil(this.options.total_items_count / Galaxy.libraries.preferences.get(\"folder_page_size\"));\n        var page_start = Galaxy.libraries.preferences.get(\"folder_page_size\") * (this.options.show_page - 1);\n        var items_to_render = null;\n        items_to_render = this.folder_container.get(\"folder\").models.slice(page_start, page_start + Galaxy.libraries.preferences.get(\"folder_page_size\"));\n        this.options.items_shown = items_to_render.length;\n        // User requests page with no items\n        if (Galaxy.libraries.preferences.get(\"folder_page_size\") * this.options.show_page > this.options.total_items_count + Galaxy.libraries.preferences.get(\"folder_page_size\")) {\n            items_to_render = [];\n        }\n        Galaxy.libraries.folderToolbarView.renderPaginator(this.options);\n        this.collection.reset(items_to_render);\n    },\n\n    rePaint: function rePaint(options) {\n        this.options = _.extend(this.options, options);\n        this.removeAllRows();\n        this.renderAll();\n        this.checkEmptiness();\n    },\n\n    /**\n     * Adds all given models to the collection.\n     * @param {array of Item or FolderAsModel} array of models that should\n     *  be added to the view's collection.\n     */\n    addAll: function addAll(models) {\n        _.each(models, function (model) {\n            Galaxy.libraries.folderListView.collection.add(model, {\n                current_sort_order: false\n            });\n        });\n        $(\"#center [data-toggle]\").tooltip();\n        this.checkEmptiness();\n        this.postRender();\n    },\n\n    /**\n     * Call this after all models are added to the collection\n     * to ensure that the folder toolbar will show proper options\n     * and that event will be bound on all subviews.\n     */\n    postRender: function postRender() {\n        var fetched_metadata = this.folderContainer.attributes.metadata;\n        fetched_metadata.contains_file_or_folder = typeof this.collection.findWhere({ type: \"file\" }) !== \"undefined\" || typeof this.collection.findWhere({ type: \"folder\" }) !== \"undefined\";\n        Galaxy.libraries.folderToolbarView.configureElements(fetched_metadata);\n    },\n\n    /**\n     * Iterates this view's collection and calls the render\n     * function for each. Also binds the hover behavior.\n     */\n    renderAll: function renderAll() {\n        var self = this;\n        _.each(this.collection.models.reverse(), function (model) {\n            self.renderOne(model);\n        });\n        this.postRender();\n    },\n\n    /**\n     * Creates a view for the given model and adds it to the folder view.\n     * @param {Item or FolderAsModel} model of the view that will be rendered\n     */\n    renderOne: function renderOne(model) {\n        this.options.contains_file_or_folder = true;\n        //if (model.get('type') !== 'folder'){\n        // model.set('readable_size', this.size_to_string(model.get('file_size')));\n        //}\n        model.set(\"folder_id\", this.id);\n        var rowView = new _libraryFolderrowView2.default.FolderRowView({\n            model: model\n        });\n\n        // save new rowView to cache\n        this.rowViews[model.get(\"id\")] = rowView;\n\n        this.$el.find(\"#first_folder_item\").after(rowView.el);\n    },\n\n    /**\n     * Remove the view of the given model from the DOM.\n     * @param {Item or FolderAsModel} model of the view that will be removed\n     */\n    removeOne: function removeOne(model) {\n        this.$el.find(\"tr\").filter(function () {\n            return $(this).data(\"id\") && $(this).data(\"id\") === model.id;\n        }).remove();\n    },\n\n    /**\n     * Remove all dataset and folder row elements from the DOM.\n     */\n    removeAllRows: function removeAllRows() {\n        $(\".library-row\").remove();\n    },\n\n    /** Checks whether the list is empty and adds/removes the message */\n    checkEmptiness: function checkEmptiness() {\n        if (this.$el.find(\".dataset_row\").length === 0 && this.$el.find(\".folder_row\").length === 0) {\n            this.$el.find(\".empty-folder-message\").show();\n        } else {\n            this.$el.find(\".empty-folder-message\").hide();\n        }\n    },\n\n    sortColumnClicked: function sortColumnClicked(event) {\n        event.preventDefault();\n        this.current_sort_order = this.current_sort_order === \"asc\" ? \"desc\" : \"asc\";\n        this.current_sort_key = event.currentTarget.className.replace(\"sort-folder-\", \"\");\n        this.collection.sortFolder(this.current_sort_key, this.current_sort_order);\n        this.renderSortIcon();\n    },\n\n    /**\n     * User clicked the checkbox in the table heading\n     * @param  {context} event\n     */\n    selectAll: function selectAll(event) {\n        var selected = event.target.checked;\n        var self = this;\n        // Iterate each checkbox\n        $(\":checkbox\", \"#folder_list_body\").each(function () {\n            this.checked = selected;\n            var $row = $(this).closest(\"tr\");\n            // Change color of selected/unselected\n            if (selected) {\n                self.makeDarkRow($row);\n            } else {\n                self.makeWhiteRow($row);\n            }\n        });\n    },\n\n    /**\n     * Check checkbox if user clicks on the whole row or\n     *  on the checkbox itself\n     */\n    selectClickedRow: function selectClickedRow(event) {\n        var checkbox = \"\";\n        var $row;\n        var source;\n        $row = $(event.target).closest(\"tr\");\n        if (event.target.localName === \"input\") {\n            checkbox = event.target;\n            source = \"input\";\n        } else if (event.target.localName === \"td\") {\n            checkbox = $row.find(\":checkbox\")[0];\n            source = \"td\";\n        }\n        if (checkbox.checked) {\n            if (source === \"td\") {\n                checkbox.checked = \"\";\n                this.makeWhiteRow($row);\n            } else if (source === \"input\") {\n                this.makeDarkRow($row);\n            }\n        } else {\n            if (source === \"td\") {\n                checkbox.checked = \"selected\";\n                this.makeDarkRow($row);\n            } else if (source === \"input\") {\n                this.makeWhiteRow($row);\n            }\n        }\n    },\n\n    makeDarkRow: function makeDarkRow($row) {\n        $row.removeClass(\"light\").addClass(\"dark\");\n        $row.find(\"a\").removeClass(\"light\").addClass(\"dark\");\n        $row.find(\".fa-file-o\").removeClass(\"fa-file-o\").addClass(\"fa-file\");\n        $row.find(\".fa-folder-o\").removeClass(\"fa-folder-o\").addClass(\"fa-folder\");\n    },\n\n    makeWhiteRow: function makeWhiteRow($row) {\n        $row.removeClass(\"dark\").addClass(\"light\");\n        $row.find(\"a\").removeClass(\"dark\").addClass(\"light\");\n        $row.find(\".fa-file\").removeClass(\"fa-file\").addClass(\"fa-file-o\");\n        $row.find(\".fa-folder\").removeClass(\"fa-folder\").addClass(\"fa-folder-o\");\n    },\n\n    renderSortIcon: function renderSortIcon() {\n        if (this.current_sort_order === \"asc\") {\n            $('[class*=\"sort-icon\"]').removeClass(\"fa-sort-alpha-desc\").removeClass(\"fa-sort-alpha-asc\");\n            $(\".sort-icon-\" + this.current_sort_key).addClass(\"fa-sort-alpha-asc\");\n        } else {\n            $(\".sort-icon-\" + this.current_sort_key).addClass(\"fa-sort-alpha-desc\");\n        }\n    },\n\n    templateFolder: function templateFolder() {\n        return _.template([\n        // BREADCRUMBS\n        '<ol class=\"breadcrumb\">', '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>', \"<% _.each(path, function(path_item) { %>\", \"<% if (path_item[0] != id) { %>\", '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ', \"<% } else { %>\", '<li class=\"active\"><span title=\"You are in this folder\"><%- path_item[1] %></span></li>', \"<% } %>\", \"<% }); %>\", \"</ol>\",\n\n        // FOLDER CONTENT\n        '<table data-library-id=\"<%- parent_library_id  %>\" class=\"grid table table-condensed\">', \"<thead>\", '<th class=\"button_heading\"></th>', '<th style=\"text-align: center; width: 20px; \" title=\"Check to select all datasets\"><input id=\"select-all-checkboxes\" style=\"margin: 0;\" type=\"checkbox\"></th>', '<th><a class=\"sort-folder-name\" title=\"Click to reverse order\" href=\"#\">name</a> <span title=\"Sorted alphabetically\" class=\"sort-icon-name fa fa-sort-alpha-<%- order %>\"></span></th>', '<th style=\"width:20%;\"><a class=\"sort-folder-description\" title=\"Click to reverse order\" href=\"#\">description</a> <span title=\"Sorted alphabetically\" class=\"sort-icon-description fa\"></span></th>', '<th style=\"width:5%;\"><a class=\"sort-folder-file_ext\" title=\"Click to reverse order\" href=\"#\">data type</a> <span title=\"Sorted alphabetically\" class=\"sort-icon-file_ext fa\"></span></th>', '<th style=\"width:10%;\">size</th>', '<th style=\"width:160px;\">time updated (UTC)</th>', '<th style=\"width:5%;\"><a class=\"sort-folder-state\" title=\"Click to reverse order\" href=\"#\">state</a> <span title=\"Sorted alphabetically\" class=\"sort-icon-state fa\"></span></th>', '<th style=\"width:150px;\"></th> ', \"</thead>\", '<tbody id=\"folder_list_body\">', '<tr id=\"first_folder_item\">', \"<td>\", '<a href=\"#<% if (upper_folder_id !== 0){ print(\"folders/\" + upper_folder_id)} %>\" title=\"Go to parent folder\" class=\"btn_open_folder btn btn-default btn-xs\">..<a>', \"</td>\", \"<td></td>\", \"<td></td>\", \"<td></td>\", \"<td></td>\", \"<td></td>\", \"<td></td>\", \"<td></td>\", \"<td></td>\", \"</tr>\", \"</tbody>\", \"</table>\", '<div class=\"empty-folder-message\" style=\"display:none;\">', \"This folder is either empty or you do not have proper access permissions to see the contents. If you expected something to show up\", ' please consult the <a href=\"https://galaxyproject.org/data-libraries/#permissions\" target=\"_blank\">library security wikipage</a>', ' or visit the <a href=\"https://biostar.usegalaxy.org/\" target=\"_blank\">Galaxy support site</a>.', \"</div>\"].join(\"\"));\n    }\n});\n\nexports.default = {\n    FolderListView: FolderListView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 293:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toastr = __webpack_require__(42);\n\nvar _toastr2 = _interopRequireDefault(_toastr);\n\nvar _libraryModel = __webpack_require__(156);\n\nvar _libraryModel2 = _interopRequireDefault(_libraryModel);\n\nvar _libraryDatasetView = __webpack_require__(221);\n\nvar _libraryDatasetView2 = _interopRequireDefault(_libraryDatasetView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FolderRowView = Backbone.View.extend({\n    events: {\n        \"click .undelete_dataset_btn\": \"undeleteDataset\",\n        \"click .undelete_folder_btn\": \"undeleteFolder\",\n        \"click .edit_folder_btn\": \"startModifications\",\n        \"click .cancel_folder_btn\": \"cancelModifications\",\n        \"click .save_folder_btn\": \"saveModifications\"\n    },\n\n    defaults: {\n        type: null,\n        visibility_config: {\n            edit_folder_btn: false,\n            save_folder_btn: false,\n            cancel_folder_btn: false,\n            permission_folder_btn: false\n        },\n        edit_mode: false\n    },\n\n    initialize: function initialize(options) {\n        this.options = _.defaults(options || {}, this.defaults);\n        this.render(this.options);\n    },\n\n    render: function render(options) {\n        this.options = _.extend(this.options, options);\n        var folder_item = this.options.model;\n        var template = null;\n\n        if (folder_item.get(\"type\") === \"folder\" || folder_item.get(\"model_class\") === \"LibraryFolder\") {\n            this.options.type = \"folder\";\n            this.prepareButtons(folder_item);\n            if (folder_item.get(\"deleted\")) {\n                template = this.templateRowDeletedFolder();\n            } else {\n                template = this.templateRowFolder();\n            }\n        } else if (folder_item.get(\"type\") === \"file\" || folder_item.get(\"model_class\") === \"LibraryDatasetDatasetAssociation\" || folder_item.get(\"model_class\") === \"LibraryDataset\") {\n            this.options.type = \"file\";\n            if (folder_item.get(\"deleted\")) {\n                template = this.templateRowDeletedFile();\n            } else {\n                template = this.templateRowFile();\n            }\n        } else {\n            Galaxy.emit.error(\"Unknown library item type found.\");\n            Galaxy.emit.error(folder_item.get(\"type\") || folder_item.get(\"model_class\"));\n        }\n        this.setElement(template({\n            content_item: folder_item,\n            edit_mode: this.options.edit_mode,\n            button_config: this.options.visibility_config\n        }));\n        this.$el.show();\n        return this;\n    },\n\n    /**\n     * Modify the visibility of buttons for\n     * the filling of the row template of a given folder.\n     */\n    prepareButtons: function prepareButtons(folder) {\n        var vis_config = this.options.visibility_config;\n        if (this.options.edit_mode === false) {\n            vis_config.save_folder_btn = false;\n            vis_config.cancel_folder_btn = false;\n            if (folder.get(\"deleted\") === true) {\n                vis_config.edit_folder_btn = false;\n                vis_config.permission_folder_btn = false;\n            } else if (folder.get(\"deleted\") === false) {\n                vis_config.save_folder_btn = false;\n                vis_config.cancel_folder_btn = false;\n                if (folder.get(\"can_modify\") === true) {\n                    vis_config.edit_folder_btn = true;\n                }\n                if (folder.get(\"can_manage\") === true) {\n                    vis_config.permission_folder_btn = true;\n                }\n            }\n        } else if (this.options.edit_mode === true) {\n            vis_config.edit_folder_btn = false;\n            vis_config.permission_folder_btn = false;\n            vis_config.save_folder_btn = true;\n            vis_config.cancel_folder_btn = true;\n        }\n        this.options.visibility_config = vis_config;\n    },\n\n    /* Show the page with dataset details. */\n    showDatasetDetails: function showDatasetDetails() {\n        Galaxy.libraries.datasetView = new _libraryDatasetView2.default.LibraryDatasetView({ id: this.id });\n    },\n\n    /* Undelete the dataset on server and render the row again. */\n    undeleteDataset: function undeleteDataset(event) {\n        $(\".tooltip\").hide();\n        var that = this;\n        var dataset_id = $(event.target).closest(\"tr\").data(\"id\");\n        var dataset = Galaxy.libraries.folderListView.collection.get(dataset_id);\n        dataset.url = dataset.urlRoot + dataset.id + \"?undelete=true\";\n        dataset.destroy({\n            success: function success(model, response) {\n                Galaxy.libraries.folderListView.collection.remove(dataset_id);\n                var updated_dataset = new _libraryModel2.default.Item(response);\n                Galaxy.libraries.folderListView.collection.add(updated_dataset);\n                Galaxy.libraries.folderListView.collection.sortFolder(\"name\", \"asc\");\n                _toastr2.default.success(\"Dataset undeleted. Click this to see it.\", \"\", {\n                    onclick: function onclick() {\n                        var folder_id = that.model.get(\"folder_id\");\n                        window.location = Galaxy.root + \"library/list#folders/\" + folder_id + \"/datasets/\" + that.id;\n                    }\n                });\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(\"Dataset was not undeleted. \" + response.responseJSON.err_msg);\n                } else {\n                    _toastr2.default.error(\"An error occured! Dataset was not undeleted. Please try again.\");\n                }\n            }\n        });\n    },\n\n    /* Undelete the folder on server and render the row again. */\n    undeleteFolder: function undeleteFolder(event) {\n        $(\".tooltip\").hide();\n        var that = this;\n        var folder_id = $(event.target).closest(\"tr\").data(\"id\");\n        var folder = Galaxy.libraries.folderListView.collection.get(folder_id);\n        folder.url = folder.urlRoot + folder.id + \"?undelete=true\";\n        folder.destroy({\n            success: function success(model, response) {\n                Galaxy.libraries.folderListView.collection.remove(folder_id);\n                var updated_folder = new _libraryModel2.default.FolderAsModel(response);\n                Galaxy.libraries.folderListView.collection.add(updated_folder);\n                Galaxy.libraries.folderListView.collection.sortFolder(\"name\", \"asc\");\n                _toastr2.default.success(\"Folder undeleted.\");\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(\"Folder was not undeleted. \" + response.responseJSON.err_msg);\n                } else {\n                    _toastr2.default.error(\"An error occured! Folder was not undeleted. Please try again.\");\n                }\n            }\n        });\n    },\n\n    /* User clicked the 'edit' button on row so render the row as editable. */\n    startModifications: function startModifications() {\n        this.options.edit_mode = true;\n        this.repaint();\n    },\n\n    /* User clicked the 'cancel' button so render normal row */\n    cancelModifications: function cancelModifications() {\n        this.options.edit_mode = false;\n        this.repaint();\n    },\n\n    saveModifications: function saveModifications() {\n        var folder = Galaxy.libraries.folderListView.collection.get(this.$el.data(\"id\"));\n        var is_changed = false;\n        var new_name = this.$el.find(\".input_folder_name\").val();\n        if (typeof new_name !== \"undefined\" && new_name !== folder.get(\"name\")) {\n            if (new_name.length > 2) {\n                folder.set(\"name\", new_name);\n                is_changed = true;\n            } else {\n                _toastr2.default.warning(\"Folder name has to be at least 3 characters long.\");\n                return;\n            }\n        }\n        var new_description = this.$el.find(\".input_folder_description\").val();\n        if (typeof new_description !== \"undefined\" && new_description !== folder.get(\"description\")) {\n            folder.set(\"description\", new_description);\n            is_changed = true;\n        }\n        if (is_changed) {\n            var row_view = this;\n            folder.save(null, {\n                patch: true,\n                success: function success(folder) {\n                    row_view.options.edit_mode = false;\n                    row_view.repaint(folder);\n                    _toastr2.default.success(\"Changes to folder saved.\");\n                },\n                error: function error(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        _toastr2.default.error(response.responseJSON.err_msg);\n                    } else {\n                        _toastr2.default.error(\"An error occured while attempting to update the folder.\");\n                    }\n                }\n            });\n        } else {\n            this.options.edit_mode = false;\n            this.repaint(folder);\n            _toastr2.default.info(\"Nothing has changed.\");\n        }\n    },\n\n    repaint: function repaint() {\n        /* need to hide manually because of the element removal in setElement\n        invoked in render() */\n        $(\".tooltip\").hide();\n        /* we need to store the old element to be able to replace it with\n        new one */\n        var old_element = this.$el;\n        /* if user canceled the folder param is undefined,\n        if user saved and succeeded the updated folder is rendered */\n        this.render();\n        old_element.replaceWith(this.$el);\n        /* now we attach new tooltips to the newly created row element */\n        this.$el.find(\"[data-toggle]\").tooltip();\n    },\n\n    templateRowFolder: function templateRowFolder() {\n        return _.template(['<tr class=\"folder_row light library-row\" data-id=\"<%- content_item.id %>\">', \"<td>\", '<span title=\"Folder\" class=\"fa fa-folder-o\"/>', \"</td>\", '<td style=\"text-align: center; \"><input style=\"margin: 0;\" type=\"checkbox\"></td>', \"<% if(!edit_mode) { %>\", \"<td>\", '<a href=\"#folders/<%- content_item.id %>\"><%- content_item.get(\"name\") %></a>', \"</td>\", \"<td>\", '<%- content_item.get(\"description\") %>', \"</td>\", \"<% } else if(edit_mode){ %>\", '<td><textarea rows=\"4\" class=\"form-control input_folder_name\" placeholder=\"name\" ><%- content_item.get(\"name\") %></textarea></td>', '<td><textarea rows=\"4\" class=\"form-control input_folder_description\" placeholder=\"description\" ><%- content_item.get(\"description\") %></textarea></td>', \"<% } %>\", \"<td>folder</td>\", \"<td></td>\", \"<td>\", '<%= _.escape(content_item.get(\"update_time\")) %>', \"</td>\", \"<td></td>\", \"<td>\", \"<% if(edit_mode) { %>\", // start edit mode\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save changes\" class=\"primary-button btn-xs save_folder_btn\" type=\"button\" style=\"<% if(button_config.save_folder_btn === false) { print(\"display:none;\") } %>\">', '<span class=\"fa fa-floppy-o\"/> Save', \"</button>\", '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Discard changes\" class=\"primary-button btn-xs cancel_folder_btn\" type=\"button\" style=\"<% if(button_config.cancel_folder_btn === false) { print(\"display:none;\") } %>\">', '<span class=\"fa fa-times\"/> Cancel', \"</button>\", \"<% } else if (!edit_mode){%>\", // start no edit mode\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs edit_folder_btn\" type=\"button\" style=\"<% if(button_config.edit_folder_btn === false) { print(\"display:none;\") } %>\">', '<span class=\"fa fa-pencil\"/> Edit', \"</button>\", '<a href=\"#/folders/<%- content_item.id %>/permissions\">', '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permission_folder_btn\" title=\"Permissions of \\'<%- content_item.get(\"name\") %>\\'\" style=\"<% if(button_config.permission_folder_btn === false) { print(\"display:none;\") } %>\">', '<span class=\"fa fa-group\"/> Manage', \"</button>\", \"</a>\", \"<% } %>\", //end no edit mode\n        \"</td>\", \"</tr>\"].join(\"\"));\n    },\n\n    templateRowFile: function templateRowFile() {\n        return _.template(['<tr class=\"dataset_row light library-row\" data-id=\"<%- content_item.id %>\">', \"<td>\", '<span title=\"Dataset\" class=\"fa fa-file-o\"/>', \"</td>\", '<td style=\"text-align: center; \">', '<input style=\"margin: 0;\" type=\"checkbox\">', \"</td>\", \"<td>\", '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>\" class=\"library-dataset\">', '<%- content_item.get(\"name\") %>', \"<a>\", \"</td>\", '<td><%- content_item.get(\"message\") %></td>', '<td><%= _.escape(content_item.get(\"file_ext\")) %></td>', '<td><%= _.escape(content_item.get(\"file_size\")) %></td>', '<td><%= _.escape(content_item.get(\"update_time\")) %></td>', \"<td>\", '<% if ( content_item.get(\"state\") !== \"ok\" ) { %>', '<%= _.escape(content_item.get(\"state\")) %>', \"<% } %>\", \"</td>\", \"<td>\", '<% if (content_item.get(\"is_unrestricted\")) { %>', '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Unrestricted dataset\" style=\"color:grey;\" class=\"fa fa-globe fa-lg\"/>', \"<% } %>\", '<% if (content_item.get(\"is_private\")) { %>', '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Private dataset\" style=\"color:grey;\" class=\"fa fa-key fa-lg\"/>', \"<% } %>\", '<% if ((content_item.get(\"is_unrestricted\") === false) && (content_item.get(\"is_private\") === false)) { %>', '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Restricted dataset\" style=\"color:grey;\" class=\"fa fa-shield fa-lg\"/>', \"<% } %>\", '<% if (content_item.get(\"can_manage\")) { %>', '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>/permissions\">', '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permissions-dataset-btn\" title=\"Permissions of \\'<%- content_item.get(\"name\") %>\\'\">', '<span class=\"fa fa-group\"/> Manage', \"</button>\", \"</a>\", \"<% } %>\", \"</td>\", \"</tr>\"].join(\"\"));\n    },\n\n    templateRowDeletedFile: function templateRowDeletedFile() {\n        return _.template(['<tr class=\"active deleted_dataset library-row\" data-id=\"<%- content_item.id %>\">', \"<td>\", '<span title=\"Dataset\" class=\"fa fa-file-o\"/>', \"</td>\", \"<td></td>\", '<td style=\"color:grey;\">', '<%- content_item.get(\"name\") %>', \"</td>\", \"<td>\", '<%- content_item.get(\"message\") %>', \"</td>\", \"<td>\", '<%= _.escape(content_item.get(\"file_ext\")) %>', \"</td>\", \"<td>\", '<%= _.escape(content_item.get(\"file_size\")) %>', \"</td>\", \"<td>\", '<%= _.escape(content_item.get(\"update_time\")) %>', \"</td>\", \"<td>\", '<% if ( content_item.get(\"state\") !== \"ok\" ) { %>', '<%= _.escape(content_item.get(\"state\")) %>', \"<% } %>\", \"</td>\", \"<td>\", '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs undelete_dataset_btn\" type=\"button\" style=\"margin-left:1em;\">', '<span class=\"fa fa-unlock\"/> Undelete', \"</button>\", \"</td>\", \"</tr>\"].join(\"\"));\n    },\n\n    templateRowDeletedFolder: function templateRowDeletedFolder() {\n        return _.template(['<tr class=\"active deleted_folder light library-row\" data-id=\"<%- content_item.id %>\">', \"<td>\", '<span title=\"Folder\" class=\"fa fa-folder-o\"/>', \"</td>\", \"<td></td>\", '<td style=\"color:grey;\">', '<%- content_item.get(\"name\") %>', \"</td>\", \"<td>\", '<%- content_item.get(\"description\") %>', \"</td>\", \"<td>\", \"folder\", \"</td>\", \"<td></td>\", \"<td>\", '<%= _.escape(content_item.get(\"update_time\")) %>', \"</td>\", \"<td></td>\", \"<td>\", '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs undelete_folder_btn\" type=\"button\" style=\"margin-left:1em;\">', '<span class=\"fa fa-unlock\"/> Undelete', \"</button>\", \"</td>\", \"</tr>\"].join(\"\"));\n    }\n});\n\nexports.default = {\n    FolderRowView: FolderRowView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 294:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toastr = __webpack_require__(42);\n\nvar _toastr2 = _interopRequireDefault(_toastr);\n\nvar _libraryModel = __webpack_require__(156);\n\nvar _libraryModel2 = _interopRequireDefault(_libraryModel);\n\nvar _libraryLibraryrowView = __webpack_require__(295);\n\nvar _libraryLibraryrowView2 = _interopRequireDefault(_libraryLibraryrowView);\n\nvar _underscore = __webpack_require__(2);\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LibraryListView = Backbone.View.extend({\n    el: \"#libraries_element\",\n\n    events: {\n        \"click .sort-libraries-link\": \"sort_clicked\"\n    },\n\n    defaults: {\n        page_count: null,\n        show_page: null,\n        all_fetched: false\n    },\n\n    /**\n     * Initialize and fetch the libraries from server.\n     * Async render afterwards.\n     * @param  {object} options an object with options\n     */\n    initialize: function initialize(options) {\n        this.options = _underscore2.default.defaults(this.options || {}, options, this.defaults);\n        var that = this;\n        this.modal = null;\n        // collection of {Item}s\n        this.collection = new _libraryModel2.default.Libraries();\n        this.collection.url = this.collection.urlRoot + \"?deleted=false\";\n        this.collection.fetch({\n            success: function success() {\n                that.render();\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(response.responseJSON.err_msg);\n                } else {\n                    _toastr2.default.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    /**\n     * Render the libraries table either from the object's own collection,\n     * or from a given array of library models,\n     * or render an empty list in case no data is given.\n     */\n    render: function render(options) {\n        this.options = _underscore2.default.extend(this.options, options);\n        this.setElement(\"#libraries_element\");\n        var template = this.templateLibraryList();\n        var libraries_to_render = null;\n        var models = null;\n        var is_public = function is_public(model) {\n            return model.get(\"public\") === true;\n        };\n        $(\".tooltip\").hide();\n        if (typeof options !== \"undefined\") {\n            models = typeof options.models !== \"undefined\" ? options.models : null;\n        }\n        if (this.collection !== null && models === null) {\n            this.sortLibraries();\n            if (Galaxy.libraries.preferences.get(\"with_deleted\")) {\n                libraries_to_render = this.collection.models;\n            } else {\n                libraries_to_render = this.collection.where({\n                    deleted: false\n                });\n            }\n            if (Galaxy.libraries.preferences.get(\"without_restricted\")) {\n                libraries_to_render = _underscore2.default.filter(libraries_to_render, is_public);\n            }\n        } else if (models !== null) {\n            if (Galaxy.libraries.preferences.get(\"with_deleted\")) {\n                libraries_to_render = models;\n            } else {\n                var is_deleted = function is_deleted(model) {\n                    return model.get(\"deleted\") === false;\n                };\n                libraries_to_render = _underscore2.default.filter(models, is_deleted);\n            }\n            if (Galaxy.libraries.preferences.get(\"without_restricted\")) {\n                libraries_to_render = _underscore2.default.filter(libraries_to_render, is_public);\n            }\n        } else {\n            libraries_to_render = [];\n        }\n\n        // pagination\n        if (this.options.show_page === null || this.options.show_page < 1) {\n            this.options.show_page = 1;\n        }\n        this.options.total_libraries_count = libraries_to_render.length;\n        var page_start = Galaxy.libraries.preferences.get(\"library_page_size\") * (this.options.show_page - 1);\n        this.options.page_count = Math.ceil(this.options.total_libraries_count / Galaxy.libraries.preferences.get(\"library_page_size\"));\n        if (this.options.total_libraries_count > 0 && page_start < this.options.total_libraries_count) {\n            libraries_to_render = libraries_to_render.slice(page_start, page_start + Galaxy.libraries.preferences.get(\"library_page_size\"));\n            this.options.libraries_shown = libraries_to_render.length;\n            // User requests page with no libraries\n            if (Galaxy.libraries.preferences.get(\"library_page_size\") * this.options.show_page > this.options.total_libraries_count + Galaxy.libraries.preferences.get(\"library_page_size\")) {\n                libraries_to_render = [];\n            }\n            this.$el.html(template({\n                length: 1,\n                order: Galaxy.libraries.preferences.get(\"sort_order\"),\n                search_term: Galaxy.libraries.libraryToolbarView.options.search_term\n            }));\n            Galaxy.libraries.libraryToolbarView.renderPaginator(this.options);\n            this.renderRows(libraries_to_render);\n        } else {\n            this.$el.html(template({\n                length: 0,\n                order: Galaxy.libraries.preferences.get(\"sort_order\"),\n                search_term: Galaxy.libraries.libraryToolbarView.options.search_term\n            }));\n            Galaxy.libraries.libraryToolbarView.renderPaginator(this.options);\n        }\n        $(\"#center [data-toggle]\").tooltip();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    fetchDeleted: function fetchDeleted() {\n        if (this.options.all_fetched) {\n            this.render();\n        } else {\n            var that = this;\n            this.collection.url = this.collection.urlRoot + \"?deleted=true\";\n            this.collection.fetch({\n                remove: false,\n                success: function success() {\n                    that.options.all_fetched = true;\n                    that.render();\n                },\n                error: function error(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        _toastr2.default.error(response.responseJSON.err_msg);\n                    } else {\n                        _toastr2.default.error(\"An error occurred.\");\n                    }\n                }\n            });\n        }\n    },\n\n    /**\n     * Render all given models as rows in the library list\n     * @param  {array} libraries_to_render array of library models to render\n     */\n    renderRows: function renderRows(libraries_to_render) {\n        for (var i = 0; i < libraries_to_render.length; i++) {\n            var library = libraries_to_render[i];\n            this.renderOne({ library: library });\n        }\n    },\n\n    /**\n     * Create a view for the given model and add it to the libraries view.\n     * @param {Library} model of the view that will be rendered\n     */\n    renderOne: function renderOne(options) {\n        var library = options.library;\n        var rowView = new _libraryLibraryrowView2.default.LibraryRowView(library);\n        this.$el.find(\"#library_list_body\").append(rowView.el);\n    },\n\n    /**\n     * Table heading was clicked, update sorting preferences and re-render.\n     * @return {[type]} [description]\n     */\n    sort_clicked: function sort_clicked() {\n        if (Galaxy.libraries.preferences.get(\"sort_order\") === \"asc\") {\n            Galaxy.libraries.preferences.set({ sort_order: \"desc\" });\n        } else {\n            Galaxy.libraries.preferences.set({ sort_order: \"asc\" });\n        }\n        this.render();\n    },\n\n    /**\n     * Sort the underlying collection according to the parameters received.\n     * Currently supports only sorting by name.\n     */\n    sortLibraries: function sortLibraries() {\n        if (Galaxy.libraries.preferences.get(\"sort_by\") === \"name\") {\n            if (Galaxy.libraries.preferences.get(\"sort_order\") === \"asc\") {\n                this.collection.sortLibraries(\"name\", \"asc\");\n            } else if (Galaxy.libraries.preferences.get(\"sort_order\") === \"desc\") {\n                this.collection.sortLibraries(\"name\", \"desc\");\n            }\n        }\n    },\n\n    /**\n     * In case the search_term is not empty perform the search and render\n     * the result. Render all visible libraries otherwise.\n     * @param  {string} search_term string to search for\n     */\n    searchLibraries: function searchLibraries(search_term) {\n        var trimmed_term = $.trim(search_term);\n        if (trimmed_term !== \"\") {\n            var results = null;\n            results = this.collection.search(search_term);\n            this.options.searching = true;\n            this.render({ models: results, show_page: 1 });\n        } else {\n            this.options.searching = false;\n            this.render();\n        }\n    },\n\n    // MMMMMMMMMMMMMMMMMM\n    // === TEMPLATES ====\n    // MMMMMMMMMMMMMMMMMM\n\n    templateLibraryList: function templateLibraryList() {\n        return _underscore2.default.template(['<div class=\"library_container table-responsive\">', \"<% if(length === 0) { %>\", \"<% if(search_term.length > 0) { %>\", \"<div>\", \"There are no libraries matching your search. Try different keyword.\", \"</div>\", \"<% } else{ %>\", \"<div>\", \"There are no libraries visible to you here. If you expected some to show up please consult the\", ' <a href=\"https://galaxyproject.org/data-libraries/#permissions\" target=\"_blank\">library security wikipage</a>', ' or visit the <a href=\"https://biostar.usegalaxy.org/\" target=\"_blank\">Galaxy support site</a>.', \"</div>\", \"<% }%>\", \"<% } else{ %>\", '<table class=\"grid table table-condensed\">', \"<thead>\", '<th style=\"width:30%;\">', '<a class=\"sort-libraries-link\" title=\"Click to reverse order\" href=\"#\">', \"name\", \"</a>\", '<span title=\"Sorted alphabetically\" class=\"fa fa-sort-alpha-<%- order %>\"/>', \"</th>\", '<th style=\"width:22%;\">description</th>', '<th style=\"width:22%;\">synopsis</th> ', '<th style=\"width:26%;\"></th>', \"</thead>\", '<tbody id=\"library_list_body\">',\n        // library item views will attach here\n        \"</tbody>\", \"</table>\", \"<% }%>\", \"</div>\"].join(\"\"));\n    }\n});\n\nexports.default = {\n    LibraryListView: LibraryListView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 295:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toastr = __webpack_require__(42);\n\nvar _toastr2 = _interopRequireDefault(_toastr);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// galaxy library row view\nvar LibraryRowView = Backbone.View.extend({\n    events: {\n        \"click .edit_library_btn\": \"edit_button_clicked\",\n        \"click .cancel_library_btn\": \"cancel_library_modification\",\n        \"click .save_library_btn\": \"save_library_modification\",\n        \"click .delete_library_btn\": \"delete_library\",\n        \"click .undelete_library_btn\": \"undelete_library\"\n    },\n\n    edit_mode: false,\n\n    element_visibility_config: {\n        upload_library_btn: false,\n        edit_library_btn: false,\n        permission_library_btn: false,\n        save_library_btn: false,\n        cancel_library_btn: false,\n        delete_library_btn: false,\n        undelete_library_btn: false\n    },\n\n    initialize: function initialize(library) {\n        this.render(library);\n    },\n\n    render: function render(library) {\n        if (typeof library === \"undefined\") {\n            library = Galaxy.libraries.libraryListView.collection.get(this.$el.data(\"id\"));\n        }\n        this.prepareButtons(library);\n        var tmpl = this.templateRow();\n        this.setElement(tmpl({\n            library: library,\n            button_config: this.element_visibility_config,\n            edit_mode: this.edit_mode\n        }));\n        this.$el.show();\n        return this;\n    },\n\n    repaint: function repaint(library) {\n        /* need to hide manually because of the element removal in setElement\n        invoked in render() */\n        $(\".tooltip\").hide();\n        /* we need to store the old element to be able to replace it with\n        new one */\n        var old_element = this.$el;\n        /* if user canceled the library param is undefined,\n        if user saved and succeeded the updated library is rendered */\n        this.render();\n        old_element.replaceWith(this.$el);\n        /* now we attach new tooltips to the newly created row element */\n        this.$el.find(\"[data-toggle]\").tooltip();\n    },\n\n    /**\n     * Function modifies the visibility of buttons for\n     * the filling of the row template of given library.\n     */\n    prepareButtons: function prepareButtons(library) {\n        var vis_config = this.element_visibility_config;\n\n        if (this.edit_mode === false) {\n            vis_config.save_library_btn = false;\n            vis_config.cancel_library_btn = false;\n            vis_config.delete_library_btn = false;\n            if (library.get(\"deleted\") === true) {\n                vis_config.undelete_library_btn = true;\n                vis_config.upload_library_btn = false;\n                vis_config.edit_library_btn = false;\n                vis_config.permission_library_btn = false;\n            } else if (library.get(\"deleted\") === false) {\n                vis_config.save_library_btn = false;\n                vis_config.cancel_library_btn = false;\n                vis_config.undelete_library_btn = false;\n                if (library.get(\"can_user_add\") === true) {\n                    vis_config.upload_library_btn = true;\n                }\n                if (library.get(\"can_user_modify\") === true) {\n                    vis_config.edit_library_btn = true;\n                }\n                if (library.get(\"can_user_manage\") === true) {\n                    vis_config.permission_library_btn = true;\n                }\n            }\n        } else if (this.edit_mode === true) {\n            vis_config.upload_library_btn = false;\n            vis_config.edit_library_btn = false;\n            vis_config.permission_library_btn = false;\n            vis_config.save_library_btn = true;\n            vis_config.cancel_library_btn = true;\n            vis_config.delete_library_btn = true;\n            vis_config.undelete_library_btn = false;\n        }\n\n        this.element_visibility_config = vis_config;\n    },\n\n    /* User clicked the 'edit' button on row so we render a new row\n    that allows editing */\n    edit_button_clicked: function edit_button_clicked() {\n        this.edit_mode = true;\n        this.repaint();\n    },\n\n    /* User clicked the 'cancel' button so we render normal rowView */\n    cancel_library_modification: function cancel_library_modification() {\n        // mod_toastr.info('Modifications canceled');\n        this.edit_mode = false;\n        this.repaint();\n    },\n\n    save_library_modification: function save_library_modification() {\n        var library = Galaxy.libraries.libraryListView.collection.get(this.$el.data(\"id\"));\n        var is_changed = false;\n\n        var new_name = this.$el.find(\".input_library_name\").val();\n        if (typeof new_name !== \"undefined\" && new_name !== library.get(\"name\")) {\n            if (new_name.length > 2) {\n                library.set(\"name\", new_name);\n                is_changed = true;\n            } else {\n                _toastr2.default.warning(\"Library name has to be at least 3 characters long.\");\n                return;\n            }\n        }\n\n        var new_description = this.$el.find(\".input_library_description\").val();\n        if (typeof new_description !== \"undefined\" && new_description !== library.get(\"description\")) {\n            library.set(\"description\", new_description);\n            is_changed = true;\n        }\n\n        var new_synopsis = this.$el.find(\".input_library_synopsis\").val();\n        if (typeof new_synopsis !== \"undefined\" && new_synopsis !== library.get(\"synopsis\")) {\n            library.set(\"synopsis\", new_synopsis);\n            is_changed = true;\n        }\n\n        if (is_changed) {\n            var row_view = this;\n            library.save(null, {\n                patch: true,\n                success: function success(library) {\n                    row_view.edit_mode = false;\n                    row_view.repaint(library);\n                    _toastr2.default.success(\"Changes to library saved.\");\n                },\n                error: function error(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        _toastr2.default.error(response.responseJSON.err_msg);\n                    } else {\n                        _toastr2.default.error(\"An error occured while attempting to update the library.\");\n                    }\n                }\n            });\n        } else {\n            this.edit_mode = false;\n            this.repaint(library);\n            _toastr2.default.info(\"Nothing has changed.\");\n        }\n    },\n\n    delete_library: function delete_library() {\n        var library = Galaxy.libraries.libraryListView.collection.get(this.$el.data(\"id\"));\n        var row_view = this;\n        // mark the library deleted\n        library.destroy({\n            success: function success(library) {\n                library.set(\"deleted\", true);\n                // add the new deleted library back to the collection (Galaxy specialty)\n                Galaxy.libraries.libraryListView.collection.add(library);\n                row_view.edit_mode = false;\n                if (Galaxy.libraries.preferences.get(\"with_deleted\") === false) {\n                    $(\".tooltip\").hide();\n                    row_view.repaint(library);\n                    row_view.$el.remove();\n                } else if (Galaxy.libraries.preferences.get(\"with_deleted\") === true) {\n                    row_view.repaint(library);\n                }\n                _toastr2.default.success(\"Library has been marked deleted.\");\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(response.responseJSON.err_msg);\n                } else {\n                    _toastr2.default.error(\"An error occured during deleting the library.\");\n                }\n            }\n        });\n    },\n\n    undelete_library: function undelete_library() {\n        var library = Galaxy.libraries.libraryListView.collection.get(this.$el.data(\"id\"));\n        var row_view = this;\n\n        // mark the library undeleted\n        library.url = library.urlRoot + library.id + \"?undelete=true\";\n        library.destroy({\n            success: function success(library) {\n                // add the newly undeleted library back to the collection\n                // backbone does not accept changes through destroy, so update it too\n                library.set(\"deleted\", false);\n                Galaxy.libraries.libraryListView.collection.add(library);\n                row_view.edit_mode = false;\n                row_view.repaint(library);\n                _toastr2.default.success(\"Library has been undeleted.\");\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(response.responseJSON.err_msg);\n                } else {\n                    _toastr2.default.error(\"An error occured while undeleting the library.\");\n                }\n            }\n        });\n    },\n\n    templateRow: function templateRow() {\n        return _.template(['<tr class=\"<% if(library.get(\"deleted\") === true) { print(\"active\") } %>\" style=\"display:none;\" data-id=\"<%- library.get(\"id\") %>\">', \"<% if(!edit_mode) { %>\", '<% if(library.get(\"deleted\")) { %>', '<td style=\"color:grey;\"><%- library.get(\"name\") %></td>', \"<% } else { %>\", '<td><a href=\"#folders/<%- library.get(\"root_folder_id\") %>\"><%- library.get(\"name\") %></a></td>', \"<% } %>\", '<% if(library.get(\"description\")) { %>', '<% if( (library.get(\"description\")).length> 80 ) { %>', '<td data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"<%= _.escape(library.get(\"description\")) %>\"><%= _.escape(library.get(\"description\")).substring(0, 80) + \"...\" %></td>', \"<% } else { %>\", '<td><%= _.escape(library.get(\"description\"))%></td>', \"<% } %>\", \"<% } else { %>\", \"<td></td>\", \"<% } %>\", '<% if(library.get(\"synopsis\")) { %>', '<% if( (library.get(\"synopsis\")).length> 120 ) { %>', '<td data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"<%= _.escape(library.get(\"synopsis\")) %>\"><%= _.escape(library.get(\"synopsis\")).substring(0, 120) + \"...\" %></td>', \"<% } else { %>\", '<td><%= _.escape(library.get(\"synopsis\"))%></td>', \"<% } %>\", \"<% } else { %>\", \"<td></td>\", \"<% } %>\", \"<% } else if(edit_mode){ %>\", '<td><textarea rows=\"4\" class=\"form-control input_library_name\" placeholder=\"name\" ><%- library.get(\"name\") %></textarea></td>', '<td><textarea rows=\"4\" class=\"form-control input_library_description\" placeholder=\"description\" ><%- library.get(\"description\") %></textarea></td>', '<td><textarea rows=\"4\" class=\"form-control input_library_synopsis\" placeholder=\"synopsis\" ><%- library.get(\"synopsis\") %></textarea></td>', \"<% } %>\", '<td class=\"right-center\">', '<% if( (library.get(\"public\")) && (library.get(\"deleted\") === false) ) { %>', '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Unrestricted library\" style=\"color:grey;\" class=\"fa fa-globe fa-lg\"> </span>', \"<% }%>\", '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify \\'<%- library.get(\"name\") %>\\'\" class=\"primary-button btn-xs edit_library_btn\" type=\"button\" style=\"<% if(button_config.edit_library_btn === false) { print(\"display:none;\") } %>\"><span class=\"fa fa-pencil\"></span> Edit</button>', '<a href=\"#library/<%- library.get(\"id\") %>/permissions\"><button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Permissions of \\'<%- library.get(\"name\") %>\\'\" class=\"primary-button btn-xs permission_library_btn\" type=\"button\" style=\"<% if(button_config.permission_library_btn === false) { print(\"display:none;\") } %>\"><span class=\"fa fa-group\"></span> Manage</button></a>', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save changes\" class=\"primary-button btn-xs save_library_btn\" type=\"button\" style=\"<% if(button_config.save_library_btn === false) { print(\"display:none;\") } %>\"><span class=\"fa fa-floppy-o\"></span> Save</button>', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Discard changes\" class=\"primary-button btn-xs cancel_library_btn\" type=\"button\" style=\"<% if(button_config.cancel_library_btn === false) { print(\"display:none;\") } %>\"><span class=\"fa fa-times\"></span> Cancel</button>', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete \\'<%- library.get(\"name\") %>\\'\" class=\"primary-button btn-xs delete_library_btn\" type=\"button\" style=\"<% if(button_config.delete_library_btn === false) { print(\"display:none;\") } %>\"><span class=\"fa fa-trash-o\"></span> Delete</button>',\n        // For deleted libraries\n        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey; <% if(button_config.undelete_library_btn === false) { print(\"display:none;\") } %>\" class=\"fa fa-ban fa-lg\"></span>', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete \\'<%- library.get(\"name\") %>\\' \" class=\"primary-button btn-xs undelete_library_btn\" type=\"button\" style=\"<% if(button_config.undelete_library_btn === false) { print(\"display:none;\") } %>\"><span class=\"fa fa-unlock\"></span> Undelete</button>', \"</td>\", \"</tr>\"].join(\"\"));\n    }\n}); // dependencies\nexports.default = {\n    LibraryRowView: LibraryRowView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 296:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toastr = __webpack_require__(42);\n\nvar _toastr2 = _interopRequireDefault(_toastr);\n\nvar _libraryModel = __webpack_require__(156);\n\nvar _libraryModel2 = _interopRequireDefault(_libraryModel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This view represents the top part of the library page.\n * It contains the tool bar with controls.\n */\nvar LibraryToolbarView = Backbone.View.extend({\n    el: \"#center\",\n\n    defaults: {\n        search_term: \"\"\n    },\n\n    events: {\n        \"click #create_new_library_btn\": \"createLibraryFromModal\",\n        \"click #include_deleted_chk\": \"includeDeletedChecked\",\n        \"click #exclude_restricted_chk\": \"excludeRestrictedChecked\",\n        \"click .page_size_prompt\": \"showPageSizePrompt\",\n        \"keyup .library-search-input\": \"searchLibraries\"\n    },\n\n    initialize: function initialize(options) {\n        this.options = _.defaults(this.options || {}, options, this.defaults);\n        this.render();\n    },\n\n    render: function render() {\n        var toolbar_template = this.templateToolBar();\n        var is_admin = false;\n        var is_anonym = true;\n        if (Galaxy.user) {\n            is_admin = Galaxy.user.isAdmin();\n            is_anonym = Galaxy.user.isAnonymous();\n        }\n        this.$el.html(toolbar_template({ admin_user: is_admin, anon_user: is_anonym }));\n        if (is_admin) {\n            this.$el.find(\"#include_deleted_chk\")[0].checked = Galaxy.libraries.preferences.get(\"with_deleted\");\n            this.$el.find(\"#exclude_restricted_chk\")[0].checked = Galaxy.libraries.preferences.get(\"without_restricted\");\n        }\n    },\n\n    /**\n     * Renders the element that shows pages into its div within the toolbar.\n     */\n    renderPaginator: function renderPaginator(options) {\n        this.options = _.extend(this.options, options);\n        var paginator_template = this.templatePaginator();\n        this.$el.find(\"#library_paginator\").html(paginator_template({\n            show_page: parseInt(this.options.show_page),\n            page_count: parseInt(this.options.page_count),\n            total_libraries_count: this.options.total_libraries_count,\n            libraries_shown: this.options.libraries_shown,\n            library_page_size: Galaxy.libraries.preferences.get(\"library_page_size\")\n        }));\n    },\n\n    /**\n     * User clicked on 'New library' button. Show modal to\n     * satisfy the wish.\n     */\n    createLibraryFromModal: function createLibraryFromModal(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        var self = this;\n        this.modal = Galaxy.modal;\n        this.modal.show({\n            closing_events: true,\n            title: \"Create New Library\",\n            body: this.templateNewLibraryInModal(),\n            buttons: {\n                Create: function Create() {\n                    self.createNewLibrary();\n                },\n                Close: function Close() {\n                    self.modal.hide();\n                }\n            }\n        });\n    },\n\n    /**\n     * Create the new library using the API asynchronously.\n     */\n    createNewLibrary: function createNewLibrary() {\n        var libraryDetails = this.serializeNewLibrary();\n        if (this.validateNewLibrary(libraryDetails)) {\n            var library = new _libraryModel2.default.Library();\n            var self = this;\n            library.save(libraryDetails, {\n                success: function success(library) {\n                    Galaxy.libraries.libraryListView.collection.add(library);\n                    self.modal.hide();\n                    self.clearLibraryModal();\n                    Galaxy.libraries.libraryListView.render();\n                    _toastr2.default.success(\"Library created.\");\n                },\n                error: function error(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        _toastr2.default.error(response.responseJSON.err_msg);\n                    } else {\n                        _toastr2.default.error(\"An error occured.\");\n                    }\n                }\n            });\n        } else {\n            _toastr2.default.error(\"Library's name is missing.\");\n        }\n        return false;\n    },\n\n    /**\n     * Show user the propmpt to change the number of libs shown on page.\n     */\n    showPageSizePrompt: function showPageSizePrompt(e) {\n        e.preventDefault();\n        var library_page_size = prompt(\"How many libraries per page do you want to see?\", Galaxy.libraries.preferences.get(\"library_page_size\"));\n        if (library_page_size != null && library_page_size == parseInt(library_page_size)) {\n            Galaxy.libraries.preferences.set({\n                library_page_size: parseInt(library_page_size)\n            });\n            Galaxy.libraries.libraryListView.render({ show_page: 1 });\n        }\n    },\n\n    /**\n     * Clear the library modal once it is saved.\n     */\n    clearLibraryModal: function clearLibraryModal() {\n        $(\"input[name='Name']\").val(\"\");\n        $(\"input[name='Description']\").val(\"\");\n        $(\"input[name='Synopsis']\").val(\"\");\n    },\n\n    /**\n     * Prepare new library variables to be submitted to API.\n     */\n    serializeNewLibrary: function serializeNewLibrary() {\n        return {\n            name: $(\"input[name='Name']\").val(),\n            description: $(\"input[name='Description']\").val(),\n            synopsis: $(\"input[name='Synopsis']\").val()\n        };\n    },\n\n    /**\n     * Check whether entered values are valid.\n     */\n    validateNewLibrary: function validateNewLibrary(libraryDetails) {\n        return libraryDetails.name !== \"\";\n    },\n\n    /**\n     * Include or exclude deleted libraries in the view.\n     */\n    includeDeletedChecked: function includeDeletedChecked(event) {\n        if (event.target.checked) {\n            Galaxy.libraries.preferences.set({ with_deleted: true });\n            Galaxy.libraries.libraryListView.fetchDeleted();\n        } else {\n            Galaxy.libraries.preferences.set({ with_deleted: false });\n            Galaxy.libraries.libraryListView.render();\n        }\n    },\n\n    /**\n     * Include or exclude restricted libraries in the view.\n     */\n    excludeRestrictedChecked: function excludeRestrictedChecked(event) {\n        if (event.target.checked) {\n            Galaxy.libraries.preferences.set({ without_restricted: true });\n        } else {\n            Galaxy.libraries.preferences.set({ without_restricted: false });\n        }\n        Galaxy.libraries.libraryListView.render();\n    },\n\n    /**\n     * Take the contents of the search field and send it to the list view\n     * to query the collection of libraries.\n     */\n    searchLibraries: function searchLibraries(event) {\n        var search_term = $(\".library-search-input\").val();\n        this.options.search_term = search_term;\n        Galaxy.libraries.libraryListView.searchLibraries(search_term);\n    },\n\n    templateToolBar: function templateToolBar() {\n        return _.template(['<div class=\"library_style_container\">', '<div id=\"toolbar_form\">', '<div id=\"library_toolbar\">', '<form class=\"form-inline\" role=\"form\">', '<span><strong><a href=\"#\" title=\"Go to first page\">DATA LIBRARIES</a></strong></span>', '<span id=\"library_paginator\" class=\"library-paginator\">',\n        // paginator will append here\n        \"</span>\", '<div class=\"form-group toolbar-item\">', '<input type=\"text\" class=\"form-control library-search-input\" placeholder=\"Search\" size=\"30\">', \"</div>\",\n        // only admins see the following\n        \"<% if(admin_user === true) { %>\", '<div class=\"checkbox toolbar-item\" style=\"height: 20px;\">', \"<label>\", '<input id=\"include_deleted_chk\" type=\"checkbox\">', \"include deleted \", \"</input>\", \"</label>\", \"<label>\", '<input id=\"exclude_restricted_chk\" type=\"checkbox\">', \"exclude restricted\", \"</input>\", \"</label>\", \"</div>\", '<span class=\"toolbar-item\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Create New Library\">', '<button id=\"create_new_library_btn\" class=\"primary-button btn-xs\" type=\"button\"><span class=\"fa fa-plus\"></span> New Library</button>', \"</span>\", \"<% } %>\", '<span class=\"help-button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"See this screen annotated\">', '<a href=\"https://galaxyproject.org/data-libraries/screen/list-of-libraries/\" target=\"_blank\">', '<button class=\"primary-button\" type=\"button\"><span class=\"fa fa-question-circle\"></span> Help</button>', \"</a>\", \"</span>\", \"</form>\", \"</div>\", \"</div>\", '<div id=\"libraries_element\">',\n        // table with libraries will append here\n        \"</div>\", \"</div>\"].join(\"\"));\n    },\n\n    templatePaginator: function templatePaginator() {\n        return _.template(['<ul class=\"pagination pagination-sm\">', \"<% if ( ( show_page - 1 ) > 0 ) { %>\", \"<% if ( ( show_page - 1 ) > page_count ) { %>\", // we are on higher page than total page count\n        '<li><a href=\"#page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>', '<li class=\"disabled\"><a href=\"#page/<% print( show_page ) %>\"><% print( show_page - 1 ) %></a></li>', \"<% } else { %>\", '<li><a href=\"#page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>', '<li><a href=\"#page/<% print( show_page - 1 ) %>\"><% print( show_page - 1 ) %></a></li>', \"<% } %>\", \"<% } else { %>\", // we are on the first page\n        '<li class=\"disabled\"><a href=\"#page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>', '<li class=\"disabled\"><a href=\"#page/<% print( show_page ) %>\"><% print( show_page - 1 ) %></a></li>', \"<% } %>\", '<li class=\"active\">', '<a href=\"#page/<% print( show_page ) %>\"><% print( show_page ) %></a>', \"</li>\", \"<% if ( ( show_page ) < page_count ) { %>\", '<li><a href=\"#page/<% print( show_page + 1 ) %>\"><% print( show_page + 1 ) %></a></li>', '<li><a href=\"#page/<% print( page_count ) %>\"><span class=\"fa fa-angle-double-right\"></span></a></li>', \"<% } else { %>\", '<li class=\"disabled\"><a href=\"#page/<% print( show_page  ) %>\"><% print( show_page + 1 ) %></a></li>', '<li class=\"disabled\"><a href=\"#page/<% print( page_count ) %>\"><span class=\"fa fa-angle-double-right\"></span></a></li>', \"<% } %>\", \"</ul>\", \"<span>\", ' <%- libraries_shown %> libraries shown <a href=\"\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"currently <%- library_page_size %> per page\" class=\"page_size_prompt\">(change)</a>', \"</span>\", \"<span>\", \" <%- total_libraries_count %> total\", \"</span>\"].join(\"\"));\n    },\n\n    templateNewLibraryInModal: function templateNewLibraryInModal() {\n        return _.template(['<div id=\"new_library_modal\">', \"<form>\", '<input type=\"text\" name=\"Name\" value=\"\" placeholder=\"Name\" autofocus>', '<input type=\"text\" name=\"Description\" value=\"\" placeholder=\"Description\">', '<input type=\"text\" name=\"Synopsis\" value=\"\" placeholder=\"Synopsis\">', \"</form>\", \"</div>\"].join(\"\"));\n    }\n});\n\nexports.default = {\n    LibraryToolbarView: LibraryToolbarView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 297:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _toastr = __webpack_require__(42);\n\nvar _toastr2 = _interopRequireDefault(_toastr);\n\nvar _libraryModel = __webpack_require__(156);\n\nvar _libraryModel2 = _interopRequireDefault(_libraryModel);\n\nvar _uiSelect = __webpack_require__(139);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\n__webpack_require__(298);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FolderToolbarView = Backbone.View.extend({\n    el: \"#center\",\n\n    events: {\n        \"click #toolbtn_create_folder\": \"createFolderFromModal\",\n        \"click #toolbtn_bulk_import\": \"modalBulkImport\",\n        \"click #include_deleted_datasets_chk\": \"checkIncludeDeleted\",\n        \"click #toolbtn_bulk_delete\": \"deleteSelectedItems\",\n        \"click .toolbtn-show-locinfo\": \"showLocInfo\",\n        \"click .page_size_prompt\": \"showPageSizePrompt\"\n    },\n\n    defaults: {\n        can_add_library_item: false,\n        contains_file_or_folder: false,\n        chain_call_control: {\n            total_number: 0,\n            failed_number: 0\n        },\n        disabled_jstree_element: \"folders\"\n    },\n\n    modal: null,\n\n    // directory browsing object\n    jstree: null,\n\n    // user's histories\n    histories: null,\n\n    // genome select\n    select_genome: null,\n\n    // extension select\n    select_extension: null,\n\n    // extension types\n    list_extensions: [],\n\n    // datatype placeholder for extension auto-detection\n    auto: {\n        id: \"auto\",\n        text: \"Auto-detect\",\n        description: \"This system will try to detect the file type automatically.\" + \" If your file is not detected properly as one of the known formats,\" + \" it most likely means that it has some format problems (e.g., different\" + \" number of columns on different rows). You can still coerce the system\" + \" to set your data to the format you think it should be.\" + \" You can also upload compressed files, which will automatically be decompressed.\"\n    },\n\n    // genomes\n    list_genomes: [],\n\n    initialize: function initialize(options) {\n        this.options = _.defaults(options || {}, this.defaults);\n        this.fetchExtAndGenomes();\n        this.render();\n    },\n\n    render: function render(options) {\n        this.options = _.extend(this.options, options);\n        var toolbar_template = this.templateToolBar();\n        var template_defaults = {\n            id: this.options.id,\n            is_admin: false,\n            is_anonym: true,\n            mutiple_add_dataset_options: false\n        };\n        if (Galaxy.user) {\n            template_defaults.is_admin = Galaxy.user.isAdmin();\n            template_defaults.is_anonym = Galaxy.user.isAnonymous();\n            if (Galaxy.config.user_library_import_dir !== null || Galaxy.config.allow_library_path_paste !== false || Galaxy.config.library_import_dir !== null) {\n                template_defaults.mutiple_add_dataset_options = true;\n            }\n        }\n        this.$el.html(toolbar_template(template_defaults));\n    },\n\n    /**\n     * Called from FolderListView when needed.\n     * @param  {object} options common options\n     */\n    renderPaginator: function renderPaginator(options) {\n        this.options = _.extend(this.options, options);\n        var paginator_template = this.templatePaginator();\n        $(\"body\").find(\".folder-paginator\").html(paginator_template({\n            id: this.options.id,\n            show_page: parseInt(this.options.show_page),\n            page_count: parseInt(this.options.page_count),\n            total_items_count: this.options.total_items_count,\n            items_shown: this.options.items_shown,\n            folder_page_size: Galaxy.libraries.preferences.get(\"folder_page_size\")\n        }));\n    },\n\n    configureElements: function configureElements(options) {\n        this.options = _.extend(this.options, options);\n\n        if (this.options.can_add_library_item === true) {\n            $(\".add-library-items\").show();\n        } else {\n            $(\".add-library-items\").hide();\n        }\n        if (this.options.contains_file_or_folder === true) {\n            if (Galaxy.user) {\n                if (!Galaxy.user.isAnonymous()) {\n                    $(\".logged-dataset-manipulation\").show();\n                    $(\".dataset-manipulation\").show();\n                } else {\n                    $(\".dataset-manipulation\").show();\n                    $(\".logged-dataset-manipulation\").hide();\n                }\n            } else {\n                $(\".logged-dataset-manipulation\").hide();\n                $(\".dataset-manipulation\").hide();\n            }\n        } else {\n            $(\".logged-dataset-manipulation\").hide();\n            $(\".dataset-manipulation\").hide();\n        }\n        this.$el.find(\"[data-toggle]\").tooltip();\n    },\n\n    // shows modal for creating folder\n    createFolderFromModal: function createFolderFromModal(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        // create modal\n        var self = this;\n        var template = this.templateNewFolderInModal();\n        this.modal = Galaxy.modal;\n        this.modal.show({\n            closing_events: true,\n            title: \"Create New Folder\",\n            body: template(),\n            buttons: {\n                Create: function Create() {\n                    self.create_new_folder_event();\n                },\n                Close: function Close() {\n                    Galaxy.modal.hide();\n                }\n            }\n        });\n    },\n\n    // create the new folder from modal\n    create_new_folder_event: function create_new_folder_event() {\n        var folderDetails = this.serialize_new_folder();\n        if (this.validate_new_folder(folderDetails)) {\n            var folder = new _libraryModel2.default.FolderAsModel();\n            var url_items = Backbone.history.fragment.split(\"/\");\n            var current_folder_id;\n            if (url_items.indexOf(\"page\") > -1) {\n                current_folder_id = url_items[url_items.length - 3];\n            } else {\n                current_folder_id = url_items[url_items.length - 1];\n            }\n            folder.url = folder.urlRoot + current_folder_id;\n\n            folder.save(folderDetails, {\n                success: function success(folder) {\n                    Galaxy.modal.hide();\n                    _toastr2.default.success(\"Folder created.\");\n                    folder.set({ type: \"folder\" });\n                    Galaxy.libraries.folderListView.collection.add(folder);\n                },\n                error: function error(model, response) {\n                    Galaxy.modal.hide();\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        _toastr2.default.error(response.responseJSON.err_msg);\n                    } else {\n                        _toastr2.default.error(\"An error occurred.\");\n                    }\n                }\n            });\n        } else {\n            _toastr2.default.error(\"Folder's name is missing.\");\n        }\n        return false;\n    },\n\n    // serialize data from the modal\n    serialize_new_folder: function serialize_new_folder() {\n        return {\n            name: $(\"input[name='Name']\").val(),\n            description: $(\"input[name='Description']\").val()\n        };\n    },\n\n    // validate new folder info\n    validate_new_folder: function validate_new_folder(folderDetails) {\n        return folderDetails.name !== \"\";\n    },\n\n    // show bulk import modal\n    modalBulkImport: function modalBulkImport() {\n        var $checkedValues = this.findCheckedRows();\n        if ($checkedValues.length === 0) {\n            _toastr2.default.info(\"You must select some datasets first.\");\n        } else {\n            var that = this;\n            this.histories = new _libraryModel2.default.GalaxyHistories();\n            this.histories.fetch().done(function () {\n                var template = that.templateBulkImportInModal();\n                that.modal = Galaxy.modal;\n                that.modal.show({\n                    closing_events: true,\n                    title: \"Import into History\",\n                    body: template({\n                        histories: that.histories.models\n                    }),\n                    buttons: {\n                        Import: function Import() {\n                            that.importAllIntoHistory();\n                        },\n                        Close: function Close() {\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n            }).fail(function (model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(response.responseJSON.err_msg);\n                } else {\n                    _toastr2.default.error(\"An error occurred.\");\n                }\n            });\n        }\n    },\n\n    /**\n     * Import all selected datasets into history.\n     */\n    importAllIntoHistory: function importAllIntoHistory() {\n        this.modal.disableButton(\"Import\");\n        var new_history_name = this.modal.$(\"input[name=history_name]\").val();\n        var that = this;\n        if (new_history_name !== \"\") {\n            $.post(Galaxy.root + \"api/histories\", {\n                name: new_history_name\n            }).done(function (new_history) {\n                that.options.last_used_history_id = new_history.id;\n                that.processImportToHistory(new_history.id, new_history.name);\n            }).fail(function (xhr, status, error) {\n                _toastr2.default.error(\"An error occurred.\");\n            }).always(function () {\n                that.modal.enableButton(\"Import\");\n            });\n        } else {\n            var history_id = $(\"select[name=dataset_import_bulk] option:selected\").val();\n            this.options.last_used_history_id = history_id;\n            var history_name = $(\"select[name=dataset_import_bulk] option:selected\").text();\n            this.processImportToHistory(history_id, history_name);\n            this.modal.enableButton(\"Import\");\n        }\n    },\n\n    processImportToHistory: function processImportToHistory(history_id, history_name) {\n        var dataset_ids = [];\n        var folder_ids = [];\n        this.findCheckedRows().each(function () {\n            var row_id = $(this).closest(\"tr\").data(\"id\");\n            if (row_id.substring(0, 1) == \"F\") {\n                folder_ids.push(row_id);\n            } else {\n                dataset_ids.push(row_id);\n            }\n        });\n        // prepare the dataset objects to be imported\n        var datasets_to_import = [];\n        for (var i = dataset_ids.length - 1; i >= 0; i--) {\n            var library_dataset_id = dataset_ids[i];\n            var historyItem = new _libraryModel2.default.HistoryItem();\n            historyItem.url = historyItem.urlRoot + history_id + \"/contents\";\n            historyItem.content = library_dataset_id;\n            historyItem.source = \"library\";\n            datasets_to_import.push(historyItem);\n        }\n\n        // prepare the folder objects to be imported\n        var folders_to_import = [];\n        for (var i = folder_ids.length - 1; i >= 0; i--) {\n            var library_folder_id = folder_ids[i];\n            var historyItem = new _libraryModel2.default.HistoryItem();\n            historyItem.url = historyItem.urlRoot + history_id + \"/contents\";\n            historyItem.content = library_folder_id;\n            historyItem.source = \"library_folder\";\n            datasets_to_import.push(historyItem);\n        }\n\n        this.initChainCallControl({\n            length: datasets_to_import.length,\n            action: \"to_history\",\n            history_name: history_name\n        });\n        // set the used history as current so user will see the last one\n        // that he imported into in the history panel on the 'analysis' page\n        jQuery.getJSON(Galaxy.root + \"history/set_as_current?id=\" + history_id);\n        this.chainCallImportingIntoHistory(datasets_to_import, history_name);\n    },\n\n    /**\n     * Update the progress bar in modal window.\n     */\n    updateProgress: function updateProgress() {\n        this.progress += this.progressStep;\n        $(\".progress-bar-import\").width(Math.round(this.progress) + \"%\");\n        var txt_representation = Math.round(this.progress) + \"% Complete\";\n        $(\".completion_span\").text(txt_representation);\n    },\n\n    /**\n     * download selected datasets\n     * @param  {str} folder_id id of the current folder\n     * @param  {str} format    requested archive format\n     */\n    download: function download(folder_id, format) {\n        var dataset_ids = [];\n        var folder_ids = [];\n        this.findCheckedRows().each(function () {\n            var row_id = $(this).closest(\"tr\").data(\"id\");\n            if (row_id.substring(0, 1) == \"F\") {\n                folder_ids.push(row_id);\n            } else {\n                dataset_ids.push(row_id);\n            }\n        });\n        var url = Galaxy.root + \"api/libraries/datasets/download/\" + format;\n        var data = { ld_ids: dataset_ids, folder_ids: folder_ids };\n        this.processDownload(url, data, \"get\");\n    },\n\n    /**\n     * Create hidden form and submit it through POST\n     * to initialize the download.\n     * @param  {str} url    url to call\n     * @param  {obj} data   data to include in the request\n     * @param  {str} method method of the request\n     */\n    processDownload: function processDownload(url, data, method) {\n        if (url && data) {\n            // data can be string of parameters or array/object\n            data = typeof data === \"string\" ? data : $.param(data);\n            // split params into form inputs\n            var inputs = \"\";\n            $.each(data.split(\"&\"), function () {\n                var pair = this.split(\"=\");\n                inputs += \"<input type=\\\"hidden\\\" name=\\\"\" + pair[0] + \"\\\" value=\\\"\" + pair[1] + \"\\\" />\";\n            });\n            // send request\n            $(\"<form action=\\\"\" + url + \"\\\" method=\\\"\" + (method || \"post\") + \"\\\">\" + inputs + \"</form>\").appendTo(\"body\").submit().remove();\n            _toastr2.default.info(\"Your download will begin soon.\");\n        } else {\n            _toastr2.default.error(\"An error occurred.\");\n        }\n    },\n\n    addFilesFromHistoryModal: function addFilesFromHistoryModal() {\n        this.histories = new _libraryModel2.default.GalaxyHistories();\n        var self = this;\n        this.histories.fetch().done(function () {\n            self.modal = Galaxy.modal;\n            var template_modal = self.templateAddFilesFromHistory();\n            self.modal.show({\n                closing_events: true,\n                title: \"Adding datasets from your history\",\n                body: template_modal({\n                    histories: self.histories.models\n                }),\n                buttons: {\n                    Add: function Add() {\n                        self.addAllDatasetsFromHistory();\n                    },\n                    Close: function Close() {\n                        Galaxy.modal.hide();\n                    }\n                },\n                closing_callback: function closing_callback() {\n                    Galaxy.libraries.library_router.navigate(\"folders/\" + self.id, { trigger: true });\n                }\n            });\n            self.fetchAndDisplayHistoryContents(self.histories.models[0].id);\n            $(\"#dataset_add_bulk\").change(function (event) {\n                self.fetchAndDisplayHistoryContents(event.target.value);\n            });\n        }).fail(function (model, response) {\n            if (typeof response.responseJSON !== \"undefined\") {\n                _toastr2.default.error(response.responseJSON.err_msg);\n            } else {\n                _toastr2.default.error(\"An error occurred.\");\n            }\n        });\n    },\n\n    /**\n     * Create modal for importing from Galaxy path.\n     * This feature is admin-only.\n     */\n    importFilesFromPathModal: function importFilesFromPathModal() {\n        var that = this;\n        this.modal = Galaxy.modal;\n        var template_modal = this.templateImportPathModal();\n        this.modal.show({\n            closing_events: true,\n            title: \"Please enter paths to import\",\n            body: template_modal({}),\n            buttons: {\n                Import: function Import() {\n                    that.importFromPathsClicked(that);\n                },\n                Close: function Close() {\n                    Galaxy.modal.hide();\n                }\n            },\n            closing_callback: function closing_callback() {\n                //  TODO: should not trigger routes outside of the router\n                Galaxy.libraries.library_router.navigate(\"folders/\" + that.id, {\n                    trigger: true\n                });\n            }\n        });\n        this.renderSelectBoxes();\n    },\n\n    /**\n     * Request all extensions and genomes from Galaxy\n     * and save them sorted in arrays.\n     */\n    fetchExtAndGenomes: function fetchExtAndGenomes() {\n        var that = this;\n        _utils2.default.get({\n            url: Galaxy.root + \"api/datatypes?extension_only=False\",\n            success: function success(datatypes) {\n                that.list_extensions = [];\n                for (var key in datatypes) {\n                    that.list_extensions.push({\n                        id: datatypes[key].extension,\n                        text: datatypes[key].extension,\n                        description: datatypes[key].description,\n                        description_url: datatypes[key].description_url\n                    });\n                }\n                that.list_extensions.sort(function (a, b) {\n                    return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                });\n                that.list_extensions.unshift(that.auto);\n            },\n            cache: true\n        });\n        _utils2.default.get({\n            url: Galaxy.root + \"api/genomes\",\n            success: function success(genomes) {\n                that.list_genomes = [];\n                for (var key in genomes) {\n                    that.list_genomes.push({\n                        id: genomes[key][1],\n                        text: genomes[key][0]\n                    });\n                }\n                that.list_genomes.sort(function (a, b) {\n                    return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                });\n            },\n            cache: true\n        });\n    },\n\n    renderSelectBoxes: function renderSelectBoxes() {\n        // This won't work properly unlesss we already have the data fetched.\n        // See this.fetchExtAndGenomes()\n        // TODO switch to common resources:\n        // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n        var that = this;\n        this.select_genome = new _uiSelect2.default.View({\n            css: \"library-genome-select\",\n            data: that.list_genomes,\n            container: Galaxy.modal.$el.find(\"#library_genome_select\"),\n            value: \"?\"\n        });\n        this.select_extension = new _uiSelect2.default.View({\n            css: \"library-extension-select\",\n            data: that.list_extensions,\n            container: Galaxy.modal.$el.find(\"#library_extension_select\"),\n            value: \"auto\"\n        });\n    },\n\n    /**\n     * Create modal for importing from given directory\n     * on Galaxy. Bind jQuery events.\n     */\n    importFilesFromGalaxyFolderModal: function importFilesFromGalaxyFolderModal(options) {\n        var that = this;\n        var template_modal = this.templateBrowserModal();\n        this.modal = Galaxy.modal;\n        this.modal.show({\n            closing_events: true,\n            title: \"Please select folders or files\",\n            body: template_modal({}),\n            buttons: {\n                Import: function Import() {\n                    that.importFromJstreePath(that, options);\n                },\n                Close: function Close() {\n                    Galaxy.modal.hide();\n                }\n            },\n            closing_callback: function closing_callback() {\n                //  TODO: should not trigger routes outside of the router\n                Galaxy.libraries.library_router.navigate(\"folders/\" + that.id, {\n                    trigger: true\n                });\n            }\n        });\n\n        $(\".libimport-select-all\").bind(\"click\", function () {\n            $(\"#jstree_browser\").jstree(\"check_all\");\n        });\n        $(\".libimport-select-none\").bind(\"click\", function () {\n            $(\"#jstree_browser\").jstree(\"uncheck_all\");\n        });\n\n        this.renderSelectBoxes();\n        options.disabled_jstree_element = \"folders\";\n        this.renderJstree(options);\n\n        $(\"input[type=radio]\").change(function (event) {\n            if (event.target.value === \"jstree-disable-folders\") {\n                options.disabled_jstree_element = \"folders\";\n                that.renderJstree(options);\n                $(\".jstree-folders-message\").hide();\n                $(\".jstree-preserve-structure\").hide();\n                $(\".jstree-files-message\").show();\n            } else if (event.target.value === \"jstree-disable-files\") {\n                $(\".jstree-files-message\").hide();\n                $(\".jstree-folders-message\").show();\n                $(\".jstree-preserve-structure\").show();\n                options.disabled_jstree_element = \"files\";\n                that.renderJstree(options);\n            }\n        });\n    },\n\n    /**\n     * Fetch the contents of user directory on Galaxy\n     * and render jstree component based on received\n     * data.\n     * @param  {[type]} options [description]\n     */\n    renderJstree: function renderJstree(options) {\n        var that = this;\n        this.options = _.extend(this.options, options);\n        var target = options.source || \"userdir\";\n        var disabled_jstree_element = this.options.disabled_jstree_element;\n        this.jstree = new _libraryModel2.default.Jstree();\n        this.jstree.url = this.jstree.urlRoot + \"?target=\" + target + \"&format=jstree&disable=\" + disabled_jstree_element;\n        this.jstree.fetch({\n            success: function success(model, response) {\n                $(\"#jstree_browser\").jstree(\"destroy\");\n                $(\"#jstree_browser\").jstree({\n                    core: {\n                        data: model\n                    },\n                    plugins: [\"types\", \"checkbox\"],\n                    types: {\n                        folder: {\n                            icon: \"jstree-folder\"\n                        },\n                        file: {\n                            icon: \"jstree-file\"\n                        }\n                    },\n                    checkbox: {\n                        three_state: false\n                    }\n                });\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    if (response.responseJSON.err_code === 404001) {\n                        _toastr2.default.warning(response.responseJSON.err_msg);\n                    } else {\n                        _toastr2.default.error(response.responseJSON.err_msg);\n                    }\n                } else {\n                    _toastr2.default.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    /**\n     * Take the paths from the textarea, split it, create\n     * a request queue and call a function that starts sending\n     * one by one to be imported on the server.\n     */\n    importFromPathsClicked: function importFromPathsClicked() {\n        var preserve_dirs = this.modal.$el.find(\".preserve-checkbox\").is(\":checked\");\n        var link_data = this.modal.$el.find(\".link-checkbox\").is(\":checked\");\n        var space_to_tab = this.modal.$el.find(\".spacetab-checkbox\").is(\":checked\");\n        var to_posix_lines = this.modal.$el.find(\".posix-checkbox\").is(\":checked\");\n        var tag_using_filenames = this.modal.$el.find(\".tag-files\").is(\":checked\");\n        var file_type = this.select_extension.value();\n        var dbkey = this.select_genome.value();\n        var paths = $(\"textarea#import_paths\").val();\n        var valid_paths = [];\n        if (!paths) {\n            _toastr2.default.info(\"Please enter a path relative to Galaxy root.\");\n        } else {\n            this.modal.disableButton(\"Import\");\n            paths = paths.split(\"\\n\");\n            for (var i = paths.length - 1; i >= 0; i--) {\n                var trimmed = paths[i].trim();\n                if (trimmed.length !== 0) {\n                    valid_paths.push(trimmed);\n                }\n            }\n            this.initChainCallControl({\n                length: valid_paths.length,\n                action: \"adding_datasets\"\n            });\n            this.chainCallImportingFolders({\n                paths: valid_paths,\n                preserve_dirs: preserve_dirs,\n                link_data: link_data,\n                space_to_tab: space_to_tab,\n                to_posix_lines: to_posix_lines,\n                source: \"admin_path\",\n                file_type: file_type,\n                tag_using_filenames: tag_using_filenames,\n                dbkey: dbkey\n            });\n        }\n    },\n\n    /**\n     * Initialize the control of chaining requests\n     * in the current modal.\n     * @param {int} length The number of items in the chain call.\n     */\n    initChainCallControl: function initChainCallControl(options) {\n        var template;\n        switch (options.action) {\n            case \"adding_datasets\":\n                template = this.templateAddingDatasetsProgressBar();\n                this.modal.$el.find(\".modal-body\").html(template({\n                    folder_name: this.options.folder_name\n                }));\n                break;\n            case \"deleting_datasets\":\n                template = this.templateDeletingItemsProgressBar();\n                this.modal.$el.find(\".modal-body\").html(template());\n                break;\n            case \"to_history\":\n                template = this.templateImportIntoHistoryProgressBar();\n                this.modal.$el.find(\".modal-body\").html(template({ history_name: options.history_name }));\n                break;\n            default:\n                Galaxy.emit.error(\"Wrong action specified.\", \"datalibs\");\n                break;\n        }\n\n        // var progress_bar_tmpl = this.templateAddingDatasetsProgressBar();\n        // this.modal.$el.find( '.modal-body' ).html( progress_bar_tmpl( { folder_name : this.options.folder_name } ) );\n        this.progress = 0;\n        this.progressStep = 100 / options.length;\n        this.options.chain_call_control.total_number = options.length;\n        this.options.chain_call_control.failed_number = 0;\n    },\n\n    /**\n     * Take the selected items from the jstree, create a request queue\n     * and send them one by one to the server for importing into\n     * the current folder.\n     *\n     * jstree.js has to be loaded before\n     * @see renderJstree\n     */\n    importFromJstreePath: function importFromJstreePath(that, options) {\n        var all_nodes = $(\"#jstree_browser\").jstree().get_selected(true);\n        // remove the disabled elements that could have been trigerred with the 'select all'\n        var selected_nodes = _.filter(all_nodes, function (node) {\n            return node.state.disabled == false;\n        });\n        var preserve_dirs = this.modal.$el.find(\".preserve-checkbox\").is(\":checked\");\n        var link_data = this.modal.$el.find(\".link-checkbox\").is(\":checked\");\n        var space_to_tab = this.modal.$el.find(\".spacetab-checkbox\").is(\":checked\");\n        var to_posix_lines = this.modal.$el.find(\".posix-checkbox\").is(\":checked\");\n        var file_type = this.select_extension.value();\n        var dbkey = this.select_genome.value();\n        var tag_using_filenames = this.modal.$el.find(\".tag-files\").is(\":checked\");\n        var selection_type = selected_nodes[0].type;\n        var paths = [];\n        if (selected_nodes.length < 1) {\n            _toastr2.default.info(\"Please select some items first.\");\n        } else {\n            this.modal.disableButton(\"Import\");\n            for (var i = selected_nodes.length - 1; i >= 0; i--) {\n                if (selected_nodes[i].li_attr.full_path !== undefined) {\n                    paths.push(selected_nodes[i].li_attr.full_path);\n                }\n            }\n            this.initChainCallControl({\n                length: paths.length,\n                action: \"adding_datasets\"\n            });\n            if (selection_type === \"folder\") {\n                var full_source = options.source + \"_folder\";\n                this.chainCallImportingFolders({\n                    paths: paths,\n                    preserve_dirs: preserve_dirs,\n                    link_data: link_data,\n                    space_to_tab: space_to_tab,\n                    to_posix_lines: to_posix_lines,\n                    source: full_source,\n                    file_type: file_type,\n                    dbkey: dbkey,\n                    tag_using_filenames: tag_using_filenames\n                });\n            } else if (selection_type === \"file\") {\n                var full_source = options.source + \"_file\";\n                this.chainCallImportingUserdirFiles({\n                    paths: paths,\n                    file_type: file_type,\n                    dbkey: dbkey,\n                    link_data: link_data,\n                    space_to_tab: space_to_tab,\n                    to_posix_lines: to_posix_lines,\n                    source: full_source,\n                    tag_using_filenames: tag_using_filenames\n                });\n            }\n        }\n    },\n\n    fetchAndDisplayHistoryContents: function fetchAndDisplayHistoryContents(history_id) {\n        var history_contents = new _libraryModel2.default.HistoryContents({\n            id: history_id\n        });\n        var self = this;\n        history_contents.fetch({\n            success: function success(history_contents) {\n                var history_contents_template = self.templateHistoryContents();\n                self.histories.get(history_id).set({ contents: history_contents });\n                self.modal.$el.find(\"#selected_history_content\").html(history_contents_template({\n                    history_contents: history_contents.models.reverse()\n                }));\n                self.modal.$el.find(\".history-import-select-all\").bind(\"click\", function () {\n                    $(\"#selected_history_content [type=checkbox]\").prop(\"checked\", true);\n                });\n                self.modal.$el.find(\".history-import-unselect-all\").bind(\"click\", function () {\n                    $(\"#selected_history_content [type=checkbox]\").prop(\"checked\", false);\n                });\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(response.responseJSON.err_msg);\n                } else {\n                    _toastr2.default.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    /**\n     * Import all selected datasets from history into the current folder.\n     */\n    addAllDatasetsFromHistory: function addAllDatasetsFromHistory() {\n        var checked_hdas = this.modal.$el.find(\"#selected_history_content\").find(\":checked\");\n        var history_item_ids = []; // can be hda or hdca\n        var history_item_types = [];\n        var items_to_add = [];\n        if (checked_hdas.length < 1) {\n            _toastr2.default.info(\"You must select some datasets first.\");\n        } else {\n            this.modal.disableButton(\"Add\");\n            checked_hdas.each(function () {\n                var hid = $(this).closest(\"li\").data(\"id\");\n                if (hid) {\n                    var item_type = $(this).closest(\"li\").data(\"name\");\n                    history_item_ids.push(hid);\n                    history_item_types.push(item_type);\n                }\n            });\n            for (var i = history_item_ids.length - 1; i >= 0; i--) {\n                var history_item_id = history_item_ids[i];\n                var folder_item = new _libraryModel2.default.Item();\n                folder_item.url = Galaxy.root + \"api/folders/\" + this.options.id + \"/contents\";\n                if (history_item_types[i] === \"collection\") {\n                    folder_item.set({ from_hdca_id: history_item_id });\n                } else {\n                    folder_item.set({ from_hda_id: history_item_id });\n                }\n                items_to_add.push(folder_item);\n            }\n            this.initChainCallControl({\n                length: items_to_add.length,\n                action: \"adding_datasets\"\n            });\n            this.chainCallAddingHdas(items_to_add);\n        }\n    },\n\n    /**\n     * Take array of empty history items and make request for each of them\n     * to create it on server. Update progress in between calls.\n     * @param  {array} history_item_set array of empty history items\n     * @param  {str} history_name     name of the history to import to\n     */\n    chainCallImportingIntoHistory: function chainCallImportingIntoHistory(history_item_set, history_name) {\n        var self = this;\n        var popped_item = history_item_set.pop();\n        if (typeof popped_item == \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                _toastr2.default.success(\"Selected datasets imported into history. Click this to start analyzing it.\", \"\", {\n                    onclick: function onclick() {\n                        window.location = Galaxy.root;\n                    }\n                });\n            } else if (this.options.chain_call_control.failed_number === this.options.chain_call_control.total_number) {\n                _toastr2.default.error(\"There was an error and no datasets were imported into history.\");\n            } else if (this.options.chain_call_control.failed_number < this.options.chain_call_control.total_number) {\n                _toastr2.default.warning(\"Some of the datasets could not be imported into history. Click this to see what was imported.\", \"\", {\n                    onclick: function onclick() {\n                        window.location = Galaxy.root;\n                    }\n                });\n            }\n            Galaxy.modal.hide();\n            return true;\n        }\n        var promise = $.when(popped_item.save({\n            content: popped_item.content,\n            source: popped_item.source\n        }));\n\n        promise.done(function () {\n            self.updateProgress();\n            self.chainCallImportingIntoHistory(history_item_set, history_name);\n        }).fail(function () {\n            self.options.chain_call_control.failed_number += 1;\n            self.updateProgress();\n            self.chainCallImportingIntoHistory(history_item_set, history_name);\n        });\n    },\n\n    /**\n     * Take the array of paths and create a request for each of them\n     * calling them in chain. Update the progress bar in between each.\n     * @param  {array} paths                    paths relative to user folder on Galaxy\n     * @param  {boolean} tag_using_filenames    add tags to datasets using names of files\n     */\n    chainCallImportingUserdirFiles: function chainCallImportingUserdirFiles(options) {\n        var that = this;\n        var popped_item = options.paths.pop();\n        if (typeof popped_item === \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                _toastr2.default.success(\"Selected files imported into the current folder\");\n                Galaxy.modal.hide();\n            } else {\n                _toastr2.default.error(\"An error occured.\");\n            }\n            return true;\n        }\n        var promise = $.when($.post(Galaxy.root + \"api/libraries/datasets?encoded_folder_id=\" + that.id + \"&source=\" + options.source + \"&path=\" + popped_item + \"&file_type=\" + options.file_type + \"&link_data=\" + options.link_data + \"&space_to_tab=\" + options.space_to_tab + \"&to_posix_lines=\" + options.to_posix_lines + \"&dbkey=\" + options.dbkey + \"&tag_using_filenames=\" + options.tag_using_filenames));\n        promise.done(function (response) {\n            that.updateProgress();\n            that.chainCallImportingUserdirFiles(options);\n        }).fail(function () {\n            that.options.chain_call_control.failed_number += 1;\n            that.updateProgress();\n            that.chainCallImportingUserdirFiles(options);\n        });\n    },\n\n    /**\n     * Take the array of paths and create a request for each of them\n     * calling them in series. Update the progress bar in between each.\n     * @param  {array} paths                    paths relative to Galaxy root folder\n     * @param  {boolean} preserve_dirs          indicates whether to preserve folder structure\n     * @param  {boolean} link_data              copy files to Galaxy or link instead\n     * @param  {boolean} to_posix_lines         convert line endings to POSIX standard\n     * @param  {boolean} space_to_tab           convert spaces to tabs\n     * @param  {str} source                     string representing what type of folder\n     *                                          is the source of import\n     * @param  {boolean} tag_using_filenames    add tags to datasets using names of files\n     */\n    chainCallImportingFolders: function chainCallImportingFolders(options) {\n        // TODO need to check which paths to call\n        var that = this;\n        var popped_item = options.paths.pop();\n        if (typeof popped_item == \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                _toastr2.default.success(\"Selected folders and their contents imported into the current folder.\");\n                Galaxy.modal.hide();\n            } else {\n                // TODO better error report\n                _toastr2.default.error(\"An error occured.\");\n            }\n            return true;\n        }\n        var promise = $.when($.post(Galaxy.root + \"api/libraries/datasets?encoded_folder_id=\" + that.id + \"&source=\" + options.source + \"&path=\" + popped_item + \"&preserve_dirs=\" + options.preserve_dirs + \"&link_data=\" + options.link_data + \"&to_posix_lines=\" + options.to_posix_lines + \"&space_to_tab=\" + options.space_to_tab + \"&file_type=\" + options.file_type + \"&dbkey=\" + options.dbkey + \"&tag_using_filenames=\" + options.tag_using_filenames));\n        promise.done(function (response) {\n            that.updateProgress();\n            that.chainCallImportingFolders(options);\n        }).fail(function () {\n            that.options.chain_call_control.failed_number += 1;\n            that.updateProgress();\n            that.chainCallImportingFolders(options);\n        });\n    },\n\n    /**\n     * Take the array of hdas and create a request for each.\n     * Call them in chain and update progress bar in between each.\n     * @param  {array} hdas_set array of empty hda objects\n     */\n    chainCallAddingHdas: function chainCallAddingHdas(hdas_set) {\n        var self = this;\n        this.added_hdas = new _libraryModel2.default.Folder();\n        var popped_item = hdas_set.pop();\n        if (typeof popped_item == \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                _toastr2.default.success(\"Selected datasets from history added to the folder\");\n            } else if (this.options.chain_call_control.failed_number === this.options.chain_call_control.total_number) {\n                _toastr2.default.error(\"There was an error and no datasets were added to the folder.\");\n            } else if (this.options.chain_call_control.failed_number < this.options.chain_call_control.total_number) {\n                _toastr2.default.warning(\"Some of the datasets could not be added to the folder\");\n            }\n            Galaxy.modal.hide();\n            return this.added_hdas;\n        }\n        var promise = $.when(popped_item.save({\n            from_hda_id: popped_item.get(\"from_hda_id\")\n        }));\n\n        promise.done(function (model) {\n            Galaxy.libraries.folderListView.collection.add(model);\n            self.updateProgress();\n            self.chainCallAddingHdas(hdas_set);\n        }).fail(function () {\n            self.options.chain_call_control.failed_number += 1;\n            self.updateProgress();\n            self.chainCallAddingHdas(hdas_set);\n        });\n    },\n\n    /**\n     * Take the array of lddas, create request for each and\n     * call them in chain. Update progress bar in between each.\n     * @param  {array} lddas_set array of lddas to delete\n     */\n    chainCallDeletingItems: function chainCallDeletingItems(items_to_delete) {\n        var self = this;\n        this.deleted_items = new _libraryModel2.default.Folder();\n        var item_to_delete = items_to_delete.pop();\n        if (typeof item_to_delete === \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                _toastr2.default.success(\"Selected items were deleted.\");\n            } else if (this.options.chain_call_control.failed_number === this.options.chain_call_control.total_number) {\n                _toastr2.default.error(\"There was an error and no items were deleted. Please make sure you have sufficient permissions.\");\n            } else if (this.options.chain_call_control.failed_number < this.options.chain_call_control.total_number) {\n                _toastr2.default.warning(\"Some of the items could not be deleted. Please make sure you have sufficient permissions.\");\n            }\n            Galaxy.modal.hide();\n            return this.deleted_items;\n        }\n        item_to_delete.destroy().done(function (item) {\n            Galaxy.libraries.folderListView.collection.remove(item_to_delete.id);\n            self.updateProgress();\n            // add the deleted item to collection, triggers rendering\n            if (Galaxy.libraries.folderListView.options.include_deleted) {\n                var updated_item = null;\n                if (item.type === \"folder\" || item.model_class === \"LibraryFolder\") {\n                    updated_item = new _libraryModel2.default.FolderAsModel(item);\n                } else if (item.type === \"file\" || item.model_class === \"LibraryDataset\") {\n                    updated_item = new _libraryModel2.default.Item(item);\n                } else {\n                    Galaxy.emit.error(\"Unknown library item type found.\", \"datalibs\");\n                    Galaxy.emit.error(item.type || item.model_class, \"datalibs\");\n                }\n                Galaxy.libraries.folderListView.collection.add(updated_item);\n            }\n            self.chainCallDeletingItems(items_to_delete);\n        }).fail(function () {\n            self.options.chain_call_control.failed_number += 1;\n            self.updateProgress();\n            self.chainCallDeletingItems(items_to_delete);\n        });\n    },\n\n    /**\n     * Handles the click on 'show deleted' checkbox\n     */\n    checkIncludeDeleted: function checkIncludeDeleted(event) {\n        if (event.target.checked) {\n            Galaxy.libraries.folderListView.fetchFolder({\n                include_deleted: true\n            });\n        } else {\n            Galaxy.libraries.folderListView.fetchFolder({\n                include_deleted: false\n            });\n        }\n    },\n\n    /**\n     * Delete the selected items. Atomic. One by one.\n     */\n    deleteSelectedItems: function deleteSelectedItems() {\n        var dataset_ids = [];\n        var folder_ids = [];\n        var $checkedValues = this.findCheckedRows();\n        if ($checkedValues.length === 0) {\n            _toastr2.default.info(\"You must select at least one item for deletion.\");\n        } else {\n            var template = this.templateDeletingItemsProgressBar();\n            this.modal = Galaxy.modal;\n            this.modal.show({\n                closing_events: true,\n                title: \"Deleting selected items\",\n                body: template({}),\n                buttons: {\n                    Close: function Close() {\n                        Galaxy.modal.hide();\n                    }\n                }\n            });\n            // init the control counters\n            this.options.chain_call_control.total_number = 0;\n            this.options.chain_call_control.failed_number = 0;\n            $checkedValues.each(function () {\n                var row_id = $(this).closest(\"tr\").data(\"id\");\n                if (row_id !== undefined) {\n                    if (row_id.substring(0, 1) == \"F\") {\n                        folder_ids.push(row_id);\n                    } else {\n                        dataset_ids.push(row_id);\n                    }\n                }\n            });\n            // init the progress bar\n            var items_total = dataset_ids.length + folder_ids.length;\n            this.progressStep = 100 / items_total;\n            this.progress = 0;\n\n            // prepare the dataset items to be added\n            var items_to_delete = [];\n            for (var i = dataset_ids.length - 1; i >= 0; i--) {\n                var dataset = new _libraryModel2.default.Item({\n                    id: dataset_ids[i]\n                });\n                items_to_delete.push(dataset);\n            }\n            for (var i = folder_ids.length - 1; i >= 0; i--) {\n                var folder = new _libraryModel2.default.FolderAsModel({\n                    id: folder_ids[i]\n                });\n                items_to_delete.push(folder);\n            }\n\n            this.options.chain_call_control.total_number = items_total;\n            // call the recursive function to call ajax one after each other (request FIFO queue)\n            this.chainCallDeletingItems(items_to_delete);\n        }\n    },\n\n    showLocInfo: function showLocInfo() {\n        var library = null;\n        var that = this;\n        if (Galaxy.libraries.libraryListView !== null) {\n            library = Galaxy.libraries.libraryListView.collection.get(this.options.parent_library_id);\n            this.showLocInfoModal(library);\n        } else {\n            library = new _libraryModel2.default.Library({\n                id: this.options.parent_library_id\n            });\n            library.fetch({\n                success: function success() {\n                    that.showLocInfoModal(library);\n                },\n                error: function error(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        _toastr2.default.error(response.responseJSON.err_msg);\n                    } else {\n                        _toastr2.default.error(\"An error occurred.\");\n                    }\n                }\n            });\n        }\n    },\n\n    showLocInfoModal: function showLocInfoModal(library) {\n        var that = this;\n        var template = this.templateLocInfoInModal();\n        this.modal = Galaxy.modal;\n        this.modal.show({\n            closing_events: true,\n            title: \"Location Details\",\n            body: template({ library: library, options: that.options }),\n            buttons: {\n                Close: function Close() {\n                    Galaxy.modal.hide();\n                }\n            }\n        });\n    },\n\n    showImportModal: function showImportModal(options) {\n        switch (options.source) {\n            case \"history\":\n                this.addFilesFromHistoryModal();\n                break;\n            case \"importdir\":\n                this.importFilesFromGalaxyFolderModal({\n                    source: \"importdir\"\n                });\n                break;\n            case \"path\":\n                this.importFilesFromPathModal();\n                break;\n            case \"userdir\":\n                this.importFilesFromGalaxyFolderModal({\n                    source: \"userdir\"\n                });\n                break;\n            default:\n                Galaxy.libraries.library_router.back();\n                _toastr2.default.error(\"Invalid import source.\");\n                break;\n        }\n    },\n\n    /**\n     * Show user the prompt to change the number of items shown on page.\n     */\n    showPageSizePrompt: function showPageSizePrompt(e) {\n        e.preventDefault();\n        var folder_page_size = prompt(\"How many items per page do you want to see?\", Galaxy.libraries.preferences.get(\"folder_page_size\"));\n        if (folder_page_size != null && folder_page_size == parseInt(folder_page_size)) {\n            Galaxy.libraries.preferences.set({\n                folder_page_size: parseInt(folder_page_size)\n            });\n            Galaxy.libraries.folderListView.render({\n                id: this.options.id,\n                show_page: 1\n            });\n        }\n    },\n\n    findCheckedRows: function findCheckedRows() {\n        return $(\"#folder_list_body\").find(\":checked\");\n    },\n\n    templateToolBar: function templateToolBar() {\n        return _.template([\n        // container start\n        '<div class=\"library_style_container\">',\n        // toolbar start\n        '<div id=\"library_toolbar\">', '<form class=\"form-inline\" role=\"form\">', \"<span><strong>DATA LIBRARIES</strong></span>\",\n        // paginator will append here\n        '<span class=\"library-paginator folder-paginator\"></span>', '<div class=\"checkbox toolbar-item logged-dataset-manipulation\" style=\"height: 20px; display:none;\">', \"<label>\", '<input id=\"include_deleted_datasets_chk\" type=\"checkbox\">include deleted</input>', \"</label>\", \"</div>\", '<button style=\"display:none;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Create New Folder\" id=\"toolbtn_create_folder\" class=\"btn btn-default primary-button add-library-items toolbar-item\" type=\"button\">', '<span class=\"fa fa-plus\"></span><span class=\"fa fa-folder\"></span>', \"</button>\", \"<% if(mutiple_add_dataset_options) { %>\", '<div class=\"btn-group add-library-items\" style=\"display:none;\">', '<button title=\"Add Datasets to Current Folder\" id=\"\" type=\"button\" class=\"primary-button dropdown-toggle\" data-toggle=\"dropdown\">', '<span class=\"fa fa-plus\"></span><span class=\"fa fa-file\"></span><span class=\"caret\"></span>', \"</button>\", '<ul class=\"dropdown-menu\" role=\"menu\">', '<li><a href=\"#folders/<%= id %>/import/history\"> from History</a></li>', \"<% if(Galaxy.config.user_library_import_dir !== null) { %>\", '<li><a href=\"#folders/<%= id %>/import/userdir\"> from User Directory</a></li>', \"<% } %>\", \"<% if(Galaxy.config.allow_library_path_paste) { %>\", '<li class=\"divider\"></li>', '<li class=\"dropdown-header\">Admins only</li>', \"<% if(Galaxy.config.library_import_dir !== null) { %>\", '<li><a href=\"#folders/<%= id %>/import/importdir\">from Import Directory</a></li>', \"<% } %>\", \"<% if(Galaxy.config.allow_library_path_paste) { %>\", '<li><a href=\"#folders/<%= id %>/import/path\">from Path</a></li>', \"<% } %>\", \"<% } %>\", \"</ul>\", \"</div>\", \"<% } else { %>\", '<a  data-placement=\"top\" title=\"Add Datasets to Current Folder\" style=\"display:none;\" class=\"btn btn-default add-library-items\" href=\"#folders/<%= id %>/import/history\" role=\"button\">', '<span class=\"fa fa-plus\"></span><span class=\"fa fa-file\"></span>', \"</a>\", \"<% } %>\", '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import selected datasets into history\" id=\"toolbtn_bulk_import\" class=\"primary-button dataset-manipulation\" style=\"margin-left: 0.5em; display:none;\" type=\"button\">', '<span class=\"fa fa-book\"></span>', \"&nbsp;to History\", \"</button>\", '<div class=\"btn-group dataset-manipulation\" style=\"margin-left: 0.5em; display:none; \">', '<button title=\"Download selected items as archive\" type=\"button\" class=\"primary-button dropdown-toggle\" data-toggle=\"dropdown\">', '<span class=\"fa fa-download\"></span> Download <span class=\"caret\"></span>', \"</button>\", '<ul class=\"dropdown-menu\" role=\"menu\">', '<li><a href=\"#/folders/<%= id %>/download/tgz\">.tar.gz</a></li>', '<li><a href=\"#/folders/<%= id %>/download/tbz\">.tar.bz</a></li>', '<li><a href=\"#/folders/<%= id %>/download/zip\">.zip</a></li>', \"</ul>\", \"</div>\", '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Mark selected items deleted\" id=\"toolbtn_bulk_delete\" class=\"primary-button logged-dataset-manipulation\" style=\"margin-left: 0.5em; display:none; \" type=\"button\">', '<span class=\"fa fa-times\"></span> Delete</button>', '<button data-id=\"<%- id %>\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Show location details\" class=\"primary-button toolbtn-show-locinfo\" style=\"margin-left: 0.5em;\" type=\"button\">', '<span class=\"fa fa-info-circle\"></span>', \"&nbsp;Details\", \"</button>\", '<span class=\"help-button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"See this screen annotated\">', '<a href=\"https://galaxyproject.org/data-libraries/screen/folder-contents/\" target=\"_blank\">', '<button class=\"primary-button\" type=\"button\">', '<span class=\"fa fa-question-circle\"></span>', \"&nbsp;Help\", \"</button>\", \"</a>\", \"</span>\", \"</div>\", \"</form>\",\n        // toolbar end\n        '<div id=\"folder_items_element\">', \"</div>\",\n        // paginator will append here\n        '<div class=\"folder-paginator paginator-bottom\"></div>',\n        // container end\n        \"</div>\"].join(\"\"));\n    },\n\n    templateLocInfoInModal: function templateLocInfoInModal() {\n        return _.template([\"<div>\", '<table class=\"grid table table-condensed\">', \"<thead>\", '<th style=\"width: 25%;\">library</th>', \"<th></th>\", \"</thead>\", \"<tbody>\", \"<tr>\", \"<td>name</td>\", '<td><%- library.get(\"name\") %></td>', \"</tr>\", '<% if(library.get(\"description\") !== \"\") { %>', \"<tr>\", \"<td>description</td>\", '<td><%- library.get(\"description\") %></td>', \"</tr>\", \"<% } %>\", '<% if(library.get(\"synopsis\") !== \"\") { %>', \"<tr>\", \"<td>synopsis</td>\", '<td><%- library.get(\"synopsis\") %></td>', \"</tr>\", \"<% } %>\", '<% if(library.get(\"create_time_pretty\") !== \"\") { %>', \"<tr>\", \"<td>created</td>\", '<td><span title=\"<%- library.get(\"create_time\") %>\"><%- library.get(\"create_time_pretty\") %></span></td>', \"</tr>\", \"<% } %>\", \"<tr>\", \"<td>id</td>\", '<td><%- library.get(\"id\") %></td>', \"</tr>\", \"</tbody>\", \"</table>\", '<table class=\"grid table table-condensed\">', \"<thead>\", '<th style=\"width: 25%;\">folder</th>', \"<th></th>\", \"</thead>\", \"<tbody>\", \"<tr>\", \"<td>name</td>\", \"<td><%- options.folder_name %></td>\", \"</tr>\", '<% if(options.folder_description !== \"\") { %>', \"<tr>\", \"<td>description</td>\", \"<td><%- options.folder_description %></td>\", \"</tr>\", \"<% } %>\", \"<tr>\", \"<td>id</td>\", \"<td><%- options.id %></td>\", \"</tr>\", \"</tbody>\", \"</table>\", \"</div>\"].join(\"\"));\n    },\n\n    templateNewFolderInModal: function templateNewFolderInModal() {\n        return _.template(['<div id=\"new_folder_modal\">', \"<form>\", '<input type=\"text\" name=\"Name\" value=\"\" placeholder=\"Name\" autofocus>', '<input type=\"text\" name=\"Description\" value=\"\" placeholder=\"Description\">', \"</form>\", \"</div>\"].join(\"\"));\n    },\n\n    templateBulkImportInModal: function templateBulkImportInModal() {\n        return _.template([\"<div>\", '<div class=\"library-modal-item\">', \"Select history: \", '<select id=\"dataset_import_bulk\" name=\"dataset_import_bulk\" style=\"width:50%; margin-bottom: 1em; \" autofocus>', \"<% _.each(histories, function(history) { %>\", '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>', \"<% }); %>\", \"</select>\", \"</div>\", '<div class=\"library-modal-item\">', \"or create new: \", '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">', \"</input>\", \"</div>\", \"</div>\"].join(\"\"));\n    },\n\n    templateImportIntoHistoryProgressBar: function templateImportIntoHistoryProgressBar() {\n        return _.template(['<div class=\"import_text\">', \"Importing selected items to history <b><%= _.escape(history_name) %></b>\", \"</div>\", '<div class=\"progress\">', '<div class=\"progress-bar progress-bar-import\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 00%;\">', '<span class=\"completion_span\">0% Complete</span>', \"</div>\", \"</div>\"].join(\"\"));\n    },\n\n    templateAddingDatasetsProgressBar: function templateAddingDatasetsProgressBar() {\n        return _.template(['<div class=\"import_text\">', \"Adding selected datasets to library folder <b><%= _.escape(folder_name) %></b>\", \"</div>\", '<div class=\"progress\">', '<div class=\"progress-bar progress-bar-import\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 00%;\">', '<span class=\"completion_span\">0% Complete</span>', \"</div>\", \"</div>\"].join(\"\"));\n    },\n\n    templateDeletingItemsProgressBar: function templateDeletingItemsProgressBar() {\n        return _.template(['<div class=\"import_text\">', \"</div>\", '<div class=\"progress\">', '<div class=\"progress-bar progress-bar-import\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 00%;\">', '<span class=\"completion_span\">0% Complete</span>', \"</div>\", \"</div>\"].join(\"\"));\n    },\n\n    templateBrowserModal: function templateBrowserModal() {\n        return _.template(['<div id=\"file_browser_modal\">', '<div class=\"alert alert-info jstree-files-message\">All files you select will be imported into the current folder ignoring their folder structure.</div>', '<div class=\"alert alert-info jstree-folders-message\" style=\"display:none;\">All files within the selected folders and their subfolders will be imported into the current folder.</div>', '<div style=\"margin-bottom:1em;\">', '<label title=\"Switch to selecting files\" class=\"radio-inline import-type-switch\">', '<input type=\"radio\" name=\"jstree-radio\" value=\"jstree-disable-folders\" checked=\"checked\"> Choose Files', \"</label>\", '<label title=\"Switch to selecting folders\" class=\"radio-inline import-type-switch\">', '<input type=\"radio\" name=\"jstree-radio\" value=\"jstree-disable-files\"> Choose Folders', \"</label>\", \"</div>\", '<div style=\"margin-bottom:1em;\">', '<label class=\"checkbox-inline jstree-preserve-structure\" style=\"display:none;\">', '<input class=\"preserve-checkbox\" type=\"checkbox\" value=\"preserve_directory_structure\">', \"Preserve directory structure\", \"</label>\", '<label class=\"checkbox-inline\">', '<input class=\"link-checkbox\" type=\"checkbox\" value=\"link_files\">', \"Link files instead of copying\", \"</label>\", '<label class=\"checkbox-inline\">', '<input class=\"posix-checkbox\" type=\"checkbox\" value=\"to_posix_lines\" checked=\"checked\">', \"Convert line endings to POSIX\", \"</label>\", '<label class=\"checkbox-inline\">', '<input class=\"spacetab-checkbox\" type=\"checkbox\" value=\"space_to_tab\">', \"Convert spaces to tabs\", \"</label>\", \"</div>\", '<button title=\"Select all files\" type=\"button\" class=\"button primary-button libimport-select-all\">', \"Select all\", \"</button>\", '<button title=\"Select no files\" type=\"button\" class=\"button primary-button libimport-select-none\">', \"Unselect all\", \"</button>\", \"<hr />\",\n        // append jstree object here\n        '<div id=\"jstree_browser\">', \"</div>\", \"<hr />\", \"<p>You can set extension type and genome for all imported datasets at once:</p>\", \"<div>\", 'Type: <span id=\"library_extension_select\" class=\"library-extension-select\" />', 'Genome: <span id=\"library_genome_select\" class=\"library-genome-select\" />', \"</div>\", \"<br>\", \"<div>\", '<label class=\"checkbox-inline tag-files\">', \"Tag datasets based on file names.\", '<input class=\"tag-files\" type=\"checkbox\" value=\"tag_using_filenames\" checked=\"checked\">', \"</label>\", \"</div>\", \"</div>\"].join(\"\"));\n    },\n\n    templateImportPathModal: function templateImportPathModal() {\n        return _.template(['<div id=\"file_browser_modal\">', '<div class=\"alert alert-info jstree-folders-message\">All files within the given folders and their subfolders will be imported into the current folder.</div>', '<div style=\"margin-bottom: 0.5em;\">', '<label class=\"checkbox-inline\">', '<input class=\"preserve-checkbox\" type=\"checkbox\" value=\"preserve_directory_structure\">', \"Preserve directory structure\", \"</label>\", '<label class=\"checkbox-inline\">', '<input class=\"link-checkbox\" type=\"checkbox\" value=\"link_files\">', \"Link files instead of copying\", \"</label>\", \"<br>\", '<label class=\"checkbox-inline\">', '<input class=\"posix-checkbox\" type=\"checkbox\" value=\"to_posix_lines\" checked=\"checked\">', \"Convert line endings to POSIX\", \"</label>\", '<label class=\"checkbox-inline\">', '<input class=\"spacetab-checkbox\" type=\"checkbox\" value=\"space_to_tab\">', \"Convert spaces to tabs\", \"</label>\", \"</div>\", '<textarea id=\"import_paths\" class=\"form-control\" rows=\"5\" placeholder=\"Absolute paths (or paths relative to Galaxy root) separated by newline\" autofocus></textarea>', \"<hr />\", \"<p>You can set extension type and genome for all imported datasets at once:</p>\", \"<div>\", 'Type: <span id=\"library_extension_select\" class=\"library-extension-select\" />', 'Genome: <span id=\"library_genome_select\" class=\"library-genome-select\" />', \"</div>\", \"<div>\", '<label class=\"checkbox-inline tag-files\">', \"Tag datasets based on file names.\", '<input class=\"tag-files\" type=\"checkbox\" value=\"tag_using_filenames\" checked=\"checked\">', \"</label>\", \"</div>\", \"</div>\"].join(\"\"));\n    },\n\n    templateAddFilesFromHistory: function templateAddFilesFromHistory() {\n        return _.template(['<div id=\"add_files_modal\">', \"<div>\", \"1.&nbsp;Select history:&nbsp;\", '<select id=\"dataset_add_bulk\" name=\"dataset_add_bulk\" style=\"width:66%; \"> ', \"<% _.each(histories, function(history) { %>\", //history select box\n        '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>', \"<% }); %>\", \"</select>\", \"</div>\", \"<br/>\", '<div id=\"selected_history_content\">', \"</div>\", \"</div>\"].join(\"\"));\n    },\n\n    templateHistoryContents: function templateHistoryContents() {\n        return _.template([\"<p>2.&nbsp;Choose the datasets to import:</p>\", \"<div>\", '<button title=\"Select all datasets\" type=\"button\" class=\"button primary-button history-import-select-all\">', \"Select all\", \"</button>\", '<button title=\"Select all datasets\" type=\"button\" class=\"button primary-button history-import-unselect-all\">', \"Unselect all\", \"</button>\", \"</div>\", \"<br>\", \"<ul>\", \"<% _.each(history_contents, function(history_item) { %>\", '<% if (history_item.get(\"deleted\") != true ) { %>', '<% var item_name = history_item.get(\"name\") %>', '<% if (history_item.get(\"type\") === \"collection\") { %>', '<% var collection_type = history_item.get(\"collection_type\") %>', '<% if (collection_type === \"list\") { %>', '<li data-id=\"<%= _.escape(history_item.get(\"id\")) %>\" data-name=\"<%= _.escape(history_item.get(\"type\")) %>\">', \"<label>\", '<label title=\"<%= _.escape(item_name) %>\">', '<input style=\"margin: 0;\" type=\"checkbox\"> <%= _.escape(history_item.get(\"hid\")) %>: ', '<%= item_name.length > 75 ? _.escape(\"...\".concat(item_name.substr(-75))) : _.escape(item_name) %> (Dataset Collection)', \"</label>\", \"</li>\", \"<% } else { %>\", '<li><input style=\"margin: 0;\" type=\"checkbox\" onclick=\"return false;\" disabled=\"disabled\">', '<span title=\"You can convert this collection into a collection of type list using the Collection Tools\">', '<%= _.escape(history_item.get(\"hid\")) %>: ', '<%= item_name.length > 75 ? _.escape(\"...\".concat(item_name.substr(-75))) : _.escape(item_name) %> (Dataset Collection of type <%= _.escape(collection_type) %> not supported.)', \"</span>\", \"</li>\", \"<% } %>\", '<% } else if (history_item.get(\"visible\") === true && history_item.get(\"state\") === \"ok\") { %>', '<li data-id=\"<%= _.escape(history_item.get(\"id\")) %>\" data-name=\"<%= _.escape(history_item.get(\"type\")) %>\">', '<label title=\"<%= _.escape(item_name) %>\">', '<input style=\"margin: 0;\" type=\"checkbox\"> <%= _.escape(history_item.get(\"hid\")) %>: ', '<%= item_name.length > 75 ? _.escape(\"...\".concat(item_name.substr(-75))) : _.escape(item_name) %>', \"</label>\", \"</li>\", \"<% } %>\", \"<% } %>\", \"<% }); %>\", \"</ul>\"].join(\"\"));\n    },\n\n    templatePaginator: function templatePaginator() {\n        return _.template(['<ul class=\"pagination pagination-sm\">', \"<% if ( ( show_page - 1 ) > 0 ) { %>\", \"<% if ( ( show_page - 1 ) > page_count ) { %>\", // we are on higher page than total page count\n        '<li><a href=\"#folders/<%= id %>/page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>', '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/<% print( show_page ) %>\"><% print( show_page - 1 ) %></a></li>', \"<% } else { %>\", '<li><a href=\"#folders/<%= id %>/page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>', '<li><a href=\"#folders/<%= id %>/page/<% print( show_page - 1 ) %>\"><% print( show_page - 1 ) %></a></li>', \"<% } %>\", \"<% } else { %>\", // we are on the first page\n        '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>', '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/<% print( show_page ) %>\"><% print( show_page - 1 ) %></a></li>', \"<% } %>\", '<li class=\"active\">', '<a href=\"#folders/<%= id %>/page/<% print( show_page ) %>\"><% print( show_page ) %></a>', \"</li>\", \"<% if ( ( show_page ) < page_count ) { %>\", '<li><a href=\"#folders/<%= id %>/page/<% print( show_page + 1 ) %>\"><% print( show_page + 1 ) %></a></li>', '<li><a href=\"#folders/<%= id %>/page/<% print( page_count ) %>\"><span class=\"fa fa-angle-double-right\"></span></a></li>', \"<% } else { %>\", '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/<% print( show_page  ) %>\"><% print( show_page + 1 ) %></a></li>', '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/<% print( page_count ) %>\"><span class=\"fa fa-angle-double-right\"></span></a></li>', \"<% } %>\", \"</ul>\", \"<span>\", ' <%- items_shown %> items shown <a href=\"\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"currently <%- folder_page_size %> per page\" class=\"page_size_prompt\">(change)</a>', \"</span>\", \"<span>\", \" <%- total_items_count %> total\", \"</span>\"].join(\"\"));\n    }\n});\n\nexports.default = {\n    FolderToolbarView: FolderToolbarView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 298:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*globals jQuery, define, exports, require, window, document */\n(function (factory) {\n\t\"use strict\";\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\telse if(typeof exports === 'object') {\n\t\tfactory(require('jquery'));\n\t}\n\telse {\n\t\tfactory(jQuery);\n\t}\n}(function ($, undefined) {\n\t\"use strict\";\n/*!\n * jsTree 3.0.3\n * http://jstree.com/\n *\n * Copyright (c) 2014 Ivan Bozhanov (http://vakata.com)\n *\n * Licensed same as jquery - under the terms of the MIT License\n *   http://www.opensource.org/licenses/mit-license.php\n */\n/*!\n * if using jslint please allow for the jQuery global and use following options: \n * jslint: browser: true, ass: true, bitwise: true, continue: true, nomen: true, plusplus: true, regexp: true, unparam: true, todo: true, white: true\n */\n\n\t// prevent another load? maybe there is a better way?\n\tif($.jstree) {\n\t\treturn;\n\t}\n\n\t/**\n\t * ### jsTree core functionality\n\t */\n\n\t// internal variables\n\tvar instance_counter = 0,\n\t\tccp_node = false,\n\t\tccp_mode = false,\n\t\tccp_inst = false,\n\t\tthemes_loaded = [],\n\t\tsrc = $('script:last').attr('src'),\n\t\t_d = document, _node = _d.createElement('LI'), _temp1, _temp2;\n\n\t_node.setAttribute('role', 'treeitem');\n\t_temp1 = _d.createElement('I');\n\t_temp1.className = 'jstree-icon jstree-ocl';\n\t_node.appendChild(_temp1);\n\t_temp1 = _d.createElement('A');\n\t_temp1.className = 'jstree-anchor';\n\t_temp1.setAttribute('href','#');\n\t_temp2 = _d.createElement('I');\n\t_temp2.className = 'jstree-icon jstree-themeicon';\n\t_temp1.appendChild(_temp2);\n\t_node.appendChild(_temp1);\n\t_temp1 = _temp2 = null;\n\n\n\t/**\n\t * holds all jstree related functions and variables, including the actual class and methods to create, access and manipulate instances.\n\t * @name $.jstree\n\t */\n\t$.jstree = {\n\t\t/** \n\t\t * specifies the jstree version in use\n\t\t * @name $.jstree.version\n\t\t */\n\t\tversion : '3.0.3',\n\t\t/**\n\t\t * holds all the default options used when creating new instances\n\t\t * @name $.jstree.defaults\n\t\t */\n\t\tdefaults : {\n\t\t\t/**\n\t\t\t * configure which plugins will be active on an instance. Should be an array of strings, where each element is a plugin name. The default is `[]`\n\t\t\t * @name $.jstree.defaults.plugins\n\t\t\t */\n\t\t\tplugins : []\n\t\t},\n\t\t/**\n\t\t * stores all loaded jstree plugins (used internally)\n\t\t * @name $.jstree.plugins\n\t\t */\n\t\tplugins : {},\n\t\tpath : src && src.indexOf('/') !== -1 ? src.replace(/\\/[^\\/]+$/,'') : '',\n\t\tidregex : /[\\\\:&!^|()\\[\\]<>@*'+~#\";.,=\\- \\/${}%]/g\n\t};\n\t/**\n\t * creates a jstree instance\n\t * @name $.jstree.create(el [, options])\n\t * @param {DOMElement|jQuery|String} el the element to create the instance on, can be jQuery extended or a selector\n\t * @param {Object} options options for this instance (extends `$.jstree.defaults`)\n\t * @return {jsTree} the new instance\n\t */\n\t$.jstree.create = function (el, options) {\n\t\tvar tmp = new $.jstree.core(++instance_counter),\n\t\t\topt = options;\n\t\toptions = $.extend(true, {}, $.jstree.defaults, options);\n\t\tif(opt && opt.plugins) {\n\t\t\toptions.plugins = opt.plugins;\n\t\t}\n\t\t$.each(options.plugins, function (i, k) {\n\t\t\tif(i !== 'core') {\n\t\t\t\ttmp = tmp.plugin(k, options[k]);\n\t\t\t}\n\t\t});\n\t\ttmp.init(el, options);\n\t\treturn tmp;\n\t};\n\t/**\n\t * the jstree class constructor, used only internally\n\t * @private\n\t * @name $.jstree.core(id)\n\t * @param {Number} id this instance's index\n\t */\n\t$.jstree.core = function (id) {\n\t\tthis._id = id;\n\t\tthis._cnt = 0;\n\t\tthis._wrk = null;\n\t\tthis._data = {\n\t\t\tcore : {\n\t\t\t\tthemes : {\n\t\t\t\t\tname : false,\n\t\t\t\t\tdots : false,\n\t\t\t\t\ticons : false\n\t\t\t\t},\n\t\t\t\tselected : [],\n\t\t\t\tlast_error : {},\n\t\t\t\tworking : false,\n\t\t\t\tworker_queue : []\n\t\t\t}\n\t\t};\n\t};\n\t/**\n\t * get a reference to an existing instance\n\t *\n\t * __Examples__\n\t *\n\t *\t// provided a container with an ID of \"tree\", and a nested node with an ID of \"branch\"\n\t *\t// all of there will return the same instance\n\t *\t$.jstree.reference('tree');\n\t *\t$.jstree.reference('#tree');\n\t *\t$.jstree.reference($('#tree'));\n\t *\t$.jstree.reference(document.getElementByID('tree'));\n\t *\t$.jstree.reference('branch');\n\t *\t$.jstree.reference('#branch');\n\t *\t$.jstree.reference($('#branch'));\n\t *\t$.jstree.reference(document.getElementByID('branch'));\n\t *\n\t * @name $.jstree.reference(needle)\n\t * @param {DOMElement|jQuery|String} needle\n\t * @return {jsTree|null} the instance or `null` if not found\n\t */\n\t$.jstree.reference = function (needle) {\n\t\tvar tmp = null,\n\t\t\tobj = null;\n\t\tif(needle && needle.id) { needle = needle.id; }\n\n\t\tif(!obj || !obj.length) {\n\t\t\ttry { obj = $(needle); } catch (ignore) { }\n\t\t}\n\t\tif(!obj || !obj.length) {\n\t\t\ttry { obj = $('#' + needle.replace($.jstree.idregex,'\\\\$&')); } catch (ignore) { }\n\t\t}\n\t\tif(obj && obj.length && (obj = obj.closest('.jstree')).length && (obj = obj.data('jstree'))) {\n\t\t\ttmp = obj;\n\t\t}\n\t\telse {\n\t\t\t$('.jstree').each(function () {\n\t\t\t\tvar inst = $(this).data('jstree');\n\t\t\t\tif(inst && inst._model.data[needle]) {\n\t\t\t\t\ttmp = inst;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn tmp;\n\t};\n\t/**\n\t * Create an instance, get an instance or invoke a command on a instance. \n\t * \n\t * If there is no instance associated with the current node a new one is created and `arg` is used to extend `$.jstree.defaults` for this new instance. There would be no return value (chaining is not broken).\n\t * \n\t * If there is an existing instance and `arg` is a string the command specified by `arg` is executed on the instance, with any additional arguments passed to the function. If the function returns a value it will be returned (chaining could break depending on function).\n\t * \n\t * If there is an existing instance and `arg` is not a string the instance itself is returned (similar to `$.jstree.reference`).\n\t * \n\t * In any other case - nothing is returned and chaining is not broken.\n\t *\n\t * __Examples__\n\t *\n\t *\t$('#tree1').jstree(); // creates an instance\n\t *\t$('#tree2').jstree({ plugins : [] }); // create an instance with some options\n\t *\t$('#tree1').jstree('open_node', '#branch_1'); // call a method on an existing instance, passing additional arguments\n\t *\t$('#tree2').jstree(); // get an existing instance (or create an instance)\n\t *\t$('#tree2').jstree(true); // get an existing instance (will not create new instance)\n\t *\t$('#branch_1').jstree().select_node('#branch_1'); // get an instance (using a nested element and call a method)\n\t *\n\t * @name $().jstree([arg])\n\t * @param {String|Object} arg\n\t * @return {Mixed}\n\t */\n\t$.fn.jstree = function (arg) {\n\t\t// check for string argument\n\t\tvar is_method\t= (typeof arg === 'string'),\n\t\t\targs\t\t= Array.prototype.slice.call(arguments, 1),\n\t\t\tresult\t\t= null;\n\t\tthis.each(function () {\n\t\t\t// get the instance (if there is one) and method (if it exists)\n\t\t\tvar instance = $.jstree.reference(this),\n\t\t\t\tmethod = is_method && instance ? instance[arg] : null;\n\t\t\t// if calling a method, and method is available - execute on the instance\n\t\t\tresult = is_method && method ?\n\t\t\t\tmethod.apply(instance, args) :\n\t\t\t\tnull;\n\t\t\t// if there is no instance and no method is being called - create one\n\t\t\tif(!instance && !is_method && (arg === undefined || $.isPlainObject(arg))) {\n\t\t\t\t$(this).data('jstree', new $.jstree.create(this, arg));\n\t\t\t}\n\t\t\t// if there is an instance and no method is called - return the instance\n\t\t\tif( (instance && !is_method) || arg === true ) {\n\t\t\t\tresult = instance || false;\n\t\t\t}\n\t\t\t// if there was a method call which returned a result - break and return the value\n\t\t\tif(result !== null && result !== undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\t// if there was a method call with a valid return value - return that, otherwise continue the chain\n\t\treturn result !== null && result !== undefined ?\n\t\t\tresult : this;\n\t};\n\t/**\n\t * used to find elements containing an instance\n\t *\n\t * __Examples__\n\t *\n\t *\t$('div:jstree').each(function () {\n\t *\t\t$(this).jstree('destroy');\n\t *\t});\n\t *\n\t * @name $(':jstree')\n\t * @return {jQuery}\n\t */\n\t$.expr[':'].jstree = $.expr.createPseudo(function(search) {\n\t\treturn function(a) {\n\t\t\treturn $(a).hasClass('jstree') &&\n\t\t\t\t$(a).data('jstree') !== undefined;\n\t\t};\n\t});\n\n\t/**\n\t * stores all defaults for the core\n\t * @name $.jstree.defaults.core\n\t */\n\t$.jstree.defaults.core = {\n\t\t/**\n\t\t * data configuration\n\t\t * \n\t\t * If left as `false` the HTML inside the jstree container element is used to populate the tree (that should be an unordered list with list items).\n\t\t *\n\t\t * You can also pass in a HTML string or a JSON array here.\n\t\t * \n\t\t * It is possible to pass in a standard jQuery-like AJAX config and jstree will automatically determine if the response is JSON or HTML and use that to populate the tree. \n\t\t * In addition to the standard jQuery ajax options here you can suppy functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node is being loaded, the return value of those functions will be used.\n\t\t * \n\t\t * The last option is to specify a function, that function will receive the node being loaded as argument and a second param which is a function which should be called with the result.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t// AJAX\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : {\n\t\t *\t\t\t\t'url' : '/get/children/',\n\t\t *\t\t\t\t'data' : function (node) {\n\t\t *\t\t\t\t\treturn { 'id' : node.id };\n\t\t *\t\t\t\t}\n\t\t *\t\t\t}\n\t\t *\t\t});\n\t\t *\n\t\t *\t// direct data\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : [\n\t\t *\t\t\t\t'Simple root node',\n\t\t *\t\t\t\t{\n\t\t *\t\t\t\t\t'id' : 'node_2',\n\t\t *\t\t\t\t\t'text' : 'Root node with options',\n\t\t *\t\t\t\t\t'state' : { 'opened' : true, 'selected' : true },\n\t\t *\t\t\t\t\t'children' : [ { 'text' : 'Child 1' }, 'Child 2']\n\t\t *\t\t\t\t}\n\t\t *\t\t\t]\n\t\t *\t\t});\n\t\t *\t\n\t\t *\t// function\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : function (obj, callback) {\n\t\t *\t\t\t\tcallback.call(this, ['Root 1', 'Root 2']);\n\t\t *\t\t\t}\n\t\t *\t\t});\n\t\t * \n\t\t * @name $.jstree.defaults.core.data\n\t\t */\n\t\tdata\t\t\t: false,\n\t\t/**\n\t\t * configure the various strings used throughout the tree\n\t\t *\n\t\t * You can use an object where the key is the string you need to replace and the value is your replacement.\n\t\t * Another option is to specify a function which will be called with an argument of the needed string and should return the replacement.\n\t\t * If left as `false` no replacement is made.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'strings' : {\n\t\t *\t\t\t\t'Loading ...' : 'Please wait ...'\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\t});\n\t\t *\n\t\t * @name $.jstree.defaults.core.strings\n\t\t */\n\t\tstrings\t\t\t: false,\n\t\t/**\n\t\t * determines what happens when a user tries to modify the structure of the tree\n\t\t * If left as `false` all operations like create, rename, delete, move or copy are prevented.\n\t\t * You can set this to `true` to allow all interactions or use a function to have better control.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'check_callback' : function (operation, node, node_parent, node_position, more) {\n\t\t *\t\t\t\t// operation can be 'create_node', 'rename_node', 'delete_node', 'move_node' or 'copy_node'\n\t\t *\t\t\t\t// in case of 'rename_node' node_position is filled with the new node name\n\t\t *\t\t\t\treturn operation === 'rename_node' ? true : false;\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\t});\n\t\t * \n\t\t * @name $.jstree.defaults.core.check_callback\n\t\t */\n\t\tcheck_callback\t: false,\n\t\t/**\n\t\t * a callback called with a single object parameter in the instance's scope when something goes wrong (operation prevented, ajax failed, etc)\n\t\t * @name $.jstree.defaults.core.error\n\t\t */\n\t\terror\t\t\t: $.noop,\n\t\t/**\n\t\t * the open / close animation duration in milliseconds - set this to `false` to disable the animation (default is `200`)\n\t\t * @name $.jstree.defaults.core.animation\n\t\t */\n\t\tanimation\t\t: 200,\n\t\t/**\n\t\t * a boolean indicating if multiple nodes can be selected\n\t\t * @name $.jstree.defaults.core.multiple\n\t\t */\n\t\tmultiple\t\t: true,\n\t\t/**\n\t\t * theme configuration object\n\t\t * @name $.jstree.defaults.core.themes\n\t\t */\n\t\tthemes\t\t\t: {\n\t\t\t/**\n\t\t\t * the name of the theme to use (if left as `false` the default theme is used)\n\t\t\t * @name $.jstree.defaults.core.themes.name\n\t\t\t */\n\t\t\tname\t\t\t: false,\n\t\t\t/**\n\t\t\t * the URL of the theme's CSS file, leave this as `false` if you have manually included the theme CSS (recommended). You can set this to `true` too which will try to autoload the theme.\n\t\t\t * @name $.jstree.defaults.core.themes.url\n\t\t\t */\n\t\t\turl\t\t\t\t: false,\n\t\t\t/**\n\t\t\t * the location of all jstree themes - only used if `url` is set to `true`\n\t\t\t * @name $.jstree.defaults.core.themes.dir\n\t\t\t */\n\t\t\tdir\t\t\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean indicating if connecting dots are shown\n\t\t\t * @name $.jstree.defaults.core.themes.dots\n\t\t\t */\n\t\t\tdots\t\t\t: true,\n\t\t\t/**\n\t\t\t * a boolean indicating if node icons are shown\n\t\t\t * @name $.jstree.defaults.core.themes.icons\n\t\t\t */\n\t\t\ticons\t\t\t: true,\n\t\t\t/**\n\t\t\t * a boolean indicating if the tree background is striped\n\t\t\t * @name $.jstree.defaults.core.themes.stripes\n\t\t\t */\n\t\t\tstripes\t\t\t: false,\n\t\t\t/**\n\t\t\t * a string (or boolean `false`) specifying the theme variant to use (if the theme supports variants)\n\t\t\t * @name $.jstree.defaults.core.themes.variant\n\t\t\t */\n\t\t\tvariant\t\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean specifying if a reponsive version of the theme should kick in on smaller screens (if the theme supports it). Defaults to `false`.\n\t\t\t * @name $.jstree.defaults.core.themes.responsive\n\t\t\t */\n\t\t\tresponsive\t\t: false\n\t\t},\n\t\t/**\n\t\t * if left as `true` all parents of all selected nodes will be opened once the tree loads (so that all selected nodes are visible to the user)\n\t\t * @name $.jstree.defaults.core.expand_selected_onload\n\t\t */\n\t\texpand_selected_onload : true,\n\t\t/**\n\t\t * if left as `true` web workers will be used to parse incoming JSON data where possible, so that the UI will not be blocked by large requests. Workers are however about 30% slower. Defaults to `true`\n\t\t * @name $.jstree.defaults.core.worker\n\t\t */\n\t\tworker : true,\n\t\t/**\n\t\t * Force node text to plain text (and escape HTML). Defaults to `false`\n\t\t * @name $.jstree.defaults.core.force_text\n\t\t */\n\t\tforce_text : false\n\t};\n\t$.jstree.core.prototype = {\n\t\t/**\n\t\t * used to decorate an instance with a plugin. Used internally.\n\t\t * @private\n\t\t * @name plugin(deco [, opts])\n\t\t * @param  {String} deco the plugin to decorate with\n\t\t * @param  {Object} opts options for the plugin\n\t\t * @return {jsTree}\n\t\t */\n\t\tplugin : function (deco, opts) {\n\t\t\tvar Child = $.jstree.plugins[deco];\n\t\t\tif(Child) {\n\t\t\t\tthis._data[deco] = {};\n\t\t\t\tChild.prototype = this;\n\t\t\t\treturn new Child(opts, this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t/**\n\t\t * used to decorate an instance with a plugin. Used internally.\n\t\t * @private\n\t\t * @name init(el, optons)\n\t\t * @param {DOMElement|jQuery|String} el the element we are transforming\n\t\t * @param {Object} options options for this instance\n\t\t * @trigger init.jstree, loading.jstree, loaded.jstree, ready.jstree, changed.jstree\n\t\t */\n\t\tinit : function (el, options) {\n\t\t\tthis._model = {\n\t\t\t\tdata : {\n\t\t\t\t\t'#' : {\n\t\t\t\t\t\tid : '#',\n\t\t\t\t\t\tparent : null,\n\t\t\t\t\t\tparents : [],\n\t\t\t\t\t\tchildren : [],\n\t\t\t\t\t\tchildren_d : [],\n\t\t\t\t\t\tstate : { loaded : false }\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tchanged : [],\n\t\t\t\tforce_full_redraw : false,\n\t\t\t\tredraw_timeout : false,\n\t\t\t\tdefault_state : {\n\t\t\t\t\tloaded : true,\n\t\t\t\t\topened : false,\n\t\t\t\t\tselected : false,\n\t\t\t\t\tdisabled : false\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.element = $(el).addClass('jstree jstree-' + this._id);\n\t\t\tthis.settings = options;\n\t\t\tthis.element.bind(\"destroyed\", $.proxy(this.teardown, this));\n\n\t\t\tthis._data.core.ready = false;\n\t\t\tthis._data.core.loaded = false;\n\t\t\tthis._data.core.rtl = (this.element.css(\"direction\") === \"rtl\");\n\t\t\tthis.element[this._data.core.rtl ? 'addClass' : 'removeClass'](\"jstree-rtl\");\n\t\t\tthis.element.attr('role','tree');\n\n\t\t\tthis.bind();\n\t\t\t/**\n\t\t\t * triggered after all events are bound\n\t\t\t * @event\n\t\t\t * @name init.jstree\n\t\t\t */\n\t\t\tthis.trigger(\"init\");\n\n\t\t\tthis._data.core.original_container_html = this.element.find(\" > ul > li\").clone(true);\n\t\t\tthis._data.core.original_container_html\n\t\t\t\t.find(\"li\").addBack()\n\t\t\t\t.contents().filter(function() {\n\t\t\t\t\treturn this.nodeType === 3 && (!this.nodeValue || /^\\s+$/.test(this.nodeValue));\n\t\t\t\t})\n\t\t\t\t.remove();\n\t\t\tthis.element.html(\"<\"+\"ul class='jstree-container-ul jstree-children'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\n\t\t\tthis._data.core.li_height = this.get_container_ul().children(\"li:eq(0)\").height() || 24;\n\t\t\t/**\n\t\t\t * triggered after the loading text is shown and before loading starts\n\t\t\t * @event\n\t\t\t * @name loading.jstree\n\t\t\t */\n\t\t\tthis.trigger(\"loading\");\n\t\t\tthis.load_node('#');\n\t\t},\n\t\t/**\n\t\t * destroy an instance\n\t\t * @name destroy()\n\t\t * @param  {Boolean} keep_html if not set to `true` the container will be emptied, otherwise the current DOM elements will be kept intact\n\t\t */\n\t\tdestroy : function (keep_html) {\n\t\t\tif(!keep_html) { this.element.empty(); }\n\t\t\tthis.element.unbind(\"destroyed\", this.teardown);\n\t\t\tthis.teardown();\n\t\t},\n\t\t/**\n\t\t * part of the destroying of an instance. Used internally.\n\t\t * @private\n\t\t * @name teardown()\n\t\t */\n\t\tteardown : function () {\n\t\t\tthis.unbind();\n\t\t\tthis.element\n\t\t\t\t.removeClass('jstree')\n\t\t\t\t.removeData('jstree')\n\t\t\t\t.find(\"[class^='jstree']\")\n\t\t\t\t\t.addBack()\n\t\t\t\t\t.attr(\"class\", function () { return this.className.replace(/jstree[^ ]*|$/ig,''); });\n\t\t\tthis.element = null;\n\t\t},\n\t\t/**\n\t\t * bind all events. Used internally.\n\t\t * @private\n\t\t * @name bind()\n\t\t */\n\t\tbind : function () {\n\t\t\tthis.element\n\t\t\t\t.on(\"dblclick.jstree\", function () {\n\t\t\t\t\t\tif(document.selection && document.selection.empty) {\n\t\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif(window.getSelection) {\n\t\t\t\t\t\t\t\tvar sel = window.getSelection();\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tsel.removeAllRanges();\n\t\t\t\t\t\t\t\t\tsel.collapse();\n\t\t\t\t\t\t\t\t} catch (ignore) { }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t.on(\"click.jstree\", \".jstree-ocl\", $.proxy(function (e) {\n\t\t\t\t\t\tthis.toggle_node(e.target);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t$(e.currentTarget).focus();\n\t\t\t\t\t\tthis.activate_node(e.currentTarget, e);\n\t\t\t\t\t}, this))\n\t\t\t\t.on('keydown.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tif(e.target.tagName === \"INPUT\") { return true; }\n\t\t\t\t\t\tvar o = null;\n\t\t\t\t\t\tswitch(e.which) {\n\t\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\t\te.type = \"click\";\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 37:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tif(this.is_open(e.currentTarget)) {\n\t\t\t\t\t\t\t\t\tthis.close_node(e.currentTarget);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\to = this.get_prev_dom(e.currentTarget);\n\t\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 38:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_prev_dom(e.currentTarget);\n\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tif(this.is_closed(e.currentTarget)) {\n\t\t\t\t\t\t\t\t\tthis.open_node(e.currentTarget, function (o) { this.get_node(o, true).children('.jstree-anchor').focus(); });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\to = this.get_next_dom(e.currentTarget);\n\t\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 40:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_next_dom(e.currentTarget);\n\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t// delete\n\t\t\t\t\t\t\tcase 46:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_node(e.currentTarget);\n\t\t\t\t\t\t\t\tif(o && o.id && o.id !== '#') {\n\t\t\t\t\t\t\t\t\to = this.is_selected(o) ? this.get_selected() : o;\n\t\t\t\t\t\t\t\t\t// this.delete_node(o);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t// f2\n\t\t\t\t\t\t\tcase 113:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_node(e.currentTarget);\n\t\t\t\t\t\t\t\t/*!\n\t\t\t\t\t\t\t\tif(o && o.id && o.id !== '#') {\n\t\t\t\t\t\t\t\t\t// this.edit(o);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t// console.log(e.which);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"load_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tif(data.status) {\n\t\t\t\t\t\t\tif(data.node.id === '#' && !this._data.core.loaded) {\n\t\t\t\t\t\t\t\tthis._data.core.loaded = true;\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * triggered after the root node is loaded for the first time\n\t\t\t\t\t\t\t\t * @event\n\t\t\t\t\t\t\t\t * @name loaded.jstree\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tthis.trigger(\"loaded\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!this._data.core.ready && !this.get_container_ul().find('.jstree-loading:eq(0)').length) {\n\t\t\t\t\t\t\t\tthis._data.core.ready = true;\n\t\t\t\t\t\t\t\tif(this._data.core.selected.length) {\n\t\t\t\t\t\t\t\t\tif(this.settings.core.expand_selected_onload) {\n\t\t\t\t\t\t\t\t\t\tvar tmp = [], i, j;\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\ttmp = tmp.concat(this._model.data[this._data.core.selected[i]].parents);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttmp = $.vakata.array_unique(tmp);\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\tthis.open_node(tmp[i], false, 0);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'ready', 'selected' : this._data.core.selected });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * triggered after all nodes are finished loading\n\t\t\t\t\t\t\t\t * @event\n\t\t\t\t\t\t\t\t * @name ready.jstree\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tsetTimeout($.proxy(function () { this.trigger(\"ready\"); }, this), 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t// THEME RELATED\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\n\t\t\t\t\t\tvar s = this.settings.core.themes;\n\t\t\t\t\t\tthis._data.core.themes.dots\t\t\t= s.dots;\n\t\t\t\t\t\tthis._data.core.themes.stripes\t\t= s.stripes;\n\t\t\t\t\t\tthis._data.core.themes.icons\t\t= s.icons;\n\t\t\t\t\t\tthis.set_theme(s.name || \"default\", s.url);\n\t\t\t\t\t\tthis.set_theme_variant(s.variant);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis[ this._data.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.stripes ? \"show_stripes\" : \"hide_stripes\" ]();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('blur.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\t$(e.currentTarget).filter('.jstree-hovered').mouseleave();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('focus.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.element.find('.jstree-hovered').not(e.currentTarget).mouseleave();\n\t\t\t\t\t\t$(e.currentTarget).mouseenter();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('mouseenter.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\n\t\t\t\t\t}, this))\n\t\t\t\t.on('mouseleave.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\n\t\t\t\t\t}, this));\n\t\t},\n\t\t/**\n\t\t * part of the destroying of an instance. Used internally.\n\t\t * @private\n\t\t * @name unbind()\n\t\t */\n\t\tunbind : function () {\n\t\t\tthis.element.off('.jstree');\n\t\t\t$(document).off('.jstree-' + this._id);\n\t\t},\n\t\t/**\n\t\t * trigger an event. Used internally.\n\t\t * @private\n\t\t * @name trigger(ev [, data])\n\t\t * @param  {String} ev the name of the event to trigger\n\t\t * @param  {Object} data additional data to pass with the event\n\t\t */\n\t\ttrigger : function (ev, data) {\n\t\t\tif(!data) {\n\t\t\t\tdata = {};\n\t\t\t}\n\t\t\tdata.instance = this;\n\t\t\tthis.element.triggerHandler(ev.replace('.jstree','') + '.jstree', data);\n\t\t},\n\t\t/**\n\t\t * returns the jQuery extended instance container\n\t\t * @name get_container()\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_container : function () {\n\t\t\treturn this.element;\n\t\t},\n\t\t/**\n\t\t * returns the jQuery extended main UL node inside the instance container. Used internally.\n\t\t * @private\n\t\t * @name get_container_ul()\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_container_ul : function () {\n\t\t\treturn this.element.children(\".jstree-children:eq(0)\");\n\t\t},\n\t\t/**\n\t\t * gets string replacements (localization). Used internally.\n\t\t * @private\n\t\t * @name get_string(key)\n\t\t * @param  {String} key\n\t\t * @return {String}\n\t\t */\n\t\tget_string : function (key) {\n\t\t\tvar a = this.settings.core.strings;\n\t\t\tif($.isFunction(a)) { return a.call(this, key); }\n\t\t\tif(a && a[key]) { return a[key]; }\n\t\t\treturn key;\n\t\t},\n\t\t/**\n\t\t * gets the first child of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _firstChild(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_firstChild : function (dom) {\n\t\t\tdom = dom ? dom.firstChild : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.nextSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * gets the next sibling of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _nextSibling(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_nextSibling : function (dom) {\n\t\t\tdom = dom ? dom.nextSibling : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.nextSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * gets the previous sibling of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _previousSibling(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_previousSibling : function (dom) {\n\t\t\tdom = dom ? dom.previousSibling : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.previousSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * get the JSON representation of a node (or the actual jQuery extended DOM node) by using any input (child DOM element, ID string, selector, etc)\n\t\t * @name get_node(obj [, as_dom])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} as_dom\n\t\t * @return {Object|jQuery}\n\t\t */\n\t\tget_node : function (obj, as_dom) {\n\t\t\tif(obj && obj.id) {\n\t\t\t\tobj = obj.id;\n\t\t\t}\n\t\t\tvar dom;\n\t\t\ttry {\n\t\t\t\tif(this._model.data[obj]) {\n\t\t\t\t\tobj = this._model.data[obj];\n\t\t\t\t}\n\t\t\t\telse if(((dom = $(obj, this.element)).length || (dom = $('#' + obj.replace($.jstree.idregex,'\\\\$&'), this.element)).length) && this._model.data[dom.closest('.jstree-node').attr('id')]) {\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\n\t\t\t\t}\n\t\t\t\telse if((dom = $(obj, this.element)).length && dom.hasClass('jstree')) {\n\t\t\t\t\tobj = this._model.data['#'];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif(as_dom) {\n\t\t\t\t\tobj = obj.id === '#' ? this.element : $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t} catch (ex) { return false; }\n\t\t},\n\t\t/**\n\t\t * get the path to a node, either consisting of node texts, or of node IDs, optionally glued together (otherwise an array)\n\t\t * @name get_path(obj [, glue, ids])\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {String} glue if you want the path as a string - pass the glue here (for example '/'), if a falsy value is supplied here, an array is returned\n\t\t * @param  {Boolean} ids if set to true build the path using ID, otherwise node text is used\n\t\t * @return {mixed}\n\t\t */\n\t\tget_path : function (obj, glue, ids) {\n\t\t\tobj = obj.parents ? obj : this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#' || !obj.parents) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar i, j, p = [];\n\t\t\tp.push(ids ? obj.id : obj.text);\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tp.push(ids ? obj.parents[i] : this.get_text(obj.parents[i]));\n\t\t\t}\n\t\t\tp = p.reverse().slice(1);\n\t\t\treturn glue ? p.join(glue) : p;\n\t\t},\n\t\t/**\n\t\t * get the next visible node that is below the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\n\t\t * @name get_next_dom(obj [, strict])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} strict\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_next_dom : function (obj, strict) {\n\t\t\tvar tmp;\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\ttmp = this._firstChild(this.get_container_ul()[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strict) {\n\t\t\t\ttmp = this._nextSibling(obj[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(obj.hasClass(\"jstree-open\")) {\n\t\t\t\ttmp = this._firstChild(obj.children('.jstree-children')[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif((tmp = this._nextSibling(obj[0])) !== null) {\n\t\t\t\treturn $(tmp);\n\t\t\t}\n\t\t\treturn obj.parentsUntil(\".jstree\",\".jstree-node\").next(\".jstree-node\").eq(0);\n\t\t},\n\t\t/**\n\t\t * get the previous visible node that is above the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\n\t\t * @name get_prev_dom(obj [, strict])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} strict\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_prev_dom : function (obj, strict) {\n\t\t\tvar tmp;\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\ttmp = this.get_container_ul()[0].lastChild;\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strict) {\n\t\t\t\ttmp = this._previousSibling(obj[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif((tmp = this._previousSibling(obj[0])) !== null) {\n\t\t\t\tobj = $(tmp);\n\t\t\t\twhile(obj.hasClass(\"jstree-open\")) {\n\t\t\t\t\tobj = obj.children(\".jstree-children:eq(0)\").children(\".jstree-node:last\");\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\ttmp = obj[0].parentNode.parentNode;\n\t\t\treturn tmp && tmp.className && tmp.className.indexOf('jstree-node') !== -1 ? $(tmp) : false;\n\t\t},\n\t\t/**\n\t\t * get the parent ID of a node\n\t\t * @name get_parent(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {String}\n\t\t */\n\t\tget_parent : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.parent;\n\t\t},\n\t\t/**\n\t\t * get a jQuery collection of all the children of a node (node must be rendered)\n\t\t * @name get_children_dom(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_children_dom : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\treturn this.get_container_ul().children(\".jstree-node\");\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.children(\".jstree-children\").children(\".jstree-node\");\n\t\t},\n\t\t/**\n\t\t * checks if a node has children\n\t\t * @name is_parent(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_parent : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && (obj.state.loaded === false || obj.children.length > 0);\n\t\t},\n\t\t/**\n\t\t * checks if a node is loaded (its children are available)\n\t\t * @name is_loaded(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_loaded : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state.loaded;\n\t\t},\n\t\t/**\n\t\t * check if a node is currently loading (fetching children)\n\t\t * @name is_loading(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_loading : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state && obj.state.loading;\n\t\t},\n\t\t/**\n\t\t * check if a node is opened\n\t\t * @name is_open(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_open : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state.opened;\n\t\t},\n\t\t/**\n\t\t * check if a node is in a closed state\n\t\t * @name is_closed(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_closed : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && this.is_parent(obj) && !obj.state.opened;\n\t\t},\n\t\t/**\n\t\t * check if a node has no children\n\t\t * @name is_leaf(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_leaf : function (obj) {\n\t\t\treturn !this.is_parent(obj);\n\t\t},\n\t\t/**\n\t\t * loads a node (fetches its children using the `core.data` setting). Multiple nodes can be passed to by using an array.\n\t\t * @name load_node(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives two arguments - the node and a boolean status\n\t\t * @return {Boolean}\n\t\t * @trigger load_node.jstree\n\t\t */\n\t\tload_node : function (obj, callback) {\n\t\t\tvar k, l, i, j, c;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tthis._load_nodes(obj.slice(), callback);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) {\n\t\t\t\tif(callback) { callback.call(this, obj, false); }\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// if(obj.state.loading) { } // the node is already loading - just wait for it to load and invoke callback? but if called implicitly it should be loaded again?\n\t\t\tif(obj.state.loaded) {\n\t\t\t\tobj.state.loaded = false;\n\t\t\t\tfor(k = 0, l = obj.children_d.length; k < l; k++) {\n\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_remove_item(this._model.data[obj.parents[i]].children_d, obj.children_d[k]);\n\t\t\t\t\t}\n\t\t\t\t\tif(this._model.data[obj.children_d[k]].state.selected) {\n\t\t\t\t\t\tc = true;\n\t\t\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.children_d[k]);\n\t\t\t\t\t}\n\t\t\t\t\tdelete this._model.data[obj.children_d[k]];\n\t\t\t\t}\n\t\t\t\tobj.children = [];\n\t\t\t\tobj.children_d = [];\n\t\t\t\tif(c) {\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'load_node', 'node' : obj, 'selected' : this._data.core.selected });\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.state.loading = true;\n\t\t\tthis.get_node(obj, true).addClass(\"jstree-loading\");\n\t\t\tthis._load_node(obj, $.proxy(function (status) {\n\t\t\t\tobj = this._model.data[obj.id];\n\t\t\t\tobj.state.loading = false;\n\t\t\t\tobj.state.loaded = status;\n\t\t\t\tvar dom = this.get_node(obj, true);\n\t\t\t\tif(obj.state.loaded && !obj.children.length && dom && dom.length && !dom.hasClass('jstree-leaf')) {\n\t\t\t\t\tdom.removeClass('jstree-closed jstree-open').addClass('jstree-leaf');\n\t\t\t\t}\n\t\t\t\tdom.removeClass(\"jstree-loading\");\n\t\t\t\t/**\n\t\t\t\t * triggered after a node is loaded\n\t\t\t\t * @event\n\t\t\t\t * @name load_node.jstree\n\t\t\t\t * @param {Object} node the node that was loading\n\t\t\t\t * @param {Boolean} status was the node loaded successfully\n\t\t\t\t */\n\t\t\t\tthis.trigger('load_node', { \"node\" : obj, \"status\" : status });\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, status);\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * load an array of nodes (will also load unavailable nodes as soon as the appear in the structure). Used internally.\n\t\t * @private\n\t\t * @name _load_nodes(nodes [, callback])\n\t\t * @param  {array} nodes\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - the array passed to _load_nodes\n\t\t */\n\t\t_load_nodes : function (nodes, callback, is_callback) {\n\t\t\tvar r = true,\n\t\t\t\tc = function () { this._load_nodes(nodes, callback, true); },\n\t\t\t\tm = this._model.data, i, j;\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\tif(m[nodes[i]] && (!m[nodes[i]].state.loaded || !is_callback)) {\n\t\t\t\t\tif(!this.is_loading(nodes[i])) {\n\t\t\t\t\t\tthis.load_node(nodes[i], c);\n\t\t\t\t\t}\n\t\t\t\t\tr = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(r) {\n\t\t\t\tif(callback && !callback.done) {\n\t\t\t\t\tcallback.call(this, nodes);\n\t\t\t\t\tcallback.done = true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * handles the actual loading of a node. Used only internally.\n\t\t * @private\n\t\t * @name _load_node(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - a boolean status\n\t\t * @return {Boolean}\n\t\t */\n\t\t_load_node : function (obj, callback) {\n\t\t\tvar s = this.settings.core.data, t;\n\t\t\t// use original HTML\n\t\t\tif(!s) {\n\t\t\t\tif(obj.id === '#') {\n\t\t\t\t\treturn this._append_html_data(obj, this._data.core.original_container_html.clone(true), function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t// return callback.call(this, obj.id === '#' ? this._append_html_data(obj, this._data.core.original_container_html.clone(true)) : false);\n\t\t\t}\n\t\t\tif($.isFunction(s)) {\n\t\t\t\treturn s.call(this, obj, $.proxy(function (d) {\n\t\t\t\t\tif(d === false) {\n\t\t\t\t\t\tcallback.call(this, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d, function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t\t// return d === false ? callback.call(this, false) : callback.call(this, this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d));\n\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(typeof s === 'object') {\n\t\t\t\tif(s.url) {\n\t\t\t\t\ts = $.extend(true, {}, s);\n\t\t\t\t\tif($.isFunction(s.url)) {\n\t\t\t\t\t\ts.url = s.url.call(this, obj);\n\t\t\t\t\t}\n\t\t\t\t\tif($.isFunction(s.data)) {\n\t\t\t\t\t\ts.data = s.data.call(this, obj);\n\t\t\t\t\t}\n\t\t\t\t\treturn $.ajax(s)\n\t\t\t\t\t\t.done($.proxy(function (d,t,x) {\n\t\t\t\t\t\t\t\tvar type = x.getResponseHeader('Content-Type');\n\t\t\t\t\t\t\t\tif(type.indexOf('json') !== -1 || typeof d === \"object\") {\n\t\t\t\t\t\t\t\t\treturn this._append_json_data(obj, d, function (status) { callback.call(this, status); });\n\t\t\t\t\t\t\t\t\t//return callback.call(this, this._append_json_data(obj, d));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(type.indexOf('html') !== -1 || typeof d === \"string\") {\n\t\t\t\t\t\t\t\t\treturn this._append_html_data(obj, $(d), function (status) { callback.call(this, status); });\n\t\t\t\t\t\t\t\t\t// return callback.call(this, this._append_html_data(obj, $(d)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : x }) };\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t.fail($.proxy(function (f) {\n\t\t\t\t\t\t\t\tcallback.call(this, false);\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : f }) };\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t\tt = ($.isArray(s) || $.isPlainObject(s)) ? JSON.parse(JSON.stringify(s)) : s;\n\t\t\t\tif(obj.id === '#') {\n\t\t\t\t\treturn this._append_json_data(obj, t, function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_05', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t//return callback.call(this, (obj.id === \"#\" ? this._append_json_data(obj, t) : false) );\n\t\t\t}\n\t\t\tif(typeof s === 'string') {\n\t\t\t\tif(obj.id === '#') {\n\t\t\t\t\treturn this._append_html_data(obj, $(s), function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_06', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t//return callback.call(this, (obj.id === \"#\" ? this._append_html_data(obj, $(s)) : false) );\n\t\t\t}\n\t\t\treturn callback.call(this, false);\n\t\t},\n\t\t/**\n\t\t * adds a node to the list of nodes to redraw. Used only internally.\n\t\t * @private\n\t\t * @name _node_changed(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t */\n\t\t_node_changed : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(obj) {\n\t\t\t\tthis._model.changed.push(obj.id);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * appends HTML content to the tree. Used internally.\n\t\t * @private\n\t\t * @name _append_html_data(obj, data)\n\t\t * @param  {mixed} obj the node to append to\n\t\t * @param  {String} data the HTML string to parse and append\n\t\t * @trigger model.jstree, changed.jstree\n\t\t */\n\t\t_append_html_data : function (dom, data, cb) {\n\t\t\tdom = this.get_node(dom);\n\t\t\tdom.children = [];\n\t\t\tdom.children_d = [];\n\t\t\tvar dat = data.is('ul') ? data.children() : data,\n\t\t\t\tpar = dom.id,\n\t\t\t\tchd = [],\n\t\t\t\tdpc = [],\n\t\t\t\tm = this._model.data,\n\t\t\t\tp = m[par],\n\t\t\t\ts = this._data.core.selected.length,\n\t\t\t\ttmp, i, j;\n\t\t\tdat.each($.proxy(function (i, v) {\n\t\t\t\ttmp = this._parse_model_from_html($(v), par, p.parents.concat());\n\t\t\t\tif(tmp) {\n\t\t\t\t\tchd.push(tmp);\n\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tp.children = chd;\n\t\t\tp.children_d = dpc;\n\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when new data is inserted to the tree model\n\t\t\t * @event\n\t\t\t * @name model.jstree\n\t\t\t * @param {Array} nodes an array of node IDs\n\t\t\t * @param {String} parent the parent ID of the nodes\n\t\t\t */\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, 'parent' : par });\n\t\t\tif(par !== '#') {\n\t\t\t\tthis._node_changed(par);\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.get_container_ul().children('.jstree-initial-node').remove();\n\t\t\t\tthis.redraw(true);\n\t\t\t}\n\t\t\tif(this._data.core.selected.length !== s) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\n\t\t\t}\n\t\t\tcb.call(this, true);\n\t\t},\n\t\t/**\n\t\t * appends JSON content to the tree. Used internally.\n\t\t * @private\n\t\t * @name _append_json_data(obj, data)\n\t\t * @param  {mixed} obj the node to append to\n\t\t * @param  {String} data the JSON object to parse and append\n\t\t * @trigger model.jstree, changed.jstree\n\t\t */\n\t\t_append_json_data : function (dom, data, cb) {\n\t\t\tdom = this.get_node(dom);\n\t\t\tdom.children = [];\n\t\t\tdom.children_d = [];\n\t\t\t// *%$@!!!\n\t\t\tif(data.d) {\n\t\t\t\tdata = data.d;\n\t\t\t\tif(typeof data === \"string\") {\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!$.isArray(data)) { data = [data]; }\n\t\t\tvar w = null,\n\t\t\t\targs = {\n\t\t\t\t\t'df'\t: this._model.default_state,\n\t\t\t\t\t'dat'\t: data,\n\t\t\t\t\t'par'\t: dom.id,\n\t\t\t\t\t'm'\t\t: this._model.data,\n\t\t\t\t\t't_id'\t: this._id,\n\t\t\t\t\t't_cnt'\t: this._cnt,\n\t\t\t\t\t'sel'\t: this._data.core.selected\n\t\t\t\t},\n\t\t\t\tfunc = function (data, undefined) {\n\t\t\t\t\tif(data.data) { data = data.data; }\n\t\t\t\t\tvar dat = data.dat,\n\t\t\t\t\t\tpar = data.par,\n\t\t\t\t\t\tchd = [],\n\t\t\t\t\t\tdpc = [],\n\t\t\t\t\t\tadd = [],\n\t\t\t\t\t\tdf = data.df,\n\t\t\t\t\t\tt_id = data.t_id,\n\t\t\t\t\t\tt_cnt = data.t_cnt,\n\t\t\t\t\t\tm = data.m,\n\t\t\t\t\t\tp = m[par],\n\t\t\t\t\t\tsel = data.sel,\n\t\t\t\t\t\ttmp, i, j, rslt,\n\t\t\t\t\t\tparse_flat = function (d, p, ps) {\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\n\t\t\t\t\t\t\tvar tid = d.id.toString(),\n\t\t\t\t\t\t\t\ti, j, c, e,\n\t\t\t\t\t\t\t\ttmp = {\n\t\t\t\t\t\t\t\t\tid\t\t\t: tid,\n\t\t\t\t\t\t\t\t\ttext\t\t: d.text || '',\n\t\t\t\t\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\n\t\t\t\t\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\t\t\t\t\tchildren\t: d.children || [],\n\t\t\t\t\t\t\t\t\tchildren_d\t: d.children_d || [],\n\t\t\t\t\t\t\t\t\tdata\t\t: d.data,\n\t\t\t\t\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\t\t\t\t\toriginal\t: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor(i in df) {\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data) {\n\t\t\t\t\t\t\t\ttmp.data = d.data;\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.state) {\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\n\t\t\t\t\t\t\t\ttmp.children = [];\n\t\t\t\t\t\t\t\ttmp.children_d = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\n\t\t\t\t\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\tc = parse_flat(m[tmp.children[i]], tmp.id, ps);\n\t\t\t\t\t\t\t\te = m[c];\n\t\t\t\t\t\t\t\ttmp.children_d.push(c);\n\t\t\t\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete d.data;\n\t\t\t\t\t\t\tdelete d.children;\n\t\t\t\t\t\t\tm[tmp.id].original = d;\n\t\t\t\t\t\t\tif(tmp.state.selected) {\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn tmp.id;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tparse_nest = function (d, p, ps) {\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\n\t\t\t\t\t\t\tvar tid = false, i, j, c, e, tmp;\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\ttid = 'j' + t_id + '_' + (++t_cnt);\n\t\t\t\t\t\t\t} while(m[tid]);\n\n\t\t\t\t\t\t\ttmp = {\n\t\t\t\t\t\t\t\tid\t\t\t: false,\n\t\t\t\t\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\n\t\t\t\t\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\n\t\t\t\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\t\t\t\tchildren\t: [],\n\t\t\t\t\t\t\t\tchildren_d\t: [],\n\t\t\t\t\t\t\t\tdata\t\t: null,\n\t\t\t\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\t\t\t\toriginal\t: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor(i in df) {\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\n\t\t\t\t\t\t\tif(d && d.text) { tmp.text = d.text; }\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data) {\n\t\t\t\t\t\t\t\ttmp.data = d.data;\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.state) {\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(tmp.li_attr.id && !tmp.id) {\n\t\t\t\t\t\t\t\ttmp.id = tmp.li_attr.id.toString();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.id) {\n\t\t\t\t\t\t\t\ttmp.id = tid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tmp.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children.length) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc = parse_nest(d.children[i], tmp.id, ps);\n\t\t\t\t\t\t\t\t\te = m[c];\n\t\t\t\t\t\t\t\t\ttmp.children.push(c);\n\t\t\t\t\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\n\t\t\t\t\t\t\t\ttmp.children = [];\n\t\t\t\t\t\t\t\ttmp.children_d = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete d.data;\n\t\t\t\t\t\t\tdelete d.children;\n\t\t\t\t\t\t\ttmp.original = d;\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\n\t\t\t\t\t\t\tif(tmp.state.selected) {\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn tmp.id;\n\t\t\t\t\t\t};\n\n\t\t\t\t\tif(dat.length && dat[0].id !== undefined && dat[0].parent !== undefined) {\n\t\t\t\t\t\t// Flat JSON support (for easy import from DB):\n\t\t\t\t\t\t// 1) convert to object (foreach)\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\tif(!dat[i].children) {\n\t\t\t\t\t\t\t\tdat[i].children = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[dat[i].id.toString()] = dat[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 2) populate children (foreach)\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\tm[dat[i].parent.toString()].children.push(dat[i].id.toString());\n\t\t\t\t\t\t\t// populate parent.children_d\n\t\t\t\t\t\t\tp.children_d.push(dat[i].id.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 3) normalize && populate parents and children_d with recursion\n\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = parse_flat(m[p.children[i]], par, p.parents.concat());\n\t\t\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ?) three_state selection - p.state.selected && t - (if three_state foreach(dat => ch) -> foreach(parents) if(parent.selected) child.selected = true;\n\t\t\t\t\t\trslt = {\n\t\t\t\t\t\t\t'cnt' : t_cnt,\n\t\t\t\t\t\t\t'mod' : m,\n\t\t\t\t\t\t\t'sel' : sel,\n\t\t\t\t\t\t\t'par' : par,\n\t\t\t\t\t\t\t'dpc' : dpc,\n\t\t\t\t\t\t\t'add' : add\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = parse_nest(dat[i], par, p.parents.concat());\n\t\t\t\t\t\t\tif(tmp) {\n\t\t\t\t\t\t\t\tchd.push(tmp);\n\t\t\t\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp.children = chd;\n\t\t\t\t\t\tp.children_d = dpc;\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trslt = {\n\t\t\t\t\t\t\t'cnt' : t_cnt,\n\t\t\t\t\t\t\t'mod' : m,\n\t\t\t\t\t\t\t'sel' : sel,\n\t\t\t\t\t\t\t'par' : par,\n\t\t\t\t\t\t\t'dpc' : dpc,\n\t\t\t\t\t\t\t'add' : add\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn rslt;\n\t\t\t\t},\n\t\t\t\trslt = function (rslt, worker) {\n\t\t\t\t\tthis._cnt = rslt.cnt;\n\t\t\t\t\tthis._model.data = rslt.mod; // breaks the reference in load_node - careful\n\n\t\t\t\t\tif(worker) {\n\t\t\t\t\t\tvar i, j, a = rslt.add, r = rslt.sel, s = this._data.core.selected.slice(), m = this._model.data;\n\t\t\t\t\t\t// if selection was changed while calculating in worker\n\t\t\t\t\t\tif(r.length !== s.length || $.vakata.array_unique(r.concat(s)).length !== r.length) {\n\t\t\t\t\t\t\t// deselect nodes that are no longer selected\n\t\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif($.inArray(r[i], a) === -1 && $.inArray(r[i], s) === -1) {\n\t\t\t\t\t\t\t\t\tm[r[i]].state.selected = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// select nodes that were selected in the mean time\n\t\t\t\t\t\t\tfor(i = 0, j = s.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif($.inArray(s[i], r) === -1) {\n\t\t\t\t\t\t\t\t\tm[s[i]].state.selected = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(rslt.add.length) {\n\t\t\t\t\t\tthis._data.core.selected = this._data.core.selected.concat(rslt.add);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger('model', { \"nodes\" : rslt.dpc, 'parent' : rslt.par });\n\n\t\t\t\t\tif(rslt.par !== '#') {\n\t\t\t\t\t\tthis._node_changed(rslt.par);\n\t\t\t\t\t\tthis.redraw();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// this.get_container_ul().children('.jstree-initial-node').remove();\n\t\t\t\t\t\tthis.redraw(true);\n\t\t\t\t\t}\n\t\t\t\t\tif(rslt.add.length) {\n\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\n\t\t\t\t\t}\n\t\t\t\t\tcb.call(this, true);\n\t\t\t\t};\n\t\t\tif(this.settings.core.worker && window.Blob && window.URL && window.Worker) {\n\t\t\t\ttry {\n\t\t\t\t\tif(this._wrk === null) {\n\t\t\t\t\t\tthis._wrk = window.URL.createObjectURL(\n\t\t\t\t\t\t\tnew window.Blob(\n\t\t\t\t\t\t\t\t['self.onmessage = ' + func.toString().replace(/return ([^;}]+)[\\s;}]+$/, 'postMessage($1);}')],\n\t\t\t\t\t\t\t\t{type:\"text/javascript\"}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tw = new window.Worker(this._wrk);\n\t\t\t\t\tw.onmessage = $.proxy(function (e) {\n\t\t\t\t\t\trslt.call(this, e.data, true);\n\t\t\t\t\t\tthis._data.core.working = false;\n\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\n\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t\tif(!this._data.core.working) {\n\t\t\t\t\t\tthis._data.core.working = true;\n\t\t\t\t\t\tw.postMessage(args);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._data.core.worker_queue.push([dom, data, cb]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\trslt.call(this, func(args), false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\trslt.call(this, func(args), false);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * parses a node from a jQuery object and appends them to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_html(d [, p, ps])\n\t\t * @param  {jQuery} d the jQuery object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_html : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = [].concat(ps); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar c, e, m = this._model.data,\n\t\t\t\tdata = {\n\t\t\t\t\tid\t\t\t: false,\n\t\t\t\t\ttext\t\t: false,\n\t\t\t\t\ticon\t\t: true,\n\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\tchildren\t: [],\n\t\t\t\t\tchildren_d\t: [],\n\t\t\t\t\tdata\t\t: null,\n\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\toriginal\t: false\n\t\t\t\t}, i, tmp, tid;\n\t\t\tfor(i in this._model.default_state) {\n\t\t\t\tif(this._model.default_state.hasOwnProperty(i)) {\n\t\t\t\t\tdata.state[i] = this._model.default_state[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = $.vakata.attributes(d, true);\n\t\t\t$.each(tmp, function (i, v) {\n\t\t\t\tv = $.trim(v);\n\t\t\t\tif(!v.length) { return true; }\n\t\t\t\tdata.li_attr[i] = v;\n\t\t\t\tif(i === 'id') {\n\t\t\t\t\tdata.id = v.toString();\n\t\t\t\t}\n\t\t\t});\n\t\t\ttmp = d.children('a').eq(0);\n\t\t\tif(tmp.length) {\n\t\t\t\ttmp = $.vakata.attributes(tmp, true);\n\t\t\t\t$.each(tmp, function (i, v) {\n\t\t\t\t\tv = $.trim(v);\n\t\t\t\t\tif(v.length) {\n\t\t\t\t\t\tdata.a_attr[i] = v;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\ttmp = d.children(\"a:eq(0)\").length ? d.children(\"a:eq(0)\").clone() : d.clone();\n\t\t\ttmp.children(\"ins, i, ul\").remove();\n\t\t\ttmp = tmp.html();\n\t\t\ttmp = $('<div />').html(tmp);\n\t\t\tdata.text = this.settings.core.force_text ? tmp.text() : tmp.html();\n\t\t\ttmp = d.data();\n\t\t\tdata.data = tmp ? $.extend(true, {}, tmp) : null;\n\t\t\tdata.state.opened = d.hasClass('jstree-open');\n\t\t\tdata.state.selected = d.children('a').hasClass('jstree-clicked');\n\t\t\tdata.state.disabled = d.children('a').hasClass('jstree-disabled');\n\t\t\tif(data.data && data.data.jstree) {\n\t\t\t\tfor(i in data.data.jstree) {\n\t\t\t\t\tif(data.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\tdata.state[i] = data.data.jstree[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = d.children(\"a\").children(\".jstree-themeicon\");\n\t\t\tif(tmp.length) {\n\t\t\t\tdata.icon = tmp.hasClass('jstree-themeicon-hidden') ? false : tmp.attr('rel');\n\t\t\t}\n\t\t\tif(data.state.icon) {\n\t\t\t\tdata.icon = data.state.icon;\n\t\t\t}\n\t\t\ttmp = d.children(\"ul\").children(\"li\");\n\t\t\tdo {\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\n\t\t\t} while(m[tid]);\n\t\t\tdata.id = data.li_attr.id ? data.li_attr.id.toString() : tid;\n\t\t\tif(tmp.length) {\n\t\t\t\ttmp.each($.proxy(function (i, v) {\n\t\t\t\t\tc = this._parse_model_from_html($(v), data.id, ps);\n\t\t\t\t\te = this._model.data[c];\n\t\t\t\t\tdata.children.push(c);\n\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\tdata.children_d = data.children_d.concat(e.children_d);\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\t\t\t\tdata.children_d = data.children_d.concat(data.children);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(d.hasClass('jstree-closed')) {\n\t\t\t\t\tdata.state.loaded = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(data.li_attr['class']) {\n\t\t\t\tdata.li_attr['class'] = data.li_attr['class'].replace('jstree-closed','').replace('jstree-open','');\n\t\t\t}\n\t\t\tif(data.a_attr['class']) {\n\t\t\t\tdata.a_attr['class'] = data.a_attr['class'].replace('jstree-clicked','').replace('jstree-disabled','');\n\t\t\t}\n\t\t\tm[data.id] = data;\n\t\t\tif(data.state.selected) {\n\t\t\t\tthis._data.core.selected.push(data.id);\n\t\t\t}\n\t\t\treturn data.id;\n\t\t},\n\t\t/**\n\t\t * parses a node from a JSON object (used when dealing with flat data, which has no nesting of children, but has id and parent properties) and appends it to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_flat_json(d [, p, ps])\n\t\t * @param  {Object} d the JSON object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_flat_json : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = ps.concat(); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar tid = d.id.toString(),\n\t\t\t\tm = this._model.data,\n\t\t\t\tdf = this._model.default_state,\n\t\t\t\ti, j, c, e,\n\t\t\t\ttmp = {\n\t\t\t\t\tid\t\t\t: tid,\n\t\t\t\t\ttext\t\t: d.text || '',\n\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\n\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\tchildren\t: d.children || [],\n\t\t\t\t\tchildren_d\t: d.children_d || [],\n\t\t\t\t\tdata\t\t: d.data,\n\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\toriginal\t: false\n\t\t\t\t};\n\t\t\tfor(i in df) {\n\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t}\n\t\t\tif(d && d.data) {\n\t\t\t\ttmp.data = d.data;\n\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\tfor (i in d.state) {\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\ttmp.li_attr.id = tid;\n\t\t\t}\n\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\ttmp.state.loaded = false;\n\t\t\t\ttmp.children = [];\n\t\t\t\ttmp.children_d = [];\n\t\t\t}\n\t\t\tm[tmp.id] = tmp;\n\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\n\t\t\t\tc = this._parse_model_from_flat_json(m[tmp.children[i]], tmp.id, ps);\n\t\t\t\te = m[c];\n\t\t\t\ttmp.children_d.push(c);\n\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete d.data;\n\t\t\tdelete d.children;\n\t\t\tm[tmp.id].original = d;\n\t\t\tif(tmp.state.selected) {\n\t\t\t\tthis._data.core.selected.push(tmp.id);\n\t\t\t}\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * parses a node from a JSON object and appends it to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_json(d [, p, ps])\n\t\t * @param  {Object} d the JSON object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_json : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = ps.concat(); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar tid = false, i, j, c, e, m = this._model.data, df = this._model.default_state, tmp;\n\t\t\tdo {\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\n\t\t\t} while(m[tid]);\n\n\t\t\ttmp = {\n\t\t\t\tid\t\t\t: false,\n\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\n\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\n\t\t\t\tparent\t\t: p,\n\t\t\t\tparents\t\t: ps,\n\t\t\t\tchildren\t: [],\n\t\t\t\tchildren_d\t: [],\n\t\t\t\tdata\t\t: null,\n\t\t\t\tstate\t\t: { },\n\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\toriginal\t: false\n\t\t\t};\n\t\t\tfor(i in df) {\n\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\n\t\t\tif(d && d.text) { tmp.text = d.text; }\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t}\n\t\t\tif(d && d.data) {\n\t\t\t\ttmp.data = d.data;\n\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\tfor (i in d.state) {\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp.li_attr.id && !tmp.id) {\n\t\t\t\ttmp.id = tmp.li_attr.id.toString();\n\t\t\t}\n\t\t\tif(!tmp.id) {\n\t\t\t\ttmp.id = tid;\n\t\t\t}\n\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\ttmp.li_attr.id = tmp.id;\n\t\t\t}\n\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.children && d.children.length) {\n\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\n\t\t\t\t\tc = this._parse_model_from_json(d.children[i], tmp.id, ps);\n\t\t\t\t\te = m[c];\n\t\t\t\t\ttmp.children.push(c);\n\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\n\t\t\t}\n\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\ttmp.state.loaded = false;\n\t\t\t\ttmp.children = [];\n\t\t\t\ttmp.children_d = [];\n\t\t\t}\n\t\t\tdelete d.data;\n\t\t\tdelete d.children;\n\t\t\ttmp.original = d;\n\t\t\tm[tmp.id] = tmp;\n\t\t\tif(tmp.state.selected) {\n\t\t\t\tthis._data.core.selected.push(tmp.id);\n\t\t\t}\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * redraws all nodes that need to be redrawn. Used internally.\n\t\t * @private\n\t\t * @name _redraw()\n\t\t * @trigger redraw.jstree\n\t\t */\n\t\t_redraw : function () {\n\t\t\tvar nodes = this._model.force_full_redraw ? this._model.data['#'].children.concat([]) : this._model.changed.concat([]),\n\t\t\t\tf = document.createElement('UL'), tmp, i, j;\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\ttmp = this.redraw_node(nodes[i], true, this._model.force_full_redraw);\n\t\t\t\tif(tmp && this._model.force_full_redraw) {\n\t\t\t\t\tf.appendChild(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this._model.force_full_redraw) {\n\t\t\t\tf.className = this.get_container_ul()[0].className;\n\t\t\t\tthis.element.empty().append(f);\n\t\t\t\t//this.get_container_ul()[0].appendChild(f);\n\t\t\t}\n\t\t\tthis._model.force_full_redraw = false;\n\t\t\tthis._model.changed = [];\n\t\t\t/**\n\t\t\t * triggered after nodes are redrawn\n\t\t\t * @event\n\t\t\t * @name redraw.jstree\n\t\t\t * @param {array} nodes the redrawn nodes\n\t\t\t */\n\t\t\tthis.trigger('redraw', { \"nodes\" : nodes });\n\t\t},\n\t\t/**\n\t\t * redraws all nodes that need to be redrawn or optionally - the whole tree\n\t\t * @name redraw([full])\n\t\t * @param {Boolean} full if set to `true` all nodes are redrawn.\n\t\t */\n\t\tredraw : function (full) {\n\t\t\tif(full) {\n\t\t\t\tthis._model.force_full_redraw = true;\n\t\t\t}\n\t\t\t//if(this._model.redraw_timeout) {\n\t\t\t//\tclearTimeout(this._model.redraw_timeout);\n\t\t\t//}\n\t\t\t//this._model.redraw_timeout = setTimeout($.proxy(this._redraw, this),0);\n\t\t\tthis._redraw();\n\t\t},\n\t\t/**\n\t\t * redraws a single node. Used internally.\n\t\t * @private\n\t\t * @name redraw_node(node, deep, is_callback)\n\t\t * @param {mixed} node the node to redraw\n\t\t * @param {Boolean} deep should child nodes be redrawn too\n\t\t * @param {Boolean} is_callback is this a recursion call\n\t\t */\n\t\tredraw_node : function (node, deep, is_callback) {\n\t\t\tvar obj = this.get_node(node),\n\t\t\t\tpar = false,\n\t\t\t\tind = false,\n\t\t\t\told = false,\n\t\t\t\ti = false,\n\t\t\t\tj = false,\n\t\t\t\tk = false,\n\t\t\t\tc = '',\n\t\t\t\td = document,\n\t\t\t\tm = this._model.data,\n\t\t\t\tf = false,\n\t\t\t\ts = false,\n\t\t\t\ttmp = null;\n\t\t\tif(!obj) { return false; }\n\t\t\tif(obj.id === '#') {  return this.redraw(true); }\n\t\t\tdeep = deep || obj.children.length === 0;\n\t\t\tnode = !document.querySelector ? document.getElementById(obj.id) : this.element[0].querySelector('#' + (\"0123456789\".indexOf(obj.id[0]) !== -1 ? '\\\\3' + obj.id[0] + ' ' + obj.id.substr(1).replace($.jstree.idregex,'\\\\$&') : obj.id.replace($.jstree.idregex,'\\\\$&')) ); //, this.element);\n\t\t\tif(!node) {\n\t\t\t\tdeep = true;\n\t\t\t\t//node = d.createElement('LI');\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tpar = obj.parent !== '#' ? $('#' + obj.parent.replace($.jstree.idregex,'\\\\$&'), this.element)[0] : null;\n\t\t\t\t\tif(par !== null && (!par || !m[obj.parent].state.opened)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tind = $.inArray(obj.id, par === null ? m['#'].children : m[obj.parent].children);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode = $(node);\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tpar = node.parent().parent()[0];\n\t\t\t\t\tif(par === this.element[0]) {\n\t\t\t\t\t\tpar = null;\n\t\t\t\t\t}\n\t\t\t\t\tind = node.index();\n\t\t\t\t}\n\t\t\t\t// m[obj.id].data = node.data(); // use only node's data, no need to touch jquery storage\n\t\t\t\tif(!deep && obj.children.length && !node.children('.jstree-children').length) {\n\t\t\t\t\tdeep = true;\n\t\t\t\t}\n\t\t\t\tif(!deep) {\n\t\t\t\t\told = node.children('.jstree-children')[0];\n\t\t\t\t}\n\t\t\t\ts = node.attr('aria-selected');\n\t\t\t\tf = node.children('.jstree-anchor')[0] === document.activeElement;\n\t\t\t\tnode.remove();\n\t\t\t\t//node = d.createElement('LI');\n\t\t\t\t//node = node[0];\n\t\t\t}\n\t\t\tnode = _node.cloneNode(true);\n\t\t\t// node is DOM, deep is boolean\n\n\t\t\tc = 'jstree-node ';\n\t\t\tfor(i in obj.li_attr) {\n\t\t\t\tif(obj.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\tif(i === 'id') { continue; }\n\t\t\t\t\tif(i !== 'class') {\n\t\t\t\t\t\tnode.setAttribute(i, obj.li_attr[i]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tc += obj.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(s && s !== \"false\") {\n\t\t\t\tnode.setAttribute('aria-selected', true);\n\t\t\t}\n\t\t\tif(obj.state.loaded && !obj.children.length) {\n\t\t\t\tc += ' jstree-leaf';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tc += obj.state.opened && obj.state.loaded ? ' jstree-open' : ' jstree-closed';\n\t\t\t\tnode.setAttribute('aria-expanded', (obj.state.opened && obj.state.loaded) );\n\t\t\t}\n\t\t\tif(obj.parent !== null && m[obj.parent].children[m[obj.parent].children.length - 1] === obj.id) {\n\t\t\t\tc += ' jstree-last';\n\t\t\t}\n\t\t\tnode.id = obj.id;\n\t\t\tnode.className = c;\n\t\t\tc = ( obj.state.selected ? ' jstree-clicked' : '') + ( obj.state.disabled ? ' jstree-disabled' : '');\n\t\t\tfor(j in obj.a_attr) {\n\t\t\t\tif(obj.a_attr.hasOwnProperty(j)) {\n\t\t\t\t\tif(j === 'href' && obj.a_attr[j] === '#') { continue; }\n\t\t\t\t\tif(j !== 'class') {\n\t\t\t\t\t\tnode.childNodes[1].setAttribute(j, obj.a_attr[j]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tc += ' ' + obj.a_attr[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c.length) {\n\t\t\t\tnode.childNodes[1].className = 'jstree-anchor ' + c;\n\t\t\t}\n\t\t\tif((obj.icon && obj.icon !== true) || obj.icon === false) {\n\t\t\t\tif(obj.icon === false) {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-hidden';\n\t\t\t\t}\n\t\t\t\telse if(obj.icon.indexOf('/') === -1 && obj.icon.indexOf('.') === -1) {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' ' + obj.icon + ' jstree-themeicon-custom';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundImage = 'url('+obj.icon+')';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundPosition = 'center center';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundSize = 'auto';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-custom';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(this.settings.core.force_text) {\n\t\t\t\tnode.childNodes[1].appendChild(d.createTextNode(obj.text));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode.childNodes[1].innerHTML += obj.text;\n\t\t\t}\n\n\t\t\tif(deep && obj.children.length && obj.state.opened && obj.state.loaded) {\n\t\t\t\tk = d.createElement('UL');\n\t\t\t\tk.setAttribute('role', 'group');\n\t\t\t\tk.className = 'jstree-children';\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], deep, true));\n\t\t\t\t}\n\t\t\t\tnode.appendChild(k);\n\t\t\t}\n\t\t\tif(old) {\n\t\t\t\tnode.appendChild(old);\n\t\t\t}\n\t\t\tif(!is_callback) {\n\t\t\t\t// append back using par / ind\n\t\t\t\tif(!par) {\n\t\t\t\t\tpar = this.element[0];\n\t\t\t\t}\n\t\t\t\tfor(i = 0, j = par.childNodes.length; i < j; i++) {\n\t\t\t\t\tif(par.childNodes[i] && par.childNodes[i].className && par.childNodes[i].className.indexOf('jstree-children') !== -1) {\n\t\t\t\t\t\ttmp = par.childNodes[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!tmp) {\n\t\t\t\t\ttmp = d.createElement('UL');\n\t\t\t\t\ttmp.setAttribute('role', 'group');\n\t\t\t\t\ttmp.className = 'jstree-children';\n\t\t\t\t\tpar.appendChild(tmp);\n\t\t\t\t}\n\t\t\t\tpar = tmp;\n\n\t\t\t\tif(ind < par.childNodes.length) {\n\t\t\t\t\tpar.insertBefore(node, par.childNodes[ind]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpar.appendChild(node);\n\t\t\t\t}\n\t\t\t\tif(f) {\n\t\t\t\t\tnode.childNodes[1].focus();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(obj.state.opened && !obj.state.loaded) {\n\t\t\t\tobj.state.opened = false;\n\t\t\t\tsetTimeout($.proxy(function () {\n\t\t\t\t\tthis.open_node(obj.id, false, 0);\n\t\t\t\t}, this), 0);\n\t\t\t}\n\t\t\treturn node;\n\t\t},\n\t\t/**\n\t\t * opens a node, revaling its children. If the node is not loaded it will be loaded and opened once ready.\n\t\t * @name open_node(obj [, callback, animation])\n\t\t * @param {mixed} obj the node to open\n\t\t * @param {Function} callback a function to execute once the node is opened\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the node (overrides the `core.animation` setting). Use `false` for no animation.\n\t\t * @trigger open_node.jstree, after_open.jstree, before_open.jstree\n\t\t */\n\t\topen_node : function (obj, callback, animation) {\n\t\t\tvar t1, t2, d, t;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.open_node(obj[t1], callback, animation);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\n\t\t\tif(!this.is_closed(obj)) {\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, false);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!this.is_loaded(obj)) {\n\t\t\t\tif(this.is_loading(obj)) {\n\t\t\t\t\treturn setTimeout($.proxy(function () {\n\t\t\t\t\t\tthis.open_node(obj, callback, animation);\n\t\t\t\t\t}, this), 500);\n\t\t\t\t}\n\t\t\t\tthis.load_node(obj, function (o, ok) {\n\t\t\t\t\treturn ok ? this.open_node(o, callback, animation) : (callback ? callback.call(this, o, false) : false);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\td = this.get_node(obj, true);\n\t\t\t\tt = this;\n\t\t\t\tif(d.length) {\n\t\t\t\t\tif(obj.children.length && !this._firstChild(d.children('.jstree-children')[0])) {\n\t\t\t\t\t\tobj.state.opened = true;\n\t\t\t\t\t\tthis.redraw_node(obj, true);\n\t\t\t\t\t\td = this.get_node(obj, true);\n\t\t\t\t\t}\n\t\t\t\t\tif(!animation) {\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t\t\td[0].className = d[0].className.replace('jstree-closed', 'jstree-open');\n\t\t\t\t\t\td[0].setAttribute(\"aria-expanded\", true);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t\t\td\n\t\t\t\t\t\t\t.children(\".jstree-children\").css(\"display\",\"none\").end()\n\t\t\t\t\t\t\t.removeClass(\"jstree-closed\").addClass(\"jstree-open\").attr(\"aria-expanded\", true)\n\t\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true)\n\t\t\t\t\t\t\t\t.slideDown(animation, function () {\n\t\t\t\t\t\t\t\t\tthis.style.display = \"\";\n\t\t\t\t\t\t\t\t\tt.trigger(\"after_open\", { \"node\" : obj });\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobj.state.opened = true;\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, true);\n\t\t\t\t}\n\t\t\t\tif(!d.length) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a node is about to be opened (if the node is supposed to be in the DOM, it will be, but it won't be visible yet)\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name before_open.jstree\n\t\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is opened (if there is an animation it will not be completed yet)\n\t\t\t\t * @event\n\t\t\t\t * @name open_node.jstree\n\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t */\n\t\t\t\tthis.trigger('open_node', { \"node\" : obj });\n\t\t\t\tif(!animation || !d.length) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a node is opened and the animation is complete\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name after_open.jstree\n\t\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger(\"after_open\", { \"node\" : obj });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * opens every parent of a node (node should be loaded)\n\t\t * @name _open_to(obj)\n\t\t * @param {mixed} obj the node to reveal\n\t\t * @private\n\t\t */\n\t\t_open_to : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar i, j, p = obj.parents;\n\t\t\tfor(i = 0, j = p.length; i < j; i+=1) {\n\t\t\t\tif(i !== '#') {\n\t\t\t\t\tthis.open_node(p[i], false, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\n\t\t},\n\t\t/**\n\t\t * closes a node, hiding its children\n\t\t * @name close_node(obj [, animation])\n\t\t * @param {mixed} obj the node to close\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the node (overrides the `core.animation` setting). Use `false` for no animation.\n\t\t * @trigger close_node.jstree, after_close.jstree\n\t\t */\n\t\tclose_node : function (obj, animation) {\n\t\t\tvar t1, t2, t, d;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.close_node(obj[t1], animation);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(this.is_closed(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\n\t\t\tt = this;\n\t\t\td = this.get_node(obj, true);\n\t\t\tif(d.length) {\n\t\t\t\tif(!animation) {\n\t\t\t\t\td[0].className = d[0].className.replace('jstree-open', 'jstree-closed');\n\t\t\t\t\td.attr(\"aria-expanded\", false).children('.jstree-children').remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td\n\t\t\t\t\t\t.children(\".jstree-children\").attr(\"style\",\"display:block !important\").end()\n\t\t\t\t\t\t.removeClass(\"jstree-open\").addClass(\"jstree-closed\").attr(\"aria-expanded\", false)\n\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true).slideUp(animation, function () {\n\t\t\t\t\t\t\tthis.style.display = \"\";\n\t\t\t\t\t\t\td.children('.jstree-children').remove();\n\t\t\t\t\t\t\tt.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.state.opened = false;\n\t\t\t/**\n\t\t\t * triggered when a node is closed (if there is an animation it will not be complete yet)\n\t\t\t * @event\n\t\t\t * @name close_node.jstree\n\t\t\t * @param {Object} node the closed node\n\t\t\t */\n\t\t\tthis.trigger('close_node',{ \"node\" : obj });\n\t\t\tif(!animation || !d.length) {\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is closed and the animation is complete\n\t\t\t\t * @event\n\t\t\t\t * @name after_close.jstree\n\t\t\t\t * @param {Object} node the closed node\n\t\t\t\t */\n\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * toggles a node - closing it if it is open, opening it if it is closed\n\t\t * @name toggle_node(obj)\n\t\t * @param {mixed} obj the node to toggle\n\t\t */\n\t\ttoggle_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.toggle_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(this.is_closed(obj)) {\n\t\t\t\treturn this.open_node(obj);\n\t\t\t}\n\t\t\tif(this.is_open(obj)) {\n\t\t\t\treturn this.close_node(obj);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * opens all nodes within a node (or the tree), revaling their children. If the node is not loaded it will be loaded and opened once ready.\n\t\t * @name open_all([obj, animation, original_obj])\n\t\t * @param {mixed} obj the node to open recursively, omit to open all nodes in the tree\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the nodes, the default is no animation\n\t\t * @param {jQuery} reference to the node that started the process (internal use)\n\t\t * @trigger open_all.jstree\n\t\t */\n\t\topen_all : function (obj, animation, original_obj) {\n\t\t\tif(!obj) { obj = '#'; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar dom = obj.id === '#' ? this.get_container_ul() : this.get_node(obj, true), i, j, _this;\n\t\t\tif(!dom.length) {\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tif(this.is_closed(this._model.data[obj.children_d[i]])) {\n\t\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.trigger('open_all', { \"node\" : obj });\n\t\t\t}\n\t\t\toriginal_obj = original_obj || dom;\n\t\t\t_this = this;\n\t\t\tdom = this.is_closed(obj) ? dom.find('.jstree-closed').addBack() : dom.find('.jstree-closed');\n\t\t\tdom.each(function () {\n\t\t\t\t_this.open_node(\n\t\t\t\t\tthis,\n\t\t\t\t\tfunction(node, status) { if(status && this.is_parent(node)) { this.open_all(node, animation, original_obj); } },\n\t\t\t\t\tanimation || 0\n\t\t\t\t);\n\t\t\t});\n\t\t\tif(original_obj.find('.jstree-closed').length === 0) {\n\t\t\t\t/**\n\t\t\t\t * triggered when an `open_all` call completes\n\t\t\t\t * @event\n\t\t\t\t * @name open_all.jstree\n\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t */\n\t\t\t\tthis.trigger('open_all', { \"node\" : this.get_node(original_obj) });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * closes all nodes within a node (or the tree), revaling their children\n\t\t * @name close_all([obj, animation])\n\t\t * @param {mixed} obj the node to close recursively, omit to close all nodes in the tree\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the nodes, the default is no animation\n\t\t * @trigger close_all.jstree\n\t\t */\n\t\tclose_all : function (obj, animation) {\n\t\t\tif(!obj) { obj = '#'; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar dom = obj.id === '#' ? this.get_container_ul() : this.get_node(obj, true),\n\t\t\t\t_this = this, i, j;\n\t\t\tif(!dom.length) {\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = false;\n\t\t\t\t}\n\t\t\t\treturn this.trigger('close_all', { \"node\" : obj });\n\t\t\t}\n\t\t\tdom = this.is_open(obj) ? dom.find('.jstree-open').addBack() : dom.find('.jstree-open');\n\t\t\t$(dom.get().reverse()).each(function () { _this.close_node(this, animation || 0); });\n\t\t\t/**\n\t\t\t * triggered when an `close_all` call completes\n\t\t\t * @event\n\t\t\t * @name close_all.jstree\n\t\t\t * @param {Object} node the closed node\n\t\t\t */\n\t\t\tthis.trigger('close_all', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * checks if a node is disabled (not selectable)\n\t\t * @name is_disabled(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_disabled : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state && obj.state.disabled;\n\t\t},\n\t\t/**\n\t\t * enables a node - so that it can be selected\n\t\t * @name enable_node(obj)\n\t\t * @param {mixed} obj the node to enable\n\t\t * @trigger enable_node.jstree\n\t\t */\n\t\tenable_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.enable_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.state.disabled = false;\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').removeClass('jstree-disabled');\n\t\t\t/**\n\t\t\t * triggered when an node is enabled\n\t\t\t * @event\n\t\t\t * @name enable_node.jstree\n\t\t\t * @param {Object} node the enabled node\n\t\t\t */\n\t\t\tthis.trigger('enable_node', { 'node' : obj });\n\t\t},\n\t\t/**\n\t\t * disables a node - so that it can not be selected\n\t\t * @name disable_node(obj)\n\t\t * @param {mixed} obj the node to disable\n\t\t * @trigger disable_node.jstree\n\t\t */\n\t\tdisable_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.disable_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.state.disabled = true;\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').addClass('jstree-disabled');\n\t\t\t/**\n\t\t\t * triggered when an node is disabled\n\t\t\t * @event\n\t\t\t * @name disable_node.jstree\n\t\t\t * @param {Object} node the disabled node\n\t\t\t */\n\t\t\tthis.trigger('disable_node', { 'node' : obj });\n\t\t},\n\t\t/**\n\t\t * called when a node is selected by the user. Used internally.\n\t\t * @private\n\t\t * @name activate_node(obj, e)\n\t\t * @param {mixed} obj the node\n\t\t * @param {Object} e the related event\n\t\t * @trigger activate_node.jstree\n\t\t */\n\t\tactivate_node : function (obj, e) {\n\t\t\tif(this.is_disabled(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// ensure last_clicked is still in the DOM, make it fresh (maybe it was moved?) and make sure it is still selected, if not - make last_clicked the last selected node\n\t\t\tthis._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== undefined ? this.get_node(this._data.core.last_clicked.id) : null;\n\t\t\tif(this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) { this._data.core.last_clicked = null; }\n\t\t\tif(!this._data.core.last_clicked && this._data.core.selected.length) { this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1]); }\n\n\t\t\tif(!this.settings.core.multiple || (!e.metaKey && !e.ctrlKey && !e.shiftKey) || (e.shiftKey && (!this._data.core.last_clicked || !this.get_parent(obj) || this.get_parent(obj) !== this._data.core.last_clicked.parent ) )) {\n\t\t\t\tif(!this.settings.core.multiple && (e.metaKey || e.ctrlKey || e.shiftKey) && this.is_selected(obj)) {\n\t\t\t\t\tthis.deselect_node(obj, false, e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.deselect_all(true);\n\t\t\t\t\tthis.select_node(obj, false, false, e);\n\t\t\t\t\tthis._data.core.last_clicked = this.get_node(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(e.shiftKey) {\n\t\t\t\t\tvar o = this.get_node(obj).id,\n\t\t\t\t\t\tl = this._data.core.last_clicked.id,\n\t\t\t\t\t\tp = this.get_node(this._data.core.last_clicked.parent).children,\n\t\t\t\t\t\tc = false,\n\t\t\t\t\t\ti, j;\n\t\t\t\t\tfor(i = 0, j = p.length; i < j; i += 1) {\n\t\t\t\t\t\t// separate IFs work whem o and l are the same\n\t\t\t\t\t\tif(p[i] === o) {\n\t\t\t\t\t\t\tc = !c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(p[i] === l) {\n\t\t\t\t\t\t\tc = !c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(c || p[i] === o || p[i] === l) {\n\t\t\t\t\t\t\tthis.select_node(p[i], false, false, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.deselect_node(p[i], false, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(!this.is_selected(obj)) {\n\t\t\t\t\t\tthis.select_node(obj, false, false, e);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.deselect_node(obj, false, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when an node is clicked or intercated with by the user\n\t\t\t * @event\n\t\t\t * @name activate_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\n\t\t},\n\t\t/**\n\t\t * applies the hover state on a node, called when a node is hovered by the user. Used internally.\n\t\t * @private\n\t\t * @name hover_node(obj)\n\t\t * @param {mixed} obj\n\t\t * @trigger hover_node.jstree\n\t\t */\n\t\thover_node : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(!obj || !obj.length || obj.children('.jstree-hovered').length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar o = this.element.find('.jstree-hovered'), t = this.element;\n\t\t\tif(o && o.length) { this.dehover_node(o); }\n\n\t\t\tobj.children('.jstree-anchor').addClass('jstree-hovered');\n\t\t\t/**\n\t\t\t * triggered when an node is hovered\n\t\t\t * @event\n\t\t\t * @name hover_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('hover_node', { 'node' : this.get_node(obj) });\n\t\t\tsetTimeout(function () { t.attr('aria-activedescendant', obj[0].id); obj.attr('aria-selected', true); }, 0);\n\t\t},\n\t\t/**\n\t\t * removes the hover state from a nodecalled when a node is no longer hovered by the user. Used internally.\n\t\t * @private\n\t\t * @name dehover_node(obj)\n\t\t * @param {mixed} obj\n\t\t * @trigger dehover_node.jstree\n\t\t */\n\t\tdehover_node : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(!obj || !obj.length || !obj.children('.jstree-hovered').length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.attr('aria-selected', false).children('.jstree-anchor').removeClass('jstree-hovered');\n\t\t\t/**\n\t\t\t * triggered when an node is no longer hovered\n\t\t\t * @event\n\t\t\t * @name dehover_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('dehover_node', { 'node' : this.get_node(obj) });\n\t\t},\n\t\t/**\n\t\t * select a node\n\t\t * @name select_node(obj [, supress_event, prevent_open])\n\t\t * @param {mixed} obj an array can be used to select multiple nodes\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @param {Boolean} prevent_open if set to `true` parents of the selected node won't be opened\n\t\t * @trigger select_node.jstree, changed.jstree\n\t\t */\n\t\tselect_node : function (obj, supress_event, prevent_open, e) {\n\t\t\tvar dom, t1, t2, th;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.select_node(obj[t1], supress_event, prevent_open, e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.selected) {\n\t\t\t\tobj.state.selected = true;\n\t\t\t\tthis._data.core.selected.push(obj.id);\n\t\t\t\tif(!prevent_open) {\n\t\t\t\t\tdom = this._open_to(obj);\n\t\t\t\t}\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-clicked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is selected\n\t\t\t\t * @event\n\t\t\t\t * @name select_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this select_node\n\t\t\t\t */\n\t\t\t\tthis.trigger('select_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\tif(!supress_event) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when selection changes\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name changed.jstree\n\t\t\t\t\t * @param {Object} node\n\t\t\t\t\t * @param {Object} action the action that caused the selection to change\n\t\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t\t * @param {Object} event the event (if any) that triggered this changed event\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * deselect a node\n\t\t * @name deselect_node(obj [, supress_event])\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger deselect_node.jstree, changed.jstree\n\t\t */\n\t\tdeselect_node : function (obj, supress_event, e) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.deselect_node(obj[t1], supress_event, e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.selected) {\n\t\t\t\tobj.state.selected = false;\n\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.id);\n\t\t\t\tif(dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-clicked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is deselected\n\t\t\t\t * @event\n\t\t\t\t * @name deselect_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this deselect_node\n\t\t\t\t */\n\t\t\t\tthis.trigger('deselect_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\tif(!supress_event) {\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * select all nodes in the tree\n\t\t * @name select_all([supress_event])\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger select_all.jstree, changed.jstree\n\t\t */\n\t\tselect_all : function (supress_event) {\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\n\t\t\tthis._data.core.selected = this._model.data['#'].children_d.concat();\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.redraw(true);\n\t\t\t/**\n\t\t\t * triggered when all nodes are selected\n\t\t\t * @event\n\t\t\t * @name select_all.jstree\n\t\t\t * @param {Array} selected the current selection\n\t\t\t */\n\t\t\tthis.trigger('select_all', { 'selected' : this._data.core.selected });\n\t\t\tif(!supress_event) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'select_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * deselect all selected nodes\n\t\t * @name deselect_all([supress_event])\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger deselect_all.jstree, changed.jstree\n\t\t */\n\t\tdeselect_all : function (supress_event) {\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.core.selected = [];\n\t\t\tthis.element.find('.jstree-clicked').removeClass('jstree-clicked');\n\t\t\t/**\n\t\t\t * triggered when all nodes are deselected\n\t\t\t * @event\n\t\t\t * @name deselect_all.jstree\n\t\t\t * @param {Object} node the previous selection\n\t\t\t * @param {Array} selected the current selection\n\t\t\t */\n\t\t\tthis.trigger('deselect_all', { 'selected' : this._data.core.selected, 'node' : tmp });\n\t\t\tif(!supress_event) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * checks if a node is selected\n\t\t * @name is_selected(obj)\n\t\t * @param  {mixed}  obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_selected : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.state.selected;\n\t\t},\n\t\t/**\n\t\t * get an array of all selected nodes\n\t\t * @name get_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_selected : function (full) {\n\t\t\treturn full ? $.map(this._data.core.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.core.selected.slice();\n\t\t},\n\t\t/**\n\t\t * get an array of all top level selected nodes (ignoring children of selected nodes)\n\t\t * @name get_top_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_top_selected : function (full) {\n\t\t\tvar tmp = this.get_selected(true),\n\t\t\t\tobj = {}, i, j, k, l;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tobj[tmp[i].id] = tmp[i];\n\t\t\t}\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tfor(i in obj) {\n\t\t\t\tif(obj.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\n\t\t},\n\t\t/**\n\t\t * get an array of all bottom level selected nodes (ignoring selected parents)\n\t\t * @name get_bottom_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_bottom_selected : function (full) {\n\t\t\tvar tmp = this.get_selected(true),\n\t\t\t\tobj = [], i, j;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tif(!tmp[i].children.length) {\n\t\t\t\t\tobj.push(tmp[i].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\n\t\t},\n\t\t/**\n\t\t * gets the current state of the tree so that it can be restored later with `set_state(state)`. Used internally.\n\t\t * @name get_state()\n\t\t * @private\n\t\t * @return {Object}\n\t\t */\n\t\tget_state : function () {\n\t\t\tvar state\t= {\n\t\t\t\t'core' : {\n\t\t\t\t\t'open' : [],\n\t\t\t\t\t'scroll' : {\n\t\t\t\t\t\t'left' : this.element.scrollLeft(),\n\t\t\t\t\t\t'top' : this.element.scrollTop()\n\t\t\t\t\t},\n\t\t\t\t\t/*!\n\t\t\t\t\t'themes' : {\n\t\t\t\t\t\t'name' : this.get_theme(),\n\t\t\t\t\t\t'icons' : this._data.core.themes.icons,\n\t\t\t\t\t\t'dots' : this._data.core.themes.dots\n\t\t\t\t\t},\n\t\t\t\t\t*/\n\t\t\t\t\t'selected' : []\n\t\t\t\t}\n\t\t\t}, i;\n\t\t\tfor(i in this._model.data) {\n\t\t\t\tif(this._model.data.hasOwnProperty(i)) {\n\t\t\t\t\tif(i !== '#') {\n\t\t\t\t\t\tif(this._model.data[i].state.opened) {\n\t\t\t\t\t\t\tstate.core.open.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this._model.data[i].state.selected) {\n\t\t\t\t\t\t\tstate.core.selected.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn state;\n\t\t},\n\t\t/**\n\t\t * sets the state of the tree. Used internally.\n\t\t * @name set_state(state [, callback])\n\t\t * @private\n\t\t * @param {Object} state the state to restore\n\t\t * @param {Function} callback an optional function to execute once the state is restored.\n\t\t * @trigger set_state.jstree\n\t\t */\n\t\tset_state : function (state, callback) {\n\t\t\tif(state) {\n\t\t\t\tif(state.core) {\n\t\t\t\t\tvar res, n, t, _this;\n\t\t\t\t\tif(state.core.open) {\n\t\t\t\t\t\tif(!$.isArray(state.core.open)) {\n\t\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres = true;\n\t\t\t\t\t\tn = false;\n\t\t\t\t\t\tt = this;\n\t\t\t\t\t\t$.each(state.core.open.concat([]), function (i, v) {\n\t\t\t\t\t\t\tn = t.get_node(v);\n\t\t\t\t\t\t\tif(n) {\n\t\t\t\t\t\t\t\tif(t.is_loaded(v)) {\n\t\t\t\t\t\t\t\t\tif(t.is_closed(v)) {\n\t\t\t\t\t\t\t\t\t\tt.open_node(v, false, 0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(state && state.core && state.core.open) {\n\t\t\t\t\t\t\t\t\t\t$.vakata.array_remove_item(state.core.open, v);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif(!t.is_loading(v)) {\n\t\t\t\t\t\t\t\t\t\tt.open_node(v, $.proxy(function (o, s) {\n\t\t\t\t\t\t\t\t\t\t\tif(!s && state && state.core && state.core.open) {\n\t\t\t\t\t\t\t\t\t\t\t\t$.vakata.array_remove_item(state.core.open, o.id);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t\t\t\t\t}, t), 0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// there will be some async activity - so wait for it\n\t\t\t\t\t\t\t\t\tres = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(res) {\n\t\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif(state.core.scroll) {\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.left !== undefined) {\n\t\t\t\t\t\t\tthis.element.scrollLeft(state.core.scroll.left);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.top !== undefined) {\n\t\t\t\t\t\t\tthis.element.scrollTop(state.core.scroll.top);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete state.core.scroll;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t/*!\n\t\t\t\t\tif(state.core.themes) {\n\t\t\t\t\t\tif(state.core.themes.name) {\n\t\t\t\t\t\t\tthis.set_theme(state.core.themes.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(typeof state.core.themes.dots !== 'undefined') {\n\t\t\t\t\t\t\tthis[ state.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(typeof state.core.themes.icons !== 'undefined') {\n\t\t\t\t\t\t\tthis[ state.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete state.core.themes;\n\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tif(state.core.selected) {\n\t\t\t\t\t\t_this = this;\n\t\t\t\t\t\tthis.deselect_all();\n\t\t\t\t\t\t$.each(state.core.selected, function (i, v) {\n\t\t\t\t\t\t\t_this.select_node(v);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdelete state.core.selected;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif($.isEmptyObject(state.core)) {\n\t\t\t\t\t\tdelete state.core;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif($.isEmptyObject(state)) {\n\t\t\t\t\tstate = null;\n\t\t\t\t\tif(callback) { callback.call(this); }\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a `set_state` call completes\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name set_state.jstree\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('set_state');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t/**\n\t\t * refreshes the tree - all nodes are reloaded with calls to `load_node`.\n\t\t * @name refresh()\n\t\t * @param {Boolean} skip_loading an option to skip showing the loading indicator\n\t\t * @param {Mixed} forget_state if set to `true` state will not be reapplied, if set to a function (receiving the current state as argument) the result of that function will be used as state\n\t\t * @trigger refresh.jstree\n\t\t */\n\t\trefresh : function (skip_loading, forget_state) {\n\t\t\tthis._data.core.state = forget_state === true ? {} : this.get_state();\n\t\t\tif(forget_state && $.isFunction(forget_state)) { this._data.core.state = forget_state.call(this, this._data.core.state); }\n\t\t\tthis._cnt = 0;\n\t\t\tthis._model.data = {\n\t\t\t\t'#' : {\n\t\t\t\t\tid : '#',\n\t\t\t\t\tparent : null,\n\t\t\t\t\tparents : [],\n\t\t\t\t\tchildren : [],\n\t\t\t\t\tchildren_d : [],\n\t\t\t\t\tstate : { loaded : false }\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar c = this.get_container_ul()[0].className;\n\t\t\tif(!skip_loading) {\n\t\t\t\tthis.element.html(\"<\"+\"ul class='\"+c+\"'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\n\t\t\t}\n\t\t\tthis.load_node('#', function (o, s) {\n\t\t\t\tif(s) {\n\t\t\t\t\tthis.get_container_ul()[0].className = c;\n\t\t\t\t\tthis.set_state($.extend(true, {}, this._data.core.state), function () {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * triggered when a `refresh` call completes\n\t\t\t\t\t\t * @event\n\t\t\t\t\t\t * @name refresh.jstree\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.trigger('refresh');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis._data.core.state = null;\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * refreshes a node in the tree (reload its children) all opened nodes inside that node are reloaded with calls to `load_node`.\n\t\t * @name refresh_node(obj)\n\t\t * @param  {mixed} obj the node\n\t\t * @trigger refresh_node.jstree\n\t\t */\n\t\trefresh_node : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tvar opened = [], to_load = [], s = this._data.core.selected.concat([]);\n\t\t\tto_load.push(obj.id);\n\t\t\tif(obj.state.opened === true) { opened.push(obj.id); }\n\t\t\tthis.get_node(obj, true).find('.jstree-open').each(function() { opened.push(this.id); });\n\t\t\tthis._load_nodes(to_load, $.proxy(function (nodes) {\n\t\t\t\tthis.open_node(opened, false, 0);\n\t\t\t\tthis.select_node(this._data.core.selected);\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is refreshed\n\t\t\t\t * @event\n\t\t\t\t * @name refresh_node.jstree\n\t\t\t\t * @param {Object} node - the refreshed node\n\t\t\t\t * @param {Array} nodes - an array of the IDs of the nodes that were reloaded\n\t\t\t\t */\n\t\t\t\tthis.trigger('refresh_node', { 'node' : obj, 'nodes' : nodes });\n\t\t\t}, this));\n\t\t},\n\t\t/**\n\t\t * set (change) the ID of a node\n\t\t * @name set_id(obj, id)\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {String} id the new ID\n\t\t * @return {Boolean}\n\t\t */\n\t\tset_id : function (obj, id) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tvar i, j, m = this._model.data;\n\t\t\tid = id.toString();\n\t\t\t// update parents (replace current ID with new one in children and children_d)\n\t\t\tm[obj.parent].children[$.inArray(obj.id, m[obj.parent].children)] = id;\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tm[obj.parents[i]].children_d[$.inArray(obj.id, m[obj.parents[i]].children_d)] = id;\n\t\t\t}\n\t\t\t// update children (replace current ID with new one in parent and parents)\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\tm[obj.children[i]].parent = id;\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tm[obj.children_d[i]].parents[$.inArray(obj.id, m[obj.children_d[i]].parents)] = id;\n\t\t\t}\n\t\t\ti = $.inArray(obj.id, this._data.core.selected);\n\t\t\tif(i !== -1) { this._data.core.selected[i] = id; }\n\t\t\t// update model and obj itself (obj.id, this._model.data[KEY])\n\t\t\ti = this.get_node(obj.id, true);\n\t\t\tif(i) {\n\t\t\t\ti.attr('id', id);\n\t\t\t}\n\t\t\tdelete m[obj.id];\n\t\t\tobj.id = id;\n\t\t\tm[id] = obj;\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the text value of a node\n\t\t * @name get_text(obj)\n\t\t * @param  {mixed} obj the node\n\t\t * @return {String}\n\t\t */\n\t\tget_text : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj || obj.id === '#') ? false : obj.text;\n\t\t},\n\t\t/**\n\t\t * set the text value of a node. Used internally, please use `rename_node(obj, val)`.\n\t\t * @private\n\t\t * @name set_text(obj, val)\n\t\t * @param  {mixed} obj the node, you can pass an array to set the text on multiple nodes\n\t\t * @param  {String} val the new text value\n\t\t * @return {Boolean}\n\t\t * @trigger set_text.jstree\n\t\t */\n\t\tset_text : function (obj, val) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_text(obj[t1], val);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tobj.text = val;\n\t\t\tif(this.get_node(obj, true).length) {\n\t\t\t\tthis.redraw_node(obj.id);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when a node text value is changed\n\t\t\t * @event\n\t\t\t * @name set_text.jstree\n\t\t\t * @param {Object} obj\n\t\t\t * @param {String} text the new value\n\t\t\t */\n\t\t\tthis.trigger('set_text',{ \"obj\" : obj, \"text\" : val });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * gets a JSON representation of a node (or the whole tree)\n\t\t * @name get_json([obj, options])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Object} options\n\t\t * @param  {Boolean} options.no_state do not return state information\n\t\t * @param  {Boolean} options.no_id do not return ID\n\t\t * @param  {Boolean} options.no_children do not include children\n\t\t * @param  {Boolean} options.no_data do not include node data\n\t\t * @param  {Boolean} options.flat return flat JSON instead of nested\n\t\t * @return {Object}\n\t\t */\n\t\tget_json : function (obj, options, flat) {\n\t\t\tobj = this.get_node(obj || '#');\n\t\t\tif(!obj) { return false; }\n\t\t\tif(options && options.flat && !flat) { flat = []; }\n\t\t\tvar tmp = {\n\t\t\t\t'id' : obj.id,\n\t\t\t\t'text' : obj.text,\n\t\t\t\t'icon' : this.get_icon(obj),\n\t\t\t\t'li_attr' : obj.li_attr,\n\t\t\t\t'a_attr' : obj.a_attr,\n\t\t\t\t'state' : {},\n\t\t\t\t'data' : options && options.no_data ? false : obj.data\n\t\t\t\t//( this.get_node(obj, true).length ? this.get_node(obj, true).data() : obj.data ),\n\t\t\t}, i, j;\n\t\t\tif(options && options.flat) {\n\t\t\t\ttmp.parent = obj.parent;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp.children = [];\n\t\t\t}\n\t\t\tif(!options || !options.no_state) {\n\t\t\t\tfor(i in obj.state) {\n\t\t\t\t\tif(obj.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = obj.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(options && options.no_id) {\n\t\t\t\tdelete tmp.id;\n\t\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\n\t\t\t\t\tdelete tmp.li_attr.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(options && options.flat && obj.id !== '#') {\n\t\t\t\tflat.push(tmp);\n\t\t\t}\n\t\t\tif(!options || !options.no_children) {\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tif(options && options.flat) {\n\t\t\t\t\t\tthis.get_json(obj.children[i], options, flat);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttmp.children.push(this.get_json(obj.children[i], options));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn options && options.flat ? flat : (obj.id === '#' ? tmp.children : tmp);\n\t\t},\n\t\t/**\n\t\t * create a new node (do not confuse with load_node)\n\t\t * @name create_node([obj, node, pos, callback, is_loaded])\n\t\t * @param  {mixed}   par       the parent node (to create a root node use either \"#\" (string) or `null`)\n\t\t * @param  {mixed}   node      the data for the new node (a valid JSON object, or a simple string with the name)\n\t\t * @param  {mixed}   pos       the index at which to insert the node, \"first\" and \"last\" are also supported, default is \"last\"\n\t\t * @param  {Function} callback a function to be called once the node is created\n\t\t * @param  {Boolean} is_loaded internal argument indicating if the parent node was succesfully loaded\n\t\t * @return {String}            the ID of the newly create node\n\t\t * @trigger model.jstree, create_node.jstree\n\t\t */\n\t\tcreate_node : function (par, node, pos, callback, is_loaded) {\n\t\t\tif(par === null) { par = \"#\"; }\n\t\t\tpar = this.get_node(par);\n\t\t\tif(!par) { return false; }\n\t\t\tpos = pos === undefined ? \"last\" : pos;\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.create_node(par, node, pos, callback, true); });\n\t\t\t}\n\t\t\tif(!node) { node = { \"text\" : this.get_string('New node') }; }\n\t\t\tif(node.text === undefined) { node.text = this.get_string('New node'); }\n\t\t\tvar tmp, dpc, i, j;\n\n\t\t\tif(par.id === '#') {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\ttmp = this.get_node(par.parent);\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children);\n\t\t\t\t\tpar = tmp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\ttmp = this.get_node(par.parent);\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children) + 1;\n\t\t\t\t\tpar = tmp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > par.children.length) { pos = par.children.length; }\n\t\t\tif(!node.id) { node.id = true; }\n\t\t\tif(!this.check(\"create_node\", node, par, pos)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(node.id === true) { delete node.id; }\n\t\t\tnode = this._parse_model_from_json(node, par.id, par.parents.concat());\n\t\t\tif(!node) { return false; }\n\t\t\ttmp = this.get_node(node);\n\t\t\tdpc = [];\n\t\t\tdpc.push(node);\n\t\t\tdpc = dpc.concat(tmp.children_d);\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : par.id });\n\n\t\t\tpar.children_d = par.children_d.concat(dpc);\n\t\t\tfor(i = 0, j = par.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[par.parents[i]].children_d = this._model.data[par.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\tnode = tmp;\n\t\t\ttmp = [];\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\ttmp[i >= pos ? i+1 : i] = par.children[i];\n\t\t\t}\n\t\t\ttmp[pos] = node.id;\n\t\t\tpar.children = tmp;\n\n\t\t\tthis.redraw_node(par, true);\n\t\t\tif(callback) { callback.call(this, this.get_node(node)); }\n\t\t\t/**\n\t\t\t * triggered when a node is created\n\t\t\t * @event\n\t\t\t * @name create_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the new node among the parent's children\n\t\t\t */\n\t\t\tthis.trigger('create_node', { \"node\" : this.get_node(node), \"parent\" : par.id, \"position\" : pos });\n\t\t\treturn node.id;\n\t\t},\n\t\t/**\n\t\t * set the text value of a node\n\t\t * @name rename_node(obj, val)\n\t\t * @param  {mixed} obj the node, you can pass an array to rename multiple nodes to the same name\n\t\t * @param  {String} val the new text value\n\t\t * @return {Boolean}\n\t\t * @trigger rename_node.jstree\n\t\t */\n\t\trename_node : function (obj, val) {\n\t\t\tvar t1, t2, old;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.rename_node(obj[t1], val);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\told = obj.text;\n\t\t\tif(!this.check(\"rename_node\", obj, this.get_parent(obj), val)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.set_text(obj, val); // .apply(this, Array.prototype.slice.call(arguments))\n\t\t\t/**\n\t\t\t * triggered when a node is renamed\n\t\t\t * @event\n\t\t\t * @name rename_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} text the new value\n\t\t\t * @param {String} old the old value\n\t\t\t */\n\t\t\tthis.trigger('rename_node', { \"node\" : obj, \"text\" : val, \"old\" : old });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * remove a node\n\t\t * @name delete_node(obj)\n\t\t * @param  {mixed} obj the node, you can pass an array to delete multiple nodes\n\t\t * @return {Boolean}\n\t\t * @trigger delete_node.jstree, changed.jstree\n\t\t */\n\t\tdelete_node : function (obj) {\n\t\t\tvar t1, t2, par, pos, tmp, i, j, k, l, c;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.delete_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tpar = this.get_node(obj.parent);\n\t\t\tpos = $.inArray(obj.id, par.children);\n\t\t\tc = false;\n\t\t\tif(!this.check(\"delete_node\", obj, par, pos)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(pos !== -1) {\n\t\t\t\tpar.children = $.vakata.array_remove(par.children, pos);\n\t\t\t}\n\t\t\ttmp = obj.children_d.concat([]);\n\t\t\ttmp.push(obj.id);\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\tpos = $.inArray(tmp[k], this._model.data[obj.parents[i]].children_d);\n\t\t\t\t\tif(pos !== -1) {\n\t\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_remove(this._model.data[obj.parents[i]].children_d, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this._model.data[tmp[k]].state.selected) {\n\t\t\t\t\tc = true;\n\t\t\t\t\tpos = $.inArray(tmp[k], this._data.core.selected);\n\t\t\t\t\tif(pos !== -1) {\n\t\t\t\t\t\tthis._data.core.selected = $.vakata.array_remove(this._data.core.selected, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when a node is deleted\n\t\t\t * @event\n\t\t\t * @name delete_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t */\n\t\t\tthis.trigger('delete_node', { \"node\" : obj, \"parent\" : par.id });\n\t\t\tif(c) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'delete_node', 'node' : obj, 'selected' : this._data.core.selected, 'parent' : par.id });\n\t\t\t}\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tdelete this._model.data[tmp[k]];\n\t\t\t}\n\t\t\tthis.redraw_node(par, true);\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * check if an operation is premitted on the tree. Used internally.\n\t\t * @private\n\t\t * @name check(chk, obj, par, pos)\n\t\t * @param  {String} chk the operation to check, can be \"create_node\", \"rename_node\", \"delete_node\", \"copy_node\" or \"move_node\"\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {mixed} par the parent\n\t\t * @param  {mixed} pos the position to insert at, or if \"rename_node\" - the new name\n\t\t * @param  {mixed} more some various additional information, for example if a \"move_node\" operations is triggered by DND this will be the hovered node\n\t\t * @return {Boolean}\n\t\t */\n\t\tcheck : function (chk, obj, par, pos, more) {\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tvar tmp = chk.match(/^move_node|copy_node|create_node$/i) ? par : obj,\n\t\t\t\tchc = this.settings.core.check_callback;\n\t\t\tif(chk === \"move_node\" || chk === \"copy_node\") {\n\t\t\t\tif((!more || !more.is_multi) && (obj.id === par.id || $.inArray(obj.id, par.children) === pos || $.inArray(par.id, obj.children_d) !== -1)) {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_01', 'reason' : 'Moving parent inside child', 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp && tmp.data) { tmp = tmp.data; }\n\t\t\tif(tmp && tmp.functions && (tmp.functions[chk] === false || tmp.functions[chk] === true)) {\n\t\t\t\tif(tmp.functions[chk] === false) {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_02', 'reason' : 'Node data prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t}\n\t\t\t\treturn tmp.functions[chk];\n\t\t\t}\n\t\t\tif(chc === false || ($.isFunction(chc) && chc.call(this, chk, obj, par, pos, more) === false) || (chc && chc[chk] === false)) {\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_03', 'reason' : 'User config for core.check_callback prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the last error\n\t\t * @name last_error()\n\t\t * @return {Object}\n\t\t */\n\t\tlast_error : function () {\n\t\t\treturn this._data.core.last_error;\n\t\t},\n\t\t/**\n\t\t * move a node to a new parent\n\t\t * @name move_node(obj, par [, pos, callback, is_loaded])\n\t\t * @param  {mixed} obj the node to move, pass an array to move multiple nodes\n\t\t * @param  {mixed} par the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\n\t\t * @param  {Boolean} internal parameter indicating if the parent node has been loaded\n\t\t * @trigger move_node.jstree\n\t\t */\n\t\tmove_node : function (obj, par, pos, callback, is_loaded) {\n\t\t\tvar t1, t2, old_par, old_pos, new_par, old_ins, is_multi, dpc, tmp, i, j, k, l, p;\n\n\t\t\tpar = this.get_node(par);\n\t\t\tpos = pos === undefined ? 0 : pos;\n\t\t\tif(!par) { return false; }\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.move_node(obj, par, pos, callback, true); });\n\t\t\t}\n\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.reverse().slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.move_node(obj[t1], par, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\n\t\t\told_par = (obj.parent || '#').toString();\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === '#') ? par : this.get_node(par.parent);\n\t\t\told_ins = obj.instance ? obj.instance : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\n\t\t\told_pos = old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1;\n\t\t\tif(is_multi) {\n\t\t\t\tif(this.copy_node(obj, par, pos, callback, is_loaded)) {\n\t\t\t\t\tif(old_ins) { old_ins.delete_node(obj); }\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//var m = this._model.data;\n\t\t\tif(new_par.id === '#') {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = new_par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\n\t\t\tif(!this.check(\"move_node\", obj, new_par, pos, { 'core' : true, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(obj.parent === new_par.id) {\n\t\t\t\tdpc = new_par.children.concat();\n\t\t\t\ttmp = $.inArray(obj.id, dpc);\n\t\t\t\tif(tmp !== -1) {\n\t\t\t\t\tdpc = $.vakata.array_remove(dpc, tmp);\n\t\t\t\t\tif(pos > tmp) { pos--; }\n\t\t\t\t}\n\t\t\t\ttmp = [];\n\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\ttmp[i >= pos ? i+1 : i] = dpc[i];\n\t\t\t\t}\n\t\t\t\ttmp[pos] = obj.id;\n\t\t\t\tnew_par.children = tmp;\n\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t\tthis.redraw(new_par.id === '#');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// clean old parent and up\n\t\t\t\ttmp = obj.children_d.concat();\n\t\t\t\ttmp.push(obj.id);\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\tdpc = [];\n\t\t\t\t\tp = old_ins._model.data[obj.parents[i]].children_d;\n\t\t\t\t\tfor(k = 0, l = p.length; k < l; k++) {\n\t\t\t\t\t\tif($.inArray(p[k], tmp) === -1) {\n\t\t\t\t\t\t\tdpc.push(p[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\told_ins._model.data[obj.parents[i]].children_d = dpc;\n\t\t\t\t}\n\t\t\t\told_ins._model.data[old_par].children = $.vakata.array_remove_item(old_ins._model.data[old_par].children, obj.id);\n\n\t\t\t\t// insert into new parent and up\n\t\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(tmp);\n\t\t\t\t}\n\t\t\t\tdpc = [];\n\t\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\n\t\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\n\t\t\t\t}\n\t\t\t\tdpc[pos] = obj.id;\n\t\t\t\tnew_par.children = dpc;\n\t\t\t\tnew_par.children_d.push(obj.id);\n\t\t\t\tnew_par.children_d = new_par.children_d.concat(obj.children_d);\n\n\t\t\t\t// update object\n\t\t\t\tobj.parent = new_par.id;\n\t\t\t\ttmp = new_par.parents.concat();\n\t\t\t\ttmp.unshift(new_par.id);\n\t\t\t\tp = obj.parents.length;\n\t\t\t\tobj.parents = tmp;\n\n\t\t\t\t// update object children\n\t\t\t\ttmp = tmp.concat();\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[obj.children_d[i]].parents = this._model.data[obj.children_d[i]].parents.slice(0,p*-1);\n\t\t\t\t\tArray.prototype.push.apply(this._model.data[obj.children_d[i]].parents, tmp);\n\t\t\t\t}\n\n\t\t\t\tthis._node_changed(old_par);\n\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t\tthis.redraw(old_par === '#' || new_par.id === '#');\n\t\t\t}\n\t\t\tif(callback) { callback.call(this, obj, new_par, pos); }\n\t\t\t/**\n\t\t\t * triggered when a node is moved\n\t\t\t * @event\n\t\t\t * @name move_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the node among the parent's children\n\t\t\t * @param {String} old_parent the old parent of the node\n\t\t\t * @param {Number} old_position the old position of the node\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\n\t\t\t * @param {jsTree} old_instance the instance the node came from\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\n\t\t\t */\n\t\t\tthis.trigger('move_node', { \"node\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_pos, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * copy a node to a new parent\n\t\t * @name copy_node(obj, par [, pos, callback, is_loaded])\n\t\t * @param  {mixed} obj the node to copy, pass an array to copy multiple nodes\n\t\t * @param  {mixed} par the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\n\t\t * @param  {Boolean} internal parameter indicating if the parent node has been loaded\n\t\t * @trigger model.jstree copy_node.jstree\n\t\t */\n\t\tcopy_node : function (obj, par, pos, callback, is_loaded) {\n\t\t\tvar t1, t2, dpc, tmp, i, j, node, old_par, new_par, old_ins, is_multi;\n\n\t\t\tpar = this.get_node(par);\n\t\t\tpos = pos === undefined ? 0 : pos;\n\t\t\tif(!par) { return false; }\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.copy_node(obj, par, pos, callback, true); });\n\t\t\t}\n\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.reverse().slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.copy_node(obj[t1], par, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\n\t\t\told_par = (obj.parent || '#').toString();\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === '#') ? par : this.get_node(par.parent);\n\t\t\told_ins = obj.instance ? obj.instance : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\n\t\t\tif(new_par.id === '#') {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = new_par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\n\t\t\tif(!this.check(\"copy_node\", obj, new_par, pos, { 'core' : true, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnode = old_ins ? old_ins.get_json(obj, { no_id : true, no_data : true, no_state : true }) : obj;\n\t\t\tif(!node) { return false; }\n\t\t\tif(node.id === true) { delete node.id; }\n\t\t\tnode = this._parse_model_from_json(node, new_par.id, new_par.parents.concat());\n\t\t\tif(!node) { return false; }\n\t\t\ttmp = this.get_node(node);\n\t\t\tif(obj && obj.state && obj.state.loaded === false) { tmp.state.loaded = false; }\n\t\t\tdpc = [];\n\t\t\tdpc.push(node);\n\t\t\tdpc = dpc.concat(tmp.children_d);\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : new_par.id });\n\n\t\t\t// insert into new parent and up\n\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\tdpc = [];\n\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\n\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\n\t\t\t}\n\t\t\tdpc[pos] = tmp.id;\n\t\t\tnew_par.children = dpc;\n\t\t\tnew_par.children_d.push(tmp.id);\n\t\t\tnew_par.children_d = new_par.children_d.concat(tmp.children_d);\n\n\t\t\tthis._node_changed(new_par.id);\n\t\t\tthis.redraw(new_par.id === '#');\n\t\t\tif(callback) { callback.call(this, tmp, new_par, pos); }\n\t\t\t/**\n\t\t\t * triggered when a node is copied\n\t\t\t * @event\n\t\t\t * @name copy_node.jstree\n\t\t\t * @param {Object} node the copied node\n\t\t\t * @param {Object} original the original node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the node among the parent's children\n\t\t\t * @param {String} old_parent the old parent of the node\n\t\t\t * @param {Number} old_position the position of the original node\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\n\t\t\t * @param {jsTree} old_instance the instance the node came from\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\n\t\t\t */\n\t\t\tthis.trigger('copy_node', { \"node\" : tmp, \"original\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1,'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * cut a node (a later call to `paste(obj)` would move the node)\n\t\t * @name cut(obj)\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\n\t\t * @trigger cut.jstree\n\t\t */\n\t\tcut : function (obj) {\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\n\t\t\tif(!obj.length) { return false; }\n\t\t\tvar tmp = [], o, t1, t2;\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\to = this.get_node(obj[t1]);\n\t\t\t\tif(o && o.id && o.id !== '#') { tmp.push(o); }\n\t\t\t}\n\t\t\tif(!tmp.length) { return false; }\n\t\t\tccp_node = tmp;\n\t\t\tccp_inst = this;\n\t\t\tccp_mode = 'move_node';\n\t\t\t/**\n\t\t\t * triggered when nodes are added to the buffer for moving\n\t\t\t * @event\n\t\t\t * @name cut.jstree\n\t\t\t * @param {Array} node\n\t\t\t */\n\t\t\tthis.trigger('cut', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * copy a node (a later call to `paste(obj)` would copy the node)\n\t\t * @name copy(obj)\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\n\t\t * @trigger copy.jstre\n\t\t */\n\t\tcopy : function (obj) {\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\n\t\t\tif(!obj.length) { return false; }\n\t\t\tvar tmp = [], o, t1, t2;\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\to = this.get_node(obj[t1]);\n\t\t\t\tif(o && o.id && o.id !== '#') { tmp.push(o); }\n\t\t\t}\n\t\t\tif(!tmp.length) { return false; }\n\t\t\tccp_node = tmp;\n\t\t\tccp_inst = this;\n\t\t\tccp_mode = 'copy_node';\n\t\t\t/**\n\t\t\t * triggered when nodes are added to the buffer for copying\n\t\t\t * @event\n\t\t\t * @name copy.jstree\n\t\t\t * @param {Array} node\n\t\t\t */\n\t\t\tthis.trigger('copy', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * get the current buffer (any nodes that are waiting for a paste operation)\n\t\t * @name get_buffer()\n\t\t * @return {Object} an object consisting of `mode` (\"copy_node\" or \"move_node\"), `node` (an array of objects) and `inst` (the instance)\n\t\t */\n\t\tget_buffer : function () {\n\t\t\treturn { 'mode' : ccp_mode, 'node' : ccp_node, 'inst' : ccp_inst };\n\t\t},\n\t\t/**\n\t\t * check if there is something in the buffer to paste\n\t\t * @name can_paste()\n\t\t * @return {Boolean}\n\t\t */\n\t\tcan_paste : function () {\n\t\t\treturn ccp_mode !== false && ccp_node !== false; // && ccp_inst._model.data[ccp_node];\n\t\t},\n\t\t/**\n\t\t * copy or move the previously cut or copied nodes to a new parent\n\t\t * @name paste(obj [, pos])\n\t\t * @param  {mixed} obj the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer, \"first\" and \"last\" are supported), defaults to integer `0`\n\t\t * @trigger paste.jstree\n\t\t */\n\t\tpaste : function (obj, pos) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || !ccp_mode || !ccp_mode.match(/^(copy_node|move_node)$/) || !ccp_node) { return false; }\n\t\t\tif(this[ccp_mode](ccp_node, obj, pos)) {\n\t\t\t\t/**\n\t\t\t\t * triggered when paste is invoked\n\t\t\t\t * @event\n\t\t\t\t * @name paste.jstree\n\t\t\t\t * @param {String} parent the ID of the receiving node\n\t\t\t\t * @param {Array} node the nodes in the buffer\n\t\t\t\t * @param {String} mode the performed operation - \"copy_node\" or \"move_node\"\n\t\t\t\t */\n\t\t\t\tthis.trigger('paste', { \"parent\" : obj.id, \"node\" : ccp_node, \"mode\" : ccp_mode });\n\t\t\t}\n\t\t\tccp_node = false;\n\t\t\tccp_mode = false;\n\t\t\tccp_inst = false;\n\t\t},\n\t\t/**\n\t\t * put a node in edit mode (input field to rename the node)\n\t\t * @name edit(obj [, default_text])\n\t\t * @param  {mixed} obj\n\t\t * @param  {String} default_text the text to populate the input with (if omitted the node text value is used)\n\t\t */\n\t\tedit : function (obj, default_text) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tif(this.settings.core.check_callback === false) {\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_07', 'reason' : 'Could not edit node because of check_callback' };\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdefault_text = typeof default_text === 'string' ? default_text : obj.text;\n\t\t\tthis.set_text(obj, \"\");\n\t\t\tobj = this._open_to(obj);\n\n\t\t\tvar rtl = this._data.core.rtl,\n\t\t\t\tw  = this.element.width(),\n\t\t\t\ta  = obj.children('.jstree-anchor'),\n\t\t\t\ts  = $('<span>'),\n\t\t\t\t/*!\n\t\t\t\toi = obj.children(\"i:visible\"),\n\t\t\t\tai = a.children(\"i:visible\"),\n\t\t\t\tw1 = oi.width() * oi.length,\n\t\t\t\tw2 = ai.width() * ai.length,\n\t\t\t\t*/\n\t\t\t\tt  = default_text,\n\t\t\t\th1 = $(\"<\"+\"div />\", { css : { \"position\" : \"absolute\", \"top\" : \"-200px\", \"left\" : (rtl ? \"0px\" : \"-1000px\"), \"visibility\" : \"hidden\" } }).appendTo(\"body\"),\n\t\t\t\th2 = $(\"<\"+\"input />\", {\n\t\t\t\t\t\t\"value\" : t,\n\t\t\t\t\t\t\"class\" : \"jstree-rename-input\",\n\t\t\t\t\t\t// \"size\" : t.length,\n\t\t\t\t\t\t\"css\" : {\n\t\t\t\t\t\t\t\"padding\" : \"0\",\n\t\t\t\t\t\t\t\"border\" : \"1px solid silver\",\n\t\t\t\t\t\t\t\"box-sizing\" : \"border-box\",\n\t\t\t\t\t\t\t\"display\" : \"inline-block\",\n\t\t\t\t\t\t\t\"height\" : (this._data.core.li_height) + \"px\",\n\t\t\t\t\t\t\t\"lineHeight\" : (this._data.core.li_height) + \"px\",\n\t\t\t\t\t\t\t\"width\" : \"150px\" // will be set a bit further down\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"blur\" : $.proxy(function () {\n\t\t\t\t\t\t\tvar i = s.children(\".jstree-rename-input\"),\n\t\t\t\t\t\t\t\tv = i.val();\n\t\t\t\t\t\t\tif(v === \"\") { v = t; }\n\t\t\t\t\t\t\th1.remove();\n\t\t\t\t\t\t\ts.replaceWith(a);\n\t\t\t\t\t\t\ts.remove();\n\t\t\t\t\t\t\tthis.set_text(obj, t);\n\t\t\t\t\t\t\tif(this.rename_node(obj, $('<div></div>').text(v)[this.settings.core.force_text ? 'text' : 'html']()) === false) {\n\t\t\t\t\t\t\t\tthis.set_text(obj, t); // move this up? and fix #483\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this),\n\t\t\t\t\t\t\"keydown\" : function (event) {\n\t\t\t\t\t\t\tvar key = event.which;\n\t\t\t\t\t\t\tif(key === 27) {\n\t\t\t\t\t\t\t\tthis.value = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\n\t\t\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(key === 27 || key === 13) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tthis.blur();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"click\" : function (e) { e.stopImmediatePropagation(); },\n\t\t\t\t\t\t\"mousedown\" : function (e) { e.stopImmediatePropagation(); },\n\t\t\t\t\t\t\"keyup\" : function (event) {\n\t\t\t\t\t\t\th2.width(Math.min(h1.text(\"pW\" + this.value).width(),w));\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"keypress\" : function(event) {\n\t\t\t\t\t\t\tif(event.which === 13) { return false; }\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\tfn = {\n\t\t\t\t\t\tfontFamily\t\t: a.css('fontFamily')\t\t|| '',\n\t\t\t\t\t\tfontSize\t\t: a.css('fontSize')\t\t\t|| '',\n\t\t\t\t\t\tfontWeight\t\t: a.css('fontWeight')\t\t|| '',\n\t\t\t\t\t\tfontStyle\t\t: a.css('fontStyle')\t\t|| '',\n\t\t\t\t\t\tfontStretch\t\t: a.css('fontStretch')\t\t|| '',\n\t\t\t\t\t\tfontVariant\t\t: a.css('fontVariant')\t\t|| '',\n\t\t\t\t\t\tletterSpacing\t: a.css('letterSpacing')\t|| '',\n\t\t\t\t\t\twordSpacing\t\t: a.css('wordSpacing')\t\t|| ''\n\t\t\t\t};\n\t\t\ts.attr('class', a.attr('class')).append(a.contents().clone()).append(h2);\n\t\t\ta.replaceWith(s);\n\t\t\th1.css(fn);\n\t\t\th2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(),w))[0].select();\n\t\t},\n\n\n\t\t/**\n\t\t * changes the theme\n\t\t * @name set_theme(theme_name [, theme_url])\n\t\t * @param {String} theme_name the name of the new theme to apply\n\t\t * @param {mixed} theme_url  the location of the CSS file for this theme. Omit or set to `false` if you manually included the file. Set to `true` to autoload from the `core.themes.dir` directory.\n\t\t * @trigger set_theme.jstree\n\t\t */\n\t\tset_theme : function (theme_name, theme_url) {\n\t\t\tif(!theme_name) { return false; }\n\t\t\tif(theme_url === true) {\n\t\t\t\tvar dir = this.settings.core.themes.dir;\n\t\t\t\tif(!dir) { dir = $.jstree.path + '/themes'; }\n\t\t\t\ttheme_url = dir + '/' + theme_name + '/style.css';\n\t\t\t}\n\t\t\tif(theme_url && $.inArray(theme_url, themes_loaded) === -1) {\n\t\t\t\t$('head').append('<'+'link rel=\"stylesheet\" href=\"' + theme_url + '\" type=\"text/css\" />');\n\t\t\t\tthemes_loaded.push(theme_url);\n\t\t\t}\n\t\t\tif(this._data.core.themes.name) {\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name);\n\t\t\t}\n\t\t\tthis._data.core.themes.name = theme_name;\n\t\t\tthis.element.addClass('jstree-' + theme_name);\n\t\t\tthis.element[this.settings.core.themes.responsive ? 'addClass' : 'removeClass' ]('jstree-' + theme_name + '-responsive');\n\t\t\t/**\n\t\t\t * triggered when a theme is set\n\t\t\t * @event\n\t\t\t * @name set_theme.jstree\n\t\t\t * @param {String} theme the new theme\n\t\t\t */\n\t\t\tthis.trigger('set_theme', { 'theme' : theme_name });\n\t\t},\n\t\t/**\n\t\t * gets the name of the currently applied theme name\n\t\t * @name get_theme()\n\t\t * @return {String}\n\t\t */\n\t\tget_theme : function () { return this._data.core.themes.name; },\n\t\t/**\n\t\t * changes the theme variant (if the theme has variants)\n\t\t * @name set_theme_variant(variant_name)\n\t\t * @param {String|Boolean} variant_name the variant to apply (if `false` is used the current variant is removed)\n\t\t */\n\t\tset_theme_variant : function (variant_name) {\n\t\t\tif(this._data.core.themes.variant) {\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\n\t\t\t}\n\t\t\tthis._data.core.themes.variant = variant_name;\n\t\t\tif(variant_name) {\n\t\t\t\tthis.element.addClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * gets the name of the currently applied theme variant\n\t\t * @name get_theme()\n\t\t * @return {String}\n\t\t */\n\t\tget_theme_variant : function () { return this._data.core.themes.variant; },\n\t\t/**\n\t\t * shows a striped background on the container (if the theme supports it)\n\t\t * @name show_stripes()\n\t\t */\n\t\tshow_stripes : function () { this._data.core.themes.stripes = true; this.get_container_ul().addClass(\"jstree-striped\"); },\n\t\t/**\n\t\t * hides the striped background on the container\n\t\t * @name hide_stripes()\n\t\t */\n\t\thide_stripes : function () { this._data.core.themes.stripes = false; this.get_container_ul().removeClass(\"jstree-striped\"); },\n\t\t/**\n\t\t * toggles the striped background on the container\n\t\t * @name toggle_stripes()\n\t\t */\n\t\ttoggle_stripes : function () { if(this._data.core.themes.stripes) { this.hide_stripes(); } else { this.show_stripes(); } },\n\t\t/**\n\t\t * shows the connecting dots (if the theme supports it)\n\t\t * @name show_dots()\n\t\t */\n\t\tshow_dots : function () { this._data.core.themes.dots = true; this.get_container_ul().removeClass(\"jstree-no-dots\"); },\n\t\t/**\n\t\t * hides the connecting dots\n\t\t * @name hide_dots()\n\t\t */\n\t\thide_dots : function () { this._data.core.themes.dots = false; this.get_container_ul().addClass(\"jstree-no-dots\"); },\n\t\t/**\n\t\t * toggles the connecting dots\n\t\t * @name toggle_dots()\n\t\t */\n\t\ttoggle_dots : function () { if(this._data.core.themes.dots) { this.hide_dots(); } else { this.show_dots(); } },\n\t\t/**\n\t\t * show the node icons\n\t\t * @name show_icons()\n\t\t */\n\t\tshow_icons : function () { this._data.core.themes.icons = true; this.get_container_ul().removeClass(\"jstree-no-icons\"); },\n\t\t/**\n\t\t * hide the node icons\n\t\t * @name hide_icons()\n\t\t */\n\t\thide_icons : function () { this._data.core.themes.icons = false; this.get_container_ul().addClass(\"jstree-no-icons\"); },\n\t\t/**\n\t\t * toggle the node icons\n\t\t * @name toggle_icons()\n\t\t */\n\t\ttoggle_icons : function () { if(this._data.core.themes.icons) { this.hide_icons(); } else { this.show_icons(); } },\n\t\t/**\n\t\t * set the node icon for a node\n\t\t * @name set_icon(obj, icon)\n\t\t * @param {mixed} obj\n\t\t * @param {String} icon the new icon - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\n\t\t */\n\t\tset_icon : function (obj, icon) {\n\t\t\tvar t1, t2, dom, old;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_icon(obj[t1], icon);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\told = obj.icon;\n\t\t\tobj.icon = icon;\n\t\t\tdom = this.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\");\n\t\t\tif(icon === false) {\n\t\t\t\tthis.hide_icon(obj);\n\t\t\t}\n\t\t\telse if(icon === true) {\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\n\t\t\t}\n\t\t\telse if(icon.indexOf(\"/\") === -1 && icon.indexOf(\".\") === -1) {\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\n\t\t\t\tdom.addClass(icon + ' jstree-themeicon-custom').attr(\"rel\",icon);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\n\t\t\t\tdom.addClass('jstree-themeicon-custom').css(\"background\", \"url('\" + icon + \"') center center no-repeat\").attr(\"rel\",icon);\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the node icon for a node\n\t\t * @name get_icon(obj)\n\t\t * @param {mixed} obj\n\t\t * @return {String}\n\t\t */\n\t\tget_icon : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj || obj.id === '#') ? false : obj.icon;\n\t\t},\n\t\t/**\n\t\t * hide the icon on an individual node\n\t\t * @name hide_icon(obj)\n\t\t * @param {mixed} obj\n\t\t */\n\t\thide_icon : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.hide_icon(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj === '#') { return false; }\n\t\t\tobj.icon = false;\n\t\t\tthis.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\").addClass('jstree-themeicon-hidden');\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * show the icon on an individual node\n\t\t * @name show_icon(obj)\n\t\t * @param {mixed} obj\n\t\t */\n\t\tshow_icon : function (obj) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.show_icon(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj === '#') { return false; }\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tobj.icon = dom.length ? dom.children(\".jstree-anchor\").children(\".jstree-themeicon\").attr('rel') : true;\n\t\t\tif(!obj.icon) { obj.icon = true; }\n\t\t\tdom.children(\".jstree-anchor\").children(\".jstree-themeicon\").removeClass('jstree-themeicon-hidden');\n\t\t\treturn true;\n\t\t}\n\t};\n\n\t// helpers\n\t$.vakata = {};\n\t// collect attributes\n\t$.vakata.attributes = function(node, with_values) {\n\t\tnode = $(node)[0];\n\t\tvar attr = with_values ? {} : [];\n\t\tif(node && node.attributes) {\n\t\t\t$.each(node.attributes, function (i, v) {\n\t\t\t\tif($.inArray(v.nodeName.toLowerCase(),['style','contenteditable','hasfocus','tabindex']) !== -1) { return; }\n\t\t\t\tif(v.nodeValue !== null && $.trim(v.nodeValue) !== '') {\n\t\t\t\t\tif(with_values) { attr[v.nodeName] = v.nodeValue; }\n\t\t\t\t\telse { attr.push(v.nodeName); }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn attr;\n\t};\n\t$.vakata.array_unique = function(array) {\n\t\tvar a = [], i, j, l;\n\t\tfor(i = 0, l = array.length; i < l; i++) {\n\t\t\tfor(j = 0; j <= i; j++) {\n\t\t\t\tif(array[i] === array[j]) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j === i) { a.push(array[i]); }\n\t\t}\n\t\treturn a;\n\t};\n\t// remove item from array\n\t$.vakata.array_remove = function(array, from, to) {\n\t\tvar rest = array.slice((to || from) + 1 || array.length);\n\t\tarray.length = from < 0 ? array.length + from : from;\n\t\tarray.push.apply(array, rest);\n\t\treturn array;\n\t};\n\t// remove item from array\n\t$.vakata.array_remove_item = function(array, item) {\n\t\tvar tmp = $.inArray(item, array);\n\t\treturn tmp !== -1 ? $.vakata.array_remove(array, tmp) : array;\n\t};\n\n/**\n * ### Checkbox plugin\n *\n * This plugin renders checkbox icons in front of each node, making multiple selection much easier. \n * It also supports tri-state behavior, meaning that if a node has a few of its children checked it will be rendered as undetermined, and state will be propagated up.\n */\n\n\tvar _i = document.createElement('I');\n\t_i.className = 'jstree-icon jstree-checkbox';\n\t/**\n\t * stores all defaults for the checkbox plugin\n\t * @name $.jstree.defaults.checkbox\n\t * @plugin checkbox\n\t */\n\t$.jstree.defaults.checkbox = {\n\t\t/**\n\t\t * a boolean indicating if checkboxes should be visible (can be changed at a later time using `show_checkboxes()` and `hide_checkboxes`). Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.visible\n\t\t * @plugin checkbox\n\t\t */\n\t\tvisible\t\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if checkboxes should cascade down and have an undetermined state. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.three_state\n\t\t * @plugin checkbox\n\t\t */\n\t\tthree_state\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if clicking anywhere on the node should act as clicking on the checkbox. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.whole_node\n\t\t * @plugin checkbox\n\t\t */\n\t\twhole_node\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if the selected style of a node should be kept, or removed. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.keep_selected_style\n\t\t * @plugin checkbox\n\t\t */\n\t\tkeep_selected_style\t: true,\n\t\t/**\n\t\t * This setting controls how cascading and undetermined nodes are applied. \n\t\t * If 'up' is in the string - cascading up is enabled, if 'down' is in the string - cascading down is enabled, if 'undetermined' is in the string - undetermined nodes will be used. \n\t\t * If `three_state` is set to `true` this setting is automatically set to 'up+down+undetermined'. Defaults to ''.\n\t\t * @name $.jstree.defaults.checkbox.cascade\n\t\t * @plugin checkbox\n\t\t */\n\t\tcascade\t\t\t\t: '',\n\t\t/**\n\t\t * This setting controls if checkbox are bound to the general tree selection or to an internal array maintained by the checkbox plugin. Defaults to `true`, only set to `false` if you know exactly what you are doing. \n\t\t * @name $.jstree.defaults.checkbox.tie_selection\n\t\t * @plugin checkbox\n\t\t */\n\t\ttie_selection\t\t: true\n\t};\n\t$.jstree.plugins.checkbox = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tthis._data.checkbox.uto = false;\n\t\t\tthis._data.checkbox.selected = [];\n\t\t\tif(this.settings.checkbox.three_state) {\n\t\t\t\tthis.settings.checkbox.cascade = 'up+down+undetermined';\n\t\t\t}\n\t\t\tthis.element\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis._data.checkbox.visible = this.settings.checkbox.visible;\n\t\t\t\t\t\tif(!this.settings.checkbox.keep_selected_style) {\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-no-clicked');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.settings.checkbox.tie_selection) {\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-selection');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis[ this._data.checkbox.visible ? 'show_checkboxes' : 'hide_checkboxes' ]();\n\t\t\t\t\t}, this));\n\t\t\tif(this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree', $.proxy(function () {\n\t\t\t\t\t\t\t// only if undetermined is in setting\n\t\t\t\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\n\t\t\t\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(!this.settings.checkbox.tie_selection) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\tp = m[data.parent],\n\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\ti, j;\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\tm[dpc[i]].state.checked = (m[dpc[i]].original && m[dpc[i]].original.state && m[dpc[i]].original.state.checked);\n\t\t\t\t\t\t\tif(m[dpc[i]].state.checked) {\n\t\t\t\t\t\t\t\tthis._data.checkbox.selected.push(dpc[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1 || this.settings.checkbox.cascade.indexOf('down') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\t\tp = m[data.parent],\n\t\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\t\tchd = [],\n\t\t\t\t\t\t\t\tc, i, j, k, l, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tm[dpc[i]].state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(dpc);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tif(m[dpc[i]].state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\t\tfor(k = 0, l = m[dpc[i]].children_d.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\t\t\t\tm[m[dpc[i]].children_d[k]].state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(m[dpc[i]].children_d);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tif(!m[p.children_d[i]].children.length) {\n\t\t\t\t\t\t\t\t\t\tchd.push(m[p.children_d[i]].parent);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchd = $.vakata.array_unique(chd);\n\t\t\t\t\t\t\t\tfor(k = 0, l = chd.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\tp = m[chd[k]];\n\t\t\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass( t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected);\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'select_node.jstree' : 'check_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = data.node,\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\tpar = this.get_node(obj.parent),\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\n\t\t\t\t\t\t\t\ti, j, c, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\n\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected.concat(obj.children_d));\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\twhile(par && par.id !== '#') {\n\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tc += m[par.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\tpar.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(par.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(par, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpar = this.get_node(par.parent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply down (process .children separately?)\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1 && dom.length) {\n\t\t\t\t\t\t\t\tdom.find('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_all.jstree' : 'uncheck_all.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = this.get_node('#'),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\ti, j, tmp;\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\n\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_node.jstree' : 'uncheck_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = data.node,\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\n\t\t\t\t\t\t\t\ti, j, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\tif(obj && obj.original && obj.original.state && obj.original.state.undetermined) {\n\t\t\t\t\t\t\t\tobj.original.state.undetermined = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.children_d[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.parents[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(obj.parents[i], true);\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t\t\tfor(i = 0, j = this._data[ t ? 'core' : 'checkbox' ].selected.length; i < j; i++) {\n\t\t\t\t\t\t\t\t// apply down + apply up\n\t\t\t\t\t\t\t\tif(\n\t\t\t\t\t\t\t\t\t(s.indexOf('down') === -1 || $.inArray(this._data[ t ? 'core' : 'checkbox' ].selected[i], obj.children_d) === -1) &&\n\t\t\t\t\t\t\t\t\t(s.indexOf('up') === -1 || $.inArray(this._data[ t ? 'core' : 'checkbox' ].selected[i], obj.parents) === -1)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\ttmp.push(this._data[ t ? 'core' : 'checkbox' ].selected[i]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(tmp);\n\n\t\t\t\t\t\t\t// apply down (process .children separately?)\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1 && dom.length) {\n\t\t\t\t\t\t\t\tdom.find('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('delete_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\t// apply up (whole handler)\n\t\t\t\t\t\t\tvar p = this.get_node(data.parent),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\ti, j, c, tmp, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on('move_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\t// apply up (whole handler)\n\t\t\t\t\t\t\tvar is_multi = data.is_multi,\n\t\t\t\t\t\t\t\told_par = data.old_parent,\n\t\t\t\t\t\t\t\tnew_par = this.get_node(data.parent),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\tp, c, i, j, tmp, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\tif(!is_multi) {\n\t\t\t\t\t\t\t\tp = this.get_node(old_par);\n\t\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tp = new_par;\n\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\tif(!p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_remove_item(this._data[ t ? 'core' : 'checkbox' ].selected, p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * set the undetermined state where and if necessary. Used internally.\n\t\t * @private\n\t\t * @name _undetermined()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis._undetermined = function () {\n\t\t\tvar i, j, m = this._model.data, t = this.settings.checkbox.tie_selection, s = this._data[ t ? 'core' : 'checkbox' ].selected, p = [], tt = this;\n\t\t\tfor(i = 0, j = s.length; i < j; i++) {\n\t\t\t\tif(m[s[i]] && m[s[i]].parents) {\n\t\t\t\t\tp = p.concat(m[s[i]].parents);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt for server side undetermined state\n\t\t\tthis.element.find('.jstree-closed').not(':has(.jstree-children)')\n\t\t\t\t.each(function () {\n\t\t\t\t\tvar tmp = tt.get_node(this), tmp2;\n\t\t\t\t\tif(!tmp.state.loaded) {\n\t\t\t\t\t\tif(tmp.original && tmp.original.state && tmp.original.state.undetermined && tmp.original.state.undetermined === true) {\n\t\t\t\t\t\t\tp.push(tmp.id);\n\t\t\t\t\t\t\tp = p.concat(tmp.parents);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(i = 0, j = tmp.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp2 = m[tmp.children_d[i]];\n\t\t\t\t\t\t\tif(!tmp2.state.loaded && tmp2.original && tmp2.original.state && tmp2.original.state.undetermined && tmp2.original.state.undetermined === true) {\n\t\t\t\t\t\t\t\tp.push(tmp2.id);\n\t\t\t\t\t\t\t\tp = p.concat(tmp2.parents);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tp = $.vakata.array_unique(p);\n\t\t\tp = $.vakata.array_remove_item(p,'#');\n\n\t\t\tthis.element.find('.jstree-undetermined').removeClass('jstree-undetermined');\n\t\t\tfor(i = 0, j = p.length; i < j; i++) {\n\t\t\t\tif(!m[p[i]].state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\ts = this.get_node(p[i], true);\n\t\t\t\t\tif(s && s.length) {\n\t\t\t\t\t\ts.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-undetermined');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.redraw_node = function(obj, deep, is_callback) {\n\t\t\tobj = parent.redraw_node.call(this, obj, deep, is_callback);\n\t\t\tif(obj) {\n\t\t\t\tvar i, j, tmp = null;\n\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\n\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\n\t\t\t\t\t\ttmp = obj.childNodes[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(tmp) {\n\t\t\t\t\tif(!this.settings.checkbox.tie_selection && this._model.data[obj.id].state.checked) { tmp.className += ' jstree-checked'; }\n\t\t\t\t\ttmp.insertBefore(_i.cloneNode(false), tmp.childNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!is_callback && this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\n\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\n\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t\t/**\n\t\t * show the node checkbox icons\n\t\t * @name show_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.show_checkboxes = function () { this._data.core.themes.checkboxes = true; this.get_container_ul().removeClass(\"jstree-no-checkboxes\"); };\n\t\t/**\n\t\t * hide the node checkbox icons\n\t\t * @name hide_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.hide_checkboxes = function () { this._data.core.themes.checkboxes = false; this.get_container_ul().addClass(\"jstree-no-checkboxes\"); };\n\t\t/**\n\t\t * toggle the node icons\n\t\t * @name toggle_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.toggle_checkboxes = function () { if(this._data.core.themes.checkboxes) { this.hide_checkboxes(); } else { this.show_checkboxes(); } };\n\t\t/**\n\t\t * checks if a node is in an undetermined state\n\t\t * @name is_undetermined(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tthis.is_undetermined = function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tvar s = this.settings.checkbox.cascade, i, j, t = this.settings.checkbox.tie_selection, d = this._data[ t ? 'core' : 'checkbox' ].selected, m = this._model.data;\n\t\t\tif(!obj || obj.state[ t ? 'selected' : 'checked' ] === true || s.indexOf('undetermined') === -1 || (s.indexOf('down') === -1 && s.indexOf('up') === -1)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!obj.state.loaded && obj.original.state.undetermined === true) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tif($.inArray(obj.children_d[i], d) !== -1 || (!m[obj.children_d[i]].state.loaded && m[obj.children_d[i]].original.state.undetermined)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tthis.activate_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || $(e.target).hasClass('jstree-checkbox'))) {\n\t\t\t\te.ctrlKey = true;\n\t\t\t}\n\t\t\tif(this.settings.checkbox.tie_selection || (!this.settings.checkbox.whole_node && !$(e.target).hasClass('jstree-checkbox'))) {\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\n\t\t\t}\n\t\t\tif(this.is_checked(obj)) {\n\t\t\t\tthis.uncheck_node(obj, e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.check_node(obj, e);\n\t\t\t}\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\n\t\t};\n\n\t\t/**\n\t\t * check a node (only if tie_selection in checkbox settings is false, otherwise select_node will be called internally)\n\t\t * @name check_node(obj)\n\t\t * @param {mixed} obj an array can be used to check multiple nodes\n\t\t * @trigger check_node.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.check_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_node(obj, false, true, e); }\n\t\t\tvar dom, t1, t2, th;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.check_node(obj[t1], e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.checked) {\n\t\t\t\tobj.state.checked = true;\n\t\t\t\tthis._data.checkbox.selected.push(obj.id);\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-checked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is checked (only if tie_selection in checkbox settings is false)\n\t\t\t\t * @event\n\t\t\t\t * @name check_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this check_node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('check_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * uncheck a node (only if tie_selection in checkbox settings is false, otherwise deselect_node will be called internally)\n\t\t * @name deselect_node(obj)\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\n\t\t * @trigger uncheck_node.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.uncheck_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_node(obj, false, e); }\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.uncheck_node(obj[t1], e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.checked) {\n\t\t\t\tobj.state.checked = false;\n\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, obj.id);\n\t\t\t\tif(dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-checked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is unchecked (only if tie_selection in checkbox settings is false)\n\t\t\t\t * @event\n\t\t\t\t * @name uncheck_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this uncheck_node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('uncheck_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * checks all nodes in the tree (only if tie_selection in checkbox settings is false, otherwise select_all will be called internally)\n\t\t * @name check_all()\n\t\t * @trigger check_all.jstree, changed.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.check_all = function () {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_all(); }\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\n\t\t\tthis._data.checkbox.selected = this._model.data['#'].children_d.concat();\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.redraw(true);\n\t\t\t/**\n\t\t\t * triggered when all nodes are checked (only if tie_selection in checkbox settings is false)\n\t\t\t * @event\n\t\t\t * @name check_all.jstree\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @plugin checkbox\n\t\t\t */\n\t\t\tthis.trigger('check_all', { 'selected' : this._data.checkbox.selected });\n\t\t};\n\t\t/**\n\t\t * uncheck all checked nodes (only if tie_selection in checkbox settings is false, otherwise deselect_all will be called internally)\n\t\t * @name uncheck_all()\n\t\t * @trigger uncheck_all.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.uncheck_all = function () {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_all(); }\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.checkbox.selected = [];\n\t\t\tthis.element.find('.jstree-checked').removeClass('jstree-checked');\n\t\t\t/**\n\t\t\t * triggered when all nodes are unchecked (only if tie_selection in checkbox settings is false)\n\t\t\t * @event\n\t\t\t * @name uncheck_all.jstree\n\t\t\t * @param {Object} node the previous selection\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @plugin checkbox\n\t\t\t */\n\t\t\tthis.trigger('uncheck_all', { 'selected' : this._data.checkbox.selected, 'node' : tmp });\n\t\t};\n\t\t/**\n\t\t * checks if a node is checked (if tie_selection is on in the settings this function will return the same as is_selected)\n\t\t * @name is_checked(obj)\n\t\t * @param  {mixed}  obj\n\t\t * @return {Boolean}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.is_checked = function (obj) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.is_selected(obj); }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\treturn obj.state.checked;\n\t\t};\n\t\t/**\n\t\t * get an array of all checked nodes (if tie_selection is on in the settings this function will return the same as get_selected)\n\t\t * @name get_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_selected(full); }\n\t\t\treturn full ? $.map(this._data.checkbox.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.checkbox.selected;\n\t\t};\n\t\t/**\n\t\t * get an array of all top level checked nodes (ignoring children of checked nodes) (if tie_selection is on in the settings this function will return the same as get_top_selected)\n\t\t * @name get_top_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_top_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_top_selected(full); }\n\t\t\tvar tmp = this.get_checked(true),\n\t\t\t\tobj = {}, i, j, k, l;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tobj[tmp[i].id] = tmp[i];\n\t\t\t}\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tfor(i in obj) {\n\t\t\t\tif(obj.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\n\t\t};\n\t\t/**\n\t\t * get an array of all bottom level checked nodes (ignoring selected parents) (if tie_selection is on in the settings this function will return the same as get_bottom_selected)\n\t\t * @name get_bottom_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_bottom_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_bottom_selected(full); }\n\t\t\tvar tmp = this.get_checked(true),\n\t\t\t\tobj = [], i, j;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tif(!tmp[i].children.length) {\n\t\t\t\t\tobj.push(tmp[i].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\n\t\t};\n\t};\n\n\t// include the checkbox plugin by default\n\t// $.jstree.defaults.plugins.push(\"checkbox\");\n\n/**\n * ### Contextmenu plugin\n *\n * Shows a context menu when a node is right-clicked.\n */\n// TODO: move logic outside of function + check multiple move\n\n\t/**\n\t * stores all defaults for the contextmenu plugin\n\t * @name $.jstree.defaults.contextmenu\n\t * @plugin contextmenu\n\t */\n\t$.jstree.defaults.contextmenu = {\n\t\t/**\n\t\t * a boolean indicating if the node should be selected when the context menu is invoked on it. Defaults to `true`.\n\t\t * @name $.jstree.defaults.contextmenu.select_node\n\t\t * @plugin contextmenu\n\t\t */\n\t\tselect_node : true,\n\t\t/**\n\t\t * a boolean indicating if the menu should be shown aligned with the node. Defaults to `true`, otherwise the mouse coordinates are used.\n\t\t * @name $.jstree.defaults.contextmenu.show_at_node\n\t\t * @plugin contextmenu\n\t\t */\n\t\tshow_at_node : true,\n\t\t/**\n\t\t * an object of actions, or a function that accepts a node and a callback function and calls the callback function with an object of actions available for that node (you can also return the items too).\n\t\t * \n\t\t * Each action consists of a key (a unique name) and a value which is an object with the following properties (only label and action are required):\n\t\t * \n\t\t * * `separator_before` - a boolean indicating if there should be a separator before this item\n\t\t * * `separator_after` - a boolean indicating if there should be a separator after this item\n\t\t * * `_disabled` - a boolean indicating if this action should be disabled\n\t\t * * `label` - a string - the name of the action (could be a function returning a string)\n\t\t * * `action` - a function to be executed if this item is chosen\n\t\t * * `icon` - a string, can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\n\t\t * * `shortcut` - keyCode which will trigger the action if the menu is open (for example `113` for rename, which equals F2)\n\t\t * * `shortcut_label` - shortcut label (like for example `F2` for rename)\n\t\t * \n\t\t * @name $.jstree.defaults.contextmenu.items\n\t\t * @plugin contextmenu\n\t\t */\n\t\titems : function (o, cb) { // Could be an object directly\n\t\t\treturn {\n\t\t\t\t\"create\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"separator_after\"\t: true,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"create_node\", data.reference, {}, \"last\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Create\",\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.create_node(obj, {}, \"last\", function (new_node) {\n\t\t\t\t\t\t\tsetTimeout(function () { inst.edit(new_node); },0);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"rename\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"rename_node\", data.reference, this.get_parent(data.reference), \"\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Rename\",\n\t\t\t\t\t/*\n\t\t\t\t\t\"shortcut\"\t\t\t: 113,\n\t\t\t\t\t\"shortcut_label\"\t: 'F2',\n\t\t\t\t\t\"icon\"\t\t\t\t: \"glyphicon glyphicon-leaf\",\n\t\t\t\t\t*/\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.edit(obj);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"remove\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"delete_node\", data.reference, this.get_parent(data.reference), \"\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Delete\",\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"ccp\" : {\n\t\t\t\t\t\"separator_before\"\t: true,\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"label\"\t\t\t\t: \"Edit\",\n\t\t\t\t\t\"action\"\t\t\t: false,\n\t\t\t\t\t\"submenu\" : {\n\t\t\t\t\t\t\"cut\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Cut\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"copy\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Copy\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"paste\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\t\t\"_disabled\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\treturn !$.jstree.reference(data.reference).can_paste();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Paste\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tinst.paste(obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\n\t$.jstree.plugins.contextmenu = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tvar last_ts = 0;\n\t\t\tthis.element\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tlast_ts = e.ctrlKey ? e.timeStamp : 0;\n\t\t\t\t\t\tif(!this.is_loading(e.currentTarget)) {\n\t\t\t\t\t\t\tthis.show_contextmenu(e.currentTarget, e.pageX, e.pageY, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\tif(this._data.contextmenu.visible && (!last_ts || e.timeStamp - last_ts > 250)) { // work around safari & macOS ctrl+click\n\t\t\t\t\t\t\t$.vakata.context.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this));\n\t\t\t/*\n\t\t\tif(!('oncontextmenu' in document.body) && ('ontouchstart' in document.body)) {\n\t\t\t\tvar el = null, tm = null;\n\t\t\t\tthis.element\n\t\t\t\t\t.on(\"touchstart\", \".jstree-anchor\", function (e) {\n\t\t\t\t\t\tel = e.currentTarget;\n\t\t\t\t\t\ttm = +new Date();\n\t\t\t\t\t\t$(document).one(\"touchend\", function (e) {\n\t\t\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.targetTouches[0].pageX - window.pageXOffset, e.originalEvent.targetTouches[0].pageY - window.pageYOffset);\n\t\t\t\t\t\t\te.currentTarget = e.target;\n\t\t\t\t\t\t\ttm = ((+(new Date())) - tm);\n\t\t\t\t\t\t\tif(e.target === el && tm > 600 && tm < 1000) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t$(el).trigger('contextmenu', e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tel = null;\n\t\t\t\t\t\t\ttm = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t*/\n\t\t\t$(document).on(\"context_hide.vakata\", $.proxy(function () { this._data.contextmenu.visible = false; }, this));\n\t\t};\n\t\tthis.teardown = function () {\n\t\t\tif(this._data.contextmenu.visible) {\n\t\t\t\t$.vakata.context.hide();\n\t\t\t}\n\t\t\tparent.teardown.call(this);\n\t\t};\n\n\t\t/**\n\t\t * prepare and show the context menu for a node\n\t\t * @name show_contextmenu(obj [, x, y])\n\t\t * @param {mixed} obj the node\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\n\t\t * @param {Object} e the event if available that triggered the contextmenu\n\t\t * @plugin contextmenu\n\t\t * @trigger show_contextmenu.jstree\n\t\t */\n\t\tthis.show_contextmenu = function (obj, x, y, e) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tvar s = this.settings.contextmenu,\n\t\t\t\td = this.get_node(obj, true),\n\t\t\t\ta = d.children(\".jstree-anchor\"),\n\t\t\t\to = false,\n\t\t\t\ti = false;\n\t\t\tif(s.show_at_node || x === undefined || y === undefined) {\n\t\t\t\to = a.offset();\n\t\t\t\tx = o.left;\n\t\t\t\ty = o.top + this._data.core.li_height;\n\t\t\t}\n\t\t\tif(this.settings.contextmenu.select_node && !this.is_selected(obj)) {\n\t\t\t\tthis.activate_node(obj, e);\n\t\t\t}\n\n\t\t\ti = s.items;\n\t\t\tif($.isFunction(i)) {\n\t\t\t\ti = i.call(this, obj, $.proxy(function (i) {\n\t\t\t\t\tthis._show_contextmenu(obj, x, y, i);\n\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif($.isPlainObject(i)) {\n\t\t\t\tthis._show_contextmenu(obj, x, y, i);\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * show the prepared context menu for a node\n\t\t * @name _show_contextmenu(obj, x, y, i)\n\t\t * @param {mixed} obj the node\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\n\t\t * @param {Number} i the object of items to show\n\t\t * @plugin contextmenu\n\t\t * @trigger show_contextmenu.jstree\n\t\t * @private\n\t\t */\n\t\tthis._show_contextmenu = function (obj, x, y, i) {\n\t\t\tvar d = this.get_node(obj, true),\n\t\t\t\ta = d.children(\".jstree-anchor\");\n\t\t\t$(document).one(\"context_show.vakata\", $.proxy(function (e, data) {\n\t\t\t\tvar cls = 'jstree-contextmenu jstree-' + this.get_theme() + '-contextmenu';\n\t\t\t\t$(data.element).addClass(cls);\n\t\t\t}, this));\n\t\t\tthis._data.contextmenu.visible = true;\n\t\t\t$.vakata.context.show(a, { 'x' : x, 'y' : y }, i);\n\t\t\t/**\n\t\t\t * triggered when the contextmenu is shown for a node\n\t\t\t * @event\n\t\t\t * @name show_contextmenu.jstree\n\t\t\t * @param {Object} node the node\n\t\t\t * @param {Number} x the x-coordinate of the menu relative to the document\n\t\t\t * @param {Number} y the y-coordinate of the menu relative to the document\n\t\t\t * @plugin contextmenu\n\t\t\t */\n\t\t\tthis.trigger('show_contextmenu', { \"node\" : obj, \"x\" : x, \"y\" : y });\n\t\t};\n\t};\n\n\t// contextmenu helper\n\t(function ($) {\n\t\tvar right_to_left = false,\n\t\t\tvakata_context = {\n\t\t\t\telement\t\t: false,\n\t\t\t\treference\t: false,\n\t\t\t\tposition_x\t: 0,\n\t\t\t\tposition_y\t: 0,\n\t\t\t\titems\t\t: [],\n\t\t\t\thtml\t\t: \"\",\n\t\t\t\tis_visible\t: false\n\t\t\t};\n\n\t\t$.vakata.context = {\n\t\t\tsettings : {\n\t\t\t\thide_onmouseleave\t: 0,\n\t\t\t\ticons\t\t\t\t: true\n\t\t\t},\n\t\t\t_trigger : function (event_name) {\n\t\t\t\t$(document).triggerHandler(\"context_\" + event_name + \".vakata\", {\n\t\t\t\t\t\"reference\"\t: vakata_context.reference,\n\t\t\t\t\t\"element\"\t: vakata_context.element,\n\t\t\t\t\t\"position\"\t: {\n\t\t\t\t\t\t\"x\" : vakata_context.position_x,\n\t\t\t\t\t\t\"y\" : vakata_context.position_y\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t_execute : function (i) {\n\t\t\t\ti = vakata_context.items[i];\n\t\t\t\treturn i && (!i._disabled || ($.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : vakata_context.reference, \"element\" : vakata_context.element }))) && i.action ? i.action.call(null, {\n\t\t\t\t\t\t\t\"item\"\t\t: i,\n\t\t\t\t\t\t\t\"reference\"\t: vakata_context.reference,\n\t\t\t\t\t\t\t\"element\"\t: vakata_context.element,\n\t\t\t\t\t\t\t\"position\"\t: {\n\t\t\t\t\t\t\t\t\"x\" : vakata_context.position_x,\n\t\t\t\t\t\t\t\t\"y\" : vakata_context.position_y\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}) : false;\n\t\t\t},\n\t\t\t_parse : function (o, is_callback) {\n\t\t\t\tif(!o) { return false; }\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tvakata_context.html\t\t= \"\";\n\t\t\t\t\tvakata_context.items\t= [];\n\t\t\t\t}\n\t\t\t\tvar str = \"\",\n\t\t\t\t\tsep = false,\n\t\t\t\t\ttmp;\n\n\t\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\n\t\t\t\t$.each(o, function (i, val) {\n\t\t\t\t\tif(!val) { return true; }\n\t\t\t\t\tvakata_context.items.push(val);\n\t\t\t\t\tif(!sep && val.separator_before) {\n\t\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + ($.vakata.context.settings.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\n\t\t\t\t\t}\n\t\t\t\t\tsep = false;\n\t\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || ($.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : vakata_context.reference, \"element\" : vakata_context.element })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\n\t\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (vakata_context.items.length - 1) + \"'>\";\n\t\t\t\t\tif($.vakata.context.settings.icons) {\n\t\t\t\t\t\tstr += \"<\"+\"i \";\n\t\t\t\t\t\tif(val.icon) {\n\t\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\n\t\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\n\t\t\t\t\t}\n\t\t\t\t\tstr += ($.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : vakata_context.reference, \"element\" : vakata_context.element }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\n\t\t\t\t\tif(val.submenu) {\n\t\t\t\t\t\ttmp = $.vakata.context._parse(val.submenu, true);\n\t\t\t\t\t\tif(tmp) { str += tmp; }\n\t\t\t\t\t}\n\t\t\t\t\tstr += \"<\"+\"/li>\";\n\t\t\t\t\tif(val.separator_after) {\n\t\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + ($.vakata.context.settings.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\n\t\t\t\t\t\tsep = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\n\t\t\t\tif(is_callback) { str += \"</ul>\"; }\n\t\t\t\t/**\n\t\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\n\t\t\t\t * @event\n\t\t\t\t * @plugin contextmenu\n\t\t\t\t * @name context_parse.vakata\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t */\n\t\t\t\tif(!is_callback) { vakata_context.html = str; $.vakata.context._trigger(\"parse\"); }\n\t\t\t\treturn str.length > 10 ? str : false;\n\t\t\t},\n\t\t\t_show_submenu : function (o) {\n\t\t\t\to = $(o);\n\t\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\n\t\t\t\tvar e = o.children(\"ul\"),\n\t\t\t\t\tx = o.offset().left + o.outerWidth(),\n\t\t\t\t\ty = o.offset().top,\n\t\t\t\t\tw = e.width(),\n\t\t\t\t\th = e.height(),\n\t\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\n\t\t\t\t\tdh = $(window).height() + $(window).scrollTop();\n\t\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\n\t\t\t\tif(right_to_left) {\n\t\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\to[x + w + 10 > dw ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\n\t\t\t\t}\n\t\t\t\tif(y + h + 10 > dh) {\n\t\t\t\t\te.css(\"bottom\",\"-1px\");\n\t\t\t\t}\n\t\t\t\te.show();\n\t\t\t},\n\t\t\tshow : function (reference, position, data) {\n\t\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\n\t\t\t\tif(vakata_context.element && vakata_context.element.length) {\n\t\t\t\t\tvakata_context.element.width('');\n\t\t\t\t}\n\t\t\t\tswitch(cond) {\n\t\t\t\t\tcase (!position && !reference):\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase (!!position && !!reference):\n\t\t\t\t\t\tvakata_context.reference\t= reference;\n\t\t\t\t\t\tvakata_context.position_x\t= position.x;\n\t\t\t\t\t\tvakata_context.position_y\t= position.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase (!position && !!reference):\n\t\t\t\t\t\tvakata_context.reference\t= reference;\n\t\t\t\t\t\to = reference.offset();\n\t\t\t\t\t\tvakata_context.position_x\t= o.left + reference.outerHeight();\n\t\t\t\t\t\tvakata_context.position_y\t= o.top;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase (!!position && !reference):\n\t\t\t\t\t\tvakata_context.position_x\t= position.x;\n\t\t\t\t\t\tvakata_context.position_y\t= position.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\n\t\t\t\t\tdata = $(reference).data('vakata_contextmenu');\n\t\t\t\t}\n\t\t\t\tif($.vakata.context._parse(data)) {\n\t\t\t\t\tvakata_context.element.html(vakata_context.html);\n\t\t\t\t}\n\t\t\t\tif(vakata_context.items.length) {\n\t\t\t\t\te = vakata_context.element;\n\t\t\t\t\tx = vakata_context.position_x;\n\t\t\t\t\ty = vakata_context.position_y;\n\t\t\t\t\tw = e.width();\n\t\t\t\t\th = e.height();\n\t\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\n\t\t\t\t\tdh = $(window).height() + $(window).scrollTop();\n\t\t\t\t\tif(right_to_left) {\n\t\t\t\t\t\tx -= e.outerWidth();\n\t\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\n\t\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(x + w + 20 > dw) {\n\t\t\t\t\t\tx = dw - (w + 20);\n\t\t\t\t\t}\n\t\t\t\t\tif(y + h + 20 > dh) {\n\t\t\t\t\t\ty = dh - (h + 20);\n\t\t\t\t\t}\n\n\t\t\t\t\tvakata_context.element\n\t\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\n\t\t\t\t\t\t.show()\n\t\t\t\t\t\t.find('a:eq(0)').focus().parent().addClass(\"vakata-context-hover\");\n\t\t\t\t\tvakata_context.is_visible = true;\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when the contextmenu is shown\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin contextmenu\n\t\t\t\t\t * @name context_show.vakata\n\t\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.context._trigger(\"show\");\n\t\t\t\t}\n\t\t\t},\n\t\t\thide : function () {\n\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\tvakata_context.element.hide().find(\"ul\").hide().end().find(':focus').blur();\n\t\t\t\t\tvakata_context.is_visible = false;\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when the contextmenu is hidden\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin contextmenu\n\t\t\t\t\t * @name context_hide.vakata\n\t\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.context._trigger(\"hide\");\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t$(function () {\n\t\t\tright_to_left = $(\"body\").css(\"direction\") === \"rtl\";\n\t\t\tvar to = false;\n\n\t\t\tvakata_context.element = $(\"<ul class='vakata-context'></ul>\");\n\t\t\tvakata_context.element\n\t\t\t\t.on(\"mouseenter\", \"li\", function (e) {\n\t\t\t\t\te.stopImmediatePropagation();\n\n\t\t\t\t\tif($.contains(this, e.relatedTarget)) {\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(to) { clearTimeout(to); }\n\t\t\t\t\tvakata_context.element.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\n\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\n\t\t\t\t\t$.vakata.context._show_submenu(this);\n\t\t\t\t})\n\t\t\t\t// тестово - дали не натоварва?\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\n\t\t\t\t\tif($.contains(this, e.relatedTarget)) { return; }\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\n\t\t\t\t})\n\t\t\t\t.on(\"mouseleave\", function (e) {\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\n\t\t\t\t\tif($.vakata.context.settings.hide_onmouseleave) {\n\t\t\t\t\t\tto = setTimeout(\n\t\t\t\t\t\t\t(function (t) {\n\t\t\t\t\t\t\t\treturn function () { $.vakata.context.hide(); };\n\t\t\t\t\t\t\t}(this)), $.vakata.context.settings.hide_onmouseleave);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on(\"click\", \"a\", function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t//})\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && $.vakata.context._execute($(this).attr(\"rel\")) !== false) {\n\t\t\t\t\t\t$.vakata.context.hide();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keydown', 'a', function (e) {\n\t\t\t\t\t\tvar o = null;\n\t\t\t\t\t\tswitch(e.which) {\n\t\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\t\te.type = \"mouseup\";\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 37:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\tvakata_context.element.find(\".vakata-context-hover\").last().parents(\"li:eq(0)\").find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 38:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\to = vakata_context.element.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\n\t\t\t\t\t\t\t\t\tif(!o.length) { o = vakata_context.element.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\n\t\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\tvakata_context.element.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 40:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\to = vakata_context.element.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\n\t\t\t\t\t\t\t\t\tif(!o.length) { o = vakata_context.element.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\n\t\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\t\t\t$.vakata.context.hide();\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t//console.log(e.which);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t.on('keydown', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar a = vakata_context.element.find('.vakata-contextmenu-shortcut-' + e.which).parent();\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\n\t\t\t\t\t\ta.mouseup();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.appendTo(\"body\");\n\n\t\t\t$(document)\n\t\t\t\t.on(\"mousedown\", function (e) {\n\t\t\t\t\tif(vakata_context.is_visible && !$.contains(vakata_context.element[0], e.target)) { $.vakata.context.hide(); }\n\t\t\t\t})\n\t\t\t\t.on(\"context_show.vakata\", function (e, data) {\n\t\t\t\t\tvakata_context.element.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\n\t\t\t\t\tif(right_to_left) {\n\t\t\t\t\t\tvakata_context.element.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\n\t\t\t\t\t}\n\t\t\t\t\t// also apply a RTL class?\n\t\t\t\t\tvakata_context.element.find(\"ul\").hide().end();\n\t\t\t\t});\n\t\t});\n\t}($));\n\t// $.jstree.defaults.plugins.push(\"contextmenu\");\n\n/**\n * ### Drag'n'drop plugin\n *\n * Enables dragging and dropping of nodes in the tree, resulting in a move or copy operations.\n */\n\n\t/**\n\t * stores all defaults for the drag'n'drop plugin\n\t * @name $.jstree.defaults.dnd\n\t * @plugin dnd\n\t */\n\t$.jstree.defaults.dnd = {\n\t\t/**\n\t\t * a boolean indicating if a copy should be possible while dragging (by pressint the meta key or Ctrl). Defaults to `true`.\n\t\t * @name $.jstree.defaults.dnd.copy\n\t\t * @plugin dnd\n\t\t */\n\t\tcopy : true,\n\t\t/**\n\t\t * a number indicating how long a node should remain hovered while dragging to be opened. Defaults to `500`.\n\t\t * @name $.jstree.defaults.dnd.open_timeout\n\t\t * @plugin dnd\n\t\t */\n\t\topen_timeout : 500,\n\t\t/**\n\t\t * a function invoked each time a node is about to be dragged, invoked in the tree's scope and receives the nodes about to be dragged as an argument (array) - return `false` to prevent dragging\n\t\t * @name $.jstree.defaults.dnd.is_draggable\n\t\t * @plugin dnd\n\t\t */\n\t\tis_draggable : true,\n\t\t/**\n\t\t * a boolean indicating if checks should constantly be made while the user is dragging the node (as opposed to checking only on drop), default is `true`\n\t\t * @name $.jstree.defaults.dnd.check_while_dragging\n\t\t * @plugin dnd\n\t\t */\n\t\tcheck_while_dragging : true,\n\t\t/**\n\t\t * a boolean indicating if nodes from this tree should only be copied with dnd (as opposed to moved), default is `false`\n\t\t * @name $.jstree.defaults.dnd.always_copy\n\t\t * @plugin dnd\n\t\t */\n\t\talways_copy : false,\n\t\t/**\n\t\t * when dropping a node \"inside\", this setting indicates the position the node should go to - it can be an integer or a string: \"first\" (same as 0) or \"last\", default is `0`\n\t\t * @name $.jstree.defaults.dnd.inside_pos\n\t\t * @plugin dnd\n\t\t */\n\t\tinside_pos : 0\n\t};\n\t// TODO: now check works by checking for each node individually, how about max_children, unique, etc?\n\t// TODO: drop somewhere else - maybe demo only?\n\t$.jstree.plugins.dnd = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis.element\n\t\t\t\t.on('mousedown.jstree touchstart.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\tvar obj = this.get_node(e.target),\n\t\t\t\t\t\tmlt = this.is_selected(obj) ? this.get_selected().length : 1;\n\t\t\t\t\tif(obj && obj.id && obj.id !== \"#\" && (e.which === 1 || e.type === \"touchstart\") &&\n\t\t\t\t\t\t(this.settings.dnd.is_draggable === true || ($.isFunction(this.settings.dnd.is_draggable) && this.settings.dnd.is_draggable.call(this, (mlt > 1 ? this.get_selected(true) : [obj]))))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.element.trigger('mousedown.jstree');\n\t\t\t\t\t\treturn $.vakata.dnd.start(e, { 'jstree' : true, 'origin' : this, 'obj' : this.get_node(obj,true), 'nodes' : mlt > 1 ? this.get_selected() : [obj.id] }, '<div id=\"jstree-dnd\" class=\"jstree-' + this.get_theme() + ( this.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ) + '\"><i class=\"jstree-icon jstree-er\"></i>' + (mlt > 1 ? mlt + ' ' + this.get_string('nodes') : this.get_text(e.currentTarget, true)) + '<ins class=\"jstree-copy\" style=\"display:none;\">+</ins></div>');\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\t\t};\n\t};\n\n\t$(function() {\n\t\t// bind only once for all instances\n\t\tvar lastmv = false,\n\t\t\tlaster = false,\n\t\t\topento = false,\n\t\t\tmarker = $('<div id=\"jstree-marker\">&#160;</div>').hide().appendTo('body');\n\n\t\t$(document)\n\t\t\t.bind('dnd_start.vakata', function (e, data) {\n\t\t\t\tlastmv = false;\n\t\t\t})\n\t\t\t.bind('dnd_move.vakata', function (e, data) {\n\t\t\t\tif(opento) { clearTimeout(opento); }\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\n\t\t\t\t// if we are hovering the marker image do nothing (can happen on \"inside\" drags)\n\t\t\t\tif(data.event.target.id && data.event.target.id === 'jstree-marker') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar ins = $.jstree.reference(data.event.target),\n\t\t\t\t\tref = false,\n\t\t\t\t\toff = false,\n\t\t\t\t\trel = false,\n\t\t\t\t\tl, t, h, p, i, o, ok, t1, t2, op, ps, pr, ip, tm;\n\t\t\t\t// if we are over an instance\n\t\t\t\tif(ins && ins._data && ins._data.dnd) {\n\t\t\t\t\tmarker.attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ));\n\t\t\t\t\tdata.helper\n\t\t\t\t\t\t.children().attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ))\n\t\t\t\t\t\t.find('.jstree-copy:eq(0)')[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'show' : 'hide' ]();\n\n\n\t\t\t\t\t// if are hovering the container itself add a new root node\n\t\t\t\t\tif( (data.event.target === ins.element[0] || data.event.target === ins.get_container_ul()[0]) && ins.get_container_ul().children().length === 0) {\n\t\t\t\t\t\tok = true;\n\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\n\t\t\t\t\t\t\tok = ok && ins.check( (data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)) ) ? \"copy_node\" : \"move_node\"), (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), '#', 'last', { 'dnd' : true, 'ref' : ins.get_node('#'), 'pos' : 'i', 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) });\n\t\t\t\t\t\t\tif(!ok) { break; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ok) {\n\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : '#', 'pos' : 'last' };\n\t\t\t\t\t\t\tmarker.hide();\n\t\t\t\t\t\t\tdata.helper.find('.jstree-icon:eq(0)').removeClass('jstree-er').addClass('jstree-ok');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if we are hovering a tree node\n\t\t\t\t\t\tref = $(data.event.target).closest('.jstree-anchor');\n\t\t\t\t\t\tif(ref && ref.length && ref.parent().is('.jstree-closed, .jstree-open, .jstree-leaf')) {\n\t\t\t\t\t\t\toff = ref.offset();\n\t\t\t\t\t\t\trel = data.event.pageY - off.top;\n\t\t\t\t\t\t\th = ref.height();\n\t\t\t\t\t\t\tif(rel < h / 3) {\n\t\t\t\t\t\t\t\to = ['b', 'i', 'a'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(rel > h - h / 3) {\n\t\t\t\t\t\t\t\to = ['a', 'i', 'b'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\to = rel > h / 2 ? ['i', 'a', 'b'] : ['i', 'b', 'a'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$.each(o, function (j, v) {\n\t\t\t\t\t\t\t\tswitch(v) {\n\t\t\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\n\t\t\t\t\t\t\t\t\t\tt = off.top;\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index();\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\t\t\tip = ins.settings.dnd.inside_pos;\n\t\t\t\t\t\t\t\t\t\ttm = ins.get_node(ref.parent());\n\t\t\t\t\t\t\t\t\t\tl = off.left - 2;\n\t\t\t\t\t\t\t\t\t\tt = off.top + h / 2 + 1;\n\t\t\t\t\t\t\t\t\t\tp = tm.id;\n\t\t\t\t\t\t\t\t\t\ti = ip === 'first' ? 0 : (ip === 'last' ? tm.children.length : Math.min(ip, tm.children.length));\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'a':\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\n\t\t\t\t\t\t\t\t\t\tt = off.top + h;\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index() + 1;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/*!\n\t\t\t\t\t\t\t\t// TODO: moving inside, but the node is not yet loaded?\n\t\t\t\t\t\t\t\t// the check will work anyway, as when moving the node will be loaded first and checked again\n\t\t\t\t\t\t\t\tif(v === 'i' && !ins.is_loaded(p)) { }\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tok = true;\n\t\t\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\n\t\t\t\t\t\t\t\t\top = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? \"copy_node\" : \"move_node\";\n\t\t\t\t\t\t\t\t\tps = i;\n\t\t\t\t\t\t\t\t\tif(op === \"move_node\" && v === 'a' && (data.data.origin && data.data.origin === ins) && p === ins.get_parent(data.data.nodes[t1])) {\n\t\t\t\t\t\t\t\t\t\tpr = ins.get_node(p);\n\t\t\t\t\t\t\t\t\t\tif(ps > $.inArray(data.data.nodes[t1], pr.children)) {\n\t\t\t\t\t\t\t\t\t\t\tps -= 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tok = ok && ( (ins && ins.settings && ins.settings.dnd && ins.settings.dnd.check_while_dragging === false) || ins.check(op, (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), p, ps, { 'dnd' : true, 'ref' : ins.get_node(ref.parent()), 'pos' : v, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) }) );\n\t\t\t\t\t\t\t\t\tif(!ok) {\n\t\t\t\t\t\t\t\t\t\tif(ins && ins.last_error) { laster = ins.last_error(); }\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(ok) {\n\t\t\t\t\t\t\t\t\tif(v === 'i' && ref.parent().is('.jstree-closed') && ins.settings.dnd.open_timeout) {\n\t\t\t\t\t\t\t\t\t\topento = setTimeout((function (x, z) { return function () { x.open_node(z); }; }(ins, ref)), ins.settings.dnd.open_timeout);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : p, 'pos' : v === 'i' && ip === 'last' && i === 0 && !ins.is_loaded(tm) ? 'last' : i };\n\t\t\t\t\t\t\t\t\tmarker.css({ 'left' : l + 'px', 'top' : t + 'px' }).show();\n\t\t\t\t\t\t\t\t\tdata.helper.find('.jstree-icon:eq(0)').removeClass('jstree-er').addClass('jstree-ok');\n\t\t\t\t\t\t\t\t\tlaster = {};\n\t\t\t\t\t\t\t\t\to = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif(o === true) { return; }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastmv = false;\n\t\t\t\tdata.helper.find('.jstree-icon').removeClass('jstree-ok').addClass('jstree-er');\n\t\t\t\tmarker.hide();\n\t\t\t})\n\t\t\t.bind('dnd_scroll.vakata', function (e, data) {\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\t\t\t\tmarker.hide();\n\t\t\t\tlastmv = false;\n\t\t\t\tdata.helper.find('.jstree-icon:eq(0)').removeClass('jstree-ok').addClass('jstree-er');\n\t\t\t})\n\t\t\t.bind('dnd_stop.vakata', function (e, data) {\n\t\t\t\tif(opento) { clearTimeout(opento); }\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\t\t\t\tmarker.hide();\n\t\t\t\tvar i, j, nodes = [];\n\t\t\t\tif(lastmv) {\n\t\t\t\t\tfor(i = 0, j = data.data.nodes.length; i < j; i++) {\n\t\t\t\t\t\tnodes[i] = data.data.origin ? data.data.origin.get_node(data.data.nodes[i]) : data.data.nodes[i];\n\t\t\t\t\t\tif(data.data.origin) {\n\t\t\t\t\t\t\tnodes[i].instance = data.data.origin;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlastmv.ins[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'copy_node' : 'move_node' ](nodes, lastmv.par, lastmv.pos);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ti = $(data.event.target).closest('.jstree');\n\t\t\t\t\tif(i.length && laster && laster.error && laster.error === 'check') {\n\t\t\t\t\t\ti = i.jstree(true);\n\t\t\t\t\t\tif(i) {\n\t\t\t\t\t\t\ti.settings.core.error.call(this, laster);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.bind('keyup keydown', function (e, data) {\n\t\t\t\tdata = $.vakata.dnd._get();\n\t\t\t\tif(data && data.data && data.data.jstree) {\n\t\t\t\t\tdata.helper.find('.jstree-copy:eq(0)')[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (e.metaKey || e.ctrlKey))) ? 'show' : 'hide' ]();\n\t\t\t\t}\n\t\t\t});\n\t});\n\n\t// helpers\n\t(function ($) {\n\t\t// private variable\n\t\tvar vakata_dnd = {\n\t\t\telement\t: false,\n\t\t\ttarget\t: false,\n\t\t\tis_down\t: false,\n\t\t\tis_drag\t: false,\n\t\t\thelper\t: false,\n\t\t\thelper_w: 0,\n\t\t\tdata\t: false,\n\t\t\tinit_x\t: 0,\n\t\t\tinit_y\t: 0,\n\t\t\tscroll_l: 0,\n\t\t\tscroll_t: 0,\n\t\t\tscroll_e: false,\n\t\t\tscroll_i: false,\n\t\t\tis_touch: false\n\t\t};\n\t\t$.vakata.dnd = {\n\t\t\tsettings : {\n\t\t\t\tscroll_speed\t\t: 10,\n\t\t\t\tscroll_proximity\t: 20,\n\t\t\t\thelper_left\t\t\t: 5,\n\t\t\t\thelper_top\t\t\t: 10,\n\t\t\t\tthreshold\t\t\t: 5,\n\t\t\t\tthreshold_touch\t\t: 50\n\t\t\t},\n\t\t\t_trigger : function (event_name, e) {\n\t\t\t\tvar data = $.vakata.dnd._get();\n\t\t\t\tdata.event = e;\n\t\t\t\t$(document).triggerHandler(\"dnd_\" + event_name + \".vakata\", data);\n\t\t\t},\n\t\t\t_get : function () {\n\t\t\t\treturn {\n\t\t\t\t\t\"data\"\t\t: vakata_dnd.data,\n\t\t\t\t\t\"element\"\t: vakata_dnd.element,\n\t\t\t\t\t\"helper\"\t: vakata_dnd.helper\n\t\t\t\t};\n\t\t\t},\n\t\t\t_clean : function () {\n\t\t\t\tif(vakata_dnd.helper) { vakata_dnd.helper.remove(); }\n\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\n\t\t\t\tvakata_dnd = {\n\t\t\t\t\telement\t: false,\n\t\t\t\t\ttarget\t: false,\n\t\t\t\t\tis_down\t: false,\n\t\t\t\t\tis_drag\t: false,\n\t\t\t\t\thelper\t: false,\n\t\t\t\t\thelper_w: 0,\n\t\t\t\t\tdata\t: false,\n\t\t\t\t\tinit_x\t: 0,\n\t\t\t\t\tinit_y\t: 0,\n\t\t\t\t\tscroll_l: 0,\n\t\t\t\t\tscroll_t: 0,\n\t\t\t\t\tscroll_e: false,\n\t\t\t\t\tscroll_i: false,\n\t\t\t\t\tis_touch: false\n\t\t\t\t};\n\t\t\t\t$(document).off(\"mousemove touchmove\", $.vakata.dnd.drag);\n\t\t\t\t$(document).off(\"mouseup touchend\", $.vakata.dnd.stop);\n\t\t\t},\n\t\t\t_scroll : function (init_only) {\n\t\t\t\tif(!vakata_dnd.scroll_e || (!vakata_dnd.scroll_l && !vakata_dnd.scroll_t)) {\n\t\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(!vakata_dnd.scroll_i) {\n\t\t\t\t\tvakata_dnd.scroll_i = setInterval($.vakata.dnd._scroll, 100);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(init_only === true) { return false; }\n\n\t\t\t\tvar i = vakata_dnd.scroll_e.scrollTop(),\n\t\t\t\t\tj = vakata_dnd.scroll_e.scrollLeft();\n\t\t\t\tvakata_dnd.scroll_e.scrollTop(i + vakata_dnd.scroll_t * $.vakata.dnd.settings.scroll_speed);\n\t\t\t\tvakata_dnd.scroll_e.scrollLeft(j + vakata_dnd.scroll_l * $.vakata.dnd.settings.scroll_speed);\n\t\t\t\tif(i !== vakata_dnd.scroll_e.scrollTop() || j !== vakata_dnd.scroll_e.scrollLeft()) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when a drag causes an element to scroll\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t * @name dnd_scroll.vakata\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t * @param {jQuery} event the element that is scrolling\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.dnd._trigger(\"scroll\", vakata_dnd.scroll_e);\n\t\t\t\t}\n\t\t\t},\n\t\t\tstart : function (e, data, html) {\n\t\t\t\tif(e.type === \"touchstart\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.is_drag) { $.vakata.dnd.stop({}); }\n\t\t\t\ttry {\n\t\t\t\t\te.currentTarget.unselectable = \"on\";\n\t\t\t\t\te.currentTarget.onselectstart = function() { return false; };\n\t\t\t\t\tif(e.currentTarget.style) { e.currentTarget.style.MozUserSelect = \"none\"; }\n\t\t\t\t} catch(ignore) { }\n\t\t\t\tvakata_dnd.init_x\t= e.pageX;\n\t\t\t\tvakata_dnd.init_y\t= e.pageY;\n\t\t\t\tvakata_dnd.data\t\t= data;\n\t\t\t\tvakata_dnd.is_down\t= true;\n\t\t\t\tvakata_dnd.element\t= e.currentTarget;\n\t\t\t\tvakata_dnd.target\t= e.target;\n\t\t\t\tvakata_dnd.is_touch\t= e.type === \"touchstart\";\n\t\t\t\tif(html !== false) {\n\t\t\t\t\tvakata_dnd.helper = $(\"<div id='vakata-dnd'></div>\").html(html).css({\n\t\t\t\t\t\t\"display\"\t\t: \"block\",\n\t\t\t\t\t\t\"margin\"\t\t: \"0\",\n\t\t\t\t\t\t\"padding\"\t\t: \"0\",\n\t\t\t\t\t\t\"position\"\t\t: \"absolute\",\n\t\t\t\t\t\t\"top\"\t\t\t: \"-2000px\",\n\t\t\t\t\t\t\"lineHeight\"\t: \"16px\",\n\t\t\t\t\t\t\"zIndex\"\t\t: \"10000\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$(document).bind(\"mousemove touchmove\", $.vakata.dnd.drag);\n\t\t\t\t$(document).bind(\"mouseup touchend\", $.vakata.dnd.stop);\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdrag : function (e) {\n\t\t\t\tif(e.type === \"touchmove\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(!vakata_dnd.is_down) { return; }\n\t\t\t\tif(!vakata_dnd.is_drag) {\n\t\t\t\t\tif(\n\t\t\t\t\t\tMath.abs(e.pageX - vakata_dnd.init_x) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold) ||\n\t\t\t\t\t\tMath.abs(e.pageY - vakata_dnd.init_y) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif(vakata_dnd.helper) {\n\t\t\t\t\t\t\tvakata_dnd.helper.appendTo(\"body\");\n\t\t\t\t\t\t\tvakata_dnd.helper_w = vakata_dnd.helper.outerWidth();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvakata_dnd.is_drag = true;\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * triggered on the document when a drag starts\n\t\t\t\t\t\t * @event\n\t\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t\t * @name dnd_start.vakata\n\t\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t\t * @param {Object} event the event that caused the start (probably mousemove)\n\t\t\t\t\t\t */\n\t\t\t\t\t\t$.vakata.dnd._trigger(\"start\", e);\n\t\t\t\t\t}\n\t\t\t\t\telse { return; }\n\t\t\t\t}\n\n\t\t\t\tvar d  = false, w  = false,\n\t\t\t\t\tdh = false, wh = false,\n\t\t\t\t\tdw = false, ww = false,\n\t\t\t\t\tdt = false, dl = false,\n\t\t\t\t\tht = false, hl = false;\n\n\t\t\t\tvakata_dnd.scroll_t = 0;\n\t\t\t\tvakata_dnd.scroll_l = 0;\n\t\t\t\tvakata_dnd.scroll_e = false;\n\t\t\t\t$($(e.target).parentsUntil(\"body\").addBack().get().reverse())\n\t\t\t\t\t.filter(function () {\n\t\t\t\t\t\treturn\t(/^auto|scroll$/).test($(this).css(\"overflow\")) &&\n\t\t\t\t\t\t\t\t(this.scrollHeight > this.offsetHeight || this.scrollWidth > this.offsetWidth);\n\t\t\t\t\t})\n\t\t\t\t\t.each(function () {\n\t\t\t\t\t\tvar t = $(this), o = t.offset();\n\t\t\t\t\t\tif(this.scrollHeight > this.offsetHeight) {\n\t\t\t\t\t\t\tif(o.top + t.height() - e.pageY < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\n\t\t\t\t\t\t\tif(e.pageY - o.top < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_t = -1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.scrollWidth > this.offsetWidth) {\n\t\t\t\t\t\t\tif(o.left + t.width() - e.pageX < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\n\t\t\t\t\t\t\tif(e.pageX - o.left < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_l = -1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\n\t\t\t\t\t\t\tvakata_dnd.scroll_e = $(this);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tif(!vakata_dnd.scroll_e) {\n\t\t\t\t\td  = $(document); w = $(window);\n\t\t\t\t\tdh = d.height(); wh = w.height();\n\t\t\t\t\tdw = d.width(); ww = w.width();\n\t\t\t\t\tdt = d.scrollTop(); dl = d.scrollLeft();\n\t\t\t\t\tif(dh > wh && e.pageY - dt < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_t = -1;  }\n\t\t\t\t\tif(dh > wh && wh - (e.pageY - dt) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\n\t\t\t\t\tif(dw > ww && e.pageX - dl < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_l = -1; }\n\t\t\t\t\tif(dw > ww && ww - (e.pageX - dl) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\n\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\n\t\t\t\t\t\tvakata_dnd.scroll_e = d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.scroll_e) { $.vakata.dnd._scroll(true); }\n\n\t\t\t\tif(vakata_dnd.helper) {\n\t\t\t\t\tht = parseInt(e.pageY + $.vakata.dnd.settings.helper_top, 10);\n\t\t\t\t\thl = parseInt(e.pageX + $.vakata.dnd.settings.helper_left, 10);\n\t\t\t\t\tif(dh && ht + 25 > dh) { ht = dh - 50; }\n\t\t\t\t\tif(dw && hl + vakata_dnd.helper_w > dw) { hl = dw - (vakata_dnd.helper_w + 2); }\n\t\t\t\t\tvakata_dnd.helper.css({\n\t\t\t\t\t\tleft\t: hl + \"px\",\n\t\t\t\t\t\ttop\t\t: ht + \"px\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered on the document when a drag is in progress\n\t\t\t\t * @event\n\t\t\t\t * @plugin dnd\n\t\t\t\t * @name dnd_move.vakata\n\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t * @param {Object} event the event that caused this to trigger (most likely mousemove)\n\t\t\t\t */\n\t\t\t\t$.vakata.dnd._trigger(\"move\", e);\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tstop : function (e) {\n\t\t\t\tif(e.type === \"touchend\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.is_drag) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when a drag stops (the dragged element is dropped)\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t * @name dnd_stop.vakata\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t * @param {Object} event the event that caused the stop\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.dnd._trigger(\"stop\", e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(e.type === \"touchend\" && e.target === vakata_dnd.target) {\n\t\t\t\t\t\tvar to = setTimeout(function () { $(e.target).click(); }, 100);\n\t\t\t\t\t\t$(e.target).one('click', function() { if(to) { clearTimeout(to); } });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$.vakata.dnd._clean();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t}($));\n\n\t// include the dnd plugin by default\n\t// $.jstree.defaults.plugins.push(\"dnd\");\n\n\n/**\n * ### Search plugin\n *\n * Adds search functionality to jsTree.\n */\n\n\t/**\n\t * stores all defaults for the search plugin\n\t * @name $.jstree.defaults.search\n\t * @plugin search\n\t */\n\t$.jstree.defaults.search = {\n\t\t/**\n\t\t * a jQuery-like AJAX config, which jstree uses if a server should be queried for results. \n\t\t * \n\t\t * A `str` (which is the search string) parameter will be added with the request. The expected result is a JSON array with nodes that need to be opened so that matching nodes will be revealed.\n\t\t * Leave this setting as `false` to not query the server. You can also set this to a function, which will be invoked in the instance's scope and receive 2 parameters - the search string and the callback to call with the array of nodes to load.\n\t\t * @name $.jstree.defaults.search.ajax\n\t\t * @plugin search\n\t\t */\n\t\tajax : false,\n\t\t/**\n\t\t * Indicates if the search should be fuzzy or not (should `chnd3` match `child node 3`). Default is `false`.\n\t\t * @name $.jstree.defaults.search.fuzzy\n\t\t * @plugin search\n\t\t */\n\t\tfuzzy : false,\n\t\t/**\n\t\t * Indicates if the search should be case sensitive. Default is `false`.\n\t\t * @name $.jstree.defaults.search.case_sensitive\n\t\t * @plugin search\n\t\t */\n\t\tcase_sensitive : false,\n\t\t/**\n\t\t * Indicates if the tree should be filtered to show only matching nodes (keep in mind this can be a heavy on large trees in old browsers). Default is `false`.\n\t\t * @name $.jstree.defaults.search.show_only_matches\n\t\t * @plugin search\n\t\t */\n\t\tshow_only_matches : false,\n\t\t/**\n\t\t * Indicates if all nodes opened to reveal the search result, should be closed when the search is cleared or a new search is performed. Default is `true`.\n\t\t * @name $.jstree.defaults.search.close_opened_onclear\n\t\t * @plugin search\n\t\t */\n\t\tclose_opened_onclear : true,\n\t\t/**\n\t\t * Indicates if only leaf nodes should be included in search results. Default is `false`.\n\t\t * @name $.jstree.defaults.search.search_leaves_only\n\t\t * @plugin search\n\t\t */\n\t\tsearch_leaves_only : false,\n\t\t/**\n\t\t * If set to a function it wil be called in the instance's scope with two arguments - search string and node (where node will be every node in the structure, so use with caution).\n\t\t * If the function returns a truthy value the node will be considered a match (it might not be displayed if search_only_leaves is set to true and the node is not a leaf). Default is `false`.\n\t\t * @name $.jstree.defaults.search.search_callback\n\t\t * @plugin search\n\t\t */\n\t\tsearch_callback : false\n\t};\n\n\t$.jstree.plugins.search = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis._data.search.str = \"\";\n\t\t\tthis._data.search.dom = $();\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\n\t\t\tthis.element.on('before_open.jstree', $.proxy(function (e, data) {\n\t\t\t\tvar i, j, f, r = this._data.search.res, s = [], o = $();\n\t\t\t\tif(r && r.length) {\n\t\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\n\t\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\n\t\t\t\t\tif(this.settings.search.show_only_matches && this._data.search.res.length) {\n\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\n\t\t\t\t\t\t\ts = s.concat(this.get_node(r[i]).parents);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts = $.vakata.array_remove_item($.vakata.array_unique(s),'#');\n\t\t\t\t\t\to = s.length ? $(this.element[0].querySelectorAll('#' + $.map(s, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #'))) : $();\n\n\t\t\t\t\t\tthis.element.find(\".jstree-node\").hide().filter('.jstree-last').filter(function() { return this.nextSibling; }).removeClass('jstree-last');\n\t\t\t\t\t\to = o.add(this._data.search.dom);\n\t\t\t\t\t\to.parentsUntil(\".jstree\").addBack().show()\n\t\t\t\t\t\t\t.filter(\".jstree-children\").each(function () { $(this).children(\".jstree-node:visible\").eq(-1).addClass(\"jstree-last\"); });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif(this.settings.search.show_only_matches) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on(\"search.jstree\", function (e, data) {\n\t\t\t\t\t\tif(data.nodes.length) {\n\t\t\t\t\t\t\t$(this).find(\".jstree-node\").hide().filter('.jstree-last').filter(function() { return this.nextSibling; }).removeClass('jstree-last');\n\t\t\t\t\t\t\tdata.nodes.parentsUntil(\".jstree\").addBack().show()\n\t\t\t\t\t\t\t\t.filter(\".jstree-children\").each(function () { $(this).children(\".jstree-node:visible\").eq(-1).addClass(\"jstree-last\"); });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"clear_search.jstree\", function (e, data) {\n\t\t\t\t\t\tif(data.nodes.length) {\n\t\t\t\t\t\t\t$(this).find(\".jstree-node\").css(\"display\",\"\").filter('.jstree-last').filter(function() { return this.nextSibling; }).removeClass('jstree-last');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * used to search the tree nodes for a given string\n\t\t * @name search(str [, skip_async])\n\t\t * @param {String} str the search string\n\t\t * @param {Boolean} skip_async if set to true server will not be queried even if configured\n\t\t * @plugin search\n\t\t * @trigger search.jstree\n\t\t */\n\t\tthis.search = function (str, skip_async) {\n\t\t\tif(str === false || $.trim(str.toString()) === \"\") {\n\t\t\t\treturn this.clear_search();\n\t\t\t}\n\t\t\tstr = str.toString();\n\t\t\tvar s = this.settings.search,\n\t\t\t\ta = s.ajax ? s.ajax : false,\n\t\t\t\tf = null,\n\t\t\t\tr = [],\n\t\t\t\tp = [], i, j;\n\t\t\tif(this._data.search.res.length) {\n\t\t\t\tthis.clear_search();\n\t\t\t}\n\t\t\tif(!skip_async && a !== false) {\n\t\t\t\tif($.isFunction(a)) {\n\t\t\t\t\treturn a.call(this, str, $.proxy(function (d) {\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\n\t\t\t\t\t\t\t\tthis.search(str, true);\n\t\t\t\t\t\t\t}, true);\n\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ta = $.extend({}, a);\n\t\t\t\t\tif(!a.data) { a.data = {}; }\n\t\t\t\t\ta.data.str = str;\n\t\t\t\t\treturn $.ajax(a)\n\t\t\t\t\t\t.fail($.proxy(function () {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'search', 'id' : 'search_01', 'reason' : 'Could not load search parents', 'data' : JSON.stringify(a) };\n\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t.done($.proxy(function (d) {\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\n\t\t\t\t\t\t\t\tthis.search(str, true);\n\t\t\t\t\t\t\t}, true);\n\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.search.str = str;\n\t\t\tthis._data.search.dom = $();\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\n\t\t\tf = new $.vakata.search(str, true, { caseSensitive : s.case_sensitive, fuzzy : s.fuzzy });\n\n\t\t\t$.each(this._model.data, function (i, v) {\n\t\t\t\tif(v.text && ( (s.search_callback && s.search_callback.call(this, str, v)) || (!s.search_callback && f.search(v.text).isMatch) ) && (!s.search_leaves_only || (v.state.loaded && v.children.length === 0)) ) {\n\t\t\t\t\tr.push(i);\n\t\t\t\t\tp = p.concat(v.parents);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(r.length) {\n\t\t\t\tp = $.vakata.array_unique(p);\n\t\t\t\tthis._search_open(p);\n\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\n\t\t\t\tthis._data.search.res = r;\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered after search is complete\n\t\t\t * @event\n\t\t\t * @name search.jstree\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes\n\t\t\t * @param {String} str the search string\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes\n\t\t\t * @plugin search\n\t\t\t */\n\t\t\tthis.trigger('search', { nodes : this._data.search.dom, str : str, res : this._data.search.res });\n\t\t};\n\t\t/**\n\t\t * used to clear the last search (removes classes and shows all nodes if filtering is on)\n\t\t * @name clear_search()\n\t\t * @plugin search\n\t\t * @trigger clear_search.jstree\n\t\t */\n\t\tthis.clear_search = function () {\n\t\t\tthis._data.search.dom.children(\".jstree-anchor\").removeClass(\"jstree-search\");\n\t\t\tif(this.settings.search.close_opened_onclear) {\n\t\t\t\tthis.close_node(this._data.search.opn, 0);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered after search is complete\n\t\t\t * @event\n\t\t\t * @name clear_search.jstree\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes (the result from the last search)\n\t\t\t * @param {String} str the search string (the last search string)\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes (the result from the last search)\n\t\t\t * @plugin search\n\t\t\t */\n\t\t\tthis.trigger('clear_search', { 'nodes' : this._data.search.dom, str : this._data.search.str, res : this._data.search.res });\n\t\t\tthis._data.search.str = \"\";\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\t\t\tthis._data.search.dom = $();\n\t\t};\n\t\t/**\n\t\t * opens nodes that need to be opened to reveal the search results. Used only internally.\n\t\t * @private\n\t\t * @name _search_open(d)\n\t\t * @param {Array} d an array of node IDs\n\t\t * @plugin search\n\t\t */\n\t\tthis._search_open = function (d) {\n\t\t\tvar t = this;\n\t\t\t$.each(d.concat([]), function (i, v) {\n\t\t\t\tif(v === \"#\") { return true; }\n\t\t\t\ttry { v = $('#' + v.replace($.jstree.idregex,'\\\\$&'), t.element); } catch(ignore) { }\n\t\t\t\tif(v && v.length) {\n\t\t\t\t\tif(t.is_closed(v)) {\n\t\t\t\t\t\tt._data.search.opn.push(v[0].id);\n\t\t\t\t\t\tt.open_node(v, function () { t._search_open(d); }, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t};\n\n\t// helpers\n\t(function ($) {\n\t\t// from http://kiro.me/projects/fuse.html\n\t\t$.vakata.search = function(pattern, txt, options) {\n\t\t\toptions = options || {};\n\t\t\tif(options.fuzzy !== false) {\n\t\t\t\toptions.fuzzy = true;\n\t\t\t}\n\t\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\n\t\t\tvar MATCH_LOCATION\t= options.location || 0,\n\t\t\t\tMATCH_DISTANCE\t= options.distance || 100,\n\t\t\t\tMATCH_THRESHOLD\t= options.threshold || 0.6,\n\t\t\t\tpatternLen = pattern.length,\n\t\t\t\tmatchmask, pattern_alphabet, match_bitapScore, search;\n\t\t\tif(patternLen > 32) {\n\t\t\t\toptions.fuzzy = false;\n\t\t\t}\n\t\t\tif(options.fuzzy) {\n\t\t\t\tmatchmask = 1 << (patternLen - 1);\n\t\t\t\tpattern_alphabet = (function () {\n\t\t\t\t\tvar mask = {},\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\t\tmask[pattern.charAt(i)] = 0;\n\t\t\t\t\t}\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\n\t\t\t\t\t}\n\t\t\t\t\treturn mask;\n\t\t\t\t}());\n\t\t\t\tmatch_bitapScore = function (e, x) {\n\t\t\t\t\tvar accuracy = e / patternLen,\n\t\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\n\t\t\t\t\tif(!MATCH_DISTANCE) {\n\t\t\t\t\t\treturn proximity ? 1.0 : accuracy;\n\t\t\t\t\t}\n\t\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\n\t\t\t\t};\n\t\t\t}\n\t\t\tsearch = function (text) {\n\t\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\n\t\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisMatch: true,\n\t\t\t\t\t\tscore: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif(!options.fuzzy) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisMatch: false,\n\t\t\t\t\t\tscore: 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tvar i, j,\n\t\t\t\t\ttextLen = text.length,\n\t\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\n\t\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\n\t\t\t\t\tbinMin, binMid,\n\t\t\t\t\tbinMax = patternLen + textLen,\n\t\t\t\t\tlastRd, start, finish, rd, charMatch,\n\t\t\t\t\tscore = 1,\n\t\t\t\t\tlocations = [];\n\t\t\t\tif (bestLoc !== -1) {\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\n\t\t\t\t\tif (bestLoc !== -1) {\n\t\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbestLoc = -1;\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\tbinMin = 0;\n\t\t\t\t\tbinMid = binMax;\n\t\t\t\t\twhile (binMin < binMid) {\n\t\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\n\t\t\t\t\t\t\tbinMin = binMid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\n\t\t\t\t\t}\n\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\n\t\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\n\t\t\t\t\trd = new Array(finish + 2);\n\t\t\t\t\trd[finish + 1] = (1 << i) - 1;\n\t\t\t\t\tfor (j = finish; j >= start; j--) {\n\t\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rd[j] & matchmask) {\n\t\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\n\t\t\t\t\t\t\tif (score <= scoreThreshold) {\n\t\t\t\t\t\t\t\tscoreThreshold = score;\n\t\t\t\t\t\t\t\tbestLoc = j - 1;\n\t\t\t\t\t\t\t\tlocations.push(bestLoc);\n\t\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\n\t\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlastRd = rd;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tisMatch: bestLoc >= 0,\n\t\t\t\t\tscore: score\n\t\t\t\t};\n\t\t\t};\n\t\t\treturn txt === true ? { 'search' : search } : search(txt);\n\t\t};\n\t}($));\n\n\t// include the search plugin by default\n\t// $.jstree.defaults.plugins.push(\"search\");\n\n/**\n * ### Sort plugin\n *\n * Autmatically sorts all siblings in the tree according to a sorting function.\n */\n\n\t/**\n\t * the settings function used to sort the nodes.\n\t * It is executed in the tree's context, accepts two nodes as arguments and should return `1` or `-1`.\n\t * @name $.jstree.defaults.sort\n\t * @plugin sort\n\t */\n\t$.jstree.defaults.sort = function (a, b) {\n\t\t//return this.get_type(a) === this.get_type(b) ? (this.get_text(a) > this.get_text(b) ? 1 : -1) : this.get_type(a) >= this.get_type(b);\n\t\treturn this.get_text(a) > this.get_text(b) ? 1 : -1;\n\t};\n\t$.jstree.plugins.sort = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tthis.element\n\t\t\t\t.on(\"model.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent, true);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"rename_node.jstree create_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent || data.node.parent, false);\n\t\t\t\t\t\tthis.redraw_node(data.parent || data.node.parent, true);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"move_node.jstree copy_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent, false);\n\t\t\t\t\t\tthis.redraw_node(data.parent, true);\n\t\t\t\t\t}, this));\n\t\t};\n\t\t/**\n\t\t * used to sort a node's children\n\t\t * @private\n\t\t * @name sort(obj [, deep])\n\t\t * @param  {mixed} obj the node\n\t\t * @param {Boolean} deep if set to `true` nodes are sorted recursively.\n\t\t * @plugin sort\n\t\t * @trigger search.jstree\n\t\t */\n\t\tthis.sort = function (obj, deep) {\n\t\t\tvar i, j;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(obj && obj.children && obj.children.length) {\n\t\t\t\tobj.children.sort($.proxy(this.settings.sort, this));\n\t\t\t\tif(deep) {\n\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\tthis.sort(obj.children_d[i], false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\t// include the sort plugin by default\n\t// $.jstree.defaults.plugins.push(\"sort\");\n\n/**\n * ### State plugin\n *\n * Saves the state of the tree (selected nodes, opened nodes) on the user's computer using available options (localStorage, cookies, etc)\n */\n\n\tvar to = false;\n\t/**\n\t * stores all defaults for the state plugin\n\t * @name $.jstree.defaults.state\n\t * @plugin state\n\t */\n\t$.jstree.defaults.state = {\n\t\t/**\n\t\t * A string for the key to use when saving the current tree (change if using multiple trees in your project). Defaults to `jstree`.\n\t\t * @name $.jstree.defaults.state.key\n\t\t * @plugin state\n\t\t */\n\t\tkey\t\t: 'jstree',\n\t\t/**\n\t\t * A space separated list of events that trigger a state save. Defaults to `changed.jstree open_node.jstree close_node.jstree`.\n\t\t * @name $.jstree.defaults.state.events\n\t\t * @plugin state\n\t\t */\n\t\tevents\t: 'changed.jstree open_node.jstree close_node.jstree',\n\t\t/**\n\t\t * Time in milliseconds after which the state will expire. Defaults to 'false' meaning - no expire.\n\t\t * @name $.jstree.defaults.state.ttl\n\t\t * @plugin state\n\t\t */\n\t\tttl\t\t: false,\n\t\t/**\n\t\t * A function that will be executed prior to restoring state with one argument - the state object. Can be used to clear unwanted parts of the state.\n\t\t * @name $.jstree.defaults.state.filter\n\t\t * @plugin state\n\t\t */\n\t\tfilter\t: false\n\t};\n\t$.jstree.plugins.state = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tvar bind = $.proxy(function () {\n\t\t\t\tthis.element.on(this.settings.state.events, $.proxy(function () {\n\t\t\t\t\tif(to) { clearTimeout(to); }\n\t\t\t\t\tto = setTimeout($.proxy(function () { this.save_state(); }, this), 100);\n\t\t\t\t}, this));\n\t\t\t}, this);\n\t\t\tthis.element\n\t\t\t\t.on(\"ready.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.one(\"restore_state.jstree\", bind);\n\t\t\t\t\t\tif(!this.restore_state()) { bind(); }\n\t\t\t\t\t}, this));\n\t\t};\n\t\t/**\n\t\t * save the state\n\t\t * @name save_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.save_state = function () {\n\t\t\tvar st = { 'state' : this.get_state(), 'ttl' : this.settings.state.ttl, 'sec' : +(new Date()) };\n\t\t\t$.vakata.storage.set(this.settings.state.key, JSON.stringify(st));\n\t\t};\n\t\t/**\n\t\t * restore the state from the user's computer\n\t\t * @name restore_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.restore_state = function () {\n\t\t\tvar k = $.vakata.storage.get(this.settings.state.key);\n\t\t\tif(!!k) { try { k = JSON.parse(k); } catch(ex) { return false; } }\n\t\t\tif(!!k && k.ttl && k.sec && +(new Date()) - k.sec > k.ttl) { return false; }\n\t\t\tif(!!k && k.state) { k = k.state; }\n\t\t\tif(!!k && $.isFunction(this.settings.state.filter)) { k = this.settings.state.filter.call(this, k); }\n\t\t\tif(!!k) {\n\t\t\t\tthis.element.one(\"set_state.jstree\", function (e, data) { data.instance.trigger('restore_state', { 'state' : $.extend(true, {}, k) }); });\n\t\t\t\tthis.set_state(k);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\t/**\n\t\t * clear the state on the user's computer\n\t\t * @name clear_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.clear_state = function () {\n\t\t\treturn $.vakata.storage.del(this.settings.state.key);\n\t\t};\n\t};\n\n\t(function ($, undefined) {\n\t\t$.vakata.storage = {\n\t\t\t// simply specifying the functions in FF throws an error\n\t\t\tset : function (key, val) { return window.localStorage.setItem(key, val); },\n\t\t\tget : function (key) { return window.localStorage.getItem(key); },\n\t\t\tdel : function (key) { return window.localStorage.removeItem(key); }\n\t\t};\n\t}($));\n\n\t// include the state plugin by default\n\t// $.jstree.defaults.plugins.push(\"state\");\n\n/**\n * ### Types plugin\n *\n * Makes it possible to add predefined types for groups of nodes, which make it possible to easily control nesting rules and icon for each group.\n */\n\n\t/**\n\t * An object storing all types as key value pairs, where the key is the type name and the value is an object that could contain following keys (all optional).\n\t * \n\t * * `max_children` the maximum number of immediate children this node type can have. Do not specify or set to `-1` for unlimited.\n\t * * `max_depth` the maximum number of nesting this node type can have. A value of `1` would mean that the node can have children, but no grandchildren. Do not specify or set to `-1` for unlimited.\n\t * * `valid_children` an array of node type strings, that nodes of this type can have as children. Do not specify or set to `-1` for no limits.\n\t * * `icon` a string - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class. Omit to use the default icon from your theme.\n\t *\n\t * There are two predefined types:\n\t * \n\t * * `#` represents the root of the tree, for example `max_children` would control the maximum number of root nodes.\n\t * * `default` represents the default node - any settings here will be applied to all nodes that do not have a type specified.\n\t * \n\t * @name $.jstree.defaults.types\n\t * @plugin types\n\t */\n\t$.jstree.defaults.types = {\n\t\t'#' : {},\n\t\t'default' : {}\n\t};\n\n\t$.jstree.plugins.types = function (options, parent) {\n\t\tthis.init = function (el, options) {\n\t\t\tvar i, j;\n\t\t\tif(options && options.types && options.types['default']) {\n\t\t\t\tfor(i in options.types) {\n\t\t\t\t\tif(i !== \"default\" && i !== \"#\" && options.types.hasOwnProperty(i)) {\n\t\t\t\t\t\tfor(j in options.types['default']) {\n\t\t\t\t\t\t\tif(options.types['default'].hasOwnProperty(j) && options.types[i][j] === undefined) {\n\t\t\t\t\t\t\t\toptions.types[i][j] = options.types['default'][j];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tparent.init.call(this, el, options);\n\t\t\tthis._model.data['#'].type = '#';\n\t\t};\n\t\tthis.refresh = function (skip_loading, forget_state) {\n\t\t\tparent.refresh.call(this, skip_loading, forget_state);\n\t\t\tthis._model.data['#'].type = '#';\n\t\t};\n\t\tthis.bind = function () {\n\t\t\tthis.element\n\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\tt = this.settings.types,\n\t\t\t\t\t\t\ti, j, c = 'default';\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\tc = 'default';\n\t\t\t\t\t\t\tif(m[dpc[i]].original && m[dpc[i]].original.type && t[m[dpc[i]].original.type]) {\n\t\t\t\t\t\t\t\tc = m[dpc[i]].original.type;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(m[dpc[i]].data && m[dpc[i]].data.jstree && m[dpc[i]].data.jstree.type && t[m[dpc[i]].data.jstree.type]) {\n\t\t\t\t\t\t\t\tc = m[dpc[i]].data.jstree.type;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[dpc[i]].type = c;\n\t\t\t\t\t\t\tif(m[dpc[i]].icon === true && t[c].icon !== undefined) {\n\t\t\t\t\t\t\t\tm[dpc[i]].icon = t[c].icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tm['#'].type = '#';\n\t\t\t\t\t}, this));\n\t\t\tparent.bind.call(this);\n\t\t};\n\t\tthis.get_json = function (obj, options, flat) {\n\t\t\tvar i, j,\n\t\t\t\tm = this._model.data,\n\t\t\t\topt = options ? $.extend(true, {}, options, {no_id:false}) : {},\n\t\t\t\ttmp = parent.get_json.call(this, obj, opt, flat);\n\t\t\tif(tmp === false) { return false; }\n\t\t\tif($.isArray(tmp)) {\n\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\ttmp[i].type = tmp[i].id && m[tmp[i].id] && m[tmp[i].id].type ? m[tmp[i].id].type : \"default\";\n\t\t\t\t\tif(options && options.no_id) {\n\t\t\t\t\t\tdelete tmp[i].id;\n\t\t\t\t\t\tif(tmp[i].li_attr && tmp[i].li_attr.id) {\n\t\t\t\t\t\t\tdelete tmp[i].li_attr.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp.type = tmp.id && m[tmp.id] && m[tmp.id].type ? m[tmp.id].type : \"default\";\n\t\t\t\tif(options && options.no_id) {\n\t\t\t\t\ttmp = this._delete_ids(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tmp;\n\t\t};\n\t\tthis._delete_ids = function (tmp) {\n\t\t\tif($.isArray(tmp)) {\n\t\t\t\tfor(var i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\ttmp[i] = this._delete_ids(tmp[i]);\n\t\t\t\t}\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\tdelete tmp.id;\n\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\n\t\t\t\tdelete tmp.li_attr.id;\n\t\t\t}\n\t\t\tif(tmp.children && $.isArray(tmp.children)) {\n\t\t\t\ttmp.children = this._delete_ids(tmp.children);\n\t\t\t}\n\t\t\treturn tmp;\n\t\t};\n\t\tthis.check = function (chk, obj, par, pos, more) {\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tvar m = obj && obj.id ? $.jstree.reference(obj.id) : null, tmp, d, i, j;\n\t\t\tm = m && m._model && m._model.data ? m._model.data : null;\n\t\t\tswitch(chk) {\n\t\t\t\tcase \"create_node\":\n\t\t\t\tcase \"move_node\":\n\t\t\t\tcase \"copy_node\":\n\t\t\t\t\tif(chk !== 'move_node' || $.inArray(obj.id, par.children) === -1) {\n\t\t\t\t\t\ttmp = this.get_rules(par);\n\t\t\t\t\t\tif(tmp.max_children !== undefined && tmp.max_children !== -1 && tmp.max_children === par.children.length) {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_01', 'reason' : 'max_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(tmp.valid_children !== undefined && tmp.valid_children !== -1 && $.inArray(obj.type, tmp.valid_children) === -1) {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_02', 'reason' : 'valid_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(m && obj.children_d && obj.parents) {\n\t\t\t\t\t\t\td = 0;\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\td = Math.max(d, m[obj.children_d[i]].parents.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\td = d - obj.parents.length + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(d <= 0 || d === undefined) { d = 1; }\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif(tmp.max_depth !== undefined && tmp.max_depth !== -1 && tmp.max_depth < d) {\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_03', 'reason' : 'max_depth prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpar = this.get_node(par.parent);\n\t\t\t\t\t\t\ttmp = this.get_rules(par);\n\t\t\t\t\t\t\td++;\n\t\t\t\t\t\t} while(par);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\t/**\n\t\t * used to retrieve the type settings object for a node\n\t\t * @name get_rules(obj)\n\t\t * @param {mixed} obj the node to find the rules for\n\t\t * @return {Object}\n\t\t * @plugin types\n\t\t */\n\t\tthis.get_rules = function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar tmp = this.get_type(obj, true);\n\t\t\tif(tmp.max_depth === undefined) { tmp.max_depth = -1; }\n\t\t\tif(tmp.max_children === undefined) { tmp.max_children = -1; }\n\t\t\tif(tmp.valid_children === undefined) { tmp.valid_children = -1; }\n\t\t\treturn tmp;\n\t\t};\n\t\t/**\n\t\t * used to retrieve the type string or settings object for a node\n\t\t * @name get_type(obj [, rules])\n\t\t * @param {mixed} obj the node to find the rules for\n\t\t * @param {Boolean} rules if set to `true` instead of a string the settings object will be returned\n\t\t * @return {String|Object}\n\t\t * @plugin types\n\t\t */\n\t\tthis.get_type = function (obj, rules) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj) ? false : ( rules ? $.extend({ 'type' : obj.type }, this.settings.types[obj.type]) : obj.type);\n\t\t};\n\t\t/**\n\t\t * used to change a node's type\n\t\t * @name set_type(obj, type)\n\t\t * @param {mixed} obj the node to change\n\t\t * @param {String} type the new type\n\t\t * @plugin types\n\t\t */\n\t\tthis.set_type = function (obj, type) {\n\t\t\tvar t, t1, t2, old_type, old_icon;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_type(obj[t1], type);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tt = this.settings.types;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!t[type] || !obj) { return false; }\n\t\t\told_type = obj.type;\n\t\t\told_icon = this.get_icon(obj);\n\t\t\tobj.type = type;\n\t\t\tif(old_icon === true || (t[old_type] && t[old_type].icon && old_icon === t[old_type].icon)) {\n\t\t\t\tthis.set_icon(obj, t[type].icon !== undefined ? t[type].icon : true);\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t};\n\t// include the types plugin by default\n\t// $.jstree.defaults.plugins.push(\"types\");\n\n/**\n * ### Unique plugin\n *\n * Enforces that no nodes with the same name can coexist as siblings.\n */\n\n\t/**\n\t * stores all defaults for the unique plugin\n\t * @name $.jstree.defaults.unique\n\t * @plugin unique\n\t */\n\t$.jstree.defaults.unique = {\n\t\t/**\n\t\t * Indicates if the comparison should be case sensitive. Default is `false`.\n\t\t * @name $.jstree.defaults.unique.case_sensitive\n\t\t * @plugin unique\n\t\t */\n\t\tcase_sensitive : false,\n\t\t/**\n\t\t * A callback executed in the instance's scope when a new node is created and the name is already taken, the two arguments are the conflicting name and the counter. The default will produce results like `New node (2)`.\n\t\t * @name $.jstree.defaults.unique.duplicate\n\t\t * @plugin unique\n\t\t */\n\t\tduplicate : function (name, counter) {\n\t\t\treturn name + ' (' + counter + ')';\n\t\t}\n\t};\n\n\t$.jstree.plugins.unique = function (options, parent) {\n\t\tthis.check = function (chk, obj, par, pos, more) {\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tif(!par || !par.children) { return true; }\n\t\t\tvar n = chk === \"rename_node\" ? pos : obj.text,\n\t\t\t\tc = [],\n\t\t\t\ts = this.settings.unique.case_sensitive,\n\t\t\t\tm = this._model.data, i, j;\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\tc.push(s ? m[par.children[i]].text : m[par.children[i]].text.toLowerCase());\n\t\t\t}\n\t\t\tif(!s) { n = n.toLowerCase(); }\n\t\t\tswitch(chk) {\n\t\t\t\tcase \"delete_node\":\n\t\t\t\t\treturn true;\n\t\t\t\tcase \"rename_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1 || (obj.text && obj.text[ s ? 'toString' : 'toLowerCase']() === n));\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_01', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"create_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_04', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"copy_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_02', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"move_node\":\n\t\t\t\t\ti = (obj.parent === par.id || $.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_03', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tthis.create_node = function (par, node, pos, callback, is_loaded) {\n\t\t\tif(!node || node.text === undefined) {\n\t\t\t\tif(par === null) {\n\t\t\t\t\tpar = \"#\";\n\t\t\t\t}\n\t\t\t\tpar = this.get_node(par);\n\t\t\t\tif(!par) {\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\tpos = pos === undefined ? \"last\" : pos;\n\t\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\tif(!node) { node = {}; }\n\t\t\t\tvar tmp, n, dpc, i, j, m = this._model.data, s = this.settings.unique.case_sensitive, cb = this.settings.unique.duplicate;\n\t\t\t\tn = tmp = this.get_string('New node');\n\t\t\t\tdpc = [];\n\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\t\tdpc.push(s ? m[par.children[i]].text : m[par.children[i]].text.toLowerCase());\n\t\t\t\t}\n\t\t\t\ti = 1;\n\t\t\t\twhile($.inArray(s ? n : n.toLowerCase(), dpc) !== -1) {\n\t\t\t\t\tn = cb.call(this, tmp, (++i)).toString();\n\t\t\t\t}\n\t\t\t\tnode.text = n;\n\t\t\t}\n\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t};\n\t};\n\n\t// include the unique plugin by default\n\t// $.jstree.defaults.plugins.push(\"unique\");\n\n\n/**\n * ### Wholerow plugin\n *\n * Makes each node appear block level. Making selection easier. May cause slow down for large trees in old browsers.\n */\n\n\tvar div = document.createElement('DIV');\n\tdiv.setAttribute('unselectable','on');\n\tdiv.className = 'jstree-wholerow';\n\tdiv.innerHTML = '&#160;';\n\t$.jstree.plugins.wholerow = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis.element\n\t\t\t\t.on('ready.jstree set_state.jstree', $.proxy(function () {\n\t\t\t\t\t\tthis.hide_dots();\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\n\t\t\t\t\t\t//div.style.height = this._data.core.li_height + 'px';\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-wholerow-ul');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"deselect_all.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"changed.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\n\t\t\t\t\t\tvar tmp = false, i, j;\n\t\t\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = this.get_node(data.selected[i], true);\n\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\ttmp.children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"open_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.get_node(data.node, true).find('.jstree-clicked').parent().children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"hover_node.jstree dehover_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.get_node(data.node, true).children('.jstree-wholerow')[e.type === \"hover_node\"?\"addClass\":\"removeClass\"]('jstree-wholerow-hovered');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-wholerow\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tvar tmp = $.Event('contextmenu', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey, pageX : e.pageX, pageY : e.pageY });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor:eq(0)\").trigger(tmp);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-wholerow\", function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor:eq(0)\").trigger(tmp).focus();\n\t\t\t\t\t})\n\t\t\t\t.on(\"click.jstree\", \".jstree-leaf > .jstree-ocl\", $.proxy(function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor:eq(0)\").trigger(tmp).focus();\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"mouseover.jstree\", \".jstree-wholerow, .jstree-icon\", $.proxy(function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"mouseleave.jstree\", \".jstree-node\", $.proxy(function (e) {\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\n\t\t\t\t\t}, this));\n\t\t};\n\t\tthis.teardown = function () {\n\t\t\tif(this.settings.wholerow) {\n\t\t\t\tthis.element.find(\".jstree-wholerow\").remove();\n\t\t\t}\n\t\t\tparent.teardown.call(this);\n\t\t};\n\t\tthis.redraw_node = function(obj, deep, callback) {\n\t\t\tobj = parent.redraw_node.call(this, obj, deep, callback);\n\t\t\tif(obj) {\n\t\t\t\tvar tmp = div.cloneNode(true);\n\t\t\t\t//tmp.style.height = this._data.core.li_height + 'px';\n\t\t\t\tif($.inArray(obj.id, this._data.core.selected) !== -1) { tmp.className += ' jstree-wholerow-clicked'; }\n\t\t\t\tobj.insertBefore(tmp, obj.childNodes[0]);\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t};\n\t// include the wholerow plugin by default\n\t// $.jstree.defaults.plugins.push(\"wholerow\");\n\n}));\n\n\n/***/ }),\n\n/***/ 299:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toastr = __webpack_require__(42);\n\nvar _toastr2 = _interopRequireDefault(_toastr);\n\nvar _libraryModel = __webpack_require__(156);\n\nvar _libraryModel2 = _interopRequireDefault(_libraryModel);\n\nvar _uiSelect = __webpack_require__(139);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LibraryView = Backbone.View.extend({\n    el: \"#center\",\n\n    model: null,\n\n    options: {},\n\n    events: {\n        \"click .toolbtn_save_permissions\": \"savePermissions\"\n    },\n\n    initialize: function initialize(options) {\n        this.options = _.extend(this.options, options);\n        if (this.options.id) {\n            this.fetchLibrary();\n        }\n    },\n\n    fetchLibrary: function fetchLibrary(options) {\n        this.options = _.extend(this.options, options);\n        this.model = new _libraryModel2.default.Library({\n            id: this.options.id\n        });\n        var that = this;\n        this.model.fetch({\n            success: function success() {\n                if (that.options.show_permissions) {\n                    that.showPermissions();\n                }\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(response.responseJSON.err_msg + \" Click this to go back.\", \"\", {\n                        onclick: function onclick() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    _toastr2.default.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function onclick() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    showPermissions: function showPermissions(options) {\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n\n        if (this.options.fetched_permissions !== undefined) {\n            if (this.options.fetched_permissions.access_library_role_list.length === 0) {\n                this.model.set({ is_unrestricted: true });\n            } else {\n                this.model.set({ is_unrestricted: false });\n            }\n        }\n        var is_admin = false;\n        if (Galaxy.user) {\n            is_admin = Galaxy.user.isAdmin();\n        }\n        var template = this.templateLibraryPermissions();\n        this.$el.html(template({ library: this.model, is_admin: is_admin }));\n\n        var self = this;\n        $.get(Galaxy.root + \"api/libraries/\" + self.id + \"/permissions?scope=current\").done(function (fetched_permissions) {\n            self.prepareSelectBoxes({\n                fetched_permissions: fetched_permissions\n            });\n        }).fail(function () {\n            _toastr2.default.error(\"An error occurred while attempting to fetch library permissions.\");\n        });\n\n        $(\"#center [data-toggle]\").tooltip();\n        //hack to show scrollbars\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    _serializeRoles: function _serializeRoles(role_list) {\n        var selected_roles = [];\n        for (var i = 0; i < role_list.length; i++) {\n            selected_roles.push(role_list[i][1] + \":\" + role_list[i][0]);\n        }\n        return selected_roles;\n    },\n\n    prepareSelectBoxes: function prepareSelectBoxes(options) {\n        this.options = _.extend(this.options, options);\n        var fetched_permissions = this.options.fetched_permissions;\n        var self = this;\n\n        var selected_access_library_roles = this._serializeRoles(fetched_permissions.access_library_role_list);\n        var selected_add_item_roles = this._serializeRoles(fetched_permissions.add_library_item_role_list);\n        var selected_manage_library_roles = this._serializeRoles(fetched_permissions.manage_library_role_list);\n        var selected_modify_library_roles = this._serializeRoles(fetched_permissions.modify_library_role_list);\n\n        self.accessSelectObject = new _uiSelect2.default.View(this._createSelectOptions(this, \"access_perm\", selected_access_library_roles, true));\n        self.addSelectObject = new _uiSelect2.default.View(this._createSelectOptions(this, \"add_perm\", selected_add_item_roles, false));\n        self.manageSelectObject = new _uiSelect2.default.View(this._createSelectOptions(this, \"manage_perm\", selected_manage_library_roles, false));\n        self.modifySelectObject = new _uiSelect2.default.View(this._createSelectOptions(this, \"modify_perm\", selected_modify_library_roles, false));\n    },\n\n    _createSelectOptions: function _createSelectOptions(self, id, init_data, is_library_access) {\n        is_library_access = is_library_access === true ? is_library_access : false;\n        var select_options = {\n            minimumInputLength: 0,\n            css: id,\n            multiple: true,\n            placeholder: \"Click to select a role\",\n            container: self.$el.find(\"#\" + id),\n            ajax: {\n                url: Galaxy.root + \"api/libraries/\" + self.id + \"/permissions?scope=available&is_library_access=\" + is_library_access,\n                dataType: \"json\",\n                quietMillis: 100,\n                data: function data(term, page) {\n                    // page is the one-based page number tracked by Select2\n                    return {\n                        q: term, //search term\n                        page_limit: 10, // page size\n                        page: page // page number\n                    };\n                },\n                results: function results(data, page) {\n                    var more = page * 10 < data.total; // whether or not there are more results available\n                    // notice we return the value of more so Select2 knows if more results can be loaded\n                    return { results: data.roles, more: more };\n                }\n            },\n            formatResult: function roleFormatResult(role) {\n                return role.name + \" type: \" + role.type;\n            },\n\n            formatSelection: function roleFormatSelection(role) {\n                return role.name;\n            },\n            initSelection: function initSelection(element, callback) {\n                // the input tag has a value attribute preloaded that points to a preselected role's id\n                // this function resolves that id attribute to an object that select2 can render\n                // using its formatResult renderer - that way the role name is shown preselected\n                var data = [];\n                $(element.val().split(\",\")).each(function () {\n                    var item = this.split(\":\");\n                    data.push({\n                        id: item[0],\n                        name: item[1]\n                    });\n                });\n                callback(data);\n            },\n            // initialData: init_data.join(','),\n            initialData: init_data,\n            dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n\n        return select_options;\n    },\n\n    makeDatasetPrivate: function makeDatasetPrivate() {\n        var self = this;\n        $.post(Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=make_private\").done(function (fetched_permissions) {\n            self.model.set({ is_unrestricted: false });\n            self.showPermissions({\n                fetched_permissions: fetched_permissions\n            });\n            _toastr2.default.success(\"The dataset is now private to you.\");\n        }).fail(function () {\n            _toastr2.default.error(\"An error occurred while attempting to make dataset private.\");\n        });\n    },\n\n    removeDatasetRestrictions: function removeDatasetRestrictions() {\n        var self = this;\n        $.post(Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=remove_restrictions\").done(function (fetched_permissions) {\n            self.model.set({ is_unrestricted: true });\n            self.showPermissions({\n                fetched_permissions: fetched_permissions\n            });\n            _toastr2.default.success(\"Access to this dataset is now unrestricted.\");\n        }).fail(function () {\n            _toastr2.default.error(\"An error occurred while attempting to make dataset unrestricted.\");\n        });\n    },\n\n    _extractIds: function _extractIds(roles_list) {\n        var ids_list = [];\n        for (var i = roles_list.length - 1; i >= 0; i--) {\n            ids_list.push(roles_list[i].id);\n        }\n        return ids_list;\n    },\n    savePermissions: function savePermissions(event) {\n        var self = this;\n\n        var access_ids = this._extractIds(this.accessSelectObject.$el.select2(\"data\"));\n        var add_ids = this._extractIds(this.addSelectObject.$el.select2(\"data\"));\n        var manage_ids = this._extractIds(this.manageSelectObject.$el.select2(\"data\"));\n        var modify_ids = this._extractIds(this.modifySelectObject.$el.select2(\"data\"));\n\n        $.post(Galaxy.root + \"api/libraries/\" + self.id + \"/permissions?action=set_permissions\", {\n            \"access_ids[]\": access_ids,\n            \"add_ids[]\": add_ids,\n            \"manage_ids[]\": manage_ids,\n            \"modify_ids[]\": modify_ids\n        }).done(function (fetched_permissions) {\n            //fetch dataset again\n            self.showPermissions({\n                fetched_permissions: fetched_permissions\n            });\n            _toastr2.default.success(\"Permissions saved.\");\n        }).fail(function () {\n            _toastr2.default.error(\"An error occurred while attempting to set library permissions.\");\n        });\n    },\n\n    templateLibraryPermissions: function templateLibraryPermissions() {\n        return _.template(['<div class=\"library_style_container\">', '<div id=\"library_toolbar\">', '<a href=\"#\">', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to the list of Libraries\" class=\"btn btn-default primary-button\" type=\"button\">', '<span class=\"fa fa-list\"/>', \"&nbsp;Libraries\", \"</button>\", \"</a>\", \"</div>\", \"<h1>\", 'Library: <%= _.escape(library.get(\"name\")) %>', \"</h1>\", '<div class=\"alert alert-warning\">', \"<% if (is_admin) { %>\", \"You are logged in as an <strong>administrator</strong> therefore you can manage any library on this Galaxy instance. Please make sure you understand the consequences.\", \"<% } else { %>\", \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\", \"<% }%>\", \"</div>\", '<div class=\"dataset_table\">', \"<h2>Library permissions</h2>\", \"<h4>Roles that can access the library</h4>\", '<div id=\"access_perm\" class=\"access_perm roles-selection\"/>', '<div class=\"alert alert-info roles-selection\">', \"User with <strong>any</strong> of these roles can access this library. If there are no access roles set on the library it is considered <strong>unrestricted</strong>.\", \"</div>\", \"<h4>Roles that can manage permissions on this library</h4>\", '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"/>', '<div class=\"alert alert-info roles-selection\">', \"User with <strong>any</strong> of these roles can manage permissions on this library (includes giving access).\", \"</div>\", \"<h4>Roles that can add items to this library</h4>\", '<div id=\"add_perm\" class=\"add_perm roles-selection\"/>', '<div class=\"alert alert-info roles-selection\">', \"User with <strong>any</strong> of these roles can add items to this library (folders and datasets).\", \"</div>\", \"<h4>Roles that can modify this library</h4>\", '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"/>', '<div class=\"alert alert-info roles-selection\">', \"User with <strong>any</strong> of these roles can modify this library (name, synopsis, etc.).\", \"</div>\", '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">', '<span class=\"fa fa-floppy-o\"/>', \"&nbsp;Save\", \"</button>\", \"</div>\", \"</div>\"].join(\"\"));\n    }\n});\n\nexports.default = {\n    LibraryView: LibraryView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 300:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toastr = __webpack_require__(42);\n\nvar _toastr2 = _interopRequireDefault(_toastr);\n\nvar _libraryModel = __webpack_require__(156);\n\nvar _libraryModel2 = _interopRequireDefault(_libraryModel);\n\nvar _uiSelect = __webpack_require__(139);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FolderView = Backbone.View.extend({\n    el: \"#center\",\n\n    model: null,\n\n    options: {},\n\n    events: {\n        \"click .toolbtn_save_permissions\": \"savePermissions\"\n    },\n\n    initialize: function initialize(options) {\n        this.options = _.extend(this.options, options);\n        if (this.options.id) {\n            this.fetchFolder();\n        }\n    },\n\n    fetchFolder: function fetchFolder(options) {\n        this.options = _.extend(this.options, options);\n        this.model = new _libraryModel2.default.FolderAsModel({\n            id: this.options.id\n        });\n        var that = this;\n        this.model.fetch({\n            success: function success() {\n                if (that.options.show_permissions) {\n                    that.showPermissions();\n                }\n            },\n            error: function error(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    _toastr2.default.error(response.responseJSON.err_msg + \" Click this to go back.\", \"\", {\n                        onclick: function onclick() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    _toastr2.default.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function onclick() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    showPermissions: function showPermissions(options) {\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n\n        var is_admin = false;\n        if (Galaxy.user) {\n            is_admin = Galaxy.user.isAdmin();\n        }\n        var template = this.templateFolderPermissions();\n        this.$el.html(template({ folder: this.model, is_admin: is_admin }));\n\n        var self = this;\n        $.get(Galaxy.root + \"api/folders/\" + self.id + \"/permissions?scope=current\").done(function (fetched_permissions) {\n            self.prepareSelectBoxes({\n                fetched_permissions: fetched_permissions\n            });\n        }).fail(function () {\n            _toastr2.default.error(\"An error occurred while attempting to fetch folder permissions.\");\n        });\n\n        $(\"#center [data-toggle]\").tooltip();\n        //hack to show scrollbars\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    _serializeRoles: function _serializeRoles(role_list) {\n        var selected_roles = [];\n        for (var i = 0; i < role_list.length; i++) {\n            selected_roles.push(role_list[i][1] + \":\" + role_list[i][0]);\n        }\n        return selected_roles;\n    },\n\n    prepareSelectBoxes: function prepareSelectBoxes(options) {\n        this.options = _.extend(this.options, options);\n        var fetched_permissions = this.options.fetched_permissions;\n        var self = this;\n\n        var selected_add_item_roles = this._serializeRoles(fetched_permissions.add_library_item_role_list);\n        var selected_manage_folder_roles = this._serializeRoles(fetched_permissions.manage_folder_role_list);\n        var selected_modify_folder_roles = this._serializeRoles(fetched_permissions.modify_folder_role_list);\n\n        self.addSelectObject = new _uiSelect2.default.View(this._createSelectOptions(this, \"add_perm\", selected_add_item_roles, false));\n        self.manageSelectObject = new _uiSelect2.default.View(this._createSelectOptions(this, \"manage_perm\", selected_manage_folder_roles, false));\n        self.modifySelectObject = new _uiSelect2.default.View(this._createSelectOptions(this, \"modify_perm\", selected_modify_folder_roles, false));\n    },\n\n    _createSelectOptions: function _createSelectOptions(self, id, init_data) {\n        var select_options = {\n            minimumInputLength: 0,\n            css: id,\n            multiple: true,\n            placeholder: \"Click to select a role\",\n            container: self.$el.find(\"#\" + id),\n            ajax: {\n                url: Galaxy.root + \"api/folders/\" + self.id + \"/permissions?scope=available\",\n                dataType: \"json\",\n                quietMillis: 100,\n                data: function data(term, page) {\n                    // page is the one-based page number tracked by Select2\n                    return {\n                        q: term, //search term\n                        page_limit: 10, // page size\n                        page: page // page number\n                    };\n                },\n                results: function results(data, page) {\n                    var more = page * 10 < data.total; // whether or not there are more results available\n                    // notice we return the value of more so Select2 knows if more results can be loaded\n                    return { results: data.roles, more: more };\n                }\n            },\n            formatResult: function roleFormatResult(role) {\n                return role.name + \" type: \" + role.type;\n            },\n\n            formatSelection: function roleFormatSelection(role) {\n                return role.name;\n            },\n            initSelection: function initSelection(element, callback) {\n                // the input tag has a value attribute preloaded that points to a preselected role's id\n                // this function resolves that id attribute to an object that select2 can render\n                // using its formatResult renderer - that way the role name is shown preselected\n                var data = [];\n                $(element.val().split(\",\")).each(function () {\n                    var item = this.split(\":\");\n                    data.push({\n                        id: item[0],\n                        name: item[1]\n                    });\n                });\n                callback(data);\n            },\n            initialData: init_data.join(\",\"),\n            dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n\n        return select_options;\n    },\n\n    /**\n     * Extract the role ids from Select2 elements's 'data'\n     */\n    _extractIds: function _extractIds(roles_list) {\n        var ids_list = [];\n        for (var i = roles_list.length - 1; i >= 0; i--) {\n            ids_list.push(roles_list[i].id);\n        }\n        return ids_list;\n    },\n\n    /**\n     * Save the permissions for roles entered in the select boxes.\n     */\n    savePermissions: function savePermissions(event) {\n        var self = this;\n        var add_ids = this._extractIds(this.addSelectObject.$el.select2(\"data\"));\n        var manage_ids = this._extractIds(this.manageSelectObject.$el.select2(\"data\"));\n        var modify_ids = this._extractIds(this.modifySelectObject.$el.select2(\"data\"));\n        $.post(Galaxy.root + \"api/folders/\" + self.id + \"/permissions?action=set_permissions\", {\n            \"add_ids[]\": add_ids,\n            \"manage_ids[]\": manage_ids,\n            \"modify_ids[]\": modify_ids\n        }).done(function (fetched_permissions) {\n            self.showPermissions({\n                fetched_permissions: fetched_permissions\n            });\n            _toastr2.default.success(\"Permissions saved.\");\n        }).fail(function () {\n            _toastr2.default.error(\"An error occurred while attempting to set folder permissions.\");\n        });\n    },\n\n    templateFolderPermissions: function templateFolderPermissions() {\n        return _.template(['<div class=\"library_style_container\">', '<div id=\"library_toolbar\">', '<a href=\"#/folders/<%= folder.get(\"parent_id\") %>\">', '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to the parent folder\" class=\"btn btn-default primary-button\" type=\"button\">', '<span class=\"fa fa-caret-left fa-lg\"/>', \"&nbsp;Parent folder\", \"</button>\", \"</a>\", \"</div>\", \"<h1>\", 'Folder: <%= _.escape(folder.get(\"name\")) %>', \"</h1>\", '<div class=\"alert alert-warning\">', \"<% if (is_admin) { %>\", \"You are logged in as an <strong>administrator</strong> therefore you can manage any folder on this Galaxy instance. Please make sure you understand the consequences.\", \"<% } else { %>\", \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\", \"<% }%>\", \"</div>\", '<div class=\"dataset_table\">', \"<h2>Folder permissions</h2>\", \"<h4>\", \"Roles that can manage permissions on this folder\", \"</h4>\", '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"/>', '<div class=\"alert alert-info roles-selection\">', \"User with <strong>any</strong> of these roles can manage permissions on this folder.\", \"</div>\", \"<h4>\", \"Roles that can add items to this folder\", \"</h4>\", '<div id=\"add_perm\" class=\"add_perm roles-selection\"/>', '<div class=\"alert alert-info roles-selection\">', \"User with <strong>any</strong> of these roles can add items to this folder (folders and datasets).\", \"</div>\", \"<h4>\", \"Roles that can modify this folder\", \"</h4>\", '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"/>', '<div class=\"alert alert-info roles-selection\">', \"User with <strong>any</strong> of these roles can modify this folder (name, etc.).\", \"</div>\", '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">', '<span class=\"fa fa-floppy-o\"/>', \"&nbsp;Save\", \"</button>\", \"</div>\", \"</div>\"].join(\"\"));\n    }\n});\n\nexports.default = {\n    FolderView: FolderView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 45:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n//==============================================================================\nvar LOGGING_FNS = [\"log\", \"debug\", \"info\", \"warn\", \"error\", \"metric\"];\n/** adds logging functions to an obj.prototype (or obj directly) adding a namespace for filtering\n *  @param {Object} obj\n *  @param {String} namespace\n */\nfunction addLogging(obj, namespace) {\n    var addTo = obj.prototype !== undefined ? obj.prototype : obj;\n    if (namespace !== undefined) {\n        addTo._logNamespace = namespace;\n    }\n    //yagni?: without this, may not capture Galaxy.config.debug and add Galaxy.logger properly\n    // if( window.Galaxy && window.Galaxy.config && window.Galaxy.config.debug ){\n    //     addTo.logger = window.Galaxy.logger;\n    // }\n\n    // give the object each\n    LOGGING_FNS.forEach(function (logFn) {\n        addTo[logFn] = function () {\n            if (!this.logger) {\n                return undefined;\n            }\n            if (this.logger.emit) {\n                return this.logger.emit(logFn, this._logNamespace, arguments);\n            }\n            if (this.logger[logFn]) {\n                //TODO:! there has to be a way to get the lineno/file into this\n                // http://stackoverflow.com/questions/13815640/a-proper-wrapper-for-console-log-with-correct-line-number\n                // http://www.paulirish.com/2009/log-a-lightweight-wrapper-for-consolelog/\n                return this.logger[logFn].apply(this.logger, arguments);\n            }\n            return undefined;\n        };\n    });\n    return obj;\n}\n\n//==============================================================================\nexports.default = addLogging;\n\n/***/ }),\n\n/***/ 8:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(2);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nvar _backbone = __webpack_require__(1);\n\nvar Backbone = _interopRequireWildcard(_backbone);\n\nvar _addLogging = __webpack_require__(45);\n\nvar _addLogging2 = _interopRequireDefault(_addLogging);\n\nvar _localization = __webpack_require__(7);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n//==============================================================================\n/** @class Mixin to add logging capabilities to an object.\n *      Designed to allow switching an objects log output off/on at one central\n *      statement. Can be used with plain browser console (or something more\n *      complex like an AJAX logger).\n *  <br />NOTE: currently only uses the console.debug log function\n *  (as opposed to debug, error, warn, etc.)\n *  @name LoggableMixin\n *\n *  @example\n *  // Add to your models/views at the definition using chaining:\n *      var MyModel = Backbone.Model.extend( LoggableMixin ).extend({ // ... });\n *\n *  // or - more explicitly AFTER the definition:\n *      var MyModel = Backbone.Model.extend({\n *          logger  : console\n *          // ...\n *          this.log( '$#%& it! - broken already...' );\n *      })\n *      _.extend( MyModel.prototype, LoggableMixin )\n *\n */\nvar LoggableMixin = /** @lends LoggableMixin# */{\n    // replace null with console (if available) to see all logs for a particular view/model\n    /** The logging object whose log function will be used to output\n     *      messages. Null will supress all logging. Commonly set to console.\n     */\n    logger: null,\n    /** @type {String} a namespace for filtering/focusing log output */\n    _logNamespace: \".\"\n};\n(0, _addLogging2.default)(LoggableMixin);\n\n//==============================================================================\n/** Backbone model that syncs to the browser's sessionStorage API.\n *      This all largely happens behind the scenes and no special calls are required.\n */\nvar SessionStorageModel = Backbone.Model.extend({\n    initialize: function initialize(initialAttrs) {\n        // check for sessionStorage and error if no id is provided\n        this._checkEnabledSessionStorage();\n        if (!initialAttrs.id) {\n            throw new Error(\"SessionStorageModel requires an id in the initial attributes\");\n        }\n        this.id = initialAttrs.id;\n\n        // load existing from storage (if any), clear any attrs set by bbone before init is called,\n        //  layer initial over existing and defaults, and save\n        var existing = !this.isNew() ? this._read(this) : {};\n        this.clear({ silent: true });\n        this.save(_.extend({}, this.defaults, existing, initialAttrs), {\n            silent: true\n        });\n\n        // save on any change to it immediately\n        this.on(\"change\", function () {\n            this.save();\n        });\n    },\n\n    _checkEnabledSessionStorage: function _checkEnabledSessionStorage() {\n        try {\n            return window.sessionStorage.length >= 0;\n        } catch (err) {\n            alert(\"Please enable cookies in your browser for this Galaxy site\");\n            return false;\n        }\n    },\n\n    /** override of bbone sync to save to sessionStorage rather than REST\n     *      bbone options (success, errror, etc.) should still apply\n     */\n    sync: function sync(method, model, options) {\n        if (!options.silent) {\n            model.trigger(\"request\", model, {}, options);\n        }\n        var returned = {};\n        switch (method) {\n            case \"create\":\n                returned = this._create(model);\n                break;\n            case \"read\":\n                returned = this._read(model);\n                break;\n            case \"update\":\n                returned = this._update(model);\n                break;\n            case \"delete\":\n                returned = this._delete(model);\n                break;\n        }\n        if (returned !== undefined || returned !== null) {\n            if (options.success) {\n                options.success();\n            }\n        } else {\n            if (options.error) {\n                options.error();\n            }\n        }\n        return returned;\n    },\n\n    /** set storage to the stringified item */\n    _create: function _create(model) {\n        try {\n            var json = model.toJSON();\n            var set = sessionStorage.setItem(model.id, JSON.stringify(json));\n            return set === null ? set : json;\n            // DOMException is thrown in Safari if in private browsing mode and sessionStorage is attempted:\n            // http://stackoverflow.com/questions/14555347\n            // TODO: this could probably use a more general soln - like detecting priv. mode + safari => non-ajaxing Model\n        } catch (err) {\n            if (!(err instanceof DOMException && navigator.userAgent.indexOf(\"Safari\") > -1)) {\n                throw err;\n            }\n        }\n        return null;\n    },\n\n    /** read and parse json from storage */\n    _read: function _read(model) {\n        return JSON.parse(sessionStorage.getItem(model.id));\n    },\n\n    /** set storage to the item (alias to create) */\n    _update: function _update(model) {\n        return model._create(model);\n    },\n\n    /** remove the item from storage */\n    _delete: function _delete(model) {\n        return sessionStorage.removeItem(model.id);\n    },\n\n    /** T/F whether sessionStorage contains the model's id (data is present) */\n    isNew: function isNew() {\n        return !sessionStorage.hasOwnProperty(this.id);\n    },\n\n    _log: function _log() {\n        return JSON.stringify(this.toJSON(), null, \"  \");\n    },\n    toString: function toString() {\n        return \"SessionStorageModel(\" + this.id + \")\";\n    }\n});\n(function () {\n    SessionStorageModel.prototype = _.omit(SessionStorageModel.prototype, \"url\", \"urlRoot\");\n})();\n\n//==============================================================================\n/** Function that allows mixing of hashs into bbone MVC while showing the mixins first\n *      (before the more local class overrides/hash).\n *      Basically, a simple reversal of param order on _.defaults() - to show mixins in top of definition.\n *  @example:\n *      var NewModel = Something.extend( mixin( MyMixinA, MyMixinB, { ... myVars : ... }) );\n *\n *  NOTE: this does not combine any hashes (like events, etc.) and you're expected to handle that\n */\nfunction mixin(mixinHash1, /* mixinHash2, etc: ... variadic */propsHash) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    var lastArg = args.pop();\n    args.unshift(lastArg);\n    return _.defaults.apply(_, args);\n}\n\n//==============================================================================\n/** A mixin for models that allow T/F/Matching to their attributes - useful when\n *      searching or filtering collections of models.\n * @example:\n *      see hda-model for searchAttribute and searchAliases definition examples.\n *      see history-contents.matches for how collections are filtered\n *      and see readonly-history-view.searchHdas for how user input is connected to the filtering\n */\nvar SearchableModelMixin = {\n    /** what attributes of an HDA will be used in a text search */\n    searchAttributes: [\n        // override\n    ],\n\n    /** our attr keys don't often match the labels we display to the user - so, when using\n     *      attribute specifiers ('name=\"bler\"') in a term, allow passing in aliases for the\n     *      following attr keys.\n     */\n    searchAliases: {\n        // override\n    },\n\n    /** search the attribute with key attrKey for the string searchFor; T/F if found */\n    searchAttribute: function searchAttribute(attrKey, searchFor) {\n        var attrVal = this.get(attrKey);\n        //this.debug( 'searchAttribute', attrKey, attrVal, searchFor );\n        // bail if empty searchFor or unsearchable values\n        if (!searchFor || attrVal === undefined || attrVal === null) {\n            return false;\n        }\n        // pass to sep. fn for deep search of array attributes\n        if (_.isArray(attrVal)) {\n            return this._searchArrayAttribute(attrVal, searchFor);\n        }\n        return attrVal.toString().toLowerCase().indexOf(searchFor.toLowerCase()) !== -1;\n    },\n\n    /** deep(er) search for array attributes; T/F if found */\n    _searchArrayAttribute: function _searchArrayAttribute(array, searchFor) {\n        //this.debug( '_searchArrayAttribute', array, searchFor );\n        searchFor = searchFor.toLowerCase();\n        //precondition: searchFor has already been validated as non-empty string\n        //precondition: assumes only 1 level array\n        //TODO: could possibly break up searchFor more (CSV...)\n        return _.any(array, function (elem) {\n            return elem.toString().toLowerCase().indexOf(searchFor.toLowerCase()) !== -1;\n        });\n    },\n\n    /** search all searchAttributes for the string searchFor,\n     *      returning a list of keys of attributes that contain searchFor\n     */\n    search: function search(searchFor) {\n        var model = this;\n        return _.filter(this.searchAttributes, function (key) {\n            return model.searchAttribute(key, searchFor);\n        });\n    },\n\n    /** alias of search, but returns a boolean; accepts attribute specifiers where\n     *      the attributes searched can be narrowed to a single attribute using\n     *      the form: matches( 'genome_build=hg19' )\n     *      (the attribute keys allowed can also be aliases to the true attribute key;\n     *          see searchAliases above)\n     *  @param {String} term   plain text or ATTR_SPECIFIER sep. key=val pair\n     *  @returns {Boolean} was term found in (any) attribute(s)\n     */\n    matches: function matches(term) {\n        var ATTR_SPECIFIER = \"=\";\n        var split = term.split(ATTR_SPECIFIER);\n        // attribute is specified - search only that\n        if (split.length >= 2) {\n            var attrKey = split[0];\n            attrKey = this.searchAliases[attrKey] || attrKey;\n            return this.searchAttribute(attrKey, split[1]);\n        }\n        // no attribute is specified - search all attributes in searchAttributes\n        return !!this.search(term).length;\n    },\n\n    /** an implicit AND search for all terms; IOW, a model must match all terms given\n     *      where terms is a whitespace separated value string.\n     *      e.g. given terms of: 'blah bler database=hg19'\n     *          an HDA would have to have attributes containing blah AND bler AND a genome_build == hg19\n     *      To include whitespace in terms: wrap the term in double quotations (name=\"blah bler\").\n     */\n    matchesAll: function matchesAll(terms) {\n        var model = this;\n        // break the terms up by whitespace and filter out the empty strings\n        terms = terms.match(/(\".*\"|\\w*=\".*\"|\\S*)/g).filter(function (s) {\n            return !!s;\n        });\n        return _.all(terms, function (term) {\n            term = term.replace(/\"/g, \"\");\n            return model.matches(term);\n        });\n    }\n};\n\n//==============================================================================\n/** A view that renders hidden and shows when some activator is clicked.\n *      options:\n *          showFn: the effect used to show/hide the View (defaults to jq.toggle)\n *          $elementShown: some jqObject (defaults to this.$el) to be shown/hidden\n *          onShowFirstTime: fn called the first time the view is shown\n *          onshow: fn called every time the view is shown\n *          onhide: fn called every time the view is hidden\n *      events:\n *          hiddenUntilActivated:shown (the view is passed as an arg)\n *          hiddenUntilActivated:hidden (the view is passed as an arg)\n *      instance vars:\n *          view.hidden {boolean} is the view in the hidden state\n */\nvar HiddenUntilActivatedViewMixin = /** @lends hiddenUntilActivatedMixin# */{\n    //TODO: since this is a mixin, consider moving toggle, hidden into HUAVOptions\n\n    /** call this in your initialize to set up the mixin\n     *  @param {jQuery} $activator the 'button' that's clicked to show/hide the view\n     *  @param {Object} hash with mixin options\n     */\n    hiddenUntilActivated: function hiddenUntilActivated($activator, options) {\n        // call this in your view's initialize fn\n        options = options || {};\n        //TODO: flesh out options - show them all here\n        this.HUAVOptions = {\n            $elementShown: this.$el,\n            showFn: jQuery.prototype.toggle,\n            showSpeed: \"fast\"\n        };\n        _.extend(this.HUAVOptions, options || {});\n        /** has this been shown already (and onshowFirstTime called)? */\n        this.HUAVOptions.hasBeenShown = this.HUAVOptions.$elementShown.is(\":visible\");\n        this.hidden = this.isHidden();\n\n        if ($activator) {\n            var mixin = this;\n            $activator.on(\"click\", function (ev) {\n                mixin.toggle(mixin.HUAVOptions.showSpeed);\n            });\n        }\n    },\n\n    //TODO:?? remove? use .hidden?\n    /** returns T/F if the view is hidden */\n    isHidden: function isHidden() {\n        return this.HUAVOptions.$elementShown.is(\":hidden\");\n    },\n\n    /** toggle the hidden state, show/hide $elementShown, call onshow/hide, trigger events */\n    toggle: function toggle() {\n        //TODO: more specific name - toggle is too general\n        // can be called manually as well with normal toggle arguments\n        //TODO: better as a callback (when the show/hide is actually done)\n        // show\n        if (this.hidden) {\n            // fire the optional fns on the first/each showing - good for render()\n            if (!this.HUAVOptions.hasBeenShown) {\n                if (_.isFunction(this.HUAVOptions.onshowFirstTime)) {\n                    this.HUAVOptions.hasBeenShown = true;\n                    this.HUAVOptions.onshowFirstTime.call(this);\n                }\n            }\n            if (_.isFunction(this.HUAVOptions.onshow)) {\n                this.HUAVOptions.onshow.call(this);\n                this.trigger(\"hiddenUntilActivated:shown\", this);\n            }\n            this.hidden = false;\n\n            // hide\n        } else {\n            if (_.isFunction(this.HUAVOptions.onhide)) {\n                this.HUAVOptions.onhide.call(this);\n                this.trigger(\"hiddenUntilActivated:hidden\", this);\n            }\n            this.hidden = true;\n        }\n        return this.HUAVOptions.showFn.apply(this.HUAVOptions.$elementShown, arguments);\n    }\n};\n\n//==============================================================================\n/** Mixin for views that can be dragged and dropped\n *      Allows for the drag behavior to be turned on/off, setting/removing jQuery event\n *          handlers each time.\n *      dataTransfer data is set to the JSON string of the view's model.toJSON\n *      Override '$dragHandle' to define the draggable DOM sub-element.\n */\nvar DraggableViewMixin = {\n    /** set up instance vars to track whether this view is currently draggable */\n    initialize: function initialize(attributes) {\n        /** is the body of this hda view expanded/not? */\n        this.draggable = attributes.draggable || false;\n    },\n\n    /** what part of the view's DOM triggers the dragging */\n    $dragHandle: function $dragHandle() {\n        //TODO: make abstract/general - move this to listItem\n        // override to the element you want to be your view's handle\n        return this.$(\".title-bar\");\n    },\n\n    /** toggle whether this view is draggable */\n    toggleDraggable: function toggleDraggable() {\n        if (this.draggable) {\n            this.draggableOff();\n        } else {\n            this.draggableOn();\n        }\n    },\n\n    /** allow the view to be dragged, set up event handlers */\n    draggableOn: function draggableOn() {\n        this.draggable = true;\n        this.dragStartHandler = _.bind(this._dragStartHandler, this);\n        this.dragEndHandler = _.bind(this._dragEndHandler, this);\n\n        var handle = this.$dragHandle().attr(\"draggable\", true).get(0);\n        handle.addEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.addEventListener(\"dragend\", this.dragEndHandler, false);\n    },\n\n    /** turn of view dragging and remove event listeners */\n    draggableOff: function draggableOff() {\n        this.draggable = false;\n        var handle = this.$dragHandle().attr(\"draggable\", false).get(0);\n        handle.removeEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.removeEventListener(\"dragend\", this.dragEndHandler, false);\n    },\n\n    /** sets the dataTransfer data to the model's toJSON\n     *  @fires draggable:dragstart (bbone event) which is passed the event and this view\n     */\n    _dragStartHandler: function _dragStartHandler(event) {\n        event.dataTransfer.effectAllowed = \"move\";\n        //ASSUMES: this.model\n        //TODO: all except IE: should be 'application/json', IE: must be 'text'\n        event.dataTransfer.setData(\"text\", JSON.stringify(this.model.toJSON()));\n        this.trigger(\"draggable:dragstart\", event, this);\n        return false;\n    },\n\n    /** handle the dragend\n     *  @fires draggable:dragend (bbone event) which is passed the event and this view\n     */\n    _dragEndHandler: function _dragEndHandler(event) {\n        this.trigger(\"draggable:dragend\", event, this);\n        return false;\n    }\n};\n\n//==============================================================================\n/** Mixin that allows a view to be selected (gen. from a list).\n *      Selection controls ($selector) may be hidden/shown/toggled.\n *          The bbone event 'selectable' is fired when the controls are shown/hidden (passed T/F).\n *      Default rendering is a font-awesome checkbox.\n *      Default selector is '.selector' within the view's $el.\n *      The bbone events 'selected' and 'de-selected' are fired when the $selector is clicked.\n *          Both events are passed the view and the (jQuery) event.\n */\nvar SelectableViewMixin = {\n    /** Set up instance state vars for whether the selector is shown and whether the view has been selected */\n    initialize: function initialize(attributes) {\n        /** is the view currently in selection mode? */\n        this.selectable = attributes.selectable || false;\n        /** is the view currently selected? */\n        this.selected = attributes.selected || false;\n    },\n\n    /** $el sub-element where the selector is rendered and what can be clicked to select. */\n    $selector: function $selector() {\n        return this.$(\".selector\");\n    },\n\n    /** How the selector is rendered - defaults to font-awesome checkbox */\n    _renderSelected: function _renderSelected() {\n        // override\n        this.$selector().find(\"span\").toggleClass(\"fa-check-square-o\", this.selected).toggleClass(\"fa-square-o\", !this.selected);\n    },\n\n    /** Toggle whether the selector is shown */\n    toggleSelector: function toggleSelector() {\n        //TODO: use this.selectable\n        if (!this.$selector().is(\":visible\")) {\n            this.showSelector();\n        } else {\n            this.hideSelector();\n        }\n    },\n\n    /** Display the selector control.\n     *  @param {Number} a jQuery fx speed\n     *  @fires: selectable which is passed true (IOW, the selector is shown) and the view\n     */\n    showSelector: function showSelector(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        // make sure selected state is represented properly\n        this.selectable = true;\n        this.trigger(\"selectable\", true, this);\n        this._renderSelected();\n        if (speed) {\n            this.$selector().show(speed);\n        } else {\n            this.$selector().show();\n        }\n    },\n\n    /** remove the selector control\n     *  @param {Number} a jQuery fx speed\n     *  @fires: selectable which is passed false (IOW, the selector is not shown) and the view\n     */\n    hideSelector: function hideSelector(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        // reverse the process from showSelect\n        this.selectable = false;\n        this.trigger(\"selectable\", false, this);\n        if (speed) {\n            this.$selector().hide(speed);\n        } else {\n            this.$selector().hide();\n        }\n    },\n\n    /** Toggle whether the view is selected */\n    toggleSelect: function toggleSelect(event) {\n        if (this.selected) {\n            this.deselect(event);\n        } else {\n            this.select(event);\n        }\n    },\n\n    /** Select this view and re-render the selector control to show it\n     *  @param {Event} a jQuery event that caused the selection\n     *  @fires: selected which is passed the view and the DOM event that triggered it (optionally)\n     */\n    select: function select(event) {\n        // switch icon, set selected, and trigger event\n        if (!this.selected) {\n            this.trigger(\"selected\", this, event);\n            this.selected = true;\n            this._renderSelected();\n        }\n        return false;\n    },\n\n    /** De-select this view and re-render the selector control to show it\n     *  @param {Event} a jQuery event that caused the selection\n     *  @fires: de-selected which is passed the view and the DOM event that triggered it (optionally)\n     */\n    deselect: function deselect(event) {\n        // switch icon, set selected, and trigger event\n        if (this.selected) {\n            this.trigger(\"de-selected\", this, event);\n            this.selected = false;\n            this._renderSelected();\n        }\n        return false;\n    }\n};\n\n//==============================================================================\n/** Return an underscore template fn from an array of strings.\n *  @param {String[]} template      the template strings to compile into the underscore template fn\n *  @param {String} jsonNamespace   an optional namespace for the json data passed in (defaults to 'model')\n *  @returns {Function} the (wrapped) underscore template fn\n *      The function accepts:\n *\n *  The template strings can access:\n *      the json/model hash using model (\"<%- model.myAttr %>) using the jsonNamespace above\n *      _l: the localizer function\n *      view (if passed): ostensibly, the view using the template (handy for view instance vars)\n *      Because they're namespaced, undefined attributes will not throw an error.\n *\n *  @example:\n *      templateBler : BASE_MVC.wrapTemplate([\n *          '<div class=\"myclass <%- mynamespace.modelClass %>\">',\n *              '<span><% print( _l( mynamespace.message ) ); %>:<%= view.status %></span>'\n *          '</div>'\n *      ], 'mynamespace' )\n *\n *  Meant to be called in a View's definition in order to compile only once.\n *\n */\nfunction wrapTemplate(template, jsonNamespace) {\n    jsonNamespace = jsonNamespace || \"model\";\n    var templateFn = _.template(template.join(\"\"));\n    return function (json, view) {\n        var templateVars = { view: view || {}, _l: _localization2.default };\n        templateVars[jsonNamespace] = json || {};\n        return templateFn(templateVars);\n    };\n}\n\n//==============================================================================\n/** Return a comparator function for sorted Collections */\nfunction buildComparator(attribute_name, options) {\n    options = options || {};\n    var ascending = options.ascending ? 1 : -1;\n    return function __comparator(a, b) {\n        a = a.get(attribute_name);\n        b = b.get(attribute_name);\n        return (a < b ? -1 : a > b ? 1 : 0) * ascending;\n    };\n}\n\n//==============================================================================\nexports.default = {\n    LoggableMixin: LoggableMixin,\n    SessionStorageModel: SessionStorageModel,\n    mixin: mixin,\n    SearchableModelMixin: SearchableModelMixin,\n    HiddenUntilActivatedViewMixin: HiddenUntilActivatedViewMixin,\n    DraggableViewMixin: DraggableViewMixin,\n    SelectableViewMixin: SelectableViewMixin,\n    wrapTemplate: wrapTemplate,\n    buildComparator: buildComparator\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ })\n\n},[289]);\n\n\n// WEBPACK FOOTER //\n// library.bundled.js","// dependencies\nimport Utils from \"utils/utils\";\n/**\n * A plugin for initializing select2 input items.\n * Make sure the select2 library itself is loaded beforehand.\n * Also the element to which select2 will be appended has to\n * be created before select2 initialization (and passed as option).\n */\nvar View = Backbone.View.extend({\n    // options\n    optionsDefault: {\n        css: \"\",\n        placeholder: \"No data available\",\n        data: [],\n        value: null,\n        multiple: false,\n        minimumInputLength: 0,\n        // example format of initial data: \"id:name,55:anotherrole@role.com,27:role@role.com\"\n        initialData: \"\"\n    },\n\n    // initialize\n    initialize: function(options) {\n        // configure options\n        this.options = Utils.merge(options, this.optionsDefault);\n\n        // create new element\n        this.setElement(this._template(this.options));\n\n        // check if container exists\n        if (!this.options.container) {\n            console.log(\"ui-select::initialize() : container not specified.\");\n            return;\n        }\n\n        // add to dom\n        this.options.container.append(this.$el);\n\n        // link selection dictionary\n        this.select_data = this.options.data;\n\n        // refresh\n        this._refresh();\n\n        if (!this.options.multiple) {\n            // initial value\n            if (this.options.value) {\n                this._setValue(this.options.value);\n            }\n\n            // add change event\n            var self = this;\n            if (this.options.onchange) {\n                this.$el.on(\"change\", () => {\n                    self.options.onchange(self.value());\n                });\n            }\n        }\n    },\n\n    // value\n    value: function(new_value) {\n        // get current id/value\n        var before = this._getValue();\n\n        // check if new_value is defined\n        if (new_value !== undefined) {\n            this._setValue(new_value);\n        }\n\n        // get current id/value\n        var after = this._getValue();\n\n        // fire onchange\n        if (after != before && this.options.onchange) {\n            this.options.onchange(after);\n        }\n\n        // return current value\n        return after;\n    },\n\n    // label\n    text: function() {\n        return this.$el.select2(\"data\").text;\n    },\n\n    // disabled\n    disabled: function() {\n        return !this.$el.select2(\"enable\");\n    },\n\n    // enable\n    enable: function() {\n        this.$el.select2(\"enable\", true);\n    },\n\n    // disable\n    disable: function() {\n        this.$el.select2(\"enable\", false);\n    },\n\n    // add\n    add: function(options) {\n        // add options\n        this.select_data.push({\n            id: options.id,\n            text: options.text\n        });\n\n        // refresh\n        this._refresh();\n    },\n\n    // remove\n    del: function(id) {\n        // search option\n        var index = this._getIndex(id);\n\n        // check if found\n        if (index != -1) {\n            // remove options\n            this.select_data.splice(index, 1);\n\n            // refresh\n            this._refresh();\n        }\n    },\n\n    // remove\n    remove: function() {\n        this.$el.select2(\"destroy\");\n    },\n\n    // update\n    update: function(options) {\n        // copy options\n        this.select_data = [];\n        for (var key in options.data) {\n            this.select_data.push(options.data[key]);\n        }\n\n        // refresh\n        this._refresh();\n    },\n\n    // refresh\n    _refresh: function() {\n        // add select2 data based on type of input\n        if (!this.options.multiple) {\n            var selected = this._getValue();\n            var select_opt = {\n                data: this.select_data,\n                containerCssClass: this.options.css,\n                placeholder: this.options.placeholder,\n                dropdownAutoWidth: true\n            };\n            this.$el.select2(select_opt);\n            // select previous value (if exists)\n            this._setValue(selected);\n        } else {\n            var select_opt = {\n                multiple: this.options.multiple,\n                containerCssClass: this.options.css,\n                placeholder: this.options.placeholder,\n                minimumInputLength: this.options.minimumInputLength,\n                ajax: this.options.ajax,\n                dropdownCssClass: this.options.dropdownCssClass,\n                escapeMarkup: this.options.escapeMarkup,\n                formatResult: this.options.formatResult,\n                formatSelection: this.options.formatSelection,\n                initSelection: this.options.initSelection,\n                initialData: this.options.initialData\n            };\n            this.$el.select2(select_opt);\n        }\n    },\n\n    // get index\n    _getIndex: function(value) {\n        // returns the index of the searched value\n        _.findIndex(this.select_data, { id: value });\n    },\n\n    // get value\n    _getValue: function() {\n        return this.$el.select2(\"val\");\n    },\n\n    // set value\n    _setValue: function(new_value) {\n        var index = this._getIndex(new_value);\n        if (index == -1) {\n            if (this.select_data.length > 0) {\n                new_value = this.select_data[0].id;\n            }\n        }\n        this.$el.select2(\"val\", new_value);\n    },\n\n    // element\n    _template: function(options) {\n        return `<input type=\"hidden\" value=\"${this.options.initialData}\"/>`;\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select.js","import mod_util from \"mvc/library/library-util\";\n// ============================================================================\n// LIBRARY RELATED MODELS\n\nvar Library = Backbone.Model.extend({\n    urlRoot: `${Galaxy.root}api/libraries/`,\n\n    /** based on show_deleted would this lib show in the list of lib's?\n     *  @param {Boolean} show_deleted are we including deleted libraries?\n     */\n    isVisible: function(show_deleted) {\n        var isVisible = true;\n        if (!show_deleted && this.get(\"deleted\")) {\n            isVisible = false;\n        }\n        return isVisible;\n    }\n});\n\nvar Libraries = Backbone.Collection.extend({\n    urlRoot: `${Galaxy.root}api/libraries`,\n\n    model: Library,\n\n    initialize: function(options) {\n        options = options || {};\n    },\n\n    search: function(search_term) {\n        /**\n         * Search the collection and return only the models that have\n         * the search term in their names.\n         * [the term to search]\n         * @type {string}\n         */\n        if (search_term == \"\") return this;\n        var lowercase_term = search_term.toLowerCase();\n        return this.filter(data => {\n            var lowercase_name = data.get(\"name\").toLowerCase();\n            return lowercase_name.indexOf(lowercase_term) !== -1;\n        });\n    },\n\n    /** Get every 'shown' library in this collection based on deleted filter\n     *  @param {Boolean} show_deleted are we including deleted libraries?\n     *  @returns array of library models\n     */\n    getVisible: function(show_deleted, filters) {\n        filters = filters || [];\n        var filteredLibraries = new Libraries(this.filter(item => item.isVisible(show_deleted)));\n\n        return filteredLibraries;\n    },\n\n    sortLibraries: function(sort_key, sort_order) {\n        this.comparator = mod_util.generateLibraryComparator(sort_key, sort_order);\n        this.sort();\n    }\n});\n\n// ============================================================================\n// FOLDER RELATED MODELS\n\nvar LibraryItem = Backbone.Model.extend({});\n\nvar Ldda = LibraryItem.extend({\n    urlRoot: `${Galaxy.root}api/libraries/datasets/`\n});\n\nvar FolderAsModel = LibraryItem.extend({\n    urlRoot: `${Galaxy.root}api/folders/`\n});\n\nvar Folder = Backbone.Collection.extend({\n    model: LibraryItem,\n\n    sortFolder: function(sort_key, sort_order) {\n        this.comparator = mod_util.generateFolderComparator(sort_key, sort_order);\n        this.sort();\n    }\n});\n\nvar FolderContainer = Backbone.Model.extend({\n    defaults: {\n        folder: new Folder(),\n        urlRoot: `${Galaxy.root}api/folders/`,\n        id: \"unknown\"\n    },\n    parse: function(obj) {\n        // empty the collection\n        this.get(\"folder\").reset();\n        // response is not a simple array, it contains metadata\n        // this will update the inner collection\n        for (var i = 0; i < obj.folder_contents.length; i++) {\n            if (obj.folder_contents[i].type === \"folder\") {\n                var folder_item = new FolderAsModel(obj.folder_contents[i]);\n                this.get(\"folder\").add(folder_item);\n            } else if (obj.folder_contents[i].type === \"file\") {\n                var file_item = new Ldda(obj.folder_contents[i]);\n                this.get(\"folder\").add(file_item);\n            } else {\n                Galaxy.emit.error(\"Unknown folder item type encountered while parsing response.\");\n            }\n        }\n        return obj;\n    }\n});\n\n// ============================================================================\n// HISTORY RELATED MODELS\n// TODO UNITE\n\nvar HistoryItem = Backbone.Model.extend({\n    urlRoot: `${Galaxy.root}api/histories/`\n});\n\nvar HistoryContents = Backbone.Collection.extend({\n    urlRoot: `${Galaxy.root}api/histories/`,\n    initialize: function(options) {\n        this.id = options.id;\n    },\n    url: function() {\n        return `${this.urlRoot + this.id}/contents`;\n    },\n    model: HistoryItem\n});\n\nvar GalaxyHistory = Backbone.Model.extend({\n    urlRoot: `${Galaxy.root}api/histories/`\n});\n\nvar GalaxyHistories = Backbone.Collection.extend({\n    url: `${Galaxy.root}api/histories`,\n    model: GalaxyHistory\n});\n\n// ============================================================================\n// JSTREE MODEL\n/** Represents folder structure parsable by the jstree component.\n *\n */\n\nvar Jstree = Backbone.Model.extend({\n    urlRoot: `${Galaxy.root}api/remote_files`\n});\n\nexport default {\n    Library: Library,\n    Libraries: Libraries,\n    Item: Ldda,\n    Ldda: Ldda,\n    FolderAsModel: FolderAsModel,\n    Folder: Folder,\n    FolderContainer: FolderContainer,\n    HistoryItem: HistoryItem,\n    HistoryContents: HistoryContents,\n    GalaxyHistory: GalaxyHistory,\n    GalaxyHistories: GalaxyHistories,\n    Jstree: Jstree\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/library/library-model.js","import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_utils from \"utils/utils\";\nimport mod_select from \"mvc/ui/ui-select\";\nvar LibraryDatasetView = Backbone.View.extend({\n    el: \"#center\",\n\n    model: null,\n\n    options: {},\n\n    defaults: {\n        edit_mode: false\n    },\n\n    events: {\n        \"click .toolbtn_modify_dataset\": \"enableModification\",\n        \"click .toolbtn_cancel_modifications\": \"render\",\n        \"click .toolbtn-download-dataset\": \"downloadDataset\",\n        \"click .toolbtn-import-dataset\": \"importIntoHistory\",\n        \"click .copy-link-to-clipboard\": \"copyToClipboard\",\n        \"click .make-private\": \"makeDatasetPrivate\",\n        \"click .remove-restrictions\": \"removeDatasetRestrictions\",\n        \"click .toolbtn_save_permissions\": \"savePermissions\",\n        \"click .toolbtn_save_modifications\": \"saveModifications\"\n    },\n\n    // genome select\n    select_genome: null,\n\n    // extension select\n    select_extension: null,\n\n    // extension types\n    list_extensions: [],\n\n    // datatype placeholder for extension auto-detection\n    auto: {\n        id: \"auto\",\n        text: \"Auto-detect\",\n        description:\n            \"This system will try to detect the file type automatically.\" +\n            \" If your file is not detected properly as one of the known formats,\" +\n            \" it most likely means that it has some format problems (e.g., different\" +\n            \" number of columns on different rows). You can still coerce the system\" +\n            \" to set your data to the format you think it should be.\" +\n            \" You can also upload compressed files, which will automatically be decompressed.\"\n    },\n\n    // genomes\n    list_genomes: [],\n\n    initialize: function(options) {\n        this.options = _.extend(this.options, options);\n        this.fetchExtAndGenomes();\n        if (this.options.id) {\n            this.fetchDataset();\n        }\n    },\n\n    fetchDataset: function(options) {\n        this.options = _.extend(this.options, options);\n        this.model = new mod_library_model.Item({\n            id: this.options.id\n        });\n        var self = this;\n        this.model.fetch({\n            success: function() {\n                if (self.options.show_permissions) {\n                    self.showPermissions();\n                } else if (self.options.show_version) {\n                    self.fetchVersion();\n                } else {\n                    self.render();\n                }\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(`${response.responseJSON.err_msg} Click this to go back.`, \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    mod_toastr.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n        var template = this.templateDataset();\n        this.$el.html(template({ item: this.model }));\n        $(\".peek\").html(this.model.get(\"peek\"));\n        $(\"#center [data-toggle]\").tooltip();\n    },\n\n    fetchVersion: function(options) {\n        this.options = _.extend(this.options, options);\n        var self = this;\n        if (!this.options.ldda_id) {\n            this.render();\n            mod_toastr.error(\"Library dataset version requested but no id provided.\");\n        } else {\n            this.ldda = new mod_library_model.Ldda({\n                id: this.options.ldda_id\n            });\n            this.ldda.url = `${this.ldda.urlRoot + this.model.id}/versions/${this.ldda.id}`;\n            this.ldda.fetch({\n                success: function() {\n                    self.renderVersion();\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                }\n            });\n        }\n    },\n\n    renderVersion: function() {\n        $(\".tooltip\").remove();\n        var template = this.templateVersion();\n        this.$el.html(template({ item: this.model, ldda: this.ldda }));\n        $(\".peek\").html(this.ldda.get(\"peek\"));\n    },\n\n    enableModification: function() {\n        $(\".tooltip\").remove();\n        var template = this.templateModifyDataset();\n        this.$el.html(template({ item: this.model }));\n        this.renderSelectBoxes({\n            genome_build: this.model.get(\"genome_build\"),\n            file_ext: this.model.get(\"file_ext\")\n        });\n        $(\".peek\").html(this.model.get(\"peek\"));\n        $(\"#center [data-toggle]\").tooltip();\n    },\n\n    downloadDataset: function() {\n        var url = `${Galaxy.root}api/libraries/datasets/download/uncompressed`;\n        var data = { ld_ids: this.id };\n        this.processDownload(url, data);\n    },\n\n    processDownload: function(url, data, method) {\n        //url and data options required\n        if (url && data) {\n            //data can be string of parameters or array/object\n            data = typeof data == \"string\" ? data : $.param(data);\n            //split params into form inputs\n            var inputs = \"\";\n            $.each(data.split(\"&\"), function() {\n                var pair = this.split(\"=\");\n                inputs += `<input type=\"hidden\" name=\"${pair[0]}\" value=\"${pair[1]}\" />`;\n            });\n            //send request\n            $(`<form action=\"${url}\" method=\"${method || \"post\"}\">${inputs}</form>`)\n                .appendTo(\"body\")\n                .submit()\n                .remove();\n\n            mod_toastr.info(\"Your download will begin soon.\");\n        }\n    },\n\n    importIntoHistory: function() {\n        this.refreshUserHistoriesList(self => {\n            var template = self.templateBulkImportInModal();\n            self.modal = Galaxy.modal;\n            self.modal.show({\n                closing_events: true,\n                title: \"Import into History\",\n                body: template({ histories: self.histories.models }),\n                buttons: {\n                    Import: function() {\n                        self.importCurrentIntoHistory();\n                    },\n                    Close: function() {\n                        Galaxy.modal.hide();\n                    }\n                }\n            });\n        });\n    },\n\n    refreshUserHistoriesList: function(callback) {\n        var self = this;\n        this.histories = new mod_library_model.GalaxyHistories();\n        this.histories.fetch({\n            success: function(histories) {\n                if (histories.length === 0) {\n                    mod_toastr.warning(\"You have to create history first. Click this to do so.\", \"\", {\n                        onclick: function() {\n                            window.location = Galaxy.root;\n                        }\n                    });\n                } else {\n                    callback(self);\n                }\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(response.responseJSON.err_msg);\n                } else {\n                    mod_toastr.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    importCurrentIntoHistory: function() {\n        this.modal.disableButton(\"Import\");\n        var new_history_name = this.modal.$(\"input[name=history_name]\").val();\n        var self = this;\n        if (new_history_name !== \"\") {\n            $.post(`${Galaxy.root}api/histories`, {\n                name: new_history_name\n            })\n                .done(new_history => {\n                    self.processImportToHistory(new_history.id);\n                })\n                .fail((xhr, status, error) => {\n                    mod_toastr.error(\"An error occurred.\");\n                })\n                .always(() => {\n                    self.modal.enableButton(\"Import\");\n                });\n        } else {\n            var history_id = $(this.modal.$el)\n                .find(\"select[name=dataset_import_single] option:selected\")\n                .val();\n            this.processImportToHistory(history_id);\n            this.modal.enableButton(\"Import\");\n        }\n    },\n\n    processImportToHistory: function(history_id) {\n        var historyItem = new mod_library_model.HistoryItem();\n        historyItem.url = `${historyItem.urlRoot + history_id}/contents`;\n        // set the used history as current so user will see the last one\n        // that he imported into in the history panel on the 'analysis' page\n        jQuery.getJSON(`${Galaxy.root}history/set_as_current?id=${history_id}`);\n        // save the dataset into selected history\n        historyItem.save(\n            { content: this.id, source: \"library\" },\n            {\n                success: function() {\n                    Galaxy.modal.hide();\n                    mod_toastr.success(\"Dataset imported. Click this to start analyzing it.\", \"\", {\n                        onclick: function() {\n                            window.location = Galaxy.root;\n                        }\n                    });\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(`Dataset not imported. ${response.responseJSON.err_msg}`);\n                    } else {\n                        mod_toastr.error(\"An error occured. Dataset not imported. Please try again.\");\n                    }\n                }\n            }\n        );\n    },\n\n    showPermissions: function(options) {\n        var template = this.templateDatasetPermissions();\n        var self = this;\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n        if (this.options.fetched_permissions !== undefined) {\n            if (this.options.fetched_permissions.access_dataset_roles.length === 0) {\n                this.model.set({ is_unrestricted: true });\n            } else {\n                this.model.set({ is_unrestricted: false });\n            }\n        }\n        this.$el.html(\n            template({\n                item: this.model,\n                is_admin: Galaxy.config.is_admin_user\n            })\n        );\n        $.get(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?scope=current`)\n            .done(fetched_permissions => {\n                self.prepareSelectBoxes({\n                    fetched_permissions: fetched_permissions,\n                    is_admin: Galaxy.config.is_admin_user\n                });\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to fetch dataset permissions.\");\n            });\n        $(\"#center [data-toggle]\").tooltip();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    _serializeRoles: function(role_list) {\n        var selected_roles = [];\n        for (var i = 0; i < role_list.length; i++) {\n            // Replace the : and , in role's name since these are select2 separators for initialData\n            selected_roles.push(`${role_list[i][1]}:${role_list[i][0].replace(\":\", \" \").replace(\",\", \" &\")}`);\n        }\n        return selected_roles;\n    },\n\n    prepareSelectBoxes: function(options) {\n        this.options = _.extend(this.options, options);\n        this.accessSelectObject = new mod_select.View(\n            this._generate_select_options({\n                selector: \"access_perm\",\n                initialData: this._serializeRoles(this.options.fetched_permissions.access_dataset_roles)\n            })\n        );\n        this.modifySelectObject = new mod_select.View(\n            this._generate_select_options({\n                selector: \"modify_perm\",\n                initialData: this._serializeRoles(this.options.fetched_permissions.modify_item_roles)\n            })\n        );\n        this.manageSelectObject = new mod_select.View(\n            this._generate_select_options({\n                selector: \"manage_perm\",\n                initialData: this._serializeRoles(this.options.fetched_permissions.manage_dataset_roles)\n            })\n        );\n    },\n\n    _generate_select_options: function(options) {\n        var select_options = {\n            minimumInputLength: 0,\n            multiple: true,\n            placeholder: \"Click to select a role\",\n            formatResult: function roleFormatResult(role) {\n                return `${role.name} type: ${role.type}`;\n            },\n            formatSelection: function roleFormatSelection(role) {\n                return role.name;\n            },\n            initSelection: function(element, callback) {\n                // the input tag has a value attribute preloaded that points to a preselected role's id\n                // this function resolves that id attribute to an object that select2 can render\n                // using its formatResult renderer - that way the role name is shown preselected\n                var data = [];\n                $(element.val().split(\",\")).each(function() {\n                    var item = this.split(\":\");\n                    data.push({\n                        id: item[0],\n                        name: item[1]\n                    });\n                });\n                callback(data);\n            },\n            dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n        select_options.container = this.$el.find(`#${options.selector}`);\n        select_options.css = options.selector;\n        select_options.initialData = options.initialData.join(\",\");\n        select_options.ajax = {\n            url: `${Galaxy.root}api/libraries/datasets/${this.id}/permissions?scope=available`,\n            dataType: \"json\",\n            quietMillis: 100,\n            data: function(term, page) {\n                // page is the one-based page number tracked by Select2\n                return {\n                    q: term, //search term\n                    page_limit: 10, // page size, should be same as used in 'more' variable below\n                    page: page // page number\n                };\n            },\n            results: function(data, page) {\n                var more = page * 10 < data.total; // whether or not there are more results available\n                // notice we return the value of more so Select2 knows if more results can be loaded\n                return { results: data.roles, more: more };\n            }\n        };\n        return select_options;\n    },\n\n    /**\n     * Save the changes made to the library dataset.\n     */\n    saveModifications: function(options) {\n        var is_changed = false;\n        var ld = this.model;\n        var new_name = this.$el.find(\".input_dataset_name\").val();\n        if (typeof new_name !== \"undefined\" && new_name !== ld.get(\"name\")) {\n            if (new_name.length > 0) {\n                ld.set(\"name\", new_name);\n                is_changed = true;\n            } else {\n                mod_toastr.warning(\"Library dataset name has to be at least 1 character long.\");\n                return;\n            }\n        }\n        var new_info = this.$el.find(\".input_dataset_misc_info\").val();\n        if (typeof new_info !== \"undefined\" && new_info !== ld.get(\"misc_info\")) {\n            ld.set(\"misc_info\", new_info);\n            is_changed = true;\n        }\n        var new_genome_build = this.select_genome.$el.select2(\"data\").id;\n        if (typeof new_genome_build !== \"undefined\" && new_genome_build !== ld.get(\"genome_build\")) {\n            ld.set(\"genome_build\", new_genome_build);\n            is_changed = true;\n        }\n        var new_ext = this.select_extension.$el.select2(\"data\").id;\n        if (typeof new_ext !== \"undefined\" && new_ext !== ld.get(\"file_ext\")) {\n            ld.set(\"file_ext\", new_ext);\n            is_changed = true;\n        }\n        var dataset_view = this;\n        if (is_changed) {\n            ld.save(null, {\n                patch: true,\n                success: function(ld) {\n                    dataset_view.render();\n                    mod_toastr.success(\"Changes to library dataset saved.\");\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occured while attempting to update the library dataset.\");\n                    }\n                }\n            });\n        } else {\n            dataset_view.render();\n            mod_toastr.info(\"Nothing has changed.\");\n        }\n    },\n\n    copyToClipboard: function(e) {\n        e.preventDefault();\n        var href = Backbone.history.location.href;\n        if (href.lastIndexOf(\"/permissions\") !== -1) {\n            href = href.substr(0, href.lastIndexOf(\"/permissions\"));\n        }\n        window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", href);\n    },\n\n    makeDatasetPrivate: function() {\n        var self = this;\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=make_private`)\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: false });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"The dataset is now private to you.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to make dataset private.\");\n            });\n    },\n\n    removeDatasetRestrictions: function() {\n        var self = this;\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=remove_restrictions`)\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: true });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Access to this dataset is now unrestricted.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to make dataset unrestricted.\");\n            });\n    },\n\n    /**\n     * Extract the role ids from Select2 elements's 'data'\n     */\n    _extractIds: function(roles_list) {\n        var ids_list = [];\n        for (var i = roles_list.length - 1; i >= 0; i--) {\n            ids_list.push(roles_list[i].id);\n        }\n        return ids_list;\n    },\n\n    /**\n     * Save the permissions for roles entered in the select boxes.\n     */\n    savePermissions: function(event) {\n        var self = this;\n        var access_ids = this._extractIds(this.accessSelectObject.$el.select2(\"data\"));\n        var manage_ids = this._extractIds(this.manageSelectObject.$el.select2(\"data\"));\n        var modify_ids = this._extractIds(this.modifySelectObject.$el.select2(\"data\"));\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=set_permissions`, {\n            \"access_ids[]\": access_ids,\n            \"manage_ids[]\": manage_ids,\n            \"modify_ids[]\": modify_ids\n        })\n            .done(fetched_permissions => {\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Permissions saved.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to set dataset permissions.\");\n            });\n    },\n\n    /**\n     * If needed request all extensions and/or genomes from Galaxy\n     * and save them in sorted arrays.\n     */\n    fetchExtAndGenomes: function() {\n        var self = this;\n        if (this.list_genomes.length == 0) {\n            mod_utils.get({\n                url: `${Galaxy.root}api/datatypes?extension_only=False`,\n                success: function(datatypes) {\n                    for (var key in datatypes) {\n                        self.list_extensions.push({\n                            id: datatypes[key].extension,\n                            text: datatypes[key].extension,\n                            description: datatypes[key].description,\n                            description_url: datatypes[key].description_url\n                        });\n                    }\n                    self.list_extensions.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0));\n                    self.list_extensions.unshift(self.auto);\n                }\n            });\n        }\n        if (this.list_extensions.length == 0) {\n            mod_utils.get({\n                url: `${Galaxy.root}api/genomes`,\n                success: function(genomes) {\n                    for (var key in genomes) {\n                        self.list_genomes.push({\n                            id: genomes[key][1],\n                            text: genomes[key][0]\n                        });\n                    }\n                    self.list_genomes.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0));\n                }\n            });\n        }\n    },\n\n    renderSelectBoxes: function(options) {\n        // This won't work properly unlesss we already have the data fetched.\n        // See this.fetchExtAndGenomes()\n        // TODO switch to common resources:\n        // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n        var self = this;\n        var current_genome = \"?\";\n        var current_ext = \"auto\";\n        if (typeof options !== \"undefined\") {\n            if (typeof options.genome_build !== \"undefined\") {\n                current_genome = options.genome_build;\n            }\n            if (typeof options.file_ext !== \"undefined\") {\n                current_ext = options.file_ext;\n            }\n        }\n        this.select_genome = new mod_select.View({\n            css: \"dataset-genome-select\",\n            data: self.list_genomes,\n            container: self.$el.find(\"#dataset_genome_select\"),\n            value: current_genome\n        });\n        this.select_extension = new mod_select.View({\n            css: \"dataset-extension-select\",\n            data: self.list_extensions,\n            container: self.$el.find(\"#dataset_extension_select\"),\n            value: current_ext\n        });\n    },\n\n    templateDataset: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download dataset\" class=\"btn btn-default toolbtn-download-dataset primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-download\"></span>',\n                \"&nbsp;Download\",\n                \"</button>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import dataset into history\" class=\"btn btn-default toolbtn-import-dataset primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-book\"></span>',\n                \"&nbsp;to History\",\n                \"</button>\",\n                '<% if (item.get(\"can_user_modify\")) { %>',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify library item\" class=\"btn btn-default toolbtn_modify_dataset primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-pencil\"></span>',\n                \"&nbsp;Modify\",\n                \"</button>\",\n                \"<% } %>\",\n                '<% if (item.get(\"can_user_manage\")) { %>',\n                '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/permissions\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Manage permissions\" class=\"btn btn-default toolbtn_change_permissions primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-group\"></span>',\n                \"&nbsp;Permissions\",\n                \"</button>\",\n                \"</a>\",\n                \"<% } %>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<% if (item.get(\"is_unrestricted\")) { %>',\n                \"<div>\",\n                'This dataset is unrestricted so everybody with the link can access it. Just share <span class=\"copy-link-to-clipboard\"><a href=\"\"a>this page</a></span>.',\n                \"</div>\",\n                \"<% } %>\",\n\n                // TABLE START\n                '<div class=\"dataset_table\">',\n                '<table class=\"grid table table-striped table-condensed\">',\n                \"<tr>\",\n                '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                '<td><%= _.escape(item.get(\"name\")) %></td>',\n                \"</tr>\",\n                '<% if (item.get(\"file_ext\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data type</th>',\n                '<td><%= _.escape(item.get(\"file_ext\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"genome_build\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Genome build</th>',\n                '<td><%= _.escape(item.get(\"genome_build\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"file_size\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Size</th>',\n                '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"date_uploaded\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Date uploaded (UTC)</th>',\n                '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"uploaded_by\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Uploaded by</th>',\n                '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_data_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data Lines</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_comment_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Comment Lines</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_columns\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Number of Columns</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_column_types\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Column Types</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"message\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Message</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"misc_blurb\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Misc. blurb</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"misc_info\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Misc. info</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"misc_info\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"tags\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Tags</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if ( item.get(\"uuid\") !== \"ok\" ) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">UUID</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"uuid\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if ( item.get(\"state\") !== \"ok\" ) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">State</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"state\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"</table>\",\n\n                '<% if (item.get(\"job_stderr\")) { %>',\n                \"<h4>Job Standard Error</h4>\",\n                '<pre class=\"code\">',\n                '<%= _.escape(item.get(\"job_stderr\")) %>',\n                \"</pre>\",\n                \"<% } %>\",\n\n                '<% if (item.get(\"job_stdout\")) { %>',\n                \"<h4>Job Standard Output</h4>\",\n                '<pre class=\"code\">',\n                '<%= _.escape(item.get(\"job_stdout\")) %>',\n                \"</pre>\",\n                \"<% } %>\",\n\n                \"<div>\",\n                '<pre class=\"peek\">',\n                \"</pre>\",\n                \"</div>\",\n\n                '<% if (item.get(\"has_versions\")) { %>',\n                \"<div>\",\n                \"<h3>Expired versions:</h3>\",\n                \"<ul>\",\n                '<% _.each(item.get(\"expired_versions\"), function(version) { %>',\n                '<li><a title=\"See details of this version\" href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/versions/<%- version[0] %>\"><%- version[1] %></a></li>',\n                \"<% }) %>\",\n                \"<ul>\",\n                \"</div>\",\n                \"<% } %>\",\n                // TABLE END\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateVersion: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go to latest dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-caret-left fa-lg\"></span>',\n                \"&nbsp;Latest dataset\",\n                \"</button>\",\n                \"<a>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<div class=\"alert alert-warning\">This is an expired version of the library dataset: <%= _.escape(item.get(\"name\")) %></div>',\n                // DATASET START\n                '<div class=\"dataset_table\">',\n                '<table class=\"grid table table-striped table-condensed\">',\n                \"<tr>\",\n                '<th scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(ldda.id) %>\">Name</th>',\n                '<td><%= _.escape(ldda.get(\"name\")) %></td>',\n                \"</tr>\",\n                '<% if (ldda.get(\"file_ext\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data type</th>',\n                '<td><%= _.escape(ldda.get(\"file_ext\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"genome_build\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Genome build</th>',\n                '<td><%= _.escape(ldda.get(\"genome_build\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"file_size\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Size</th>',\n                '<td><%= _.escape(ldda.get(\"file_size\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"date_uploaded\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Date uploaded (UTC)</th>',\n                '<td><%= _.escape(ldda.get(\"date_uploaded\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"uploaded_by\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Uploaded by</th>',\n                '<td><%= _.escape(ldda.get(\"uploaded_by\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_data_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data Lines</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_data_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_comment_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Comment Lines</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_comment_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_columns\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Number of Columns</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_columns\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_column_types\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Column Types</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_column_types\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"message\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Message</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"message\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"misc_blurb\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Miscellaneous blurb</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_blurb\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"misc_info\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Miscellaneous information</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_info\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"tags\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Tags</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"</table>\",\n                \"<div>\",\n                '<pre class=\"peek\">',\n                \"</pre>\",\n                \"</div>\",\n                // DATASET END\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateModifyDataset: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Cancel modifications\" class=\"btn btn-default toolbtn_cancel_modifications primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-times\"></span>',\n                \"&nbsp;Cancel\",\n                \"</button>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_modifications primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-floppy-o\"></span>',\n                \"&nbsp;Save\",\n                \"</button>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<div class=\"dataset_table\">',\n                '<table class=\"grid table table-striped table-condensed\">',\n                \"<tr>\",\n                '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                '<td><input class=\"input_dataset_name form-control\" type=\"text\" placeholder=\"name\" value=\"<%= _.escape(item.get(\"name\")) %>\"></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Data type</th>',\n                \"<td>\",\n                '<span id=\"dataset_extension_select\" class=\"dataset-extension-select\" />',\n                \"</td>\",\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Genome build</th>',\n                \"<td>\",\n                '<span id=\"dataset_genome_select\" class=\"dataset-genome-select\" />',\n                \"</td>\",\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Size</th>',\n                '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Date uploaded (UTC)</th>',\n                '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Uploaded by</th>',\n                '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                \"</tr>\",\n                '<tr scope=\"row\">',\n                '<th scope=\"row\">Data Lines</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                \"</tr>\",\n                '<th scope=\"row\">Comment Lines</th>',\n                '<% if (item.get(\"metadata_comment_lines\") === \"\") { %>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                \"<% } else { %>\",\n                '<td scope=\"row\">unknown</td>',\n                \"<% } %>\",\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Number of Columns</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Column Types</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Message</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Misc. blurb</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Misc. information</th>',\n                '<td><input class=\"input_dataset_misc_info form-control\" type=\"text\" placeholder=\"info\" value=\"<%= _.escape(item.get(\"misc_info\")) %>\"></td>',\n                \"</tr>\",\n                //TODO: add functionality to modify tags here\n                '<% if (item.get(\"tags\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Tags</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"</table>\",\n                \"<div>\",\n                '<pre class=\"peek\">',\n                \"</pre>\",\n                \"</div>\",\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateDatasetPermissions: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-file-o\"></span>',\n                \"&nbsp;Dataset Details\",\n                \"</button>\",\n                \"<a>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<h1>Dataset: <%= _.escape(item.get(\"name\")) %></h1>',\n                '<div class=\"alert alert-warning\">',\n                \"<% if (is_admin) { %>\",\n                \"You are logged in as an <strong>administrator</strong> therefore you can manage any dataset on this Galaxy instance. Please make sure you understand the consequences.\",\n                \"<% } else { %>\",\n                \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                \"<% } %>\",\n                \"</div>\",\n                '<div class=\"dataset_table\">',\n                \"<h2>Library-related permissions</h2>\",\n                \"<h4>Roles that can modify the library item</h4>\",\n                '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"></div>',\n                '<div class=\"alert alert-info roles-selection\">User with <strong>any</strong> of these roles can modify name, metadata, and other information about this library item.</div>',\n                \"<hr/>\",\n                \"<h2>Dataset-related permissions</h2>\",\n                '<div class=\"alert alert-warning\">Changes made below will affect <strong>every</strong> library item that was created from this dataset and also every history this dataset is part of.</div>',\n                '<% if (!item.get(\"is_unrestricted\")) { %>',\n                '<p>You can <span class=\"remove-restrictions\"><a href=\"\">remove all access restrictions</a></span> on this dataset.</p>',\n                \"<% } else { %>\",\n                '<p>You can <span class=\"make-private\"><a href=\"\">make this dataset private</a></span> to you.</p>',\n                \"<% } %>\",\n                \"<h4>Roles that can access the dataset</h4>\",\n                '<div id=\"access_perm\" class=\"access_perm roles-selection\"></div>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User has to have <strong>all these roles</strong> in order to access this dataset.\",\n                \" Users without access permission <strong>cannot</strong> have other permissions on this dataset.\",\n                \" If there are no access roles set on the dataset it is considered <strong>unrestricted</strong>.\",\n                \"</div>\",\n                \"<h4>Roles that can manage permissions on the dataset</h4>\",\n                '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"></div>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can manage permissions of this dataset. If you remove yourself you will lose the ability manage this dataset unless you are an admin.\",\n                \"</div>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                '<span class=\"fa fa-floppy-o\"></span>',\n                \"&nbsp;Save\",\n                \"</button>\",\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateBulkImportInModal: function() {\n        return _.template(\n            [\n                \"<div>\",\n                '<div class=\"library-modal-item\">',\n                \"Select history: \",\n                '<select id=\"dataset_import_single\" name=\"dataset_import_single\" style=\"width:50%; margin-bottom: 1em; \" autofocus>',\n                \"<% _.each(histories, function(history) { %>\",\n                '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n                \"<% }); %>\",\n                \"</select>\",\n                \"</div>\",\n                '<div class=\"library-modal-item\">',\n                \"or create new: \",\n                '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">',\n                \"</input>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    LibraryDatasetView: LibraryDatasetView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/library/library-dataset-view.js","import GalaxyLibrary from \"galaxy.library\";\n\nexport function tracksterApp(options) {\n    new GalaxyLibrary.GalaxyApp(options);\n}\n\nwindow.libraryApp = tracksterApp;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/library.js","// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n// === MAIN GALAXY LIBRARY MODULE ====\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n\nimport mod_utils from \"utils/utils\";\nimport mod_toastr from \"libs/toastr\";\nimport mod_baseMVC from \"mvc/base-mvc\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_folderlist_view from \"mvc/library/library-folderlist-view\";\nimport mod_librarylist_view from \"mvc/library/library-librarylist-view\";\nimport mod_librarytoolbar_view from \"mvc/library/library-librarytoolbar-view\";\nimport mod_foldertoolbar_view from \"mvc/library/library-foldertoolbar-view\";\nimport mod_library_dataset_view from \"mvc/library/library-dataset-view\";\nimport mod_library_library_view from \"mvc/library/library-library-view\";\nimport mod_library_folder_view from \"mvc/library/library-folder-view\";\n// ============================================================================\n/**\n * The Data Libraries router. Takes care about triggering routes\n * and sends users to proper pieces of the application.\n */\nvar LibraryRouter = Backbone.Router.extend({\n    initialize: function() {\n        this.routesHit = 0;\n        // keep count of number of routes handled by the application\n        Backbone.history.on(\n            \"route\",\n            function() {\n                this.routesHit++;\n            },\n            this\n        );\n\n        this.bind(\"route\", this.trackPageview);\n    },\n\n    routes: {\n        \"\": \"libraries\",\n        \"page/:show_page\": \"libraries_page\",\n        \"library/:library_id/permissions\": \"library_permissions\",\n        \"folders/:folder_id/permissions\": \"folder_permissions\",\n        \"folders/:id\": \"folder_content\",\n        \"folders/:id/page/:show_page\": \"folder_page\",\n        \"folders/:folder_id/datasets/:dataset_id\": \"dataset_detail\",\n        \"folders/:folder_id/datasets/:dataset_id/permissions\": \"dataset_permissions\",\n        \"folders/:folder_id/datasets/:dataset_id/versions/:ldda_id\": \"dataset_version\",\n        \"folders/:folder_id/download/:format\": \"download\",\n        \"folders/:folder_id/import/:source\": \"import_datasets\"\n    },\n\n    /**\n     * If more than one route has been hit the user did not land on current\n     * page directly so we can go back safely. Otherwise go to the home page.\n     * Use replaceState if available so the navigation doesn't create an\n     * extra history entry\n     */\n    back: function() {\n        if (this.routesHit > 1) {\n            window.history.back();\n        } else {\n            this.navigate(\"#\", { trigger: true, replace: true });\n        }\n    },\n\n    /**\n     * Track every route change as a page view in Google Analytics.\n     */\n    trackPageview: function() {\n        var url = Backbone.history.getFragment();\n        //prepend slash\n        if (!/^\\//.test(url) && url != \"\") {\n            url = `/${url}`;\n        }\n        if (typeof ga !== \"undefined\") {\n            ga(\"send\", \"pageview\", `${Galaxy.root}library/list${url}`);\n        }\n    }\n});\n\n// ============================================================================\n/** session storage for library preferences */\nvar LibraryPrefs = mod_baseMVC.SessionStorageModel.extend({\n    defaults: {\n        with_deleted: false,\n        without_restricted: false,\n        sort_order: \"asc\",\n        sort_by: \"name\",\n        library_page_size: 20,\n        folder_page_size: 15\n    }\n});\n\n// ============================================================================\n/**\n * Main view of the Galaxy Data Libraries. Stores pointers to other subviews\n * and defines what router should do on the route triggers.\n */\nvar GalaxyLibrary = Backbone.View.extend({\n    libraryToolbarView: null,\n    libraryListView: null,\n    library_router: null,\n    libraryView: null,\n    folderToolbarView: null,\n    folderListView: null,\n    datasetView: null,\n\n    initialize: function() {\n        // This should go upstream in the js app once available\n        if (window.Galaxy.config.ga_code) {\n            ((i, s, o, g, r, a, m) => {\n                i[\"GoogleAnalyticsObject\"] = r;\n                (i[r] =\n                    i[r] ||\n                    function() {\n                        (i[r].q = i[r].q || []).push(arguments);\n                    }),\n                    (i[r].l = 1 * new Date());\n                (a = s.createElement(o)), (m = s.getElementsByTagName(o)[0]);\n                a.async = 1;\n                a.src = g;\n                m.parentNode.insertBefore(a, m);\n            })(window, document, \"script\", \"//www.google-analytics.com/analytics.js\", \"ga\");\n            ga(\"create\", window.Galaxy.config.ga_code, \"auto\");\n            ga(\"send\", \"pageview\");\n        }\n\n        Galaxy.libraries = this;\n\n        this.preferences = new LibraryPrefs({ id: \"global-lib-prefs\" });\n\n        this.library_router = new LibraryRouter();\n\n        this.library_router.on(\"route:libraries\", () => {\n            if (Galaxy.libraries.libraryToolbarView) {\n                Galaxy.libraries.libraryToolbarView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.libraryToolbarView = new mod_librarytoolbar_view.LibraryToolbarView();\n            Galaxy.libraries.libraryListView = new mod_librarylist_view.LibraryListView();\n        });\n\n        this.library_router.on(\"route:libraries_page\", show_page => {\n            if (Galaxy.libraries.libraryToolbarView === null) {\n                Galaxy.libraries.libraryToolbarView = new mod_librarytoolbar_view.LibraryToolbarView();\n                Galaxy.libraries.libraryListView = new mod_librarylist_view.LibraryListView({ show_page: show_page });\n            } else {\n                Galaxy.libraries.libraryListView.render({\n                    show_page: show_page\n                });\n            }\n        });\n\n        this.library_router.on(\"route:folder_content\", id => {\n            if (Galaxy.libraries.folderToolbarView) {\n                Galaxy.libraries.folderToolbarView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.folderToolbarView = new mod_foldertoolbar_view.FolderToolbarView({ id: id });\n            Galaxy.libraries.folderListView = new mod_folderlist_view.FolderListView({ id: id });\n        });\n\n        this.library_router.on(\"route:folder_page\", (id, show_page) => {\n            if (Galaxy.libraries.folderToolbarView === null) {\n                Galaxy.libraries.folderToolbarView = new mod_foldertoolbar_view.FolderToolbarView({ id: id });\n                Galaxy.libraries.folderListView = new mod_folderlist_view.FolderListView({\n                    id: id,\n                    show_page: show_page\n                });\n            } else {\n                Galaxy.libraries.folderListView.render({\n                    id: id,\n                    show_page: parseInt(show_page)\n                });\n            }\n        });\n\n        this.library_router.on(\"route:download\", (folder_id, format) => {\n            if ($(\"#folder_list_body\").find(\":checked\").length === 0) {\n                mod_toastr.info(\"You must select at least one dataset to download\");\n                Galaxy.libraries.library_router.navigate(`folders/${folder_id}`, { trigger: true, replace: true });\n            } else {\n                Galaxy.libraries.folderToolbarView.download(folder_id, format);\n                Galaxy.libraries.library_router.navigate(`folders/${folder_id}`, { trigger: false, replace: true });\n            }\n        });\n\n        this.library_router.on(\"route:dataset_detail\", (folder_id, dataset_id) => {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({\n                id: dataset_id,\n                show_version: false,\n                show_permissions: false\n            });\n        });\n\n        this.library_router.on(\"route:dataset_version\", (folder_id, dataset_id, ldda_id) => {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({\n                id: dataset_id,\n                ldda_id: ldda_id,\n                show_version: true\n            });\n        });\n\n        this.library_router.on(\"route:dataset_permissions\", (folder_id, dataset_id) => {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({\n                id: dataset_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:library_permissions\", library_id => {\n            if (Galaxy.libraries.libraryView) {\n                Galaxy.libraries.libraryView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.libraryView = new mod_library_library_view.LibraryView({\n                id: library_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:folder_permissions\", folder_id => {\n            if (Galaxy.libraries.folderView) {\n                Galaxy.libraries.folderView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.folderView = new mod_library_folder_view.FolderView({\n                id: folder_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:import_datasets\", (folder_id, source) => {\n            if (Galaxy.libraries.folderToolbarView && Galaxy.libraries.folderListView) {\n                Galaxy.libraries.folderToolbarView.showImportModal({\n                    source: source\n                });\n            } else {\n                Galaxy.libraries.folderToolbarView = new mod_foldertoolbar_view.FolderToolbarView({ id: folder_id });\n                Galaxy.libraries.folderListView = new mod_folderlist_view.FolderListView({ id: folder_id });\n                Galaxy.libraries.folderToolbarView.showImportModal({\n                    source: source\n                });\n            }\n        });\n\n        Backbone.history.start({ pushState: false });\n    }\n});\n\nexport default {\n    GalaxyApp: GalaxyLibrary\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/galaxy.library.js","/**\n * Create alphabetical based two-argument comparator\n * that takes into account that Folder comes before Dataset.\n * If sort_key is not present it is set to ''.\n * @param  {str} sort_key   key to sort by\n * @param  {str} sort_order order to sort by (asc, desc)\n * @return {function} two-argument comparator function\n */\nvar generateFolderComparator = (sort_key, sort_order) => (itemA, itemB) => {\n    if (itemA.get(\"type\") === itemB.get(\"type\")) {\n        if (!itemA.has(sort_key) && !itemB.has(sort_key)) {\n            return 0;\n        } else if (!itemA.has(sort_key)) {\n            return 1;\n        } else if (!itemB.has(sort_key)) {\n            return -1;\n        }\n        if (itemA.get(sort_key).toLowerCase() > itemB.get(sort_key).toLowerCase()) {\n            return sort_order === \"asc\" ? 1 : -1;\n        }\n        if (itemB.get(sort_key).toLowerCase() > itemA.get(sort_key).toLowerCase()) {\n            return sort_order === \"asc\" ? -1 : 1;\n        }\n        return 0; // equal\n    } else {\n        if (itemA.get(\"type\") === \"folder\") {\n            return -1; // folder is always before dataset\n        }\n        return 1;\n    }\n};\n/**\n * Create alphabetical based two-argument comparator\n * @param  {str} sort_key   key to sort by\n * @param  {str} sort_order order to sort by (asc, desc)\n * @return {function} two-argument comparator function\n */\nvar generateLibraryComparator = (sort_key, sort_order) => (libraryA, libraryB) => {\n    if (libraryA.get(sort_key).toLowerCase() > libraryB.get(sort_key).toLowerCase()) {\n        return sort_order === \"asc\" ? 1 : -1;\n    }\n    if (libraryB.get(sort_key).toLowerCase() > libraryA.get(sort_key).toLowerCase()) {\n        return sort_order === \"asc\" ? -1 : 1;\n    }\n    return 0; // equal\n};\nexport default {\n    generateFolderComparator: generateFolderComparator,\n    generateLibraryComparator: generateLibraryComparator\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/library/library-util.js","import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_library_folderrow_view from \"mvc/library/library-folderrow-view\";\n\nvar FolderListView = Backbone.View.extend({\n    el: \"#folder_items_element\",\n    // progress percentage\n    progress: 0,\n    // progress rate per one item\n    progressStep: 1,\n\n    folderContainer: null,\n\n    current_sort_order: \"asc\",\n\n    current_sort_key: \"name\",\n\n    events: {\n        \"click #select-all-checkboxes\": \"selectAll\",\n        \"click .dataset_row\": \"selectClickedRow\",\n        \"click .folder_row\": \"selectClickedRow\",\n        \"click .sort-folder-name\": \"sortColumnClicked\",\n        \"click .sort-folder-file_ext\": \"sortColumnClicked\",\n        \"click .sort-folder-description\": \"sortColumnClicked\",\n        \"click .sort-folder-state\": \"sortColumnClicked\"\n    },\n\n    collection: null,\n\n    defaults: {\n        include_deleted: false,\n        page_count: null,\n        show_page: null\n    },\n\n    /**\n     * Initialize and fetch the folder from the server.\n     * @param  {object} options an object with options\n     */\n    initialize: function(options) {\n        this.options = _.defaults(this.options || {}, this.defaults, options);\n        this.modal = null;\n        // map of folder item ids to item views = cache\n        this.rowViews = {};\n\n        // create a collection of folder items for this view\n        this.collection = new mod_library_model.Folder();\n\n        // start to listen if someone modifies the collection\n        this.listenTo(this.collection, \"add\", this.renderOne);\n        this.listenTo(this.collection, \"remove\", this.removeOne);\n        this.listenTo(this.collection, \"sort\", this.rePaint);\n        this.listenTo(this.collection, \"reset\", this.rePaint);\n\n        this.fetchFolder();\n    },\n\n    fetchFolder: function(options) {\n        var options = options || {};\n        this.options.include_deleted = options.include_deleted;\n        var self = this;\n\n        this.folderContainer = new mod_library_model.FolderContainer({\n            id: this.options.id\n        });\n        this.folderContainer.url = `${this.folderContainer.attributes.urlRoot + this.options.id}/contents`;\n\n        if (this.options.include_deleted) {\n            this.folderContainer.url = `${this.folderContainer.url}?include_deleted=true`;\n        }\n        this.folderContainer.fetch({\n            success: function(folder_container) {\n                self.folder_container = folder_container;\n                self.render();\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(`${response.responseJSON.err_msg} Click this to go back.`, \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    mod_toastr.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        var template = this.templateFolder();\n        $(\".tooltip\").hide();\n\n        // find the upper id in the full path\n        var path = this.folderContainer.attributes.metadata.full_path;\n        var upper_folder_id;\n        if (path.length === 1) {\n            // the library is above us\n            upper_folder_id = 0;\n        } else {\n            upper_folder_id = path[path.length - 2][0];\n        }\n\n        this.$el.html(\n            template({\n                path: this.folderContainer.attributes.metadata.full_path,\n                parent_library_id: this.folderContainer.attributes.metadata.parent_library_id,\n                id: this.options.id,\n                upper_folder_id: upper_folder_id,\n                order: this.current_sort_order\n            })\n        );\n\n        // when dataset_id is present render its details too\n        if (this.options.dataset_id) {\n            var row = _.findWhere(self.rowViews, {\n                id: this.options.dataset_id\n            });\n            if (row) {\n                row.showDatasetDetails();\n            } else {\n                mod_toastr.error(\"Requested dataset not found. Showing folder instead.\");\n            }\n        } else {\n            if (this.options.show_page === null || this.options.show_page < 1) {\n                this.options.show_page = 1;\n            }\n            this.paginate();\n        }\n        $(\"#center [data-toggle]\").tooltip();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    paginate: function(options) {\n        this.options = _.extend(this.options, options);\n\n        if (this.options.show_page === null || this.options.show_page < 1) {\n            this.options.show_page = 1;\n        }\n        this.options.total_items_count = this.folder_container.get(\"folder\").models.length;\n        this.options.page_count = Math.ceil(\n            this.options.total_items_count / Galaxy.libraries.preferences.get(\"folder_page_size\")\n        );\n        var page_start = Galaxy.libraries.preferences.get(\"folder_page_size\") * (this.options.show_page - 1);\n        var items_to_render = null;\n        items_to_render = this.folder_container\n            .get(\"folder\")\n            .models.slice(page_start, page_start + Galaxy.libraries.preferences.get(\"folder_page_size\"));\n        this.options.items_shown = items_to_render.length;\n        // User requests page with no items\n        if (\n            Galaxy.libraries.preferences.get(\"folder_page_size\") * this.options.show_page >\n            this.options.total_items_count + Galaxy.libraries.preferences.get(\"folder_page_size\")\n        ) {\n            items_to_render = [];\n        }\n        Galaxy.libraries.folderToolbarView.renderPaginator(this.options);\n        this.collection.reset(items_to_render);\n    },\n\n    rePaint: function(options) {\n        this.options = _.extend(this.options, options);\n        this.removeAllRows();\n        this.renderAll();\n        this.checkEmptiness();\n    },\n\n    /**\n     * Adds all given models to the collection.\n     * @param {array of Item or FolderAsModel} array of models that should\n     *  be added to the view's collection.\n     */\n    addAll: function(models) {\n        _.each(models, model => {\n            Galaxy.libraries.folderListView.collection.add(model, {\n                current_sort_order: false\n            });\n        });\n        $(\"#center [data-toggle]\").tooltip();\n        this.checkEmptiness();\n        this.postRender();\n    },\n\n    /**\n     * Call this after all models are added to the collection\n     * to ensure that the folder toolbar will show proper options\n     * and that event will be bound on all subviews.\n     */\n    postRender: function() {\n        var fetched_metadata = this.folderContainer.attributes.metadata;\n        fetched_metadata.contains_file_or_folder =\n            typeof this.collection.findWhere({ type: \"file\" }) !== \"undefined\" ||\n            typeof this.collection.findWhere({ type: \"folder\" }) !== \"undefined\";\n        Galaxy.libraries.folderToolbarView.configureElements(fetched_metadata);\n    },\n\n    /**\n     * Iterates this view's collection and calls the render\n     * function for each. Also binds the hover behavior.\n     */\n    renderAll: function() {\n        var self = this;\n        _.each(this.collection.models.reverse(), model => {\n            self.renderOne(model);\n        });\n        this.postRender();\n    },\n\n    /**\n     * Creates a view for the given model and adds it to the folder view.\n     * @param {Item or FolderAsModel} model of the view that will be rendered\n     */\n    renderOne: function(model) {\n        this.options.contains_file_or_folder = true;\n        //if (model.get('type') !== 'folder'){\n        // model.set('readable_size', this.size_to_string(model.get('file_size')));\n        //}\n        model.set(\"folder_id\", this.id);\n        var rowView = new mod_library_folderrow_view.FolderRowView({\n            model: model\n        });\n\n        // save new rowView to cache\n        this.rowViews[model.get(\"id\")] = rowView;\n\n        this.$el.find(\"#first_folder_item\").after(rowView.el);\n    },\n\n    /**\n     * Remove the view of the given model from the DOM.\n     * @param {Item or FolderAsModel} model of the view that will be removed\n     */\n    removeOne: function(model) {\n        this.$el\n            .find(\"tr\")\n            .filter(function() {\n                return $(this).data(\"id\") && $(this).data(\"id\") === model.id;\n            })\n            .remove();\n    },\n\n    /**\n     * Remove all dataset and folder row elements from the DOM.\n     */\n    removeAllRows: function() {\n        $(\".library-row\").remove();\n    },\n\n    /** Checks whether the list is empty and adds/removes the message */\n    checkEmptiness: function() {\n        if (this.$el.find(\".dataset_row\").length === 0 && this.$el.find(\".folder_row\").length === 0) {\n            this.$el.find(\".empty-folder-message\").show();\n        } else {\n            this.$el.find(\".empty-folder-message\").hide();\n        }\n    },\n\n    sortColumnClicked: function(event) {\n        event.preventDefault();\n        this.current_sort_order = this.current_sort_order === \"asc\" ? \"desc\" : \"asc\";\n        this.current_sort_key = event.currentTarget.className.replace(\"sort-folder-\", \"\");\n        this.collection.sortFolder(this.current_sort_key, this.current_sort_order);\n        this.renderSortIcon();\n    },\n\n    /**\n     * User clicked the checkbox in the table heading\n     * @param  {context} event\n     */\n    selectAll: function(event) {\n        var selected = event.target.checked;\n        var self = this;\n        // Iterate each checkbox\n        $(\":checkbox\", \"#folder_list_body\").each(function() {\n            this.checked = selected;\n            var $row = $(this).closest(\"tr\");\n            // Change color of selected/unselected\n            if (selected) {\n                self.makeDarkRow($row);\n            } else {\n                self.makeWhiteRow($row);\n            }\n        });\n    },\n\n    /**\n     * Check checkbox if user clicks on the whole row or\n     *  on the checkbox itself\n     */\n    selectClickedRow: function(event) {\n        var checkbox = \"\";\n        var $row;\n        var source;\n        $row = $(event.target).closest(\"tr\");\n        if (event.target.localName === \"input\") {\n            checkbox = event.target;\n            source = \"input\";\n        } else if (event.target.localName === \"td\") {\n            checkbox = $row.find(\":checkbox\")[0];\n            source = \"td\";\n        }\n        if (checkbox.checked) {\n            if (source === \"td\") {\n                checkbox.checked = \"\";\n                this.makeWhiteRow($row);\n            } else if (source === \"input\") {\n                this.makeDarkRow($row);\n            }\n        } else {\n            if (source === \"td\") {\n                checkbox.checked = \"selected\";\n                this.makeDarkRow($row);\n            } else if (source === \"input\") {\n                this.makeWhiteRow($row);\n            }\n        }\n    },\n\n    makeDarkRow: function($row) {\n        $row.removeClass(\"light\").addClass(\"dark\");\n        $row\n            .find(\"a\")\n            .removeClass(\"light\")\n            .addClass(\"dark\");\n        $row\n            .find(\".fa-file-o\")\n            .removeClass(\"fa-file-o\")\n            .addClass(\"fa-file\");\n        $row\n            .find(\".fa-folder-o\")\n            .removeClass(\"fa-folder-o\")\n            .addClass(\"fa-folder\");\n    },\n\n    makeWhiteRow: function($row) {\n        $row.removeClass(\"dark\").addClass(\"light\");\n        $row\n            .find(\"a\")\n            .removeClass(\"dark\")\n            .addClass(\"light\");\n        $row\n            .find(\".fa-file\")\n            .removeClass(\"fa-file\")\n            .addClass(\"fa-file-o\");\n        $row\n            .find(\".fa-folder\")\n            .removeClass(\"fa-folder\")\n            .addClass(\"fa-folder-o\");\n    },\n\n    renderSortIcon: function() {\n        if (this.current_sort_order === \"asc\") {\n            $('[class*=\"sort-icon\"]')\n                .removeClass(\"fa-sort-alpha-desc\")\n                .removeClass(\"fa-sort-alpha-asc\");\n            $(`.sort-icon-${this.current_sort_key}`).addClass(\"fa-sort-alpha-asc\");\n        } else {\n            $(`.sort-icon-${this.current_sort_key}`).addClass(\"fa-sort-alpha-desc\");\n        }\n    },\n\n    templateFolder: function() {\n        return _.template(\n            [\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                \"<% _.each(path, function(path_item) { %>\",\n                \"<% if (path_item[0] != id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are in this folder\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                // FOLDER CONTENT\n                '<table data-library-id=\"<%- parent_library_id  %>\" class=\"grid table table-condensed\">',\n                \"<thead>\",\n                '<th class=\"button_heading\"></th>',\n                '<th style=\"text-align: center; width: 20px; \" title=\"Check to select all datasets\"><input id=\"select-all-checkboxes\" style=\"margin: 0;\" type=\"checkbox\"></th>',\n                '<th><a class=\"sort-folder-name\" title=\"Click to reverse order\" href=\"#\">name</a> <span title=\"Sorted alphabetically\" class=\"sort-icon-name fa fa-sort-alpha-<%- order %>\"></span></th>',\n                '<th style=\"width:20%;\"><a class=\"sort-folder-description\" title=\"Click to reverse order\" href=\"#\">description</a> <span title=\"Sorted alphabetically\" class=\"sort-icon-description fa\"></span></th>',\n                '<th style=\"width:5%;\"><a class=\"sort-folder-file_ext\" title=\"Click to reverse order\" href=\"#\">data type</a> <span title=\"Sorted alphabetically\" class=\"sort-icon-file_ext fa\"></span></th>',\n                '<th style=\"width:10%;\">size</th>',\n                '<th style=\"width:160px;\">time updated (UTC)</th>',\n                '<th style=\"width:5%;\"><a class=\"sort-folder-state\" title=\"Click to reverse order\" href=\"#\">state</a> <span title=\"Sorted alphabetically\" class=\"sort-icon-state fa\"></span></th>',\n                '<th style=\"width:150px;\"></th> ',\n                \"</thead>\",\n                '<tbody id=\"folder_list_body\">',\n                '<tr id=\"first_folder_item\">',\n                \"<td>\",\n                '<a href=\"#<% if (upper_folder_id !== 0){ print(\"folders/\" + upper_folder_id)} %>\" title=\"Go to parent folder\" class=\"btn_open_folder btn btn-default btn-xs\">..<a>',\n                \"</td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"<td></td>\",\n                \"</tr>\",\n                \"</tbody>\",\n                \"</table>\",\n                '<div class=\"empty-folder-message\" style=\"display:none;\">',\n                \"This folder is either empty or you do not have proper access permissions to see the contents. If you expected something to show up\",\n                ' please consult the <a href=\"https://galaxyproject.org/data-libraries/#permissions\" target=\"_blank\">library security wikipage</a>',\n                ' or visit the <a href=\"https://biostar.usegalaxy.org/\" target=\"_blank\">Galaxy support site</a>.',\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    FolderListView: FolderListView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/library/library-folderlist-view.js","import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_library_dataset_view from \"mvc/library/library-dataset-view\";\nvar FolderRowView = Backbone.View.extend({\n    events: {\n        \"click .undelete_dataset_btn\": \"undeleteDataset\",\n        \"click .undelete_folder_btn\": \"undeleteFolder\",\n        \"click .edit_folder_btn\": \"startModifications\",\n        \"click .cancel_folder_btn\": \"cancelModifications\",\n        \"click .save_folder_btn\": \"saveModifications\"\n    },\n\n    defaults: {\n        type: null,\n        visibility_config: {\n            edit_folder_btn: false,\n            save_folder_btn: false,\n            cancel_folder_btn: false,\n            permission_folder_btn: false\n        },\n        edit_mode: false\n    },\n\n    initialize: function(options) {\n        this.options = _.defaults(options || {}, this.defaults);\n        this.render(this.options);\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        var folder_item = this.options.model;\n        var template = null;\n\n        if (folder_item.get(\"type\") === \"folder\" || folder_item.get(\"model_class\") === \"LibraryFolder\") {\n            this.options.type = \"folder\";\n            this.prepareButtons(folder_item);\n            if (folder_item.get(\"deleted\")) {\n                template = this.templateRowDeletedFolder();\n            } else {\n                template = this.templateRowFolder();\n            }\n        } else if (\n            folder_item.get(\"type\") === \"file\" ||\n            folder_item.get(\"model_class\") === \"LibraryDatasetDatasetAssociation\" ||\n            folder_item.get(\"model_class\") === \"LibraryDataset\"\n        ) {\n            this.options.type = \"file\";\n            if (folder_item.get(\"deleted\")) {\n                template = this.templateRowDeletedFile();\n            } else {\n                template = this.templateRowFile();\n            }\n        } else {\n            Galaxy.emit.error(\"Unknown library item type found.\");\n            Galaxy.emit.error(folder_item.get(\"type\") || folder_item.get(\"model_class\"));\n        }\n        this.setElement(\n            template({\n                content_item: folder_item,\n                edit_mode: this.options.edit_mode,\n                button_config: this.options.visibility_config\n            })\n        );\n        this.$el.show();\n        return this;\n    },\n\n    /**\n     * Modify the visibility of buttons for\n     * the filling of the row template of a given folder.\n     */\n    prepareButtons: function(folder) {\n        var vis_config = this.options.visibility_config;\n        if (this.options.edit_mode === false) {\n            vis_config.save_folder_btn = false;\n            vis_config.cancel_folder_btn = false;\n            if (folder.get(\"deleted\") === true) {\n                vis_config.edit_folder_btn = false;\n                vis_config.permission_folder_btn = false;\n            } else if (folder.get(\"deleted\") === false) {\n                vis_config.save_folder_btn = false;\n                vis_config.cancel_folder_btn = false;\n                if (folder.get(\"can_modify\") === true) {\n                    vis_config.edit_folder_btn = true;\n                }\n                if (folder.get(\"can_manage\") === true) {\n                    vis_config.permission_folder_btn = true;\n                }\n            }\n        } else if (this.options.edit_mode === true) {\n            vis_config.edit_folder_btn = false;\n            vis_config.permission_folder_btn = false;\n            vis_config.save_folder_btn = true;\n            vis_config.cancel_folder_btn = true;\n        }\n        this.options.visibility_config = vis_config;\n    },\n\n    /* Show the page with dataset details. */\n    showDatasetDetails: function() {\n        Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({ id: this.id });\n    },\n\n    /* Undelete the dataset on server and render the row again. */\n    undeleteDataset: function(event) {\n        $(\".tooltip\").hide();\n        var that = this;\n        var dataset_id = $(event.target)\n            .closest(\"tr\")\n            .data(\"id\");\n        var dataset = Galaxy.libraries.folderListView.collection.get(dataset_id);\n        dataset.url = `${dataset.urlRoot + dataset.id}?undelete=true`;\n        dataset.destroy({\n            success: function(model, response) {\n                Galaxy.libraries.folderListView.collection.remove(dataset_id);\n                var updated_dataset = new mod_library_model.Item(response);\n                Galaxy.libraries.folderListView.collection.add(updated_dataset);\n                Galaxy.libraries.folderListView.collection.sortFolder(\"name\", \"asc\");\n                mod_toastr.success(\"Dataset undeleted. Click this to see it.\", \"\", {\n                    onclick: function() {\n                        var folder_id = that.model.get(\"folder_id\");\n                        window.location = `${Galaxy.root}library/list#folders/${folder_id}/datasets/${that.id}`;\n                    }\n                });\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(`Dataset was not undeleted. ${response.responseJSON.err_msg}`);\n                } else {\n                    mod_toastr.error(\"An error occured! Dataset was not undeleted. Please try again.\");\n                }\n            }\n        });\n    },\n\n    /* Undelete the folder on server and render the row again. */\n    undeleteFolder: function(event) {\n        $(\".tooltip\").hide();\n        var that = this;\n        var folder_id = $(event.target)\n            .closest(\"tr\")\n            .data(\"id\");\n        var folder = Galaxy.libraries.folderListView.collection.get(folder_id);\n        folder.url = `${folder.urlRoot + folder.id}?undelete=true`;\n        folder.destroy({\n            success: function(model, response) {\n                Galaxy.libraries.folderListView.collection.remove(folder_id);\n                var updated_folder = new mod_library_model.FolderAsModel(response);\n                Galaxy.libraries.folderListView.collection.add(updated_folder);\n                Galaxy.libraries.folderListView.collection.sortFolder(\"name\", \"asc\");\n                mod_toastr.success(\"Folder undeleted.\");\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(`Folder was not undeleted. ${response.responseJSON.err_msg}`);\n                } else {\n                    mod_toastr.error(\"An error occured! Folder was not undeleted. Please try again.\");\n                }\n            }\n        });\n    },\n\n    /* User clicked the 'edit' button on row so render the row as editable. */\n    startModifications: function() {\n        this.options.edit_mode = true;\n        this.repaint();\n    },\n\n    /* User clicked the 'cancel' button so render normal row */\n    cancelModifications: function() {\n        this.options.edit_mode = false;\n        this.repaint();\n    },\n\n    saveModifications: function() {\n        var folder = Galaxy.libraries.folderListView.collection.get(this.$el.data(\"id\"));\n        var is_changed = false;\n        var new_name = this.$el.find(\".input_folder_name\").val();\n        if (typeof new_name !== \"undefined\" && new_name !== folder.get(\"name\")) {\n            if (new_name.length > 2) {\n                folder.set(\"name\", new_name);\n                is_changed = true;\n            } else {\n                mod_toastr.warning(\"Folder name has to be at least 3 characters long.\");\n                return;\n            }\n        }\n        var new_description = this.$el.find(\".input_folder_description\").val();\n        if (typeof new_description !== \"undefined\" && new_description !== folder.get(\"description\")) {\n            folder.set(\"description\", new_description);\n            is_changed = true;\n        }\n        if (is_changed) {\n            var row_view = this;\n            folder.save(null, {\n                patch: true,\n                success: function(folder) {\n                    row_view.options.edit_mode = false;\n                    row_view.repaint(folder);\n                    mod_toastr.success(\"Changes to folder saved.\");\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occured while attempting to update the folder.\");\n                    }\n                }\n            });\n        } else {\n            this.options.edit_mode = false;\n            this.repaint(folder);\n            mod_toastr.info(\"Nothing has changed.\");\n        }\n    },\n\n    repaint: function() {\n        /* need to hide manually because of the element removal in setElement\n    invoked in render() */\n        $(\".tooltip\").hide();\n        /* we need to store the old element to be able to replace it with\n    new one */\n        var old_element = this.$el;\n        /* if user canceled the folder param is undefined,\n      if user saved and succeeded the updated folder is rendered */\n        this.render();\n        old_element.replaceWith(this.$el);\n        /* now we attach new tooltips to the newly created row element */\n        this.$el.find(\"[data-toggle]\").tooltip();\n    },\n\n    templateRowFolder: function() {\n        return _.template(\n            [\n                '<tr class=\"folder_row light library-row\" data-id=\"<%- content_item.id %>\">',\n                \"<td>\",\n                '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n                \"</td>\",\n                '<td style=\"text-align: center; \"><input style=\"margin: 0;\" type=\"checkbox\"></td>',\n                \"<% if(!edit_mode) { %>\",\n                \"<td>\",\n                '<a href=\"#folders/<%- content_item.id %>\"><%- content_item.get(\"name\") %></a>',\n                \"</td>\",\n                \"<td>\",\n                '<%- content_item.get(\"description\") %>',\n                \"</td>\",\n                \"<% } else if(edit_mode){ %>\",\n                '<td><textarea rows=\"4\" class=\"form-control input_folder_name\" placeholder=\"name\" ><%- content_item.get(\"name\") %></textarea></td>',\n                '<td><textarea rows=\"4\" class=\"form-control input_folder_description\" placeholder=\"description\" ><%- content_item.get(\"description\") %></textarea></td>',\n                \"<% } %>\",\n                \"<td>folder</td>\",\n                \"<td></td>\",\n                \"<td>\",\n                '<%= _.escape(content_item.get(\"update_time\")) %>',\n                \"</td>\",\n                \"<td></td>\",\n                \"<td>\",\n                \"<% if(edit_mode) { %>\", // start edit mode\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save changes\" class=\"primary-button btn-xs save_folder_btn\" type=\"button\" style=\"<% if(button_config.save_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-floppy-o\"/> Save',\n                \"</button>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Discard changes\" class=\"primary-button btn-xs cancel_folder_btn\" type=\"button\" style=\"<% if(button_config.cancel_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-times\"/> Cancel',\n                \"</button>\",\n                \"<% } else if (!edit_mode){%>\", // start no edit mode\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs edit_folder_btn\" type=\"button\" style=\"<% if(button_config.edit_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-pencil\"/> Edit',\n                \"</button>\",\n                '<a href=\"#/folders/<%- content_item.id %>/permissions\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permission_folder_btn\" title=\"Permissions of \\'<%- content_item.get(\"name\") %>\\'\" style=\"<% if(button_config.permission_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-group\"/> Manage',\n                \"</button>\",\n                \"</a>\",\n                \"<% } %>\", //end no edit mode\n                \"</td>\",\n                \"</tr>\"\n            ].join(\"\")\n        );\n    },\n\n    templateRowFile: function() {\n        return _.template(\n            [\n                '<tr class=\"dataset_row light library-row\" data-id=\"<%- content_item.id %>\">',\n                \"<td>\",\n                '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n                \"</td>\",\n                '<td style=\"text-align: center; \">',\n                '<input style=\"margin: 0;\" type=\"checkbox\">',\n                \"</td>\",\n                \"<td>\",\n                '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>\" class=\"library-dataset\">',\n                '<%- content_item.get(\"name\") %>',\n                \"<a>\",\n                \"</td>\",\n                '<td><%- content_item.get(\"message\") %></td>',\n                '<td><%= _.escape(content_item.get(\"file_ext\")) %></td>',\n                '<td><%= _.escape(content_item.get(\"file_size\")) %></td>',\n                '<td><%= _.escape(content_item.get(\"update_time\")) %></td>',\n                \"<td>\",\n                '<% if ( content_item.get(\"state\") !== \"ok\" ) { %>',\n                '<%= _.escape(content_item.get(\"state\")) %>',\n                \"<% } %>\",\n                \"</td>\",\n                \"<td>\",\n                '<% if (content_item.get(\"is_unrestricted\")) { %>',\n                '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Unrestricted dataset\" style=\"color:grey;\" class=\"fa fa-globe fa-lg\"/>',\n                \"<% } %>\",\n                '<% if (content_item.get(\"is_private\")) { %>',\n                '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Private dataset\" style=\"color:grey;\" class=\"fa fa-key fa-lg\"/>',\n                \"<% } %>\",\n                '<% if ((content_item.get(\"is_unrestricted\") === false) && (content_item.get(\"is_private\") === false)) { %>',\n                '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Restricted dataset\" style=\"color:grey;\" class=\"fa fa-shield fa-lg\"/>',\n                \"<% } %>\",\n                '<% if (content_item.get(\"can_manage\")) { %>',\n                '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>/permissions\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permissions-dataset-btn\" title=\"Permissions of \\'<%- content_item.get(\"name\") %>\\'\">',\n                '<span class=\"fa fa-group\"/> Manage',\n                \"</button>\",\n                \"</a>\",\n                \"<% } %>\",\n                \"</td>\",\n                \"</tr>\"\n            ].join(\"\")\n        );\n    },\n\n    templateRowDeletedFile: function() {\n        return _.template(\n            [\n                '<tr class=\"active deleted_dataset library-row\" data-id=\"<%- content_item.id %>\">',\n                \"<td>\",\n                '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n                \"</td>\",\n                \"<td></td>\",\n                '<td style=\"color:grey;\">',\n                '<%- content_item.get(\"name\") %>',\n                \"</td>\",\n                \"<td>\",\n                '<%- content_item.get(\"message\") %>',\n                \"</td>\",\n                \"<td>\",\n                '<%= _.escape(content_item.get(\"file_ext\")) %>',\n                \"</td>\",\n                \"<td>\",\n                '<%= _.escape(content_item.get(\"file_size\")) %>',\n                \"</td>\",\n                \"<td>\",\n                '<%= _.escape(content_item.get(\"update_time\")) %>',\n                \"</td>\",\n                \"<td>\",\n                '<% if ( content_item.get(\"state\") !== \"ok\" ) { %>',\n                '<%= _.escape(content_item.get(\"state\")) %>',\n                \"<% } %>\",\n                \"</td>\",\n                \"<td>\",\n                '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs undelete_dataset_btn\" type=\"button\" style=\"margin-left:1em;\">',\n                '<span class=\"fa fa-unlock\"/> Undelete',\n                \"</button>\",\n                \"</td>\",\n                \"</tr>\"\n            ].join(\"\")\n        );\n    },\n\n    templateRowDeletedFolder: function() {\n        return _.template(\n            [\n                '<tr class=\"active deleted_folder light library-row\" data-id=\"<%- content_item.id %>\">',\n                \"<td>\",\n                '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n                \"</td>\",\n                \"<td></td>\",\n                '<td style=\"color:grey;\">',\n                '<%- content_item.get(\"name\") %>',\n                \"</td>\",\n                \"<td>\",\n                '<%- content_item.get(\"description\") %>',\n                \"</td>\",\n                \"<td>\",\n                \"folder\",\n                \"</td>\",\n                \"<td></td>\",\n                \"<td>\",\n                '<%= _.escape(content_item.get(\"update_time\")) %>',\n                \"</td>\",\n                \"<td></td>\",\n                \"<td>\",\n                '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs undelete_folder_btn\" type=\"button\" style=\"margin-left:1em;\">',\n                '<span class=\"fa fa-unlock\"/> Undelete',\n                \"</button>\",\n                \"</td>\",\n                \"</tr>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    FolderRowView: FolderRowView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/library/library-folderrow-view.js","import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_library_libraryrow_view from \"mvc/library/library-libraryrow-view\";\nimport _ from \"libs/underscore\";\nvar LibraryListView = Backbone.View.extend({\n    el: \"#libraries_element\",\n\n    events: {\n        \"click .sort-libraries-link\": \"sort_clicked\"\n    },\n\n    defaults: {\n        page_count: null,\n        show_page: null,\n        all_fetched: false\n    },\n\n    /**\n     * Initialize and fetch the libraries from server.\n     * Async render afterwards.\n     * @param  {object} options an object with options\n     */\n    initialize: function(options) {\n        this.options = _.defaults(this.options || {}, options, this.defaults);\n        var that = this;\n        this.modal = null;\n        // collection of {Item}s\n        this.collection = new mod_library_model.Libraries();\n        this.collection.url = `${this.collection.urlRoot}?deleted=false`;\n        this.collection.fetch({\n            success: function() {\n                that.render();\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(response.responseJSON.err_msg);\n                } else {\n                    mod_toastr.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    /**\n     * Render the libraries table either from the object's own collection,\n     * or from a given array of library models,\n     * or render an empty list in case no data is given.\n     */\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        this.setElement(\"#libraries_element\");\n        var template = this.templateLibraryList();\n        var libraries_to_render = null;\n        var models = null;\n        var is_public = model => model.get(\"public\") === true;\n        $(\".tooltip\").hide();\n        if (typeof options !== \"undefined\") {\n            models = typeof options.models !== \"undefined\" ? options.models : null;\n        }\n        if (this.collection !== null && models === null) {\n            this.sortLibraries();\n            if (Galaxy.libraries.preferences.get(\"with_deleted\")) {\n                libraries_to_render = this.collection.models;\n            } else {\n                libraries_to_render = this.collection.where({\n                    deleted: false\n                });\n            }\n            if (Galaxy.libraries.preferences.get(\"without_restricted\")) {\n                libraries_to_render = _.filter(libraries_to_render, is_public);\n            }\n        } else if (models !== null) {\n            if (Galaxy.libraries.preferences.get(\"with_deleted\")) {\n                libraries_to_render = models;\n            } else {\n                var is_deleted = model => model.get(\"deleted\") === false;\n                libraries_to_render = _.filter(models, is_deleted);\n            }\n            if (Galaxy.libraries.preferences.get(\"without_restricted\")) {\n                libraries_to_render = _.filter(libraries_to_render, is_public);\n            }\n        } else {\n            libraries_to_render = [];\n        }\n\n        // pagination\n        if (this.options.show_page === null || this.options.show_page < 1) {\n            this.options.show_page = 1;\n        }\n        this.options.total_libraries_count = libraries_to_render.length;\n        var page_start = Galaxy.libraries.preferences.get(\"library_page_size\") * (this.options.show_page - 1);\n        this.options.page_count = Math.ceil(\n            this.options.total_libraries_count / Galaxy.libraries.preferences.get(\"library_page_size\")\n        );\n        if (this.options.total_libraries_count > 0 && page_start < this.options.total_libraries_count) {\n            libraries_to_render = libraries_to_render.slice(\n                page_start,\n                page_start + Galaxy.libraries.preferences.get(\"library_page_size\")\n            );\n            this.options.libraries_shown = libraries_to_render.length;\n            // User requests page with no libraries\n            if (\n                Galaxy.libraries.preferences.get(\"library_page_size\") * this.options.show_page >\n                this.options.total_libraries_count + Galaxy.libraries.preferences.get(\"library_page_size\")\n            ) {\n                libraries_to_render = [];\n            }\n            this.$el.html(\n                template({\n                    length: 1,\n                    order: Galaxy.libraries.preferences.get(\"sort_order\"),\n                    search_term: Galaxy.libraries.libraryToolbarView.options.search_term\n                })\n            );\n            Galaxy.libraries.libraryToolbarView.renderPaginator(this.options);\n            this.renderRows(libraries_to_render);\n        } else {\n            this.$el.html(\n                template({\n                    length: 0,\n                    order: Galaxy.libraries.preferences.get(\"sort_order\"),\n                    search_term: Galaxy.libraries.libraryToolbarView.options.search_term\n                })\n            );\n            Galaxy.libraries.libraryToolbarView.renderPaginator(this.options);\n        }\n        $(\"#center [data-toggle]\").tooltip();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    fetchDeleted: function() {\n        if (this.options.all_fetched) {\n            this.render();\n        } else {\n            var that = this;\n            this.collection.url = `${this.collection.urlRoot}?deleted=true`;\n            this.collection.fetch({\n                remove: false,\n                success: function() {\n                    that.options.all_fetched = true;\n                    that.render();\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                }\n            });\n        }\n    },\n\n    /**\n     * Render all given models as rows in the library list\n     * @param  {array} libraries_to_render array of library models to render\n     */\n    renderRows: function(libraries_to_render) {\n        for (var i = 0; i < libraries_to_render.length; i++) {\n            var library = libraries_to_render[i];\n            this.renderOne({ library: library });\n        }\n    },\n\n    /**\n     * Create a view for the given model and add it to the libraries view.\n     * @param {Library} model of the view that will be rendered\n     */\n    renderOne: function(options) {\n        var library = options.library;\n        var rowView = new mod_library_libraryrow_view.LibraryRowView(library);\n        this.$el.find(\"#library_list_body\").append(rowView.el);\n    },\n\n    /**\n     * Table heading was clicked, update sorting preferences and re-render.\n     * @return {[type]} [description]\n     */\n    sort_clicked: function() {\n        if (Galaxy.libraries.preferences.get(\"sort_order\") === \"asc\") {\n            Galaxy.libraries.preferences.set({ sort_order: \"desc\" });\n        } else {\n            Galaxy.libraries.preferences.set({ sort_order: \"asc\" });\n        }\n        this.render();\n    },\n\n    /**\n     * Sort the underlying collection according to the parameters received.\n     * Currently supports only sorting by name.\n     */\n    sortLibraries: function() {\n        if (Galaxy.libraries.preferences.get(\"sort_by\") === \"name\") {\n            if (Galaxy.libraries.preferences.get(\"sort_order\") === \"asc\") {\n                this.collection.sortLibraries(\"name\", \"asc\");\n            } else if (Galaxy.libraries.preferences.get(\"sort_order\") === \"desc\") {\n                this.collection.sortLibraries(\"name\", \"desc\");\n            }\n        }\n    },\n\n    /**\n     * In case the search_term is not empty perform the search and render\n     * the result. Render all visible libraries otherwise.\n     * @param  {string} search_term string to search for\n     */\n    searchLibraries: function(search_term) {\n        var trimmed_term = $.trim(search_term);\n        if (trimmed_term !== \"\") {\n            var results = null;\n            results = this.collection.search(search_term);\n            this.options.searching = true;\n            this.render({ models: results, show_page: 1 });\n        } else {\n            this.options.searching = false;\n            this.render();\n        }\n    },\n\n    // MMMMMMMMMMMMMMMMMM\n    // === TEMPLATES ====\n    // MMMMMMMMMMMMMMMMMM\n\n    templateLibraryList: function() {\n        return _.template(\n            [\n                '<div class=\"library_container table-responsive\">',\n                \"<% if(length === 0) { %>\",\n                \"<% if(search_term.length > 0) { %>\",\n                \"<div>\",\n                \"There are no libraries matching your search. Try different keyword.\",\n                \"</div>\",\n                \"<% } else{ %>\",\n                \"<div>\",\n                \"There are no libraries visible to you here. If you expected some to show up please consult the\",\n                ' <a href=\"https://galaxyproject.org/data-libraries/#permissions\" target=\"_blank\">library security wikipage</a>',\n                ' or visit the <a href=\"https://biostar.usegalaxy.org/\" target=\"_blank\">Galaxy support site</a>.',\n                \"</div>\",\n                \"<% }%>\",\n                \"<% } else{ %>\",\n                '<table class=\"grid table table-condensed\">',\n                \"<thead>\",\n                '<th style=\"width:30%;\">',\n                '<a class=\"sort-libraries-link\" title=\"Click to reverse order\" href=\"#\">',\n                \"name\",\n                \"</a>\",\n                '<span title=\"Sorted alphabetically\" class=\"fa fa-sort-alpha-<%- order %>\"/>',\n                \"</th>\",\n                '<th style=\"width:22%;\">description</th>',\n                '<th style=\"width:22%;\">synopsis</th> ',\n                '<th style=\"width:26%;\"></th>',\n                \"</thead>\",\n                '<tbody id=\"library_list_body\">',\n                // library item views will attach here\n                \"</tbody>\",\n                \"</table>\",\n                \"<% }%>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    LibraryListView: LibraryListView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/library/library-librarylist-view.js","// dependencies\nimport mod_toastr from \"libs/toastr\";\n// galaxy library row view\nvar LibraryRowView = Backbone.View.extend({\n    events: {\n        \"click .edit_library_btn\": \"edit_button_clicked\",\n        \"click .cancel_library_btn\": \"cancel_library_modification\",\n        \"click .save_library_btn\": \"save_library_modification\",\n        \"click .delete_library_btn\": \"delete_library\",\n        \"click .undelete_library_btn\": \"undelete_library\"\n    },\n\n    edit_mode: false,\n\n    element_visibility_config: {\n        upload_library_btn: false,\n        edit_library_btn: false,\n        permission_library_btn: false,\n        save_library_btn: false,\n        cancel_library_btn: false,\n        delete_library_btn: false,\n        undelete_library_btn: false\n    },\n\n    initialize: function(library) {\n        this.render(library);\n    },\n\n    render: function(library) {\n        if (typeof library === \"undefined\") {\n            library = Galaxy.libraries.libraryListView.collection.get(this.$el.data(\"id\"));\n        }\n        this.prepareButtons(library);\n        var tmpl = this.templateRow();\n        this.setElement(\n            tmpl({\n                library: library,\n                button_config: this.element_visibility_config,\n                edit_mode: this.edit_mode\n            })\n        );\n        this.$el.show();\n        return this;\n    },\n\n    repaint: function(library) {\n        /* need to hide manually because of the element removal in setElement\n    invoked in render() */\n        $(\".tooltip\").hide();\n        /* we need to store the old element to be able to replace it with\n    new one */\n        var old_element = this.$el;\n        /* if user canceled the library param is undefined,\n      if user saved and succeeded the updated library is rendered */\n        this.render();\n        old_element.replaceWith(this.$el);\n        /* now we attach new tooltips to the newly created row element */\n        this.$el.find(\"[data-toggle]\").tooltip();\n    },\n\n    /**\n     * Function modifies the visibility of buttons for\n     * the filling of the row template of given library.\n     */\n    prepareButtons: function(library) {\n        var vis_config = this.element_visibility_config;\n\n        if (this.edit_mode === false) {\n            vis_config.save_library_btn = false;\n            vis_config.cancel_library_btn = false;\n            vis_config.delete_library_btn = false;\n            if (library.get(\"deleted\") === true) {\n                vis_config.undelete_library_btn = true;\n                vis_config.upload_library_btn = false;\n                vis_config.edit_library_btn = false;\n                vis_config.permission_library_btn = false;\n            } else if (library.get(\"deleted\") === false) {\n                vis_config.save_library_btn = false;\n                vis_config.cancel_library_btn = false;\n                vis_config.undelete_library_btn = false;\n                if (library.get(\"can_user_add\") === true) {\n                    vis_config.upload_library_btn = true;\n                }\n                if (library.get(\"can_user_modify\") === true) {\n                    vis_config.edit_library_btn = true;\n                }\n                if (library.get(\"can_user_manage\") === true) {\n                    vis_config.permission_library_btn = true;\n                }\n            }\n        } else if (this.edit_mode === true) {\n            vis_config.upload_library_btn = false;\n            vis_config.edit_library_btn = false;\n            vis_config.permission_library_btn = false;\n            vis_config.save_library_btn = true;\n            vis_config.cancel_library_btn = true;\n            vis_config.delete_library_btn = true;\n            vis_config.undelete_library_btn = false;\n        }\n\n        this.element_visibility_config = vis_config;\n    },\n\n    /* User clicked the 'edit' button on row so we render a new row\n    that allows editing */\n    edit_button_clicked: function() {\n        this.edit_mode = true;\n        this.repaint();\n    },\n\n    /* User clicked the 'cancel' button so we render normal rowView */\n    cancel_library_modification: function() {\n        // mod_toastr.info('Modifications canceled');\n        this.edit_mode = false;\n        this.repaint();\n    },\n\n    save_library_modification: function() {\n        var library = Galaxy.libraries.libraryListView.collection.get(this.$el.data(\"id\"));\n        var is_changed = false;\n\n        var new_name = this.$el.find(\".input_library_name\").val();\n        if (typeof new_name !== \"undefined\" && new_name !== library.get(\"name\")) {\n            if (new_name.length > 2) {\n                library.set(\"name\", new_name);\n                is_changed = true;\n            } else {\n                mod_toastr.warning(\"Library name has to be at least 3 characters long.\");\n                return;\n            }\n        }\n\n        var new_description = this.$el.find(\".input_library_description\").val();\n        if (typeof new_description !== \"undefined\" && new_description !== library.get(\"description\")) {\n            library.set(\"description\", new_description);\n            is_changed = true;\n        }\n\n        var new_synopsis = this.$el.find(\".input_library_synopsis\").val();\n        if (typeof new_synopsis !== \"undefined\" && new_synopsis !== library.get(\"synopsis\")) {\n            library.set(\"synopsis\", new_synopsis);\n            is_changed = true;\n        }\n\n        if (is_changed) {\n            var row_view = this;\n            library.save(null, {\n                patch: true,\n                success: function(library) {\n                    row_view.edit_mode = false;\n                    row_view.repaint(library);\n                    mod_toastr.success(\"Changes to library saved.\");\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occured while attempting to update the library.\");\n                    }\n                }\n            });\n        } else {\n            this.edit_mode = false;\n            this.repaint(library);\n            mod_toastr.info(\"Nothing has changed.\");\n        }\n    },\n\n    delete_library: function() {\n        var library = Galaxy.libraries.libraryListView.collection.get(this.$el.data(\"id\"));\n        var row_view = this;\n        // mark the library deleted\n        library.destroy({\n            success: function(library) {\n                library.set(\"deleted\", true);\n                // add the new deleted library back to the collection (Galaxy specialty)\n                Galaxy.libraries.libraryListView.collection.add(library);\n                row_view.edit_mode = false;\n                if (Galaxy.libraries.preferences.get(\"with_deleted\") === false) {\n                    $(\".tooltip\").hide();\n                    row_view.repaint(library);\n                    row_view.$el.remove();\n                } else if (Galaxy.libraries.preferences.get(\"with_deleted\") === true) {\n                    row_view.repaint(library);\n                }\n                mod_toastr.success(\"Library has been marked deleted.\");\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(response.responseJSON.err_msg);\n                } else {\n                    mod_toastr.error(\"An error occured during deleting the library.\");\n                }\n            }\n        });\n    },\n\n    undelete_library: function() {\n        var library = Galaxy.libraries.libraryListView.collection.get(this.$el.data(\"id\"));\n        var row_view = this;\n\n        // mark the library undeleted\n        library.url = `${library.urlRoot + library.id}?undelete=true`;\n        library.destroy({\n            success: function(library) {\n                // add the newly undeleted library back to the collection\n                // backbone does not accept changes through destroy, so update it too\n                library.set(\"deleted\", false);\n                Galaxy.libraries.libraryListView.collection.add(library);\n                row_view.edit_mode = false;\n                row_view.repaint(library);\n                mod_toastr.success(\"Library has been undeleted.\");\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(response.responseJSON.err_msg);\n                } else {\n                    mod_toastr.error(\"An error occured while undeleting the library.\");\n                }\n            }\n        });\n    },\n\n    templateRow: function() {\n        return _.template(\n            [\n                '<tr class=\"<% if(library.get(\"deleted\") === true) { print(\"active\") } %>\" style=\"display:none;\" data-id=\"<%- library.get(\"id\") %>\">',\n                \"<% if(!edit_mode) { %>\",\n                '<% if(library.get(\"deleted\")) { %>',\n                '<td style=\"color:grey;\"><%- library.get(\"name\") %></td>',\n                \"<% } else { %>\",\n                '<td><a href=\"#folders/<%- library.get(\"root_folder_id\") %>\"><%- library.get(\"name\") %></a></td>',\n                \"<% } %>\",\n                '<% if(library.get(\"description\")) { %>',\n                '<% if( (library.get(\"description\")).length> 80 ) { %>',\n                '<td data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"<%= _.escape(library.get(\"description\")) %>\"><%= _.escape(library.get(\"description\")).substring(0, 80) + \"...\" %></td>',\n                \"<% } else { %>\",\n                '<td><%= _.escape(library.get(\"description\"))%></td>',\n                \"<% } %>\",\n                \"<% } else { %>\",\n                \"<td></td>\",\n                \"<% } %>\",\n                '<% if(library.get(\"synopsis\")) { %>',\n                '<% if( (library.get(\"synopsis\")).length> 120 ) { %>',\n                '<td data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"<%= _.escape(library.get(\"synopsis\")) %>\"><%= _.escape(library.get(\"synopsis\")).substring(0, 120) + \"...\" %></td>',\n                \"<% } else { %>\",\n                '<td><%= _.escape(library.get(\"synopsis\"))%></td>',\n                \"<% } %>\",\n                \"<% } else { %>\",\n                \"<td></td>\",\n                \"<% } %>\",\n                \"<% } else if(edit_mode){ %>\",\n                '<td><textarea rows=\"4\" class=\"form-control input_library_name\" placeholder=\"name\" ><%- library.get(\"name\") %></textarea></td>',\n                '<td><textarea rows=\"4\" class=\"form-control input_library_description\" placeholder=\"description\" ><%- library.get(\"description\") %></textarea></td>',\n                '<td><textarea rows=\"4\" class=\"form-control input_library_synopsis\" placeholder=\"synopsis\" ><%- library.get(\"synopsis\") %></textarea></td>',\n                \"<% } %>\",\n                '<td class=\"right-center\">',\n                '<% if( (library.get(\"public\")) && (library.get(\"deleted\") === false) ) { %>',\n                '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Unrestricted library\" style=\"color:grey;\" class=\"fa fa-globe fa-lg\"> </span>',\n                \"<% }%>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify \\'<%- library.get(\"name\") %>\\'\" class=\"primary-button btn-xs edit_library_btn\" type=\"button\" style=\"<% if(button_config.edit_library_btn === false) { print(\"display:none;\") } %>\"><span class=\"fa fa-pencil\"></span> Edit</button>',\n                '<a href=\"#library/<%- library.get(\"id\") %>/permissions\"><button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Permissions of \\'<%- library.get(\"name\") %>\\'\" class=\"primary-button btn-xs permission_library_btn\" type=\"button\" style=\"<% if(button_config.permission_library_btn === false) { print(\"display:none;\") } %>\"><span class=\"fa fa-group\"></span> Manage</button></a>',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save changes\" class=\"primary-button btn-xs save_library_btn\" type=\"button\" style=\"<% if(button_config.save_library_btn === false) { print(\"display:none;\") } %>\"><span class=\"fa fa-floppy-o\"></span> Save</button>',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Discard changes\" class=\"primary-button btn-xs cancel_library_btn\" type=\"button\" style=\"<% if(button_config.cancel_library_btn === false) { print(\"display:none;\") } %>\"><span class=\"fa fa-times\"></span> Cancel</button>',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete \\'<%- library.get(\"name\") %>\\'\" class=\"primary-button btn-xs delete_library_btn\" type=\"button\" style=\"<% if(button_config.delete_library_btn === false) { print(\"display:none;\") } %>\"><span class=\"fa fa-trash-o\"></span> Delete</button>',\n                // For deleted libraries\n                '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey; <% if(button_config.undelete_library_btn === false) { print(\"display:none;\") } %>\" class=\"fa fa-ban fa-lg\"></span>',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete \\'<%- library.get(\"name\") %>\\' \" class=\"primary-button btn-xs undelete_library_btn\" type=\"button\" style=\"<% if(button_config.undelete_library_btn === false) { print(\"display:none;\") } %>\"><span class=\"fa fa-unlock\"></span> Undelete</button>',\n                \"</td>\",\n                \"</tr>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    LibraryRowView: LibraryRowView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/library/library-libraryrow-view.js","import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\n/**\n * This view represents the top part of the library page.\n * It contains the tool bar with controls.\n */\nvar LibraryToolbarView = Backbone.View.extend({\n    el: \"#center\",\n\n    defaults: {\n        search_term: \"\"\n    },\n\n    events: {\n        \"click #create_new_library_btn\": \"createLibraryFromModal\",\n        \"click #include_deleted_chk\": \"includeDeletedChecked\",\n        \"click #exclude_restricted_chk\": \"excludeRestrictedChecked\",\n        \"click .page_size_prompt\": \"showPageSizePrompt\",\n        \"keyup .library-search-input\": \"searchLibraries\"\n    },\n\n    initialize: function(options) {\n        this.options = _.defaults(this.options || {}, options, this.defaults);\n        this.render();\n    },\n\n    render: function() {\n        var toolbar_template = this.templateToolBar();\n        var is_admin = false;\n        var is_anonym = true;\n        if (Galaxy.user) {\n            is_admin = Galaxy.user.isAdmin();\n            is_anonym = Galaxy.user.isAnonymous();\n        }\n        this.$el.html(toolbar_template({ admin_user: is_admin, anon_user: is_anonym }));\n        if (is_admin) {\n            this.$el.find(\"#include_deleted_chk\")[0].checked = Galaxy.libraries.preferences.get(\"with_deleted\");\n            this.$el.find(\"#exclude_restricted_chk\")[0].checked = Galaxy.libraries.preferences.get(\n                \"without_restricted\"\n            );\n        }\n    },\n\n    /**\n     * Renders the element that shows pages into its div within the toolbar.\n     */\n    renderPaginator: function(options) {\n        this.options = _.extend(this.options, options);\n        var paginator_template = this.templatePaginator();\n        this.$el.find(\"#library_paginator\").html(\n            paginator_template({\n                show_page: parseInt(this.options.show_page),\n                page_count: parseInt(this.options.page_count),\n                total_libraries_count: this.options.total_libraries_count,\n                libraries_shown: this.options.libraries_shown,\n                library_page_size: Galaxy.libraries.preferences.get(\"library_page_size\")\n            })\n        );\n    },\n\n    /**\n     * User clicked on 'New library' button. Show modal to\n     * satisfy the wish.\n     */\n    createLibraryFromModal: function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        var self = this;\n        this.modal = Galaxy.modal;\n        this.modal.show({\n            closing_events: true,\n            title: \"Create New Library\",\n            body: this.templateNewLibraryInModal(),\n            buttons: {\n                Create: function() {\n                    self.createNewLibrary();\n                },\n                Close: function() {\n                    self.modal.hide();\n                }\n            }\n        });\n    },\n\n    /**\n     * Create the new library using the API asynchronously.\n     */\n    createNewLibrary: function() {\n        var libraryDetails = this.serializeNewLibrary();\n        if (this.validateNewLibrary(libraryDetails)) {\n            var library = new mod_library_model.Library();\n            var self = this;\n            library.save(libraryDetails, {\n                success: function(library) {\n                    Galaxy.libraries.libraryListView.collection.add(library);\n                    self.modal.hide();\n                    self.clearLibraryModal();\n                    Galaxy.libraries.libraryListView.render();\n                    mod_toastr.success(\"Library created.\");\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occured.\");\n                    }\n                }\n            });\n        } else {\n            mod_toastr.error(\"Library's name is missing.\");\n        }\n        return false;\n    },\n\n    /**\n     * Show user the propmpt to change the number of libs shown on page.\n     */\n    showPageSizePrompt: function(e) {\n        e.preventDefault();\n        var library_page_size = prompt(\n            \"How many libraries per page do you want to see?\",\n            Galaxy.libraries.preferences.get(\"library_page_size\")\n        );\n        if (library_page_size != null && library_page_size == parseInt(library_page_size)) {\n            Galaxy.libraries.preferences.set({\n                library_page_size: parseInt(library_page_size)\n            });\n            Galaxy.libraries.libraryListView.render({ show_page: 1 });\n        }\n    },\n\n    /**\n     * Clear the library modal once it is saved.\n     */\n    clearLibraryModal: function() {\n        $(\"input[name='Name']\").val(\"\");\n        $(\"input[name='Description']\").val(\"\");\n        $(\"input[name='Synopsis']\").val(\"\");\n    },\n\n    /**\n     * Prepare new library variables to be submitted to API.\n     */\n    serializeNewLibrary: function() {\n        return {\n            name: $(\"input[name='Name']\").val(),\n            description: $(\"input[name='Description']\").val(),\n            synopsis: $(\"input[name='Synopsis']\").val()\n        };\n    },\n\n    /**\n     * Check whether entered values are valid.\n     */\n    validateNewLibrary: function(libraryDetails) {\n        return libraryDetails.name !== \"\";\n    },\n\n    /**\n     * Include or exclude deleted libraries in the view.\n     */\n    includeDeletedChecked: function(event) {\n        if (event.target.checked) {\n            Galaxy.libraries.preferences.set({ with_deleted: true });\n            Galaxy.libraries.libraryListView.fetchDeleted();\n        } else {\n            Galaxy.libraries.preferences.set({ with_deleted: false });\n            Galaxy.libraries.libraryListView.render();\n        }\n    },\n\n    /**\n     * Include or exclude restricted libraries in the view.\n     */\n    excludeRestrictedChecked: function(event) {\n        if (event.target.checked) {\n            Galaxy.libraries.preferences.set({ without_restricted: true });\n        } else {\n            Galaxy.libraries.preferences.set({ without_restricted: false });\n        }\n        Galaxy.libraries.libraryListView.render();\n    },\n\n    /**\n     * Take the contents of the search field and send it to the list view\n     * to query the collection of libraries.\n     */\n    searchLibraries: function(event) {\n        var search_term = $(\".library-search-input\").val();\n        this.options.search_term = search_term;\n        Galaxy.libraries.libraryListView.searchLibraries(search_term);\n    },\n\n    templateToolBar: function() {\n        return _.template(\n            [\n                '<div class=\"library_style_container\">',\n                '<div id=\"toolbar_form\">',\n                '<div id=\"library_toolbar\">',\n                '<form class=\"form-inline\" role=\"form\">',\n                '<span><strong><a href=\"#\" title=\"Go to first page\">DATA LIBRARIES</a></strong></span>',\n                '<span id=\"library_paginator\" class=\"library-paginator\">',\n                // paginator will append here\n                \"</span>\",\n                '<div class=\"form-group toolbar-item\">',\n                '<input type=\"text\" class=\"form-control library-search-input\" placeholder=\"Search\" size=\"30\">',\n                \"</div>\",\n                // only admins see the following\n                \"<% if(admin_user === true) { %>\",\n                '<div class=\"checkbox toolbar-item\" style=\"height: 20px;\">',\n                \"<label>\",\n                '<input id=\"include_deleted_chk\" type=\"checkbox\">',\n                \"include deleted \",\n                \"</input>\",\n                \"</label>\",\n                \"<label>\",\n                '<input id=\"exclude_restricted_chk\" type=\"checkbox\">',\n                \"exclude restricted\",\n                \"</input>\",\n                \"</label>\",\n                \"</div>\",\n                '<span class=\"toolbar-item\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Create New Library\">',\n                '<button id=\"create_new_library_btn\" class=\"primary-button btn-xs\" type=\"button\"><span class=\"fa fa-plus\"></span> New Library</button>',\n                \"</span>\",\n                \"<% } %>\",\n                '<span class=\"help-button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"See this screen annotated\">',\n                '<a href=\"https://galaxyproject.org/data-libraries/screen/list-of-libraries/\" target=\"_blank\">',\n                '<button class=\"primary-button\" type=\"button\"><span class=\"fa fa-question-circle\"></span> Help</button>',\n                \"</a>\",\n                \"</span>\",\n                \"</form>\",\n                \"</div>\",\n                \"</div>\",\n                '<div id=\"libraries_element\">',\n                // table with libraries will append here\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templatePaginator: function() {\n        return _.template(\n            [\n                '<ul class=\"pagination pagination-sm\">',\n                \"<% if ( ( show_page - 1 ) > 0 ) { %>\",\n                \"<% if ( ( show_page - 1 ) > page_count ) { %>\", // we are on higher page than total page count\n                '<li><a href=\"#page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>',\n                '<li class=\"disabled\"><a href=\"#page/<% print( show_page ) %>\"><% print( show_page - 1 ) %></a></li>',\n                \"<% } else { %>\",\n                '<li><a href=\"#page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>',\n                '<li><a href=\"#page/<% print( show_page - 1 ) %>\"><% print( show_page - 1 ) %></a></li>',\n                \"<% } %>\",\n                \"<% } else { %>\", // we are on the first page\n                '<li class=\"disabled\"><a href=\"#page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>',\n                '<li class=\"disabled\"><a href=\"#page/<% print( show_page ) %>\"><% print( show_page - 1 ) %></a></li>',\n                \"<% } %>\",\n                '<li class=\"active\">',\n                '<a href=\"#page/<% print( show_page ) %>\"><% print( show_page ) %></a>',\n                \"</li>\",\n                \"<% if ( ( show_page ) < page_count ) { %>\",\n                '<li><a href=\"#page/<% print( show_page + 1 ) %>\"><% print( show_page + 1 ) %></a></li>',\n                '<li><a href=\"#page/<% print( page_count ) %>\"><span class=\"fa fa-angle-double-right\"></span></a></li>',\n                \"<% } else { %>\",\n                '<li class=\"disabled\"><a href=\"#page/<% print( show_page  ) %>\"><% print( show_page + 1 ) %></a></li>',\n                '<li class=\"disabled\"><a href=\"#page/<% print( page_count ) %>\"><span class=\"fa fa-angle-double-right\"></span></a></li>',\n                \"<% } %>\",\n                \"</ul>\",\n                \"<span>\",\n                ' <%- libraries_shown %> libraries shown <a href=\"\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"currently <%- library_page_size %> per page\" class=\"page_size_prompt\">(change)</a>',\n                \"</span>\",\n                \"<span>\",\n                \" <%- total_libraries_count %> total\",\n                \"</span>\"\n            ].join(\"\")\n        );\n    },\n\n    templateNewLibraryInModal: function() {\n        return _.template(\n            [\n                '<div id=\"new_library_modal\">',\n                \"<form>\",\n                '<input type=\"text\" name=\"Name\" value=\"\" placeholder=\"Name\" autofocus>',\n                '<input type=\"text\" name=\"Description\" value=\"\" placeholder=\"Description\">',\n                '<input type=\"text\" name=\"Synopsis\" value=\"\" placeholder=\"Synopsis\">',\n                \"</form>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    LibraryToolbarView: LibraryToolbarView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/library/library-librarytoolbar-view.js","import mod_utils from \"utils/utils\";\nimport mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_select from \"mvc/ui/ui-select\";\nimport \"libs/jquery/jstree\";\nvar FolderToolbarView = Backbone.View.extend({\n    el: \"#center\",\n\n    events: {\n        \"click #toolbtn_create_folder\": \"createFolderFromModal\",\n        \"click #toolbtn_bulk_import\": \"modalBulkImport\",\n        \"click #include_deleted_datasets_chk\": \"checkIncludeDeleted\",\n        \"click #toolbtn_bulk_delete\": \"deleteSelectedItems\",\n        \"click .toolbtn-show-locinfo\": \"showLocInfo\",\n        \"click .page_size_prompt\": \"showPageSizePrompt\"\n    },\n\n    defaults: {\n        can_add_library_item: false,\n        contains_file_or_folder: false,\n        chain_call_control: {\n            total_number: 0,\n            failed_number: 0\n        },\n        disabled_jstree_element: \"folders\"\n    },\n\n    modal: null,\n\n    // directory browsing object\n    jstree: null,\n\n    // user's histories\n    histories: null,\n\n    // genome select\n    select_genome: null,\n\n    // extension select\n    select_extension: null,\n\n    // extension types\n    list_extensions: [],\n\n    // datatype placeholder for extension auto-detection\n    auto: {\n        id: \"auto\",\n        text: \"Auto-detect\",\n        description:\n            \"This system will try to detect the file type automatically.\" +\n            \" If your file is not detected properly as one of the known formats,\" +\n            \" it most likely means that it has some format problems (e.g., different\" +\n            \" number of columns on different rows). You can still coerce the system\" +\n            \" to set your data to the format you think it should be.\" +\n            \" You can also upload compressed files, which will automatically be decompressed.\"\n    },\n\n    // genomes\n    list_genomes: [],\n\n    initialize: function(options) {\n        this.options = _.defaults(options || {}, this.defaults);\n        this.fetchExtAndGenomes();\n        this.render();\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        var toolbar_template = this.templateToolBar();\n        var template_defaults = {\n            id: this.options.id,\n            is_admin: false,\n            is_anonym: true,\n            mutiple_add_dataset_options: false\n        };\n        if (Galaxy.user) {\n            template_defaults.is_admin = Galaxy.user.isAdmin();\n            template_defaults.is_anonym = Galaxy.user.isAnonymous();\n            if (\n                Galaxy.config.user_library_import_dir !== null ||\n                Galaxy.config.allow_library_path_paste !== false ||\n                Galaxy.config.library_import_dir !== null\n            ) {\n                template_defaults.mutiple_add_dataset_options = true;\n            }\n        }\n        this.$el.html(toolbar_template(template_defaults));\n    },\n\n    /**\n     * Called from FolderListView when needed.\n     * @param  {object} options common options\n     */\n    renderPaginator: function(options) {\n        this.options = _.extend(this.options, options);\n        var paginator_template = this.templatePaginator();\n        $(\"body\")\n            .find(\".folder-paginator\")\n            .html(\n                paginator_template({\n                    id: this.options.id,\n                    show_page: parseInt(this.options.show_page),\n                    page_count: parseInt(this.options.page_count),\n                    total_items_count: this.options.total_items_count,\n                    items_shown: this.options.items_shown,\n                    folder_page_size: Galaxy.libraries.preferences.get(\"folder_page_size\")\n                })\n            );\n    },\n\n    configureElements: function(options) {\n        this.options = _.extend(this.options, options);\n\n        if (this.options.can_add_library_item === true) {\n            $(\".add-library-items\").show();\n        } else {\n            $(\".add-library-items\").hide();\n        }\n        if (this.options.contains_file_or_folder === true) {\n            if (Galaxy.user) {\n                if (!Galaxy.user.isAnonymous()) {\n                    $(\".logged-dataset-manipulation\").show();\n                    $(\".dataset-manipulation\").show();\n                } else {\n                    $(\".dataset-manipulation\").show();\n                    $(\".logged-dataset-manipulation\").hide();\n                }\n            } else {\n                $(\".logged-dataset-manipulation\").hide();\n                $(\".dataset-manipulation\").hide();\n            }\n        } else {\n            $(\".logged-dataset-manipulation\").hide();\n            $(\".dataset-manipulation\").hide();\n        }\n        this.$el.find(\"[data-toggle]\").tooltip();\n    },\n\n    // shows modal for creating folder\n    createFolderFromModal: function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        // create modal\n        var self = this;\n        var template = this.templateNewFolderInModal();\n        this.modal = Galaxy.modal;\n        this.modal.show({\n            closing_events: true,\n            title: \"Create New Folder\",\n            body: template(),\n            buttons: {\n                Create: function() {\n                    self.create_new_folder_event();\n                },\n                Close: function() {\n                    Galaxy.modal.hide();\n                }\n            }\n        });\n    },\n\n    // create the new folder from modal\n    create_new_folder_event: function() {\n        var folderDetails = this.serialize_new_folder();\n        if (this.validate_new_folder(folderDetails)) {\n            var folder = new mod_library_model.FolderAsModel();\n            var url_items = Backbone.history.fragment.split(\"/\");\n            var current_folder_id;\n            if (url_items.indexOf(\"page\") > -1) {\n                current_folder_id = url_items[url_items.length - 3];\n            } else {\n                current_folder_id = url_items[url_items.length - 1];\n            }\n            folder.url = folder.urlRoot + current_folder_id;\n\n            folder.save(folderDetails, {\n                success: function(folder) {\n                    Galaxy.modal.hide();\n                    mod_toastr.success(\"Folder created.\");\n                    folder.set({ type: \"folder\" });\n                    Galaxy.libraries.folderListView.collection.add(folder);\n                },\n                error: function(model, response) {\n                    Galaxy.modal.hide();\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                }\n            });\n        } else {\n            mod_toastr.error(\"Folder's name is missing.\");\n        }\n        return false;\n    },\n\n    // serialize data from the modal\n    serialize_new_folder: function() {\n        return {\n            name: $(\"input[name='Name']\").val(),\n            description: $(\"input[name='Description']\").val()\n        };\n    },\n\n    // validate new folder info\n    validate_new_folder: function(folderDetails) {\n        return folderDetails.name !== \"\";\n    },\n\n    // show bulk import modal\n    modalBulkImport: function() {\n        var $checkedValues = this.findCheckedRows();\n        if ($checkedValues.length === 0) {\n            mod_toastr.info(\"You must select some datasets first.\");\n        } else {\n            var that = this;\n            this.histories = new mod_library_model.GalaxyHistories();\n            this.histories\n                .fetch()\n                .done(() => {\n                    var template = that.templateBulkImportInModal();\n                    that.modal = Galaxy.modal;\n                    that.modal.show({\n                        closing_events: true,\n                        title: \"Import into History\",\n                        body: template({\n                            histories: that.histories.models\n                        }),\n                        buttons: {\n                            Import: function() {\n                                that.importAllIntoHistory();\n                            },\n                            Close: function() {\n                                Galaxy.modal.hide();\n                            }\n                        }\n                    });\n                })\n                .fail((model, response) => {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                });\n        }\n    },\n\n    /**\n     * Import all selected datasets into history.\n     */\n    importAllIntoHistory: function() {\n        this.modal.disableButton(\"Import\");\n        var new_history_name = this.modal.$(\"input[name=history_name]\").val();\n        var that = this;\n        if (new_history_name !== \"\") {\n            $.post(`${Galaxy.root}api/histories`, {\n                name: new_history_name\n            })\n                .done(new_history => {\n                    that.options.last_used_history_id = new_history.id;\n                    that.processImportToHistory(new_history.id, new_history.name);\n                })\n                .fail((xhr, status, error) => {\n                    mod_toastr.error(\"An error occurred.\");\n                })\n                .always(() => {\n                    that.modal.enableButton(\"Import\");\n                });\n        } else {\n            var history_id = $(\"select[name=dataset_import_bulk] option:selected\").val();\n            this.options.last_used_history_id = history_id;\n            var history_name = $(\"select[name=dataset_import_bulk] option:selected\").text();\n            this.processImportToHistory(history_id, history_name);\n            this.modal.enableButton(\"Import\");\n        }\n    },\n\n    processImportToHistory: function(history_id, history_name) {\n        var dataset_ids = [];\n        var folder_ids = [];\n        this.findCheckedRows().each(function() {\n            var row_id = $(this)\n                .closest(\"tr\")\n                .data(\"id\");\n            if (row_id.substring(0, 1) == \"F\") {\n                folder_ids.push(row_id);\n            } else {\n                dataset_ids.push(row_id);\n            }\n        });\n        // prepare the dataset objects to be imported\n        var datasets_to_import = [];\n        for (var i = dataset_ids.length - 1; i >= 0; i--) {\n            var library_dataset_id = dataset_ids[i];\n            var historyItem = new mod_library_model.HistoryItem();\n            historyItem.url = `${historyItem.urlRoot + history_id}/contents`;\n            historyItem.content = library_dataset_id;\n            historyItem.source = \"library\";\n            datasets_to_import.push(historyItem);\n        }\n\n        // prepare the folder objects to be imported\n        var folders_to_import = [];\n        for (var i = folder_ids.length - 1; i >= 0; i--) {\n            var library_folder_id = folder_ids[i];\n            var historyItem = new mod_library_model.HistoryItem();\n            historyItem.url = `${historyItem.urlRoot + history_id}/contents`;\n            historyItem.content = library_folder_id;\n            historyItem.source = \"library_folder\";\n            datasets_to_import.push(historyItem);\n        }\n\n        this.initChainCallControl({\n            length: datasets_to_import.length,\n            action: \"to_history\",\n            history_name: history_name\n        });\n        // set the used history as current so user will see the last one\n        // that he imported into in the history panel on the 'analysis' page\n        jQuery.getJSON(`${Galaxy.root}history/set_as_current?id=${history_id}`);\n        this.chainCallImportingIntoHistory(datasets_to_import, history_name);\n    },\n\n    /**\n     * Update the progress bar in modal window.\n     */\n    updateProgress: function() {\n        this.progress += this.progressStep;\n        $(\".progress-bar-import\").width(`${Math.round(this.progress)}%`);\n        var txt_representation = `${Math.round(this.progress)}% Complete`;\n        $(\".completion_span\").text(txt_representation);\n    },\n\n    /**\n     * download selected datasets\n     * @param  {str} folder_id id of the current folder\n     * @param  {str} format    requested archive format\n     */\n    download: function(folder_id, format) {\n        var dataset_ids = [];\n        var folder_ids = [];\n        this.findCheckedRows().each(function() {\n            var row_id = $(this)\n                .closest(\"tr\")\n                .data(\"id\");\n            if (row_id.substring(0, 1) == \"F\") {\n                folder_ids.push(row_id);\n            } else {\n                dataset_ids.push(row_id);\n            }\n        });\n        var url = `${Galaxy.root}api/libraries/datasets/download/${format}`;\n        var data = { ld_ids: dataset_ids, folder_ids: folder_ids };\n        this.processDownload(url, data, \"get\");\n    },\n\n    /**\n     * Create hidden form and submit it through POST\n     * to initialize the download.\n     * @param  {str} url    url to call\n     * @param  {obj} data   data to include in the request\n     * @param  {str} method method of the request\n     */\n    processDownload: function(url, data, method) {\n        if (url && data) {\n            // data can be string of parameters or array/object\n            data = typeof data === \"string\" ? data : $.param(data);\n            // split params into form inputs\n            var inputs = \"\";\n            $.each(data.split(\"&\"), function() {\n                var pair = this.split(\"=\");\n                inputs += `<input type=\"hidden\" name=\"${pair[0]}\" value=\"${pair[1]}\" />`;\n            });\n            // send request\n            $(`<form action=\"${url}\" method=\"${method || \"post\"}\">${inputs}</form>`)\n                .appendTo(\"body\")\n                .submit()\n                .remove();\n            mod_toastr.info(\"Your download will begin soon.\");\n        } else {\n            mod_toastr.error(\"An error occurred.\");\n        }\n    },\n\n    addFilesFromHistoryModal: function() {\n        this.histories = new mod_library_model.GalaxyHistories();\n        var self = this;\n        this.histories\n            .fetch()\n            .done(() => {\n                self.modal = Galaxy.modal;\n                var template_modal = self.templateAddFilesFromHistory();\n                self.modal.show({\n                    closing_events: true,\n                    title: \"Adding datasets from your history\",\n                    body: template_modal({\n                        histories: self.histories.models\n                    }),\n                    buttons: {\n                        Add: function() {\n                            self.addAllDatasetsFromHistory();\n                        },\n                        Close: function() {\n                            Galaxy.modal.hide();\n                        }\n                    },\n                    closing_callback: function() {\n                        Galaxy.libraries.library_router.navigate(`folders/${self.id}`, { trigger: true });\n                    }\n                });\n                self.fetchAndDisplayHistoryContents(self.histories.models[0].id);\n                $(\"#dataset_add_bulk\").change(event => {\n                    self.fetchAndDisplayHistoryContents(event.target.value);\n                });\n            })\n            .fail((model, response) => {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(response.responseJSON.err_msg);\n                } else {\n                    mod_toastr.error(\"An error occurred.\");\n                }\n            });\n    },\n\n    /**\n     * Create modal for importing from Galaxy path.\n     * This feature is admin-only.\n     */\n    importFilesFromPathModal: function() {\n        var that = this;\n        this.modal = Galaxy.modal;\n        var template_modal = this.templateImportPathModal();\n        this.modal.show({\n            closing_events: true,\n            title: \"Please enter paths to import\",\n            body: template_modal({}),\n            buttons: {\n                Import: function() {\n                    that.importFromPathsClicked(that);\n                },\n                Close: function() {\n                    Galaxy.modal.hide();\n                }\n            },\n            closing_callback: function() {\n                //  TODO: should not trigger routes outside of the router\n                Galaxy.libraries.library_router.navigate(`folders/${that.id}`, {\n                    trigger: true\n                });\n            }\n        });\n        this.renderSelectBoxes();\n    },\n\n    /**\n     * Request all extensions and genomes from Galaxy\n     * and save them sorted in arrays.\n     */\n    fetchExtAndGenomes: function() {\n        var that = this;\n        mod_utils.get({\n            url: `${Galaxy.root}api/datatypes?extension_only=False`,\n            success: function(datatypes) {\n                that.list_extensions = [];\n                for (var key in datatypes) {\n                    that.list_extensions.push({\n                        id: datatypes[key].extension,\n                        text: datatypes[key].extension,\n                        description: datatypes[key].description,\n                        description_url: datatypes[key].description_url\n                    });\n                }\n                that.list_extensions.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0));\n                that.list_extensions.unshift(that.auto);\n            },\n            cache: true\n        });\n        mod_utils.get({\n            url: `${Galaxy.root}api/genomes`,\n            success: function(genomes) {\n                that.list_genomes = [];\n                for (var key in genomes) {\n                    that.list_genomes.push({\n                        id: genomes[key][1],\n                        text: genomes[key][0]\n                    });\n                }\n                that.list_genomes.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0));\n            },\n            cache: true\n        });\n    },\n\n    renderSelectBoxes: function() {\n        // This won't work properly unlesss we already have the data fetched.\n        // See this.fetchExtAndGenomes()\n        // TODO switch to common resources:\n        // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n        var that = this;\n        this.select_genome = new mod_select.View({\n            css: \"library-genome-select\",\n            data: that.list_genomes,\n            container: Galaxy.modal.$el.find(\"#library_genome_select\"),\n            value: \"?\"\n        });\n        this.select_extension = new mod_select.View({\n            css: \"library-extension-select\",\n            data: that.list_extensions,\n            container: Galaxy.modal.$el.find(\"#library_extension_select\"),\n            value: \"auto\"\n        });\n    },\n\n    /**\n     * Create modal for importing from given directory\n     * on Galaxy. Bind jQuery events.\n     */\n    importFilesFromGalaxyFolderModal: function(options) {\n        var that = this;\n        var template_modal = this.templateBrowserModal();\n        this.modal = Galaxy.modal;\n        this.modal.show({\n            closing_events: true,\n            title: \"Please select folders or files\",\n            body: template_modal({}),\n            buttons: {\n                Import: function() {\n                    that.importFromJstreePath(that, options);\n                },\n                Close: function() {\n                    Galaxy.modal.hide();\n                }\n            },\n            closing_callback: function() {\n                //  TODO: should not trigger routes outside of the router\n                Galaxy.libraries.library_router.navigate(`folders/${that.id}`, {\n                    trigger: true\n                });\n            }\n        });\n\n        $(\".libimport-select-all\").bind(\"click\", () => {\n            $(\"#jstree_browser\").jstree(\"check_all\");\n        });\n        $(\".libimport-select-none\").bind(\"click\", () => {\n            $(\"#jstree_browser\").jstree(\"uncheck_all\");\n        });\n\n        this.renderSelectBoxes();\n        options.disabled_jstree_element = \"folders\";\n        this.renderJstree(options);\n\n        $(\"input[type=radio]\").change(event => {\n            if (event.target.value === \"jstree-disable-folders\") {\n                options.disabled_jstree_element = \"folders\";\n                that.renderJstree(options);\n                $(\".jstree-folders-message\").hide();\n                $(\".jstree-preserve-structure\").hide();\n                $(\".jstree-files-message\").show();\n            } else if (event.target.value === \"jstree-disable-files\") {\n                $(\".jstree-files-message\").hide();\n                $(\".jstree-folders-message\").show();\n                $(\".jstree-preserve-structure\").show();\n                options.disabled_jstree_element = \"files\";\n                that.renderJstree(options);\n            }\n        });\n    },\n\n    /**\n     * Fetch the contents of user directory on Galaxy\n     * and render jstree component based on received\n     * data.\n     * @param  {[type]} options [description]\n     */\n    renderJstree: function(options) {\n        var that = this;\n        this.options = _.extend(this.options, options);\n        var target = options.source || \"userdir\";\n        var disabled_jstree_element = this.options.disabled_jstree_element;\n        this.jstree = new mod_library_model.Jstree();\n        this.jstree.url = `${this.jstree.urlRoot}?target=${target}&format=jstree&disable=${disabled_jstree_element}`;\n        this.jstree.fetch({\n            success: function(model, response) {\n                $(\"#jstree_browser\").jstree(\"destroy\");\n                $(\"#jstree_browser\").jstree({\n                    core: {\n                        data: model\n                    },\n                    plugins: [\"types\", \"checkbox\"],\n                    types: {\n                        folder: {\n                            icon: \"jstree-folder\"\n                        },\n                        file: {\n                            icon: \"jstree-file\"\n                        }\n                    },\n                    checkbox: {\n                        three_state: false\n                    }\n                });\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    if (response.responseJSON.err_code === 404001) {\n                        mod_toastr.warning(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    }\n                } else {\n                    mod_toastr.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    /**\n     * Take the paths from the textarea, split it, create\n     * a request queue and call a function that starts sending\n     * one by one to be imported on the server.\n     */\n    importFromPathsClicked: function() {\n        var preserve_dirs = this.modal.$el.find(\".preserve-checkbox\").is(\":checked\");\n        var link_data = this.modal.$el.find(\".link-checkbox\").is(\":checked\");\n        var space_to_tab = this.modal.$el.find(\".spacetab-checkbox\").is(\":checked\");\n        var to_posix_lines = this.modal.$el.find(\".posix-checkbox\").is(\":checked\");\n        var tag_using_filenames = this.modal.$el.find(\".tag-files\").is(\":checked\");\n        var file_type = this.select_extension.value();\n        var dbkey = this.select_genome.value();\n        var paths = $(\"textarea#import_paths\").val();\n        var valid_paths = [];\n        if (!paths) {\n            mod_toastr.info(\"Please enter a path relative to Galaxy root.\");\n        } else {\n            this.modal.disableButton(\"Import\");\n            paths = paths.split(\"\\n\");\n            for (var i = paths.length - 1; i >= 0; i--) {\n                var trimmed = paths[i].trim();\n                if (trimmed.length !== 0) {\n                    valid_paths.push(trimmed);\n                }\n            }\n            this.initChainCallControl({\n                length: valid_paths.length,\n                action: \"adding_datasets\"\n            });\n            this.chainCallImportingFolders({\n                paths: valid_paths,\n                preserve_dirs: preserve_dirs,\n                link_data: link_data,\n                space_to_tab: space_to_tab,\n                to_posix_lines: to_posix_lines,\n                source: \"admin_path\",\n                file_type: file_type,\n                tag_using_filenames: tag_using_filenames,\n                dbkey: dbkey\n            });\n        }\n    },\n\n    /**\n     * Initialize the control of chaining requests\n     * in the current modal.\n     * @param {int} length The number of items in the chain call.\n     */\n    initChainCallControl: function(options) {\n        var template;\n        switch (options.action) {\n            case \"adding_datasets\":\n                template = this.templateAddingDatasetsProgressBar();\n                this.modal.$el.find(\".modal-body\").html(\n                    template({\n                        folder_name: this.options.folder_name\n                    })\n                );\n                break;\n            case \"deleting_datasets\":\n                template = this.templateDeletingItemsProgressBar();\n                this.modal.$el.find(\".modal-body\").html(template());\n                break;\n            case \"to_history\":\n                template = this.templateImportIntoHistoryProgressBar();\n                this.modal.$el.find(\".modal-body\").html(template({ history_name: options.history_name }));\n                break;\n            default:\n                Galaxy.emit.error(\"Wrong action specified.\", \"datalibs\");\n                break;\n        }\n\n        // var progress_bar_tmpl = this.templateAddingDatasetsProgressBar();\n        // this.modal.$el.find( '.modal-body' ).html( progress_bar_tmpl( { folder_name : this.options.folder_name } ) );\n        this.progress = 0;\n        this.progressStep = 100 / options.length;\n        this.options.chain_call_control.total_number = options.length;\n        this.options.chain_call_control.failed_number = 0;\n    },\n\n    /**\n     * Take the selected items from the jstree, create a request queue\n     * and send them one by one to the server for importing into\n     * the current folder.\n     *\n     * jstree.js has to be loaded before\n     * @see renderJstree\n     */\n    importFromJstreePath: function(that, options) {\n        var all_nodes = $(\"#jstree_browser\")\n            .jstree()\n            .get_selected(true);\n        // remove the disabled elements that could have been trigerred with the 'select all'\n        var selected_nodes = _.filter(all_nodes, node => node.state.disabled == false);\n        var preserve_dirs = this.modal.$el.find(\".preserve-checkbox\").is(\":checked\");\n        var link_data = this.modal.$el.find(\".link-checkbox\").is(\":checked\");\n        var space_to_tab = this.modal.$el.find(\".spacetab-checkbox\").is(\":checked\");\n        var to_posix_lines = this.modal.$el.find(\".posix-checkbox\").is(\":checked\");\n        var file_type = this.select_extension.value();\n        var dbkey = this.select_genome.value();\n        var tag_using_filenames = this.modal.$el.find(\".tag-files\").is(\":checked\");\n        var selection_type = selected_nodes[0].type;\n        var paths = [];\n        if (selected_nodes.length < 1) {\n            mod_toastr.info(\"Please select some items first.\");\n        } else {\n            this.modal.disableButton(\"Import\");\n            for (var i = selected_nodes.length - 1; i >= 0; i--) {\n                if (selected_nodes[i].li_attr.full_path !== undefined) {\n                    paths.push(selected_nodes[i].li_attr.full_path);\n                }\n            }\n            this.initChainCallControl({\n                length: paths.length,\n                action: \"adding_datasets\"\n            });\n            if (selection_type === \"folder\") {\n                var full_source = `${options.source}_folder`;\n                this.chainCallImportingFolders({\n                    paths: paths,\n                    preserve_dirs: preserve_dirs,\n                    link_data: link_data,\n                    space_to_tab: space_to_tab,\n                    to_posix_lines: to_posix_lines,\n                    source: full_source,\n                    file_type: file_type,\n                    dbkey: dbkey,\n                    tag_using_filenames: tag_using_filenames\n                });\n            } else if (selection_type === \"file\") {\n                var full_source = `${options.source}_file`;\n                this.chainCallImportingUserdirFiles({\n                    paths: paths,\n                    file_type: file_type,\n                    dbkey: dbkey,\n                    link_data: link_data,\n                    space_to_tab: space_to_tab,\n                    to_posix_lines: to_posix_lines,\n                    source: full_source,\n                    tag_using_filenames: tag_using_filenames\n                });\n            }\n        }\n    },\n\n    fetchAndDisplayHistoryContents: function(history_id) {\n        var history_contents = new mod_library_model.HistoryContents({\n            id: history_id\n        });\n        var self = this;\n        history_contents.fetch({\n            success: function(history_contents) {\n                var history_contents_template = self.templateHistoryContents();\n                self.histories.get(history_id).set({ contents: history_contents });\n                self.modal.$el.find(\"#selected_history_content\").html(\n                    history_contents_template({\n                        history_contents: history_contents.models.reverse()\n                    })\n                );\n                self.modal.$el.find(\".history-import-select-all\").bind(\"click\", () => {\n                    $(\"#selected_history_content [type=checkbox]\").prop(\"checked\", true);\n                });\n                self.modal.$el.find(\".history-import-unselect-all\").bind(\"click\", () => {\n                    $(\"#selected_history_content [type=checkbox]\").prop(\"checked\", false);\n                });\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(response.responseJSON.err_msg);\n                } else {\n                    mod_toastr.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    /**\n     * Import all selected datasets from history into the current folder.\n     */\n    addAllDatasetsFromHistory: function() {\n        var checked_hdas = this.modal.$el.find(\"#selected_history_content\").find(\":checked\");\n        var history_item_ids = []; // can be hda or hdca\n        var history_item_types = [];\n        var items_to_add = [];\n        if (checked_hdas.length < 1) {\n            mod_toastr.info(\"You must select some datasets first.\");\n        } else {\n            this.modal.disableButton(\"Add\");\n            checked_hdas.each(function() {\n                var hid = $(this)\n                    .closest(\"li\")\n                    .data(\"id\");\n                if (hid) {\n                    var item_type = $(this)\n                        .closest(\"li\")\n                        .data(\"name\");\n                    history_item_ids.push(hid);\n                    history_item_types.push(item_type);\n                }\n            });\n            for (var i = history_item_ids.length - 1; i >= 0; i--) {\n                var history_item_id = history_item_ids[i];\n                var folder_item = new mod_library_model.Item();\n                folder_item.url = `${Galaxy.root}api/folders/${this.options.id}/contents`;\n                if (history_item_types[i] === \"collection\") {\n                    folder_item.set({ from_hdca_id: history_item_id });\n                } else {\n                    folder_item.set({ from_hda_id: history_item_id });\n                }\n                items_to_add.push(folder_item);\n            }\n            this.initChainCallControl({\n                length: items_to_add.length,\n                action: \"adding_datasets\"\n            });\n            this.chainCallAddingHdas(items_to_add);\n        }\n    },\n\n    /**\n     * Take array of empty history items and make request for each of them\n     * to create it on server. Update progress in between calls.\n     * @param  {array} history_item_set array of empty history items\n     * @param  {str} history_name     name of the history to import to\n     */\n    chainCallImportingIntoHistory: function(history_item_set, history_name) {\n        var self = this;\n        var popped_item = history_item_set.pop();\n        if (typeof popped_item == \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                mod_toastr.success(\"Selected datasets imported into history. Click this to start analyzing it.\", \"\", {\n                    onclick: function() {\n                        window.location = Galaxy.root;\n                    }\n                });\n            } else if (this.options.chain_call_control.failed_number === this.options.chain_call_control.total_number) {\n                mod_toastr.error(\"There was an error and no datasets were imported into history.\");\n            } else if (this.options.chain_call_control.failed_number < this.options.chain_call_control.total_number) {\n                mod_toastr.warning(\n                    \"Some of the datasets could not be imported into history. Click this to see what was imported.\",\n                    \"\",\n                    {\n                        onclick: function() {\n                            window.location = Galaxy.root;\n                        }\n                    }\n                );\n            }\n            Galaxy.modal.hide();\n            return true;\n        }\n        var promise = $.when(\n            popped_item.save({\n                content: popped_item.content,\n                source: popped_item.source\n            })\n        );\n\n        promise\n            .done(() => {\n                self.updateProgress();\n                self.chainCallImportingIntoHistory(history_item_set, history_name);\n            })\n            .fail(() => {\n                self.options.chain_call_control.failed_number += 1;\n                self.updateProgress();\n                self.chainCallImportingIntoHistory(history_item_set, history_name);\n            });\n    },\n\n    /**\n     * Take the array of paths and create a request for each of them\n     * calling them in chain. Update the progress bar in between each.\n     * @param  {array} paths                    paths relative to user folder on Galaxy\n     * @param  {boolean} tag_using_filenames    add tags to datasets using names of files\n     */\n    chainCallImportingUserdirFiles: function(options) {\n        var that = this;\n        var popped_item = options.paths.pop();\n        if (typeof popped_item === \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                mod_toastr.success(\"Selected files imported into the current folder\");\n                Galaxy.modal.hide();\n            } else {\n                mod_toastr.error(\"An error occured.\");\n            }\n            return true;\n        }\n        var promise = $.when(\n            $.post(\n                `${Galaxy.root}api/libraries/datasets?encoded_folder_id=${that.id}&source=${options.source}&path=${\n                    popped_item\n                }&file_type=${options.file_type}&link_data=${options.link_data}&space_to_tab=${\n                    options.space_to_tab\n                }&to_posix_lines=${options.to_posix_lines}&dbkey=${options.dbkey}&tag_using_filenames=${\n                    options.tag_using_filenames\n                }`\n            )\n        );\n        promise\n            .done(response => {\n                that.updateProgress();\n                that.chainCallImportingUserdirFiles(options);\n            })\n            .fail(() => {\n                that.options.chain_call_control.failed_number += 1;\n                that.updateProgress();\n                that.chainCallImportingUserdirFiles(options);\n            });\n    },\n\n    /**\n     * Take the array of paths and create a request for each of them\n     * calling them in series. Update the progress bar in between each.\n     * @param  {array} paths                    paths relative to Galaxy root folder\n     * @param  {boolean} preserve_dirs          indicates whether to preserve folder structure\n     * @param  {boolean} link_data              copy files to Galaxy or link instead\n     * @param  {boolean} to_posix_lines         convert line endings to POSIX standard\n     * @param  {boolean} space_to_tab           convert spaces to tabs\n     * @param  {str} source                     string representing what type of folder\n     *                                          is the source of import\n     * @param  {boolean} tag_using_filenames    add tags to datasets using names of files\n     */\n    chainCallImportingFolders: function(options) {\n        // TODO need to check which paths to call\n        var that = this;\n        var popped_item = options.paths.pop();\n        if (typeof popped_item == \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                mod_toastr.success(\"Selected folders and their contents imported into the current folder.\");\n                Galaxy.modal.hide();\n            } else {\n                // TODO better error report\n                mod_toastr.error(\"An error occured.\");\n            }\n            return true;\n        }\n        var promise = $.when(\n            $.post(\n                `${Galaxy.root}api/libraries/datasets?encoded_folder_id=${that.id}&source=${options.source}&path=${\n                    popped_item\n                }&preserve_dirs=${options.preserve_dirs}&link_data=${options.link_data}&to_posix_lines=${\n                    options.to_posix_lines\n                }&space_to_tab=${options.space_to_tab}&file_type=${options.file_type}&dbkey=${\n                    options.dbkey\n                }&tag_using_filenames=${options.tag_using_filenames}`\n            )\n        );\n        promise\n            .done(response => {\n                that.updateProgress();\n                that.chainCallImportingFolders(options);\n            })\n            .fail(() => {\n                that.options.chain_call_control.failed_number += 1;\n                that.updateProgress();\n                that.chainCallImportingFolders(options);\n            });\n    },\n\n    /**\n     * Take the array of hdas and create a request for each.\n     * Call them in chain and update progress bar in between each.\n     * @param  {array} hdas_set array of empty hda objects\n     */\n    chainCallAddingHdas: function(hdas_set) {\n        var self = this;\n        this.added_hdas = new mod_library_model.Folder();\n        var popped_item = hdas_set.pop();\n        if (typeof popped_item == \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                mod_toastr.success(\"Selected datasets from history added to the folder\");\n            } else if (this.options.chain_call_control.failed_number === this.options.chain_call_control.total_number) {\n                mod_toastr.error(\"There was an error and no datasets were added to the folder.\");\n            } else if (this.options.chain_call_control.failed_number < this.options.chain_call_control.total_number) {\n                mod_toastr.warning(\"Some of the datasets could not be added to the folder\");\n            }\n            Galaxy.modal.hide();\n            return this.added_hdas;\n        }\n        var promise = $.when(\n            popped_item.save({\n                from_hda_id: popped_item.get(\"from_hda_id\")\n            })\n        );\n\n        promise\n            .done(model => {\n                Galaxy.libraries.folderListView.collection.add(model);\n                self.updateProgress();\n                self.chainCallAddingHdas(hdas_set);\n            })\n            .fail(() => {\n                self.options.chain_call_control.failed_number += 1;\n                self.updateProgress();\n                self.chainCallAddingHdas(hdas_set);\n            });\n    },\n\n    /**\n     * Take the array of lddas, create request for each and\n     * call them in chain. Update progress bar in between each.\n     * @param  {array} lddas_set array of lddas to delete\n     */\n    chainCallDeletingItems: function(items_to_delete) {\n        var self = this;\n        this.deleted_items = new mod_library_model.Folder();\n        var item_to_delete = items_to_delete.pop();\n        if (typeof item_to_delete === \"undefined\") {\n            if (this.options.chain_call_control.failed_number === 0) {\n                mod_toastr.success(\"Selected items were deleted.\");\n            } else if (this.options.chain_call_control.failed_number === this.options.chain_call_control.total_number) {\n                mod_toastr.error(\n                    \"There was an error and no items were deleted. Please make sure you have sufficient permissions.\"\n                );\n            } else if (this.options.chain_call_control.failed_number < this.options.chain_call_control.total_number) {\n                mod_toastr.warning(\n                    \"Some of the items could not be deleted. Please make sure you have sufficient permissions.\"\n                );\n            }\n            Galaxy.modal.hide();\n            return this.deleted_items;\n        }\n        item_to_delete\n            .destroy()\n            .done(item => {\n                Galaxy.libraries.folderListView.collection.remove(item_to_delete.id);\n                self.updateProgress();\n                // add the deleted item to collection, triggers rendering\n                if (Galaxy.libraries.folderListView.options.include_deleted) {\n                    var updated_item = null;\n                    if (item.type === \"folder\" || item.model_class === \"LibraryFolder\") {\n                        updated_item = new mod_library_model.FolderAsModel(item);\n                    } else if (item.type === \"file\" || item.model_class === \"LibraryDataset\") {\n                        updated_item = new mod_library_model.Item(item);\n                    } else {\n                        Galaxy.emit.error(\"Unknown library item type found.\", \"datalibs\");\n                        Galaxy.emit.error(item.type || item.model_class, \"datalibs\");\n                    }\n                    Galaxy.libraries.folderListView.collection.add(updated_item);\n                }\n                self.chainCallDeletingItems(items_to_delete);\n            })\n            .fail(() => {\n                self.options.chain_call_control.failed_number += 1;\n                self.updateProgress();\n                self.chainCallDeletingItems(items_to_delete);\n            });\n    },\n\n    /**\n     * Handles the click on 'show deleted' checkbox\n     */\n    checkIncludeDeleted: function(event) {\n        if (event.target.checked) {\n            Galaxy.libraries.folderListView.fetchFolder({\n                include_deleted: true\n            });\n        } else {\n            Galaxy.libraries.folderListView.fetchFolder({\n                include_deleted: false\n            });\n        }\n    },\n\n    /**\n     * Delete the selected items. Atomic. One by one.\n     */\n    deleteSelectedItems: function() {\n        var dataset_ids = [];\n        var folder_ids = [];\n        var $checkedValues = this.findCheckedRows();\n        if ($checkedValues.length === 0) {\n            mod_toastr.info(\"You must select at least one item for deletion.\");\n        } else {\n            var template = this.templateDeletingItemsProgressBar();\n            this.modal = Galaxy.modal;\n            this.modal.show({\n                closing_events: true,\n                title: \"Deleting selected items\",\n                body: template({}),\n                buttons: {\n                    Close: function() {\n                        Galaxy.modal.hide();\n                    }\n                }\n            });\n            // init the control counters\n            this.options.chain_call_control.total_number = 0;\n            this.options.chain_call_control.failed_number = 0;\n            $checkedValues.each(function() {\n                var row_id = $(this)\n                    .closest(\"tr\")\n                    .data(\"id\");\n                if (row_id !== undefined) {\n                    if (row_id.substring(0, 1) == \"F\") {\n                        folder_ids.push(row_id);\n                    } else {\n                        dataset_ids.push(row_id);\n                    }\n                }\n            });\n            // init the progress bar\n            var items_total = dataset_ids.length + folder_ids.length;\n            this.progressStep = 100 / items_total;\n            this.progress = 0;\n\n            // prepare the dataset items to be added\n            var items_to_delete = [];\n            for (var i = dataset_ids.length - 1; i >= 0; i--) {\n                var dataset = new mod_library_model.Item({\n                    id: dataset_ids[i]\n                });\n                items_to_delete.push(dataset);\n            }\n            for (var i = folder_ids.length - 1; i >= 0; i--) {\n                var folder = new mod_library_model.FolderAsModel({\n                    id: folder_ids[i]\n                });\n                items_to_delete.push(folder);\n            }\n\n            this.options.chain_call_control.total_number = items_total;\n            // call the recursive function to call ajax one after each other (request FIFO queue)\n            this.chainCallDeletingItems(items_to_delete);\n        }\n    },\n\n    showLocInfo: function() {\n        var library = null;\n        var that = this;\n        if (Galaxy.libraries.libraryListView !== null) {\n            library = Galaxy.libraries.libraryListView.collection.get(this.options.parent_library_id);\n            this.showLocInfoModal(library);\n        } else {\n            library = new mod_library_model.Library({\n                id: this.options.parent_library_id\n            });\n            library.fetch({\n                success: function() {\n                    that.showLocInfoModal(library);\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                }\n            });\n        }\n    },\n\n    showLocInfoModal: function(library) {\n        var that = this;\n        var template = this.templateLocInfoInModal();\n        this.modal = Galaxy.modal;\n        this.modal.show({\n            closing_events: true,\n            title: \"Location Details\",\n            body: template({ library: library, options: that.options }),\n            buttons: {\n                Close: function() {\n                    Galaxy.modal.hide();\n                }\n            }\n        });\n    },\n\n    showImportModal: function(options) {\n        switch (options.source) {\n            case \"history\":\n                this.addFilesFromHistoryModal();\n                break;\n            case \"importdir\":\n                this.importFilesFromGalaxyFolderModal({\n                    source: \"importdir\"\n                });\n                break;\n            case \"path\":\n                this.importFilesFromPathModal();\n                break;\n            case \"userdir\":\n                this.importFilesFromGalaxyFolderModal({\n                    source: \"userdir\"\n                });\n                break;\n            default:\n                Galaxy.libraries.library_router.back();\n                mod_toastr.error(\"Invalid import source.\");\n                break;\n        }\n    },\n\n    /**\n     * Show user the prompt to change the number of items shown on page.\n     */\n    showPageSizePrompt: function(e) {\n        e.preventDefault();\n        var folder_page_size = prompt(\n            \"How many items per page do you want to see?\",\n            Galaxy.libraries.preferences.get(\"folder_page_size\")\n        );\n        if (folder_page_size != null && folder_page_size == parseInt(folder_page_size)) {\n            Galaxy.libraries.preferences.set({\n                folder_page_size: parseInt(folder_page_size)\n            });\n            Galaxy.libraries.folderListView.render({\n                id: this.options.id,\n                show_page: 1\n            });\n        }\n    },\n\n    findCheckedRows: function() {\n        return $(\"#folder_list_body\").find(\":checked\");\n    },\n\n    templateToolBar: function() {\n        return _.template(\n            [\n                // container start\n                '<div class=\"library_style_container\">',\n                // toolbar start\n                '<div id=\"library_toolbar\">',\n                '<form class=\"form-inline\" role=\"form\">',\n                \"<span><strong>DATA LIBRARIES</strong></span>\",\n                // paginator will append here\n                '<span class=\"library-paginator folder-paginator\"></span>',\n                '<div class=\"checkbox toolbar-item logged-dataset-manipulation\" style=\"height: 20px; display:none;\">',\n                \"<label>\",\n                '<input id=\"include_deleted_datasets_chk\" type=\"checkbox\">include deleted</input>',\n                \"</label>\",\n                \"</div>\",\n                '<button style=\"display:none;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Create New Folder\" id=\"toolbtn_create_folder\" class=\"btn btn-default primary-button add-library-items toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-plus\"></span><span class=\"fa fa-folder\"></span>',\n                \"</button>\",\n                \"<% if(mutiple_add_dataset_options) { %>\",\n                '<div class=\"btn-group add-library-items\" style=\"display:none;\">',\n                '<button title=\"Add Datasets to Current Folder\" id=\"\" type=\"button\" class=\"primary-button dropdown-toggle\" data-toggle=\"dropdown\">',\n                '<span class=\"fa fa-plus\"></span><span class=\"fa fa-file\"></span><span class=\"caret\"></span>',\n                \"</button>\",\n                '<ul class=\"dropdown-menu\" role=\"menu\">',\n                '<li><a href=\"#folders/<%= id %>/import/history\"> from History</a></li>',\n                \"<% if(Galaxy.config.user_library_import_dir !== null) { %>\",\n                '<li><a href=\"#folders/<%= id %>/import/userdir\"> from User Directory</a></li>',\n                \"<% } %>\",\n                \"<% if(Galaxy.config.allow_library_path_paste) { %>\",\n                '<li class=\"divider\"></li>',\n                '<li class=\"dropdown-header\">Admins only</li>',\n                \"<% if(Galaxy.config.library_import_dir !== null) { %>\",\n                '<li><a href=\"#folders/<%= id %>/import/importdir\">from Import Directory</a></li>',\n                \"<% } %>\",\n                \"<% if(Galaxy.config.allow_library_path_paste) { %>\",\n                '<li><a href=\"#folders/<%= id %>/import/path\">from Path</a></li>',\n                \"<% } %>\",\n                \"<% } %>\",\n                \"</ul>\",\n                \"</div>\",\n                \"<% } else { %>\",\n                '<a  data-placement=\"top\" title=\"Add Datasets to Current Folder\" style=\"display:none;\" class=\"btn btn-default add-library-items\" href=\"#folders/<%= id %>/import/history\" role=\"button\">',\n                '<span class=\"fa fa-plus\"></span><span class=\"fa fa-file\"></span>',\n                \"</a>\",\n                \"<% } %>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import selected datasets into history\" id=\"toolbtn_bulk_import\" class=\"primary-button dataset-manipulation\" style=\"margin-left: 0.5em; display:none;\" type=\"button\">',\n                '<span class=\"fa fa-book\"></span>',\n                \"&nbsp;to History\",\n                \"</button>\",\n                '<div class=\"btn-group dataset-manipulation\" style=\"margin-left: 0.5em; display:none; \">',\n                '<button title=\"Download selected items as archive\" type=\"button\" class=\"primary-button dropdown-toggle\" data-toggle=\"dropdown\">',\n                '<span class=\"fa fa-download\"></span> Download <span class=\"caret\"></span>',\n                \"</button>\",\n                '<ul class=\"dropdown-menu\" role=\"menu\">',\n                '<li><a href=\"#/folders/<%= id %>/download/tgz\">.tar.gz</a></li>',\n                '<li><a href=\"#/folders/<%= id %>/download/tbz\">.tar.bz</a></li>',\n                '<li><a href=\"#/folders/<%= id %>/download/zip\">.zip</a></li>',\n                \"</ul>\",\n                \"</div>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Mark selected items deleted\" id=\"toolbtn_bulk_delete\" class=\"primary-button logged-dataset-manipulation\" style=\"margin-left: 0.5em; display:none; \" type=\"button\">',\n                '<span class=\"fa fa-times\"></span> Delete</button>',\n                '<button data-id=\"<%- id %>\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Show location details\" class=\"primary-button toolbtn-show-locinfo\" style=\"margin-left: 0.5em;\" type=\"button\">',\n                '<span class=\"fa fa-info-circle\"></span>',\n                \"&nbsp;Details\",\n                \"</button>\",\n                '<span class=\"help-button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"See this screen annotated\">',\n                '<a href=\"https://galaxyproject.org/data-libraries/screen/folder-contents/\" target=\"_blank\">',\n                '<button class=\"primary-button\" type=\"button\">',\n                '<span class=\"fa fa-question-circle\"></span>',\n                \"&nbsp;Help\",\n                \"</button>\",\n                \"</a>\",\n                \"</span>\",\n                \"</div>\",\n                \"</form>\",\n                // toolbar end\n                '<div id=\"folder_items_element\">',\n                \"</div>\",\n                // paginator will append here\n                '<div class=\"folder-paginator paginator-bottom\"></div>',\n                // container end\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateLocInfoInModal: function() {\n        return _.template(\n            [\n                \"<div>\",\n                '<table class=\"grid table table-condensed\">',\n                \"<thead>\",\n                '<th style=\"width: 25%;\">library</th>',\n                \"<th></th>\",\n                \"</thead>\",\n                \"<tbody>\",\n                \"<tr>\",\n                \"<td>name</td>\",\n                '<td><%- library.get(\"name\") %></td>',\n                \"</tr>\",\n                '<% if(library.get(\"description\") !== \"\") { %>',\n                \"<tr>\",\n                \"<td>description</td>\",\n                '<td><%- library.get(\"description\") %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if(library.get(\"synopsis\") !== \"\") { %>',\n                \"<tr>\",\n                \"<td>synopsis</td>\",\n                '<td><%- library.get(\"synopsis\") %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if(library.get(\"create_time_pretty\") !== \"\") { %>',\n                \"<tr>\",\n                \"<td>created</td>\",\n                '<td><span title=\"<%- library.get(\"create_time\") %>\"><%- library.get(\"create_time_pretty\") %></span></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"<tr>\",\n                \"<td>id</td>\",\n                '<td><%- library.get(\"id\") %></td>',\n                \"</tr>\",\n                \"</tbody>\",\n                \"</table>\",\n                '<table class=\"grid table table-condensed\">',\n                \"<thead>\",\n                '<th style=\"width: 25%;\">folder</th>',\n                \"<th></th>\",\n                \"</thead>\",\n                \"<tbody>\",\n                \"<tr>\",\n                \"<td>name</td>\",\n                \"<td><%- options.folder_name %></td>\",\n                \"</tr>\",\n                '<% if(options.folder_description !== \"\") { %>',\n                \"<tr>\",\n                \"<td>description</td>\",\n                \"<td><%- options.folder_description %></td>\",\n                \"</tr>\",\n                \"<% } %>\",\n                \"<tr>\",\n                \"<td>id</td>\",\n                \"<td><%- options.id %></td>\",\n                \"</tr>\",\n                \"</tbody>\",\n                \"</table>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateNewFolderInModal: function() {\n        return _.template(\n            [\n                '<div id=\"new_folder_modal\">',\n                \"<form>\",\n                '<input type=\"text\" name=\"Name\" value=\"\" placeholder=\"Name\" autofocus>',\n                '<input type=\"text\" name=\"Description\" value=\"\" placeholder=\"Description\">',\n                \"</form>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateBulkImportInModal: function() {\n        return _.template(\n            [\n                \"<div>\",\n                '<div class=\"library-modal-item\">',\n                \"Select history: \",\n                '<select id=\"dataset_import_bulk\" name=\"dataset_import_bulk\" style=\"width:50%; margin-bottom: 1em; \" autofocus>',\n                \"<% _.each(histories, function(history) { %>\",\n                '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n                \"<% }); %>\",\n                \"</select>\",\n                \"</div>\",\n                '<div class=\"library-modal-item\">',\n                \"or create new: \",\n                '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">',\n                \"</input>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateImportIntoHistoryProgressBar: function() {\n        return _.template(\n            [\n                '<div class=\"import_text\">',\n                \"Importing selected items to history <b><%= _.escape(history_name) %></b>\",\n                \"</div>\",\n                '<div class=\"progress\">',\n                '<div class=\"progress-bar progress-bar-import\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 00%;\">',\n                '<span class=\"completion_span\">0% Complete</span>',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateAddingDatasetsProgressBar: function() {\n        return _.template(\n            [\n                '<div class=\"import_text\">',\n                \"Adding selected datasets to library folder <b><%= _.escape(folder_name) %></b>\",\n                \"</div>\",\n                '<div class=\"progress\">',\n                '<div class=\"progress-bar progress-bar-import\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 00%;\">',\n                '<span class=\"completion_span\">0% Complete</span>',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateDeletingItemsProgressBar: function() {\n        return _.template(\n            [\n                '<div class=\"import_text\">',\n                \"</div>\",\n                '<div class=\"progress\">',\n                '<div class=\"progress-bar progress-bar-import\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 00%;\">',\n                '<span class=\"completion_span\">0% Complete</span>',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateBrowserModal: function() {\n        return _.template(\n            [\n                '<div id=\"file_browser_modal\">',\n                '<div class=\"alert alert-info jstree-files-message\">All files you select will be imported into the current folder ignoring their folder structure.</div>',\n                '<div class=\"alert alert-info jstree-folders-message\" style=\"display:none;\">All files within the selected folders and their subfolders will be imported into the current folder.</div>',\n                '<div style=\"margin-bottom:1em;\">',\n                '<label title=\"Switch to selecting files\" class=\"radio-inline import-type-switch\">',\n                '<input type=\"radio\" name=\"jstree-radio\" value=\"jstree-disable-folders\" checked=\"checked\"> Choose Files',\n                \"</label>\",\n                '<label title=\"Switch to selecting folders\" class=\"radio-inline import-type-switch\">',\n                '<input type=\"radio\" name=\"jstree-radio\" value=\"jstree-disable-files\"> Choose Folders',\n                \"</label>\",\n                \"</div>\",\n                '<div style=\"margin-bottom:1em;\">',\n                '<label class=\"checkbox-inline jstree-preserve-structure\" style=\"display:none;\">',\n                '<input class=\"preserve-checkbox\" type=\"checkbox\" value=\"preserve_directory_structure\">',\n                \"Preserve directory structure\",\n                \"</label>\",\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"link-checkbox\" type=\"checkbox\" value=\"link_files\">',\n                \"Link files instead of copying\",\n                \"</label>\",\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"posix-checkbox\" type=\"checkbox\" value=\"to_posix_lines\" checked=\"checked\">',\n                \"Convert line endings to POSIX\",\n                \"</label>\",\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"spacetab-checkbox\" type=\"checkbox\" value=\"space_to_tab\">',\n                \"Convert spaces to tabs\",\n                \"</label>\",\n                \"</div>\",\n                '<button title=\"Select all files\" type=\"button\" class=\"button primary-button libimport-select-all\">',\n                \"Select all\",\n                \"</button>\",\n                '<button title=\"Select no files\" type=\"button\" class=\"button primary-button libimport-select-none\">',\n                \"Unselect all\",\n                \"</button>\",\n                \"<hr />\",\n                // append jstree object here\n                '<div id=\"jstree_browser\">',\n                \"</div>\",\n                \"<hr />\",\n                \"<p>You can set extension type and genome for all imported datasets at once:</p>\",\n                \"<div>\",\n                'Type: <span id=\"library_extension_select\" class=\"library-extension-select\" />',\n                'Genome: <span id=\"library_genome_select\" class=\"library-genome-select\" />',\n                \"</div>\",\n                \"<br>\",\n                \"<div>\",\n                '<label class=\"checkbox-inline tag-files\">',\n                \"Tag datasets based on file names.\",\n                '<input class=\"tag-files\" type=\"checkbox\" value=\"tag_using_filenames\" checked=\"checked\">',\n                \"</label>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateImportPathModal: function() {\n        return _.template(\n            [\n                '<div id=\"file_browser_modal\">',\n                '<div class=\"alert alert-info jstree-folders-message\">All files within the given folders and their subfolders will be imported into the current folder.</div>',\n                '<div style=\"margin-bottom: 0.5em;\">',\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"preserve-checkbox\" type=\"checkbox\" value=\"preserve_directory_structure\">',\n                \"Preserve directory structure\",\n                \"</label>\",\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"link-checkbox\" type=\"checkbox\" value=\"link_files\">',\n                \"Link files instead of copying\",\n                \"</label>\",\n                \"<br>\",\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"posix-checkbox\" type=\"checkbox\" value=\"to_posix_lines\" checked=\"checked\">',\n                \"Convert line endings to POSIX\",\n                \"</label>\",\n                '<label class=\"checkbox-inline\">',\n                '<input class=\"spacetab-checkbox\" type=\"checkbox\" value=\"space_to_tab\">',\n                \"Convert spaces to tabs\",\n                \"</label>\",\n                \"</div>\",\n                '<textarea id=\"import_paths\" class=\"form-control\" rows=\"5\" placeholder=\"Absolute paths (or paths relative to Galaxy root) separated by newline\" autofocus></textarea>',\n                \"<hr />\",\n                \"<p>You can set extension type and genome for all imported datasets at once:</p>\",\n                \"<div>\",\n                'Type: <span id=\"library_extension_select\" class=\"library-extension-select\" />',\n                'Genome: <span id=\"library_genome_select\" class=\"library-genome-select\" />',\n                \"</div>\",\n                \"<div>\",\n                '<label class=\"checkbox-inline tag-files\">',\n                \"Tag datasets based on file names.\",\n                '<input class=\"tag-files\" type=\"checkbox\" value=\"tag_using_filenames\" checked=\"checked\">',\n                \"</label>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateAddFilesFromHistory: function() {\n        return _.template(\n            [\n                '<div id=\"add_files_modal\">',\n                \"<div>\",\n                \"1.&nbsp;Select history:&nbsp;\",\n                '<select id=\"dataset_add_bulk\" name=\"dataset_add_bulk\" style=\"width:66%; \"> ',\n                \"<% _.each(histories, function(history) { %>\", //history select box\n                '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n                \"<% }); %>\",\n                \"</select>\",\n                \"</div>\",\n                \"<br/>\",\n                '<div id=\"selected_history_content\">',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateHistoryContents: function() {\n        return _.template(\n            [\n                \"<p>2.&nbsp;Choose the datasets to import:</p>\",\n                \"<div>\",\n                '<button title=\"Select all datasets\" type=\"button\" class=\"button primary-button history-import-select-all\">',\n                \"Select all\",\n                \"</button>\",\n                '<button title=\"Select all datasets\" type=\"button\" class=\"button primary-button history-import-unselect-all\">',\n                \"Unselect all\",\n                \"</button>\",\n                \"</div>\",\n                \"<br>\",\n                \"<ul>\",\n                \"<% _.each(history_contents, function(history_item) { %>\",\n                '<% if (history_item.get(\"deleted\") != true ) { %>',\n                '<% var item_name = history_item.get(\"name\") %>',\n                '<% if (history_item.get(\"type\") === \"collection\") { %>',\n                '<% var collection_type = history_item.get(\"collection_type\") %>',\n                '<% if (collection_type === \"list\") { %>',\n                '<li data-id=\"<%= _.escape(history_item.get(\"id\")) %>\" data-name=\"<%= _.escape(history_item.get(\"type\")) %>\">',\n                \"<label>\",\n                '<label title=\"<%= _.escape(item_name) %>\">',\n                '<input style=\"margin: 0;\" type=\"checkbox\"> <%= _.escape(history_item.get(\"hid\")) %>: ',\n                '<%= item_name.length > 75 ? _.escape(\"...\".concat(item_name.substr(-75))) : _.escape(item_name) %> (Dataset Collection)',\n                \"</label>\",\n                \"</li>\",\n                \"<% } else { %>\",\n                '<li><input style=\"margin: 0;\" type=\"checkbox\" onclick=\"return false;\" disabled=\"disabled\">',\n                '<span title=\"You can convert this collection into a collection of type list using the Collection Tools\">',\n                '<%= _.escape(history_item.get(\"hid\")) %>: ',\n                '<%= item_name.length > 75 ? _.escape(\"...\".concat(item_name.substr(-75))) : _.escape(item_name) %> (Dataset Collection of type <%= _.escape(collection_type) %> not supported.)',\n                \"</span>\",\n                \"</li>\",\n                \"<% } %>\",\n                '<% } else if (history_item.get(\"visible\") === true && history_item.get(\"state\") === \"ok\") { %>',\n                '<li data-id=\"<%= _.escape(history_item.get(\"id\")) %>\" data-name=\"<%= _.escape(history_item.get(\"type\")) %>\">',\n                '<label title=\"<%= _.escape(item_name) %>\">',\n                '<input style=\"margin: 0;\" type=\"checkbox\"> <%= _.escape(history_item.get(\"hid\")) %>: ',\n                '<%= item_name.length > 75 ? _.escape(\"...\".concat(item_name.substr(-75))) : _.escape(item_name) %>',\n                \"</label>\",\n                \"</li>\",\n                \"<% } %>\",\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ul>\"\n            ].join(\"\")\n        );\n    },\n\n    templatePaginator: function() {\n        return _.template(\n            [\n                '<ul class=\"pagination pagination-sm\">',\n                \"<% if ( ( show_page - 1 ) > 0 ) { %>\",\n                \"<% if ( ( show_page - 1 ) > page_count ) { %>\", // we are on higher page than total page count\n                '<li><a href=\"#folders/<%= id %>/page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>',\n                '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/<% print( show_page ) %>\"><% print( show_page - 1 ) %></a></li>',\n                \"<% } else { %>\",\n                '<li><a href=\"#folders/<%= id %>/page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>',\n                '<li><a href=\"#folders/<%= id %>/page/<% print( show_page - 1 ) %>\"><% print( show_page - 1 ) %></a></li>',\n                \"<% } %>\",\n                \"<% } else { %>\", // we are on the first page\n                '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/1\"><span class=\"fa fa-angle-double-left\"></span></a></li>',\n                '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/<% print( show_page ) %>\"><% print( show_page - 1 ) %></a></li>',\n                \"<% } %>\",\n                '<li class=\"active\">',\n                '<a href=\"#folders/<%= id %>/page/<% print( show_page ) %>\"><% print( show_page ) %></a>',\n                \"</li>\",\n                \"<% if ( ( show_page ) < page_count ) { %>\",\n                '<li><a href=\"#folders/<%= id %>/page/<% print( show_page + 1 ) %>\"><% print( show_page + 1 ) %></a></li>',\n                '<li><a href=\"#folders/<%= id %>/page/<% print( page_count ) %>\"><span class=\"fa fa-angle-double-right\"></span></a></li>',\n                \"<% } else { %>\",\n                '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/<% print( show_page  ) %>\"><% print( show_page + 1 ) %></a></li>',\n                '<li class=\"disabled\"><a href=\"#folders/<%= id %>/page/<% print( page_count ) %>\"><span class=\"fa fa-angle-double-right\"></span></a></li>',\n                \"<% } %>\",\n                \"</ul>\",\n                \"<span>\",\n                ' <%- items_shown %> items shown <a href=\"\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"currently <%- folder_page_size %> per page\" class=\"page_size_prompt\">(change)</a>',\n                \"</span>\",\n                \"<span>\",\n                \" <%- total_items_count %> total\",\n                \"</span>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    FolderToolbarView: FolderToolbarView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/library/library-foldertoolbar-view.js","/*globals jQuery, define, exports, require, window, document */\n(function (factory) {\n\t\"use strict\";\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['jquery'], factory);\n\t}\n\telse if(typeof exports === 'object') {\n\t\tfactory(require('jquery'));\n\t}\n\telse {\n\t\tfactory(jQuery);\n\t}\n}(function ($, undefined) {\n\t\"use strict\";\n/*!\n * jsTree 3.0.3\n * http://jstree.com/\n *\n * Copyright (c) 2014 Ivan Bozhanov (http://vakata.com)\n *\n * Licensed same as jquery - under the terms of the MIT License\n *   http://www.opensource.org/licenses/mit-license.php\n */\n/*!\n * if using jslint please allow for the jQuery global and use following options: \n * jslint: browser: true, ass: true, bitwise: true, continue: true, nomen: true, plusplus: true, regexp: true, unparam: true, todo: true, white: true\n */\n\n\t// prevent another load? maybe there is a better way?\n\tif($.jstree) {\n\t\treturn;\n\t}\n\n\t/**\n\t * ### jsTree core functionality\n\t */\n\n\t// internal variables\n\tvar instance_counter = 0,\n\t\tccp_node = false,\n\t\tccp_mode = false,\n\t\tccp_inst = false,\n\t\tthemes_loaded = [],\n\t\tsrc = $('script:last').attr('src'),\n\t\t_d = document, _node = _d.createElement('LI'), _temp1, _temp2;\n\n\t_node.setAttribute('role', 'treeitem');\n\t_temp1 = _d.createElement('I');\n\t_temp1.className = 'jstree-icon jstree-ocl';\n\t_node.appendChild(_temp1);\n\t_temp1 = _d.createElement('A');\n\t_temp1.className = 'jstree-anchor';\n\t_temp1.setAttribute('href','#');\n\t_temp2 = _d.createElement('I');\n\t_temp2.className = 'jstree-icon jstree-themeicon';\n\t_temp1.appendChild(_temp2);\n\t_node.appendChild(_temp1);\n\t_temp1 = _temp2 = null;\n\n\n\t/**\n\t * holds all jstree related functions and variables, including the actual class and methods to create, access and manipulate instances.\n\t * @name $.jstree\n\t */\n\t$.jstree = {\n\t\t/** \n\t\t * specifies the jstree version in use\n\t\t * @name $.jstree.version\n\t\t */\n\t\tversion : '3.0.3',\n\t\t/**\n\t\t * holds all the default options used when creating new instances\n\t\t * @name $.jstree.defaults\n\t\t */\n\t\tdefaults : {\n\t\t\t/**\n\t\t\t * configure which plugins will be active on an instance. Should be an array of strings, where each element is a plugin name. The default is `[]`\n\t\t\t * @name $.jstree.defaults.plugins\n\t\t\t */\n\t\t\tplugins : []\n\t\t},\n\t\t/**\n\t\t * stores all loaded jstree plugins (used internally)\n\t\t * @name $.jstree.plugins\n\t\t */\n\t\tplugins : {},\n\t\tpath : src && src.indexOf('/') !== -1 ? src.replace(/\\/[^\\/]+$/,'') : '',\n\t\tidregex : /[\\\\:&!^|()\\[\\]<>@*'+~#\";.,=\\- \\/${}%]/g\n\t};\n\t/**\n\t * creates a jstree instance\n\t * @name $.jstree.create(el [, options])\n\t * @param {DOMElement|jQuery|String} el the element to create the instance on, can be jQuery extended or a selector\n\t * @param {Object} options options for this instance (extends `$.jstree.defaults`)\n\t * @return {jsTree} the new instance\n\t */\n\t$.jstree.create = function (el, options) {\n\t\tvar tmp = new $.jstree.core(++instance_counter),\n\t\t\topt = options;\n\t\toptions = $.extend(true, {}, $.jstree.defaults, options);\n\t\tif(opt && opt.plugins) {\n\t\t\toptions.plugins = opt.plugins;\n\t\t}\n\t\t$.each(options.plugins, function (i, k) {\n\t\t\tif(i !== 'core') {\n\t\t\t\ttmp = tmp.plugin(k, options[k]);\n\t\t\t}\n\t\t});\n\t\ttmp.init(el, options);\n\t\treturn tmp;\n\t};\n\t/**\n\t * the jstree class constructor, used only internally\n\t * @private\n\t * @name $.jstree.core(id)\n\t * @param {Number} id this instance's index\n\t */\n\t$.jstree.core = function (id) {\n\t\tthis._id = id;\n\t\tthis._cnt = 0;\n\t\tthis._wrk = null;\n\t\tthis._data = {\n\t\t\tcore : {\n\t\t\t\tthemes : {\n\t\t\t\t\tname : false,\n\t\t\t\t\tdots : false,\n\t\t\t\t\ticons : false\n\t\t\t\t},\n\t\t\t\tselected : [],\n\t\t\t\tlast_error : {},\n\t\t\t\tworking : false,\n\t\t\t\tworker_queue : []\n\t\t\t}\n\t\t};\n\t};\n\t/**\n\t * get a reference to an existing instance\n\t *\n\t * __Examples__\n\t *\n\t *\t// provided a container with an ID of \"tree\", and a nested node with an ID of \"branch\"\n\t *\t// all of there will return the same instance\n\t *\t$.jstree.reference('tree');\n\t *\t$.jstree.reference('#tree');\n\t *\t$.jstree.reference($('#tree'));\n\t *\t$.jstree.reference(document.getElementByID('tree'));\n\t *\t$.jstree.reference('branch');\n\t *\t$.jstree.reference('#branch');\n\t *\t$.jstree.reference($('#branch'));\n\t *\t$.jstree.reference(document.getElementByID('branch'));\n\t *\n\t * @name $.jstree.reference(needle)\n\t * @param {DOMElement|jQuery|String} needle\n\t * @return {jsTree|null} the instance or `null` if not found\n\t */\n\t$.jstree.reference = function (needle) {\n\t\tvar tmp = null,\n\t\t\tobj = null;\n\t\tif(needle && needle.id) { needle = needle.id; }\n\n\t\tif(!obj || !obj.length) {\n\t\t\ttry { obj = $(needle); } catch (ignore) { }\n\t\t}\n\t\tif(!obj || !obj.length) {\n\t\t\ttry { obj = $('#' + needle.replace($.jstree.idregex,'\\\\$&')); } catch (ignore) { }\n\t\t}\n\t\tif(obj && obj.length && (obj = obj.closest('.jstree')).length && (obj = obj.data('jstree'))) {\n\t\t\ttmp = obj;\n\t\t}\n\t\telse {\n\t\t\t$('.jstree').each(function () {\n\t\t\t\tvar inst = $(this).data('jstree');\n\t\t\t\tif(inst && inst._model.data[needle]) {\n\t\t\t\t\ttmp = inst;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn tmp;\n\t};\n\t/**\n\t * Create an instance, get an instance or invoke a command on a instance. \n\t * \n\t * If there is no instance associated with the current node a new one is created and `arg` is used to extend `$.jstree.defaults` for this new instance. There would be no return value (chaining is not broken).\n\t * \n\t * If there is an existing instance and `arg` is a string the command specified by `arg` is executed on the instance, with any additional arguments passed to the function. If the function returns a value it will be returned (chaining could break depending on function).\n\t * \n\t * If there is an existing instance and `arg` is not a string the instance itself is returned (similar to `$.jstree.reference`).\n\t * \n\t * In any other case - nothing is returned and chaining is not broken.\n\t *\n\t * __Examples__\n\t *\n\t *\t$('#tree1').jstree(); // creates an instance\n\t *\t$('#tree2').jstree({ plugins : [] }); // create an instance with some options\n\t *\t$('#tree1').jstree('open_node', '#branch_1'); // call a method on an existing instance, passing additional arguments\n\t *\t$('#tree2').jstree(); // get an existing instance (or create an instance)\n\t *\t$('#tree2').jstree(true); // get an existing instance (will not create new instance)\n\t *\t$('#branch_1').jstree().select_node('#branch_1'); // get an instance (using a nested element and call a method)\n\t *\n\t * @name $().jstree([arg])\n\t * @param {String|Object} arg\n\t * @return {Mixed}\n\t */\n\t$.fn.jstree = function (arg) {\n\t\t// check for string argument\n\t\tvar is_method\t= (typeof arg === 'string'),\n\t\t\targs\t\t= Array.prototype.slice.call(arguments, 1),\n\t\t\tresult\t\t= null;\n\t\tthis.each(function () {\n\t\t\t// get the instance (if there is one) and method (if it exists)\n\t\t\tvar instance = $.jstree.reference(this),\n\t\t\t\tmethod = is_method && instance ? instance[arg] : null;\n\t\t\t// if calling a method, and method is available - execute on the instance\n\t\t\tresult = is_method && method ?\n\t\t\t\tmethod.apply(instance, args) :\n\t\t\t\tnull;\n\t\t\t// if there is no instance and no method is being called - create one\n\t\t\tif(!instance && !is_method && (arg === undefined || $.isPlainObject(arg))) {\n\t\t\t\t$(this).data('jstree', new $.jstree.create(this, arg));\n\t\t\t}\n\t\t\t// if there is an instance and no method is called - return the instance\n\t\t\tif( (instance && !is_method) || arg === true ) {\n\t\t\t\tresult = instance || false;\n\t\t\t}\n\t\t\t// if there was a method call which returned a result - break and return the value\n\t\t\tif(result !== null && result !== undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\t// if there was a method call with a valid return value - return that, otherwise continue the chain\n\t\treturn result !== null && result !== undefined ?\n\t\t\tresult : this;\n\t};\n\t/**\n\t * used to find elements containing an instance\n\t *\n\t * __Examples__\n\t *\n\t *\t$('div:jstree').each(function () {\n\t *\t\t$(this).jstree('destroy');\n\t *\t});\n\t *\n\t * @name $(':jstree')\n\t * @return {jQuery}\n\t */\n\t$.expr[':'].jstree = $.expr.createPseudo(function(search) {\n\t\treturn function(a) {\n\t\t\treturn $(a).hasClass('jstree') &&\n\t\t\t\t$(a).data('jstree') !== undefined;\n\t\t};\n\t});\n\n\t/**\n\t * stores all defaults for the core\n\t * @name $.jstree.defaults.core\n\t */\n\t$.jstree.defaults.core = {\n\t\t/**\n\t\t * data configuration\n\t\t * \n\t\t * If left as `false` the HTML inside the jstree container element is used to populate the tree (that should be an unordered list with list items).\n\t\t *\n\t\t * You can also pass in a HTML string or a JSON array here.\n\t\t * \n\t\t * It is possible to pass in a standard jQuery-like AJAX config and jstree will automatically determine if the response is JSON or HTML and use that to populate the tree. \n\t\t * In addition to the standard jQuery ajax options here you can suppy functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node is being loaded, the return value of those functions will be used.\n\t\t * \n\t\t * The last option is to specify a function, that function will receive the node being loaded as argument and a second param which is a function which should be called with the result.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t// AJAX\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : {\n\t\t *\t\t\t\t'url' : '/get/children/',\n\t\t *\t\t\t\t'data' : function (node) {\n\t\t *\t\t\t\t\treturn { 'id' : node.id };\n\t\t *\t\t\t\t}\n\t\t *\t\t\t}\n\t\t *\t\t});\n\t\t *\n\t\t *\t// direct data\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : [\n\t\t *\t\t\t\t'Simple root node',\n\t\t *\t\t\t\t{\n\t\t *\t\t\t\t\t'id' : 'node_2',\n\t\t *\t\t\t\t\t'text' : 'Root node with options',\n\t\t *\t\t\t\t\t'state' : { 'opened' : true, 'selected' : true },\n\t\t *\t\t\t\t\t'children' : [ { 'text' : 'Child 1' }, 'Child 2']\n\t\t *\t\t\t\t}\n\t\t *\t\t\t]\n\t\t *\t\t});\n\t\t *\t\n\t\t *\t// function\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : function (obj, callback) {\n\t\t *\t\t\t\tcallback.call(this, ['Root 1', 'Root 2']);\n\t\t *\t\t\t}\n\t\t *\t\t});\n\t\t * \n\t\t * @name $.jstree.defaults.core.data\n\t\t */\n\t\tdata\t\t\t: false,\n\t\t/**\n\t\t * configure the various strings used throughout the tree\n\t\t *\n\t\t * You can use an object where the key is the string you need to replace and the value is your replacement.\n\t\t * Another option is to specify a function which will be called with an argument of the needed string and should return the replacement.\n\t\t * If left as `false` no replacement is made.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'strings' : {\n\t\t *\t\t\t\t'Loading ...' : 'Please wait ...'\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\t});\n\t\t *\n\t\t * @name $.jstree.defaults.core.strings\n\t\t */\n\t\tstrings\t\t\t: false,\n\t\t/**\n\t\t * determines what happens when a user tries to modify the structure of the tree\n\t\t * If left as `false` all operations like create, rename, delete, move or copy are prevented.\n\t\t * You can set this to `true` to allow all interactions or use a function to have better control.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'check_callback' : function (operation, node, node_parent, node_position, more) {\n\t\t *\t\t\t\t// operation can be 'create_node', 'rename_node', 'delete_node', 'move_node' or 'copy_node'\n\t\t *\t\t\t\t// in case of 'rename_node' node_position is filled with the new node name\n\t\t *\t\t\t\treturn operation === 'rename_node' ? true : false;\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\t});\n\t\t * \n\t\t * @name $.jstree.defaults.core.check_callback\n\t\t */\n\t\tcheck_callback\t: false,\n\t\t/**\n\t\t * a callback called with a single object parameter in the instance's scope when something goes wrong (operation prevented, ajax failed, etc)\n\t\t * @name $.jstree.defaults.core.error\n\t\t */\n\t\terror\t\t\t: $.noop,\n\t\t/**\n\t\t * the open / close animation duration in milliseconds - set this to `false` to disable the animation (default is `200`)\n\t\t * @name $.jstree.defaults.core.animation\n\t\t */\n\t\tanimation\t\t: 200,\n\t\t/**\n\t\t * a boolean indicating if multiple nodes can be selected\n\t\t * @name $.jstree.defaults.core.multiple\n\t\t */\n\t\tmultiple\t\t: true,\n\t\t/**\n\t\t * theme configuration object\n\t\t * @name $.jstree.defaults.core.themes\n\t\t */\n\t\tthemes\t\t\t: {\n\t\t\t/**\n\t\t\t * the name of the theme to use (if left as `false` the default theme is used)\n\t\t\t * @name $.jstree.defaults.core.themes.name\n\t\t\t */\n\t\t\tname\t\t\t: false,\n\t\t\t/**\n\t\t\t * the URL of the theme's CSS file, leave this as `false` if you have manually included the theme CSS (recommended). You can set this to `true` too which will try to autoload the theme.\n\t\t\t * @name $.jstree.defaults.core.themes.url\n\t\t\t */\n\t\t\turl\t\t\t\t: false,\n\t\t\t/**\n\t\t\t * the location of all jstree themes - only used if `url` is set to `true`\n\t\t\t * @name $.jstree.defaults.core.themes.dir\n\t\t\t */\n\t\t\tdir\t\t\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean indicating if connecting dots are shown\n\t\t\t * @name $.jstree.defaults.core.themes.dots\n\t\t\t */\n\t\t\tdots\t\t\t: true,\n\t\t\t/**\n\t\t\t * a boolean indicating if node icons are shown\n\t\t\t * @name $.jstree.defaults.core.themes.icons\n\t\t\t */\n\t\t\ticons\t\t\t: true,\n\t\t\t/**\n\t\t\t * a boolean indicating if the tree background is striped\n\t\t\t * @name $.jstree.defaults.core.themes.stripes\n\t\t\t */\n\t\t\tstripes\t\t\t: false,\n\t\t\t/**\n\t\t\t * a string (or boolean `false`) specifying the theme variant to use (if the theme supports variants)\n\t\t\t * @name $.jstree.defaults.core.themes.variant\n\t\t\t */\n\t\t\tvariant\t\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean specifying if a reponsive version of the theme should kick in on smaller screens (if the theme supports it). Defaults to `false`.\n\t\t\t * @name $.jstree.defaults.core.themes.responsive\n\t\t\t */\n\t\t\tresponsive\t\t: false\n\t\t},\n\t\t/**\n\t\t * if left as `true` all parents of all selected nodes will be opened once the tree loads (so that all selected nodes are visible to the user)\n\t\t * @name $.jstree.defaults.core.expand_selected_onload\n\t\t */\n\t\texpand_selected_onload : true,\n\t\t/**\n\t\t * if left as `true` web workers will be used to parse incoming JSON data where possible, so that the UI will not be blocked by large requests. Workers are however about 30% slower. Defaults to `true`\n\t\t * @name $.jstree.defaults.core.worker\n\t\t */\n\t\tworker : true,\n\t\t/**\n\t\t * Force node text to plain text (and escape HTML). Defaults to `false`\n\t\t * @name $.jstree.defaults.core.force_text\n\t\t */\n\t\tforce_text : false\n\t};\n\t$.jstree.core.prototype = {\n\t\t/**\n\t\t * used to decorate an instance with a plugin. Used internally.\n\t\t * @private\n\t\t * @name plugin(deco [, opts])\n\t\t * @param  {String} deco the plugin to decorate with\n\t\t * @param  {Object} opts options for the plugin\n\t\t * @return {jsTree}\n\t\t */\n\t\tplugin : function (deco, opts) {\n\t\t\tvar Child = $.jstree.plugins[deco];\n\t\t\tif(Child) {\n\t\t\t\tthis._data[deco] = {};\n\t\t\t\tChild.prototype = this;\n\t\t\t\treturn new Child(opts, this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t/**\n\t\t * used to decorate an instance with a plugin. Used internally.\n\t\t * @private\n\t\t * @name init(el, optons)\n\t\t * @param {DOMElement|jQuery|String} el the element we are transforming\n\t\t * @param {Object} options options for this instance\n\t\t * @trigger init.jstree, loading.jstree, loaded.jstree, ready.jstree, changed.jstree\n\t\t */\n\t\tinit : function (el, options) {\n\t\t\tthis._model = {\n\t\t\t\tdata : {\n\t\t\t\t\t'#' : {\n\t\t\t\t\t\tid : '#',\n\t\t\t\t\t\tparent : null,\n\t\t\t\t\t\tparents : [],\n\t\t\t\t\t\tchildren : [],\n\t\t\t\t\t\tchildren_d : [],\n\t\t\t\t\t\tstate : { loaded : false }\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tchanged : [],\n\t\t\t\tforce_full_redraw : false,\n\t\t\t\tredraw_timeout : false,\n\t\t\t\tdefault_state : {\n\t\t\t\t\tloaded : true,\n\t\t\t\t\topened : false,\n\t\t\t\t\tselected : false,\n\t\t\t\t\tdisabled : false\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.element = $(el).addClass('jstree jstree-' + this._id);\n\t\t\tthis.settings = options;\n\t\t\tthis.element.bind(\"destroyed\", $.proxy(this.teardown, this));\n\n\t\t\tthis._data.core.ready = false;\n\t\t\tthis._data.core.loaded = false;\n\t\t\tthis._data.core.rtl = (this.element.css(\"direction\") === \"rtl\");\n\t\t\tthis.element[this._data.core.rtl ? 'addClass' : 'removeClass'](\"jstree-rtl\");\n\t\t\tthis.element.attr('role','tree');\n\n\t\t\tthis.bind();\n\t\t\t/**\n\t\t\t * triggered after all events are bound\n\t\t\t * @event\n\t\t\t * @name init.jstree\n\t\t\t */\n\t\t\tthis.trigger(\"init\");\n\n\t\t\tthis._data.core.original_container_html = this.element.find(\" > ul > li\").clone(true);\n\t\t\tthis._data.core.original_container_html\n\t\t\t\t.find(\"li\").addBack()\n\t\t\t\t.contents().filter(function() {\n\t\t\t\t\treturn this.nodeType === 3 && (!this.nodeValue || /^\\s+$/.test(this.nodeValue));\n\t\t\t\t})\n\t\t\t\t.remove();\n\t\t\tthis.element.html(\"<\"+\"ul class='jstree-container-ul jstree-children'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\n\t\t\tthis._data.core.li_height = this.get_container_ul().children(\"li:eq(0)\").height() || 24;\n\t\t\t/**\n\t\t\t * triggered after the loading text is shown and before loading starts\n\t\t\t * @event\n\t\t\t * @name loading.jstree\n\t\t\t */\n\t\t\tthis.trigger(\"loading\");\n\t\t\tthis.load_node('#');\n\t\t},\n\t\t/**\n\t\t * destroy an instance\n\t\t * @name destroy()\n\t\t * @param  {Boolean} keep_html if not set to `true` the container will be emptied, otherwise the current DOM elements will be kept intact\n\t\t */\n\t\tdestroy : function (keep_html) {\n\t\t\tif(!keep_html) { this.element.empty(); }\n\t\t\tthis.element.unbind(\"destroyed\", this.teardown);\n\t\t\tthis.teardown();\n\t\t},\n\t\t/**\n\t\t * part of the destroying of an instance. Used internally.\n\t\t * @private\n\t\t * @name teardown()\n\t\t */\n\t\tteardown : function () {\n\t\t\tthis.unbind();\n\t\t\tthis.element\n\t\t\t\t.removeClass('jstree')\n\t\t\t\t.removeData('jstree')\n\t\t\t\t.find(\"[class^='jstree']\")\n\t\t\t\t\t.addBack()\n\t\t\t\t\t.attr(\"class\", function () { return this.className.replace(/jstree[^ ]*|$/ig,''); });\n\t\t\tthis.element = null;\n\t\t},\n\t\t/**\n\t\t * bind all events. Used internally.\n\t\t * @private\n\t\t * @name bind()\n\t\t */\n\t\tbind : function () {\n\t\t\tthis.element\n\t\t\t\t.on(\"dblclick.jstree\", function () {\n\t\t\t\t\t\tif(document.selection && document.selection.empty) {\n\t\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif(window.getSelection) {\n\t\t\t\t\t\t\t\tvar sel = window.getSelection();\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tsel.removeAllRanges();\n\t\t\t\t\t\t\t\t\tsel.collapse();\n\t\t\t\t\t\t\t\t} catch (ignore) { }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t.on(\"click.jstree\", \".jstree-ocl\", $.proxy(function (e) {\n\t\t\t\t\t\tthis.toggle_node(e.target);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t$(e.currentTarget).focus();\n\t\t\t\t\t\tthis.activate_node(e.currentTarget, e);\n\t\t\t\t\t}, this))\n\t\t\t\t.on('keydown.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tif(e.target.tagName === \"INPUT\") { return true; }\n\t\t\t\t\t\tvar o = null;\n\t\t\t\t\t\tswitch(e.which) {\n\t\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\t\te.type = \"click\";\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 37:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tif(this.is_open(e.currentTarget)) {\n\t\t\t\t\t\t\t\t\tthis.close_node(e.currentTarget);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\to = this.get_prev_dom(e.currentTarget);\n\t\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 38:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_prev_dom(e.currentTarget);\n\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tif(this.is_closed(e.currentTarget)) {\n\t\t\t\t\t\t\t\t\tthis.open_node(e.currentTarget, function (o) { this.get_node(o, true).children('.jstree-anchor').focus(); });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\to = this.get_next_dom(e.currentTarget);\n\t\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 40:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_next_dom(e.currentTarget);\n\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t// delete\n\t\t\t\t\t\t\tcase 46:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_node(e.currentTarget);\n\t\t\t\t\t\t\t\tif(o && o.id && o.id !== '#') {\n\t\t\t\t\t\t\t\t\to = this.is_selected(o) ? this.get_selected() : o;\n\t\t\t\t\t\t\t\t\t// this.delete_node(o);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t// f2\n\t\t\t\t\t\t\tcase 113:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_node(e.currentTarget);\n\t\t\t\t\t\t\t\t/*!\n\t\t\t\t\t\t\t\tif(o && o.id && o.id !== '#') {\n\t\t\t\t\t\t\t\t\t// this.edit(o);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t// console.log(e.which);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"load_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tif(data.status) {\n\t\t\t\t\t\t\tif(data.node.id === '#' && !this._data.core.loaded) {\n\t\t\t\t\t\t\t\tthis._data.core.loaded = true;\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * triggered after the root node is loaded for the first time\n\t\t\t\t\t\t\t\t * @event\n\t\t\t\t\t\t\t\t * @name loaded.jstree\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tthis.trigger(\"loaded\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!this._data.core.ready && !this.get_container_ul().find('.jstree-loading:eq(0)').length) {\n\t\t\t\t\t\t\t\tthis._data.core.ready = true;\n\t\t\t\t\t\t\t\tif(this._data.core.selected.length) {\n\t\t\t\t\t\t\t\t\tif(this.settings.core.expand_selected_onload) {\n\t\t\t\t\t\t\t\t\t\tvar tmp = [], i, j;\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\ttmp = tmp.concat(this._model.data[this._data.core.selected[i]].parents);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttmp = $.vakata.array_unique(tmp);\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\tthis.open_node(tmp[i], false, 0);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'ready', 'selected' : this._data.core.selected });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * triggered after all nodes are finished loading\n\t\t\t\t\t\t\t\t * @event\n\t\t\t\t\t\t\t\t * @name ready.jstree\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tsetTimeout($.proxy(function () { this.trigger(\"ready\"); }, this), 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t// THEME RELATED\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\n\t\t\t\t\t\tvar s = this.settings.core.themes;\n\t\t\t\t\t\tthis._data.core.themes.dots\t\t\t= s.dots;\n\t\t\t\t\t\tthis._data.core.themes.stripes\t\t= s.stripes;\n\t\t\t\t\t\tthis._data.core.themes.icons\t\t= s.icons;\n\t\t\t\t\t\tthis.set_theme(s.name || \"default\", s.url);\n\t\t\t\t\t\tthis.set_theme_variant(s.variant);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis[ this._data.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.stripes ? \"show_stripes\" : \"hide_stripes\" ]();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('blur.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\t$(e.currentTarget).filter('.jstree-hovered').mouseleave();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('focus.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.element.find('.jstree-hovered').not(e.currentTarget).mouseleave();\n\t\t\t\t\t\t$(e.currentTarget).mouseenter();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('mouseenter.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\n\t\t\t\t\t}, this))\n\t\t\t\t.on('mouseleave.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\n\t\t\t\t\t}, this));\n\t\t},\n\t\t/**\n\t\t * part of the destroying of an instance. Used internally.\n\t\t * @private\n\t\t * @name unbind()\n\t\t */\n\t\tunbind : function () {\n\t\t\tthis.element.off('.jstree');\n\t\t\t$(document).off('.jstree-' + this._id);\n\t\t},\n\t\t/**\n\t\t * trigger an event. Used internally.\n\t\t * @private\n\t\t * @name trigger(ev [, data])\n\t\t * @param  {String} ev the name of the event to trigger\n\t\t * @param  {Object} data additional data to pass with the event\n\t\t */\n\t\ttrigger : function (ev, data) {\n\t\t\tif(!data) {\n\t\t\t\tdata = {};\n\t\t\t}\n\t\t\tdata.instance = this;\n\t\t\tthis.element.triggerHandler(ev.replace('.jstree','') + '.jstree', data);\n\t\t},\n\t\t/**\n\t\t * returns the jQuery extended instance container\n\t\t * @name get_container()\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_container : function () {\n\t\t\treturn this.element;\n\t\t},\n\t\t/**\n\t\t * returns the jQuery extended main UL node inside the instance container. Used internally.\n\t\t * @private\n\t\t * @name get_container_ul()\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_container_ul : function () {\n\t\t\treturn this.element.children(\".jstree-children:eq(0)\");\n\t\t},\n\t\t/**\n\t\t * gets string replacements (localization). Used internally.\n\t\t * @private\n\t\t * @name get_string(key)\n\t\t * @param  {String} key\n\t\t * @return {String}\n\t\t */\n\t\tget_string : function (key) {\n\t\t\tvar a = this.settings.core.strings;\n\t\t\tif($.isFunction(a)) { return a.call(this, key); }\n\t\t\tif(a && a[key]) { return a[key]; }\n\t\t\treturn key;\n\t\t},\n\t\t/**\n\t\t * gets the first child of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _firstChild(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_firstChild : function (dom) {\n\t\t\tdom = dom ? dom.firstChild : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.nextSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * gets the next sibling of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _nextSibling(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_nextSibling : function (dom) {\n\t\t\tdom = dom ? dom.nextSibling : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.nextSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * gets the previous sibling of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _previousSibling(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_previousSibling : function (dom) {\n\t\t\tdom = dom ? dom.previousSibling : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.previousSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * get the JSON representation of a node (or the actual jQuery extended DOM node) by using any input (child DOM element, ID string, selector, etc)\n\t\t * @name get_node(obj [, as_dom])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} as_dom\n\t\t * @return {Object|jQuery}\n\t\t */\n\t\tget_node : function (obj, as_dom) {\n\t\t\tif(obj && obj.id) {\n\t\t\t\tobj = obj.id;\n\t\t\t}\n\t\t\tvar dom;\n\t\t\ttry {\n\t\t\t\tif(this._model.data[obj]) {\n\t\t\t\t\tobj = this._model.data[obj];\n\t\t\t\t}\n\t\t\t\telse if(((dom = $(obj, this.element)).length || (dom = $('#' + obj.replace($.jstree.idregex,'\\\\$&'), this.element)).length) && this._model.data[dom.closest('.jstree-node').attr('id')]) {\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\n\t\t\t\t}\n\t\t\t\telse if((dom = $(obj, this.element)).length && dom.hasClass('jstree')) {\n\t\t\t\t\tobj = this._model.data['#'];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif(as_dom) {\n\t\t\t\t\tobj = obj.id === '#' ? this.element : $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t} catch (ex) { return false; }\n\t\t},\n\t\t/**\n\t\t * get the path to a node, either consisting of node texts, or of node IDs, optionally glued together (otherwise an array)\n\t\t * @name get_path(obj [, glue, ids])\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {String} glue if you want the path as a string - pass the glue here (for example '/'), if a falsy value is supplied here, an array is returned\n\t\t * @param  {Boolean} ids if set to true build the path using ID, otherwise node text is used\n\t\t * @return {mixed}\n\t\t */\n\t\tget_path : function (obj, glue, ids) {\n\t\t\tobj = obj.parents ? obj : this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#' || !obj.parents) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar i, j, p = [];\n\t\t\tp.push(ids ? obj.id : obj.text);\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tp.push(ids ? obj.parents[i] : this.get_text(obj.parents[i]));\n\t\t\t}\n\t\t\tp = p.reverse().slice(1);\n\t\t\treturn glue ? p.join(glue) : p;\n\t\t},\n\t\t/**\n\t\t * get the next visible node that is below the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\n\t\t * @name get_next_dom(obj [, strict])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} strict\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_next_dom : function (obj, strict) {\n\t\t\tvar tmp;\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\ttmp = this._firstChild(this.get_container_ul()[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strict) {\n\t\t\t\ttmp = this._nextSibling(obj[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(obj.hasClass(\"jstree-open\")) {\n\t\t\t\ttmp = this._firstChild(obj.children('.jstree-children')[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif((tmp = this._nextSibling(obj[0])) !== null) {\n\t\t\t\treturn $(tmp);\n\t\t\t}\n\t\t\treturn obj.parentsUntil(\".jstree\",\".jstree-node\").next(\".jstree-node\").eq(0);\n\t\t},\n\t\t/**\n\t\t * get the previous visible node that is above the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\n\t\t * @name get_prev_dom(obj [, strict])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} strict\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_prev_dom : function (obj, strict) {\n\t\t\tvar tmp;\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\ttmp = this.get_container_ul()[0].lastChild;\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strict) {\n\t\t\t\ttmp = this._previousSibling(obj[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif((tmp = this._previousSibling(obj[0])) !== null) {\n\t\t\t\tobj = $(tmp);\n\t\t\t\twhile(obj.hasClass(\"jstree-open\")) {\n\t\t\t\t\tobj = obj.children(\".jstree-children:eq(0)\").children(\".jstree-node:last\");\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\ttmp = obj[0].parentNode.parentNode;\n\t\t\treturn tmp && tmp.className && tmp.className.indexOf('jstree-node') !== -1 ? $(tmp) : false;\n\t\t},\n\t\t/**\n\t\t * get the parent ID of a node\n\t\t * @name get_parent(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {String}\n\t\t */\n\t\tget_parent : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.parent;\n\t\t},\n\t\t/**\n\t\t * get a jQuery collection of all the children of a node (node must be rendered)\n\t\t * @name get_children_dom(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_children_dom : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\treturn this.get_container_ul().children(\".jstree-node\");\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.children(\".jstree-children\").children(\".jstree-node\");\n\t\t},\n\t\t/**\n\t\t * checks if a node has children\n\t\t * @name is_parent(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_parent : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && (obj.state.loaded === false || obj.children.length > 0);\n\t\t},\n\t\t/**\n\t\t * checks if a node is loaded (its children are available)\n\t\t * @name is_loaded(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_loaded : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state.loaded;\n\t\t},\n\t\t/**\n\t\t * check if a node is currently loading (fetching children)\n\t\t * @name is_loading(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_loading : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state && obj.state.loading;\n\t\t},\n\t\t/**\n\t\t * check if a node is opened\n\t\t * @name is_open(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_open : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state.opened;\n\t\t},\n\t\t/**\n\t\t * check if a node is in a closed state\n\t\t * @name is_closed(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_closed : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && this.is_parent(obj) && !obj.state.opened;\n\t\t},\n\t\t/**\n\t\t * check if a node has no children\n\t\t * @name is_leaf(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_leaf : function (obj) {\n\t\t\treturn !this.is_parent(obj);\n\t\t},\n\t\t/**\n\t\t * loads a node (fetches its children using the `core.data` setting). Multiple nodes can be passed to by using an array.\n\t\t * @name load_node(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives two arguments - the node and a boolean status\n\t\t * @return {Boolean}\n\t\t * @trigger load_node.jstree\n\t\t */\n\t\tload_node : function (obj, callback) {\n\t\t\tvar k, l, i, j, c;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tthis._load_nodes(obj.slice(), callback);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) {\n\t\t\t\tif(callback) { callback.call(this, obj, false); }\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// if(obj.state.loading) { } // the node is already loading - just wait for it to load and invoke callback? but if called implicitly it should be loaded again?\n\t\t\tif(obj.state.loaded) {\n\t\t\t\tobj.state.loaded = false;\n\t\t\t\tfor(k = 0, l = obj.children_d.length; k < l; k++) {\n\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_remove_item(this._model.data[obj.parents[i]].children_d, obj.children_d[k]);\n\t\t\t\t\t}\n\t\t\t\t\tif(this._model.data[obj.children_d[k]].state.selected) {\n\t\t\t\t\t\tc = true;\n\t\t\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.children_d[k]);\n\t\t\t\t\t}\n\t\t\t\t\tdelete this._model.data[obj.children_d[k]];\n\t\t\t\t}\n\t\t\t\tobj.children = [];\n\t\t\t\tobj.children_d = [];\n\t\t\t\tif(c) {\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'load_node', 'node' : obj, 'selected' : this._data.core.selected });\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.state.loading = true;\n\t\t\tthis.get_node(obj, true).addClass(\"jstree-loading\");\n\t\t\tthis._load_node(obj, $.proxy(function (status) {\n\t\t\t\tobj = this._model.data[obj.id];\n\t\t\t\tobj.state.loading = false;\n\t\t\t\tobj.state.loaded = status;\n\t\t\t\tvar dom = this.get_node(obj, true);\n\t\t\t\tif(obj.state.loaded && !obj.children.length && dom && dom.length && !dom.hasClass('jstree-leaf')) {\n\t\t\t\t\tdom.removeClass('jstree-closed jstree-open').addClass('jstree-leaf');\n\t\t\t\t}\n\t\t\t\tdom.removeClass(\"jstree-loading\");\n\t\t\t\t/**\n\t\t\t\t * triggered after a node is loaded\n\t\t\t\t * @event\n\t\t\t\t * @name load_node.jstree\n\t\t\t\t * @param {Object} node the node that was loading\n\t\t\t\t * @param {Boolean} status was the node loaded successfully\n\t\t\t\t */\n\t\t\t\tthis.trigger('load_node', { \"node\" : obj, \"status\" : status });\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, status);\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * load an array of nodes (will also load unavailable nodes as soon as the appear in the structure). Used internally.\n\t\t * @private\n\t\t * @name _load_nodes(nodes [, callback])\n\t\t * @param  {array} nodes\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - the array passed to _load_nodes\n\t\t */\n\t\t_load_nodes : function (nodes, callback, is_callback) {\n\t\t\tvar r = true,\n\t\t\t\tc = function () { this._load_nodes(nodes, callback, true); },\n\t\t\t\tm = this._model.data, i, j;\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\tif(m[nodes[i]] && (!m[nodes[i]].state.loaded || !is_callback)) {\n\t\t\t\t\tif(!this.is_loading(nodes[i])) {\n\t\t\t\t\t\tthis.load_node(nodes[i], c);\n\t\t\t\t\t}\n\t\t\t\t\tr = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(r) {\n\t\t\t\tif(callback && !callback.done) {\n\t\t\t\t\tcallback.call(this, nodes);\n\t\t\t\t\tcallback.done = true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * handles the actual loading of a node. Used only internally.\n\t\t * @private\n\t\t * @name _load_node(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - a boolean status\n\t\t * @return {Boolean}\n\t\t */\n\t\t_load_node : function (obj, callback) {\n\t\t\tvar s = this.settings.core.data, t;\n\t\t\t// use original HTML\n\t\t\tif(!s) {\n\t\t\t\tif(obj.id === '#') {\n\t\t\t\t\treturn this._append_html_data(obj, this._data.core.original_container_html.clone(true), function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t// return callback.call(this, obj.id === '#' ? this._append_html_data(obj, this._data.core.original_container_html.clone(true)) : false);\n\t\t\t}\n\t\t\tif($.isFunction(s)) {\n\t\t\t\treturn s.call(this, obj, $.proxy(function (d) {\n\t\t\t\t\tif(d === false) {\n\t\t\t\t\t\tcallback.call(this, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d, function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t\t// return d === false ? callback.call(this, false) : callback.call(this, this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d));\n\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(typeof s === 'object') {\n\t\t\t\tif(s.url) {\n\t\t\t\t\ts = $.extend(true, {}, s);\n\t\t\t\t\tif($.isFunction(s.url)) {\n\t\t\t\t\t\ts.url = s.url.call(this, obj);\n\t\t\t\t\t}\n\t\t\t\t\tif($.isFunction(s.data)) {\n\t\t\t\t\t\ts.data = s.data.call(this, obj);\n\t\t\t\t\t}\n\t\t\t\t\treturn $.ajax(s)\n\t\t\t\t\t\t.done($.proxy(function (d,t,x) {\n\t\t\t\t\t\t\t\tvar type = x.getResponseHeader('Content-Type');\n\t\t\t\t\t\t\t\tif(type.indexOf('json') !== -1 || typeof d === \"object\") {\n\t\t\t\t\t\t\t\t\treturn this._append_json_data(obj, d, function (status) { callback.call(this, status); });\n\t\t\t\t\t\t\t\t\t//return callback.call(this, this._append_json_data(obj, d));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(type.indexOf('html') !== -1 || typeof d === \"string\") {\n\t\t\t\t\t\t\t\t\treturn this._append_html_data(obj, $(d), function (status) { callback.call(this, status); });\n\t\t\t\t\t\t\t\t\t// return callback.call(this, this._append_html_data(obj, $(d)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : x }) };\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t.fail($.proxy(function (f) {\n\t\t\t\t\t\t\t\tcallback.call(this, false);\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : f }) };\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t\tt = ($.isArray(s) || $.isPlainObject(s)) ? JSON.parse(JSON.stringify(s)) : s;\n\t\t\t\tif(obj.id === '#') {\n\t\t\t\t\treturn this._append_json_data(obj, t, function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_05', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t//return callback.call(this, (obj.id === \"#\" ? this._append_json_data(obj, t) : false) );\n\t\t\t}\n\t\t\tif(typeof s === 'string') {\n\t\t\t\tif(obj.id === '#') {\n\t\t\t\t\treturn this._append_html_data(obj, $(s), function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_06', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t//return callback.call(this, (obj.id === \"#\" ? this._append_html_data(obj, $(s)) : false) );\n\t\t\t}\n\t\t\treturn callback.call(this, false);\n\t\t},\n\t\t/**\n\t\t * adds a node to the list of nodes to redraw. Used only internally.\n\t\t * @private\n\t\t * @name _node_changed(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t */\n\t\t_node_changed : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(obj) {\n\t\t\t\tthis._model.changed.push(obj.id);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * appends HTML content to the tree. Used internally.\n\t\t * @private\n\t\t * @name _append_html_data(obj, data)\n\t\t * @param  {mixed} obj the node to append to\n\t\t * @param  {String} data the HTML string to parse and append\n\t\t * @trigger model.jstree, changed.jstree\n\t\t */\n\t\t_append_html_data : function (dom, data, cb) {\n\t\t\tdom = this.get_node(dom);\n\t\t\tdom.children = [];\n\t\t\tdom.children_d = [];\n\t\t\tvar dat = data.is('ul') ? data.children() : data,\n\t\t\t\tpar = dom.id,\n\t\t\t\tchd = [],\n\t\t\t\tdpc = [],\n\t\t\t\tm = this._model.data,\n\t\t\t\tp = m[par],\n\t\t\t\ts = this._data.core.selected.length,\n\t\t\t\ttmp, i, j;\n\t\t\tdat.each($.proxy(function (i, v) {\n\t\t\t\ttmp = this._parse_model_from_html($(v), par, p.parents.concat());\n\t\t\t\tif(tmp) {\n\t\t\t\t\tchd.push(tmp);\n\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tp.children = chd;\n\t\t\tp.children_d = dpc;\n\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when new data is inserted to the tree model\n\t\t\t * @event\n\t\t\t * @name model.jstree\n\t\t\t * @param {Array} nodes an array of node IDs\n\t\t\t * @param {String} parent the parent ID of the nodes\n\t\t\t */\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, 'parent' : par });\n\t\t\tif(par !== '#') {\n\t\t\t\tthis._node_changed(par);\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.get_container_ul().children('.jstree-initial-node').remove();\n\t\t\t\tthis.redraw(true);\n\t\t\t}\n\t\t\tif(this._data.core.selected.length !== s) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\n\t\t\t}\n\t\t\tcb.call(this, true);\n\t\t},\n\t\t/**\n\t\t * appends JSON content to the tree. Used internally.\n\t\t * @private\n\t\t * @name _append_json_data(obj, data)\n\t\t * @param  {mixed} obj the node to append to\n\t\t * @param  {String} data the JSON object to parse and append\n\t\t * @trigger model.jstree, changed.jstree\n\t\t */\n\t\t_append_json_data : function (dom, data, cb) {\n\t\t\tdom = this.get_node(dom);\n\t\t\tdom.children = [];\n\t\t\tdom.children_d = [];\n\t\t\t// *%$@!!!\n\t\t\tif(data.d) {\n\t\t\t\tdata = data.d;\n\t\t\t\tif(typeof data === \"string\") {\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!$.isArray(data)) { data = [data]; }\n\t\t\tvar w = null,\n\t\t\t\targs = {\n\t\t\t\t\t'df'\t: this._model.default_state,\n\t\t\t\t\t'dat'\t: data,\n\t\t\t\t\t'par'\t: dom.id,\n\t\t\t\t\t'm'\t\t: this._model.data,\n\t\t\t\t\t't_id'\t: this._id,\n\t\t\t\t\t't_cnt'\t: this._cnt,\n\t\t\t\t\t'sel'\t: this._data.core.selected\n\t\t\t\t},\n\t\t\t\tfunc = function (data, undefined) {\n\t\t\t\t\tif(data.data) { data = data.data; }\n\t\t\t\t\tvar dat = data.dat,\n\t\t\t\t\t\tpar = data.par,\n\t\t\t\t\t\tchd = [],\n\t\t\t\t\t\tdpc = [],\n\t\t\t\t\t\tadd = [],\n\t\t\t\t\t\tdf = data.df,\n\t\t\t\t\t\tt_id = data.t_id,\n\t\t\t\t\t\tt_cnt = data.t_cnt,\n\t\t\t\t\t\tm = data.m,\n\t\t\t\t\t\tp = m[par],\n\t\t\t\t\t\tsel = data.sel,\n\t\t\t\t\t\ttmp, i, j, rslt,\n\t\t\t\t\t\tparse_flat = function (d, p, ps) {\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\n\t\t\t\t\t\t\tvar tid = d.id.toString(),\n\t\t\t\t\t\t\t\ti, j, c, e,\n\t\t\t\t\t\t\t\ttmp = {\n\t\t\t\t\t\t\t\t\tid\t\t\t: tid,\n\t\t\t\t\t\t\t\t\ttext\t\t: d.text || '',\n\t\t\t\t\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\n\t\t\t\t\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\t\t\t\t\tchildren\t: d.children || [],\n\t\t\t\t\t\t\t\t\tchildren_d\t: d.children_d || [],\n\t\t\t\t\t\t\t\t\tdata\t\t: d.data,\n\t\t\t\t\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\t\t\t\t\toriginal\t: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor(i in df) {\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data) {\n\t\t\t\t\t\t\t\ttmp.data = d.data;\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.state) {\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\n\t\t\t\t\t\t\t\ttmp.children = [];\n\t\t\t\t\t\t\t\ttmp.children_d = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\n\t\t\t\t\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\tc = parse_flat(m[tmp.children[i]], tmp.id, ps);\n\t\t\t\t\t\t\t\te = m[c];\n\t\t\t\t\t\t\t\ttmp.children_d.push(c);\n\t\t\t\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete d.data;\n\t\t\t\t\t\t\tdelete d.children;\n\t\t\t\t\t\t\tm[tmp.id].original = d;\n\t\t\t\t\t\t\tif(tmp.state.selected) {\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn tmp.id;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tparse_nest = function (d, p, ps) {\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\n\t\t\t\t\t\t\tvar tid = false, i, j, c, e, tmp;\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\ttid = 'j' + t_id + '_' + (++t_cnt);\n\t\t\t\t\t\t\t} while(m[tid]);\n\n\t\t\t\t\t\t\ttmp = {\n\t\t\t\t\t\t\t\tid\t\t\t: false,\n\t\t\t\t\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\n\t\t\t\t\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\n\t\t\t\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\t\t\t\tchildren\t: [],\n\t\t\t\t\t\t\t\tchildren_d\t: [],\n\t\t\t\t\t\t\t\tdata\t\t: null,\n\t\t\t\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\t\t\t\toriginal\t: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor(i in df) {\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\n\t\t\t\t\t\t\tif(d && d.text) { tmp.text = d.text; }\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data) {\n\t\t\t\t\t\t\t\ttmp.data = d.data;\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.state) {\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(tmp.li_attr.id && !tmp.id) {\n\t\t\t\t\t\t\t\ttmp.id = tmp.li_attr.id.toString();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.id) {\n\t\t\t\t\t\t\t\ttmp.id = tid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tmp.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children.length) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc = parse_nest(d.children[i], tmp.id, ps);\n\t\t\t\t\t\t\t\t\te = m[c];\n\t\t\t\t\t\t\t\t\ttmp.children.push(c);\n\t\t\t\t\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\n\t\t\t\t\t\t\t\ttmp.children = [];\n\t\t\t\t\t\t\t\ttmp.children_d = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete d.data;\n\t\t\t\t\t\t\tdelete d.children;\n\t\t\t\t\t\t\ttmp.original = d;\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\n\t\t\t\t\t\t\tif(tmp.state.selected) {\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn tmp.id;\n\t\t\t\t\t\t};\n\n\t\t\t\t\tif(dat.length && dat[0].id !== undefined && dat[0].parent !== undefined) {\n\t\t\t\t\t\t// Flat JSON support (for easy import from DB):\n\t\t\t\t\t\t// 1) convert to object (foreach)\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\tif(!dat[i].children) {\n\t\t\t\t\t\t\t\tdat[i].children = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[dat[i].id.toString()] = dat[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 2) populate children (foreach)\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\tm[dat[i].parent.toString()].children.push(dat[i].id.toString());\n\t\t\t\t\t\t\t// populate parent.children_d\n\t\t\t\t\t\t\tp.children_d.push(dat[i].id.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 3) normalize && populate parents and children_d with recursion\n\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = parse_flat(m[p.children[i]], par, p.parents.concat());\n\t\t\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ?) three_state selection - p.state.selected && t - (if three_state foreach(dat => ch) -> foreach(parents) if(parent.selected) child.selected = true;\n\t\t\t\t\t\trslt = {\n\t\t\t\t\t\t\t'cnt' : t_cnt,\n\t\t\t\t\t\t\t'mod' : m,\n\t\t\t\t\t\t\t'sel' : sel,\n\t\t\t\t\t\t\t'par' : par,\n\t\t\t\t\t\t\t'dpc' : dpc,\n\t\t\t\t\t\t\t'add' : add\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = parse_nest(dat[i], par, p.parents.concat());\n\t\t\t\t\t\t\tif(tmp) {\n\t\t\t\t\t\t\t\tchd.push(tmp);\n\t\t\t\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp.children = chd;\n\t\t\t\t\t\tp.children_d = dpc;\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trslt = {\n\t\t\t\t\t\t\t'cnt' : t_cnt,\n\t\t\t\t\t\t\t'mod' : m,\n\t\t\t\t\t\t\t'sel' : sel,\n\t\t\t\t\t\t\t'par' : par,\n\t\t\t\t\t\t\t'dpc' : dpc,\n\t\t\t\t\t\t\t'add' : add\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn rslt;\n\t\t\t\t},\n\t\t\t\trslt = function (rslt, worker) {\n\t\t\t\t\tthis._cnt = rslt.cnt;\n\t\t\t\t\tthis._model.data = rslt.mod; // breaks the reference in load_node - careful\n\n\t\t\t\t\tif(worker) {\n\t\t\t\t\t\tvar i, j, a = rslt.add, r = rslt.sel, s = this._data.core.selected.slice(), m = this._model.data;\n\t\t\t\t\t\t// if selection was changed while calculating in worker\n\t\t\t\t\t\tif(r.length !== s.length || $.vakata.array_unique(r.concat(s)).length !== r.length) {\n\t\t\t\t\t\t\t// deselect nodes that are no longer selected\n\t\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif($.inArray(r[i], a) === -1 && $.inArray(r[i], s) === -1) {\n\t\t\t\t\t\t\t\t\tm[r[i]].state.selected = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// select nodes that were selected in the mean time\n\t\t\t\t\t\t\tfor(i = 0, j = s.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif($.inArray(s[i], r) === -1) {\n\t\t\t\t\t\t\t\t\tm[s[i]].state.selected = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(rslt.add.length) {\n\t\t\t\t\t\tthis._data.core.selected = this._data.core.selected.concat(rslt.add);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger('model', { \"nodes\" : rslt.dpc, 'parent' : rslt.par });\n\n\t\t\t\t\tif(rslt.par !== '#') {\n\t\t\t\t\t\tthis._node_changed(rslt.par);\n\t\t\t\t\t\tthis.redraw();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// this.get_container_ul().children('.jstree-initial-node').remove();\n\t\t\t\t\t\tthis.redraw(true);\n\t\t\t\t\t}\n\t\t\t\t\tif(rslt.add.length) {\n\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\n\t\t\t\t\t}\n\t\t\t\t\tcb.call(this, true);\n\t\t\t\t};\n\t\t\tif(this.settings.core.worker && window.Blob && window.URL && window.Worker) {\n\t\t\t\ttry {\n\t\t\t\t\tif(this._wrk === null) {\n\t\t\t\t\t\tthis._wrk = window.URL.createObjectURL(\n\t\t\t\t\t\t\tnew window.Blob(\n\t\t\t\t\t\t\t\t['self.onmessage = ' + func.toString().replace(/return ([^;}]+)[\\s;}]+$/, 'postMessage($1);}')],\n\t\t\t\t\t\t\t\t{type:\"text/javascript\"}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tw = new window.Worker(this._wrk);\n\t\t\t\t\tw.onmessage = $.proxy(function (e) {\n\t\t\t\t\t\trslt.call(this, e.data, true);\n\t\t\t\t\t\tthis._data.core.working = false;\n\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\n\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t\tif(!this._data.core.working) {\n\t\t\t\t\t\tthis._data.core.working = true;\n\t\t\t\t\t\tw.postMessage(args);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._data.core.worker_queue.push([dom, data, cb]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\trslt.call(this, func(args), false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\trslt.call(this, func(args), false);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * parses a node from a jQuery object and appends them to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_html(d [, p, ps])\n\t\t * @param  {jQuery} d the jQuery object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_html : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = [].concat(ps); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar c, e, m = this._model.data,\n\t\t\t\tdata = {\n\t\t\t\t\tid\t\t\t: false,\n\t\t\t\t\ttext\t\t: false,\n\t\t\t\t\ticon\t\t: true,\n\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\tchildren\t: [],\n\t\t\t\t\tchildren_d\t: [],\n\t\t\t\t\tdata\t\t: null,\n\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\toriginal\t: false\n\t\t\t\t}, i, tmp, tid;\n\t\t\tfor(i in this._model.default_state) {\n\t\t\t\tif(this._model.default_state.hasOwnProperty(i)) {\n\t\t\t\t\tdata.state[i] = this._model.default_state[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = $.vakata.attributes(d, true);\n\t\t\t$.each(tmp, function (i, v) {\n\t\t\t\tv = $.trim(v);\n\t\t\t\tif(!v.length) { return true; }\n\t\t\t\tdata.li_attr[i] = v;\n\t\t\t\tif(i === 'id') {\n\t\t\t\t\tdata.id = v.toString();\n\t\t\t\t}\n\t\t\t});\n\t\t\ttmp = d.children('a').eq(0);\n\t\t\tif(tmp.length) {\n\t\t\t\ttmp = $.vakata.attributes(tmp, true);\n\t\t\t\t$.each(tmp, function (i, v) {\n\t\t\t\t\tv = $.trim(v);\n\t\t\t\t\tif(v.length) {\n\t\t\t\t\t\tdata.a_attr[i] = v;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\ttmp = d.children(\"a:eq(0)\").length ? d.children(\"a:eq(0)\").clone() : d.clone();\n\t\t\ttmp.children(\"ins, i, ul\").remove();\n\t\t\ttmp = tmp.html();\n\t\t\ttmp = $('<div />').html(tmp);\n\t\t\tdata.text = this.settings.core.force_text ? tmp.text() : tmp.html();\n\t\t\ttmp = d.data();\n\t\t\tdata.data = tmp ? $.extend(true, {}, tmp) : null;\n\t\t\tdata.state.opened = d.hasClass('jstree-open');\n\t\t\tdata.state.selected = d.children('a').hasClass('jstree-clicked');\n\t\t\tdata.state.disabled = d.children('a').hasClass('jstree-disabled');\n\t\t\tif(data.data && data.data.jstree) {\n\t\t\t\tfor(i in data.data.jstree) {\n\t\t\t\t\tif(data.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\tdata.state[i] = data.data.jstree[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = d.children(\"a\").children(\".jstree-themeicon\");\n\t\t\tif(tmp.length) {\n\t\t\t\tdata.icon = tmp.hasClass('jstree-themeicon-hidden') ? false : tmp.attr('rel');\n\t\t\t}\n\t\t\tif(data.state.icon) {\n\t\t\t\tdata.icon = data.state.icon;\n\t\t\t}\n\t\t\ttmp = d.children(\"ul\").children(\"li\");\n\t\t\tdo {\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\n\t\t\t} while(m[tid]);\n\t\t\tdata.id = data.li_attr.id ? data.li_attr.id.toString() : tid;\n\t\t\tif(tmp.length) {\n\t\t\t\ttmp.each($.proxy(function (i, v) {\n\t\t\t\t\tc = this._parse_model_from_html($(v), data.id, ps);\n\t\t\t\t\te = this._model.data[c];\n\t\t\t\t\tdata.children.push(c);\n\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\tdata.children_d = data.children_d.concat(e.children_d);\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\t\t\t\tdata.children_d = data.children_d.concat(data.children);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(d.hasClass('jstree-closed')) {\n\t\t\t\t\tdata.state.loaded = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(data.li_attr['class']) {\n\t\t\t\tdata.li_attr['class'] = data.li_attr['class'].replace('jstree-closed','').replace('jstree-open','');\n\t\t\t}\n\t\t\tif(data.a_attr['class']) {\n\t\t\t\tdata.a_attr['class'] = data.a_attr['class'].replace('jstree-clicked','').replace('jstree-disabled','');\n\t\t\t}\n\t\t\tm[data.id] = data;\n\t\t\tif(data.state.selected) {\n\t\t\t\tthis._data.core.selected.push(data.id);\n\t\t\t}\n\t\t\treturn data.id;\n\t\t},\n\t\t/**\n\t\t * parses a node from a JSON object (used when dealing with flat data, which has no nesting of children, but has id and parent properties) and appends it to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_flat_json(d [, p, ps])\n\t\t * @param  {Object} d the JSON object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_flat_json : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = ps.concat(); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar tid = d.id.toString(),\n\t\t\t\tm = this._model.data,\n\t\t\t\tdf = this._model.default_state,\n\t\t\t\ti, j, c, e,\n\t\t\t\ttmp = {\n\t\t\t\t\tid\t\t\t: tid,\n\t\t\t\t\ttext\t\t: d.text || '',\n\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\n\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\tchildren\t: d.children || [],\n\t\t\t\t\tchildren_d\t: d.children_d || [],\n\t\t\t\t\tdata\t\t: d.data,\n\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\toriginal\t: false\n\t\t\t\t};\n\t\t\tfor(i in df) {\n\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t}\n\t\t\tif(d && d.data) {\n\t\t\t\ttmp.data = d.data;\n\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\tfor (i in d.state) {\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\ttmp.li_attr.id = tid;\n\t\t\t}\n\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\ttmp.state.loaded = false;\n\t\t\t\ttmp.children = [];\n\t\t\t\ttmp.children_d = [];\n\t\t\t}\n\t\t\tm[tmp.id] = tmp;\n\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\n\t\t\t\tc = this._parse_model_from_flat_json(m[tmp.children[i]], tmp.id, ps);\n\t\t\t\te = m[c];\n\t\t\t\ttmp.children_d.push(c);\n\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete d.data;\n\t\t\tdelete d.children;\n\t\t\tm[tmp.id].original = d;\n\t\t\tif(tmp.state.selected) {\n\t\t\t\tthis._data.core.selected.push(tmp.id);\n\t\t\t}\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * parses a node from a JSON object and appends it to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_json(d [, p, ps])\n\t\t * @param  {Object} d the JSON object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_json : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = ps.concat(); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar tid = false, i, j, c, e, m = this._model.data, df = this._model.default_state, tmp;\n\t\t\tdo {\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\n\t\t\t} while(m[tid]);\n\n\t\t\ttmp = {\n\t\t\t\tid\t\t\t: false,\n\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\n\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\n\t\t\t\tparent\t\t: p,\n\t\t\t\tparents\t\t: ps,\n\t\t\t\tchildren\t: [],\n\t\t\t\tchildren_d\t: [],\n\t\t\t\tdata\t\t: null,\n\t\t\t\tstate\t\t: { },\n\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\toriginal\t: false\n\t\t\t};\n\t\t\tfor(i in df) {\n\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\n\t\t\tif(d && d.text) { tmp.text = d.text; }\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t}\n\t\t\tif(d && d.data) {\n\t\t\t\ttmp.data = d.data;\n\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\tfor (i in d.state) {\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp.li_attr.id && !tmp.id) {\n\t\t\t\ttmp.id = tmp.li_attr.id.toString();\n\t\t\t}\n\t\t\tif(!tmp.id) {\n\t\t\t\ttmp.id = tid;\n\t\t\t}\n\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\ttmp.li_attr.id = tmp.id;\n\t\t\t}\n\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.children && d.children.length) {\n\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\n\t\t\t\t\tc = this._parse_model_from_json(d.children[i], tmp.id, ps);\n\t\t\t\t\te = m[c];\n\t\t\t\t\ttmp.children.push(c);\n\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\n\t\t\t}\n\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\ttmp.state.loaded = false;\n\t\t\t\ttmp.children = [];\n\t\t\t\ttmp.children_d = [];\n\t\t\t}\n\t\t\tdelete d.data;\n\t\t\tdelete d.children;\n\t\t\ttmp.original = d;\n\t\t\tm[tmp.id] = tmp;\n\t\t\tif(tmp.state.selected) {\n\t\t\t\tthis._data.core.selected.push(tmp.id);\n\t\t\t}\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * redraws all nodes that need to be redrawn. Used internally.\n\t\t * @private\n\t\t * @name _redraw()\n\t\t * @trigger redraw.jstree\n\t\t */\n\t\t_redraw : function () {\n\t\t\tvar nodes = this._model.force_full_redraw ? this._model.data['#'].children.concat([]) : this._model.changed.concat([]),\n\t\t\t\tf = document.createElement('UL'), tmp, i, j;\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\ttmp = this.redraw_node(nodes[i], true, this._model.force_full_redraw);\n\t\t\t\tif(tmp && this._model.force_full_redraw) {\n\t\t\t\t\tf.appendChild(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this._model.force_full_redraw) {\n\t\t\t\tf.className = this.get_container_ul()[0].className;\n\t\t\t\tthis.element.empty().append(f);\n\t\t\t\t//this.get_container_ul()[0].appendChild(f);\n\t\t\t}\n\t\t\tthis._model.force_full_redraw = false;\n\t\t\tthis._model.changed = [];\n\t\t\t/**\n\t\t\t * triggered after nodes are redrawn\n\t\t\t * @event\n\t\t\t * @name redraw.jstree\n\t\t\t * @param {array} nodes the redrawn nodes\n\t\t\t */\n\t\t\tthis.trigger('redraw', { \"nodes\" : nodes });\n\t\t},\n\t\t/**\n\t\t * redraws all nodes that need to be redrawn or optionally - the whole tree\n\t\t * @name redraw([full])\n\t\t * @param {Boolean} full if set to `true` all nodes are redrawn.\n\t\t */\n\t\tredraw : function (full) {\n\t\t\tif(full) {\n\t\t\t\tthis._model.force_full_redraw = true;\n\t\t\t}\n\t\t\t//if(this._model.redraw_timeout) {\n\t\t\t//\tclearTimeout(this._model.redraw_timeout);\n\t\t\t//}\n\t\t\t//this._model.redraw_timeout = setTimeout($.proxy(this._redraw, this),0);\n\t\t\tthis._redraw();\n\t\t},\n\t\t/**\n\t\t * redraws a single node. Used internally.\n\t\t * @private\n\t\t * @name redraw_node(node, deep, is_callback)\n\t\t * @param {mixed} node the node to redraw\n\t\t * @param {Boolean} deep should child nodes be redrawn too\n\t\t * @param {Boolean} is_callback is this a recursion call\n\t\t */\n\t\tredraw_node : function (node, deep, is_callback) {\n\t\t\tvar obj = this.get_node(node),\n\t\t\t\tpar = false,\n\t\t\t\tind = false,\n\t\t\t\told = false,\n\t\t\t\ti = false,\n\t\t\t\tj = false,\n\t\t\t\tk = false,\n\t\t\t\tc = '',\n\t\t\t\td = document,\n\t\t\t\tm = this._model.data,\n\t\t\t\tf = false,\n\t\t\t\ts = false,\n\t\t\t\ttmp = null;\n\t\t\tif(!obj) { return false; }\n\t\t\tif(obj.id === '#') {  return this.redraw(true); }\n\t\t\tdeep = deep || obj.children.length === 0;\n\t\t\tnode = !document.querySelector ? document.getElementById(obj.id) : this.element[0].querySelector('#' + (\"0123456789\".indexOf(obj.id[0]) !== -1 ? '\\\\3' + obj.id[0] + ' ' + obj.id.substr(1).replace($.jstree.idregex,'\\\\$&') : obj.id.replace($.jstree.idregex,'\\\\$&')) ); //, this.element);\n\t\t\tif(!node) {\n\t\t\t\tdeep = true;\n\t\t\t\t//node = d.createElement('LI');\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tpar = obj.parent !== '#' ? $('#' + obj.parent.replace($.jstree.idregex,'\\\\$&'), this.element)[0] : null;\n\t\t\t\t\tif(par !== null && (!par || !m[obj.parent].state.opened)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tind = $.inArray(obj.id, par === null ? m['#'].children : m[obj.parent].children);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode = $(node);\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tpar = node.parent().parent()[0];\n\t\t\t\t\tif(par === this.element[0]) {\n\t\t\t\t\t\tpar = null;\n\t\t\t\t\t}\n\t\t\t\t\tind = node.index();\n\t\t\t\t}\n\t\t\t\t// m[obj.id].data = node.data(); // use only node's data, no need to touch jquery storage\n\t\t\t\tif(!deep && obj.children.length && !node.children('.jstree-children').length) {\n\t\t\t\t\tdeep = true;\n\t\t\t\t}\n\t\t\t\tif(!deep) {\n\t\t\t\t\told = node.children('.jstree-children')[0];\n\t\t\t\t}\n\t\t\t\ts = node.attr('aria-selected');\n\t\t\t\tf = node.children('.jstree-anchor')[0] === document.activeElement;\n\t\t\t\tnode.remove();\n\t\t\t\t//node = d.createElement('LI');\n\t\t\t\t//node = node[0];\n\t\t\t}\n\t\t\tnode = _node.cloneNode(true);\n\t\t\t// node is DOM, deep is boolean\n\n\t\t\tc = 'jstree-node ';\n\t\t\tfor(i in obj.li_attr) {\n\t\t\t\tif(obj.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\tif(i === 'id') { continue; }\n\t\t\t\t\tif(i !== 'class') {\n\t\t\t\t\t\tnode.setAttribute(i, obj.li_attr[i]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tc += obj.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(s && s !== \"false\") {\n\t\t\t\tnode.setAttribute('aria-selected', true);\n\t\t\t}\n\t\t\tif(obj.state.loaded && !obj.children.length) {\n\t\t\t\tc += ' jstree-leaf';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tc += obj.state.opened && obj.state.loaded ? ' jstree-open' : ' jstree-closed';\n\t\t\t\tnode.setAttribute('aria-expanded', (obj.state.opened && obj.state.loaded) );\n\t\t\t}\n\t\t\tif(obj.parent !== null && m[obj.parent].children[m[obj.parent].children.length - 1] === obj.id) {\n\t\t\t\tc += ' jstree-last';\n\t\t\t}\n\t\t\tnode.id = obj.id;\n\t\t\tnode.className = c;\n\t\t\tc = ( obj.state.selected ? ' jstree-clicked' : '') + ( obj.state.disabled ? ' jstree-disabled' : '');\n\t\t\tfor(j in obj.a_attr) {\n\t\t\t\tif(obj.a_attr.hasOwnProperty(j)) {\n\t\t\t\t\tif(j === 'href' && obj.a_attr[j] === '#') { continue; }\n\t\t\t\t\tif(j !== 'class') {\n\t\t\t\t\t\tnode.childNodes[1].setAttribute(j, obj.a_attr[j]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tc += ' ' + obj.a_attr[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c.length) {\n\t\t\t\tnode.childNodes[1].className = 'jstree-anchor ' + c;\n\t\t\t}\n\t\t\tif((obj.icon && obj.icon !== true) || obj.icon === false) {\n\t\t\t\tif(obj.icon === false) {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-hidden';\n\t\t\t\t}\n\t\t\t\telse if(obj.icon.indexOf('/') === -1 && obj.icon.indexOf('.') === -1) {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' ' + obj.icon + ' jstree-themeicon-custom';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundImage = 'url('+obj.icon+')';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundPosition = 'center center';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundSize = 'auto';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-custom';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(this.settings.core.force_text) {\n\t\t\t\tnode.childNodes[1].appendChild(d.createTextNode(obj.text));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode.childNodes[1].innerHTML += obj.text;\n\t\t\t}\n\n\t\t\tif(deep && obj.children.length && obj.state.opened && obj.state.loaded) {\n\t\t\t\tk = d.createElement('UL');\n\t\t\t\tk.setAttribute('role', 'group');\n\t\t\t\tk.className = 'jstree-children';\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], deep, true));\n\t\t\t\t}\n\t\t\t\tnode.appendChild(k);\n\t\t\t}\n\t\t\tif(old) {\n\t\t\t\tnode.appendChild(old);\n\t\t\t}\n\t\t\tif(!is_callback) {\n\t\t\t\t// append back using par / ind\n\t\t\t\tif(!par) {\n\t\t\t\t\tpar = this.element[0];\n\t\t\t\t}\n\t\t\t\tfor(i = 0, j = par.childNodes.length; i < j; i++) {\n\t\t\t\t\tif(par.childNodes[i] && par.childNodes[i].className && par.childNodes[i].className.indexOf('jstree-children') !== -1) {\n\t\t\t\t\t\ttmp = par.childNodes[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!tmp) {\n\t\t\t\t\ttmp = d.createElement('UL');\n\t\t\t\t\ttmp.setAttribute('role', 'group');\n\t\t\t\t\ttmp.className = 'jstree-children';\n\t\t\t\t\tpar.appendChild(tmp);\n\t\t\t\t}\n\t\t\t\tpar = tmp;\n\n\t\t\t\tif(ind < par.childNodes.length) {\n\t\t\t\t\tpar.insertBefore(node, par.childNodes[ind]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpar.appendChild(node);\n\t\t\t\t}\n\t\t\t\tif(f) {\n\t\t\t\t\tnode.childNodes[1].focus();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(obj.state.opened && !obj.state.loaded) {\n\t\t\t\tobj.state.opened = false;\n\t\t\t\tsetTimeout($.proxy(function () {\n\t\t\t\t\tthis.open_node(obj.id, false, 0);\n\t\t\t\t}, this), 0);\n\t\t\t}\n\t\t\treturn node;\n\t\t},\n\t\t/**\n\t\t * opens a node, revaling its children. If the node is not loaded it will be loaded and opened once ready.\n\t\t * @name open_node(obj [, callback, animation])\n\t\t * @param {mixed} obj the node to open\n\t\t * @param {Function} callback a function to execute once the node is opened\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the node (overrides the `core.animation` setting). Use `false` for no animation.\n\t\t * @trigger open_node.jstree, after_open.jstree, before_open.jstree\n\t\t */\n\t\topen_node : function (obj, callback, animation) {\n\t\t\tvar t1, t2, d, t;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.open_node(obj[t1], callback, animation);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\n\t\t\tif(!this.is_closed(obj)) {\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, false);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!this.is_loaded(obj)) {\n\t\t\t\tif(this.is_loading(obj)) {\n\t\t\t\t\treturn setTimeout($.proxy(function () {\n\t\t\t\t\t\tthis.open_node(obj, callback, animation);\n\t\t\t\t\t}, this), 500);\n\t\t\t\t}\n\t\t\t\tthis.load_node(obj, function (o, ok) {\n\t\t\t\t\treturn ok ? this.open_node(o, callback, animation) : (callback ? callback.call(this, o, false) : false);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\td = this.get_node(obj, true);\n\t\t\t\tt = this;\n\t\t\t\tif(d.length) {\n\t\t\t\t\tif(obj.children.length && !this._firstChild(d.children('.jstree-children')[0])) {\n\t\t\t\t\t\tobj.state.opened = true;\n\t\t\t\t\t\tthis.redraw_node(obj, true);\n\t\t\t\t\t\td = this.get_node(obj, true);\n\t\t\t\t\t}\n\t\t\t\t\tif(!animation) {\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t\t\td[0].className = d[0].className.replace('jstree-closed', 'jstree-open');\n\t\t\t\t\t\td[0].setAttribute(\"aria-expanded\", true);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t\t\td\n\t\t\t\t\t\t\t.children(\".jstree-children\").css(\"display\",\"none\").end()\n\t\t\t\t\t\t\t.removeClass(\"jstree-closed\").addClass(\"jstree-open\").attr(\"aria-expanded\", true)\n\t\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true)\n\t\t\t\t\t\t\t\t.slideDown(animation, function () {\n\t\t\t\t\t\t\t\t\tthis.style.display = \"\";\n\t\t\t\t\t\t\t\t\tt.trigger(\"after_open\", { \"node\" : obj });\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobj.state.opened = true;\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, true);\n\t\t\t\t}\n\t\t\t\tif(!d.length) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a node is about to be opened (if the node is supposed to be in the DOM, it will be, but it won't be visible yet)\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name before_open.jstree\n\t\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is opened (if there is an animation it will not be completed yet)\n\t\t\t\t * @event\n\t\t\t\t * @name open_node.jstree\n\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t */\n\t\t\t\tthis.trigger('open_node', { \"node\" : obj });\n\t\t\t\tif(!animation || !d.length) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a node is opened and the animation is complete\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name after_open.jstree\n\t\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger(\"after_open\", { \"node\" : obj });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * opens every parent of a node (node should be loaded)\n\t\t * @name _open_to(obj)\n\t\t * @param {mixed} obj the node to reveal\n\t\t * @private\n\t\t */\n\t\t_open_to : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar i, j, p = obj.parents;\n\t\t\tfor(i = 0, j = p.length; i < j; i+=1) {\n\t\t\t\tif(i !== '#') {\n\t\t\t\t\tthis.open_node(p[i], false, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\n\t\t},\n\t\t/**\n\t\t * closes a node, hiding its children\n\t\t * @name close_node(obj [, animation])\n\t\t * @param {mixed} obj the node to close\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the node (overrides the `core.animation` setting). Use `false` for no animation.\n\t\t * @trigger close_node.jstree, after_close.jstree\n\t\t */\n\t\tclose_node : function (obj, animation) {\n\t\t\tvar t1, t2, t, d;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.close_node(obj[t1], animation);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(this.is_closed(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\n\t\t\tt = this;\n\t\t\td = this.get_node(obj, true);\n\t\t\tif(d.length) {\n\t\t\t\tif(!animation) {\n\t\t\t\t\td[0].className = d[0].className.replace('jstree-open', 'jstree-closed');\n\t\t\t\t\td.attr(\"aria-expanded\", false).children('.jstree-children').remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td\n\t\t\t\t\t\t.children(\".jstree-children\").attr(\"style\",\"display:block !important\").end()\n\t\t\t\t\t\t.removeClass(\"jstree-open\").addClass(\"jstree-closed\").attr(\"aria-expanded\", false)\n\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true).slideUp(animation, function () {\n\t\t\t\t\t\t\tthis.style.display = \"\";\n\t\t\t\t\t\t\td.children('.jstree-children').remove();\n\t\t\t\t\t\t\tt.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.state.opened = false;\n\t\t\t/**\n\t\t\t * triggered when a node is closed (if there is an animation it will not be complete yet)\n\t\t\t * @event\n\t\t\t * @name close_node.jstree\n\t\t\t * @param {Object} node the closed node\n\t\t\t */\n\t\t\tthis.trigger('close_node',{ \"node\" : obj });\n\t\t\tif(!animation || !d.length) {\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is closed and the animation is complete\n\t\t\t\t * @event\n\t\t\t\t * @name after_close.jstree\n\t\t\t\t * @param {Object} node the closed node\n\t\t\t\t */\n\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * toggles a node - closing it if it is open, opening it if it is closed\n\t\t * @name toggle_node(obj)\n\t\t * @param {mixed} obj the node to toggle\n\t\t */\n\t\ttoggle_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.toggle_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(this.is_closed(obj)) {\n\t\t\t\treturn this.open_node(obj);\n\t\t\t}\n\t\t\tif(this.is_open(obj)) {\n\t\t\t\treturn this.close_node(obj);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * opens all nodes within a node (or the tree), revaling their children. If the node is not loaded it will be loaded and opened once ready.\n\t\t * @name open_all([obj, animation, original_obj])\n\t\t * @param {mixed} obj the node to open recursively, omit to open all nodes in the tree\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the nodes, the default is no animation\n\t\t * @param {jQuery} reference to the node that started the process (internal use)\n\t\t * @trigger open_all.jstree\n\t\t */\n\t\topen_all : function (obj, animation, original_obj) {\n\t\t\tif(!obj) { obj = '#'; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar dom = obj.id === '#' ? this.get_container_ul() : this.get_node(obj, true), i, j, _this;\n\t\t\tif(!dom.length) {\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tif(this.is_closed(this._model.data[obj.children_d[i]])) {\n\t\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.trigger('open_all', { \"node\" : obj });\n\t\t\t}\n\t\t\toriginal_obj = original_obj || dom;\n\t\t\t_this = this;\n\t\t\tdom = this.is_closed(obj) ? dom.find('.jstree-closed').addBack() : dom.find('.jstree-closed');\n\t\t\tdom.each(function () {\n\t\t\t\t_this.open_node(\n\t\t\t\t\tthis,\n\t\t\t\t\tfunction(node, status) { if(status && this.is_parent(node)) { this.open_all(node, animation, original_obj); } },\n\t\t\t\t\tanimation || 0\n\t\t\t\t);\n\t\t\t});\n\t\t\tif(original_obj.find('.jstree-closed').length === 0) {\n\t\t\t\t/**\n\t\t\t\t * triggered when an `open_all` call completes\n\t\t\t\t * @event\n\t\t\t\t * @name open_all.jstree\n\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t */\n\t\t\t\tthis.trigger('open_all', { \"node\" : this.get_node(original_obj) });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * closes all nodes within a node (or the tree), revaling their children\n\t\t * @name close_all([obj, animation])\n\t\t * @param {mixed} obj the node to close recursively, omit to close all nodes in the tree\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the nodes, the default is no animation\n\t\t * @trigger close_all.jstree\n\t\t */\n\t\tclose_all : function (obj, animation) {\n\t\t\tif(!obj) { obj = '#'; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar dom = obj.id === '#' ? this.get_container_ul() : this.get_node(obj, true),\n\t\t\t\t_this = this, i, j;\n\t\t\tif(!dom.length) {\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = false;\n\t\t\t\t}\n\t\t\t\treturn this.trigger('close_all', { \"node\" : obj });\n\t\t\t}\n\t\t\tdom = this.is_open(obj) ? dom.find('.jstree-open').addBack() : dom.find('.jstree-open');\n\t\t\t$(dom.get().reverse()).each(function () { _this.close_node(this, animation || 0); });\n\t\t\t/**\n\t\t\t * triggered when an `close_all` call completes\n\t\t\t * @event\n\t\t\t * @name close_all.jstree\n\t\t\t * @param {Object} node the closed node\n\t\t\t */\n\t\t\tthis.trigger('close_all', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * checks if a node is disabled (not selectable)\n\t\t * @name is_disabled(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_disabled : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state && obj.state.disabled;\n\t\t},\n\t\t/**\n\t\t * enables a node - so that it can be selected\n\t\t * @name enable_node(obj)\n\t\t * @param {mixed} obj the node to enable\n\t\t * @trigger enable_node.jstree\n\t\t */\n\t\tenable_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.enable_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.state.disabled = false;\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').removeClass('jstree-disabled');\n\t\t\t/**\n\t\t\t * triggered when an node is enabled\n\t\t\t * @event\n\t\t\t * @name enable_node.jstree\n\t\t\t * @param {Object} node the enabled node\n\t\t\t */\n\t\t\tthis.trigger('enable_node', { 'node' : obj });\n\t\t},\n\t\t/**\n\t\t * disables a node - so that it can not be selected\n\t\t * @name disable_node(obj)\n\t\t * @param {mixed} obj the node to disable\n\t\t * @trigger disable_node.jstree\n\t\t */\n\t\tdisable_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.disable_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.state.disabled = true;\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').addClass('jstree-disabled');\n\t\t\t/**\n\t\t\t * triggered when an node is disabled\n\t\t\t * @event\n\t\t\t * @name disable_node.jstree\n\t\t\t * @param {Object} node the disabled node\n\t\t\t */\n\t\t\tthis.trigger('disable_node', { 'node' : obj });\n\t\t},\n\t\t/**\n\t\t * called when a node is selected by the user. Used internally.\n\t\t * @private\n\t\t * @name activate_node(obj, e)\n\t\t * @param {mixed} obj the node\n\t\t * @param {Object} e the related event\n\t\t * @trigger activate_node.jstree\n\t\t */\n\t\tactivate_node : function (obj, e) {\n\t\t\tif(this.is_disabled(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// ensure last_clicked is still in the DOM, make it fresh (maybe it was moved?) and make sure it is still selected, if not - make last_clicked the last selected node\n\t\t\tthis._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== undefined ? this.get_node(this._data.core.last_clicked.id) : null;\n\t\t\tif(this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) { this._data.core.last_clicked = null; }\n\t\t\tif(!this._data.core.last_clicked && this._data.core.selected.length) { this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1]); }\n\n\t\t\tif(!this.settings.core.multiple || (!e.metaKey && !e.ctrlKey && !e.shiftKey) || (e.shiftKey && (!this._data.core.last_clicked || !this.get_parent(obj) || this.get_parent(obj) !== this._data.core.last_clicked.parent ) )) {\n\t\t\t\tif(!this.settings.core.multiple && (e.metaKey || e.ctrlKey || e.shiftKey) && this.is_selected(obj)) {\n\t\t\t\t\tthis.deselect_node(obj, false, e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.deselect_all(true);\n\t\t\t\t\tthis.select_node(obj, false, false, e);\n\t\t\t\t\tthis._data.core.last_clicked = this.get_node(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(e.shiftKey) {\n\t\t\t\t\tvar o = this.get_node(obj).id,\n\t\t\t\t\t\tl = this._data.core.last_clicked.id,\n\t\t\t\t\t\tp = this.get_node(this._data.core.last_clicked.parent).children,\n\t\t\t\t\t\tc = false,\n\t\t\t\t\t\ti, j;\n\t\t\t\t\tfor(i = 0, j = p.length; i < j; i += 1) {\n\t\t\t\t\t\t// separate IFs work whem o and l are the same\n\t\t\t\t\t\tif(p[i] === o) {\n\t\t\t\t\t\t\tc = !c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(p[i] === l) {\n\t\t\t\t\t\t\tc = !c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(c || p[i] === o || p[i] === l) {\n\t\t\t\t\t\t\tthis.select_node(p[i], false, false, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.deselect_node(p[i], false, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(!this.is_selected(obj)) {\n\t\t\t\t\t\tthis.select_node(obj, false, false, e);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.deselect_node(obj, false, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when an node is clicked or intercated with by the user\n\t\t\t * @event\n\t\t\t * @name activate_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\n\t\t},\n\t\t/**\n\t\t * applies the hover state on a node, called when a node is hovered by the user. Used internally.\n\t\t * @private\n\t\t * @name hover_node(obj)\n\t\t * @param {mixed} obj\n\t\t * @trigger hover_node.jstree\n\t\t */\n\t\thover_node : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(!obj || !obj.length || obj.children('.jstree-hovered').length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar o = this.element.find('.jstree-hovered'), t = this.element;\n\t\t\tif(o && o.length) { this.dehover_node(o); }\n\n\t\t\tobj.children('.jstree-anchor').addClass('jstree-hovered');\n\t\t\t/**\n\t\t\t * triggered when an node is hovered\n\t\t\t * @event\n\t\t\t * @name hover_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('hover_node', { 'node' : this.get_node(obj) });\n\t\t\tsetTimeout(function () { t.attr('aria-activedescendant', obj[0].id); obj.attr('aria-selected', true); }, 0);\n\t\t},\n\t\t/**\n\t\t * removes the hover state from a nodecalled when a node is no longer hovered by the user. Used internally.\n\t\t * @private\n\t\t * @name dehover_node(obj)\n\t\t * @param {mixed} obj\n\t\t * @trigger dehover_node.jstree\n\t\t */\n\t\tdehover_node : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(!obj || !obj.length || !obj.children('.jstree-hovered').length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.attr('aria-selected', false).children('.jstree-anchor').removeClass('jstree-hovered');\n\t\t\t/**\n\t\t\t * triggered when an node is no longer hovered\n\t\t\t * @event\n\t\t\t * @name dehover_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('dehover_node', { 'node' : this.get_node(obj) });\n\t\t},\n\t\t/**\n\t\t * select a node\n\t\t * @name select_node(obj [, supress_event, prevent_open])\n\t\t * @param {mixed} obj an array can be used to select multiple nodes\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @param {Boolean} prevent_open if set to `true` parents of the selected node won't be opened\n\t\t * @trigger select_node.jstree, changed.jstree\n\t\t */\n\t\tselect_node : function (obj, supress_event, prevent_open, e) {\n\t\t\tvar dom, t1, t2, th;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.select_node(obj[t1], supress_event, prevent_open, e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.selected) {\n\t\t\t\tobj.state.selected = true;\n\t\t\t\tthis._data.core.selected.push(obj.id);\n\t\t\t\tif(!prevent_open) {\n\t\t\t\t\tdom = this._open_to(obj);\n\t\t\t\t}\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-clicked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is selected\n\t\t\t\t * @event\n\t\t\t\t * @name select_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this select_node\n\t\t\t\t */\n\t\t\t\tthis.trigger('select_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\tif(!supress_event) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when selection changes\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name changed.jstree\n\t\t\t\t\t * @param {Object} node\n\t\t\t\t\t * @param {Object} action the action that caused the selection to change\n\t\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t\t * @param {Object} event the event (if any) that triggered this changed event\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * deselect a node\n\t\t * @name deselect_node(obj [, supress_event])\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger deselect_node.jstree, changed.jstree\n\t\t */\n\t\tdeselect_node : function (obj, supress_event, e) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.deselect_node(obj[t1], supress_event, e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.selected) {\n\t\t\t\tobj.state.selected = false;\n\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.id);\n\t\t\t\tif(dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-clicked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is deselected\n\t\t\t\t * @event\n\t\t\t\t * @name deselect_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this deselect_node\n\t\t\t\t */\n\t\t\t\tthis.trigger('deselect_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\tif(!supress_event) {\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * select all nodes in the tree\n\t\t * @name select_all([supress_event])\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger select_all.jstree, changed.jstree\n\t\t */\n\t\tselect_all : function (supress_event) {\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\n\t\t\tthis._data.core.selected = this._model.data['#'].children_d.concat();\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.redraw(true);\n\t\t\t/**\n\t\t\t * triggered when all nodes are selected\n\t\t\t * @event\n\t\t\t * @name select_all.jstree\n\t\t\t * @param {Array} selected the current selection\n\t\t\t */\n\t\t\tthis.trigger('select_all', { 'selected' : this._data.core.selected });\n\t\t\tif(!supress_event) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'select_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * deselect all selected nodes\n\t\t * @name deselect_all([supress_event])\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger deselect_all.jstree, changed.jstree\n\t\t */\n\t\tdeselect_all : function (supress_event) {\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.core.selected = [];\n\t\t\tthis.element.find('.jstree-clicked').removeClass('jstree-clicked');\n\t\t\t/**\n\t\t\t * triggered when all nodes are deselected\n\t\t\t * @event\n\t\t\t * @name deselect_all.jstree\n\t\t\t * @param {Object} node the previous selection\n\t\t\t * @param {Array} selected the current selection\n\t\t\t */\n\t\t\tthis.trigger('deselect_all', { 'selected' : this._data.core.selected, 'node' : tmp });\n\t\t\tif(!supress_event) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * checks if a node is selected\n\t\t * @name is_selected(obj)\n\t\t * @param  {mixed}  obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_selected : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.state.selected;\n\t\t},\n\t\t/**\n\t\t * get an array of all selected nodes\n\t\t * @name get_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_selected : function (full) {\n\t\t\treturn full ? $.map(this._data.core.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.core.selected.slice();\n\t\t},\n\t\t/**\n\t\t * get an array of all top level selected nodes (ignoring children of selected nodes)\n\t\t * @name get_top_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_top_selected : function (full) {\n\t\t\tvar tmp = this.get_selected(true),\n\t\t\t\tobj = {}, i, j, k, l;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tobj[tmp[i].id] = tmp[i];\n\t\t\t}\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tfor(i in obj) {\n\t\t\t\tif(obj.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\n\t\t},\n\t\t/**\n\t\t * get an array of all bottom level selected nodes (ignoring selected parents)\n\t\t * @name get_bottom_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_bottom_selected : function (full) {\n\t\t\tvar tmp = this.get_selected(true),\n\t\t\t\tobj = [], i, j;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tif(!tmp[i].children.length) {\n\t\t\t\t\tobj.push(tmp[i].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\n\t\t},\n\t\t/**\n\t\t * gets the current state of the tree so that it can be restored later with `set_state(state)`. Used internally.\n\t\t * @name get_state()\n\t\t * @private\n\t\t * @return {Object}\n\t\t */\n\t\tget_state : function () {\n\t\t\tvar state\t= {\n\t\t\t\t'core' : {\n\t\t\t\t\t'open' : [],\n\t\t\t\t\t'scroll' : {\n\t\t\t\t\t\t'left' : this.element.scrollLeft(),\n\t\t\t\t\t\t'top' : this.element.scrollTop()\n\t\t\t\t\t},\n\t\t\t\t\t/*!\n\t\t\t\t\t'themes' : {\n\t\t\t\t\t\t'name' : this.get_theme(),\n\t\t\t\t\t\t'icons' : this._data.core.themes.icons,\n\t\t\t\t\t\t'dots' : this._data.core.themes.dots\n\t\t\t\t\t},\n\t\t\t\t\t*/\n\t\t\t\t\t'selected' : []\n\t\t\t\t}\n\t\t\t}, i;\n\t\t\tfor(i in this._model.data) {\n\t\t\t\tif(this._model.data.hasOwnProperty(i)) {\n\t\t\t\t\tif(i !== '#') {\n\t\t\t\t\t\tif(this._model.data[i].state.opened) {\n\t\t\t\t\t\t\tstate.core.open.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this._model.data[i].state.selected) {\n\t\t\t\t\t\t\tstate.core.selected.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn state;\n\t\t},\n\t\t/**\n\t\t * sets the state of the tree. Used internally.\n\t\t * @name set_state(state [, callback])\n\t\t * @private\n\t\t * @param {Object} state the state to restore\n\t\t * @param {Function} callback an optional function to execute once the state is restored.\n\t\t * @trigger set_state.jstree\n\t\t */\n\t\tset_state : function (state, callback) {\n\t\t\tif(state) {\n\t\t\t\tif(state.core) {\n\t\t\t\t\tvar res, n, t, _this;\n\t\t\t\t\tif(state.core.open) {\n\t\t\t\t\t\tif(!$.isArray(state.core.open)) {\n\t\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres = true;\n\t\t\t\t\t\tn = false;\n\t\t\t\t\t\tt = this;\n\t\t\t\t\t\t$.each(state.core.open.concat([]), function (i, v) {\n\t\t\t\t\t\t\tn = t.get_node(v);\n\t\t\t\t\t\t\tif(n) {\n\t\t\t\t\t\t\t\tif(t.is_loaded(v)) {\n\t\t\t\t\t\t\t\t\tif(t.is_closed(v)) {\n\t\t\t\t\t\t\t\t\t\tt.open_node(v, false, 0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(state && state.core && state.core.open) {\n\t\t\t\t\t\t\t\t\t\t$.vakata.array_remove_item(state.core.open, v);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif(!t.is_loading(v)) {\n\t\t\t\t\t\t\t\t\t\tt.open_node(v, $.proxy(function (o, s) {\n\t\t\t\t\t\t\t\t\t\t\tif(!s && state && state.core && state.core.open) {\n\t\t\t\t\t\t\t\t\t\t\t\t$.vakata.array_remove_item(state.core.open, o.id);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t\t\t\t\t}, t), 0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// there will be some async activity - so wait for it\n\t\t\t\t\t\t\t\t\tres = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(res) {\n\t\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif(state.core.scroll) {\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.left !== undefined) {\n\t\t\t\t\t\t\tthis.element.scrollLeft(state.core.scroll.left);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.top !== undefined) {\n\t\t\t\t\t\t\tthis.element.scrollTop(state.core.scroll.top);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete state.core.scroll;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t/*!\n\t\t\t\t\tif(state.core.themes) {\n\t\t\t\t\t\tif(state.core.themes.name) {\n\t\t\t\t\t\t\tthis.set_theme(state.core.themes.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(typeof state.core.themes.dots !== 'undefined') {\n\t\t\t\t\t\t\tthis[ state.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(typeof state.core.themes.icons !== 'undefined') {\n\t\t\t\t\t\t\tthis[ state.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete state.core.themes;\n\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tif(state.core.selected) {\n\t\t\t\t\t\t_this = this;\n\t\t\t\t\t\tthis.deselect_all();\n\t\t\t\t\t\t$.each(state.core.selected, function (i, v) {\n\t\t\t\t\t\t\t_this.select_node(v);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdelete state.core.selected;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif($.isEmptyObject(state.core)) {\n\t\t\t\t\t\tdelete state.core;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif($.isEmptyObject(state)) {\n\t\t\t\t\tstate = null;\n\t\t\t\t\tif(callback) { callback.call(this); }\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a `set_state` call completes\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name set_state.jstree\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('set_state');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t/**\n\t\t * refreshes the tree - all nodes are reloaded with calls to `load_node`.\n\t\t * @name refresh()\n\t\t * @param {Boolean} skip_loading an option to skip showing the loading indicator\n\t\t * @param {Mixed} forget_state if set to `true` state will not be reapplied, if set to a function (receiving the current state as argument) the result of that function will be used as state\n\t\t * @trigger refresh.jstree\n\t\t */\n\t\trefresh : function (skip_loading, forget_state) {\n\t\t\tthis._data.core.state = forget_state === true ? {} : this.get_state();\n\t\t\tif(forget_state && $.isFunction(forget_state)) { this._data.core.state = forget_state.call(this, this._data.core.state); }\n\t\t\tthis._cnt = 0;\n\t\t\tthis._model.data = {\n\t\t\t\t'#' : {\n\t\t\t\t\tid : '#',\n\t\t\t\t\tparent : null,\n\t\t\t\t\tparents : [],\n\t\t\t\t\tchildren : [],\n\t\t\t\t\tchildren_d : [],\n\t\t\t\t\tstate : { loaded : false }\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar c = this.get_container_ul()[0].className;\n\t\t\tif(!skip_loading) {\n\t\t\t\tthis.element.html(\"<\"+\"ul class='\"+c+\"'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\n\t\t\t}\n\t\t\tthis.load_node('#', function (o, s) {\n\t\t\t\tif(s) {\n\t\t\t\t\tthis.get_container_ul()[0].className = c;\n\t\t\t\t\tthis.set_state($.extend(true, {}, this._data.core.state), function () {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * triggered when a `refresh` call completes\n\t\t\t\t\t\t * @event\n\t\t\t\t\t\t * @name refresh.jstree\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.trigger('refresh');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis._data.core.state = null;\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * refreshes a node in the tree (reload its children) all opened nodes inside that node are reloaded with calls to `load_node`.\n\t\t * @name refresh_node(obj)\n\t\t * @param  {mixed} obj the node\n\t\t * @trigger refresh_node.jstree\n\t\t */\n\t\trefresh_node : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tvar opened = [], to_load = [], s = this._data.core.selected.concat([]);\n\t\t\tto_load.push(obj.id);\n\t\t\tif(obj.state.opened === true) { opened.push(obj.id); }\n\t\t\tthis.get_node(obj, true).find('.jstree-open').each(function() { opened.push(this.id); });\n\t\t\tthis._load_nodes(to_load, $.proxy(function (nodes) {\n\t\t\t\tthis.open_node(opened, false, 0);\n\t\t\t\tthis.select_node(this._data.core.selected);\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is refreshed\n\t\t\t\t * @event\n\t\t\t\t * @name refresh_node.jstree\n\t\t\t\t * @param {Object} node - the refreshed node\n\t\t\t\t * @param {Array} nodes - an array of the IDs of the nodes that were reloaded\n\t\t\t\t */\n\t\t\t\tthis.trigger('refresh_node', { 'node' : obj, 'nodes' : nodes });\n\t\t\t}, this));\n\t\t},\n\t\t/**\n\t\t * set (change) the ID of a node\n\t\t * @name set_id(obj, id)\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {String} id the new ID\n\t\t * @return {Boolean}\n\t\t */\n\t\tset_id : function (obj, id) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tvar i, j, m = this._model.data;\n\t\t\tid = id.toString();\n\t\t\t// update parents (replace current ID with new one in children and children_d)\n\t\t\tm[obj.parent].children[$.inArray(obj.id, m[obj.parent].children)] = id;\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tm[obj.parents[i]].children_d[$.inArray(obj.id, m[obj.parents[i]].children_d)] = id;\n\t\t\t}\n\t\t\t// update children (replace current ID with new one in parent and parents)\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\tm[obj.children[i]].parent = id;\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tm[obj.children_d[i]].parents[$.inArray(obj.id, m[obj.children_d[i]].parents)] = id;\n\t\t\t}\n\t\t\ti = $.inArray(obj.id, this._data.core.selected);\n\t\t\tif(i !== -1) { this._data.core.selected[i] = id; }\n\t\t\t// update model and obj itself (obj.id, this._model.data[KEY])\n\t\t\ti = this.get_node(obj.id, true);\n\t\t\tif(i) {\n\t\t\t\ti.attr('id', id);\n\t\t\t}\n\t\t\tdelete m[obj.id];\n\t\t\tobj.id = id;\n\t\t\tm[id] = obj;\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the text value of a node\n\t\t * @name get_text(obj)\n\t\t * @param  {mixed} obj the node\n\t\t * @return {String}\n\t\t */\n\t\tget_text : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj || obj.id === '#') ? false : obj.text;\n\t\t},\n\t\t/**\n\t\t * set the text value of a node. Used internally, please use `rename_node(obj, val)`.\n\t\t * @private\n\t\t * @name set_text(obj, val)\n\t\t * @param  {mixed} obj the node, you can pass an array to set the text on multiple nodes\n\t\t * @param  {String} val the new text value\n\t\t * @return {Boolean}\n\t\t * @trigger set_text.jstree\n\t\t */\n\t\tset_text : function (obj, val) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_text(obj[t1], val);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tobj.text = val;\n\t\t\tif(this.get_node(obj, true).length) {\n\t\t\t\tthis.redraw_node(obj.id);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when a node text value is changed\n\t\t\t * @event\n\t\t\t * @name set_text.jstree\n\t\t\t * @param {Object} obj\n\t\t\t * @param {String} text the new value\n\t\t\t */\n\t\t\tthis.trigger('set_text',{ \"obj\" : obj, \"text\" : val });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * gets a JSON representation of a node (or the whole tree)\n\t\t * @name get_json([obj, options])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Object} options\n\t\t * @param  {Boolean} options.no_state do not return state information\n\t\t * @param  {Boolean} options.no_id do not return ID\n\t\t * @param  {Boolean} options.no_children do not include children\n\t\t * @param  {Boolean} options.no_data do not include node data\n\t\t * @param  {Boolean} options.flat return flat JSON instead of nested\n\t\t * @return {Object}\n\t\t */\n\t\tget_json : function (obj, options, flat) {\n\t\t\tobj = this.get_node(obj || '#');\n\t\t\tif(!obj) { return false; }\n\t\t\tif(options && options.flat && !flat) { flat = []; }\n\t\t\tvar tmp = {\n\t\t\t\t'id' : obj.id,\n\t\t\t\t'text' : obj.text,\n\t\t\t\t'icon' : this.get_icon(obj),\n\t\t\t\t'li_attr' : obj.li_attr,\n\t\t\t\t'a_attr' : obj.a_attr,\n\t\t\t\t'state' : {},\n\t\t\t\t'data' : options && options.no_data ? false : obj.data\n\t\t\t\t//( this.get_node(obj, true).length ? this.get_node(obj, true).data() : obj.data ),\n\t\t\t}, i, j;\n\t\t\tif(options && options.flat) {\n\t\t\t\ttmp.parent = obj.parent;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp.children = [];\n\t\t\t}\n\t\t\tif(!options || !options.no_state) {\n\t\t\t\tfor(i in obj.state) {\n\t\t\t\t\tif(obj.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = obj.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(options && options.no_id) {\n\t\t\t\tdelete tmp.id;\n\t\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\n\t\t\t\t\tdelete tmp.li_attr.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(options && options.flat && obj.id !== '#') {\n\t\t\t\tflat.push(tmp);\n\t\t\t}\n\t\t\tif(!options || !options.no_children) {\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tif(options && options.flat) {\n\t\t\t\t\t\tthis.get_json(obj.children[i], options, flat);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttmp.children.push(this.get_json(obj.children[i], options));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn options && options.flat ? flat : (obj.id === '#' ? tmp.children : tmp);\n\t\t},\n\t\t/**\n\t\t * create a new node (do not confuse with load_node)\n\t\t * @name create_node([obj, node, pos, callback, is_loaded])\n\t\t * @param  {mixed}   par       the parent node (to create a root node use either \"#\" (string) or `null`)\n\t\t * @param  {mixed}   node      the data for the new node (a valid JSON object, or a simple string with the name)\n\t\t * @param  {mixed}   pos       the index at which to insert the node, \"first\" and \"last\" are also supported, default is \"last\"\n\t\t * @param  {Function} callback a function to be called once the node is created\n\t\t * @param  {Boolean} is_loaded internal argument indicating if the parent node was succesfully loaded\n\t\t * @return {String}            the ID of the newly create node\n\t\t * @trigger model.jstree, create_node.jstree\n\t\t */\n\t\tcreate_node : function (par, node, pos, callback, is_loaded) {\n\t\t\tif(par === null) { par = \"#\"; }\n\t\t\tpar = this.get_node(par);\n\t\t\tif(!par) { return false; }\n\t\t\tpos = pos === undefined ? \"last\" : pos;\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.create_node(par, node, pos, callback, true); });\n\t\t\t}\n\t\t\tif(!node) { node = { \"text\" : this.get_string('New node') }; }\n\t\t\tif(node.text === undefined) { node.text = this.get_string('New node'); }\n\t\t\tvar tmp, dpc, i, j;\n\n\t\t\tif(par.id === '#') {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\ttmp = this.get_node(par.parent);\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children);\n\t\t\t\t\tpar = tmp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\ttmp = this.get_node(par.parent);\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children) + 1;\n\t\t\t\t\tpar = tmp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > par.children.length) { pos = par.children.length; }\n\t\t\tif(!node.id) { node.id = true; }\n\t\t\tif(!this.check(\"create_node\", node, par, pos)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(node.id === true) { delete node.id; }\n\t\t\tnode = this._parse_model_from_json(node, par.id, par.parents.concat());\n\t\t\tif(!node) { return false; }\n\t\t\ttmp = this.get_node(node);\n\t\t\tdpc = [];\n\t\t\tdpc.push(node);\n\t\t\tdpc = dpc.concat(tmp.children_d);\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : par.id });\n\n\t\t\tpar.children_d = par.children_d.concat(dpc);\n\t\t\tfor(i = 0, j = par.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[par.parents[i]].children_d = this._model.data[par.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\tnode = tmp;\n\t\t\ttmp = [];\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\ttmp[i >= pos ? i+1 : i] = par.children[i];\n\t\t\t}\n\t\t\ttmp[pos] = node.id;\n\t\t\tpar.children = tmp;\n\n\t\t\tthis.redraw_node(par, true);\n\t\t\tif(callback) { callback.call(this, this.get_node(node)); }\n\t\t\t/**\n\t\t\t * triggered when a node is created\n\t\t\t * @event\n\t\t\t * @name create_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the new node among the parent's children\n\t\t\t */\n\t\t\tthis.trigger('create_node', { \"node\" : this.get_node(node), \"parent\" : par.id, \"position\" : pos });\n\t\t\treturn node.id;\n\t\t},\n\t\t/**\n\t\t * set the text value of a node\n\t\t * @name rename_node(obj, val)\n\t\t * @param  {mixed} obj the node, you can pass an array to rename multiple nodes to the same name\n\t\t * @param  {String} val the new text value\n\t\t * @return {Boolean}\n\t\t * @trigger rename_node.jstree\n\t\t */\n\t\trename_node : function (obj, val) {\n\t\t\tvar t1, t2, old;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.rename_node(obj[t1], val);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\told = obj.text;\n\t\t\tif(!this.check(\"rename_node\", obj, this.get_parent(obj), val)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.set_text(obj, val); // .apply(this, Array.prototype.slice.call(arguments))\n\t\t\t/**\n\t\t\t * triggered when a node is renamed\n\t\t\t * @event\n\t\t\t * @name rename_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} text the new value\n\t\t\t * @param {String} old the old value\n\t\t\t */\n\t\t\tthis.trigger('rename_node', { \"node\" : obj, \"text\" : val, \"old\" : old });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * remove a node\n\t\t * @name delete_node(obj)\n\t\t * @param  {mixed} obj the node, you can pass an array to delete multiple nodes\n\t\t * @return {Boolean}\n\t\t * @trigger delete_node.jstree, changed.jstree\n\t\t */\n\t\tdelete_node : function (obj) {\n\t\t\tvar t1, t2, par, pos, tmp, i, j, k, l, c;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.delete_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tpar = this.get_node(obj.parent);\n\t\t\tpos = $.inArray(obj.id, par.children);\n\t\t\tc = false;\n\t\t\tif(!this.check(\"delete_node\", obj, par, pos)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(pos !== -1) {\n\t\t\t\tpar.children = $.vakata.array_remove(par.children, pos);\n\t\t\t}\n\t\t\ttmp = obj.children_d.concat([]);\n\t\t\ttmp.push(obj.id);\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\tpos = $.inArray(tmp[k], this._model.data[obj.parents[i]].children_d);\n\t\t\t\t\tif(pos !== -1) {\n\t\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_remove(this._model.data[obj.parents[i]].children_d, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this._model.data[tmp[k]].state.selected) {\n\t\t\t\t\tc = true;\n\t\t\t\t\tpos = $.inArray(tmp[k], this._data.core.selected);\n\t\t\t\t\tif(pos !== -1) {\n\t\t\t\t\t\tthis._data.core.selected = $.vakata.array_remove(this._data.core.selected, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when a node is deleted\n\t\t\t * @event\n\t\t\t * @name delete_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t */\n\t\t\tthis.trigger('delete_node', { \"node\" : obj, \"parent\" : par.id });\n\t\t\tif(c) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'delete_node', 'node' : obj, 'selected' : this._data.core.selected, 'parent' : par.id });\n\t\t\t}\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tdelete this._model.data[tmp[k]];\n\t\t\t}\n\t\t\tthis.redraw_node(par, true);\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * check if an operation is premitted on the tree. Used internally.\n\t\t * @private\n\t\t * @name check(chk, obj, par, pos)\n\t\t * @param  {String} chk the operation to check, can be \"create_node\", \"rename_node\", \"delete_node\", \"copy_node\" or \"move_node\"\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {mixed} par the parent\n\t\t * @param  {mixed} pos the position to insert at, or if \"rename_node\" - the new name\n\t\t * @param  {mixed} more some various additional information, for example if a \"move_node\" operations is triggered by DND this will be the hovered node\n\t\t * @return {Boolean}\n\t\t */\n\t\tcheck : function (chk, obj, par, pos, more) {\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tvar tmp = chk.match(/^move_node|copy_node|create_node$/i) ? par : obj,\n\t\t\t\tchc = this.settings.core.check_callback;\n\t\t\tif(chk === \"move_node\" || chk === \"copy_node\") {\n\t\t\t\tif((!more || !more.is_multi) && (obj.id === par.id || $.inArray(obj.id, par.children) === pos || $.inArray(par.id, obj.children_d) !== -1)) {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_01', 'reason' : 'Moving parent inside child', 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp && tmp.data) { tmp = tmp.data; }\n\t\t\tif(tmp && tmp.functions && (tmp.functions[chk] === false || tmp.functions[chk] === true)) {\n\t\t\t\tif(tmp.functions[chk] === false) {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_02', 'reason' : 'Node data prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t}\n\t\t\t\treturn tmp.functions[chk];\n\t\t\t}\n\t\t\tif(chc === false || ($.isFunction(chc) && chc.call(this, chk, obj, par, pos, more) === false) || (chc && chc[chk] === false)) {\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_03', 'reason' : 'User config for core.check_callback prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the last error\n\t\t * @name last_error()\n\t\t * @return {Object}\n\t\t */\n\t\tlast_error : function () {\n\t\t\treturn this._data.core.last_error;\n\t\t},\n\t\t/**\n\t\t * move a node to a new parent\n\t\t * @name move_node(obj, par [, pos, callback, is_loaded])\n\t\t * @param  {mixed} obj the node to move, pass an array to move multiple nodes\n\t\t * @param  {mixed} par the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\n\t\t * @param  {Boolean} internal parameter indicating if the parent node has been loaded\n\t\t * @trigger move_node.jstree\n\t\t */\n\t\tmove_node : function (obj, par, pos, callback, is_loaded) {\n\t\t\tvar t1, t2, old_par, old_pos, new_par, old_ins, is_multi, dpc, tmp, i, j, k, l, p;\n\n\t\t\tpar = this.get_node(par);\n\t\t\tpos = pos === undefined ? 0 : pos;\n\t\t\tif(!par) { return false; }\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.move_node(obj, par, pos, callback, true); });\n\t\t\t}\n\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.reverse().slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.move_node(obj[t1], par, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\n\t\t\told_par = (obj.parent || '#').toString();\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === '#') ? par : this.get_node(par.parent);\n\t\t\told_ins = obj.instance ? obj.instance : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\n\t\t\told_pos = old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1;\n\t\t\tif(is_multi) {\n\t\t\t\tif(this.copy_node(obj, par, pos, callback, is_loaded)) {\n\t\t\t\t\tif(old_ins) { old_ins.delete_node(obj); }\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//var m = this._model.data;\n\t\t\tif(new_par.id === '#') {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = new_par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\n\t\t\tif(!this.check(\"move_node\", obj, new_par, pos, { 'core' : true, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(obj.parent === new_par.id) {\n\t\t\t\tdpc = new_par.children.concat();\n\t\t\t\ttmp = $.inArray(obj.id, dpc);\n\t\t\t\tif(tmp !== -1) {\n\t\t\t\t\tdpc = $.vakata.array_remove(dpc, tmp);\n\t\t\t\t\tif(pos > tmp) { pos--; }\n\t\t\t\t}\n\t\t\t\ttmp = [];\n\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\ttmp[i >= pos ? i+1 : i] = dpc[i];\n\t\t\t\t}\n\t\t\t\ttmp[pos] = obj.id;\n\t\t\t\tnew_par.children = tmp;\n\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t\tthis.redraw(new_par.id === '#');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// clean old parent and up\n\t\t\t\ttmp = obj.children_d.concat();\n\t\t\t\ttmp.push(obj.id);\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\tdpc = [];\n\t\t\t\t\tp = old_ins._model.data[obj.parents[i]].children_d;\n\t\t\t\t\tfor(k = 0, l = p.length; k < l; k++) {\n\t\t\t\t\t\tif($.inArray(p[k], tmp) === -1) {\n\t\t\t\t\t\t\tdpc.push(p[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\told_ins._model.data[obj.parents[i]].children_d = dpc;\n\t\t\t\t}\n\t\t\t\told_ins._model.data[old_par].children = $.vakata.array_remove_item(old_ins._model.data[old_par].children, obj.id);\n\n\t\t\t\t// insert into new parent and up\n\t\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(tmp);\n\t\t\t\t}\n\t\t\t\tdpc = [];\n\t\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\n\t\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\n\t\t\t\t}\n\t\t\t\tdpc[pos] = obj.id;\n\t\t\t\tnew_par.children = dpc;\n\t\t\t\tnew_par.children_d.push(obj.id);\n\t\t\t\tnew_par.children_d = new_par.children_d.concat(obj.children_d);\n\n\t\t\t\t// update object\n\t\t\t\tobj.parent = new_par.id;\n\t\t\t\ttmp = new_par.parents.concat();\n\t\t\t\ttmp.unshift(new_par.id);\n\t\t\t\tp = obj.parents.length;\n\t\t\t\tobj.parents = tmp;\n\n\t\t\t\t// update object children\n\t\t\t\ttmp = tmp.concat();\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[obj.children_d[i]].parents = this._model.data[obj.children_d[i]].parents.slice(0,p*-1);\n\t\t\t\t\tArray.prototype.push.apply(this._model.data[obj.children_d[i]].parents, tmp);\n\t\t\t\t}\n\n\t\t\t\tthis._node_changed(old_par);\n\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t\tthis.redraw(old_par === '#' || new_par.id === '#');\n\t\t\t}\n\t\t\tif(callback) { callback.call(this, obj, new_par, pos); }\n\t\t\t/**\n\t\t\t * triggered when a node is moved\n\t\t\t * @event\n\t\t\t * @name move_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the node among the parent's children\n\t\t\t * @param {String} old_parent the old parent of the node\n\t\t\t * @param {Number} old_position the old position of the node\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\n\t\t\t * @param {jsTree} old_instance the instance the node came from\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\n\t\t\t */\n\t\t\tthis.trigger('move_node', { \"node\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_pos, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * copy a node to a new parent\n\t\t * @name copy_node(obj, par [, pos, callback, is_loaded])\n\t\t * @param  {mixed} obj the node to copy, pass an array to copy multiple nodes\n\t\t * @param  {mixed} par the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\n\t\t * @param  {Boolean} internal parameter indicating if the parent node has been loaded\n\t\t * @trigger model.jstree copy_node.jstree\n\t\t */\n\t\tcopy_node : function (obj, par, pos, callback, is_loaded) {\n\t\t\tvar t1, t2, dpc, tmp, i, j, node, old_par, new_par, old_ins, is_multi;\n\n\t\t\tpar = this.get_node(par);\n\t\t\tpos = pos === undefined ? 0 : pos;\n\t\t\tif(!par) { return false; }\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.copy_node(obj, par, pos, callback, true); });\n\t\t\t}\n\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.reverse().slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.copy_node(obj[t1], par, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\n\t\t\told_par = (obj.parent || '#').toString();\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === '#') ? par : this.get_node(par.parent);\n\t\t\told_ins = obj.instance ? obj.instance : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\n\t\t\tif(new_par.id === '#') {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = new_par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\n\t\t\tif(!this.check(\"copy_node\", obj, new_par, pos, { 'core' : true, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnode = old_ins ? old_ins.get_json(obj, { no_id : true, no_data : true, no_state : true }) : obj;\n\t\t\tif(!node) { return false; }\n\t\t\tif(node.id === true) { delete node.id; }\n\t\t\tnode = this._parse_model_from_json(node, new_par.id, new_par.parents.concat());\n\t\t\tif(!node) { return false; }\n\t\t\ttmp = this.get_node(node);\n\t\t\tif(obj && obj.state && obj.state.loaded === false) { tmp.state.loaded = false; }\n\t\t\tdpc = [];\n\t\t\tdpc.push(node);\n\t\t\tdpc = dpc.concat(tmp.children_d);\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : new_par.id });\n\n\t\t\t// insert into new parent and up\n\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\tdpc = [];\n\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\n\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\n\t\t\t}\n\t\t\tdpc[pos] = tmp.id;\n\t\t\tnew_par.children = dpc;\n\t\t\tnew_par.children_d.push(tmp.id);\n\t\t\tnew_par.children_d = new_par.children_d.concat(tmp.children_d);\n\n\t\t\tthis._node_changed(new_par.id);\n\t\t\tthis.redraw(new_par.id === '#');\n\t\t\tif(callback) { callback.call(this, tmp, new_par, pos); }\n\t\t\t/**\n\t\t\t * triggered when a node is copied\n\t\t\t * @event\n\t\t\t * @name copy_node.jstree\n\t\t\t * @param {Object} node the copied node\n\t\t\t * @param {Object} original the original node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the node among the parent's children\n\t\t\t * @param {String} old_parent the old parent of the node\n\t\t\t * @param {Number} old_position the position of the original node\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\n\t\t\t * @param {jsTree} old_instance the instance the node came from\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\n\t\t\t */\n\t\t\tthis.trigger('copy_node', { \"node\" : tmp, \"original\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1,'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * cut a node (a later call to `paste(obj)` would move the node)\n\t\t * @name cut(obj)\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\n\t\t * @trigger cut.jstree\n\t\t */\n\t\tcut : function (obj) {\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\n\t\t\tif(!obj.length) { return false; }\n\t\t\tvar tmp = [], o, t1, t2;\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\to = this.get_node(obj[t1]);\n\t\t\t\tif(o && o.id && o.id !== '#') { tmp.push(o); }\n\t\t\t}\n\t\t\tif(!tmp.length) { return false; }\n\t\t\tccp_node = tmp;\n\t\t\tccp_inst = this;\n\t\t\tccp_mode = 'move_node';\n\t\t\t/**\n\t\t\t * triggered when nodes are added to the buffer for moving\n\t\t\t * @event\n\t\t\t * @name cut.jstree\n\t\t\t * @param {Array} node\n\t\t\t */\n\t\t\tthis.trigger('cut', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * copy a node (a later call to `paste(obj)` would copy the node)\n\t\t * @name copy(obj)\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\n\t\t * @trigger copy.jstre\n\t\t */\n\t\tcopy : function (obj) {\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\n\t\t\tif(!obj.length) { return false; }\n\t\t\tvar tmp = [], o, t1, t2;\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\to = this.get_node(obj[t1]);\n\t\t\t\tif(o && o.id && o.id !== '#') { tmp.push(o); }\n\t\t\t}\n\t\t\tif(!tmp.length) { return false; }\n\t\t\tccp_node = tmp;\n\t\t\tccp_inst = this;\n\t\t\tccp_mode = 'copy_node';\n\t\t\t/**\n\t\t\t * triggered when nodes are added to the buffer for copying\n\t\t\t * @event\n\t\t\t * @name copy.jstree\n\t\t\t * @param {Array} node\n\t\t\t */\n\t\t\tthis.trigger('copy', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * get the current buffer (any nodes that are waiting for a paste operation)\n\t\t * @name get_buffer()\n\t\t * @return {Object} an object consisting of `mode` (\"copy_node\" or \"move_node\"), `node` (an array of objects) and `inst` (the instance)\n\t\t */\n\t\tget_buffer : function () {\n\t\t\treturn { 'mode' : ccp_mode, 'node' : ccp_node, 'inst' : ccp_inst };\n\t\t},\n\t\t/**\n\t\t * check if there is something in the buffer to paste\n\t\t * @name can_paste()\n\t\t * @return {Boolean}\n\t\t */\n\t\tcan_paste : function () {\n\t\t\treturn ccp_mode !== false && ccp_node !== false; // && ccp_inst._model.data[ccp_node];\n\t\t},\n\t\t/**\n\t\t * copy or move the previously cut or copied nodes to a new parent\n\t\t * @name paste(obj [, pos])\n\t\t * @param  {mixed} obj the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer, \"first\" and \"last\" are supported), defaults to integer `0`\n\t\t * @trigger paste.jstree\n\t\t */\n\t\tpaste : function (obj, pos) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || !ccp_mode || !ccp_mode.match(/^(copy_node|move_node)$/) || !ccp_node) { return false; }\n\t\t\tif(this[ccp_mode](ccp_node, obj, pos)) {\n\t\t\t\t/**\n\t\t\t\t * triggered when paste is invoked\n\t\t\t\t * @event\n\t\t\t\t * @name paste.jstree\n\t\t\t\t * @param {String} parent the ID of the receiving node\n\t\t\t\t * @param {Array} node the nodes in the buffer\n\t\t\t\t * @param {String} mode the performed operation - \"copy_node\" or \"move_node\"\n\t\t\t\t */\n\t\t\t\tthis.trigger('paste', { \"parent\" : obj.id, \"node\" : ccp_node, \"mode\" : ccp_mode });\n\t\t\t}\n\t\t\tccp_node = false;\n\t\t\tccp_mode = false;\n\t\t\tccp_inst = false;\n\t\t},\n\t\t/**\n\t\t * put a node in edit mode (input field to rename the node)\n\t\t * @name edit(obj [, default_text])\n\t\t * @param  {mixed} obj\n\t\t * @param  {String} default_text the text to populate the input with (if omitted the node text value is used)\n\t\t */\n\t\tedit : function (obj, default_text) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tif(this.settings.core.check_callback === false) {\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_07', 'reason' : 'Could not edit node because of check_callback' };\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdefault_text = typeof default_text === 'string' ? default_text : obj.text;\n\t\t\tthis.set_text(obj, \"\");\n\t\t\tobj = this._open_to(obj);\n\n\t\t\tvar rtl = this._data.core.rtl,\n\t\t\t\tw  = this.element.width(),\n\t\t\t\ta  = obj.children('.jstree-anchor'),\n\t\t\t\ts  = $('<span>'),\n\t\t\t\t/*!\n\t\t\t\toi = obj.children(\"i:visible\"),\n\t\t\t\tai = a.children(\"i:visible\"),\n\t\t\t\tw1 = oi.width() * oi.length,\n\t\t\t\tw2 = ai.width() * ai.length,\n\t\t\t\t*/\n\t\t\t\tt  = default_text,\n\t\t\t\th1 = $(\"<\"+\"div />\", { css : { \"position\" : \"absolute\", \"top\" : \"-200px\", \"left\" : (rtl ? \"0px\" : \"-1000px\"), \"visibility\" : \"hidden\" } }).appendTo(\"body\"),\n\t\t\t\th2 = $(\"<\"+\"input />\", {\n\t\t\t\t\t\t\"value\" : t,\n\t\t\t\t\t\t\"class\" : \"jstree-rename-input\",\n\t\t\t\t\t\t// \"size\" : t.length,\n\t\t\t\t\t\t\"css\" : {\n\t\t\t\t\t\t\t\"padding\" : \"0\",\n\t\t\t\t\t\t\t\"border\" : \"1px solid silver\",\n\t\t\t\t\t\t\t\"box-sizing\" : \"border-box\",\n\t\t\t\t\t\t\t\"display\" : \"inline-block\",\n\t\t\t\t\t\t\t\"height\" : (this._data.core.li_height) + \"px\",\n\t\t\t\t\t\t\t\"lineHeight\" : (this._data.core.li_height) + \"px\",\n\t\t\t\t\t\t\t\"width\" : \"150px\" // will be set a bit further down\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"blur\" : $.proxy(function () {\n\t\t\t\t\t\t\tvar i = s.children(\".jstree-rename-input\"),\n\t\t\t\t\t\t\t\tv = i.val();\n\t\t\t\t\t\t\tif(v === \"\") { v = t; }\n\t\t\t\t\t\t\th1.remove();\n\t\t\t\t\t\t\ts.replaceWith(a);\n\t\t\t\t\t\t\ts.remove();\n\t\t\t\t\t\t\tthis.set_text(obj, t);\n\t\t\t\t\t\t\tif(this.rename_node(obj, $('<div></div>').text(v)[this.settings.core.force_text ? 'text' : 'html']()) === false) {\n\t\t\t\t\t\t\t\tthis.set_text(obj, t); // move this up? and fix #483\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this),\n\t\t\t\t\t\t\"keydown\" : function (event) {\n\t\t\t\t\t\t\tvar key = event.which;\n\t\t\t\t\t\t\tif(key === 27) {\n\t\t\t\t\t\t\t\tthis.value = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\n\t\t\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(key === 27 || key === 13) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tthis.blur();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"click\" : function (e) { e.stopImmediatePropagation(); },\n\t\t\t\t\t\t\"mousedown\" : function (e) { e.stopImmediatePropagation(); },\n\t\t\t\t\t\t\"keyup\" : function (event) {\n\t\t\t\t\t\t\th2.width(Math.min(h1.text(\"pW\" + this.value).width(),w));\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"keypress\" : function(event) {\n\t\t\t\t\t\t\tif(event.which === 13) { return false; }\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\tfn = {\n\t\t\t\t\t\tfontFamily\t\t: a.css('fontFamily')\t\t|| '',\n\t\t\t\t\t\tfontSize\t\t: a.css('fontSize')\t\t\t|| '',\n\t\t\t\t\t\tfontWeight\t\t: a.css('fontWeight')\t\t|| '',\n\t\t\t\t\t\tfontStyle\t\t: a.css('fontStyle')\t\t|| '',\n\t\t\t\t\t\tfontStretch\t\t: a.css('fontStretch')\t\t|| '',\n\t\t\t\t\t\tfontVariant\t\t: a.css('fontVariant')\t\t|| '',\n\t\t\t\t\t\tletterSpacing\t: a.css('letterSpacing')\t|| '',\n\t\t\t\t\t\twordSpacing\t\t: a.css('wordSpacing')\t\t|| ''\n\t\t\t\t};\n\t\t\ts.attr('class', a.attr('class')).append(a.contents().clone()).append(h2);\n\t\t\ta.replaceWith(s);\n\t\t\th1.css(fn);\n\t\t\th2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(),w))[0].select();\n\t\t},\n\n\n\t\t/**\n\t\t * changes the theme\n\t\t * @name set_theme(theme_name [, theme_url])\n\t\t * @param {String} theme_name the name of the new theme to apply\n\t\t * @param {mixed} theme_url  the location of the CSS file for this theme. Omit or set to `false` if you manually included the file. Set to `true` to autoload from the `core.themes.dir` directory.\n\t\t * @trigger set_theme.jstree\n\t\t */\n\t\tset_theme : function (theme_name, theme_url) {\n\t\t\tif(!theme_name) { return false; }\n\t\t\tif(theme_url === true) {\n\t\t\t\tvar dir = this.settings.core.themes.dir;\n\t\t\t\tif(!dir) { dir = $.jstree.path + '/themes'; }\n\t\t\t\ttheme_url = dir + '/' + theme_name + '/style.css';\n\t\t\t}\n\t\t\tif(theme_url && $.inArray(theme_url, themes_loaded) === -1) {\n\t\t\t\t$('head').append('<'+'link rel=\"stylesheet\" href=\"' + theme_url + '\" type=\"text/css\" />');\n\t\t\t\tthemes_loaded.push(theme_url);\n\t\t\t}\n\t\t\tif(this._data.core.themes.name) {\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name);\n\t\t\t}\n\t\t\tthis._data.core.themes.name = theme_name;\n\t\t\tthis.element.addClass('jstree-' + theme_name);\n\t\t\tthis.element[this.settings.core.themes.responsive ? 'addClass' : 'removeClass' ]('jstree-' + theme_name + '-responsive');\n\t\t\t/**\n\t\t\t * triggered when a theme is set\n\t\t\t * @event\n\t\t\t * @name set_theme.jstree\n\t\t\t * @param {String} theme the new theme\n\t\t\t */\n\t\t\tthis.trigger('set_theme', { 'theme' : theme_name });\n\t\t},\n\t\t/**\n\t\t * gets the name of the currently applied theme name\n\t\t * @name get_theme()\n\t\t * @return {String}\n\t\t */\n\t\tget_theme : function () { return this._data.core.themes.name; },\n\t\t/**\n\t\t * changes the theme variant (if the theme has variants)\n\t\t * @name set_theme_variant(variant_name)\n\t\t * @param {String|Boolean} variant_name the variant to apply (if `false` is used the current variant is removed)\n\t\t */\n\t\tset_theme_variant : function (variant_name) {\n\t\t\tif(this._data.core.themes.variant) {\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\n\t\t\t}\n\t\t\tthis._data.core.themes.variant = variant_name;\n\t\t\tif(variant_name) {\n\t\t\t\tthis.element.addClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * gets the name of the currently applied theme variant\n\t\t * @name get_theme()\n\t\t * @return {String}\n\t\t */\n\t\tget_theme_variant : function () { return this._data.core.themes.variant; },\n\t\t/**\n\t\t * shows a striped background on the container (if the theme supports it)\n\t\t * @name show_stripes()\n\t\t */\n\t\tshow_stripes : function () { this._data.core.themes.stripes = true; this.get_container_ul().addClass(\"jstree-striped\"); },\n\t\t/**\n\t\t * hides the striped background on the container\n\t\t * @name hide_stripes()\n\t\t */\n\t\thide_stripes : function () { this._data.core.themes.stripes = false; this.get_container_ul().removeClass(\"jstree-striped\"); },\n\t\t/**\n\t\t * toggles the striped background on the container\n\t\t * @name toggle_stripes()\n\t\t */\n\t\ttoggle_stripes : function () { if(this._data.core.themes.stripes) { this.hide_stripes(); } else { this.show_stripes(); } },\n\t\t/**\n\t\t * shows the connecting dots (if the theme supports it)\n\t\t * @name show_dots()\n\t\t */\n\t\tshow_dots : function () { this._data.core.themes.dots = true; this.get_container_ul().removeClass(\"jstree-no-dots\"); },\n\t\t/**\n\t\t * hides the connecting dots\n\t\t * @name hide_dots()\n\t\t */\n\t\thide_dots : function () { this._data.core.themes.dots = false; this.get_container_ul().addClass(\"jstree-no-dots\"); },\n\t\t/**\n\t\t * toggles the connecting dots\n\t\t * @name toggle_dots()\n\t\t */\n\t\ttoggle_dots : function () { if(this._data.core.themes.dots) { this.hide_dots(); } else { this.show_dots(); } },\n\t\t/**\n\t\t * show the node icons\n\t\t * @name show_icons()\n\t\t */\n\t\tshow_icons : function () { this._data.core.themes.icons = true; this.get_container_ul().removeClass(\"jstree-no-icons\"); },\n\t\t/**\n\t\t * hide the node icons\n\t\t * @name hide_icons()\n\t\t */\n\t\thide_icons : function () { this._data.core.themes.icons = false; this.get_container_ul().addClass(\"jstree-no-icons\"); },\n\t\t/**\n\t\t * toggle the node icons\n\t\t * @name toggle_icons()\n\t\t */\n\t\ttoggle_icons : function () { if(this._data.core.themes.icons) { this.hide_icons(); } else { this.show_icons(); } },\n\t\t/**\n\t\t * set the node icon for a node\n\t\t * @name set_icon(obj, icon)\n\t\t * @param {mixed} obj\n\t\t * @param {String} icon the new icon - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\n\t\t */\n\t\tset_icon : function (obj, icon) {\n\t\t\tvar t1, t2, dom, old;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_icon(obj[t1], icon);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\told = obj.icon;\n\t\t\tobj.icon = icon;\n\t\t\tdom = this.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\");\n\t\t\tif(icon === false) {\n\t\t\t\tthis.hide_icon(obj);\n\t\t\t}\n\t\t\telse if(icon === true) {\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\n\t\t\t}\n\t\t\telse if(icon.indexOf(\"/\") === -1 && icon.indexOf(\".\") === -1) {\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\n\t\t\t\tdom.addClass(icon + ' jstree-themeicon-custom').attr(\"rel\",icon);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\n\t\t\t\tdom.addClass('jstree-themeicon-custom').css(\"background\", \"url('\" + icon + \"') center center no-repeat\").attr(\"rel\",icon);\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the node icon for a node\n\t\t * @name get_icon(obj)\n\t\t * @param {mixed} obj\n\t\t * @return {String}\n\t\t */\n\t\tget_icon : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj || obj.id === '#') ? false : obj.icon;\n\t\t},\n\t\t/**\n\t\t * hide the icon on an individual node\n\t\t * @name hide_icon(obj)\n\t\t * @param {mixed} obj\n\t\t */\n\t\thide_icon : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.hide_icon(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj === '#') { return false; }\n\t\t\tobj.icon = false;\n\t\t\tthis.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\").addClass('jstree-themeicon-hidden');\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * show the icon on an individual node\n\t\t * @name show_icon(obj)\n\t\t * @param {mixed} obj\n\t\t */\n\t\tshow_icon : function (obj) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.show_icon(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj === '#') { return false; }\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tobj.icon = dom.length ? dom.children(\".jstree-anchor\").children(\".jstree-themeicon\").attr('rel') : true;\n\t\t\tif(!obj.icon) { obj.icon = true; }\n\t\t\tdom.children(\".jstree-anchor\").children(\".jstree-themeicon\").removeClass('jstree-themeicon-hidden');\n\t\t\treturn true;\n\t\t}\n\t};\n\n\t// helpers\n\t$.vakata = {};\n\t// collect attributes\n\t$.vakata.attributes = function(node, with_values) {\n\t\tnode = $(node)[0];\n\t\tvar attr = with_values ? {} : [];\n\t\tif(node && node.attributes) {\n\t\t\t$.each(node.attributes, function (i, v) {\n\t\t\t\tif($.inArray(v.nodeName.toLowerCase(),['style','contenteditable','hasfocus','tabindex']) !== -1) { return; }\n\t\t\t\tif(v.nodeValue !== null && $.trim(v.nodeValue) !== '') {\n\t\t\t\t\tif(with_values) { attr[v.nodeName] = v.nodeValue; }\n\t\t\t\t\telse { attr.push(v.nodeName); }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn attr;\n\t};\n\t$.vakata.array_unique = function(array) {\n\t\tvar a = [], i, j, l;\n\t\tfor(i = 0, l = array.length; i < l; i++) {\n\t\t\tfor(j = 0; j <= i; j++) {\n\t\t\t\tif(array[i] === array[j]) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j === i) { a.push(array[i]); }\n\t\t}\n\t\treturn a;\n\t};\n\t// remove item from array\n\t$.vakata.array_remove = function(array, from, to) {\n\t\tvar rest = array.slice((to || from) + 1 || array.length);\n\t\tarray.length = from < 0 ? array.length + from : from;\n\t\tarray.push.apply(array, rest);\n\t\treturn array;\n\t};\n\t// remove item from array\n\t$.vakata.array_remove_item = function(array, item) {\n\t\tvar tmp = $.inArray(item, array);\n\t\treturn tmp !== -1 ? $.vakata.array_remove(array, tmp) : array;\n\t};\n\n/**\n * ### Checkbox plugin\n *\n * This plugin renders checkbox icons in front of each node, making multiple selection much easier. \n * It also supports tri-state behavior, meaning that if a node has a few of its children checked it will be rendered as undetermined, and state will be propagated up.\n */\n\n\tvar _i = document.createElement('I');\n\t_i.className = 'jstree-icon jstree-checkbox';\n\t/**\n\t * stores all defaults for the checkbox plugin\n\t * @name $.jstree.defaults.checkbox\n\t * @plugin checkbox\n\t */\n\t$.jstree.defaults.checkbox = {\n\t\t/**\n\t\t * a boolean indicating if checkboxes should be visible (can be changed at a later time using `show_checkboxes()` and `hide_checkboxes`). Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.visible\n\t\t * @plugin checkbox\n\t\t */\n\t\tvisible\t\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if checkboxes should cascade down and have an undetermined state. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.three_state\n\t\t * @plugin checkbox\n\t\t */\n\t\tthree_state\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if clicking anywhere on the node should act as clicking on the checkbox. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.whole_node\n\t\t * @plugin checkbox\n\t\t */\n\t\twhole_node\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if the selected style of a node should be kept, or removed. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.keep_selected_style\n\t\t * @plugin checkbox\n\t\t */\n\t\tkeep_selected_style\t: true,\n\t\t/**\n\t\t * This setting controls how cascading and undetermined nodes are applied. \n\t\t * If 'up' is in the string - cascading up is enabled, if 'down' is in the string - cascading down is enabled, if 'undetermined' is in the string - undetermined nodes will be used. \n\t\t * If `three_state` is set to `true` this setting is automatically set to 'up+down+undetermined'. Defaults to ''.\n\t\t * @name $.jstree.defaults.checkbox.cascade\n\t\t * @plugin checkbox\n\t\t */\n\t\tcascade\t\t\t\t: '',\n\t\t/**\n\t\t * This setting controls if checkbox are bound to the general tree selection or to an internal array maintained by the checkbox plugin. Defaults to `true`, only set to `false` if you know exactly what you are doing. \n\t\t * @name $.jstree.defaults.checkbox.tie_selection\n\t\t * @plugin checkbox\n\t\t */\n\t\ttie_selection\t\t: true\n\t};\n\t$.jstree.plugins.checkbox = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tthis._data.checkbox.uto = false;\n\t\t\tthis._data.checkbox.selected = [];\n\t\t\tif(this.settings.checkbox.three_state) {\n\t\t\t\tthis.settings.checkbox.cascade = 'up+down+undetermined';\n\t\t\t}\n\t\t\tthis.element\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis._data.checkbox.visible = this.settings.checkbox.visible;\n\t\t\t\t\t\tif(!this.settings.checkbox.keep_selected_style) {\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-no-clicked');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.settings.checkbox.tie_selection) {\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-selection');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis[ this._data.checkbox.visible ? 'show_checkboxes' : 'hide_checkboxes' ]();\n\t\t\t\t\t}, this));\n\t\t\tif(this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree', $.proxy(function () {\n\t\t\t\t\t\t\t// only if undetermined is in setting\n\t\t\t\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\n\t\t\t\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(!this.settings.checkbox.tie_selection) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\tp = m[data.parent],\n\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\ti, j;\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\tm[dpc[i]].state.checked = (m[dpc[i]].original && m[dpc[i]].original.state && m[dpc[i]].original.state.checked);\n\t\t\t\t\t\t\tif(m[dpc[i]].state.checked) {\n\t\t\t\t\t\t\t\tthis._data.checkbox.selected.push(dpc[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1 || this.settings.checkbox.cascade.indexOf('down') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\t\tp = m[data.parent],\n\t\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\t\tchd = [],\n\t\t\t\t\t\t\t\tc, i, j, k, l, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tm[dpc[i]].state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(dpc);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tif(m[dpc[i]].state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\t\tfor(k = 0, l = m[dpc[i]].children_d.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\t\t\t\tm[m[dpc[i]].children_d[k]].state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(m[dpc[i]].children_d);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tif(!m[p.children_d[i]].children.length) {\n\t\t\t\t\t\t\t\t\t\tchd.push(m[p.children_d[i]].parent);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchd = $.vakata.array_unique(chd);\n\t\t\t\t\t\t\t\tfor(k = 0, l = chd.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\tp = m[chd[k]];\n\t\t\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass( t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected);\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'select_node.jstree' : 'check_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = data.node,\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\tpar = this.get_node(obj.parent),\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\n\t\t\t\t\t\t\t\ti, j, c, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\n\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected.concat(obj.children_d));\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\twhile(par && par.id !== '#') {\n\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tc += m[par.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\tpar.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(par.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(par, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpar = this.get_node(par.parent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply down (process .children separately?)\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1 && dom.length) {\n\t\t\t\t\t\t\t\tdom.find('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_all.jstree' : 'uncheck_all.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = this.get_node('#'),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\ti, j, tmp;\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\n\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_node.jstree' : 'uncheck_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = data.node,\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\n\t\t\t\t\t\t\t\ti, j, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\tif(obj && obj.original && obj.original.state && obj.original.state.undetermined) {\n\t\t\t\t\t\t\t\tobj.original.state.undetermined = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.children_d[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.parents[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(obj.parents[i], true);\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t\t\tfor(i = 0, j = this._data[ t ? 'core' : 'checkbox' ].selected.length; i < j; i++) {\n\t\t\t\t\t\t\t\t// apply down + apply up\n\t\t\t\t\t\t\t\tif(\n\t\t\t\t\t\t\t\t\t(s.indexOf('down') === -1 || $.inArray(this._data[ t ? 'core' : 'checkbox' ].selected[i], obj.children_d) === -1) &&\n\t\t\t\t\t\t\t\t\t(s.indexOf('up') === -1 || $.inArray(this._data[ t ? 'core' : 'checkbox' ].selected[i], obj.parents) === -1)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\ttmp.push(this._data[ t ? 'core' : 'checkbox' ].selected[i]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(tmp);\n\n\t\t\t\t\t\t\t// apply down (process .children separately?)\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1 && dom.length) {\n\t\t\t\t\t\t\t\tdom.find('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('delete_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\t// apply up (whole handler)\n\t\t\t\t\t\t\tvar p = this.get_node(data.parent),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\ti, j, c, tmp, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on('move_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\t// apply up (whole handler)\n\t\t\t\t\t\t\tvar is_multi = data.is_multi,\n\t\t\t\t\t\t\t\told_par = data.old_parent,\n\t\t\t\t\t\t\t\tnew_par = this.get_node(data.parent),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\tp, c, i, j, tmp, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\tif(!is_multi) {\n\t\t\t\t\t\t\t\tp = this.get_node(old_par);\n\t\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tp = new_par;\n\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\tif(!p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_remove_item(this._data[ t ? 'core' : 'checkbox' ].selected, p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * set the undetermined state where and if necessary. Used internally.\n\t\t * @private\n\t\t * @name _undetermined()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis._undetermined = function () {\n\t\t\tvar i, j, m = this._model.data, t = this.settings.checkbox.tie_selection, s = this._data[ t ? 'core' : 'checkbox' ].selected, p = [], tt = this;\n\t\t\tfor(i = 0, j = s.length; i < j; i++) {\n\t\t\t\tif(m[s[i]] && m[s[i]].parents) {\n\t\t\t\t\tp = p.concat(m[s[i]].parents);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt for server side undetermined state\n\t\t\tthis.element.find('.jstree-closed').not(':has(.jstree-children)')\n\t\t\t\t.each(function () {\n\t\t\t\t\tvar tmp = tt.get_node(this), tmp2;\n\t\t\t\t\tif(!tmp.state.loaded) {\n\t\t\t\t\t\tif(tmp.original && tmp.original.state && tmp.original.state.undetermined && tmp.original.state.undetermined === true) {\n\t\t\t\t\t\t\tp.push(tmp.id);\n\t\t\t\t\t\t\tp = p.concat(tmp.parents);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(i = 0, j = tmp.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp2 = m[tmp.children_d[i]];\n\t\t\t\t\t\t\tif(!tmp2.state.loaded && tmp2.original && tmp2.original.state && tmp2.original.state.undetermined && tmp2.original.state.undetermined === true) {\n\t\t\t\t\t\t\t\tp.push(tmp2.id);\n\t\t\t\t\t\t\t\tp = p.concat(tmp2.parents);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tp = $.vakata.array_unique(p);\n\t\t\tp = $.vakata.array_remove_item(p,'#');\n\n\t\t\tthis.element.find('.jstree-undetermined').removeClass('jstree-undetermined');\n\t\t\tfor(i = 0, j = p.length; i < j; i++) {\n\t\t\t\tif(!m[p[i]].state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\ts = this.get_node(p[i], true);\n\t\t\t\t\tif(s && s.length) {\n\t\t\t\t\t\ts.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-undetermined');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.redraw_node = function(obj, deep, is_callback) {\n\t\t\tobj = parent.redraw_node.call(this, obj, deep, is_callback);\n\t\t\tif(obj) {\n\t\t\t\tvar i, j, tmp = null;\n\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\n\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\n\t\t\t\t\t\ttmp = obj.childNodes[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(tmp) {\n\t\t\t\t\tif(!this.settings.checkbox.tie_selection && this._model.data[obj.id].state.checked) { tmp.className += ' jstree-checked'; }\n\t\t\t\t\ttmp.insertBefore(_i.cloneNode(false), tmp.childNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!is_callback && this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\n\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\n\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t\t/**\n\t\t * show the node checkbox icons\n\t\t * @name show_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.show_checkboxes = function () { this._data.core.themes.checkboxes = true; this.get_container_ul().removeClass(\"jstree-no-checkboxes\"); };\n\t\t/**\n\t\t * hide the node checkbox icons\n\t\t * @name hide_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.hide_checkboxes = function () { this._data.core.themes.checkboxes = false; this.get_container_ul().addClass(\"jstree-no-checkboxes\"); };\n\t\t/**\n\t\t * toggle the node icons\n\t\t * @name toggle_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.toggle_checkboxes = function () { if(this._data.core.themes.checkboxes) { this.hide_checkboxes(); } else { this.show_checkboxes(); } };\n\t\t/**\n\t\t * checks if a node is in an undetermined state\n\t\t * @name is_undetermined(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tthis.is_undetermined = function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tvar s = this.settings.checkbox.cascade, i, j, t = this.settings.checkbox.tie_selection, d = this._data[ t ? 'core' : 'checkbox' ].selected, m = this._model.data;\n\t\t\tif(!obj || obj.state[ t ? 'selected' : 'checked' ] === true || s.indexOf('undetermined') === -1 || (s.indexOf('down') === -1 && s.indexOf('up') === -1)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!obj.state.loaded && obj.original.state.undetermined === true) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tif($.inArray(obj.children_d[i], d) !== -1 || (!m[obj.children_d[i]].state.loaded && m[obj.children_d[i]].original.state.undetermined)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tthis.activate_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || $(e.target).hasClass('jstree-checkbox'))) {\n\t\t\t\te.ctrlKey = true;\n\t\t\t}\n\t\t\tif(this.settings.checkbox.tie_selection || (!this.settings.checkbox.whole_node && !$(e.target).hasClass('jstree-checkbox'))) {\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\n\t\t\t}\n\t\t\tif(this.is_checked(obj)) {\n\t\t\t\tthis.uncheck_node(obj, e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.check_node(obj, e);\n\t\t\t}\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\n\t\t};\n\n\t\t/**\n\t\t * check a node (only if tie_selection in checkbox settings is false, otherwise select_node will be called internally)\n\t\t * @name check_node(obj)\n\t\t * @param {mixed} obj an array can be used to check multiple nodes\n\t\t * @trigger check_node.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.check_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_node(obj, false, true, e); }\n\t\t\tvar dom, t1, t2, th;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.check_node(obj[t1], e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.checked) {\n\t\t\t\tobj.state.checked = true;\n\t\t\t\tthis._data.checkbox.selected.push(obj.id);\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-checked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is checked (only if tie_selection in checkbox settings is false)\n\t\t\t\t * @event\n\t\t\t\t * @name check_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this check_node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('check_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * uncheck a node (only if tie_selection in checkbox settings is false, otherwise deselect_node will be called internally)\n\t\t * @name deselect_node(obj)\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\n\t\t * @trigger uncheck_node.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.uncheck_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_node(obj, false, e); }\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.uncheck_node(obj[t1], e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.checked) {\n\t\t\t\tobj.state.checked = false;\n\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, obj.id);\n\t\t\t\tif(dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-checked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is unchecked (only if tie_selection in checkbox settings is false)\n\t\t\t\t * @event\n\t\t\t\t * @name uncheck_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this uncheck_node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('uncheck_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * checks all nodes in the tree (only if tie_selection in checkbox settings is false, otherwise select_all will be called internally)\n\t\t * @name check_all()\n\t\t * @trigger check_all.jstree, changed.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.check_all = function () {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_all(); }\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\n\t\t\tthis._data.checkbox.selected = this._model.data['#'].children_d.concat();\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.redraw(true);\n\t\t\t/**\n\t\t\t * triggered when all nodes are checked (only if tie_selection in checkbox settings is false)\n\t\t\t * @event\n\t\t\t * @name check_all.jstree\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @plugin checkbox\n\t\t\t */\n\t\t\tthis.trigger('check_all', { 'selected' : this._data.checkbox.selected });\n\t\t};\n\t\t/**\n\t\t * uncheck all checked nodes (only if tie_selection in checkbox settings is false, otherwise deselect_all will be called internally)\n\t\t * @name uncheck_all()\n\t\t * @trigger uncheck_all.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.uncheck_all = function () {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_all(); }\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.checkbox.selected = [];\n\t\t\tthis.element.find('.jstree-checked').removeClass('jstree-checked');\n\t\t\t/**\n\t\t\t * triggered when all nodes are unchecked (only if tie_selection in checkbox settings is false)\n\t\t\t * @event\n\t\t\t * @name uncheck_all.jstree\n\t\t\t * @param {Object} node the previous selection\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @plugin checkbox\n\t\t\t */\n\t\t\tthis.trigger('uncheck_all', { 'selected' : this._data.checkbox.selected, 'node' : tmp });\n\t\t};\n\t\t/**\n\t\t * checks if a node is checked (if tie_selection is on in the settings this function will return the same as is_selected)\n\t\t * @name is_checked(obj)\n\t\t * @param  {mixed}  obj\n\t\t * @return {Boolean}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.is_checked = function (obj) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.is_selected(obj); }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\treturn obj.state.checked;\n\t\t};\n\t\t/**\n\t\t * get an array of all checked nodes (if tie_selection is on in the settings this function will return the same as get_selected)\n\t\t * @name get_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_selected(full); }\n\t\t\treturn full ? $.map(this._data.checkbox.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.checkbox.selected;\n\t\t};\n\t\t/**\n\t\t * get an array of all top level checked nodes (ignoring children of checked nodes) (if tie_selection is on in the settings this function will return the same as get_top_selected)\n\t\t * @name get_top_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_top_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_top_selected(full); }\n\t\t\tvar tmp = this.get_checked(true),\n\t\t\t\tobj = {}, i, j, k, l;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tobj[tmp[i].id] = tmp[i];\n\t\t\t}\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tfor(i in obj) {\n\t\t\t\tif(obj.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\n\t\t};\n\t\t/**\n\t\t * get an array of all bottom level checked nodes (ignoring selected parents) (if tie_selection is on in the settings this function will return the same as get_bottom_selected)\n\t\t * @name get_bottom_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_bottom_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_bottom_selected(full); }\n\t\t\tvar tmp = this.get_checked(true),\n\t\t\t\tobj = [], i, j;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tif(!tmp[i].children.length) {\n\t\t\t\t\tobj.push(tmp[i].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\n\t\t};\n\t};\n\n\t// include the checkbox plugin by default\n\t// $.jstree.defaults.plugins.push(\"checkbox\");\n\n/**\n * ### Contextmenu plugin\n *\n * Shows a context menu when a node is right-clicked.\n */\n// TODO: move logic outside of function + check multiple move\n\n\t/**\n\t * stores all defaults for the contextmenu plugin\n\t * @name $.jstree.defaults.contextmenu\n\t * @plugin contextmenu\n\t */\n\t$.jstree.defaults.contextmenu = {\n\t\t/**\n\t\t * a boolean indicating if the node should be selected when the context menu is invoked on it. Defaults to `true`.\n\t\t * @name $.jstree.defaults.contextmenu.select_node\n\t\t * @plugin contextmenu\n\t\t */\n\t\tselect_node : true,\n\t\t/**\n\t\t * a boolean indicating if the menu should be shown aligned with the node. Defaults to `true`, otherwise the mouse coordinates are used.\n\t\t * @name $.jstree.defaults.contextmenu.show_at_node\n\t\t * @plugin contextmenu\n\t\t */\n\t\tshow_at_node : true,\n\t\t/**\n\t\t * an object of actions, or a function that accepts a node and a callback function and calls the callback function with an object of actions available for that node (you can also return the items too).\n\t\t * \n\t\t * Each action consists of a key (a unique name) and a value which is an object with the following properties (only label and action are required):\n\t\t * \n\t\t * * `separator_before` - a boolean indicating if there should be a separator before this item\n\t\t * * `separator_after` - a boolean indicating if there should be a separator after this item\n\t\t * * `_disabled` - a boolean indicating if this action should be disabled\n\t\t * * `label` - a string - the name of the action (could be a function returning a string)\n\t\t * * `action` - a function to be executed if this item is chosen\n\t\t * * `icon` - a string, can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\n\t\t * * `shortcut` - keyCode which will trigger the action if the menu is open (for example `113` for rename, which equals F2)\n\t\t * * `shortcut_label` - shortcut label (like for example `F2` for rename)\n\t\t * \n\t\t * @name $.jstree.defaults.contextmenu.items\n\t\t * @plugin contextmenu\n\t\t */\n\t\titems : function (o, cb) { // Could be an object directly\n\t\t\treturn {\n\t\t\t\t\"create\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"separator_after\"\t: true,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"create_node\", data.reference, {}, \"last\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Create\",\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.create_node(obj, {}, \"last\", function (new_node) {\n\t\t\t\t\t\t\tsetTimeout(function () { inst.edit(new_node); },0);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"rename\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"rename_node\", data.reference, this.get_parent(data.reference), \"\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Rename\",\n\t\t\t\t\t/*\n\t\t\t\t\t\"shortcut\"\t\t\t: 113,\n\t\t\t\t\t\"shortcut_label\"\t: 'F2',\n\t\t\t\t\t\"icon\"\t\t\t\t: \"glyphicon glyphicon-leaf\",\n\t\t\t\t\t*/\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.edit(obj);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"remove\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"delete_node\", data.reference, this.get_parent(data.reference), \"\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Delete\",\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"ccp\" : {\n\t\t\t\t\t\"separator_before\"\t: true,\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"label\"\t\t\t\t: \"Edit\",\n\t\t\t\t\t\"action\"\t\t\t: false,\n\t\t\t\t\t\"submenu\" : {\n\t\t\t\t\t\t\"cut\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Cut\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"copy\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Copy\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"paste\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\t\t\"_disabled\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\treturn !$.jstree.reference(data.reference).can_paste();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Paste\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tinst.paste(obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\n\t$.jstree.plugins.contextmenu = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tvar last_ts = 0;\n\t\t\tthis.element\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tlast_ts = e.ctrlKey ? e.timeStamp : 0;\n\t\t\t\t\t\tif(!this.is_loading(e.currentTarget)) {\n\t\t\t\t\t\t\tthis.show_contextmenu(e.currentTarget, e.pageX, e.pageY, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\tif(this._data.contextmenu.visible && (!last_ts || e.timeStamp - last_ts > 250)) { // work around safari & macOS ctrl+click\n\t\t\t\t\t\t\t$.vakata.context.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this));\n\t\t\t/*\n\t\t\tif(!('oncontextmenu' in document.body) && ('ontouchstart' in document.body)) {\n\t\t\t\tvar el = null, tm = null;\n\t\t\t\tthis.element\n\t\t\t\t\t.on(\"touchstart\", \".jstree-anchor\", function (e) {\n\t\t\t\t\t\tel = e.currentTarget;\n\t\t\t\t\t\ttm = +new Date();\n\t\t\t\t\t\t$(document).one(\"touchend\", function (e) {\n\t\t\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.targetTouches[0].pageX - window.pageXOffset, e.originalEvent.targetTouches[0].pageY - window.pageYOffset);\n\t\t\t\t\t\t\te.currentTarget = e.target;\n\t\t\t\t\t\t\ttm = ((+(new Date())) - tm);\n\t\t\t\t\t\t\tif(e.target === el && tm > 600 && tm < 1000) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t$(el).trigger('contextmenu', e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tel = null;\n\t\t\t\t\t\t\ttm = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t*/\n\t\t\t$(document).on(\"context_hide.vakata\", $.proxy(function () { this._data.contextmenu.visible = false; }, this));\n\t\t};\n\t\tthis.teardown = function () {\n\t\t\tif(this._data.contextmenu.visible) {\n\t\t\t\t$.vakata.context.hide();\n\t\t\t}\n\t\t\tparent.teardown.call(this);\n\t\t};\n\n\t\t/**\n\t\t * prepare and show the context menu for a node\n\t\t * @name show_contextmenu(obj [, x, y])\n\t\t * @param {mixed} obj the node\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\n\t\t * @param {Object} e the event if available that triggered the contextmenu\n\t\t * @plugin contextmenu\n\t\t * @trigger show_contextmenu.jstree\n\t\t */\n\t\tthis.show_contextmenu = function (obj, x, y, e) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tvar s = this.settings.contextmenu,\n\t\t\t\td = this.get_node(obj, true),\n\t\t\t\ta = d.children(\".jstree-anchor\"),\n\t\t\t\to = false,\n\t\t\t\ti = false;\n\t\t\tif(s.show_at_node || x === undefined || y === undefined) {\n\t\t\t\to = a.offset();\n\t\t\t\tx = o.left;\n\t\t\t\ty = o.top + this._data.core.li_height;\n\t\t\t}\n\t\t\tif(this.settings.contextmenu.select_node && !this.is_selected(obj)) {\n\t\t\t\tthis.activate_node(obj, e);\n\t\t\t}\n\n\t\t\ti = s.items;\n\t\t\tif($.isFunction(i)) {\n\t\t\t\ti = i.call(this, obj, $.proxy(function (i) {\n\t\t\t\t\tthis._show_contextmenu(obj, x, y, i);\n\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif($.isPlainObject(i)) {\n\t\t\t\tthis._show_contextmenu(obj, x, y, i);\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * show the prepared context menu for a node\n\t\t * @name _show_contextmenu(obj, x, y, i)\n\t\t * @param {mixed} obj the node\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\n\t\t * @param {Number} i the object of items to show\n\t\t * @plugin contextmenu\n\t\t * @trigger show_contextmenu.jstree\n\t\t * @private\n\t\t */\n\t\tthis._show_contextmenu = function (obj, x, y, i) {\n\t\t\tvar d = this.get_node(obj, true),\n\t\t\t\ta = d.children(\".jstree-anchor\");\n\t\t\t$(document).one(\"context_show.vakata\", $.proxy(function (e, data) {\n\t\t\t\tvar cls = 'jstree-contextmenu jstree-' + this.get_theme() + '-contextmenu';\n\t\t\t\t$(data.element).addClass(cls);\n\t\t\t}, this));\n\t\t\tthis._data.contextmenu.visible = true;\n\t\t\t$.vakata.context.show(a, { 'x' : x, 'y' : y }, i);\n\t\t\t/**\n\t\t\t * triggered when the contextmenu is shown for a node\n\t\t\t * @event\n\t\t\t * @name show_contextmenu.jstree\n\t\t\t * @param {Object} node the node\n\t\t\t * @param {Number} x the x-coordinate of the menu relative to the document\n\t\t\t * @param {Number} y the y-coordinate of the menu relative to the document\n\t\t\t * @plugin contextmenu\n\t\t\t */\n\t\t\tthis.trigger('show_contextmenu', { \"node\" : obj, \"x\" : x, \"y\" : y });\n\t\t};\n\t};\n\n\t// contextmenu helper\n\t(function ($) {\n\t\tvar right_to_left = false,\n\t\t\tvakata_context = {\n\t\t\t\telement\t\t: false,\n\t\t\t\treference\t: false,\n\t\t\t\tposition_x\t: 0,\n\t\t\t\tposition_y\t: 0,\n\t\t\t\titems\t\t: [],\n\t\t\t\thtml\t\t: \"\",\n\t\t\t\tis_visible\t: false\n\t\t\t};\n\n\t\t$.vakata.context = {\n\t\t\tsettings : {\n\t\t\t\thide_onmouseleave\t: 0,\n\t\t\t\ticons\t\t\t\t: true\n\t\t\t},\n\t\t\t_trigger : function (event_name) {\n\t\t\t\t$(document).triggerHandler(\"context_\" + event_name + \".vakata\", {\n\t\t\t\t\t\"reference\"\t: vakata_context.reference,\n\t\t\t\t\t\"element\"\t: vakata_context.element,\n\t\t\t\t\t\"position\"\t: {\n\t\t\t\t\t\t\"x\" : vakata_context.position_x,\n\t\t\t\t\t\t\"y\" : vakata_context.position_y\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t_execute : function (i) {\n\t\t\t\ti = vakata_context.items[i];\n\t\t\t\treturn i && (!i._disabled || ($.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : vakata_context.reference, \"element\" : vakata_context.element }))) && i.action ? i.action.call(null, {\n\t\t\t\t\t\t\t\"item\"\t\t: i,\n\t\t\t\t\t\t\t\"reference\"\t: vakata_context.reference,\n\t\t\t\t\t\t\t\"element\"\t: vakata_context.element,\n\t\t\t\t\t\t\t\"position\"\t: {\n\t\t\t\t\t\t\t\t\"x\" : vakata_context.position_x,\n\t\t\t\t\t\t\t\t\"y\" : vakata_context.position_y\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}) : false;\n\t\t\t},\n\t\t\t_parse : function (o, is_callback) {\n\t\t\t\tif(!o) { return false; }\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tvakata_context.html\t\t= \"\";\n\t\t\t\t\tvakata_context.items\t= [];\n\t\t\t\t}\n\t\t\t\tvar str = \"\",\n\t\t\t\t\tsep = false,\n\t\t\t\t\ttmp;\n\n\t\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\n\t\t\t\t$.each(o, function (i, val) {\n\t\t\t\t\tif(!val) { return true; }\n\t\t\t\t\tvakata_context.items.push(val);\n\t\t\t\t\tif(!sep && val.separator_before) {\n\t\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + ($.vakata.context.settings.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\n\t\t\t\t\t}\n\t\t\t\t\tsep = false;\n\t\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || ($.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : vakata_context.reference, \"element\" : vakata_context.element })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\n\t\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (vakata_context.items.length - 1) + \"'>\";\n\t\t\t\t\tif($.vakata.context.settings.icons) {\n\t\t\t\t\t\tstr += \"<\"+\"i \";\n\t\t\t\t\t\tif(val.icon) {\n\t\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\n\t\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\n\t\t\t\t\t}\n\t\t\t\t\tstr += ($.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : vakata_context.reference, \"element\" : vakata_context.element }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\n\t\t\t\t\tif(val.submenu) {\n\t\t\t\t\t\ttmp = $.vakata.context._parse(val.submenu, true);\n\t\t\t\t\t\tif(tmp) { str += tmp; }\n\t\t\t\t\t}\n\t\t\t\t\tstr += \"<\"+\"/li>\";\n\t\t\t\t\tif(val.separator_after) {\n\t\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + ($.vakata.context.settings.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\n\t\t\t\t\t\tsep = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\n\t\t\t\tif(is_callback) { str += \"</ul>\"; }\n\t\t\t\t/**\n\t\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\n\t\t\t\t * @event\n\t\t\t\t * @plugin contextmenu\n\t\t\t\t * @name context_parse.vakata\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t */\n\t\t\t\tif(!is_callback) { vakata_context.html = str; $.vakata.context._trigger(\"parse\"); }\n\t\t\t\treturn str.length > 10 ? str : false;\n\t\t\t},\n\t\t\t_show_submenu : function (o) {\n\t\t\t\to = $(o);\n\t\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\n\t\t\t\tvar e = o.children(\"ul\"),\n\t\t\t\t\tx = o.offset().left + o.outerWidth(),\n\t\t\t\t\ty = o.offset().top,\n\t\t\t\t\tw = e.width(),\n\t\t\t\t\th = e.height(),\n\t\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\n\t\t\t\t\tdh = $(window).height() + $(window).scrollTop();\n\t\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\n\t\t\t\tif(right_to_left) {\n\t\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\to[x + w + 10 > dw ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\n\t\t\t\t}\n\t\t\t\tif(y + h + 10 > dh) {\n\t\t\t\t\te.css(\"bottom\",\"-1px\");\n\t\t\t\t}\n\t\t\t\te.show();\n\t\t\t},\n\t\t\tshow : function (reference, position, data) {\n\t\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\n\t\t\t\tif(vakata_context.element && vakata_context.element.length) {\n\t\t\t\t\tvakata_context.element.width('');\n\t\t\t\t}\n\t\t\t\tswitch(cond) {\n\t\t\t\t\tcase (!position && !reference):\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase (!!position && !!reference):\n\t\t\t\t\t\tvakata_context.reference\t= reference;\n\t\t\t\t\t\tvakata_context.position_x\t= position.x;\n\t\t\t\t\t\tvakata_context.position_y\t= position.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase (!position && !!reference):\n\t\t\t\t\t\tvakata_context.reference\t= reference;\n\t\t\t\t\t\to = reference.offset();\n\t\t\t\t\t\tvakata_context.position_x\t= o.left + reference.outerHeight();\n\t\t\t\t\t\tvakata_context.position_y\t= o.top;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase (!!position && !reference):\n\t\t\t\t\t\tvakata_context.position_x\t= position.x;\n\t\t\t\t\t\tvakata_context.position_y\t= position.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\n\t\t\t\t\tdata = $(reference).data('vakata_contextmenu');\n\t\t\t\t}\n\t\t\t\tif($.vakata.context._parse(data)) {\n\t\t\t\t\tvakata_context.element.html(vakata_context.html);\n\t\t\t\t}\n\t\t\t\tif(vakata_context.items.length) {\n\t\t\t\t\te = vakata_context.element;\n\t\t\t\t\tx = vakata_context.position_x;\n\t\t\t\t\ty = vakata_context.position_y;\n\t\t\t\t\tw = e.width();\n\t\t\t\t\th = e.height();\n\t\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\n\t\t\t\t\tdh = $(window).height() + $(window).scrollTop();\n\t\t\t\t\tif(right_to_left) {\n\t\t\t\t\t\tx -= e.outerWidth();\n\t\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\n\t\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(x + w + 20 > dw) {\n\t\t\t\t\t\tx = dw - (w + 20);\n\t\t\t\t\t}\n\t\t\t\t\tif(y + h + 20 > dh) {\n\t\t\t\t\t\ty = dh - (h + 20);\n\t\t\t\t\t}\n\n\t\t\t\t\tvakata_context.element\n\t\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\n\t\t\t\t\t\t.show()\n\t\t\t\t\t\t.find('a:eq(0)').focus().parent().addClass(\"vakata-context-hover\");\n\t\t\t\t\tvakata_context.is_visible = true;\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when the contextmenu is shown\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin contextmenu\n\t\t\t\t\t * @name context_show.vakata\n\t\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.context._trigger(\"show\");\n\t\t\t\t}\n\t\t\t},\n\t\t\thide : function () {\n\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\tvakata_context.element.hide().find(\"ul\").hide().end().find(':focus').blur();\n\t\t\t\t\tvakata_context.is_visible = false;\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when the contextmenu is hidden\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin contextmenu\n\t\t\t\t\t * @name context_hide.vakata\n\t\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.context._trigger(\"hide\");\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t$(function () {\n\t\t\tright_to_left = $(\"body\").css(\"direction\") === \"rtl\";\n\t\t\tvar to = false;\n\n\t\t\tvakata_context.element = $(\"<ul class='vakata-context'></ul>\");\n\t\t\tvakata_context.element\n\t\t\t\t.on(\"mouseenter\", \"li\", function (e) {\n\t\t\t\t\te.stopImmediatePropagation();\n\n\t\t\t\t\tif($.contains(this, e.relatedTarget)) {\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(to) { clearTimeout(to); }\n\t\t\t\t\tvakata_context.element.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\n\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\n\t\t\t\t\t$.vakata.context._show_submenu(this);\n\t\t\t\t})\n\t\t\t\t// тестово - дали не натоварва?\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\n\t\t\t\t\tif($.contains(this, e.relatedTarget)) { return; }\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\n\t\t\t\t})\n\t\t\t\t.on(\"mouseleave\", function (e) {\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\n\t\t\t\t\tif($.vakata.context.settings.hide_onmouseleave) {\n\t\t\t\t\t\tto = setTimeout(\n\t\t\t\t\t\t\t(function (t) {\n\t\t\t\t\t\t\t\treturn function () { $.vakata.context.hide(); };\n\t\t\t\t\t\t\t}(this)), $.vakata.context.settings.hide_onmouseleave);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on(\"click\", \"a\", function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t//})\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && $.vakata.context._execute($(this).attr(\"rel\")) !== false) {\n\t\t\t\t\t\t$.vakata.context.hide();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keydown', 'a', function (e) {\n\t\t\t\t\t\tvar o = null;\n\t\t\t\t\t\tswitch(e.which) {\n\t\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\t\te.type = \"mouseup\";\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 37:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\tvakata_context.element.find(\".vakata-context-hover\").last().parents(\"li:eq(0)\").find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 38:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\to = vakata_context.element.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\n\t\t\t\t\t\t\t\t\tif(!o.length) { o = vakata_context.element.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\n\t\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\tvakata_context.element.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 40:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\to = vakata_context.element.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\n\t\t\t\t\t\t\t\t\tif(!o.length) { o = vakata_context.element.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\n\t\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\t\t\t$.vakata.context.hide();\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t//console.log(e.which);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t.on('keydown', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar a = vakata_context.element.find('.vakata-contextmenu-shortcut-' + e.which).parent();\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\n\t\t\t\t\t\ta.mouseup();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.appendTo(\"body\");\n\n\t\t\t$(document)\n\t\t\t\t.on(\"mousedown\", function (e) {\n\t\t\t\t\tif(vakata_context.is_visible && !$.contains(vakata_context.element[0], e.target)) { $.vakata.context.hide(); }\n\t\t\t\t})\n\t\t\t\t.on(\"context_show.vakata\", function (e, data) {\n\t\t\t\t\tvakata_context.element.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\n\t\t\t\t\tif(right_to_left) {\n\t\t\t\t\t\tvakata_context.element.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\n\t\t\t\t\t}\n\t\t\t\t\t// also apply a RTL class?\n\t\t\t\t\tvakata_context.element.find(\"ul\").hide().end();\n\t\t\t\t});\n\t\t});\n\t}($));\n\t// $.jstree.defaults.plugins.push(\"contextmenu\");\n\n/**\n * ### Drag'n'drop plugin\n *\n * Enables dragging and dropping of nodes in the tree, resulting in a move or copy operations.\n */\n\n\t/**\n\t * stores all defaults for the drag'n'drop plugin\n\t * @name $.jstree.defaults.dnd\n\t * @plugin dnd\n\t */\n\t$.jstree.defaults.dnd = {\n\t\t/**\n\t\t * a boolean indicating if a copy should be possible while dragging (by pressint the meta key or Ctrl). Defaults to `true`.\n\t\t * @name $.jstree.defaults.dnd.copy\n\t\t * @plugin dnd\n\t\t */\n\t\tcopy : true,\n\t\t/**\n\t\t * a number indicating how long a node should remain hovered while dragging to be opened. Defaults to `500`.\n\t\t * @name $.jstree.defaults.dnd.open_timeout\n\t\t * @plugin dnd\n\t\t */\n\t\topen_timeout : 500,\n\t\t/**\n\t\t * a function invoked each time a node is about to be dragged, invoked in the tree's scope and receives the nodes about to be dragged as an argument (array) - return `false` to prevent dragging\n\t\t * @name $.jstree.defaults.dnd.is_draggable\n\t\t * @plugin dnd\n\t\t */\n\t\tis_draggable : true,\n\t\t/**\n\t\t * a boolean indicating if checks should constantly be made while the user is dragging the node (as opposed to checking only on drop), default is `true`\n\t\t * @name $.jstree.defaults.dnd.check_while_dragging\n\t\t * @plugin dnd\n\t\t */\n\t\tcheck_while_dragging : true,\n\t\t/**\n\t\t * a boolean indicating if nodes from this tree should only be copied with dnd (as opposed to moved), default is `false`\n\t\t * @name $.jstree.defaults.dnd.always_copy\n\t\t * @plugin dnd\n\t\t */\n\t\talways_copy : false,\n\t\t/**\n\t\t * when dropping a node \"inside\", this setting indicates the position the node should go to - it can be an integer or a string: \"first\" (same as 0) or \"last\", default is `0`\n\t\t * @name $.jstree.defaults.dnd.inside_pos\n\t\t * @plugin dnd\n\t\t */\n\t\tinside_pos : 0\n\t};\n\t// TODO: now check works by checking for each node individually, how about max_children, unique, etc?\n\t// TODO: drop somewhere else - maybe demo only?\n\t$.jstree.plugins.dnd = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis.element\n\t\t\t\t.on('mousedown.jstree touchstart.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\tvar obj = this.get_node(e.target),\n\t\t\t\t\t\tmlt = this.is_selected(obj) ? this.get_selected().length : 1;\n\t\t\t\t\tif(obj && obj.id && obj.id !== \"#\" && (e.which === 1 || e.type === \"touchstart\") &&\n\t\t\t\t\t\t(this.settings.dnd.is_draggable === true || ($.isFunction(this.settings.dnd.is_draggable) && this.settings.dnd.is_draggable.call(this, (mlt > 1 ? this.get_selected(true) : [obj]))))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.element.trigger('mousedown.jstree');\n\t\t\t\t\t\treturn $.vakata.dnd.start(e, { 'jstree' : true, 'origin' : this, 'obj' : this.get_node(obj,true), 'nodes' : mlt > 1 ? this.get_selected() : [obj.id] }, '<div id=\"jstree-dnd\" class=\"jstree-' + this.get_theme() + ( this.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ) + '\"><i class=\"jstree-icon jstree-er\"></i>' + (mlt > 1 ? mlt + ' ' + this.get_string('nodes') : this.get_text(e.currentTarget, true)) + '<ins class=\"jstree-copy\" style=\"display:none;\">+</ins></div>');\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\t\t};\n\t};\n\n\t$(function() {\n\t\t// bind only once for all instances\n\t\tvar lastmv = false,\n\t\t\tlaster = false,\n\t\t\topento = false,\n\t\t\tmarker = $('<div id=\"jstree-marker\">&#160;</div>').hide().appendTo('body');\n\n\t\t$(document)\n\t\t\t.bind('dnd_start.vakata', function (e, data) {\n\t\t\t\tlastmv = false;\n\t\t\t})\n\t\t\t.bind('dnd_move.vakata', function (e, data) {\n\t\t\t\tif(opento) { clearTimeout(opento); }\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\n\t\t\t\t// if we are hovering the marker image do nothing (can happen on \"inside\" drags)\n\t\t\t\tif(data.event.target.id && data.event.target.id === 'jstree-marker') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar ins = $.jstree.reference(data.event.target),\n\t\t\t\t\tref = false,\n\t\t\t\t\toff = false,\n\t\t\t\t\trel = false,\n\t\t\t\t\tl, t, h, p, i, o, ok, t1, t2, op, ps, pr, ip, tm;\n\t\t\t\t// if we are over an instance\n\t\t\t\tif(ins && ins._data && ins._data.dnd) {\n\t\t\t\t\tmarker.attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ));\n\t\t\t\t\tdata.helper\n\t\t\t\t\t\t.children().attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ))\n\t\t\t\t\t\t.find('.jstree-copy:eq(0)')[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'show' : 'hide' ]();\n\n\n\t\t\t\t\t// if are hovering the container itself add a new root node\n\t\t\t\t\tif( (data.event.target === ins.element[0] || data.event.target === ins.get_container_ul()[0]) && ins.get_container_ul().children().length === 0) {\n\t\t\t\t\t\tok = true;\n\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\n\t\t\t\t\t\t\tok = ok && ins.check( (data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)) ) ? \"copy_node\" : \"move_node\"), (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), '#', 'last', { 'dnd' : true, 'ref' : ins.get_node('#'), 'pos' : 'i', 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) });\n\t\t\t\t\t\t\tif(!ok) { break; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ok) {\n\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : '#', 'pos' : 'last' };\n\t\t\t\t\t\t\tmarker.hide();\n\t\t\t\t\t\t\tdata.helper.find('.jstree-icon:eq(0)').removeClass('jstree-er').addClass('jstree-ok');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if we are hovering a tree node\n\t\t\t\t\t\tref = $(data.event.target).closest('.jstree-anchor');\n\t\t\t\t\t\tif(ref && ref.length && ref.parent().is('.jstree-closed, .jstree-open, .jstree-leaf')) {\n\t\t\t\t\t\t\toff = ref.offset();\n\t\t\t\t\t\t\trel = data.event.pageY - off.top;\n\t\t\t\t\t\t\th = ref.height();\n\t\t\t\t\t\t\tif(rel < h / 3) {\n\t\t\t\t\t\t\t\to = ['b', 'i', 'a'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(rel > h - h / 3) {\n\t\t\t\t\t\t\t\to = ['a', 'i', 'b'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\to = rel > h / 2 ? ['i', 'a', 'b'] : ['i', 'b', 'a'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$.each(o, function (j, v) {\n\t\t\t\t\t\t\t\tswitch(v) {\n\t\t\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\n\t\t\t\t\t\t\t\t\t\tt = off.top;\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index();\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\t\t\tip = ins.settings.dnd.inside_pos;\n\t\t\t\t\t\t\t\t\t\ttm = ins.get_node(ref.parent());\n\t\t\t\t\t\t\t\t\t\tl = off.left - 2;\n\t\t\t\t\t\t\t\t\t\tt = off.top + h / 2 + 1;\n\t\t\t\t\t\t\t\t\t\tp = tm.id;\n\t\t\t\t\t\t\t\t\t\ti = ip === 'first' ? 0 : (ip === 'last' ? tm.children.length : Math.min(ip, tm.children.length));\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'a':\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\n\t\t\t\t\t\t\t\t\t\tt = off.top + h;\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index() + 1;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/*!\n\t\t\t\t\t\t\t\t// TODO: moving inside, but the node is not yet loaded?\n\t\t\t\t\t\t\t\t// the check will work anyway, as when moving the node will be loaded first and checked again\n\t\t\t\t\t\t\t\tif(v === 'i' && !ins.is_loaded(p)) { }\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tok = true;\n\t\t\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\n\t\t\t\t\t\t\t\t\top = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? \"copy_node\" : \"move_node\";\n\t\t\t\t\t\t\t\t\tps = i;\n\t\t\t\t\t\t\t\t\tif(op === \"move_node\" && v === 'a' && (data.data.origin && data.data.origin === ins) && p === ins.get_parent(data.data.nodes[t1])) {\n\t\t\t\t\t\t\t\t\t\tpr = ins.get_node(p);\n\t\t\t\t\t\t\t\t\t\tif(ps > $.inArray(data.data.nodes[t1], pr.children)) {\n\t\t\t\t\t\t\t\t\t\t\tps -= 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tok = ok && ( (ins && ins.settings && ins.settings.dnd && ins.settings.dnd.check_while_dragging === false) || ins.check(op, (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), p, ps, { 'dnd' : true, 'ref' : ins.get_node(ref.parent()), 'pos' : v, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) }) );\n\t\t\t\t\t\t\t\t\tif(!ok) {\n\t\t\t\t\t\t\t\t\t\tif(ins && ins.last_error) { laster = ins.last_error(); }\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(ok) {\n\t\t\t\t\t\t\t\t\tif(v === 'i' && ref.parent().is('.jstree-closed') && ins.settings.dnd.open_timeout) {\n\t\t\t\t\t\t\t\t\t\topento = setTimeout((function (x, z) { return function () { x.open_node(z); }; }(ins, ref)), ins.settings.dnd.open_timeout);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : p, 'pos' : v === 'i' && ip === 'last' && i === 0 && !ins.is_loaded(tm) ? 'last' : i };\n\t\t\t\t\t\t\t\t\tmarker.css({ 'left' : l + 'px', 'top' : t + 'px' }).show();\n\t\t\t\t\t\t\t\t\tdata.helper.find('.jstree-icon:eq(0)').removeClass('jstree-er').addClass('jstree-ok');\n\t\t\t\t\t\t\t\t\tlaster = {};\n\t\t\t\t\t\t\t\t\to = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif(o === true) { return; }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastmv = false;\n\t\t\t\tdata.helper.find('.jstree-icon').removeClass('jstree-ok').addClass('jstree-er');\n\t\t\t\tmarker.hide();\n\t\t\t})\n\t\t\t.bind('dnd_scroll.vakata', function (e, data) {\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\t\t\t\tmarker.hide();\n\t\t\t\tlastmv = false;\n\t\t\t\tdata.helper.find('.jstree-icon:eq(0)').removeClass('jstree-ok').addClass('jstree-er');\n\t\t\t})\n\t\t\t.bind('dnd_stop.vakata', function (e, data) {\n\t\t\t\tif(opento) { clearTimeout(opento); }\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\t\t\t\tmarker.hide();\n\t\t\t\tvar i, j, nodes = [];\n\t\t\t\tif(lastmv) {\n\t\t\t\t\tfor(i = 0, j = data.data.nodes.length; i < j; i++) {\n\t\t\t\t\t\tnodes[i] = data.data.origin ? data.data.origin.get_node(data.data.nodes[i]) : data.data.nodes[i];\n\t\t\t\t\t\tif(data.data.origin) {\n\t\t\t\t\t\t\tnodes[i].instance = data.data.origin;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlastmv.ins[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'copy_node' : 'move_node' ](nodes, lastmv.par, lastmv.pos);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ti = $(data.event.target).closest('.jstree');\n\t\t\t\t\tif(i.length && laster && laster.error && laster.error === 'check') {\n\t\t\t\t\t\ti = i.jstree(true);\n\t\t\t\t\t\tif(i) {\n\t\t\t\t\t\t\ti.settings.core.error.call(this, laster);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.bind('keyup keydown', function (e, data) {\n\t\t\t\tdata = $.vakata.dnd._get();\n\t\t\t\tif(data && data.data && data.data.jstree) {\n\t\t\t\t\tdata.helper.find('.jstree-copy:eq(0)')[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (e.metaKey || e.ctrlKey))) ? 'show' : 'hide' ]();\n\t\t\t\t}\n\t\t\t});\n\t});\n\n\t// helpers\n\t(function ($) {\n\t\t// private variable\n\t\tvar vakata_dnd = {\n\t\t\telement\t: false,\n\t\t\ttarget\t: false,\n\t\t\tis_down\t: false,\n\t\t\tis_drag\t: false,\n\t\t\thelper\t: false,\n\t\t\thelper_w: 0,\n\t\t\tdata\t: false,\n\t\t\tinit_x\t: 0,\n\t\t\tinit_y\t: 0,\n\t\t\tscroll_l: 0,\n\t\t\tscroll_t: 0,\n\t\t\tscroll_e: false,\n\t\t\tscroll_i: false,\n\t\t\tis_touch: false\n\t\t};\n\t\t$.vakata.dnd = {\n\t\t\tsettings : {\n\t\t\t\tscroll_speed\t\t: 10,\n\t\t\t\tscroll_proximity\t: 20,\n\t\t\t\thelper_left\t\t\t: 5,\n\t\t\t\thelper_top\t\t\t: 10,\n\t\t\t\tthreshold\t\t\t: 5,\n\t\t\t\tthreshold_touch\t\t: 50\n\t\t\t},\n\t\t\t_trigger : function (event_name, e) {\n\t\t\t\tvar data = $.vakata.dnd._get();\n\t\t\t\tdata.event = e;\n\t\t\t\t$(document).triggerHandler(\"dnd_\" + event_name + \".vakata\", data);\n\t\t\t},\n\t\t\t_get : function () {\n\t\t\t\treturn {\n\t\t\t\t\t\"data\"\t\t: vakata_dnd.data,\n\t\t\t\t\t\"element\"\t: vakata_dnd.element,\n\t\t\t\t\t\"helper\"\t: vakata_dnd.helper\n\t\t\t\t};\n\t\t\t},\n\t\t\t_clean : function () {\n\t\t\t\tif(vakata_dnd.helper) { vakata_dnd.helper.remove(); }\n\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\n\t\t\t\tvakata_dnd = {\n\t\t\t\t\telement\t: false,\n\t\t\t\t\ttarget\t: false,\n\t\t\t\t\tis_down\t: false,\n\t\t\t\t\tis_drag\t: false,\n\t\t\t\t\thelper\t: false,\n\t\t\t\t\thelper_w: 0,\n\t\t\t\t\tdata\t: false,\n\t\t\t\t\tinit_x\t: 0,\n\t\t\t\t\tinit_y\t: 0,\n\t\t\t\t\tscroll_l: 0,\n\t\t\t\t\tscroll_t: 0,\n\t\t\t\t\tscroll_e: false,\n\t\t\t\t\tscroll_i: false,\n\t\t\t\t\tis_touch: false\n\t\t\t\t};\n\t\t\t\t$(document).off(\"mousemove touchmove\", $.vakata.dnd.drag);\n\t\t\t\t$(document).off(\"mouseup touchend\", $.vakata.dnd.stop);\n\t\t\t},\n\t\t\t_scroll : function (init_only) {\n\t\t\t\tif(!vakata_dnd.scroll_e || (!vakata_dnd.scroll_l && !vakata_dnd.scroll_t)) {\n\t\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(!vakata_dnd.scroll_i) {\n\t\t\t\t\tvakata_dnd.scroll_i = setInterval($.vakata.dnd._scroll, 100);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(init_only === true) { return false; }\n\n\t\t\t\tvar i = vakata_dnd.scroll_e.scrollTop(),\n\t\t\t\t\tj = vakata_dnd.scroll_e.scrollLeft();\n\t\t\t\tvakata_dnd.scroll_e.scrollTop(i + vakata_dnd.scroll_t * $.vakata.dnd.settings.scroll_speed);\n\t\t\t\tvakata_dnd.scroll_e.scrollLeft(j + vakata_dnd.scroll_l * $.vakata.dnd.settings.scroll_speed);\n\t\t\t\tif(i !== vakata_dnd.scroll_e.scrollTop() || j !== vakata_dnd.scroll_e.scrollLeft()) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when a drag causes an element to scroll\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t * @name dnd_scroll.vakata\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t * @param {jQuery} event the element that is scrolling\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.dnd._trigger(\"scroll\", vakata_dnd.scroll_e);\n\t\t\t\t}\n\t\t\t},\n\t\t\tstart : function (e, data, html) {\n\t\t\t\tif(e.type === \"touchstart\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.is_drag) { $.vakata.dnd.stop({}); }\n\t\t\t\ttry {\n\t\t\t\t\te.currentTarget.unselectable = \"on\";\n\t\t\t\t\te.currentTarget.onselectstart = function() { return false; };\n\t\t\t\t\tif(e.currentTarget.style) { e.currentTarget.style.MozUserSelect = \"none\"; }\n\t\t\t\t} catch(ignore) { }\n\t\t\t\tvakata_dnd.init_x\t= e.pageX;\n\t\t\t\tvakata_dnd.init_y\t= e.pageY;\n\t\t\t\tvakata_dnd.data\t\t= data;\n\t\t\t\tvakata_dnd.is_down\t= true;\n\t\t\t\tvakata_dnd.element\t= e.currentTarget;\n\t\t\t\tvakata_dnd.target\t= e.target;\n\t\t\t\tvakata_dnd.is_touch\t= e.type === \"touchstart\";\n\t\t\t\tif(html !== false) {\n\t\t\t\t\tvakata_dnd.helper = $(\"<div id='vakata-dnd'></div>\").html(html).css({\n\t\t\t\t\t\t\"display\"\t\t: \"block\",\n\t\t\t\t\t\t\"margin\"\t\t: \"0\",\n\t\t\t\t\t\t\"padding\"\t\t: \"0\",\n\t\t\t\t\t\t\"position\"\t\t: \"absolute\",\n\t\t\t\t\t\t\"top\"\t\t\t: \"-2000px\",\n\t\t\t\t\t\t\"lineHeight\"\t: \"16px\",\n\t\t\t\t\t\t\"zIndex\"\t\t: \"10000\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$(document).bind(\"mousemove touchmove\", $.vakata.dnd.drag);\n\t\t\t\t$(document).bind(\"mouseup touchend\", $.vakata.dnd.stop);\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdrag : function (e) {\n\t\t\t\tif(e.type === \"touchmove\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(!vakata_dnd.is_down) { return; }\n\t\t\t\tif(!vakata_dnd.is_drag) {\n\t\t\t\t\tif(\n\t\t\t\t\t\tMath.abs(e.pageX - vakata_dnd.init_x) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold) ||\n\t\t\t\t\t\tMath.abs(e.pageY - vakata_dnd.init_y) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif(vakata_dnd.helper) {\n\t\t\t\t\t\t\tvakata_dnd.helper.appendTo(\"body\");\n\t\t\t\t\t\t\tvakata_dnd.helper_w = vakata_dnd.helper.outerWidth();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvakata_dnd.is_drag = true;\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * triggered on the document when a drag starts\n\t\t\t\t\t\t * @event\n\t\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t\t * @name dnd_start.vakata\n\t\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t\t * @param {Object} event the event that caused the start (probably mousemove)\n\t\t\t\t\t\t */\n\t\t\t\t\t\t$.vakata.dnd._trigger(\"start\", e);\n\t\t\t\t\t}\n\t\t\t\t\telse { return; }\n\t\t\t\t}\n\n\t\t\t\tvar d  = false, w  = false,\n\t\t\t\t\tdh = false, wh = false,\n\t\t\t\t\tdw = false, ww = false,\n\t\t\t\t\tdt = false, dl = false,\n\t\t\t\t\tht = false, hl = false;\n\n\t\t\t\tvakata_dnd.scroll_t = 0;\n\t\t\t\tvakata_dnd.scroll_l = 0;\n\t\t\t\tvakata_dnd.scroll_e = false;\n\t\t\t\t$($(e.target).parentsUntil(\"body\").addBack().get().reverse())\n\t\t\t\t\t.filter(function () {\n\t\t\t\t\t\treturn\t(/^auto|scroll$/).test($(this).css(\"overflow\")) &&\n\t\t\t\t\t\t\t\t(this.scrollHeight > this.offsetHeight || this.scrollWidth > this.offsetWidth);\n\t\t\t\t\t})\n\t\t\t\t\t.each(function () {\n\t\t\t\t\t\tvar t = $(this), o = t.offset();\n\t\t\t\t\t\tif(this.scrollHeight > this.offsetHeight) {\n\t\t\t\t\t\t\tif(o.top + t.height() - e.pageY < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\n\t\t\t\t\t\t\tif(e.pageY - o.top < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_t = -1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.scrollWidth > this.offsetWidth) {\n\t\t\t\t\t\t\tif(o.left + t.width() - e.pageX < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\n\t\t\t\t\t\t\tif(e.pageX - o.left < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_l = -1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\n\t\t\t\t\t\t\tvakata_dnd.scroll_e = $(this);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tif(!vakata_dnd.scroll_e) {\n\t\t\t\t\td  = $(document); w = $(window);\n\t\t\t\t\tdh = d.height(); wh = w.height();\n\t\t\t\t\tdw = d.width(); ww = w.width();\n\t\t\t\t\tdt = d.scrollTop(); dl = d.scrollLeft();\n\t\t\t\t\tif(dh > wh && e.pageY - dt < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_t = -1;  }\n\t\t\t\t\tif(dh > wh && wh - (e.pageY - dt) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\n\t\t\t\t\tif(dw > ww && e.pageX - dl < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_l = -1; }\n\t\t\t\t\tif(dw > ww && ww - (e.pageX - dl) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\n\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\n\t\t\t\t\t\tvakata_dnd.scroll_e = d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.scroll_e) { $.vakata.dnd._scroll(true); }\n\n\t\t\t\tif(vakata_dnd.helper) {\n\t\t\t\t\tht = parseInt(e.pageY + $.vakata.dnd.settings.helper_top, 10);\n\t\t\t\t\thl = parseInt(e.pageX + $.vakata.dnd.settings.helper_left, 10);\n\t\t\t\t\tif(dh && ht + 25 > dh) { ht = dh - 50; }\n\t\t\t\t\tif(dw && hl + vakata_dnd.helper_w > dw) { hl = dw - (vakata_dnd.helper_w + 2); }\n\t\t\t\t\tvakata_dnd.helper.css({\n\t\t\t\t\t\tleft\t: hl + \"px\",\n\t\t\t\t\t\ttop\t\t: ht + \"px\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered on the document when a drag is in progress\n\t\t\t\t * @event\n\t\t\t\t * @plugin dnd\n\t\t\t\t * @name dnd_move.vakata\n\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t * @param {Object} event the event that caused this to trigger (most likely mousemove)\n\t\t\t\t */\n\t\t\t\t$.vakata.dnd._trigger(\"move\", e);\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tstop : function (e) {\n\t\t\t\tif(e.type === \"touchend\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.is_drag) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when a drag stops (the dragged element is dropped)\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t * @name dnd_stop.vakata\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t * @param {Object} event the event that caused the stop\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.dnd._trigger(\"stop\", e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(e.type === \"touchend\" && e.target === vakata_dnd.target) {\n\t\t\t\t\t\tvar to = setTimeout(function () { $(e.target).click(); }, 100);\n\t\t\t\t\t\t$(e.target).one('click', function() { if(to) { clearTimeout(to); } });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$.vakata.dnd._clean();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t}($));\n\n\t// include the dnd plugin by default\n\t// $.jstree.defaults.plugins.push(\"dnd\");\n\n\n/**\n * ### Search plugin\n *\n * Adds search functionality to jsTree.\n */\n\n\t/**\n\t * stores all defaults for the search plugin\n\t * @name $.jstree.defaults.search\n\t * @plugin search\n\t */\n\t$.jstree.defaults.search = {\n\t\t/**\n\t\t * a jQuery-like AJAX config, which jstree uses if a server should be queried for results. \n\t\t * \n\t\t * A `str` (which is the search string) parameter will be added with the request. The expected result is a JSON array with nodes that need to be opened so that matching nodes will be revealed.\n\t\t * Leave this setting as `false` to not query the server. You can also set this to a function, which will be invoked in the instance's scope and receive 2 parameters - the search string and the callback to call with the array of nodes to load.\n\t\t * @name $.jstree.defaults.search.ajax\n\t\t * @plugin search\n\t\t */\n\t\tajax : false,\n\t\t/**\n\t\t * Indicates if the search should be fuzzy or not (should `chnd3` match `child node 3`). Default is `false`.\n\t\t * @name $.jstree.defaults.search.fuzzy\n\t\t * @plugin search\n\t\t */\n\t\tfuzzy : false,\n\t\t/**\n\t\t * Indicates if the search should be case sensitive. Default is `false`.\n\t\t * @name $.jstree.defaults.search.case_sensitive\n\t\t * @plugin search\n\t\t */\n\t\tcase_sensitive : false,\n\t\t/**\n\t\t * Indicates if the tree should be filtered to show only matching nodes (keep in mind this can be a heavy on large trees in old browsers). Default is `false`.\n\t\t * @name $.jstree.defaults.search.show_only_matches\n\t\t * @plugin search\n\t\t */\n\t\tshow_only_matches : false,\n\t\t/**\n\t\t * Indicates if all nodes opened to reveal the search result, should be closed when the search is cleared or a new search is performed. Default is `true`.\n\t\t * @name $.jstree.defaults.search.close_opened_onclear\n\t\t * @plugin search\n\t\t */\n\t\tclose_opened_onclear : true,\n\t\t/**\n\t\t * Indicates if only leaf nodes should be included in search results. Default is `false`.\n\t\t * @name $.jstree.defaults.search.search_leaves_only\n\t\t * @plugin search\n\t\t */\n\t\tsearch_leaves_only : false,\n\t\t/**\n\t\t * If set to a function it wil be called in the instance's scope with two arguments - search string and node (where node will be every node in the structure, so use with caution).\n\t\t * If the function returns a truthy value the node will be considered a match (it might not be displayed if search_only_leaves is set to true and the node is not a leaf). Default is `false`.\n\t\t * @name $.jstree.defaults.search.search_callback\n\t\t * @plugin search\n\t\t */\n\t\tsearch_callback : false\n\t};\n\n\t$.jstree.plugins.search = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis._data.search.str = \"\";\n\t\t\tthis._data.search.dom = $();\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\n\t\t\tthis.element.on('before_open.jstree', $.proxy(function (e, data) {\n\t\t\t\tvar i, j, f, r = this._data.search.res, s = [], o = $();\n\t\t\t\tif(r && r.length) {\n\t\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\n\t\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\n\t\t\t\t\tif(this.settings.search.show_only_matches && this._data.search.res.length) {\n\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\n\t\t\t\t\t\t\ts = s.concat(this.get_node(r[i]).parents);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts = $.vakata.array_remove_item($.vakata.array_unique(s),'#');\n\t\t\t\t\t\to = s.length ? $(this.element[0].querySelectorAll('#' + $.map(s, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #'))) : $();\n\n\t\t\t\t\t\tthis.element.find(\".jstree-node\").hide().filter('.jstree-last').filter(function() { return this.nextSibling; }).removeClass('jstree-last');\n\t\t\t\t\t\to = o.add(this._data.search.dom);\n\t\t\t\t\t\to.parentsUntil(\".jstree\").addBack().show()\n\t\t\t\t\t\t\t.filter(\".jstree-children\").each(function () { $(this).children(\".jstree-node:visible\").eq(-1).addClass(\"jstree-last\"); });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif(this.settings.search.show_only_matches) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on(\"search.jstree\", function (e, data) {\n\t\t\t\t\t\tif(data.nodes.length) {\n\t\t\t\t\t\t\t$(this).find(\".jstree-node\").hide().filter('.jstree-last').filter(function() { return this.nextSibling; }).removeClass('jstree-last');\n\t\t\t\t\t\t\tdata.nodes.parentsUntil(\".jstree\").addBack().show()\n\t\t\t\t\t\t\t\t.filter(\".jstree-children\").each(function () { $(this).children(\".jstree-node:visible\").eq(-1).addClass(\"jstree-last\"); });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"clear_search.jstree\", function (e, data) {\n\t\t\t\t\t\tif(data.nodes.length) {\n\t\t\t\t\t\t\t$(this).find(\".jstree-node\").css(\"display\",\"\").filter('.jstree-last').filter(function() { return this.nextSibling; }).removeClass('jstree-last');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * used to search the tree nodes for a given string\n\t\t * @name search(str [, skip_async])\n\t\t * @param {String} str the search string\n\t\t * @param {Boolean} skip_async if set to true server will not be queried even if configured\n\t\t * @plugin search\n\t\t * @trigger search.jstree\n\t\t */\n\t\tthis.search = function (str, skip_async) {\n\t\t\tif(str === false || $.trim(str.toString()) === \"\") {\n\t\t\t\treturn this.clear_search();\n\t\t\t}\n\t\t\tstr = str.toString();\n\t\t\tvar s = this.settings.search,\n\t\t\t\ta = s.ajax ? s.ajax : false,\n\t\t\t\tf = null,\n\t\t\t\tr = [],\n\t\t\t\tp = [], i, j;\n\t\t\tif(this._data.search.res.length) {\n\t\t\t\tthis.clear_search();\n\t\t\t}\n\t\t\tif(!skip_async && a !== false) {\n\t\t\t\tif($.isFunction(a)) {\n\t\t\t\t\treturn a.call(this, str, $.proxy(function (d) {\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\n\t\t\t\t\t\t\t\tthis.search(str, true);\n\t\t\t\t\t\t\t}, true);\n\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ta = $.extend({}, a);\n\t\t\t\t\tif(!a.data) { a.data = {}; }\n\t\t\t\t\ta.data.str = str;\n\t\t\t\t\treturn $.ajax(a)\n\t\t\t\t\t\t.fail($.proxy(function () {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'search', 'id' : 'search_01', 'reason' : 'Could not load search parents', 'data' : JSON.stringify(a) };\n\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t.done($.proxy(function (d) {\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\n\t\t\t\t\t\t\t\tthis.search(str, true);\n\t\t\t\t\t\t\t}, true);\n\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.search.str = str;\n\t\t\tthis._data.search.dom = $();\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\n\t\t\tf = new $.vakata.search(str, true, { caseSensitive : s.case_sensitive, fuzzy : s.fuzzy });\n\n\t\t\t$.each(this._model.data, function (i, v) {\n\t\t\t\tif(v.text && ( (s.search_callback && s.search_callback.call(this, str, v)) || (!s.search_callback && f.search(v.text).isMatch) ) && (!s.search_leaves_only || (v.state.loaded && v.children.length === 0)) ) {\n\t\t\t\t\tr.push(i);\n\t\t\t\t\tp = p.concat(v.parents);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(r.length) {\n\t\t\t\tp = $.vakata.array_unique(p);\n\t\t\t\tthis._search_open(p);\n\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\n\t\t\t\tthis._data.search.res = r;\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered after search is complete\n\t\t\t * @event\n\t\t\t * @name search.jstree\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes\n\t\t\t * @param {String} str the search string\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes\n\t\t\t * @plugin search\n\t\t\t */\n\t\t\tthis.trigger('search', { nodes : this._data.search.dom, str : str, res : this._data.search.res });\n\t\t};\n\t\t/**\n\t\t * used to clear the last search (removes classes and shows all nodes if filtering is on)\n\t\t * @name clear_search()\n\t\t * @plugin search\n\t\t * @trigger clear_search.jstree\n\t\t */\n\t\tthis.clear_search = function () {\n\t\t\tthis._data.search.dom.children(\".jstree-anchor\").removeClass(\"jstree-search\");\n\t\t\tif(this.settings.search.close_opened_onclear) {\n\t\t\t\tthis.close_node(this._data.search.opn, 0);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered after search is complete\n\t\t\t * @event\n\t\t\t * @name clear_search.jstree\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes (the result from the last search)\n\t\t\t * @param {String} str the search string (the last search string)\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes (the result from the last search)\n\t\t\t * @plugin search\n\t\t\t */\n\t\t\tthis.trigger('clear_search', { 'nodes' : this._data.search.dom, str : this._data.search.str, res : this._data.search.res });\n\t\t\tthis._data.search.str = \"\";\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\t\t\tthis._data.search.dom = $();\n\t\t};\n\t\t/**\n\t\t * opens nodes that need to be opened to reveal the search results. Used only internally.\n\t\t * @private\n\t\t * @name _search_open(d)\n\t\t * @param {Array} d an array of node IDs\n\t\t * @plugin search\n\t\t */\n\t\tthis._search_open = function (d) {\n\t\t\tvar t = this;\n\t\t\t$.each(d.concat([]), function (i, v) {\n\t\t\t\tif(v === \"#\") { return true; }\n\t\t\t\ttry { v = $('#' + v.replace($.jstree.idregex,'\\\\$&'), t.element); } catch(ignore) { }\n\t\t\t\tif(v && v.length) {\n\t\t\t\t\tif(t.is_closed(v)) {\n\t\t\t\t\t\tt._data.search.opn.push(v[0].id);\n\t\t\t\t\t\tt.open_node(v, function () { t._search_open(d); }, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t};\n\n\t// helpers\n\t(function ($) {\n\t\t// from http://kiro.me/projects/fuse.html\n\t\t$.vakata.search = function(pattern, txt, options) {\n\t\t\toptions = options || {};\n\t\t\tif(options.fuzzy !== false) {\n\t\t\t\toptions.fuzzy = true;\n\t\t\t}\n\t\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\n\t\t\tvar MATCH_LOCATION\t= options.location || 0,\n\t\t\t\tMATCH_DISTANCE\t= options.distance || 100,\n\t\t\t\tMATCH_THRESHOLD\t= options.threshold || 0.6,\n\t\t\t\tpatternLen = pattern.length,\n\t\t\t\tmatchmask, pattern_alphabet, match_bitapScore, search;\n\t\t\tif(patternLen > 32) {\n\t\t\t\toptions.fuzzy = false;\n\t\t\t}\n\t\t\tif(options.fuzzy) {\n\t\t\t\tmatchmask = 1 << (patternLen - 1);\n\t\t\t\tpattern_alphabet = (function () {\n\t\t\t\t\tvar mask = {},\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\t\tmask[pattern.charAt(i)] = 0;\n\t\t\t\t\t}\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\n\t\t\t\t\t}\n\t\t\t\t\treturn mask;\n\t\t\t\t}());\n\t\t\t\tmatch_bitapScore = function (e, x) {\n\t\t\t\t\tvar accuracy = e / patternLen,\n\t\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\n\t\t\t\t\tif(!MATCH_DISTANCE) {\n\t\t\t\t\t\treturn proximity ? 1.0 : accuracy;\n\t\t\t\t\t}\n\t\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\n\t\t\t\t};\n\t\t\t}\n\t\t\tsearch = function (text) {\n\t\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\n\t\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisMatch: true,\n\t\t\t\t\t\tscore: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif(!options.fuzzy) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisMatch: false,\n\t\t\t\t\t\tscore: 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tvar i, j,\n\t\t\t\t\ttextLen = text.length,\n\t\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\n\t\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\n\t\t\t\t\tbinMin, binMid,\n\t\t\t\t\tbinMax = patternLen + textLen,\n\t\t\t\t\tlastRd, start, finish, rd, charMatch,\n\t\t\t\t\tscore = 1,\n\t\t\t\t\tlocations = [];\n\t\t\t\tif (bestLoc !== -1) {\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\n\t\t\t\t\tif (bestLoc !== -1) {\n\t\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbestLoc = -1;\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\tbinMin = 0;\n\t\t\t\t\tbinMid = binMax;\n\t\t\t\t\twhile (binMin < binMid) {\n\t\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\n\t\t\t\t\t\t\tbinMin = binMid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\n\t\t\t\t\t}\n\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\n\t\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\n\t\t\t\t\trd = new Array(finish + 2);\n\t\t\t\t\trd[finish + 1] = (1 << i) - 1;\n\t\t\t\t\tfor (j = finish; j >= start; j--) {\n\t\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rd[j] & matchmask) {\n\t\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\n\t\t\t\t\t\t\tif (score <= scoreThreshold) {\n\t\t\t\t\t\t\t\tscoreThreshold = score;\n\t\t\t\t\t\t\t\tbestLoc = j - 1;\n\t\t\t\t\t\t\t\tlocations.push(bestLoc);\n\t\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\n\t\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlastRd = rd;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tisMatch: bestLoc >= 0,\n\t\t\t\t\tscore: score\n\t\t\t\t};\n\t\t\t};\n\t\t\treturn txt === true ? { 'search' : search } : search(txt);\n\t\t};\n\t}($));\n\n\t// include the search plugin by default\n\t// $.jstree.defaults.plugins.push(\"search\");\n\n/**\n * ### Sort plugin\n *\n * Autmatically sorts all siblings in the tree according to a sorting function.\n */\n\n\t/**\n\t * the settings function used to sort the nodes.\n\t * It is executed in the tree's context, accepts two nodes as arguments and should return `1` or `-1`.\n\t * @name $.jstree.defaults.sort\n\t * @plugin sort\n\t */\n\t$.jstree.defaults.sort = function (a, b) {\n\t\t//return this.get_type(a) === this.get_type(b) ? (this.get_text(a) > this.get_text(b) ? 1 : -1) : this.get_type(a) >= this.get_type(b);\n\t\treturn this.get_text(a) > this.get_text(b) ? 1 : -1;\n\t};\n\t$.jstree.plugins.sort = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tthis.element\n\t\t\t\t.on(\"model.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent, true);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"rename_node.jstree create_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent || data.node.parent, false);\n\t\t\t\t\t\tthis.redraw_node(data.parent || data.node.parent, true);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"move_node.jstree copy_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent, false);\n\t\t\t\t\t\tthis.redraw_node(data.parent, true);\n\t\t\t\t\t}, this));\n\t\t};\n\t\t/**\n\t\t * used to sort a node's children\n\t\t * @private\n\t\t * @name sort(obj [, deep])\n\t\t * @param  {mixed} obj the node\n\t\t * @param {Boolean} deep if set to `true` nodes are sorted recursively.\n\t\t * @plugin sort\n\t\t * @trigger search.jstree\n\t\t */\n\t\tthis.sort = function (obj, deep) {\n\t\t\tvar i, j;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(obj && obj.children && obj.children.length) {\n\t\t\t\tobj.children.sort($.proxy(this.settings.sort, this));\n\t\t\t\tif(deep) {\n\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\tthis.sort(obj.children_d[i], false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\t// include the sort plugin by default\n\t// $.jstree.defaults.plugins.push(\"sort\");\n\n/**\n * ### State plugin\n *\n * Saves the state of the tree (selected nodes, opened nodes) on the user's computer using available options (localStorage, cookies, etc)\n */\n\n\tvar to = false;\n\t/**\n\t * stores all defaults for the state plugin\n\t * @name $.jstree.defaults.state\n\t * @plugin state\n\t */\n\t$.jstree.defaults.state = {\n\t\t/**\n\t\t * A string for the key to use when saving the current tree (change if using multiple trees in your project). Defaults to `jstree`.\n\t\t * @name $.jstree.defaults.state.key\n\t\t * @plugin state\n\t\t */\n\t\tkey\t\t: 'jstree',\n\t\t/**\n\t\t * A space separated list of events that trigger a state save. Defaults to `changed.jstree open_node.jstree close_node.jstree`.\n\t\t * @name $.jstree.defaults.state.events\n\t\t * @plugin state\n\t\t */\n\t\tevents\t: 'changed.jstree open_node.jstree close_node.jstree',\n\t\t/**\n\t\t * Time in milliseconds after which the state will expire. Defaults to 'false' meaning - no expire.\n\t\t * @name $.jstree.defaults.state.ttl\n\t\t * @plugin state\n\t\t */\n\t\tttl\t\t: false,\n\t\t/**\n\t\t * A function that will be executed prior to restoring state with one argument - the state object. Can be used to clear unwanted parts of the state.\n\t\t * @name $.jstree.defaults.state.filter\n\t\t * @plugin state\n\t\t */\n\t\tfilter\t: false\n\t};\n\t$.jstree.plugins.state = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tvar bind = $.proxy(function () {\n\t\t\t\tthis.element.on(this.settings.state.events, $.proxy(function () {\n\t\t\t\t\tif(to) { clearTimeout(to); }\n\t\t\t\t\tto = setTimeout($.proxy(function () { this.save_state(); }, this), 100);\n\t\t\t\t}, this));\n\t\t\t}, this);\n\t\t\tthis.element\n\t\t\t\t.on(\"ready.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.one(\"restore_state.jstree\", bind);\n\t\t\t\t\t\tif(!this.restore_state()) { bind(); }\n\t\t\t\t\t}, this));\n\t\t};\n\t\t/**\n\t\t * save the state\n\t\t * @name save_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.save_state = function () {\n\t\t\tvar st = { 'state' : this.get_state(), 'ttl' : this.settings.state.ttl, 'sec' : +(new Date()) };\n\t\t\t$.vakata.storage.set(this.settings.state.key, JSON.stringify(st));\n\t\t};\n\t\t/**\n\t\t * restore the state from the user's computer\n\t\t * @name restore_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.restore_state = function () {\n\t\t\tvar k = $.vakata.storage.get(this.settings.state.key);\n\t\t\tif(!!k) { try { k = JSON.parse(k); } catch(ex) { return false; } }\n\t\t\tif(!!k && k.ttl && k.sec && +(new Date()) - k.sec > k.ttl) { return false; }\n\t\t\tif(!!k && k.state) { k = k.state; }\n\t\t\tif(!!k && $.isFunction(this.settings.state.filter)) { k = this.settings.state.filter.call(this, k); }\n\t\t\tif(!!k) {\n\t\t\t\tthis.element.one(\"set_state.jstree\", function (e, data) { data.instance.trigger('restore_state', { 'state' : $.extend(true, {}, k) }); });\n\t\t\t\tthis.set_state(k);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\t/**\n\t\t * clear the state on the user's computer\n\t\t * @name clear_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.clear_state = function () {\n\t\t\treturn $.vakata.storage.del(this.settings.state.key);\n\t\t};\n\t};\n\n\t(function ($, undefined) {\n\t\t$.vakata.storage = {\n\t\t\t// simply specifying the functions in FF throws an error\n\t\t\tset : function (key, val) { return window.localStorage.setItem(key, val); },\n\t\t\tget : function (key) { return window.localStorage.getItem(key); },\n\t\t\tdel : function (key) { return window.localStorage.removeItem(key); }\n\t\t};\n\t}($));\n\n\t// include the state plugin by default\n\t// $.jstree.defaults.plugins.push(\"state\");\n\n/**\n * ### Types plugin\n *\n * Makes it possible to add predefined types for groups of nodes, which make it possible to easily control nesting rules and icon for each group.\n */\n\n\t/**\n\t * An object storing all types as key value pairs, where the key is the type name and the value is an object that could contain following keys (all optional).\n\t * \n\t * * `max_children` the maximum number of immediate children this node type can have. Do not specify or set to `-1` for unlimited.\n\t * * `max_depth` the maximum number of nesting this node type can have. A value of `1` would mean that the node can have children, but no grandchildren. Do not specify or set to `-1` for unlimited.\n\t * * `valid_children` an array of node type strings, that nodes of this type can have as children. Do not specify or set to `-1` for no limits.\n\t * * `icon` a string - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class. Omit to use the default icon from your theme.\n\t *\n\t * There are two predefined types:\n\t * \n\t * * `#` represents the root of the tree, for example `max_children` would control the maximum number of root nodes.\n\t * * `default` represents the default node - any settings here will be applied to all nodes that do not have a type specified.\n\t * \n\t * @name $.jstree.defaults.types\n\t * @plugin types\n\t */\n\t$.jstree.defaults.types = {\n\t\t'#' : {},\n\t\t'default' : {}\n\t};\n\n\t$.jstree.plugins.types = function (options, parent) {\n\t\tthis.init = function (el, options) {\n\t\t\tvar i, j;\n\t\t\tif(options && options.types && options.types['default']) {\n\t\t\t\tfor(i in options.types) {\n\t\t\t\t\tif(i !== \"default\" && i !== \"#\" && options.types.hasOwnProperty(i)) {\n\t\t\t\t\t\tfor(j in options.types['default']) {\n\t\t\t\t\t\t\tif(options.types['default'].hasOwnProperty(j) && options.types[i][j] === undefined) {\n\t\t\t\t\t\t\t\toptions.types[i][j] = options.types['default'][j];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tparent.init.call(this, el, options);\n\t\t\tthis._model.data['#'].type = '#';\n\t\t};\n\t\tthis.refresh = function (skip_loading, forget_state) {\n\t\t\tparent.refresh.call(this, skip_loading, forget_state);\n\t\t\tthis._model.data['#'].type = '#';\n\t\t};\n\t\tthis.bind = function () {\n\t\t\tthis.element\n\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\tt = this.settings.types,\n\t\t\t\t\t\t\ti, j, c = 'default';\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\tc = 'default';\n\t\t\t\t\t\t\tif(m[dpc[i]].original && m[dpc[i]].original.type && t[m[dpc[i]].original.type]) {\n\t\t\t\t\t\t\t\tc = m[dpc[i]].original.type;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(m[dpc[i]].data && m[dpc[i]].data.jstree && m[dpc[i]].data.jstree.type && t[m[dpc[i]].data.jstree.type]) {\n\t\t\t\t\t\t\t\tc = m[dpc[i]].data.jstree.type;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[dpc[i]].type = c;\n\t\t\t\t\t\t\tif(m[dpc[i]].icon === true && t[c].icon !== undefined) {\n\t\t\t\t\t\t\t\tm[dpc[i]].icon = t[c].icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tm['#'].type = '#';\n\t\t\t\t\t}, this));\n\t\t\tparent.bind.call(this);\n\t\t};\n\t\tthis.get_json = function (obj, options, flat) {\n\t\t\tvar i, j,\n\t\t\t\tm = this._model.data,\n\t\t\t\topt = options ? $.extend(true, {}, options, {no_id:false}) : {},\n\t\t\t\ttmp = parent.get_json.call(this, obj, opt, flat);\n\t\t\tif(tmp === false) { return false; }\n\t\t\tif($.isArray(tmp)) {\n\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\ttmp[i].type = tmp[i].id && m[tmp[i].id] && m[tmp[i].id].type ? m[tmp[i].id].type : \"default\";\n\t\t\t\t\tif(options && options.no_id) {\n\t\t\t\t\t\tdelete tmp[i].id;\n\t\t\t\t\t\tif(tmp[i].li_attr && tmp[i].li_attr.id) {\n\t\t\t\t\t\t\tdelete tmp[i].li_attr.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp.type = tmp.id && m[tmp.id] && m[tmp.id].type ? m[tmp.id].type : \"default\";\n\t\t\t\tif(options && options.no_id) {\n\t\t\t\t\ttmp = this._delete_ids(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tmp;\n\t\t};\n\t\tthis._delete_ids = function (tmp) {\n\t\t\tif($.isArray(tmp)) {\n\t\t\t\tfor(var i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\ttmp[i] = this._delete_ids(tmp[i]);\n\t\t\t\t}\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\tdelete tmp.id;\n\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\n\t\t\t\tdelete tmp.li_attr.id;\n\t\t\t}\n\t\t\tif(tmp.children && $.isArray(tmp.children)) {\n\t\t\t\ttmp.children = this._delete_ids(tmp.children);\n\t\t\t}\n\t\t\treturn tmp;\n\t\t};\n\t\tthis.check = function (chk, obj, par, pos, more) {\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tvar m = obj && obj.id ? $.jstree.reference(obj.id) : null, tmp, d, i, j;\n\t\t\tm = m && m._model && m._model.data ? m._model.data : null;\n\t\t\tswitch(chk) {\n\t\t\t\tcase \"create_node\":\n\t\t\t\tcase \"move_node\":\n\t\t\t\tcase \"copy_node\":\n\t\t\t\t\tif(chk !== 'move_node' || $.inArray(obj.id, par.children) === -1) {\n\t\t\t\t\t\ttmp = this.get_rules(par);\n\t\t\t\t\t\tif(tmp.max_children !== undefined && tmp.max_children !== -1 && tmp.max_children === par.children.length) {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_01', 'reason' : 'max_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(tmp.valid_children !== undefined && tmp.valid_children !== -1 && $.inArray(obj.type, tmp.valid_children) === -1) {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_02', 'reason' : 'valid_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(m && obj.children_d && obj.parents) {\n\t\t\t\t\t\t\td = 0;\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\td = Math.max(d, m[obj.children_d[i]].parents.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\td = d - obj.parents.length + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(d <= 0 || d === undefined) { d = 1; }\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif(tmp.max_depth !== undefined && tmp.max_depth !== -1 && tmp.max_depth < d) {\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_03', 'reason' : 'max_depth prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpar = this.get_node(par.parent);\n\t\t\t\t\t\t\ttmp = this.get_rules(par);\n\t\t\t\t\t\t\td++;\n\t\t\t\t\t\t} while(par);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\t/**\n\t\t * used to retrieve the type settings object for a node\n\t\t * @name get_rules(obj)\n\t\t * @param {mixed} obj the node to find the rules for\n\t\t * @return {Object}\n\t\t * @plugin types\n\t\t */\n\t\tthis.get_rules = function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar tmp = this.get_type(obj, true);\n\t\t\tif(tmp.max_depth === undefined) { tmp.max_depth = -1; }\n\t\t\tif(tmp.max_children === undefined) { tmp.max_children = -1; }\n\t\t\tif(tmp.valid_children === undefined) { tmp.valid_children = -1; }\n\t\t\treturn tmp;\n\t\t};\n\t\t/**\n\t\t * used to retrieve the type string or settings object for a node\n\t\t * @name get_type(obj [, rules])\n\t\t * @param {mixed} obj the node to find the rules for\n\t\t * @param {Boolean} rules if set to `true` instead of a string the settings object will be returned\n\t\t * @return {String|Object}\n\t\t * @plugin types\n\t\t */\n\t\tthis.get_type = function (obj, rules) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj) ? false : ( rules ? $.extend({ 'type' : obj.type }, this.settings.types[obj.type]) : obj.type);\n\t\t};\n\t\t/**\n\t\t * used to change a node's type\n\t\t * @name set_type(obj, type)\n\t\t * @param {mixed} obj the node to change\n\t\t * @param {String} type the new type\n\t\t * @plugin types\n\t\t */\n\t\tthis.set_type = function (obj, type) {\n\t\t\tvar t, t1, t2, old_type, old_icon;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_type(obj[t1], type);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tt = this.settings.types;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!t[type] || !obj) { return false; }\n\t\t\told_type = obj.type;\n\t\t\told_icon = this.get_icon(obj);\n\t\t\tobj.type = type;\n\t\t\tif(old_icon === true || (t[old_type] && t[old_type].icon && old_icon === t[old_type].icon)) {\n\t\t\t\tthis.set_icon(obj, t[type].icon !== undefined ? t[type].icon : true);\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t};\n\t// include the types plugin by default\n\t// $.jstree.defaults.plugins.push(\"types\");\n\n/**\n * ### Unique plugin\n *\n * Enforces that no nodes with the same name can coexist as siblings.\n */\n\n\t/**\n\t * stores all defaults for the unique plugin\n\t * @name $.jstree.defaults.unique\n\t * @plugin unique\n\t */\n\t$.jstree.defaults.unique = {\n\t\t/**\n\t\t * Indicates if the comparison should be case sensitive. Default is `false`.\n\t\t * @name $.jstree.defaults.unique.case_sensitive\n\t\t * @plugin unique\n\t\t */\n\t\tcase_sensitive : false,\n\t\t/**\n\t\t * A callback executed in the instance's scope when a new node is created and the name is already taken, the two arguments are the conflicting name and the counter. The default will produce results like `New node (2)`.\n\t\t * @name $.jstree.defaults.unique.duplicate\n\t\t * @plugin unique\n\t\t */\n\t\tduplicate : function (name, counter) {\n\t\t\treturn name + ' (' + counter + ')';\n\t\t}\n\t};\n\n\t$.jstree.plugins.unique = function (options, parent) {\n\t\tthis.check = function (chk, obj, par, pos, more) {\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tif(!par || !par.children) { return true; }\n\t\t\tvar n = chk === \"rename_node\" ? pos : obj.text,\n\t\t\t\tc = [],\n\t\t\t\ts = this.settings.unique.case_sensitive,\n\t\t\t\tm = this._model.data, i, j;\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\tc.push(s ? m[par.children[i]].text : m[par.children[i]].text.toLowerCase());\n\t\t\t}\n\t\t\tif(!s) { n = n.toLowerCase(); }\n\t\t\tswitch(chk) {\n\t\t\t\tcase \"delete_node\":\n\t\t\t\t\treturn true;\n\t\t\t\tcase \"rename_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1 || (obj.text && obj.text[ s ? 'toString' : 'toLowerCase']() === n));\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_01', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"create_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_04', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"copy_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_02', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"move_node\":\n\t\t\t\t\ti = (obj.parent === par.id || $.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_03', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tthis.create_node = function (par, node, pos, callback, is_loaded) {\n\t\t\tif(!node || node.text === undefined) {\n\t\t\t\tif(par === null) {\n\t\t\t\t\tpar = \"#\";\n\t\t\t\t}\n\t\t\t\tpar = this.get_node(par);\n\t\t\t\tif(!par) {\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\tpos = pos === undefined ? \"last\" : pos;\n\t\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\tif(!node) { node = {}; }\n\t\t\t\tvar tmp, n, dpc, i, j, m = this._model.data, s = this.settings.unique.case_sensitive, cb = this.settings.unique.duplicate;\n\t\t\t\tn = tmp = this.get_string('New node');\n\t\t\t\tdpc = [];\n\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\t\tdpc.push(s ? m[par.children[i]].text : m[par.children[i]].text.toLowerCase());\n\t\t\t\t}\n\t\t\t\ti = 1;\n\t\t\t\twhile($.inArray(s ? n : n.toLowerCase(), dpc) !== -1) {\n\t\t\t\t\tn = cb.call(this, tmp, (++i)).toString();\n\t\t\t\t}\n\t\t\t\tnode.text = n;\n\t\t\t}\n\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t};\n\t};\n\n\t// include the unique plugin by default\n\t// $.jstree.defaults.plugins.push(\"unique\");\n\n\n/**\n * ### Wholerow plugin\n *\n * Makes each node appear block level. Making selection easier. May cause slow down for large trees in old browsers.\n */\n\n\tvar div = document.createElement('DIV');\n\tdiv.setAttribute('unselectable','on');\n\tdiv.className = 'jstree-wholerow';\n\tdiv.innerHTML = '&#160;';\n\t$.jstree.plugins.wholerow = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis.element\n\t\t\t\t.on('ready.jstree set_state.jstree', $.proxy(function () {\n\t\t\t\t\t\tthis.hide_dots();\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\n\t\t\t\t\t\t//div.style.height = this._data.core.li_height + 'px';\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-wholerow-ul');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"deselect_all.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"changed.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\n\t\t\t\t\t\tvar tmp = false, i, j;\n\t\t\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = this.get_node(data.selected[i], true);\n\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\ttmp.children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"open_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.get_node(data.node, true).find('.jstree-clicked').parent().children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"hover_node.jstree dehover_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.get_node(data.node, true).children('.jstree-wholerow')[e.type === \"hover_node\"?\"addClass\":\"removeClass\"]('jstree-wholerow-hovered');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-wholerow\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tvar tmp = $.Event('contextmenu', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey, pageX : e.pageX, pageY : e.pageY });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor:eq(0)\").trigger(tmp);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-wholerow\", function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor:eq(0)\").trigger(tmp).focus();\n\t\t\t\t\t})\n\t\t\t\t.on(\"click.jstree\", \".jstree-leaf > .jstree-ocl\", $.proxy(function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor:eq(0)\").trigger(tmp).focus();\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"mouseover.jstree\", \".jstree-wholerow, .jstree-icon\", $.proxy(function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"mouseleave.jstree\", \".jstree-node\", $.proxy(function (e) {\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\n\t\t\t\t\t}, this));\n\t\t};\n\t\tthis.teardown = function () {\n\t\t\tif(this.settings.wholerow) {\n\t\t\t\tthis.element.find(\".jstree-wholerow\").remove();\n\t\t\t}\n\t\t\tparent.teardown.call(this);\n\t\t};\n\t\tthis.redraw_node = function(obj, deep, callback) {\n\t\t\tobj = parent.redraw_node.call(this, obj, deep, callback);\n\t\t\tif(obj) {\n\t\t\t\tvar tmp = div.cloneNode(true);\n\t\t\t\t//tmp.style.height = this._data.core.li_height + 'px';\n\t\t\t\tif($.inArray(obj.id, this._data.core.selected) !== -1) { tmp.className += ' jstree-wholerow-clicked'; }\n\t\t\t\tobj.insertBefore(tmp, obj.childNodes[0]);\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t};\n\t// include the wholerow plugin by default\n\t// $.jstree.defaults.plugins.push(\"wholerow\");\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./galaxy/scripts/libs/jquery/jstree.js\n// module id = 298\n// module chunks = 6","import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_select from \"mvc/ui/ui-select\";\nvar LibraryView = Backbone.View.extend({\n    el: \"#center\",\n\n    model: null,\n\n    options: {},\n\n    events: {\n        \"click .toolbtn_save_permissions\": \"savePermissions\"\n    },\n\n    initialize: function(options) {\n        this.options = _.extend(this.options, options);\n        if (this.options.id) {\n            this.fetchLibrary();\n        }\n    },\n\n    fetchLibrary: function(options) {\n        this.options = _.extend(this.options, options);\n        this.model = new mod_library_model.Library({\n            id: this.options.id\n        });\n        var that = this;\n        this.model.fetch({\n            success: function() {\n                if (that.options.show_permissions) {\n                    that.showPermissions();\n                }\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(`${response.responseJSON.err_msg} Click this to go back.`, \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    mod_toastr.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    showPermissions: function(options) {\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n\n        if (this.options.fetched_permissions !== undefined) {\n            if (this.options.fetched_permissions.access_library_role_list.length === 0) {\n                this.model.set({ is_unrestricted: true });\n            } else {\n                this.model.set({ is_unrestricted: false });\n            }\n        }\n        var is_admin = false;\n        if (Galaxy.user) {\n            is_admin = Galaxy.user.isAdmin();\n        }\n        var template = this.templateLibraryPermissions();\n        this.$el.html(template({ library: this.model, is_admin: is_admin }));\n\n        var self = this;\n        $.get(`${Galaxy.root}api/libraries/${self.id}/permissions?scope=current`)\n            .done(fetched_permissions => {\n                self.prepareSelectBoxes({\n                    fetched_permissions: fetched_permissions\n                });\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to fetch library permissions.\");\n            });\n\n        $(\"#center [data-toggle]\").tooltip();\n        //hack to show scrollbars\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    _serializeRoles: function(role_list) {\n        var selected_roles = [];\n        for (var i = 0; i < role_list.length; i++) {\n            selected_roles.push(`${role_list[i][1]}:${role_list[i][0]}`);\n        }\n        return selected_roles;\n    },\n\n    prepareSelectBoxes: function(options) {\n        this.options = _.extend(this.options, options);\n        var fetched_permissions = this.options.fetched_permissions;\n        var self = this;\n\n        var selected_access_library_roles = this._serializeRoles(fetched_permissions.access_library_role_list);\n        var selected_add_item_roles = this._serializeRoles(fetched_permissions.add_library_item_role_list);\n        var selected_manage_library_roles = this._serializeRoles(fetched_permissions.manage_library_role_list);\n        var selected_modify_library_roles = this._serializeRoles(fetched_permissions.modify_library_role_list);\n\n        self.accessSelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"access_perm\", selected_access_library_roles, true)\n        );\n        self.addSelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"add_perm\", selected_add_item_roles, false)\n        );\n        self.manageSelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"manage_perm\", selected_manage_library_roles, false)\n        );\n        self.modifySelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"modify_perm\", selected_modify_library_roles, false)\n        );\n    },\n\n    _createSelectOptions: function(self, id, init_data, is_library_access) {\n        is_library_access = is_library_access === true ? is_library_access : false;\n        var select_options = {\n            minimumInputLength: 0,\n            css: id,\n            multiple: true,\n            placeholder: \"Click to select a role\",\n            container: self.$el.find(`#${id}`),\n            ajax: {\n                url: `${Galaxy.root}api/libraries/${self.id}/permissions?scope=available&is_library_access=${\n                    is_library_access\n                }`,\n                dataType: \"json\",\n                quietMillis: 100,\n                data: function(term, page) {\n                    // page is the one-based page number tracked by Select2\n                    return {\n                        q: term, //search term\n                        page_limit: 10, // page size\n                        page: page // page number\n                    };\n                },\n                results: function(data, page) {\n                    var more = page * 10 < data.total; // whether or not there are more results available\n                    // notice we return the value of more so Select2 knows if more results can be loaded\n                    return { results: data.roles, more: more };\n                }\n            },\n            formatResult: function roleFormatResult(role) {\n                return `${role.name} type: ${role.type}`;\n            },\n\n            formatSelection: function roleFormatSelection(role) {\n                return role.name;\n            },\n            initSelection: function(element, callback) {\n                // the input tag has a value attribute preloaded that points to a preselected role's id\n                // this function resolves that id attribute to an object that select2 can render\n                // using its formatResult renderer - that way the role name is shown preselected\n                var data = [];\n                $(element.val().split(\",\")).each(function() {\n                    var item = this.split(\":\");\n                    data.push({\n                        id: item[0],\n                        name: item[1]\n                    });\n                });\n                callback(data);\n            },\n            // initialData: init_data.join(','),\n            initialData: init_data,\n            dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n\n        return select_options;\n    },\n\n    makeDatasetPrivate: function() {\n        var self = this;\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=make_private`)\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: false });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"The dataset is now private to you.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to make dataset private.\");\n            });\n    },\n\n    removeDatasetRestrictions: function() {\n        var self = this;\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=remove_restrictions`)\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: true });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Access to this dataset is now unrestricted.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to make dataset unrestricted.\");\n            });\n    },\n\n    _extractIds: function(roles_list) {\n        var ids_list = [];\n        for (var i = roles_list.length - 1; i >= 0; i--) {\n            ids_list.push(roles_list[i].id);\n        }\n        return ids_list;\n    },\n    savePermissions: function(event) {\n        var self = this;\n\n        var access_ids = this._extractIds(this.accessSelectObject.$el.select2(\"data\"));\n        var add_ids = this._extractIds(this.addSelectObject.$el.select2(\"data\"));\n        var manage_ids = this._extractIds(this.manageSelectObject.$el.select2(\"data\"));\n        var modify_ids = this._extractIds(this.modifySelectObject.$el.select2(\"data\"));\n\n        $.post(`${Galaxy.root}api/libraries/${self.id}/permissions?action=set_permissions`, {\n            \"access_ids[]\": access_ids,\n            \"add_ids[]\": add_ids,\n            \"manage_ids[]\": manage_ids,\n            \"modify_ids[]\": modify_ids\n        })\n            .done(fetched_permissions => {\n                //fetch dataset again\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Permissions saved.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to set library permissions.\");\n            });\n    },\n\n    templateLibraryPermissions: function() {\n        return _.template(\n            [\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<a href=\"#\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to the list of Libraries\" class=\"btn btn-default primary-button\" type=\"button\">',\n                '<span class=\"fa fa-list\"/>',\n                \"&nbsp;Libraries\",\n                \"</button>\",\n                \"</a>\",\n                \"</div>\",\n                \"<h1>\",\n                'Library: <%= _.escape(library.get(\"name\")) %>',\n                \"</h1>\",\n                '<div class=\"alert alert-warning\">',\n                \"<% if (is_admin) { %>\",\n                \"You are logged in as an <strong>administrator</strong> therefore you can manage any library on this Galaxy instance. Please make sure you understand the consequences.\",\n                \"<% } else { %>\",\n                \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                \"<% }%>\",\n                \"</div>\",\n                '<div class=\"dataset_table\">',\n                \"<h2>Library permissions</h2>\",\n                \"<h4>Roles that can access the library</h4>\",\n                '<div id=\"access_perm\" class=\"access_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can access this library. If there are no access roles set on the library it is considered <strong>unrestricted</strong>.\",\n                \"</div>\",\n                \"<h4>Roles that can manage permissions on this library</h4>\",\n                '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can manage permissions on this library (includes giving access).\",\n                \"</div>\",\n                \"<h4>Roles that can add items to this library</h4>\",\n                '<div id=\"add_perm\" class=\"add_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can add items to this library (folders and datasets).\",\n                \"</div>\",\n                \"<h4>Roles that can modify this library</h4>\",\n                '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can modify this library (name, synopsis, etc.).\",\n                \"</div>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                '<span class=\"fa fa-floppy-o\"/>',\n                \"&nbsp;Save\",\n                \"</button>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    LibraryView: LibraryView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/library/library-library-view.js","import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_select from \"mvc/ui/ui-select\";\nvar FolderView = Backbone.View.extend({\n    el: \"#center\",\n\n    model: null,\n\n    options: {},\n\n    events: {\n        \"click .toolbtn_save_permissions\": \"savePermissions\"\n    },\n\n    initialize: function(options) {\n        this.options = _.extend(this.options, options);\n        if (this.options.id) {\n            this.fetchFolder();\n        }\n    },\n\n    fetchFolder: function(options) {\n        this.options = _.extend(this.options, options);\n        this.model = new mod_library_model.FolderAsModel({\n            id: this.options.id\n        });\n        var that = this;\n        this.model.fetch({\n            success: function() {\n                if (that.options.show_permissions) {\n                    that.showPermissions();\n                }\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(`${response.responseJSON.err_msg} Click this to go back.`, \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    mod_toastr.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    showPermissions: function(options) {\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n\n        var is_admin = false;\n        if (Galaxy.user) {\n            is_admin = Galaxy.user.isAdmin();\n        }\n        var template = this.templateFolderPermissions();\n        this.$el.html(template({ folder: this.model, is_admin: is_admin }));\n\n        var self = this;\n        $.get(`${Galaxy.root}api/folders/${self.id}/permissions?scope=current`)\n            .done(fetched_permissions => {\n                self.prepareSelectBoxes({\n                    fetched_permissions: fetched_permissions\n                });\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to fetch folder permissions.\");\n            });\n\n        $(\"#center [data-toggle]\").tooltip();\n        //hack to show scrollbars\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    _serializeRoles: function(role_list) {\n        var selected_roles = [];\n        for (var i = 0; i < role_list.length; i++) {\n            selected_roles.push(`${role_list[i][1]}:${role_list[i][0]}`);\n        }\n        return selected_roles;\n    },\n\n    prepareSelectBoxes: function(options) {\n        this.options = _.extend(this.options, options);\n        var fetched_permissions = this.options.fetched_permissions;\n        var self = this;\n\n        var selected_add_item_roles = this._serializeRoles(fetched_permissions.add_library_item_role_list);\n        var selected_manage_folder_roles = this._serializeRoles(fetched_permissions.manage_folder_role_list);\n        var selected_modify_folder_roles = this._serializeRoles(fetched_permissions.modify_folder_role_list);\n\n        self.addSelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"add_perm\", selected_add_item_roles, false)\n        );\n        self.manageSelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"manage_perm\", selected_manage_folder_roles, false)\n        );\n        self.modifySelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"modify_perm\", selected_modify_folder_roles, false)\n        );\n    },\n\n    _createSelectOptions: function(self, id, init_data) {\n        var select_options = {\n            minimumInputLength: 0,\n            css: id,\n            multiple: true,\n            placeholder: \"Click to select a role\",\n            container: self.$el.find(`#${id}`),\n            ajax: {\n                url: `${Galaxy.root}api/folders/${self.id}/permissions?scope=available`,\n                dataType: \"json\",\n                quietMillis: 100,\n                data: function(term, page) {\n                    // page is the one-based page number tracked by Select2\n                    return {\n                        q: term, //search term\n                        page_limit: 10, // page size\n                        page: page // page number\n                    };\n                },\n                results: function(data, page) {\n                    var more = page * 10 < data.total; // whether or not there are more results available\n                    // notice we return the value of more so Select2 knows if more results can be loaded\n                    return { results: data.roles, more: more };\n                }\n            },\n            formatResult: function roleFormatResult(role) {\n                return `${role.name} type: ${role.type}`;\n            },\n\n            formatSelection: function roleFormatSelection(role) {\n                return role.name;\n            },\n            initSelection: function(element, callback) {\n                // the input tag has a value attribute preloaded that points to a preselected role's id\n                // this function resolves that id attribute to an object that select2 can render\n                // using its formatResult renderer - that way the role name is shown preselected\n                var data = [];\n                $(element.val().split(\",\")).each(function() {\n                    var item = this.split(\":\");\n                    data.push({\n                        id: item[0],\n                        name: item[1]\n                    });\n                });\n                callback(data);\n            },\n            initialData: init_data.join(\",\"),\n            dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n\n        return select_options;\n    },\n\n    /**\n     * Extract the role ids from Select2 elements's 'data'\n     */\n    _extractIds: function(roles_list) {\n        var ids_list = [];\n        for (var i = roles_list.length - 1; i >= 0; i--) {\n            ids_list.push(roles_list[i].id);\n        }\n        return ids_list;\n    },\n\n    /**\n     * Save the permissions for roles entered in the select boxes.\n     */\n    savePermissions: function(event) {\n        var self = this;\n        var add_ids = this._extractIds(this.addSelectObject.$el.select2(\"data\"));\n        var manage_ids = this._extractIds(this.manageSelectObject.$el.select2(\"data\"));\n        var modify_ids = this._extractIds(this.modifySelectObject.$el.select2(\"data\"));\n        $.post(`${Galaxy.root}api/folders/${self.id}/permissions?action=set_permissions`, {\n            \"add_ids[]\": add_ids,\n            \"manage_ids[]\": manage_ids,\n            \"modify_ids[]\": modify_ids\n        })\n            .done(fetched_permissions => {\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Permissions saved.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to set folder permissions.\");\n            });\n    },\n\n    templateFolderPermissions: function() {\n        return _.template(\n            [\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<a href=\"#/folders/<%= folder.get(\"parent_id\") %>\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to the parent folder\" class=\"btn btn-default primary-button\" type=\"button\">',\n                '<span class=\"fa fa-caret-left fa-lg\"/>',\n                \"&nbsp;Parent folder\",\n                \"</button>\",\n                \"</a>\",\n                \"</div>\",\n                \"<h1>\",\n                'Folder: <%= _.escape(folder.get(\"name\")) %>',\n                \"</h1>\",\n                '<div class=\"alert alert-warning\">',\n                \"<% if (is_admin) { %>\",\n                \"You are logged in as an <strong>administrator</strong> therefore you can manage any folder on this Galaxy instance. Please make sure you understand the consequences.\",\n                \"<% } else { %>\",\n                \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                \"<% }%>\",\n                \"</div>\",\n                '<div class=\"dataset_table\">',\n                \"<h2>Folder permissions</h2>\",\n                \"<h4>\",\n                \"Roles that can manage permissions on this folder\",\n                \"</h4>\",\n                '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can manage permissions on this folder.\",\n                \"</div>\",\n                \"<h4>\",\n                \"Roles that can add items to this folder\",\n                \"</h4>\",\n                '<div id=\"add_perm\" class=\"add_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can add items to this folder (folders and datasets).\",\n                \"</div>\",\n                \"<h4>\",\n                \"Roles that can modify this folder\",\n                \"</h4>\",\n                '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can modify this folder (name, etc.).\",\n                \"</div>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                '<span class=\"fa fa-floppy-o\"/>',\n                \"&nbsp;Save\",\n                \"</button>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    FolderView: FolderView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/library/library-folder-view.js","//==============================================================================\nvar LOGGING_FNS = [\"log\", \"debug\", \"info\", \"warn\", \"error\", \"metric\"];\n/** adds logging functions to an obj.prototype (or obj directly) adding a namespace for filtering\n *  @param {Object} obj\n *  @param {String} namespace\n */\nfunction addLogging(obj, namespace) {\n    var addTo = obj.prototype !== undefined ? obj.prototype : obj;\n    if (namespace !== undefined) {\n        addTo._logNamespace = namespace;\n    }\n    //yagni?: without this, may not capture Galaxy.config.debug and add Galaxy.logger properly\n    // if( window.Galaxy && window.Galaxy.config && window.Galaxy.config.debug ){\n    //     addTo.logger = window.Galaxy.logger;\n    // }\n\n    // give the object each\n    LOGGING_FNS.forEach(logFn => {\n        addTo[logFn] = function() {\n            if (!this.logger) {\n                return undefined;\n            }\n            if (this.logger.emit) {\n                return this.logger.emit(logFn, this._logNamespace, arguments);\n            }\n            if (this.logger[logFn]) {\n                //TODO:! there has to be a way to get the lineno/file into this\n                // http://stackoverflow.com/questions/13815640/a-proper-wrapper-for-console-log-with-correct-line-number\n                // http://www.paulirish.com/2009/log-a-lightweight-wrapper-for-consolelog/\n                return this.logger[logFn].apply(this.logger, arguments);\n            }\n            return undefined;\n        };\n    });\n    return obj;\n}\n\n//==============================================================================\nexport default addLogging;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/utils/add-logging.js","import * as _ from \"libs/underscore\";\nimport * as Backbone from \"libs/backbone\";\nimport addLogging from \"utils/add-logging\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\n/** @class Mixin to add logging capabilities to an object.\n *      Designed to allow switching an objects log output off/on at one central\n *      statement. Can be used with plain browser console (or something more\n *      complex like an AJAX logger).\n *  <br />NOTE: currently only uses the console.debug log function\n *  (as opposed to debug, error, warn, etc.)\n *  @name LoggableMixin\n *\n *  @example\n *  // Add to your models/views at the definition using chaining:\n *      var MyModel = Backbone.Model.extend( LoggableMixin ).extend({ // ... });\n *\n *  // or - more explicitly AFTER the definition:\n *      var MyModel = Backbone.Model.extend({\n *          logger  : console\n *          // ...\n *          this.log( '$#%& it! - broken already...' );\n *      })\n *      _.extend( MyModel.prototype, LoggableMixin )\n *\n */\nvar LoggableMixin = /** @lends LoggableMixin# */ {\n    // replace null with console (if available) to see all logs for a particular view/model\n    /** The logging object whose log function will be used to output\n     *      messages. Null will supress all logging. Commonly set to console.\n     */\n    logger: null,\n    /** @type {String} a namespace for filtering/focusing log output */\n    _logNamespace: \".\"\n};\naddLogging(LoggableMixin);\n\n//==============================================================================\n/** Backbone model that syncs to the browser's sessionStorage API.\n *      This all largely happens behind the scenes and no special calls are required.\n */\nvar SessionStorageModel = Backbone.Model.extend({\n    initialize: function(initialAttrs) {\n        // check for sessionStorage and error if no id is provided\n        this._checkEnabledSessionStorage();\n        if (!initialAttrs.id) {\n            throw new Error(\"SessionStorageModel requires an id in the initial attributes\");\n        }\n        this.id = initialAttrs.id;\n\n        // load existing from storage (if any), clear any attrs set by bbone before init is called,\n        //  layer initial over existing and defaults, and save\n        var existing = !this.isNew() ? this._read(this) : {};\n        this.clear({ silent: true });\n        this.save(_.extend({}, this.defaults, existing, initialAttrs), {\n            silent: true\n        });\n\n        // save on any change to it immediately\n        this.on(\"change\", function() {\n            this.save();\n        });\n    },\n\n    _checkEnabledSessionStorage: function() {\n        try {\n            return window.sessionStorage.length >= 0;\n        } catch (err) {\n            alert(\"Please enable cookies in your browser for this Galaxy site\");\n            return false;\n        }\n    },\n\n    /** override of bbone sync to save to sessionStorage rather than REST\n     *      bbone options (success, errror, etc.) should still apply\n     */\n    sync: function(method, model, options) {\n        if (!options.silent) {\n            model.trigger(\"request\", model, {}, options);\n        }\n        var returned = {};\n        switch (method) {\n            case \"create\":\n                returned = this._create(model);\n                break;\n            case \"read\":\n                returned = this._read(model);\n                break;\n            case \"update\":\n                returned = this._update(model);\n                break;\n            case \"delete\":\n                returned = this._delete(model);\n                break;\n        }\n        if (returned !== undefined || returned !== null) {\n            if (options.success) {\n                options.success();\n            }\n        } else {\n            if (options.error) {\n                options.error();\n            }\n        }\n        return returned;\n    },\n\n    /** set storage to the stringified item */\n    _create: function(model) {\n        try {\n            var json = model.toJSON();\n            var set = sessionStorage.setItem(model.id, JSON.stringify(json));\n            return set === null ? set : json;\n            // DOMException is thrown in Safari if in private browsing mode and sessionStorage is attempted:\n            // http://stackoverflow.com/questions/14555347\n            // TODO: this could probably use a more general soln - like detecting priv. mode + safari => non-ajaxing Model\n        } catch (err) {\n            if (!(err instanceof DOMException && navigator.userAgent.indexOf(\"Safari\") > -1)) {\n                throw err;\n            }\n        }\n        return null;\n    },\n\n    /** read and parse json from storage */\n    _read: function(model) {\n        return JSON.parse(sessionStorage.getItem(model.id));\n    },\n\n    /** set storage to the item (alias to create) */\n    _update: function(model) {\n        return model._create(model);\n    },\n\n    /** remove the item from storage */\n    _delete: function(model) {\n        return sessionStorage.removeItem(model.id);\n    },\n\n    /** T/F whether sessionStorage contains the model's id (data is present) */\n    isNew: function() {\n        return !sessionStorage.hasOwnProperty(this.id);\n    },\n\n    _log: function() {\n        return JSON.stringify(this.toJSON(), null, \"  \");\n    },\n    toString: function() {\n        return `SessionStorageModel(${this.id})`;\n    }\n});\n(() => {\n    SessionStorageModel.prototype = _.omit(SessionStorageModel.prototype, \"url\", \"urlRoot\");\n})();\n\n//==============================================================================\n/** Function that allows mixing of hashs into bbone MVC while showing the mixins first\n *      (before the more local class overrides/hash).\n *      Basically, a simple reversal of param order on _.defaults() - to show mixins in top of definition.\n *  @example:\n *      var NewModel = Something.extend( mixin( MyMixinA, MyMixinB, { ... myVars : ... }) );\n *\n *  NOTE: this does not combine any hashes (like events, etc.) and you're expected to handle that\n */\nfunction mixin(mixinHash1, /* mixinHash2, etc: ... variadic */ propsHash) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    var lastArg = args.pop();\n    args.unshift(lastArg);\n    return _.defaults.apply(_, args);\n}\n\n//==============================================================================\n/** A mixin for models that allow T/F/Matching to their attributes - useful when\n *      searching or filtering collections of models.\n * @example:\n *      see hda-model for searchAttribute and searchAliases definition examples.\n *      see history-contents.matches for how collections are filtered\n *      and see readonly-history-view.searchHdas for how user input is connected to the filtering\n */\nvar SearchableModelMixin = {\n    /** what attributes of an HDA will be used in a text search */\n    searchAttributes: [\n        // override\n    ],\n\n    /** our attr keys don't often match the labels we display to the user - so, when using\n     *      attribute specifiers ('name=\"bler\"') in a term, allow passing in aliases for the\n     *      following attr keys.\n     */\n    searchAliases: {\n        // override\n    },\n\n    /** search the attribute with key attrKey for the string searchFor; T/F if found */\n    searchAttribute: function(attrKey, searchFor) {\n        var attrVal = this.get(attrKey);\n        //this.debug( 'searchAttribute', attrKey, attrVal, searchFor );\n        // bail if empty searchFor or unsearchable values\n        if (!searchFor || (attrVal === undefined || attrVal === null)) {\n            return false;\n        }\n        // pass to sep. fn for deep search of array attributes\n        if (_.isArray(attrVal)) {\n            return this._searchArrayAttribute(attrVal, searchFor);\n        }\n        return (\n            attrVal\n                .toString()\n                .toLowerCase()\n                .indexOf(searchFor.toLowerCase()) !== -1\n        );\n    },\n\n    /** deep(er) search for array attributes; T/F if found */\n    _searchArrayAttribute: function(array, searchFor) {\n        //this.debug( '_searchArrayAttribute', array, searchFor );\n        searchFor = searchFor.toLowerCase();\n        //precondition: searchFor has already been validated as non-empty string\n        //precondition: assumes only 1 level array\n        //TODO: could possibly break up searchFor more (CSV...)\n        return _.any(\n            array,\n            elem =>\n                elem\n                    .toString()\n                    .toLowerCase()\n                    .indexOf(searchFor.toLowerCase()) !== -1\n        );\n    },\n\n    /** search all searchAttributes for the string searchFor,\n     *      returning a list of keys of attributes that contain searchFor\n     */\n    search: function(searchFor) {\n        var model = this;\n        return _.filter(this.searchAttributes, key => model.searchAttribute(key, searchFor));\n    },\n\n    /** alias of search, but returns a boolean; accepts attribute specifiers where\n     *      the attributes searched can be narrowed to a single attribute using\n     *      the form: matches( 'genome_build=hg19' )\n     *      (the attribute keys allowed can also be aliases to the true attribute key;\n     *          see searchAliases above)\n     *  @param {String} term   plain text or ATTR_SPECIFIER sep. key=val pair\n     *  @returns {Boolean} was term found in (any) attribute(s)\n     */\n    matches: function(term) {\n        var ATTR_SPECIFIER = \"=\";\n        var split = term.split(ATTR_SPECIFIER);\n        // attribute is specified - search only that\n        if (split.length >= 2) {\n            var attrKey = split[0];\n            attrKey = this.searchAliases[attrKey] || attrKey;\n            return this.searchAttribute(attrKey, split[1]);\n        }\n        // no attribute is specified - search all attributes in searchAttributes\n        return !!this.search(term).length;\n    },\n\n    /** an implicit AND search for all terms; IOW, a model must match all terms given\n     *      where terms is a whitespace separated value string.\n     *      e.g. given terms of: 'blah bler database=hg19'\n     *          an HDA would have to have attributes containing blah AND bler AND a genome_build == hg19\n     *      To include whitespace in terms: wrap the term in double quotations (name=\"blah bler\").\n     */\n    matchesAll: function(terms) {\n        var model = this;\n        // break the terms up by whitespace and filter out the empty strings\n        terms = terms.match(/(\".*\"|\\w*=\".*\"|\\S*)/g).filter(s => !!s);\n        return _.all(terms, term => {\n            term = term.replace(/\"/g, \"\");\n            return model.matches(term);\n        });\n    }\n};\n\n//==============================================================================\n/** A view that renders hidden and shows when some activator is clicked.\n *      options:\n *          showFn: the effect used to show/hide the View (defaults to jq.toggle)\n *          $elementShown: some jqObject (defaults to this.$el) to be shown/hidden\n *          onShowFirstTime: fn called the first time the view is shown\n *          onshow: fn called every time the view is shown\n *          onhide: fn called every time the view is hidden\n *      events:\n *          hiddenUntilActivated:shown (the view is passed as an arg)\n *          hiddenUntilActivated:hidden (the view is passed as an arg)\n *      instance vars:\n *          view.hidden {boolean} is the view in the hidden state\n */\nvar HiddenUntilActivatedViewMixin = /** @lends hiddenUntilActivatedMixin# */ {\n    //TODO: since this is a mixin, consider moving toggle, hidden into HUAVOptions\n\n    /** call this in your initialize to set up the mixin\n     *  @param {jQuery} $activator the 'button' that's clicked to show/hide the view\n     *  @param {Object} hash with mixin options\n     */\n    hiddenUntilActivated: function($activator, options) {\n        // call this in your view's initialize fn\n        options = options || {};\n        //TODO: flesh out options - show them all here\n        this.HUAVOptions = {\n            $elementShown: this.$el,\n            showFn: jQuery.prototype.toggle,\n            showSpeed: \"fast\"\n        };\n        _.extend(this.HUAVOptions, options || {});\n        /** has this been shown already (and onshowFirstTime called)? */\n        this.HUAVOptions.hasBeenShown = this.HUAVOptions.$elementShown.is(\":visible\");\n        this.hidden = this.isHidden();\n\n        if ($activator) {\n            var mixin = this;\n            $activator.on(\"click\", ev => {\n                mixin.toggle(mixin.HUAVOptions.showSpeed);\n            });\n        }\n    },\n\n    //TODO:?? remove? use .hidden?\n    /** returns T/F if the view is hidden */\n    isHidden: function() {\n        return this.HUAVOptions.$elementShown.is(\":hidden\");\n    },\n\n    /** toggle the hidden state, show/hide $elementShown, call onshow/hide, trigger events */\n    toggle: function() {\n        //TODO: more specific name - toggle is too general\n        // can be called manually as well with normal toggle arguments\n        //TODO: better as a callback (when the show/hide is actually done)\n        // show\n        if (this.hidden) {\n            // fire the optional fns on the first/each showing - good for render()\n            if (!this.HUAVOptions.hasBeenShown) {\n                if (_.isFunction(this.HUAVOptions.onshowFirstTime)) {\n                    this.HUAVOptions.hasBeenShown = true;\n                    this.HUAVOptions.onshowFirstTime.call(this);\n                }\n            }\n            if (_.isFunction(this.HUAVOptions.onshow)) {\n                this.HUAVOptions.onshow.call(this);\n                this.trigger(\"hiddenUntilActivated:shown\", this);\n            }\n            this.hidden = false;\n\n            // hide\n        } else {\n            if (_.isFunction(this.HUAVOptions.onhide)) {\n                this.HUAVOptions.onhide.call(this);\n                this.trigger(\"hiddenUntilActivated:hidden\", this);\n            }\n            this.hidden = true;\n        }\n        return this.HUAVOptions.showFn.apply(this.HUAVOptions.$elementShown, arguments);\n    }\n};\n\n//==============================================================================\n/** Mixin for views that can be dragged and dropped\n *      Allows for the drag behavior to be turned on/off, setting/removing jQuery event\n *          handlers each time.\n *      dataTransfer data is set to the JSON string of the view's model.toJSON\n *      Override '$dragHandle' to define the draggable DOM sub-element.\n */\nvar DraggableViewMixin = {\n    /** set up instance vars to track whether this view is currently draggable */\n    initialize: function(attributes) {\n        /** is the body of this hda view expanded/not? */\n        this.draggable = attributes.draggable || false;\n    },\n\n    /** what part of the view's DOM triggers the dragging */\n    $dragHandle: function() {\n        //TODO: make abstract/general - move this to listItem\n        // override to the element you want to be your view's handle\n        return this.$(\".title-bar\");\n    },\n\n    /** toggle whether this view is draggable */\n    toggleDraggable: function() {\n        if (this.draggable) {\n            this.draggableOff();\n        } else {\n            this.draggableOn();\n        }\n    },\n\n    /** allow the view to be dragged, set up event handlers */\n    draggableOn: function() {\n        this.draggable = true;\n        this.dragStartHandler = _.bind(this._dragStartHandler, this);\n        this.dragEndHandler = _.bind(this._dragEndHandler, this);\n\n        var handle = this.$dragHandle()\n            .attr(\"draggable\", true)\n            .get(0);\n        handle.addEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.addEventListener(\"dragend\", this.dragEndHandler, false);\n    },\n\n    /** turn of view dragging and remove event listeners */\n    draggableOff: function() {\n        this.draggable = false;\n        var handle = this.$dragHandle()\n            .attr(\"draggable\", false)\n            .get(0);\n        handle.removeEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.removeEventListener(\"dragend\", this.dragEndHandler, false);\n    },\n\n    /** sets the dataTransfer data to the model's toJSON\n     *  @fires draggable:dragstart (bbone event) which is passed the event and this view\n     */\n    _dragStartHandler: function(event) {\n        event.dataTransfer.effectAllowed = \"move\";\n        //ASSUMES: this.model\n        //TODO: all except IE: should be 'application/json', IE: must be 'text'\n        event.dataTransfer.setData(\"text\", JSON.stringify(this.model.toJSON()));\n        this.trigger(\"draggable:dragstart\", event, this);\n        return false;\n    },\n\n    /** handle the dragend\n     *  @fires draggable:dragend (bbone event) which is passed the event and this view\n     */\n    _dragEndHandler: function(event) {\n        this.trigger(\"draggable:dragend\", event, this);\n        return false;\n    }\n};\n\n//==============================================================================\n/** Mixin that allows a view to be selected (gen. from a list).\n *      Selection controls ($selector) may be hidden/shown/toggled.\n *          The bbone event 'selectable' is fired when the controls are shown/hidden (passed T/F).\n *      Default rendering is a font-awesome checkbox.\n *      Default selector is '.selector' within the view's $el.\n *      The bbone events 'selected' and 'de-selected' are fired when the $selector is clicked.\n *          Both events are passed the view and the (jQuery) event.\n */\nvar SelectableViewMixin = {\n    /** Set up instance state vars for whether the selector is shown and whether the view has been selected */\n    initialize: function(attributes) {\n        /** is the view currently in selection mode? */\n        this.selectable = attributes.selectable || false;\n        /** is the view currently selected? */\n        this.selected = attributes.selected || false;\n    },\n\n    /** $el sub-element where the selector is rendered and what can be clicked to select. */\n    $selector: function() {\n        return this.$(\".selector\");\n    },\n\n    /** How the selector is rendered - defaults to font-awesome checkbox */\n    _renderSelected: function() {\n        // override\n        this.$selector()\n            .find(\"span\")\n            .toggleClass(\"fa-check-square-o\", this.selected)\n            .toggleClass(\"fa-square-o\", !this.selected);\n    },\n\n    /** Toggle whether the selector is shown */\n    toggleSelector: function() {\n        //TODO: use this.selectable\n        if (!this.$selector().is(\":visible\")) {\n            this.showSelector();\n        } else {\n            this.hideSelector();\n        }\n    },\n\n    /** Display the selector control.\n     *  @param {Number} a jQuery fx speed\n     *  @fires: selectable which is passed true (IOW, the selector is shown) and the view\n     */\n    showSelector: function(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        // make sure selected state is represented properly\n        this.selectable = true;\n        this.trigger(\"selectable\", true, this);\n        this._renderSelected();\n        if (speed) {\n            this.$selector().show(speed);\n        } else {\n            this.$selector().show();\n        }\n    },\n\n    /** remove the selector control\n     *  @param {Number} a jQuery fx speed\n     *  @fires: selectable which is passed false (IOW, the selector is not shown) and the view\n     */\n    hideSelector: function(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        // reverse the process from showSelect\n        this.selectable = false;\n        this.trigger(\"selectable\", false, this);\n        if (speed) {\n            this.$selector().hide(speed);\n        } else {\n            this.$selector().hide();\n        }\n    },\n\n    /** Toggle whether the view is selected */\n    toggleSelect: function(event) {\n        if (this.selected) {\n            this.deselect(event);\n        } else {\n            this.select(event);\n        }\n    },\n\n    /** Select this view and re-render the selector control to show it\n     *  @param {Event} a jQuery event that caused the selection\n     *  @fires: selected which is passed the view and the DOM event that triggered it (optionally)\n     */\n    select: function(event) {\n        // switch icon, set selected, and trigger event\n        if (!this.selected) {\n            this.trigger(\"selected\", this, event);\n            this.selected = true;\n            this._renderSelected();\n        }\n        return false;\n    },\n\n    /** De-select this view and re-render the selector control to show it\n     *  @param {Event} a jQuery event that caused the selection\n     *  @fires: de-selected which is passed the view and the DOM event that triggered it (optionally)\n     */\n    deselect: function(event) {\n        // switch icon, set selected, and trigger event\n        if (this.selected) {\n            this.trigger(\"de-selected\", this, event);\n            this.selected = false;\n            this._renderSelected();\n        }\n        return false;\n    }\n};\n\n//==============================================================================\n/** Return an underscore template fn from an array of strings.\n *  @param {String[]} template      the template strings to compile into the underscore template fn\n *  @param {String} jsonNamespace   an optional namespace for the json data passed in (defaults to 'model')\n *  @returns {Function} the (wrapped) underscore template fn\n *      The function accepts:\n *\n *  The template strings can access:\n *      the json/model hash using model (\"<%- model.myAttr %>) using the jsonNamespace above\n *      _l: the localizer function\n *      view (if passed): ostensibly, the view using the template (handy for view instance vars)\n *      Because they're namespaced, undefined attributes will not throw an error.\n *\n *  @example:\n *      templateBler : BASE_MVC.wrapTemplate([\n *          '<div class=\"myclass <%- mynamespace.modelClass %>\">',\n *              '<span><% print( _l( mynamespace.message ) ); %>:<%= view.status %></span>'\n *          '</div>'\n *      ], 'mynamespace' )\n *\n *  Meant to be called in a View's definition in order to compile only once.\n *\n */\nfunction wrapTemplate(template, jsonNamespace) {\n    jsonNamespace = jsonNamespace || \"model\";\n    var templateFn = _.template(template.join(\"\"));\n    return (json, view) => {\n        var templateVars = { view: view || {}, _l: _l };\n        templateVars[jsonNamespace] = json || {};\n        return templateFn(templateVars);\n    };\n}\n\n//==============================================================================\n/** Return a comparator function for sorted Collections */\nfunction buildComparator(attribute_name, options) {\n    options = options || {};\n    var ascending = options.ascending ? 1 : -1;\n    return function __comparator(a, b) {\n        a = a.get(attribute_name);\n        b = b.get(attribute_name);\n        return (a < b ? -1 : a > b ? 1 : 0) * ascending;\n    };\n}\n\n//==============================================================================\nexport default {\n    LoggableMixin: LoggableMixin,\n    SessionStorageModel: SessionStorageModel,\n    mixin: mixin,\n    SearchableModelMixin: SearchableModelMixin,\n    HiddenUntilActivatedViewMixin: HiddenUntilActivatedViewMixin,\n    DraggableViewMixin: DraggableViewMixin,\n    SelectableViewMixin: SelectableViewMixin,\n    wrapTemplate: wrapTemplate,\n    buildComparator: buildComparator\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/base-mvc.js"],"sourceRoot":""}