"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(exports,"__esModule",{value:!0});var _utils=require("utils/utils"),_utils2=_interopRequireDefault(_utils),_uiModal=require("mvc/ui/ui-modal"),_uiModal2=_interopRequireDefault(_uiModal),_uiTabs=require("mvc/ui/ui-tabs"),_uiTabs2=_interopRequireDefault(_uiTabs),_uploadButton=require("mvc/upload/upload-button"),_uploadButton2=_interopRequireDefault(_uploadButton),_defaultView=require("mvc/upload/default/default-view"),_defaultView2=_interopRequireDefault(_defaultView),_compositeView=require("mvc/upload/composite/composite-view"),_compositeView2=_interopRequireDefault(_compositeView),_collectionView=require("mvc/upload/collection/collection-view"),_collectionView2=_interopRequireDefault(_collectionView);exports.default=Backbone.View.extend({options:{nginx_upload_path:"",ftp_upload_site:"n/a",default_genome:"?",default_extension:"auto",height:500,width:900,auto:{id:"auto",text:"Auto-detect",description:"This system will try to detect the file type automatically. If your file is not detected properly as one of the known formats, it most likely means that it has some format problems (e.g., different number of columns on different rows). You can still coerce the system to set your data to the format you think it should be.  You can also upload compressed files, which will automatically be decompressed."}},list_extensions:[],list_genomes:[],initialize:function(e){t=this;this.options=_utils2.default.merge(e,this.options),this.ui_button=new _uploadButton2.default.View({onclick:function(e){e.preventDefault(),t.show()},onunload:function(){var e=t.ui_button.model.get("percentage",0);if(e>0&&e<100)return"Several uploads are queued."}}),this.setElement(this.ui_button.$el);var t=this;_utils2.default.get({url:Galaxy.root+"api/datatypes?extension_only=False",success:function(e){for(var i in e)t.list_extensions.push({id:e[i].extension,text:e[i].extension,description:e[i].description,description_url:e[i].description_url,composite_files:e[i].composite_files});t.list_extensions.sort(function(e,t){var i=e.text&&e.text.toLowerCase(),o=t.text&&t.text.toLowerCase();return i>o?1:i<o?-1:0}),t.options.datatypes_disable_auto||t.list_extensions.unshift(t.options.auto)}}),_utils2.default.get({url:Galaxy.root+"api/genomes",success:function(e){for(var i in e)t.list_genomes.push({id:e[i][1],text:e[i][0]});t.list_genomes.sort(function(e,i){return e.id==t.options.default_genome?-1:i.id==t.options.default_genome?1:e.text>i.text?1:e.text<i.text?-1:0})}})},show:function(){var e=this;Galaxy.currHistoryPanel&&Galaxy.currHistoryPanel.model?(this.current_user=Galaxy.user.id,this.modal||(this.tabs=new _uiTabs2.default.View,this.default_view=new _defaultView2.default(this),this.tabs.add({id:"regular",title:"Regular",$el:this.default_view.$el}),this.composite_view=new _compositeView2.default(this),this.tabs.add({id:"composite",title:"Composite",$el:this.composite_view.$el}),this.collection_view=new _collectionView2.default(this),this.tabs.add({id:"collection",title:"Collection",$el:this.collection_view.$el}),this.modal=new _uiModal2.default.View({title:"Download from web or upload from disk",body:this.tabs.$el,height:this.options.height,width:this.options.width,closing_events:!0,title_separator:!1})),this.modal.show()):window.setTimeout(function(){e.show()},500)},currentHistory:function(){return this.current_user&&Galaxy.currHistoryPanel.model.get("id")},currentFtp:function(){return this.current_user&&this.options.ftp_upload_site},toData:function(e,t){var i={payload:{tool_id:"upload1",history_id:t||this.currentHistory(),inputs:{}},files:[],error_message:null};if(e&&e.length>0){var o={file_count:e.length,dbkey:e[0].get("genome","?"),file_type:e[0].get("extension","auto")};for(var s in e){var l=e[s];if(l.set("status","running"),!(l.get("file_size")>0)){i.error_message="Upload content incomplete.",l.set("status","error"),l.set("info",i.error_message);break}var a="files_"+s+"|";switch(o[a+"type"]="upload_dataset",o[a+"space_to_tab"]=l.get("space_to_tab")&&"Yes"||null,o[a+"to_posix_lines"]=l.get("to_posix_lines")&&"Yes"||null,o[a+"dbkey"]=l.get("genome",null),o[a+"file_type"]=l.get("extension",null),l.get("file_mode")){case"new":o[a+"url_paste"]=l.get("url_paste");break;case"ftp":o[a+"ftp_files"]=l.get("file_path");break;case"local":i.files.push({name:a+"file_data",file:l.get("file_data")})}}i.payload.inputs=JSON.stringify(o)}return i}});
//# sourceMappingURL=../../../maps/mvc/upload/upload-view.js.map
