"use strict";define(["mvc/base-mvc","utils/localization"],function(t,e){return{TagsEditor:Backbone.View.extend(t.LoggableMixin).extend(t.HiddenUntilActivatedViewMixin).extend({tagName:"div",className:"tags-display",initialize:function(t){!1===t.usePrompt?this.label="":this.label='<label class="prompt">'+e("Tags")+"</label>",this.hiddenUntilActivated(t.$activator,t)},render:function(){var t=this;return this.$el.html(this._template()),this.$input().select2({placeholder:"Add tags",width:"100%",tags:function(){return t._getTagsUsed()}}),this._setUpBehaviors(),this},_hashToName:function(t){return t.startsWith("#")?"name:"+t.slice(1):t},_nameToHash:function(t){return t.startsWith("name:")&&(t="#"+t.slice(5)),t},_template:function(){return[this.label,'<input class="tags-input" value="',this.tagsToCSV(),'" />'].join("")},tagsToCSV:function(){var t=this,e=this.model.get("tags");return!_.isArray(e)||_.isEmpty(e)?"":e.map(function(e){return _.escape(t._nameToHash(e))}).sort().join(",")},$input:function(){return this.$el.find("input.tags-input")},_getTagsUsed:function(){var t=this;return _.map(Galaxy.user.get("tags_used"),t._nameToHash)},_setUpBehaviors:function(){var t=this;this.$input().on("change",function(e){e.val=_.map(e.val,t._hashToName),t.model.save({tags:e.val}),e.added&&t._addNewTagToTagsUsed(e.added.text+"")})},_addNewTagToTagsUsed:function(t){var e=Galaxy.user.get("tags_used");_.contains(e,t)||(e.push(t),e.sort(),Galaxy.user.set("tags_used",e))},remove:function(){this.$input.off(),this.stopListening(this.model),Backbone.View.prototype.remove.call(this)},toString:function(){return["TagsEditor(",this.model+"",")"].join("")}})}});
//# sourceMappingURL=../../maps/mvc/tag.js.map
