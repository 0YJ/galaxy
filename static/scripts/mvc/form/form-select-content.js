define(["utils/utils","mvc/ui/ui-misc"],function(a,b){var c={data:[{name:"single",src:"hda",icon:"fa-file-o",tooltip:"Single dataset",batchmode:!1,multiple:!1},{name:"multiple",src:"hda",icon:"fa-files-o",tooltip:"Multiple datasets",batchmode:!0,multiple:!0},{name:"collection",src:"hdca",icon:"fa-folder-o",tooltip:"Dataset collection",batchmode:!0,multiple:!1}],data_collection:[{name:"collection",src:"hdca",icon:"fa-folder-o",tooltip:"Dataset collection",batchmode:!1,multiple:!1}],data_multiple:[{name:"multiple",src:"hda",icon:"fa-files-o",tooltip:"Multiple datasets",batchmode:!1,multiple:!0},{name:"collection",src:"hdca",icon:"fa-folder-o",tooltip:"Dataset collection",batchmode:!1,multiple:!1}]},d=Backbone.View.extend({initialize:function(a){var b=this;this.model=a&&a.model||new Backbone.Model(a),this.setElement($("<div/>").addClass("ui-select-content")),this.$batch=$("<div/>").addClass("ui-form-info").append($("<i/>").addClass("fa fa-sitemap")).append($("<span/>").html("This is a batch mode input field. A separate job will be triggered for each dataset.")),this.history={},this.listenTo(this.model,"change",this.render,this),this.listenTo(this.model,"change:type",this._changeType,this),this.listenTo(this.model,"change:value",this._changeValue,this),this.listenTo(this.model,"change:data",this._changeData,this),this.listenTo(this.model,"change:wait",this._changeWait,this),this.render(),void 0!==this.model.get("value")&&this.model.trigger("change:value"),this.model.trigger("change:type"),this.model.trigger("change:data"),this.on("change",function(){a.onchange&&a.onchange(b.value())})},render:function(){var a=this;_.each(this.fields,function(b,c){a.model.get("current")==c?(b.$el.show(),a.$batch[a.config[c].batchmode&&"show"||"hide"](),a.button_type.value(c)):b.$el.hide()})},wait:function(){this.model.set("wait",!0)},unwait:function(){this.model.set("wait",!1)},update:function(a){this.model.set("data",a)},value:function(a){return void 0!==a&&this.model.set("value",a),this.model.get("outgoing")},_changeType:function(){var d=this;this.model.set("current",0);var e=this.model.get("type")+(this.model.get("multiple")?"multiple":"");c[e]?this.config=c[e]:Galaxy.emit.error("tools-select-content::_changeType()","Invalid configuration/type id '"+e+"'.");var f=a.textify(this.model.get("extensions")),g=f?"No "+f+" dataset available.":"No dataset available.",h=f?"No "+f+" dataset collection available.":"No dataset collection available.";this.fields=[],this.button_data=[],_.each(this.config,function(a,c){d.button_data.push({value:c,icon:a.icon,tooltip:a.label}),d.fields.push(new b.Select.View({optional:d.model.get("optional"),multiple:a.multiple,searchable:!a.multiple,error_text:"hda"===a.type?g:h,onchange:function(){d.trigger("change")}}))}),this.button_type=new b.RadioButton.View({value:this.model.get("current"),data:this.button_data,onchange:function(a){d.model.set("current",a),d.trigger("change")}}),this.$el.empty();var i=0;this.fields.length>1&&(this.$el.append(this.button_type.$el),i=Math.max(0,35*this.fields.length)+"px"),_.each(this.fields,function(a){d.$el.append(a.$el.css({"margin-left":i}))}),this.$el.append(this.$batch.css({"margin-left":i}))},_changeWait:function(){var a=this;_.each(this.fields,function(b){b[a.model.get("wait")?"wait":"unwait"]()})},_changeData:function(){var a=this.model.get("data"),b=this,c={};_.each(a,function(a,d){c[d]=[],_.each(a,function(a){c[a.src].push({hid:a.hid,label:a.hid+": "+a.name,value:a.id}),b.history[a.id+"_"+a.src]=a})}),_.each(this.config,function(a,d){b.fields[d].add(c[a.src],function(a,b){return b.hid-a.hid})})},_changeValue:function(){var a=this;this.model.set("outgoing",null);var b=this.model.get("value");if(b&&b.values&&b.values.length>0){var c=[];_.each(b.values,function(a){c.push(a.id)});for(var d=b.values[0].src,e=b.values.length>1,f=-1,g=0;g<this.config.length;g++){var h=a.fields[g],i=a.config[g];-1===f&&i.src==d&&-1!==[e,!0].indexOf(i.multiple)&&(a.model.set("current",f=g),h.value(c))}}else _each(this.fields,function(a){a.value(null)});var f=this.model.get("current");if(this.config[f]){var j=this.fields[f].value();if(null!==j&&(j=$.isArray(j)?j:[j],j.length>0)){var k={batch:this._batch(),values:[]};for(var g in j){var l=this.history[j[g]+"_"+this.config[f].src];if(!l)return void this.model.set("outgoing",null);k.values.push(l)}this.model.set("outgoing",k.values.sort(function(a,b){return a.hid-b.hid}))}}else Galaxy.emit.debug("tools-select-content::_changeValue()","Invalid value/source '"+b+"'.")},_batch:function(){if("collection"==this.current){var a=this.history[this._select().value()+"_hdca"];if(a&&a.map_over_type)return!0}return"single"!=this.current&&"single"==this.mode?!0:!1}});return{View:d}});
//# sourceMappingURL=../../../maps/mvc/form/form-select-content.js.map