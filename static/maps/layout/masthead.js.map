{"version":3,"sources":["layout/masthead.js"],"names":["define","Utils","Menu","Scratchbook","QuotaMeter","View","Backbone","extend","initialize","options","self","this","setElement","_template","$navbarBrandLink","$","$navbarBrandImage","$navbarBrandTitle","$navbarTabs","$quoteMeter","collection","Collection","on","model","append","Tab","render","$el","empty","callback","each","m","fetch","Galaxy","frame","quotaMeter","UserQuotaMeter","user","el","window","e","$download_link","target","closest","length","attr","hide","preventDefault","text","q","get","html","brand","logo_url","logo_src"],"mappings":"AAAAA,QACI,cACA,cACA,qBACA,4BACD,SAAUC,EAAOC,EAAMC,EAAaC,GAkFvC,OACIC,KAhFOC,SAASD,KAAKE,QACrBC,WAAa,SAAUC,GACnB,GAAIC,GAAOC,IACXA,MAAKF,QAAUA,EACfE,KAAKC,WAAYD,KAAKE,aACtBF,KAAKG,iBAAqBH,KAAKI,EAAG,sBAClCJ,KAAKK,kBAAqBL,KAAKI,EAAG,uBAClCJ,KAAKM,kBAAqBN,KAAKI,EAAG,uBAClCJ,KAAKO,YAAqBP,KAAKI,EAAG,gBAClCJ,KAAKQ,YAAqBR,KAAKI,EAAG,0BAGlCJ,KAAKS,WAAa,GAAIlB,GAAKmB,WAC3BV,KAAKS,WAAWE,GAAI,MAAO,SAAUC,GACjCb,EAAKQ,YAAYM,OAAQ,GAAItB,GAAKuB,KAAOF,MAAQA,IAAUG,SAASC,OACrEL,GAAI,QAAS,WACZZ,EAAKQ,YAAYU,UAClBN,GAAI,WAAY,SAAUO,GACzBnB,EAAKU,WAAWU,KAAM,SAAWC,GAAMF,EAAUE,OAClDC,MAAOrB,KAAKF,SAGfwB,OAAOC,MAAQvB,KAAKuB,MAAQ,GAAI/B,IAAeiB,WAAYT,KAAKS,aAIhEa,OAAOE,WAAaxB,KAAKwB,WAAa,GAAI/B,GAAWgC,gBACjDb,MAAUU,OAAOI,KACjBC,GAAU3B,KAAKQ,cAInBJ,EAAGwB,QAASjB,GAAI,QAAS,SAAUkB,GAC/B,GAAIC,GAAiB1B,EAAGyB,EAAEE,QAASC,QAAS,cACd,IAAzBF,EAAeG,SAC0B,IAAtC7B,EAAG,uBAAwB6B,QAC3B7B,EAAG,QAASS,OAAQT,EAAG,aAAc8B,KAAM,KAAM,YAAaC,QAElE/B,EAAG,uBAAwB8B,KAAM,MAAOJ,EAAeI,KAAM,SAC7DL,EAAEO,oBAEPzB,GAAI,eAAgB,WACnB,GAAI0B,GAAO,EAKX,IAJAtC,EAAKU,WAAWU,KAAM,SAAUP,GAC5B,GAAI0B,GAAI1B,EAAM2B,IAAK,mBAAsB3B,EAAM2B,IAAK,mBACpDD,KAAOD,GAAQC,EAAI,OAET,KAATD,EACD,MAAOA,MAKnBtB,OAAQ,WAKJ,MAJAf,MAAKM,kBAAkBkC,KAAM,WAAcxC,KAAKF,QAAQ2C,OAAS,KAAOzC,KAAKF,QAAQ2C,OAAS,KAC9FzC,KAAKG,iBAAiB+B,KAAM,OAAQlC,KAAKF,QAAQ4C,UACjD1C,KAAKK,kBAAkB6B,KAAM,MAAOlC,KAAKF,QAAQ6C,UACjD3C,KAAKwB,WAAWT,SACTf,MAIXE,UAAW,WACP,MAAQ","file":"../../scripts/layout/masthead.js","sourcesContent":["define([\n    'utils/utils',\n    'layout/menu',\n    'layout/scratchbook',\n    'mvc/user/user-quotameter',\n], function( Utils, Menu, Scratchbook, QuotaMeter ) {\n\n/** Masthead **/\nvar View = Backbone.View.extend({\n    initialize : function( options ) {\n        var self = this;\n        this.options = options;\n        this.setElement( this._template() );\n        this.$navbarBrandLink   = this.$( '.navbar-brand-link' );\n        this.$navbarBrandImage  = this.$( '.navbar-brand-image' );\n        this.$navbarBrandTitle  = this.$( '.navbar-brand-title' );\n        this.$navbarTabs        = this.$( '.navbar-tabs' );\n        this.$quoteMeter        = this.$( '.quota-meter-container' );\n\n        // build tabs\n        this.collection = new Menu.Collection();\n        this.collection.on( 'add', function( model ) {\n            self.$navbarTabs.append( new Menu.Tab( { model : model } ).render().$el );\n        }).on( 'reset', function() {\n            self.$navbarTabs.empty();\n        }).on( 'dispatch', function( callback ) {\n            self.collection.each( function ( m ) { callback( m ) });\n        }).fetch( this.options );\n\n        // scratchbook\n        Galaxy.frame = this.frame = new Scratchbook( { collection: this.collection } );\n\n        // set up the quota meter (And fetch the current user data from trans)\n        // add quota meter to masthead\n        Galaxy.quotaMeter = this.quotaMeter = new QuotaMeter.UserQuotaMeter({\n            model   : Galaxy.user,\n            el      : this.$quoteMeter\n        });\n\n        // loop through beforeunload functions if the user attempts to unload the page\n        $( window ).on( 'click', function( e ) {\n            var $download_link = $( e.target ).closest( 'a[download]' );\n            if ( $download_link.length == 1 ) {\n                if( $( 'iframe[id=download]' ).length === 0 ) {\n                    $( 'body' ).append( $( '<iframe/>' ).attr( 'id', 'download' ).hide() );\n                }\n                $( 'iframe[id=download]' ).attr( 'src', $download_link.attr( 'href' ) );\n                e.preventDefault();\n            }\n        }).on( 'beforeunload', function() {\n            var text = '';\n            self.collection.each( function( model ) {\n                var q = model.get( 'onbeforeunload' ) && model.get( 'onbeforeunload' )();\n                q && ( text += q + ' ' );\n            });\n            if ( text !== '' ) {\n                return text;\n            }\n        });\n    },\n\n    render: function() {\n        this.$navbarBrandTitle.html( 'Galaxy ' + ( this.options.brand && '/ ' + this.options.brand || '' ) );\n        this.$navbarBrandLink.attr( 'href', this.options.logo_url );\n        this.$navbarBrandImage.attr( 'src', this.options.logo_src );\n        this.quotaMeter.render();\n        return this;\n    },\n\n    /** body template */\n    _template: function() {\n        return  '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n                    '<div class=\"navbar-header\">' +\n                        '<div class=\"navbar-tabs\"/>' +\n                    '</div>' +\n                    '<div class=\"navbar-brand\">' +\n                        '<a class=\"navbar-brand-link\">' +\n                            '<img class=\"navbar-brand-image\"/>' +\n                            '<span class=\"navbar-brand-title\"/>' +\n                        '</a>' +\n                    '</div>' +\n                    '<div class=\"quota-meter-container\"/>' +\n                    '<div class=\"navbar-icons\"/>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View: View\n};\n\n});\n"]}