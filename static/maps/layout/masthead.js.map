{"version":3,"sources":["layout/masthead.js"],"names":["define","Utils","self","QuotaMeter","View","Backbone","setElement","extend","initialize","$navbarBrandLink","$navbarBrandImage","this","$navbarBrandTitle","$navbarTabs","_template","$quoteMeter","$","collection","Menu","empty","Collection","model","callback","append","Tab","render","$el","on","frame","each","m","Galaxy","Scratchbook","UserQuotaMeter","user","e","preventDefault","window","q","text","$download_link","target","closest","length","attr","hide","get","html","options","brand","logo_url","logo_src","quotaMeter"],"mappings":"kCAAAA,QAEQ,cAFRA,cAQQ,qBACA,4BAEQ,SAAAC,EAAIC,EAAAA,EAAJC,GA0GR,OACIC,KAzGIC,SAAKC,KAAWC,QAChBC,WAAKC,SAAAA,GACL,IAAAP,EAAKQ,KACLC,KAAKC,QAAAA,EACLD,KAAKE,WAALF,KAAmBG,aACnBH,KAAKI,iBAAmBC,KAAEA,EAAA,sBAH1BL,KAAKD,kBAAoBC,KAAKK,EAAE,uBAKhCL,KAAAC,kBAAAD,KAAAK,EAAA,uBACAL,KAAKM,YAAaN,KAAIO,EAAAA,gBACtBP,KAAKM,YACGN,KADRK,EACe,0BAMPd,KAAAA,WAAKW,IAAYM,EAAjBC,WACHT,KARLM,WAUQf,GAAAA,MAAKe,SAALI,GACIC,EAAAA,YAAAC,OADJ,IAAAL,EAAAM,KAAAH,MAAAA,IAAAI,SAAAC,OAMRC,GAAA,QAAA,WACOC,EAAPf,YAAeM,UAAfQ,GAAA,WAAA,SAAAL,GAPQpB,EAAKe,WAAWY,KAAK,SAASC,GAWtCR,EAAAQ,OAIQT,MAAOU,KAAAA,SARfA,OAAOH,MAAQjB,KAAKiB,MAAQ,IAAII,GAahCf,WAAAN,KAAAM,aAMgBD,OAAAA,WAAAL,KAAUY,WACJ,IAAFpB,EAAA8B,gBAKRjB,MAAEe,OAAAG,KAIFC,GAAEC,KAAAA,cAMFpB,EAAAqB,QAGAC,GAAAA,QAAMC,SAAYJ,GAJtB,IAAAK,EAAAxB,EAAAmB,EAAAM,QAAAC,QAAA,eAMiB,GAAbH,EAAaI,SACb,IAAOJ,EAAAA,uBAAPI,QACH3B,EAAA,QAAAO,OA5BTP,EAAA,aA5CwB4B,KAAA,KAAA,YAoDCC,QA8BpBpC,EAAAA,uBAA8BmC,KAC9BlC,MACWe,EAAhBmB,KAAA,SApFwBT,EAAAC,oBAyF5BtB,GAAW,eAAA,WAEH,IAAAyB,EAAA,GApGpB,GAkHarC,EAAAe,WAAAY,KAAA,SAAAR,GAzGL,IAAAiB,EAkEwBjB,EAAMyB,IAAI,mBA0C3BzB,EAAAyB,IAAA,iBAAAzB,GACGjB,IAAAA,GAAAA,EAAAA,OAtHlB,KAAAmC,EAgF4B,OAAOA,KAKvBd,OAAQ,WASJ,OARAd,KAAKC,kBAAkBmC,KACnB,WACMpC,KAAKqC,QAAQC,OAAS,KAAOtC,KAAKqC,QAAQC,OACxC,KAEZtC,KAAKF,iBAAiBmC,KAAK,OAAQjC,KAAKqC,QAAQE,UAChDvC,KAAKD,kBAAkBkC,KAAK,MAAOjC,KAAKqC,QAAQG,UAChDxC,KAAKyC,WAAW3B,SACTd,MAIXG,UAAW,WACP,MACI","file":"../../scripts/layout/masthead.js","sourcesContent":["define(\n    [\n        \"utils/utils\",\n        \"layout/menu\",\n        \"layout/scratchbook\",\n        \"mvc/user/user-quotameter\"\n    ],\n    function(Utils, Menu, Scratchbook, QuotaMeter) {\n        /** Masthead **/\n        var View = Backbone.View.extend({\n            initialize: function(options) {\n                var self = this;\n                this.options = options;\n                this.setElement(this._template());\n                this.$navbarBrandLink = this.$(\".navbar-brand-link\");\n                this.$navbarBrandImage = this.$(\".navbar-brand-image\");\n                this.$navbarBrandTitle = this.$(\".navbar-brand-title\");\n                this.$navbarTabs = this.$(\".navbar-tabs\");\n                this.$quoteMeter = this.$(\".quota-meter-container\");\n\n                // build tabs\n                this.collection = new Menu.Collection();\n                this.collection\n                    .on(\"add\", function(model) {\n                        self.$navbarTabs.append(\n                            new Menu.Tab({ model: model }).render().$el\n                        );\n                    })\n                    .on(\"reset\", function() {\n                        self.$navbarTabs.empty();\n                    })\n                    .on(\"dispatch\", function(callback) {\n                        self.collection.each(function(m) {\n                            callback(m);\n                        });\n                    })\n                    .fetch(this.options);\n\n                // scratchbook\n                Galaxy.frame = this.frame = new Scratchbook({\n                    collection: this.collection\n                });\n\n                // set up the quota meter (And fetch the current user data from trans)\n                // add quota meter to masthead\n                Galaxy.quotaMeter = this.quotaMeter = new QuotaMeter.UserQuotaMeter(\n                    {\n                        model: Galaxy.user,\n                        el: this.$quoteMeter\n                    }\n                );\n\n                // loop through beforeunload functions if the user attempts to unload the page\n                $(window)\n                    .on(\"click\", function(e) {\n                        var $download_link = $(e.target).closest(\"a[download]\");\n                        if ($download_link.length == 1) {\n                            if ($(\"iframe[id=download]\").length === 0) {\n                                $(\"body\").append(\n                                    $(\"<iframe/>\")\n                                        .attr(\"id\", \"download\")\n                                        .hide()\n                                );\n                            }\n                            $(\"iframe[id=download]\").attr(\n                                \"src\",\n                                $download_link.attr(\"href\")\n                            );\n                            e.preventDefault();\n                        }\n                    })\n                    .on(\"beforeunload\", function() {\n                        var text = \"\";\n                        self.collection.each(function(model) {\n                            var q =\n                                model.get(\"onbeforeunload\") &&\n                                model.get(\"onbeforeunload\")();\n                            q && (text += q + \" \");\n                        });\n                        if (text !== \"\") {\n                            return text;\n                        }\n                    });\n            },\n\n            render: function() {\n                this.$navbarBrandTitle.html(\n                    \"Galaxy \" +\n                        ((this.options.brand && \"/ \" + this.options.brand) ||\n                            \"\")\n                );\n                this.$navbarBrandLink.attr(\"href\", this.options.logo_url);\n                this.$navbarBrandImage.attr(\"src\", this.options.logo_src);\n                this.quotaMeter.render();\n                return this;\n            },\n\n            /** body template */\n            _template: function() {\n                return (\n                    '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n                    '<div class=\"navbar-header\">' +\n                    '<div class=\"navbar-tabs\"/>' +\n                    \"</div>\" +\n                    '<div class=\"navbar-brand\">' +\n                    '<a class=\"navbar-brand-link\">' +\n                    '<img class=\"navbar-brand-image\"/>' +\n                    '<span class=\"navbar-brand-title\"/>' +\n                    \"</a>\" +\n                    \"</div>\" +\n                    '<div class=\"quota-meter-container\"/>' +\n                    '<div class=\"navbar-icons\"/>' +\n                    \"</div>\"\n                );\n            }\n        });\n\n        return {\n            View: View\n        };\n    }\n);\n"]}