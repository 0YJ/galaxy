{"version":3,"sources":["layout/masthead.js"],"names":["define","View","Backbone","QuotaMeter","options","extend","initialize","setElement","self","$navbarBrandLink","this","$navbarBrandImage","$navbarBrandTitle","$","$navbarTabs","$quoteMeter","Menu","Collection","collection","empty","model","append","callback","render","$el","m","on","fetch","Galaxy","frame","Scratchbook","user","UserQuotaMeter","el","window","$download_link","target","length","closest","attr","hide","e","preventDefault","get","q","text","logo_url","brand","logo_src","quotaMeter","_template"],"mappings":"YAAAA,SACI,cADJA,cAGI,qBAIJ,4BACA,SAAIC,EAAOC,EAASD,EAAYE,GA+EhC,OACIF,KA7EIC,SAAKE,KAALC,QACAC,WAAKC,SAALH,GACA,GAAAI,GAAKC,IACLC,MAAAN,QAAKO,EACLD,KAAAH,WAAKK,KAAAA,aACLF,KAAAD,iBAA0BC,KAAQG,EAAA,sBAClCH,KAAAC,kBAA0BD,KAAQG,EAAA,uBAFlCH,KAAKE,kBAAqBF,KAAKG,EAAG,uBAIlCH,KAAAI,YAAAJ,KAAAG,EAAA,gBACAH,KAAAK,YAAsBC,KAAKC,EAAAA,0BAG1BP,KAFDQ,WAAA,GAEgBF,GAAAC,WACZT,KAAAA,WAAKM,GAAAA,MAAYK,SAAjBC,GACHZ,EAJDM,YAAAO,OAImB,GAAUC,GAAAA,KAAWF,MAAAA,IAAAG,SAAAC,OACpChB,GAAAA,QAAKU,WAAkCI,EAAAA,YAAUG,UAAKC,GAAA,WAAtD,SAAAJ,GACHd,EAAEmB,WAAYvB,KANf,SAAAqB,GAAAH,EAAAG,OAMGE,MAAOjB,KAAKN,SAGfwB,OAAOC,MAAQnB,KAAKmB,MAAQ,GAAIC,IAAeZ,WAAYR,KAAKQ,aAK5DE,OAAAA,WAAUQ,KAAOG,WAD+C,GAAA5B,GAAA6B,gBAEhEC,MAAUL,OAAKb,KAFiDkB,GAApEvB,KAAAK,cAOIF,EAAAqB,QAAIC,GAAAA,QAAAA,SAAsBC,GAC1B,GAAAD,GAAKA,EAAeE,EAAAA,QAApBC,QAAkC,cACvB,IAAPH,EAAOE,SACkCE,IAArC1B,EAAAA,uBAAuBwB,QAC1BxB,EAAA,QAAAQ,OAAAR,EAAA,aAAA0B,KAAA,KAAA,YAAAC,QAEDC,EAAAA,uBAAAF,KAAA,MAAAJ,EAAAI,KAAA,SACHE,EAAAC,oBAEDhB,GAAA,eAAA,WACAlB,GAAAA,GAAKU,EAKD,IAJAV,EAAAU,WAAQE,KAAMuB,SAAKvB,GACnBwB,GAAAA,GAAAA,EAAOC,IAAQD,mBAAfxB,EAAAuB,IAAA,mBACHC,KAHDC,GAAAD,EAAA,OAKI,KAAAC,EACH,MAAAA,MAKLtB,OAAA,WAKH,MAJGb,MAAAE,kBAAKH,KAAiB8B,WAAc7B,KAAKN,QAAQ0C,OAAjD,KAAApC,KAAAN,QAAA2C,OAAA,KACArC,KAAAD,iBAAKE,KAAkB4B,OAAM7B,KAAON,QAAKA,UACzCM,KAAAC,kBAAgBY,KAAhB,MAAAb,KAAAN,QAAA4C,UACAtC,KAAAuC,WAAA1B,SA1DwBb,MA+DxBwC,UAAA,WAaH,MAAA","file":"../../scripts/layout/masthead.js","sourcesContent":["define([\n    'utils/utils',\n    'layout/menu',\n    'layout/scratchbook',\n    'mvc/user/user-quotameter',\n], function( Utils, Menu, Scratchbook, QuotaMeter ) {\n\n/** Masthead **/\nvar View = Backbone.View.extend({\n    initialize : function( options ) {\n        var self = this;\n        this.options = options;\n        this.setElement( this._template() );\n        this.$navbarBrandLink   = this.$( '.navbar-brand-link' );\n        this.$navbarBrandImage  = this.$( '.navbar-brand-image' );\n        this.$navbarBrandTitle  = this.$( '.navbar-brand-title' );\n        this.$navbarTabs        = this.$( '.navbar-tabs' );\n        this.$quoteMeter        = this.$( '.quota-meter-container' );\n\n        // build tabs\n        this.collection = new Menu.Collection();\n        this.collection.on( 'add', function( model ) {\n            self.$navbarTabs.append( new Menu.Tab( { model : model } ).render().$el );\n        }).on( 'reset', function() {\n            self.$navbarTabs.empty();\n        }).on( 'dispatch', function( callback ) {\n            self.collection.each( function ( m ) { callback( m ) });\n        }).fetch( this.options );\n\n        // scratchbook\n        Galaxy.frame = this.frame = new Scratchbook( { collection: this.collection } );\n\n        // set up the quota meter (And fetch the current user data from trans)\n        // add quota meter to masthead\n        Galaxy.quotaMeter = this.quotaMeter = new QuotaMeter.UserQuotaMeter({\n            model   : Galaxy.user,\n            el      : this.$quoteMeter\n        });\n\n        // loop through beforeunload functions if the user attempts to unload the page\n        $( window ).on( 'click', function( e ) {\n            var $download_link = $( e.target ).closest( 'a[download]' );\n            if ( $download_link.length == 1 ) {\n                if( $( 'iframe[id=download]' ).length === 0 ) {\n                    $( 'body' ).append( $( '<iframe/>' ).attr( 'id', 'download' ).hide() );\n                }\n                $( 'iframe[id=download]' ).attr( 'src', $download_link.attr( 'href' ) );\n                e.preventDefault();\n            }\n        }).on( 'beforeunload', function() {\n            var text = '';\n            self.collection.each( function( model ) {\n                var q = model.get( 'onbeforeunload' ) && model.get( 'onbeforeunload' )();\n                q && ( text += q + ' ' );\n            });\n            if ( text !== '' ) {\n                return text;\n            }\n        });\n    },\n\n    render: function() {\n        this.$navbarBrandTitle.html( 'Galaxy ' + ( this.options.brand && '/ ' + this.options.brand || '' ) );\n        this.$navbarBrandLink.attr( 'href', this.options.logo_url );\n        this.$navbarBrandImage.attr( 'src', this.options.logo_src );\n        this.quotaMeter.render();\n        return this;\n    },\n\n    /** body template */\n    _template: function() {\n        return  '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n                    '<div class=\"navbar-header\">' +\n                        '<div class=\"navbar-tabs\"/>' +\n                    '</div>' +\n                    '<div class=\"navbar-brand\">' +\n                        '<a class=\"navbar-brand-link\">' +\n                            '<img class=\"navbar-brand-image\"/>' +\n                            '<span class=\"navbar-brand-title\"/>' +\n                        '</a>' +\n                    '</div>' +\n                    '<div class=\"quota-meter-container\"/>' +\n                    '<div class=\"navbar-icons\"/>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View: View\n};\n\n});\n"]}