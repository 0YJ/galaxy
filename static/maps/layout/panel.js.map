{"version":3,"sources":["layout/panel.js"],"names":["define","$","_","MIN_PANEL_WIDTH","MAX_PANEL_WIDTH","initialize","View","extend","options","this","view","hidden","saved_size","hiddenByTool","$center","$el","siblings","$toggleButton","render","self","panel","components","_templatePanel","each","id","buttons","button","append","cls","html","title","_templateHeader","_templateBody","join","data","_templateFooter","prevX","pageX","newWidth","events","mousedown .unified-panel-footer > .drag","click .unified-panel-footer > .panel-collapse","_mousedownDragHandler","ev","resize","move","e","delta","newSize","oldWidth","width","draggingLeft","Math","min","whichSide","on","one","hide","animation","animate","css","show","handle_minwidth_hint","space","toggle","force_panel","hint","LeftPanel","SidePanel","RightPanel","CenterPanel","op","_iframeChangeHandler","location","pathname","search","display","message","contentWindow","Backbone","setElement","template","$panel","$frame","bind","iframe","currentTarget","host","fullpath","hash","onbeforeunload","confirm","undefined","attr","empty","scrollTop","Galaxy","trigger","toString"],"mappings":"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","file":"../../scripts/layout/panel.js","sourcesContent":["define([\"jquery\", \"libs/underscore\", \"libs/backbone\"], function(\n    $,\n    _,\n    Backbone\n) {\n    \"use strict\";\n\n    var MIN_PANEL_WIDTH = 160,\n        MAX_PANEL_WIDTH = 800;\n\n    /** View for left/right panels used by Page view */\n    var SidePanel = Backbone.View.extend({\n        initialize: function(options) {\n            this.view = options.view;\n            this.hidden = false;\n            this.saved_size = null;\n            this.hiddenByTool = false;\n        },\n\n        $center: function() {\n            return this.$el.siblings(\"#center\");\n        },\n\n        $toggleButton: function() {\n            return this.$(\".unified-panel-footer > .panel-collapse\");\n        },\n\n        render: function() {\n            var self = this;\n            var panel = this.view;\n            var components = this.view.model.attributes || {};\n            this.$el.html(this._templatePanel(this.id));\n            _.each(components.buttons, function(button) {\n                self.$(\".panel-header-buttons\").append(button.$el);\n            });\n            this.$el.addClass(components.cls);\n            this.$(\".panel-header-text\").html(_.escape(components.title));\n            this.$(\".unified-panel-body\").append(panel.$el);\n            panel.render();\n        },\n\n        /** panel dom template. id is 'right' or 'left' */\n        _templatePanel: function() {\n            return [\n                this._templateHeader(),\n                this._templateBody(),\n                this._templateFooter()\n            ].join(\"\");\n        },\n\n        /** panel dom template. id is 'right' or 'left' */\n        _templateHeader: function(data) {\n            return [\n                '<div class=\"unified-panel-header\" unselectable=\"on\">',\n                '<div class=\"unified-panel-header-inner\">',\n                '<div class=\"panel-header-buttons\" style=\"float: right\"/>',\n                '<div class=\"panel-header-text\"/>',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\");\n        },\n\n        /** panel dom template. id is 'right' or 'left' */\n        _templateBody: function(data) {\n            return '<div class=\"unified-panel-body\"/>';\n        },\n\n        /** panel dom template. id is 'right' or 'left' */\n        _templateFooter: function(data) {\n            return [\n                '<div class=\"unified-panel-footer\">',\n                '<div class=\"panel-collapse ',\n                _.escape(this.id),\n                '\"/>',\n                '<div class=\"drag\"/>',\n                \"</div>\"\n            ].join(\"\");\n        },\n\n        events: {\n            \"mousedown .unified-panel-footer > .drag\": \"_mousedownDragHandler\",\n            \"click .unified-panel-footer > .panel-collapse\": \"toggle\"\n        },\n\n        _mousedownDragHandler: function(ev) {\n            var self = this,\n                draggingLeft = this.id === \"left\",\n                prevX = ev.pageX;\n\n            function move(e) {\n                var delta = e.pageX - prevX;\n                prevX = e.pageX;\n                var oldWidth = self.$el.width(),\n                    newWidth = draggingLeft\n                        ? oldWidth + delta\n                        : oldWidth - delta;\n                // Limit range\n                newWidth = Math.min(\n                    MAX_PANEL_WIDTH,\n                    Math.max(MIN_PANEL_WIDTH, newWidth)\n                );\n                self.resize(newWidth);\n            }\n\n            // this is a page wide overlay that assists in capturing the move and release of the mouse\n            // if not provided, progress and end wouldn't fire if the mouse moved out of the drag button area\n            $(\"#dd-helper\")\n                .show()\n                .on(\"mousemove\", move)\n                .one(\"mouseup\", function(e) {\n                    $(this)\n                        .hide()\n                        .off(\"mousemove\", move);\n                });\n        },\n\n        // TODO: the following three could be simplified I think\n        // if panel is 'right' (this.id), move center right newSize number of pixels\n        resize: function(newSize) {\n            this.$el.css(\"width\", newSize);\n            this.$center().css(this.id, newSize);\n            return this;\n        },\n\n        show: function() {\n            if (!this.hidden) {\n                return;\n            }\n            var self = this,\n                animation = {},\n                whichSide = this.id;\n            animation[whichSide] = 0;\n            self.$el\n                .css(whichSide, -this.saved_size)\n                .show()\n                .animate(animation, \"fast\", function() {\n                    self.resize(self.saved_size);\n                });\n            self.hidden = false;\n            self.$toggleButton().removeClass(\"hidden\");\n            return this;\n        },\n\n        hide: function() {\n            if (this.hidden) {\n                return;\n            }\n            var animation = {},\n                whichSide = this.id;\n            this.saved_size = this.$el.width();\n            animation[whichSide] = -this.saved_size;\n            this.$el.animate(animation, \"fast\");\n            this.$center().css(whichSide, 0);\n            this.hidden = true;\n            this.$toggleButton().addClass(\"hidden\");\n            return this;\n        },\n\n        toggle: function(ev) {\n            this.hidden ? this.show() : this.hide();\n            this.hiddenByTool = false;\n            return this;\n        },\n\n        // ..............................................................\n        //TODO: only used in message.mako?\n        /**   */\n        handle_minwidth_hint: function(hint) {\n            var space =\n                this.$center().width() - (this.hidden ? this.saved_size : 0);\n            if (space < hint) {\n                if (!this.hidden) {\n                    this.toggle();\n                    this.hiddenByTool = true;\n                }\n            } else {\n                if (this.hiddenByTool) {\n                    this.toggle();\n                    this.hiddenByTool = false;\n                }\n            }\n            return self;\n        },\n\n        /**   */\n        force_panel: function(op) {\n            if (op == \"show\") {\n                return this.show();\n            }\n            if (op == \"hide\") {\n                return this.hide();\n            }\n            return self;\n        },\n\n        toString: function() {\n            return \"SidePanel(\" + this.id + \")\";\n        }\n    });\n\n    // ----------------------------------------------------------------------------\n    // TODO: side should be defined by page - not here\n    var LeftPanel = SidePanel.extend({\n        id: \"left\"\n    });\n\n    var RightPanel = SidePanel.extend({\n        id: \"right\"\n    });\n\n    /** Center panel with the ability to switch between iframe and view */\n    var CenterPanel = Backbone.View.extend({\n        initialize: function(options) {\n            this.setElement($(this.template()));\n            this.$frame = this.$(\".center-frame\");\n            this.$panel = this.$(\".center-panel\");\n            this.$frame.on(\"load\", _.bind(this._iframeChangeHandler, this));\n        },\n\n        /** Display iframe if its target url changes, hide center panel */\n        _iframeChangeHandler: function(ev) {\n            var iframe = ev.currentTarget;\n            var location =\n                iframe.contentWindow && iframe.contentWindow.location;\n            if (location && location.host) {\n                $(iframe).show();\n                this.$panel.empty().hide();\n                Galaxy.trigger(\"center-frame:load\", {\n                    fullpath:\n                        location.pathname + location.search + location.hash,\n                    pathname: location.pathname,\n                    search: location.search,\n                    hash: location.hash\n                });\n            }\n        },\n\n        /** Display a view in the center panel, hide iframe */\n        display: function(view) {\n            var contentWindow = this.$frame[0].contentWindow || {};\n            var message =\n                contentWindow.onbeforeunload && contentWindow.onbeforeunload();\n            if (!message || confirm(message)) {\n                contentWindow.onbeforeunload = undefined;\n                this.$frame.attr(\"src\", \"about:blank\").hide();\n                this.$panel\n                    .empty()\n                    .scrollTop(0)\n                    .append(view.$el)\n                    .show();\n                Galaxy.trigger(\"center-panel:load\", view);\n            }\n        },\n\n        template: function() {\n            return (\n                '<div class=\"center-container\">' +\n                '<iframe id=\"galaxy_main\" name=\"galaxy_main\" frameborder=\"0\" class=\"center-frame\" />' +\n                '<div class=\"center-panel\" />' +\n                \"</div>\"\n            );\n        },\n\n        toString: function() {\n            return \"CenterPanel\";\n        }\n    });\n\n    return {\n        SidePanel: SidePanel,\n        LeftPanel: LeftPanel,\n        RightPanel: RightPanel,\n        CenterPanel: CenterPanel\n    };\n});\n"]}