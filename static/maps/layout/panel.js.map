{"version":3,"sources":["layout/panel.js"],"names":["MIN_PANEL_WIDTH","MAX_PANEL_WIDTH","SidePanel","_backbone2","default","View","extend","initialize","options","this","view","hidden","saved_size","hiddenByTool","$center","$el","siblings","$toggleButton","$","self","panel","components","model","attributes","id","_underscore2","each","buttons","button","append","addClass","cls","html","escape","title","render","join","_templateHeader","data","_templatePanel","_templateBody","_templateFooter","events","mousedown .unified-panel-footer > .drag","_mousedownDragHandler","pageX","ev","move","oldWidth","delta","newWidth","draggingLeft","prevX","e","Math","min","max","resize","_jquery2","on","one","css","hide","off","animation","whichSide","newSize","show","animate","width","removeClass","toggle","handle_minwidth_hint","hint","force_panel","op","LeftPanel","toString","CenterPanel","RightPanel","iframe","Galaxy","trigger","fullpath","pathname","location","search","hash","$frame","bind","_iframeChangeHandler","display","currentTarget","contentWindow","message","onbeforeunload","$panel","confirm","undefined","template"],"mappings":"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","file":"../../scripts/layout/panel.js","sourcesContent":["import $ from \"jquery\";\nimport _ from \"libs/underscore\";\nimport Backbone from \"libs/backbone\";\n\nvar MIN_PANEL_WIDTH = 160,\n    MAX_PANEL_WIDTH = 800;\n\n/** View for left/right panels used by Page view */\nvar SidePanel = Backbone.View.extend({\n    initialize: function(options) {\n        this.view = options.view;\n        this.hidden = false;\n        this.saved_size = null;\n        this.hiddenByTool = false;\n    },\n\n    $center: function() {\n        return this.$el.siblings(\"#center\");\n    },\n\n    $toggleButton: function() {\n        return this.$(\".unified-panel-footer > .panel-collapse\");\n    },\n\n    render: function() {\n        var self = this;\n        var panel = this.view;\n        var components = this.view.model.attributes || {};\n        this.$el.html(this._templatePanel(this.id));\n        _.each(components.buttons, function(button) {\n            self.$(\".panel-header-buttons\").append(button.$el);\n        });\n        this.$el.addClass(components.cls);\n        this.$(\".panel-header-text\").html(_.escape(components.title));\n        this.$(\".unified-panel-body\").append(panel.$el);\n        panel.render();\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templatePanel: function() {\n        return [\n            this._templateHeader(),\n            this._templateBody(),\n            this._templateFooter()\n        ].join(\"\");\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templateHeader: function(data) {\n        return [\n            '<div class=\"unified-panel-header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\">',\n            '<div class=\"panel-header-buttons\" style=\"float: right\"/>',\n            '<div class=\"panel-header-text\"/>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templateBody: function(data) {\n        return '<div class=\"unified-panel-body\"/>';\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templateFooter: function(data) {\n        return [\n            '<div class=\"unified-panel-footer\">',\n            '<div class=\"panel-collapse ',\n            _.escape(this.id),\n            '\"/>',\n            '<div class=\"drag\"/>',\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    events: {\n        \"mousedown .unified-panel-footer > .drag\": \"_mousedownDragHandler\",\n        \"click .unified-panel-footer > .panel-collapse\": \"toggle\"\n    },\n\n    _mousedownDragHandler: function(ev) {\n        var self = this,\n            draggingLeft = this.id === \"left\",\n            prevX = ev.pageX;\n\n        function move(e) {\n            var delta = e.pageX - prevX;\n            prevX = e.pageX;\n            var oldWidth = self.$el.width(),\n                newWidth = draggingLeft ? oldWidth + delta : oldWidth - delta;\n            // Limit range\n            newWidth = Math.min(\n                MAX_PANEL_WIDTH,\n                Math.max(MIN_PANEL_WIDTH, newWidth)\n            );\n            self.resize(newWidth);\n        }\n\n        // this is a page wide overlay that assists in capturing the move and release of the mouse\n        // if not provided, progress and end wouldn't fire if the mouse moved out of the drag button area\n        $(\"#dd-helper\")\n            .show()\n            .on(\"mousemove\", move)\n            .one(\"mouseup\", function(e) {\n                $(this)\n                    .hide()\n                    .off(\"mousemove\", move);\n            });\n    },\n\n    // TODO: the following three could be simplified I think\n    // if panel is 'right' (this.id), move center right newSize number of pixels\n    resize: function(newSize) {\n        this.$el.css(\"width\", newSize);\n        this.$center().css(this.id, newSize);\n        return this;\n    },\n\n    show: function() {\n        if (!this.hidden) {\n            return;\n        }\n        var self = this,\n            animation = {},\n            whichSide = this.id;\n        animation[whichSide] = 0;\n        self.$el\n            .css(whichSide, -this.saved_size)\n            .show()\n            .animate(animation, \"fast\", function() {\n                self.resize(self.saved_size);\n            });\n        self.hidden = false;\n        self.$toggleButton().removeClass(\"hidden\");\n        return this;\n    },\n\n    hide: function() {\n        if (this.hidden) {\n            return;\n        }\n        var animation = {},\n            whichSide = this.id;\n        this.saved_size = this.$el.width();\n        animation[whichSide] = -this.saved_size;\n        this.$el.animate(animation, \"fast\");\n        this.$center().css(whichSide, 0);\n        this.hidden = true;\n        this.$toggleButton().addClass(\"hidden\");\n        return this;\n    },\n\n    toggle: function(ev) {\n        this.hidden ? this.show() : this.hide();\n        this.hiddenByTool = false;\n        return this;\n    },\n\n    // ..............................................................\n    //TODO: only used in message.mako?\n    /**   */\n    handle_minwidth_hint: function(hint) {\n        var space =\n            this.$center().width() - (this.hidden ? this.saved_size : 0);\n        if (space < hint) {\n            if (!this.hidden) {\n                this.toggle();\n                this.hiddenByTool = true;\n            }\n        } else {\n            if (this.hiddenByTool) {\n                this.toggle();\n                this.hiddenByTool = false;\n            }\n        }\n        return self;\n    },\n\n    /**   */\n    force_panel: function(op) {\n        if (op == \"show\") {\n            return this.show();\n        }\n        if (op == \"hide\") {\n            return this.hide();\n        }\n        return self;\n    },\n\n    toString: function() {\n        return \"SidePanel(\" + this.id + \")\";\n    }\n});\n\n// ----------------------------------------------------------------------------\n// TODO: side should be defined by page - not here\nvar LeftPanel = SidePanel.extend({\n    id: \"left\"\n});\n\nvar RightPanel = SidePanel.extend({\n    id: \"right\"\n});\n\n/** Center panel with the ability to switch between iframe and view */\nvar CenterPanel = Backbone.View.extend({\n    initialize: function(options) {\n        this.setElement($(this.template()));\n        this.$frame = this.$(\".center-frame\");\n        this.$panel = this.$(\".center-panel\");\n        this.$frame.on(\"load\", _.bind(this._iframeChangeHandler, this));\n    },\n\n    /** Display iframe if its target url changes, hide center panel */\n    _iframeChangeHandler: function(ev) {\n        var iframe = ev.currentTarget;\n        var location = iframe.contentWindow && iframe.contentWindow.location;\n        if (location && location.host) {\n            $(iframe).show();\n            this.$panel.empty().hide();\n            Galaxy.trigger(\"center-frame:load\", {\n                fullpath: location.pathname + location.search + location.hash,\n                pathname: location.pathname,\n                search: location.search,\n                hash: location.hash\n            });\n        }\n    },\n\n    /** Display a view in the center panel, hide iframe */\n    display: function(view) {\n        var contentWindow = this.$frame[0].contentWindow || {};\n        var message =\n            contentWindow.onbeforeunload && contentWindow.onbeforeunload();\n        if (!message || confirm(message)) {\n            contentWindow.onbeforeunload = undefined;\n            this.$frame.attr(\"src\", \"about:blank\").hide();\n            this.$panel\n                .empty()\n                .scrollTop(0)\n                .append(view.$el)\n                .show();\n            Galaxy.trigger(\"center-panel:load\", view);\n        }\n    },\n\n    template: function() {\n        return (\n            '<div class=\"center-container\">' +\n            '<iframe id=\"galaxy_main\" name=\"galaxy_main\" frameborder=\"0\" class=\"center-frame\" />' +\n            '<div class=\"center-panel\" />' +\n            \"</div>\"\n        );\n    },\n\n    toString: function() {\n        return \"CenterPanel\";\n    }\n});\n\nexport default {\n    SidePanel: SidePanel,\n    LeftPanel: LeftPanel,\n    RightPanel: RightPanel,\n    CenterPanel: CenterPanel\n};\n"]}