{"version":3,"sources":["layout/panel.js"],"names":["_","Backbone","MIN_PANEL_WIDTH","MAX_PANEL_WIDTH","SidePanel","View","extend","initialize","options","this","view","saved_size","hiddenByTool","$center","$el","siblings","$toggleButton","$","render","self","panel","components","model","attributes","html","_templatePanel","id","each","buttons","button","append","addClass","cls","escape","title","hidden","join","data","_templateBody","_templateFooter","_templateHeader","mousedown .unified-panel-footer > .drag","click .unified-panel-footer > .panel-collapse","ev","delta","e","pageX","prevX","oldWidth","width","newWidth","draggingLeft","Math","min","max","_jquery2","default","on","one","resize","move","newSize","css","animation","show","whichSide","animate","hide","toggle","handle_minwidth_hint","hint","space","force_panel","op","toString","LeftPanel","RightPanel","CenterPanel","$panel","setElement","$frame","bind","_iframeChangeHandler","iframe","currentTarget","contentWindow","location","Galaxy","trigger","fullpath","pathname","search","hash","display","message","onbeforeunload","undefined","empty","template"],"mappings":"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","file":"../../scripts/layout/panel.js","sourcesContent":["import $ from \"jquery\";\nimport * as _ from \"libs/underscore\";\nimport * as Backbone from \"libs/backbone\";\n\nvar MIN_PANEL_WIDTH = 160,\n    MAX_PANEL_WIDTH = 800;\n\n/** View for left/right panels used by Page view */\nvar SidePanel = Backbone.View.extend({\n    initialize: function(options) {\n        this.view = options.view;\n        this.hidden = false;\n        this.saved_size = null;\n        this.hiddenByTool = false;\n    },\n\n    $center: function() {\n        return this.$el.siblings(\"#center\");\n    },\n\n    $toggleButton: function() {\n        return this.$(\".unified-panel-footer > .panel-collapse\");\n    },\n\n    render: function() {\n        var self = this;\n        var panel = this.view;\n        var components = this.view.model.attributes || {};\n        this.$el.html(this._templatePanel(this.id));\n        _.each(components.buttons, function(button) {\n            self.$(\".panel-header-buttons\").append(button.$el);\n        });\n        this.$el.addClass(components.cls);\n        this.$(\".panel-header-text\").html(_.escape(components.title));\n        this.$(\".unified-panel-body\").append(panel.$el);\n        panel.render();\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templatePanel: function() {\n        return [\n            this._templateHeader(),\n            this._templateBody(),\n            this._templateFooter()\n        ].join(\"\");\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templateHeader: function(data) {\n        return [\n            '<div class=\"unified-panel-header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\">',\n            '<div class=\"panel-header-buttons\" style=\"float: right\"/>',\n            '<div class=\"panel-header-text\"/>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templateBody: function(data) {\n        return '<div class=\"unified-panel-body\"/>';\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templateFooter: function(data) {\n        return [\n            '<div class=\"unified-panel-footer\">',\n            '<div class=\"panel-collapse ',\n            _.escape(this.id),\n            '\"/>',\n            '<div class=\"drag\"/>',\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    events: {\n        \"mousedown .unified-panel-footer > .drag\": \"_mousedownDragHandler\",\n        \"click .unified-panel-footer > .panel-collapse\": \"toggle\"\n    },\n\n    _mousedownDragHandler: function(ev) {\n        var self = this,\n            draggingLeft = this.id === \"left\",\n            prevX = ev.pageX;\n\n        function move(e) {\n            var delta = e.pageX - prevX;\n            prevX = e.pageX;\n            var oldWidth = self.$el.width(),\n                newWidth = draggingLeft ? oldWidth + delta : oldWidth - delta;\n            // Limit range\n            newWidth = Math.min(\n                MAX_PANEL_WIDTH,\n                Math.max(MIN_PANEL_WIDTH, newWidth)\n            );\n            self.resize(newWidth);\n        }\n\n        // this is a page wide overlay that assists in capturing the move and release of the mouse\n        // if not provided, progress and end wouldn't fire if the mouse moved out of the drag button area\n        $(\"#dd-helper\")\n            .show()\n            .on(\"mousemove\", move)\n            .one(\"mouseup\", function(e) {\n                $(this)\n                    .hide()\n                    .off(\"mousemove\", move);\n            });\n    },\n\n    // TODO: the following three could be simplified I think\n    // if panel is 'right' (this.id), move center right newSize number of pixels\n    resize: function(newSize) {\n        this.$el.css(\"width\", newSize);\n        this.$center().css(this.id, newSize);\n        return this;\n    },\n\n    show: function() {\n        if (!this.hidden) {\n            return;\n        }\n        var self = this,\n            animation = {},\n            whichSide = this.id;\n        animation[whichSide] = 0;\n        self.$el\n            .css(whichSide, -this.saved_size)\n            .show()\n            .animate(animation, \"fast\", function() {\n                self.resize(self.saved_size);\n            });\n        self.hidden = false;\n        self.$toggleButton().removeClass(\"hidden\");\n        return this;\n    },\n\n    hide: function() {\n        if (this.hidden) {\n            return;\n        }\n        var animation = {},\n            whichSide = this.id;\n        this.saved_size = this.$el.width();\n        animation[whichSide] = -this.saved_size;\n        this.$el.animate(animation, \"fast\");\n        this.$center().css(whichSide, 0);\n        this.hidden = true;\n        this.$toggleButton().addClass(\"hidden\");\n        return this;\n    },\n\n    toggle: function(ev) {\n        this.hidden ? this.show() : this.hide();\n        this.hiddenByTool = false;\n        return this;\n    },\n\n    // ..............................................................\n    //TODO: only used in message.mako?\n    /**   */\n    handle_minwidth_hint: function(hint) {\n        var space =\n            this.$center().width() - (this.hidden ? this.saved_size : 0);\n        if (space < hint) {\n            if (!this.hidden) {\n                this.toggle();\n                this.hiddenByTool = true;\n            }\n        } else {\n            if (this.hiddenByTool) {\n                this.toggle();\n                this.hiddenByTool = false;\n            }\n        }\n        return self;\n    },\n\n    /**   */\n    force_panel: function(op) {\n        if (op == \"show\") {\n            return this.show();\n        }\n        if (op == \"hide\") {\n            return this.hide();\n        }\n        return self;\n    },\n\n    toString: function() {\n        return \"SidePanel(\" + this.id + \")\";\n    }\n});\n\n// ----------------------------------------------------------------------------\n// TODO: side should be defined by page - not here\nvar LeftPanel = SidePanel.extend({\n    id: \"left\"\n});\n\nvar RightPanel = SidePanel.extend({\n    id: \"right\"\n});\n\n/** Center panel with the ability to switch between iframe and view */\nvar CenterPanel = Backbone.View.extend({\n    initialize: function(options) {\n        this.setElement($(this.template()));\n        this.$frame = this.$(\".center-frame\");\n        this.$panel = this.$(\".center-panel\");\n        this.$frame.on(\"load\", _.bind(this._iframeChangeHandler, this));\n    },\n\n    /** Display iframe if its target url changes, hide center panel */\n    _iframeChangeHandler: function(ev) {\n        var iframe = ev.currentTarget;\n        var location = iframe.contentWindow && iframe.contentWindow.location;\n        if (location && location.host) {\n            $(iframe).show();\n            this.$panel.empty().hide();\n            Galaxy.trigger(\"center-frame:load\", {\n                fullpath: location.pathname + location.search + location.hash,\n                pathname: location.pathname,\n                search: location.search,\n                hash: location.hash\n            });\n        }\n    },\n\n    /** Display a view in the center panel, hide iframe */\n    display: function(view) {\n        var contentWindow = this.$frame[0].contentWindow || {};\n        var message =\n            contentWindow.onbeforeunload && contentWindow.onbeforeunload();\n        if (!message || confirm(message)) {\n            contentWindow.onbeforeunload = undefined;\n            this.$frame.attr(\"src\", \"about:blank\").hide();\n            this.$panel\n                .empty()\n                .scrollTop(0)\n                .append(view.$el)\n                .show();\n            Galaxy.trigger(\"center-panel:load\", view);\n        }\n    },\n\n    template: function() {\n        return (\n            '<div class=\"center-container\">' +\n            '<iframe id=\"galaxy_main\" name=\"galaxy_main\" frameborder=\"0\" class=\"center-frame\" />' +\n            '<div class=\"center-panel\" />' +\n            \"</div>\"\n        );\n    },\n\n    toString: function() {\n        return \"CenterPanel\";\n    }\n});\n\nexport default {\n    SidePanel: SidePanel,\n    LeftPanel: LeftPanel,\n    RightPanel: RightPanel,\n    CenterPanel: CenterPanel\n};\n"]}