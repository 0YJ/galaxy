{"version":3,"sources":["layout/panel.js"],"names":["define","jQuery","_","Backbone","BASE_MVC","$","MIN_PANEL_WIDTH","MAX_PANEL_WIDTH","SidePanel","View","extend","LoggableMixin","initialize","attributes","this","log","title","hidden","hiddenByTool","savedSize","$center","$el","siblings","$toggleButton","render","html","template","id","_templateHeader","_templateFooter","join","data","escape","_templateBody","prevX","pageX","self","mousedown .unified-panel-footer > .drag","click .unified-panel-footer > .panel-collapse","show","ev","move","e","resize","delta","newSize","css","oldWidth","newWidth","draggingLeft","Math","min","max","on","animation","whichSide","hide","addClass","toggle","removeClass","width","animate","space","handle_minwidth_hint","hint","op","force_panel","RightPanel","toString","LeftPanel","prev","CenterPanel","_logNamespace","iframe","location","contentWindow","Galaxy","bind","_iframeChangeHandler","hash","currentTarget","host","display","remove","message","confirm","onbeforeunload","undefined","pathname","search","view","attr","scrollTop","append","trigger"],"mappings":"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","file":"../../scripts/layout/panel.js","sourcesContent":["define([\n    'jquery',\n    'libs/underscore',\n    'libs/backbone',\n    'mvc/base-mvc',\n], function( jQuery, _, Backbone, BASE_MVC ){\n\n\"use strict\";\n// ============================================================================\nvar $ = jQuery;\n\nvar MIN_PANEL_WIDTH = 160,\n    MAX_PANEL_WIDTH = 800;\n\n// ----------------------------------------------------------------------------\n/**\n *\n */\nvar SidePanel = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n    _logNamespace : 'layout',\n\n    initialize: function( attributes ){\n        this.log( this + '.initialize:', attributes );\n        this.title = attributes.title || this.title || '';\n\n        this.hidden = false;\n        this.savedSize = null;\n        this.hiddenByTool = false;\n    },\n\n    $center : function(){\n        return this.$el.siblings( '#center' );\n    },\n\n    $toggleButton : function(){\n        return this.$( '.unified-panel-footer > .panel-collapse' );\n    },\n\n    render: function(){\n        this.log( this + '.render:' );\n        this.$el.html( this.template( this.id ) );\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    template: function(){\n        return [\n            this._templateHeader(),\n            this._templateBody(),\n            this._templateFooter(),\n        ].join('');\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templateHeader: function( data ){\n        return [\n            '<div class=\"unified-panel-header\" unselectable=\"on\">',\n                '<div class=\"unified-panel-header-inner\">',\n                    '<div class=\"panel-header-buttons\" style=\"float: right\"/>',\n                    '<div class=\"panel-header-text\">', _.escape( this.title ), '</div>',\n                '</div>',\n            '</div>',\n        ].join('');\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templateBody: function( data ){\n        return '<div class=\"unified-panel-body\"/>';\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templateFooter: function( data ){\n        return [\n            '<div class=\"unified-panel-footer\">',\n                '<div class=\"panel-collapse ', _.escape( this.id ), '\"/>',\n                '<div class=\"drag\"/>',\n            '</div>',\n        ].join('');\n    },\n\n    // ..............................................................\n    events : {\n        'mousedown .unified-panel-footer > .drag'       : '_mousedownDragHandler',\n        'click .unified-panel-footer > .panel-collapse' : 'toggle'\n    },\n\n    _mousedownDragHandler : function( ev ){\n        var self = this,\n            draggingLeft = this.id === 'left',\n            prevX = ev.pageX;\n\n        function move( e ){\n            var delta = e.pageX - prevX;\n            prevX = e.pageX;\n\n            var oldWidth = self.$el.width(),\n                newWidth = draggingLeft?( oldWidth + delta ):( oldWidth - delta );\n            // Limit range\n            newWidth = Math.min( MAX_PANEL_WIDTH, Math.max( MIN_PANEL_WIDTH, newWidth ) );\n            self.resize( newWidth );\n        }\n\n        // this is a page wide overlay that assists in capturing the move and release of the mouse\n        // if not provided, progress and end wouldn't fire if the mouse moved out of the drag button area\n        $( '#dd-helper' )\n            .show()\n            .on( 'mousemove', move )\n            .one( 'mouseup', function( e ){\n                $( this ).hide().off( 'mousemove', move );\n            });\n    },\n\n    //TODO: the following three could be simplified I think\n    resize : function( newSize ){\n        this.$el.css( 'width', newSize );\n        // if panel is 'right' (this.id), move center right newSize number of pixels\n        this.$center().css( this.id, newSize );\n        return self;\n    },\n\n    show : function(){\n        if( !this.hidden ){ return; }\n        var self = this,\n            animation = {},\n            whichSide = this.id;\n\n        animation[ whichSide ] = 0;\n        self.$el\n            .css( whichSide, -this.savedSize )\n            .show()\n            .animate( animation, \"fast\", function(){\n                self.resize( self.savedSize );\n            });\n\n        self.hidden = false;\n        self.$toggleButton().removeClass( \"hidden\" );\n        return self;\n    },\n\n    hide : function(){\n        if( this.hidden ){ return; }\n        var self = this,\n            animation = {},\n            whichSide = this.id;\n\n        self.savedSize = this.$el.width();\n        animation[ whichSide ] = -this.savedSize;\n        this.$el.animate( animation, \"fast\" );\n        this.$center().css( whichSide, 0 );\n\n        self.hidden = true;\n        self.$toggleButton().addClass( \"hidden\" );\n        return self;\n    },\n\n    toggle: function( ev ){\n        var self = this;\n        if( self.hidden ){\n            self.show();\n        } else {\n            self.hide();\n        }\n        self.hiddenByTool = false;\n        return self;\n    },\n\n    // ..............................................................\n    //TODO: only used in message.mako?\n    /**   */\n    handle_minwidth_hint: function( hint ){\n        var space = this.$center().width() - ( this.hidden ? this.savedSize : 0 );\n        if( space < hint ){\n            if( !this.hidden ){\n                this.toggle();\n                this.hiddenByTool = true;\n            }\n        } else {\n            if( this.hiddenByTool ){\n                this.toggle();\n                this.hiddenByTool = false;\n            }\n        }\n        return self;\n    },\n\n    /**   */\n    force_panel : function( op ){\n        if( op == 'show' ){ return this.show(); }\n        if( op == 'hide' ){ return this.hide(); }\n        return self;\n    },\n\n    toString : function(){ return 'SidePanel(' + this.id + ')'; }\n});\n\n// ----------------------------------------------------------------------------\n// TODO: side should be defined by page - not here\nvar LeftPanel = SidePanel.extend({\n    id : 'left',\n});\n\nvar RightPanel = SidePanel.extend({\n    id : 'right',\n});\n\n\n// ----------------------------------------------------------------------------\n/**\n *\n */\nvar CenterPanel = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n    _logNamespace : 'layout',\n\n    initialize : function( options ){\n        this.log( this + '.initialize:', options );\n        /** previous view contained in the center panel - cached for removal later */\n        this.prev = null;\n    },\n\n    render : function(){\n        this.log( this + '.render:' );\n        this.$el.html( this.template() );\n        // ?: doesn't work/listen in events map\n        this.$( '#galaxy_main' ).on( 'load', _.bind( this._iframeChangeHandler, this ) );\n    },\n\n    /**   */\n    _iframeChangeHandler : function( ev ){\n        var iframe = ev.currentTarget;\n        var location = iframe.contentWindow && iframe.contentWindow.location;\n        if( location && location.host ){\n            // show the iframe and hide MVCview div, remove any views in the MVCview div\n            $( iframe ).show();\n            if( this.prev ){\n                this.prev.remove();\n            }\n            this.$( '#center-panel' ).hide();\n            // TODO: move to Galaxy\n            Galaxy.trigger( 'galaxy_main:load', {\n                fullpath: location.pathname + location.search + location.hash,\n                pathname: location.pathname,\n                search  : location.search,\n                hash    : location.hash\n            });\n        }\n    },\n\n    /**   */\n    display: function( view ){\n        // we need to display an MVC view: hide the iframe and show the other center panel\n        // first checking for any onbeforeunload handlers on the iframe\n        var contentWindow = this.$( '#galaxy_main' )[ 0 ].contentWindow || {};\n        var message = contentWindow.onbeforeunload && contentWindow.onbeforeunload();\n        if ( !message || confirm( message ) ) {\n            contentWindow.onbeforeunload = undefined;\n            // remove any previous views\n            if( this.prev ){\n                this.prev.remove();\n            }\n            this.prev = view;\n            this.$( '#galaxy_main' ).attr( 'src', 'about:blank' ).hide();\n            this.$( '#center-panel' ).scrollTop( 0 ).append( view.$el ).show();\n            Galaxy.trigger( 'center-panel:load', view );\n\n        } else {\n            if( view ){\n                view.remove();\n            }\n        }\n    },\n\n    template: function(){\n        return [\n            //TODO: remove inline styling\n            '<div style=\"position: absolute; width: 100%; height: 100%\">',\n                '<iframe name=\"galaxy_main\" id=\"galaxy_main\" frameborder=\"0\" ',\n                        'style=\"position: absolute; width: 100%; height: 100%;\"/>',\n                '<div id=\"center-panel\" ',\n                     'style=\"display: none; position: absolute; width: 100%; height: 100%; padding: 10px; overflow: auto;\"/>',\n            '</div>'\n        ].join('');\n    },\n\n    toString : function(){ return 'CenterPanel'; }\n});\n\n\n// ============================================================================\n    return {\n        LeftPanel : LeftPanel,\n        RightPanel : RightPanel,\n        CenterPanel : CenterPanel\n    };\n});\n"]}