{"version":3,"sources":["layout/panel.js"],"names":["define","$","_","Backbone","MIN_PANEL_WIDTH","MAX_PANEL_WIDTH","SidePanel","View","extend","this","view","options","initialize","hidden","$center","$el","siblings","$toggleButton","render","self","panel","model","attributes","id","each","components","buttons","html","append","button","cls","escape","title","_templatePanel","_templateBody","_templateFooter","join","_templateHeader","data","events","_mousedownDragHandler","draggingLeft","prevX","mousedown .unified-panel-footer > .drag","newWidth","ev","move","e","delta","pageX","oldWidth","width","Math","min","newSize","max","css","show","on","animation","hide","off","removeClass","whichSide","toggle","saved_size","animate","addClass","handle_minwidth_hint","space","hint","hiddenByTool","op","force_panel","LeftPanel","RightPanel","$panel","CenterPanel","_iframeChangeHandler","location","iframe","host","empty","Galaxy","trigger","bind","hash","currentTarget","contentWindow","display","$frame","message","confirm","onbeforeunload","template","undefined","toString","attr","scrollTop"],"mappings":"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","file":"../../scripts/layout/panel.js","sourcesContent":["define( [ 'jquery', 'libs/underscore', 'libs/backbone' ], function( $, _, Backbone ) {\n    \"use strict\";\n\n    var MIN_PANEL_WIDTH = 160,\n        MAX_PANEL_WIDTH = 800;\n\n    /** View for left/right panels used by Page view */\n    var SidePanel = Backbone.View.extend({\n\n        initialize: function( options ){\n            this.view = options.view;\n            this.hidden = false;\n            this.saved_size = null;\n            this.hiddenByTool = false;\n        },\n\n        $center : function() {\n            return this.$el.siblings( '#center' );\n        },\n\n        $toggleButton : function() {\n            return this.$( '.unified-panel-footer > .panel-collapse' );\n        },\n\n        render: function() {\n            var self = this;\n            var panel = this.view;\n            var components = this.view.model.attributes || {};\n            this.$el.html( this._templatePanel( this.id ) );\n            _.each( components.buttons, function( button ) {\n                self.$( '.panel-header-buttons' ).append( button.$el );\n            });\n            this.$el.addClass( components.cls );\n            this.$( '.panel-header-text' ).html( _.escape( components.title ) );\n            this.$( '.unified-panel-body' ).append( panel.$el );\n            panel.render();\n        },\n\n        /** panel dom template. id is 'right' or 'left' */\n        _templatePanel: function() {\n            return [\n                this._templateHeader(),\n                this._templateBody(),\n                this._templateFooter(),\n            ].join('');\n        },\n\n        /** panel dom template. id is 'right' or 'left' */\n        _templateHeader: function( data ) {\n            return [\n                '<div class=\"unified-panel-header\" unselectable=\"on\">',\n                    '<div class=\"unified-panel-header-inner\">',\n                        '<div class=\"panel-header-buttons\" style=\"float: right\"/>',\n                        '<div class=\"panel-header-text\"/>',\n                    '</div>',\n                '</div>',\n            ].join('');\n        },\n\n        /** panel dom template. id is 'right' or 'left' */\n        _templateBody: function( data ) {\n            return '<div class=\"unified-panel-body\"/>';\n        },\n\n        /** panel dom template. id is 'right' or 'left' */\n        _templateFooter: function( data ) {\n            return [\n                '<div class=\"unified-panel-footer\">',\n                    '<div class=\"panel-collapse ', _.escape( this.id ), '\"/>',\n                    '<div class=\"drag\"/>',\n                '</div>',\n            ].join('');\n        },\n\n        events : {\n            'mousedown .unified-panel-footer > .drag'       : '_mousedownDragHandler',\n            'click .unified-panel-footer > .panel-collapse' : 'toggle'\n        },\n\n        _mousedownDragHandler : function( ev ) {\n            var self = this,\n                draggingLeft = this.id === 'left',\n                prevX = ev.pageX;\n\n            function move( e ){\n                var delta = e.pageX - prevX;\n                prevX = e.pageX;\n                var oldWidth = self.$el.width(),\n                    newWidth = draggingLeft?( oldWidth + delta ):( oldWidth - delta );\n                // Limit range\n                newWidth = Math.min( MAX_PANEL_WIDTH, Math.max( MIN_PANEL_WIDTH, newWidth ) );\n                self.resize( newWidth );\n            }\n\n            // this is a page wide overlay that assists in capturing the move and release of the mouse\n            // if not provided, progress and end wouldn't fire if the mouse moved out of the drag button area\n            $( '#dd-helper' )\n                .show()\n                .on( 'mousemove', move )\n                .one( 'mouseup', function( e ){\n                    $( this ).hide().off( 'mousemove', move );\n                });\n        },\n\n        // TODO: the following three could be simplified I think\n        // if panel is 'right' (this.id), move center right newSize number of pixels\n        resize : function( newSize ) {\n            this.$el.css( 'width', newSize );\n            this.$center().css( this.id, newSize );\n            return this;\n        },\n\n        show : function(){\n            if( !this.hidden ) { return }\n            var self = this,\n                animation = {},\n                whichSide = this.id;\n            animation[ whichSide ] = 0;\n            self.$el\n                .css( whichSide, -this.saved_size )\n                .show()\n                .animate( animation, \"fast\", function(){\n                    self.resize( self.saved_size );\n                });\n            self.hidden = false;\n            self.$toggleButton().removeClass( \"hidden\" );\n            return this;\n        },\n\n        hide : function(){\n            if( this.hidden ) { return }\n            var animation = {},\n                whichSide = this.id;\n            this.saved_size = this.$el.width();\n            animation[ whichSide ] = -this.saved_size;\n            this.$el.animate( animation, \"fast\" );\n            this.$center().css( whichSide, 0 );\n            this.hidden = true;\n            this.$toggleButton().addClass( \"hidden\" );\n            return this;\n        },\n\n        toggle: function( ev ) {\n            this.hidden ? this.show() : this.hide();\n            this.hiddenByTool = false;\n            return this;\n        },\n\n        // ..............................................................\n        //TODO: only used in message.mako?\n        /**   */\n        handle_minwidth_hint: function( hint ){\n            var space = this.$center().width() - ( this.hidden ? this.saved_size : 0 );\n            if( space < hint ){\n                if( !this.hidden ){\n                    this.toggle();\n                    this.hiddenByTool = true;\n                }\n            } else {\n                if( this.hiddenByTool ){\n                    this.toggle();\n                    this.hiddenByTool = false;\n                }\n            }\n            return self;\n        },\n\n        /**   */\n        force_panel : function( op ){\n            if( op == 'show' ){ return this.show(); }\n            if( op == 'hide' ){ return this.hide(); }\n            return self;\n        },\n\n        toString : function(){ return 'SidePanel(' + this.id + ')' }\n    });\n\n    // ----------------------------------------------------------------------------\n    // TODO: side should be defined by page - not here\n    var LeftPanel = SidePanel.extend({\n        id : 'left',\n    });\n\n    var RightPanel = SidePanel.extend({\n        id : 'right',\n    });\n\n    /** Center panel with the ability to switch between iframe and view */\n    var CenterPanel = Backbone.View.extend({\n\n        initialize : function( options ){\n            this.setElement( $( this.template() ) );\n            this.$frame = this.$( '.center-frame' );\n            this.$panel = this.$( '.center-panel' );\n            this.$frame.on( 'load', _.bind( this._iframeChangeHandler, this ) );\n        },\n\n        /** Display iframe if its target url changes, hide center panel */\n        _iframeChangeHandler : function( ev ) {\n            var iframe = ev.currentTarget;\n            var location = iframe.contentWindow && iframe.contentWindow.location;\n            if( location && location.host ) {\n                $( iframe ).show();\n                this.$panel.empty().hide();\n                Galaxy.trigger( 'center-frame:load', {\n                    fullpath: location.pathname + location.search + location.hash,\n                    pathname: location.pathname,\n                    search  : location.search,\n                    hash    : location.hash\n                });\n            }\n        },\n\n        /** Display a view in the center panel, hide iframe */\n        display: function( view ) {\n            var contentWindow = this.$frame[ 0 ].contentWindow || {};\n            var message = contentWindow.onbeforeunload && contentWindow.onbeforeunload();\n            if ( !message || confirm( message ) ) {\n                contentWindow.onbeforeunload = undefined;\n                this.$frame.attr( 'src', 'about:blank' ).hide();\n                this.$panel.empty().scrollTop( 0 ).append( view.$el ).show();\n                Galaxy.trigger( 'center-panel:load', view );\n            }\n        },\n\n        template: function() {\n            return  '<div class=\"center-container\">' +\n                        '<iframe id=\"galaxy_main\" name=\"galaxy_main\" frameborder=\"0\" class=\"center-frame\" />' +\n                        '<div class=\"center-panel\" />' +\n                    '</div>';\n        },\n\n        toString : function() { return 'CenterPanel' }\n    });\n\n    return {\n        SidePanel : SidePanel,\n        LeftPanel : LeftPanel,\n        RightPanel : RightPanel,\n        CenterPanel : CenterPanel\n    };\n});"]}