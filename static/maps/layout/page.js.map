{"version":3,"sources":["layout/page.js"],"names":["define","Masthead","Panel","Modal","Utils","View","Backbone","extend","el","className","initialize","options","this","self","_","defaults","config","message_box_visible","message_box_content","message_box_class","show_inactivity_warning","Galaxy","modal","display","view","title","setWindowTitle","center","router","Router","masthead","CenterPanel","$el","attr","html","_template","$","replaceWith","append","frame","$messagebox","$inactivebox","panels","each","_panelids","panel_id","panel_class_name","panel_class","slice","panel_instance","toString","SidePanel","id","render","root","pushState","start","remove","renderInactivityBox","renderPanels","_checkCommunicationServerOnline","renderMessageBox","content","level","addClass","hide","toggle","show","removeClass","inactivity_box_content","verificationLink","text","panel","css","preferences","url","$chat_icon_element","join","host","window","communication_server_host","port","communication_server_port","user","attributes","indexOf","communication_server","ajax","success","data","error"],"mappings":"kCAAAA,QACK,kBAAmB,eAAgB,kBAAmB,eACvD,SAASC,EAAUC,EAAOC,EAAOC,GAiM7B,OAASC,KAlMZC,SAAAD,KAAmBE,QAEZF,GAAAA,OACAG,UAD4B,eAE5BC,WAAW,OAAA,SAGXC,WAAY,SAASC,GAArBD,IAAAA,EAAYE,KACRA,KAAIC,OAAOC,EAAXC,SAAAJ,EAAAK,YACAC,qBAAyBN,EACrBM,oBAAqB,GACrBC,kBAAAA,OACAC,yBAH2C,EAI3CC,uBAAAA,KAIJC,OAAAC,MAAAV,KAAAU,MAAA,IAAAnB,EAAAE,KACAgB,OAAOC,QAAQV,KAAKU,QAAYnB,SAAME,GAC/BkB,EAAAA,OACCC,EAAKC,eAAOD,EAAAC,OACZrB,EAAAA,qBAA0BqB,IAD9BrB,EAGOsB,iBACHtB,EAAAA,qBAAA,GAEHS,EAAAc,OAAAJ,QAAAC,IAEJH,OATDO,OAAAhB,KAAAgB,OAUAP,EAAOO,QAAcA,IAAAA,EACjBjB,OAAQkB,EAARlB,GACJC,KAAKkB,SAAW,IAAI7B,EAASI,KAAKO,KAAKI,QACvCJ,KAAKe,OAAS,IAAIzB,EAAM6B,YAGxBnB,KAAKoB,IAAIC,KAAK,SAAU,MACxBrB,KAAKoB,IAAIE,KAAKtB,KAAKuB,aACnBvB,KAAKwB,EAAE,aAAaC,YAAYzB,KAAKkB,SAASE,KAC9CpB,KAAKwB,EAAE,WAAWE,OAAO1B,KAAKe,OAAOK,KACrCpB,KAAKoB,IAAIM,OAAO1B,KAAKkB,SAASS,MAAMP,KACpCpB,KAAKoB,IAAIM,OAAO1B,KAAKU,MAAMU,KAC3BpB,KAAK4B,YAAc5B,KAAKwB,EAAE,eAC1BxB,KAAK6B,aAAe7B,KAAKwB,EAAE,gBAG3BxB,KAAK8B,UACL5B,EAAE6B,KAAK/B,KAAKgC,UAAW,SAAAC,GACnB,IAAIC,EAEAC,EAAAA,OAAcpC,GAAAA,cAAQmC,EAA1BE,MAAA,GACID,EAAapC,EAAAmC,GACb,GAAAC,EAAIE,CACJpC,IAAAA,EAAoBqC,IAAAA,EAAcD,EAAAA,GAClCpC,EAAK6B,EAALQ,YAAkCC,EAC9BC,EAAAA,OAAIP,GADoC,IAAA3C,EAAAiD,WAExC3C,GAAIK,EACJW,GAAAA,EAAMyB,EAAAA,IAAAA,GAHVzB,KAAAyB,OAORrC,KAAKyC,SAKGC,KAAAA,QACAC,SAAAA,QAAWC,OAHnBF,KAAAjC,OAAAiC,KA7DwBC,WAAA,KAsExBnB,OAAE,WAMF,OAJAA,EAAA,8BAAAqB,SACA7C,KAAK8C,SAAAA,SACL9C,KAAK+C,mBACL/C,KAAKgD,sBACLhD,KAAA+C,eA5EwB/C,KAAAgD,kCA4EjBhD,MAMHiD,iBAAIC,WACJ,GAAAlD,KAAImD,OAAQ9C,oBAAYE,CACxB,IAAA2C,EAASE,KAAShD,OAAAE,qBAAlB,GACA6C,EAAKvB,KACAP,OAAKd,mBAAoB4C,OALlCnD,KASOoB,IAAAgC,SAAA,mBACHpD,KAAKoB,YACAQ,KAAAA,QAAYyB,SAAjBF,EAAA,YACH7B,KAAA4B,GACMI,SAAPJ,GA9FwBK,YAiG5BvD,KAAAoB,IAAAoC,YAAA,mBACAV,KAAAA,YAAqBO,OAEb,OAAArD,MAUH8C,oBAAM,WACH,GAAA9C,KAAKoB,OAAIoC,wBAAY,CACrB,IAAAN,EAAKrB,KAAawB,OAAlBI,wBAAA,GACHC,EAAAlC,EAAA,QACMH,KAAP,OAAAZ,OAAAiC,KAAA,4BAlHwBiB,KAAA,uBAwGpB3D,KAAKoB,IAAIgC,SAAS,sBAa1BpD,KAAA6B,aACAkB,KAAcG,EAAA,KACNjD,OAAJyD,GACOJ,SAAKtB,GACJ4B,YAEAA,KAAAA,IAAAA,YAAA,sBACH5D,KAFD6B,aAEOwB,OAEHpD,OAAAA,MAIX8C,aAlI2B,WAuHxB,IAAI9C,EAAOD,KAiCf,OApBAE,EAAA6B,KAAA/B,KAAAgC,UAAA,SAAAC,GACAV,IAAWqC,EAAA3D,EAAA6B,OAAWG,GAEd2B,EAvIoBA,EAAAnB,UAoJlBxC,EAAAuB,EAAA,WAAWqC,IAAA5B,EAAA,GACVhC,EAAAuB,EAAA,IAAAS,GAAPoB,UAGJrD,MAEIuB,UAEIuC,WAFJ,OAIA,wBAEIA,yBAIA,uBACAtC,yBACIuC,yDADG,oBAIC,sCACA,qBACI,SAIIC,0BAIHC,KAAA,KAIL3B,SAAA,WACA0B,MAAAA,kBAIXhB,gCAAA,WACJ,IAAAkB,EAAAC,OAAA1D,OAAAL,OAAAgE,0BA7LLC,EAAAF,OAAA1D,OAAAL,OAAAkE,0BA4JYR,EAAcK,OAAO1D,OAAO8D,KAAKC,WAAWV,YAoC/CrE,EAAT+B,EAAA,qBAhCYsC,IAEK,IADJ,IAAK,QAAQW,QAAQX,EAAYY,sBAIlClD,EAAEmD,MACEZ,IAAKG,EAAO,IAAMG,IAEjBO,QAAQ,SAASC,GAEgB,OAA1BV,OAAO1D,OAAO8D,KAAK/B,IAGf,WADAwB,EAAmBH,IAAI,eAGvBG,EAAmBH,IACf,aACA,aAKfiB,MAAM,SAASD,GAEZb,EAAmBH,IAAI,aAAc,YAG7CG,EAAmBH,IAAI,aAAc","file":"../../scripts/layout/page.js","sourcesContent":["define(\n    [\"layout/masthead\", \"layout/panel\", \"mvc/ui/ui-modal\", \"utils/utils\"],\n    function(Masthead, Panel, Modal, Utils) {\n        var View = Backbone.View.extend({\n            el: \"body\",\n            className: \"full-content\",\n            _panelids: [\"left\", \"right\"],\n\n            initialize: function(options) {\n                var self = this;\n                this.config = _.defaults(options.config || {}, {\n                    message_box_visible: false,\n                    message_box_content: \"\",\n                    message_box_class: \"info\",\n                    show_inactivity_warning: false,\n                    inactivity_box_content: \"\"\n                });\n\n                // attach global objects, build mastheads\n                Galaxy.modal = this.modal = new Modal.View();\n                Galaxy.display = this.display = function(view) {\n                    if (view.title) {\n                        Utils.setWindowTitle(view.title);\n                        view.allow_title_display = false;\n                    } else {\n                        Utils.setWindowTitle();\n                        view.allow_title_display = true;\n                    }\n                    self.center.display(view);\n                };\n                Galaxy.router = this.router =\n                    options.Router && new options.Router(self, options);\n                this.masthead = new Masthead.View(this.config);\n                this.center = new Panel.CenterPanel();\n\n                // build page template\n                this.$el.attr(\"scroll\", \"no\");\n                this.$el.html(this._template());\n                this.$(\"#masthead\").replaceWith(this.masthead.$el);\n                this.$(\"#center\").append(this.center.$el);\n                this.$el.append(this.masthead.frame.$el);\n                this.$el.append(this.modal.$el);\n                this.$messagebox = this.$(\"#messagebox\");\n                this.$inactivebox = this.$(\"#inactivebox\");\n\n                // build panels\n                this.panels = {};\n                _.each(this._panelids, function(panel_id) {\n                    var panel_class_name =\n                        panel_id.charAt(0).toUpperCase() + panel_id.slice(1);\n                    var panel_class = options[panel_class_name];\n                    if (panel_class) {\n                        var panel_instance = new panel_class(self, options);\n                        self[panel_instance.toString()] = panel_instance;\n                        self.panels[panel_id] = new Panel.SidePanel({\n                            id: panel_id,\n                            el: self.$(\"#\" + panel_id),\n                            view: panel_instance\n                        });\n                    }\n                });\n                this.render();\n\n                // start the router\n                this.router &&\n                    Backbone.history.start({\n                        root: Galaxy.root,\n                        pushState: true\n                    });\n            },\n\n            render: function() {\n                // TODO: Remove this line after select2 update\n                $(\".select2-hidden-accessible\").remove();\n                this.masthead.render();\n                this.renderMessageBox();\n                this.renderInactivityBox();\n                this.renderPanels();\n                this._checkCommunicationServerOnline();\n                return this;\n            },\n\n            /** Render message box */\n            renderMessageBox: function() {\n                if (this.config.message_box_visible) {\n                    var content = this.config.message_box_content || \"\";\n                    var level = this.config.message_box_class || \"info\";\n                    this.$el.addClass(\"has-message-box\");\n                    this.$messagebox\n                        .attr(\"class\", \"panel-\" + level + \"-message\")\n                        .html(content)\n                        .toggle(!!content)\n                        .show();\n                } else {\n                    this.$el.removeClass(\"has-message-box\");\n                    this.$messagebox.hide();\n                }\n                return this;\n            },\n\n            /** Render inactivity warning */\n            renderInactivityBox: function() {\n                if (this.config.show_inactivity_warning) {\n                    var content = this.config.inactivity_box_content || \"\";\n                    var verificationLink = $(\"<a/>\")\n                        .attr(\"href\", Galaxy.root + \"user/resend_verification\")\n                        .text(\"Resend verification\");\n                    this.$el.addClass(\"has-inactivity-box\");\n                    this.$inactivebox\n                        .html(content + \" \")\n                        .append(verificationLink)\n                        .toggle(!!content)\n                        .show();\n                } else {\n                    this.$el.removeClass(\"has-inactivity-box\");\n                    this.$inactivebox.hide();\n                }\n                return this;\n            },\n\n            /** Render panels */\n            renderPanels: function() {\n                var self = this;\n                _.each(this._panelids, function(panel_id) {\n                    var panel = self.panels[panel_id];\n                    if (panel) {\n                        panel.render();\n                    } else {\n                        self.$(\"#center\").css(panel_id, 0);\n                        self.$(\"#\" + panel_id).hide();\n                    }\n                });\n                return this;\n            },\n\n            /** body template */\n            _template: function() {\n                return [\n                    '<div id=\"everything\">',\n                    '<div id=\"background\"/>',\n                    '<div id=\"masthead\"/>',\n                    '<div id=\"messagebox\"/>',\n                    '<div id=\"inactivebox\" class=\"panel-warning-message\" />',\n                    '<div id=\"left\" />',\n                    '<div id=\"center\" class=\"inbound\" />',\n                    '<div id=\"right\" />',\n                    \"</div>\",\n                    '<div id=\"dd-helper\" />'\n                ].join(\"\");\n            },\n\n            toString: function() {\n                return \"PageLayoutView\";\n            },\n\n            /** Check if the communication server is online and show the icon otherwise hide the icon */\n            _checkCommunicationServerOnline: function() {\n                var host = window.Galaxy.config.communication_server_host,\n                    port = window.Galaxy.config.communication_server_port,\n                    preferences = window.Galaxy.user.attributes.preferences,\n                    $chat_icon_element = $(\"#show-chat-online\");\n                /** Check if the user has deactivated the communication in it's personal settings */\n                if (\n                    preferences &&\n                    [\"1\", \"true\"].indexOf(preferences.communication_server) !=\n                        -1\n                ) {\n                    // See if the configured communication server is available\n                    $.ajax({\n                        url: host + \":\" + port\n                    })\n                        .success(function(data) {\n                            // enable communication only when a user is logged in\n                            if (window.Galaxy.user.id !== null) {\n                                if (\n                                    $chat_icon_element.css(\"visibility\") ===\n                                    \"hidden\"\n                                ) {\n                                    $chat_icon_element.css(\n                                        \"visibility\",\n                                        \"visible\"\n                                    );\n                                }\n                            }\n                        })\n                        .error(function(data) {\n                            // hide the communication icon if the communication server is not available\n                            $chat_icon_element.css(\"visibility\", \"hidden\");\n                        });\n                } else {\n                    $chat_icon_element.css(\"visibility\", \"hidden\");\n                }\n            }\n        });\n\n        return { View: View };\n    }\n);\n"]}