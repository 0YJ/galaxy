{"version":3,"sources":["layout/page.js"],"names":["define","Masthead","Panel","Modal","View","Backbone","extend","el","_panelids","options","self","this","initialize","_","defaults","message_box_content","message_box_visible","message_box_class","Galaxy","modal","display","view","center","Router","config","masthead","$","replaceWith","$el","append","attr","frame","html","_template","$messagebox","each","$inactivebox","panel_id","panel_class_name","charAt","toUpperCase","slice","panel_class","panels","panel_instance","router","history","start","root","pushState","remove","render","renderMessageBox","renderInactivityBox","renderPanels","content","level","addClass","removeClass","hide","show_inactivity_warning","inactivity_box_content","verificationLink","text","show","panel","css","toString","_checkCommunicationServerOnline","host","port","preferences","$chat_icon_element","join","success","data","window","communication_server_port","user","attributes","indexOf","communication_server","ajax","id","error"],"mappings":"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","file":"../../scripts/layout/page.js","sourcesContent":["define( [ 'layout/masthead', 'layout/panel', 'mvc/ui/ui-modal' ], function( Masthead, Panel, Modal ) {\n    var View = Backbone.View.extend({\n        el : 'body',\n        className : 'full-content',\n        _panelids : [ 'left', 'right' ],\n\n        initialize : function( options ) {\n            var self = this;\n            this.config = _.defaults( options.config || {}, {\n                message_box_visible     : false,\n                message_box_content     : '',\n                message_box_class       : 'info',\n                show_inactivity_warning : false,\n                inactivity_box_content  : ''\n            });\n\n            // attach global objects, build mastheads\n            Galaxy.modal = this.modal = new Modal.View();\n            Galaxy.display = this.display = function( view ) { self.center.display( view ) };\n            Galaxy.router = this.router = options.Router && new options.Router( self, options );\n            this.masthead = new Masthead.View( this.config );\n            this.center = new Panel.CenterPanel();\n\n            // build page template\n            this.$el.attr( 'scroll', 'no' );\n            this.$el.html( this._template() );\n            this.$( '#masthead' ).replaceWith( this.masthead.$el );\n            this.$( '#center' ).append( this.center.$el );\n            this.$el.append( this.masthead.frame.$el );\n            this.$el.append( this.modal.$el );\n            this.$messagebox = this.$( '#messagebox' );\n            this.$inactivebox = this.$( '#inactivebox' );\n\n            // build panels\n            this.panels = {};\n            _.each( this._panelids, function( panel_id ) {\n                var panel_class_name = panel_id.charAt( 0 ).toUpperCase() + panel_id.slice( 1 );\n                var panel_class = options[ panel_class_name ];\n                if ( panel_class ) {\n                    var panel_instance = new panel_class( self, options );\n                    self[ panel_instance.toString() ] = panel_instance;\n                    self.panels[ panel_id ] = new Panel.SidePanel({\n                        id      : panel_id,\n                        el      : self.$( '#' + panel_id ),\n                        view    : panel_instance\n                    });\n                }\n            });\n            this.render();\n\n            // start the router\n            this.router && Backbone.history.start({\n                root        : Galaxy.root,\n                pushState   : true,\n            });\n        },\n\n        render : function() {\n            // TODO: Remove this line after select2 update\n            $( '.select2-hidden-accessible' ).remove();\n            this.masthead.render();\n            this.renderMessageBox();\n            this.renderInactivityBox();\n            this.renderPanels();\n            this._checkCommunicationServerOnline();\n            return this;\n        },\n\n        /** Render message box */\n        renderMessageBox : function() {\n            if ( this.config.message_box_visible ){\n                var content = this.config.message_box_content || '';\n                var level = this.config.message_box_class || 'info';\n                this.$el.addClass( 'has-message-box' );\n                this.$messagebox\n                    .attr( 'class', 'panel-' + level + '-message' )\n                    .html( content )\n                    .toggle( !!content )\n                    .show();\n            } else {\n                this.$el.removeClass( 'has-message-box' );\n                this.$messagebox.hide();\n            }\n            return this;\n        },\n\n        /** Render inactivity warning */\n        renderInactivityBox : function() {\n            if( this.config.show_inactivity_warning ){\n                var content = this.config.inactivity_box_content || '';\n                var verificationLink = $( '<a/>' ).attr( 'href', Galaxy.root + 'user/resend_verification' ).text( 'Resend verification' );\n                this.$el.addClass( 'has-inactivity-box' );\n                this.$inactivebox\n                    .html( content + ' ' )\n                    .append( verificationLink )\n                    .toggle( !!content )\n                    .show();\n            } else {\n                this.$el.removeClass( 'has-inactivity-box' );\n                this.$inactivebox.hide();\n            }\n            return this;\n        },\n\n        /** Render panels */\n        renderPanels : function() {\n            var self = this;\n            _.each( this._panelids, function( panel_id ) {\n                var panel = self.panels[ panel_id ];\n                if ( panel ) {\n                    panel.render();\n                } else {\n                    self.$( '#center' ).css( panel_id, 0 );\n                    self.$( '#' + panel_id ).hide();\n                }\n            });\n            return this;\n        },\n\n        /** body template */\n        _template: function() {\n            return [\n                '<div id=\"everything\">',\n                    '<div id=\"background\"/>',\n                    '<div id=\"masthead\"/>',\n                    '<div id=\"messagebox\"/>',\n                    '<div id=\"inactivebox\" class=\"panel-warning-message\" />',\n                    '<div id=\"left\" />',\n                    '<div id=\"center\" class=\"inbound\" />',\n                    '<div id=\"right\" />',\n                '</div>',\n                '<div id=\"dd-helper\" />',\n            ].join('');\n        },\n\n        toString : function() { return 'PageLayoutView' },\n\n        /** Check if the communication server is online and show the icon otherwise hide the icon */\n        _checkCommunicationServerOnline: function(){\n            var host = window.Galaxy.config.communication_server_host,\n                port = window.Galaxy.config.communication_server_port,\n                preferences = window.Galaxy.user.attributes.preferences,\n                $chat_icon_element = $( \"#show-chat-online\" );\n            /** Check if the user has deactivated the communication in it's personal settings */\n            if ( preferences && [ '1', 'true' ].indexOf( preferences.communication_server ) != -1 ) {\n                // See if the configured communication server is available\n                $.ajax({\n                    url: host + \":\" + port,\n                })\n                .success( function( data ) {\n                        // enable communication only when a user is logged in\n                        if( window.Galaxy.user.id !== null ) {\n                            if( $chat_icon_element.css( \"visibility\")  === \"hidden\" ) {\n                                $chat_icon_element.css( \"visibility\", \"visible\" ); \n                            }\n                        }\n                })\n                .error( function( data ) { \n                    // hide the communication icon if the communication server is not available\n                    $chat_icon_element.css( \"visibility\", \"hidden\" ); \n                });\n            } else {\n                $chat_icon_element.css( \"visibility\", \"hidden\" ); \n            }\n        },\n    });\n\n    return { View: View }\n});"]}