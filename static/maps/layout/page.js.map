{"version":3,"sources":["layout/page.js"],"names":["define","Masthead","Panel","Modal","Utils","View","Backbone","extend","el","_panelids","options","self","this","initialize","_","defaults","message_box_content","message_box_visible","message_box_class","Galaxy","modal","display","view","title","setWindowTitle","allow_title_display","Router","masthead","config","router","$el","attr","html","_template","replaceWith","center","$","append","frame","panels","each","panel_id","charAt","toUpperCase","slice","panel_class","panel_class_name","toString","panel_instance","SidePanel","id","render","history","start","root","pushState","remove","renderMessageBox","renderInactivityBox","renderPanels","level","content","addClass","$messagebox","toggle","removeClass","hide","verificationLink","inactivity_box_content","text","$inactivebox","show","panel","css","_checkCommunicationServerOnline","host","port","preferences","$chat_icon_element","url","user","window","communication_server_host","error","data","communication_server_port","attributes","indexOf","communication_server","ajax","success"],"mappings":"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","file":"../../scripts/layout/page.js","sourcesContent":["define( [ 'layout/masthead', 'layout/panel', 'mvc/ui/ui-modal', 'utils/utils' ], function( Masthead, Panel, Modal, Utils) {\n    var View = Backbone.View.extend({\n        el : 'body',\n        className : 'full-content',\n        _panelids : [ 'left', 'right' ],\n\n        initialize : function( options ) {\n            var self = this;\n            this.config = _.defaults( options.config || {}, {\n                message_box_visible     : false,\n                message_box_content     : '',\n                message_box_class       : 'info',\n                show_inactivity_warning : false,\n                inactivity_box_content  : ''\n            });\n\n            // attach global objects, build mastheads\n            Galaxy.modal = this.modal = new Modal.View();\n            Galaxy.display = this.display = function( view ) {\n                if ( view.title ){\n                    Utils.setWindowTitle( view.title );\n                    view.allow_title_display = false;\n                } else {\n                    Utils.setWindowTitle();\n                    view.allow_title_display = true;\n                }\n                self.center.display( view );\n            };\n            Galaxy.router = this.router = options.Router && new options.Router( self, options );\n            this.masthead = new Masthead.View( this.config );\n            this.center = new Panel.CenterPanel();\n\n            // build page template\n            this.$el.attr( 'scroll', 'no' );\n            this.$el.html( this._template() );\n            this.$( '#masthead' ).replaceWith( this.masthead.$el );\n            this.$( '#center' ).append( this.center.$el );\n            this.$el.append( this.masthead.frame.$el );\n            this.$el.append( this.modal.$el );\n            this.$messagebox = this.$( '#messagebox' );\n            this.$inactivebox = this.$( '#inactivebox' );\n\n            // build panels\n            this.panels = {};\n            _.each( this._panelids, function( panel_id ) {\n                var panel_class_name = panel_id.charAt( 0 ).toUpperCase() + panel_id.slice( 1 );\n                var panel_class = options[ panel_class_name ];\n                if ( panel_class ) {\n                    var panel_instance = new panel_class( self, options );\n                    self[ panel_instance.toString() ] = panel_instance;\n                    self.panels[ panel_id ] = new Panel.SidePanel({\n                        id      : panel_id,\n                        el      : self.$( '#' + panel_id ),\n                        view    : panel_instance\n                    });\n                }\n            });\n            this.render();\n\n            // start the router\n            this.router && Backbone.history.start({\n                root        : Galaxy.root,\n                pushState   : true,\n            });\n        },\n\n        render : function() {\n            // TODO: Remove this line after select2 update\n            $( '.select2-hidden-accessible' ).remove();\n            this.masthead.render();\n            this.renderMessageBox();\n            this.renderInactivityBox();\n            this.renderPanels();\n            this._checkCommunicationServerOnline();\n            return this;\n        },\n\n        /** Render message box */\n        renderMessageBox : function() {\n            if ( this.config.message_box_visible ){\n                var content = this.config.message_box_content || '';\n                var level = this.config.message_box_class || 'info';\n                this.$el.addClass( 'has-message-box' );\n                this.$messagebox\n                    .attr( 'class', 'panel-' + level + '-message' )\n                    .html( content )\n                    .toggle( !!content )\n                    .show();\n            } else {\n                this.$el.removeClass( 'has-message-box' );\n                this.$messagebox.hide();\n            }\n            return this;\n        },\n\n        /** Render inactivity warning */\n        renderInactivityBox : function() {\n            if( this.config.show_inactivity_warning ){\n                var content = this.config.inactivity_box_content || '';\n                var verificationLink = $( '<a/>' ).attr( 'href', Galaxy.root + 'user/resend_verification' ).text( 'Resend verification' );\n                this.$el.addClass( 'has-inactivity-box' );\n                this.$inactivebox\n                    .html( content + ' ' )\n                    .append( verificationLink )\n                    .toggle( !!content )\n                    .show();\n            } else {\n                this.$el.removeClass( 'has-inactivity-box' );\n                this.$inactivebox.hide();\n            }\n            return this;\n        },\n\n        /** Render panels */\n        renderPanels : function() {\n            var self = this;\n            _.each( this._panelids, function( panel_id ) {\n                var panel = self.panels[ panel_id ];\n                if ( panel ) {\n                    panel.render();\n                } else {\n                    self.$( '#center' ).css( panel_id, 0 );\n                    self.$( '#' + panel_id ).hide();\n                }\n            });\n            return this;\n        },\n\n        /** body template */\n        _template: function() {\n            return [\n                '<div id=\"everything\">',\n                    '<div id=\"background\"/>',\n                    '<div id=\"masthead\"/>',\n                    '<div id=\"messagebox\"/>',\n                    '<div id=\"inactivebox\" class=\"panel-warning-message\" />',\n                    '<div id=\"left\" />',\n                    '<div id=\"center\" />',\n                    '<div id=\"right\" />',\n                '</div>',\n                '<div id=\"dd-helper\" />',\n            ].join('');\n        },\n\n        toString : function() { return 'PageLayoutView' },\n\n        /** Check if the communication server is online and show the icon otherwise hide the icon */\n        _checkCommunicationServerOnline: function(){\n            var host = window.Galaxy.config.communication_server_host,\n                port = window.Galaxy.config.communication_server_port,\n                preferences = window.Galaxy.user.attributes.preferences,\n                $chat_icon_element = $( \"#show-chat-online\" );\n            /** Check if the user has deactivated the communication in it's personal settings */\n            if ( preferences && [ '1', 'true' ].indexOf( preferences.communication_server ) != -1 ) {\n                // See if the configured communication server is available\n                $.ajax({\n                    url: host + \":\" + port,\n                })\n                .success( function( data ) {\n                        // enable communication only when a user is logged in\n                        if( window.Galaxy.user.id !== null ) {\n                            if( $chat_icon_element.css( \"visibility\")  === \"hidden\" ) {\n                                $chat_icon_element.css( \"visibility\", \"visible\" ); \n                            }\n                        }\n                })\n                .error( function( data ) {\n                    // hide the communication icon if the communication server is not available\n                    $chat_icon_element.css( \"visibility\", \"hidden\" ); \n                });\n            } else {\n                $chat_icon_element.css( \"visibility\", \"hidden\" ); \n            }\n        },\n    });\n\n    return { View: View }\n});\n"]}