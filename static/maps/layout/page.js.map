{"version":3,"sources":["layout/page.js"],"names":["define","Masthead","Panel","Modal","View","Backbone","extend","el","_panelids","options","self","this","initialize","_","defaults","message_box_content","message_box_visible","message_box_class","Galaxy","modal","display","view","center","Router","config","masthead","$","replaceWith","$el","append","attr","frame","html","_template","$messagebox","each","$inactivebox","panel_id","panel_class_name","charAt","toUpperCase","slice","panel_class","panels","panel_instance","render","remove","renderMessageBox","renderInactivityBox","renderPanels","content","level","addClass","removeClass","hide","show_inactivity_warning","inactivity_box_content","verificationLink","root","text","show","panel","css","toString","_checkCommunicationServerOnline","host","port","preferences","$chat_icon_element","join","success","data","window","communication_server_port","user","attributes","indexOf","communication_server","ajax","id","error"],"mappings":"YAAAA,SAAU,kBAAmB,eAAgB,mBAAqB,SAAUC,EAAUC,EAAOC,GAiKzF,OAASC,KAhKEC,SAASD,KAAKE,QADnBC,GAAA,OACFH,UAAOC,eACPE,WAD4B,OAAA,SAG5BC,WAAc,SAAQC,GAGlB,GAAIC,GAAOC,IADfC,MAAAA,OAAaC,EAAAC,SAAAL,EAAUA,YACfC,qBAAJ,EACAK,oBAA0BN,GACtBO,kBAD4C,OAE5CD,yBAF4C,EAG5CE,uBAH4C,KAShDC,OAAOC,MAAQR,KAAKQ,MAAQ,GAAIhB,GAAMC,KADtCc,OAAAE,QAAAT,KAAAS,QAAA,SAAAC,GAAAX,EAAAY,OAAAF,QAAAC,IACAH,OAAOC,OAAQR,KAAKQ,OAAQV,EAAUL,QAAtC,GAAAK,GAAAc,OAAAb,EAAAD,GACAS,KAAAA,SAAA,GAAiBjB,GAAAG,KAAeO,KAAAa,QAAmBd,KAAAA,OAAKY,GAAOF,GAASC,YAExEV,KAAKc,IAAAA,KAAL,SAAoBxB,MACpBU,KAAKW,IAAAA,KAASX,KAAIT,aAKlBS,KAAKe,EAAG,aAAcC,YAAahB,KAAKc,SAASG,KAHjDjB,KAAAe,EAAA,WAAAG,OAAAlB,KAAAW,OAAAM,KACAjB,KAAKiB,IAAIE,OAAMnB,KAAfc,SAAAM,MAAAH,KACAjB,KAAKiB,IAAII,OAAMrB,KAAKsB,MAALL,KACfjB,KAAKe,YAALf,KAAsBgB,EAAAA,eACtBhB,KAAKe,aAAeG,KAAQH,EAAA,gBAG5Bf,KAAKuB,UACLrB,EAAAsB,KAAKC,KAAAA,UAAe,SAAQC,GAKxB,GAAIC,GAAmBD,EAASE,OAAQ,GAAIC,cAAgBH,EAASI,MAAO,GAHhFC,EAAAjC,EAAA6B,EACA,IAAKK,EAAL,CACQ,GAAKnC,GAAW,GAAU6B,GAAW3B,EAAAD,EACrC6B,GAAAA,EAAmBD,YAAAO,EACnBF,EAAAA,OAAAA,GAAuBJ,GAAAA,GAAAA,WACtBI,GAAcL,EACXO,GAAAA,EAAAA,EAAiB,IAAIF,GACzBhC,KAAMkC,OAIFvB,KAAAA,UAGXwB,OAZD,WAoBA,MAtDwBnB,GAAA,8BAAAoB,SAqDxBnC,KAAKc,SAASoB,SAHlBA,KAASE,mBACLpC,KAAAqC,sBACAtB,KAAGuB,eACHtC,KAAKc,kCACAsB,MAILA,iBAAA,WA1DwB,GAAApC,KAAAa,OAAAR,oBAAA,CAgEpB,GAAIkC,GAAUvC,KAAKa,OAAOT,qBAAuB,GAHzDoC,EAAAxC,KAAAa,OAAAP,mBAAA,MACA8B,MAAAA,IAAAA,SAAmB,mBACVpC,KAAKa,YACF0B,KAAAA,QAAe1B,SAAOT,EAAAA,YACtBoC,KAAAA,GACCvB,SAAIwB,GACJlB,WAMLvB,MAAKiB,IAAIyB,YAAa,mBACtB1C,KAAKuB,YAAYoB,MAErB,OAAO3C,OAIXqC,oBAAsB,WAClB,GAAIrC,KAAKa,OAAO+B,wBAAyB,CACrC,GAAIL,GAAUvC,KAAKa,OAAOgC,wBAA0B,GAChDC,EAAmB/B,EAAG,QAASI,KAAM,OAAQZ,OAAOwC,KAAO,4BAAxCC,KAA2E,sBAClGhD,MAAKiB,IAAIwB,SAAU,sBACnBzC,KAAKyB,aAKFJ,KAAAkB,EAAA,KACEtB,OAAIyB,GACJjB,SAAAA,GACRwB,WA7FuBjD,MAAAiB,IAAAyB,YAAA,sBA4FpB1C,KAAKyB,aAAakB,MAM1BL,OAAAA,OAIQA,aAAKY,WACDA,GAAAA,GAAAA,IAUZ5B,OATSpB,GAAAsB,KAFDxB,KAEOH,UAAA,SAAA6B,GACH3B,GAAAA,GAAQA,EAAAiC,OAARN,EACA3B,GACHmD,EAAAhB,UAEEnC,EAAPgB,EAAA,WAAAoC,IAAAzB,EAAA,GA7GwB3B,EAAAgB,EAAA,IAAAW,GAAAiB,UAiHjB3C,MAeXoD,UAAW,WAAa,OAhII,wBAoHhB,yBAcZ,uBACAC,yBACQC,yDACAC,oBACAC,sCACAC,qBACJ,SACKD,0BACDE,KAAA,KACON,SAGNO,WAAS,MAAUC,kBAGRP,gCAAII,WACAA,GAAAA,GAAAA,OAAAA,OAAAA,OAAAA,0BACHF,EAAAM,OAAAtD,OAAAM,OAAAiD,0BACJN,EAAAK,OAAAtD,OAAAwD,KAAAC,WAAAR,YACRC,EACiBG,EAAV,oBAEJH,KAAA,IAAAA,IAAmBN,QAAKc,QAAcT,EAAtCU,sBAfRnD,EAAAoD,MAkBIV,IAAAA,EAAAA,IAAAF,IAEPI,QAAA,SAAAC,GAb6C,OAA1BC,OAAOtD,OAAOwD,KAAKK,IAgB3C,WAAAX,EAAAN,IAAA,eAjKJM,EAAAN,IAAA,aAAA,aAuJiBkB,MAAO,SAAUT,GAEdH,EAAmBN,IAAK,aAAc,YAG1CM,EAAmBN,IAAK,aAAc","file":"../../scripts/layout/page.js","sourcesContent":["define( [ 'layout/masthead', 'layout/panel', 'mvc/ui/ui-modal' ], function( Masthead, Panel, Modal ) {\n    var View = Backbone.View.extend({\n        el : 'body',\n        className : 'full-content',\n        _panelids : [ 'left', 'right' ],\n\n        initialize : function( options ) {\n            var self = this;\n            this.config = _.defaults( options.config || {}, {\n                message_box_visible     : false,\n                message_box_content     : '',\n                message_box_class       : 'info',\n                show_inactivity_warning : false,\n                inactivity_box_content  : ''\n            });\n\n            // attach global objects, build mastheads\n            Galaxy.modal = this.modal = new Modal.View();\n            Galaxy.display = this.display = function( view ) { self.center.display( view ) };\n            Galaxy.router = this.router = options.Router && new options.Router( self, options );\n            this.masthead = new Masthead.View( this.config );\n            this.center = new Panel.CenterPanel();\n\n            // build page template\n            this.$el.attr( 'scroll', 'no' );\n            this.$el.html( this._template() );\n            this.$( '#masthead' ).replaceWith( this.masthead.$el );\n            this.$( '#center' ).append( this.center.$el );\n            this.$el.append( this.masthead.frame.$el );\n            this.$el.append( this.modal.$el );\n            this.$messagebox = this.$( '#messagebox' );\n            this.$inactivebox = this.$( '#inactivebox' );\n\n            // build panels\n            this.panels = {};\n            _.each( this._panelids, function( panel_id ) {\n                var panel_class_name = panel_id.charAt( 0 ).toUpperCase() + panel_id.slice( 1 );\n                var panel_class = options[ panel_class_name ];\n                if ( panel_class ) {\n                    var panel_instance = new panel_class( self, options );\n                    self[ panel_instance.toString() ] = panel_instance;\n                    self.panels[ panel_id ] = new Panel.SidePanel({\n                        id      : panel_id,\n                        el      : self.$( '#' + panel_id ),\n                        view    : panel_instance\n                    });\n                }\n            });\n            this.render();\n        },\n\n        render : function() {\n            // TODO: Remove this line after select2 update\n            $( '.select2-hidden-accessible' ).remove();\n            this.masthead.render();\n            this.renderMessageBox();\n            this.renderInactivityBox();\n            this.renderPanels();\n            this._checkCommunicationServerOnline();\n            return this;\n        },\n\n        /** Render message box */\n        renderMessageBox : function() {\n            if ( this.config.message_box_visible ){\n                var content = this.config.message_box_content || '';\n                var level = this.config.message_box_class || 'info';\n                this.$el.addClass( 'has-message-box' );\n                this.$messagebox\n                    .attr( 'class', 'panel-' + level + '-message' )\n                    .html( content )\n                    .toggle( !!content )\n                    .show();\n            } else {\n                this.$el.removeClass( 'has-message-box' );\n                this.$messagebox.hide();\n            }\n            return this;\n        },\n\n        /** Render inactivity warning */\n        renderInactivityBox : function() {\n            if( this.config.show_inactivity_warning ){\n                var content = this.config.inactivity_box_content || '';\n                var verificationLink = $( '<a/>' ).attr( 'href', Galaxy.root + 'user/resend_verification' ).text( 'Resend verification' );\n                this.$el.addClass( 'has-inactivity-box' );\n                this.$inactivebox\n                    .html( content + ' ' )\n                    .append( verificationLink )\n                    .toggle( !!content )\n                    .show();\n            } else {\n                this.$el.removeClass( 'has-inactivity-box' );\n                this.$inactivebox.hide();\n            }\n            return this;\n        },\n\n        /** Render panels */\n        renderPanels : function() {\n            var self = this;\n            _.each( this._panelids, function( panel_id ) {\n                var panel = self.panels[ panel_id ];\n                if ( panel ) {\n                    panel.render();\n                } else {\n                    self.$( '#center' ).css( panel_id, 0 );\n                    self.$( '#' + panel_id ).hide();\n                }\n            });\n            return this;\n        },\n\n        /** body template */\n        _template: function() {\n            return [\n                '<div id=\"everything\">',\n                    '<div id=\"background\"/>',\n                    '<div id=\"masthead\"/>',\n                    '<div id=\"messagebox\"/>',\n                    '<div id=\"inactivebox\" class=\"panel-warning-message\" />',\n                    '<div id=\"left\" />',\n                    '<div id=\"center\" class=\"inbound\" />',\n                    '<div id=\"right\" />',\n                '</div>',\n                '<div id=\"dd-helper\" />',\n            ].join('');\n        },\n\n        toString : function() { return 'PageLayoutView' },\n\n        /** Check if the communication server is online and show the icon otherwise hide the icon */\n        _checkCommunicationServerOnline: function(){\n            var host = window.Galaxy.config.communication_server_host,\n                port = window.Galaxy.config.communication_server_port,\n                preferences = window.Galaxy.user.attributes.preferences,\n                $chat_icon_element = $( \"#show-chat-online\" );\n            /** Check if the user has deactivated the communication in it's personal settings */\n            if ( preferences && [ '1', 'true' ].indexOf( preferences.communication_server ) != -1 ) {\n                // See if the configured communication server is available\n                $.ajax({\n                    url: host + \":\" + port,\n                })\n                .success( function( data ) {\n                        // enable communication only when a user is logged in\n                        if( window.Galaxy.user.id !== null ) {\n                            if( $chat_icon_element.css( \"visibility\")  === \"hidden\" ) {\n                                $chat_icon_element.css( \"visibility\", \"visible\" ); \n                            }\n                        }\n                })\n                .error( function( data ) { \n                    // hide the communication icon if the communication server is not available\n                    $chat_icon_element.css( \"visibility\", \"hidden\" ); \n                });\n            } else {\n                $chat_icon_element.css( \"visibility\", \"hidden\" ); \n            }\n        },\n    });\n\n    return { View: View }\n});"]}