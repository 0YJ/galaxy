{"version":3,"sources":["layout/router.js"],"names":["_jquery","require","_queryStringParsing","_uiMisc","$","Router","Backbone","extend","initialize","page","options","this","push","url","data","__identifer","Math","random","toString","substr","isEmptyObject","param","navigate","trigger","execute","callback","args","name","Galaxy","debug","queryObj","_queryStringParsing2","default","parse","pop","apply","authenticate","message","persistent"],"mappings":"4IAAA,IAAAA,QAAAC,QAAA,mDAEAC,oBAAAD,QAAA,+FACAE,QAAAF,QAAA,2DAFIG,EAAAA,SAAAA,QAIAC,OAASC,SAASD,OAAOE,QAGzBC,WAAY,SAASC,EAAMC,GACvBC,KAAKF,KAAOA,EAPpBE,KAAAD,QAAAA,GACAE,KAAA,SAAAC,EAAAC,IAYQA,EAAOA,OACFC,YAAcC,KAAKC,SACnBC,SAAS,IACTC,OAAO,GACPf,EAAEgB,cAAcN,KAlBzBV,IAAJ,GAAIA,EAAAA,QAAJ,KAAA,IAAA,IAoBYS,GAAOT,EAAEiB,MAAMP,GAAM,IAhB7BT,OAASC,OAASD,EAClBM,KAAAW,SAAAT,GAAAU,SAAA,KAIIC,QAAKd,SAALe,EAAAC,EAAAC,GAL4BC,OAAAC,MAAA,kBAAAJ,EAAAC,EAAAC,GAyB5B,IAAIG,EAAWC,qBAAAC,QAAaC,MAAMP,EAAKQ,OAjB3CR,EAAAd,KAAAkB,GACML,IACKX,KAAAA,aAAPY,EAAAC,GACKZ,EAALoB,MAAmBnB,KAAKC,GAIpBJ,KAAOA,kBAKduB,aApB+B,SAAAV,EAAAC,GAqC5B,OAAO,GAbPC,cAAOC,WACPlB,KAAImB,KAAAA,QACJJ,IAAKd,SAAAA,QAAKkB,SACNL,OAAU,SACNY,QACAZ,sEADJa,YAEO,wBAMfF","file":"../../scripts/layout/router.js","sourcesContent":["import jQuery from \"jquery\";\nvar $ = jQuery;\nimport QUERY_STRING from \"utils/query-string-parsing\";\nimport Ui from \"mvc/ui/ui-misc\";\n\nvar Router = Backbone.Router.extend({\n    // TODO: not many client routes at this point - fill and remove from server.\n    // since we're at root here, this may be the last to be routed entirely on the client.\n    initialize: function(page, options) {\n        this.page = page;\n        this.options = options;\n    },\n\n    /** helper to push a new navigation state */\n    push: function(url, data) {\n        data = data || {};\n        data.__identifer = Math.random()\n            .toString(36)\n            .substr(2);\n        if (!$.isEmptyObject(data)) {\n            url += url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n            url += $.param(data, true);\n        }\n        Galaxy.params = data;\n        this.navigate(url, { trigger: true });\n    },\n\n    /** override to parse query string into obj and send to each route */\n    execute: function(callback, args, name) {\n        Galaxy.debug(\"router execute:\", callback, args, name);\n        var queryObj = QUERY_STRING.parse(args.pop());\n        args.push(queryObj);\n        if (callback) {\n            if (this.authenticate(args, name)) {\n                callback.apply(this, args);\n            } else {\n                this.access_denied();\n            }\n        }\n    },\n\n    authenticate: function(args, name) {\n        return true;\n    },\n\n    access_denied: function() {\n        this.page.display(\n            new Ui.Message({\n                status: \"danger\",\n                message:\n                    \"You must be logged in with proper credentials to make this request.\",\n                persistent: true\n            })\n        );\n    }\n});\n\nexport default Router;\n"]}