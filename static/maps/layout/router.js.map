{"version":3,"sources":["layout/router.js"],"names":["jQuery","require","$","Ui","Router","extend","initialize","page","options","this","push","url","data","__identifer","Math","toString","substr","random","isEmptyObject","navigate","trigger","execute","callback","args","name","Galaxy","debug","QUERY_STRING","queryObj","apply","authenticate","access_denied","display","Message","status","message","persistent","module","exports"],"mappings":"YAAA,IAAIA,QAASC,QAAS,UAClBC,EAAIF,OADJA,aAASC,QAAS,8BAClBC,GAAIF,QADR,kBAGIG,OAAKF,SAASG,OAAAC,QAGdC,WAAA,SAAAC,EAAAC,GACAC,KAAAF,KAAAA,EACAD,KAAAA,QAAaE,GAMbE,KAAM,SAAUC,EAAKC,GADrBA,EAAAA,MACAF,EAAMG,YAAAC,KAAeF,SAAOG,SAAA,IAAAC,OAAA,GACxBJ,EAAOA,cAAPA,KACAA,IAAiCG,GAA5BF,EAAAA,QAAmBI,KAASF,IAAd,IACdJ,GAAGO,EAAAA,MAAFN,GAAN,IAEID,OAAAA,UACHF,KAAAU,SAAAR,GAAAS,SAAA,KAMLC,QAAS,SAAUC,EAAUC,EAAMC,GADnCC,OAAAC,MAAA,kBAAAJ,EAAAC,EAAAC,EACAH,IAAAA,GAASM,aAAUL,MAAUC,EAAMC,MAC/BC,GAAAA,KAAOC,GACHE,IACJnB,KAAWmB,aAAXL,EAAAC,GACIF,EAAUO,MAAApB,KAAAc,GAEND,KAAAA,kBAKXQ,aAhC+B,SAAAP,EAAAC,GAmC5B,OAAO,GACVO,cApC+B,WAuC5BtB,KAAKF,KAAKyB,QAAS,GAAI7B,IAAG8B,SAAWC,OAAQ,SAAUC,QAAS,sEAAuEC,YAAY,OAvCvHC,QAApCC,QAAAlC","file":"../../scripts/layout/router.js","sourcesContent":["var jQuery = require( 'jquery' ),\n    $ = jQuery,\n    QUERY_STRING = require( 'utils/query-string-parsing' ),\n    Ui = require( 'mvc/ui/ui-misc' );\n\nvar Router = Backbone.Router.extend({\n    // TODO: not many client routes at this point - fill and remove from server.\n    // since we're at root here, this may be the last to be routed entirely on the client.\n    initialize : function( page, options ){\n        this.page = page;\n        this.options = options;\n    },\n\n    /** helper to push a new navigation state */\n    push: function( url, data ) {\n        data = data || {};\n        data.__identifer = Math.random().toString( 36 ).substr( 2 );\n        if ( !$.isEmptyObject( data ) ) {\n            url += url.indexOf( '?' ) == -1 ? '?' : '&';\n            url += $.param( data , true );\n        }\n        Galaxy.params = {};\n        this.navigate( url, { 'trigger': true } );\n    },\n\n    /** override to parse query string into obj and send to each route */\n    execute: function( callback, args, name ){\n        Galaxy.debug( 'router execute:', callback, args, name );\n        var queryObj = QUERY_STRING.parse( args.pop() );\n        args.push( queryObj );\n        if( callback ){\n            if ( this.authenticate( args, name ) ) {\n                callback.apply( this, args );\n            } else {\n                this.access_denied();\n            }\n        }\n    },\n\n    authenticate: function( args, name ) {\n        return true;\n    },\n\n    access_denied: function() {\n        this.page.display( new Ui.Message( { status: 'danger', message: 'You must be logged in with proper credentials to make this request.', persistent: true } ) );\n    }\n});\n\nmodule.exports = Router"]}