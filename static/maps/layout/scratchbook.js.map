{"version":3,"sources":["layout/scratchbook.js"],"names":["Backbone","View","extend","initialize","options","self","this","frames","_uiFrames2","default","visible","setElement","$el","buttonActive","collection","add","id","icon","tooltip","_localization2","onclick","active","set","toggle","show_note","note_cls","hide","onbeforeunload","e","show","on","length","buttonLoad","note","history_cache","addDataset","dataset_id","currHistoryPanel","Galaxy","historyId","history_id","name","model","get","dataset_ids","each","push","current_dataset","history_details","dataset","dataset_list","pos","indexOf","_findDataset","_loadDatasetOffset","offset","frame","new_dataset_id","new_dataset","_loadDataset","trigger","config","menu","disabled","then","url","callback","content","Dataset","embedded","height","data_type","root","title","addTrackster","fetch","_data2","createTabularDatasetChunkedView","TabularDataset","toJSON","frame_config","viz","container","dbkey","viz_id","_","d","hda_ldda","view","type","view_config","parent_elt","open","$galaxy_main","window","parent","latest_revision","target","drawables","location","ui","create_visualization","viewport","bookmarks","noscratchbook","$","document","find","attr"],"mappings":"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","file":"../../scripts/layout/scratchbook.js","sourcesContent":["/** Frame manager uses the ui-frames to create the scratch book masthead icon and functionality **/\nimport Frames from \"mvc/ui/ui-frames\";\nimport DATA from \"mvc/dataset/data\";\nimport visualization from \"viz/visualization\";\nimport trackster from \"viz/trackster\";\nimport _l from \"utils/localization\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        options = options || {};\n        this.frames = new Frames.View({ visible: false });\n        this.setElement(this.frames.$el);\n        this.buttonActive = options.collection.add({\n            id: \"enable-scratchbook\",\n            icon: \"fa-th\",\n            tooltip: _l(\"Enable/Disable Scratchbook\"),\n            onclick: function() {\n                self.active = !self.active;\n                self.buttonActive.set({\n                    toggle: self.active,\n                    show_note: self.active,\n                    note_cls: self.active && \"fa fa-check\"\n                });\n                !self.active && self.frames.hide();\n            },\n            onbeforeunload: function() {\n                if (self.frames.length() > 0) {\n                    return (\n                        \"You opened \" +\n                        self.frames.length() +\n                        \" frame(s) which will be lost.\"\n                    );\n                }\n            }\n        });\n        this.buttonLoad = options.collection.add({\n            id: \"show-scratchbook\",\n            icon: \"fa-eye\",\n            tooltip: _l(\"Show/Hide Scratchbook\"),\n            show_note: true,\n            visible: false,\n            onclick: function(e) {\n                self.frames.visible ? self.frames.hide() : self.frames.show();\n            }\n        });\n        this.frames\n            .on(\"add remove\", function() {\n                this.visible && this.length() == 0 && this.hide();\n                self.buttonLoad.set({\n                    note: this.length(),\n                    visible: this.length() > 0\n                });\n            })\n            .on(\"show hide \", function() {\n                self.buttonLoad.set({\n                    toggle: this.visible,\n                    icon: (this.visible && \"fa-eye\") || \"fa-eye-slash\"\n                });\n            });\n        this.history_cache = {};\n    },\n\n    /** Add a dataset to the frames */\n    addDataset: function(dataset_id) {\n        var self = this;\n        var current_dataset = null;\n        if (Galaxy && Galaxy.currHistoryPanel) {\n            var history_id = Galaxy.currHistoryPanel.collection.historyId;\n            this.history_cache[history_id] = {\n                name: Galaxy.currHistoryPanel.model.get(\"name\"),\n                dataset_ids: []\n            };\n            Galaxy.currHistoryPanel.collection.each(model => {\n                !model.get(\"deleted\") &&\n                    model.get(\"visible\") &&\n                    self.history_cache[history_id].dataset_ids.push(\n                        model.get(\"id\")\n                    );\n            });\n        }\n        var _findDataset = (dataset, offset) => {\n            if (dataset) {\n                var history_details =\n                    self.history_cache[dataset.get(\"history_id\")];\n                if (history_details && history_details.dataset_ids) {\n                    var dataset_list = history_details.dataset_ids;\n                    var pos = dataset_list.indexOf(dataset.get(\"id\"));\n                    if (\n                        pos !== -1 &&\n                        pos + offset >= 0 &&\n                        pos + offset < dataset_list.length\n                    ) {\n                        return dataset_list[pos + offset];\n                    }\n                }\n            }\n        };\n        var _loadDatasetOffset = (dataset, offset, frame) => {\n            var new_dataset_id = _findDataset(dataset, offset);\n            if (new_dataset_id) {\n                self._loadDataset(new_dataset_id, (new_dataset, config) => {\n                    current_dataset = new_dataset;\n                    frame.model.set(config);\n                });\n            } else {\n                frame.model.trigger(\"change\");\n            }\n        };\n        this._loadDataset(dataset_id, (dataset, config) => {\n            current_dataset = dataset;\n            self.add(\n                _.extend(\n                    {\n                        menu: [\n                            {\n                                icon: \"fa fa-chevron-circle-left\",\n                                tooltip: \"Previous in History\",\n                                onclick: function(frame) {\n                                    _loadDatasetOffset(\n                                        current_dataset,\n                                        -1,\n                                        frame\n                                    );\n                                },\n                                disabled: function() {\n                                    return !_findDataset(current_dataset, -1);\n                                }\n                            },\n                            {\n                                icon: \"fa fa-chevron-circle-right\",\n                                tooltip: \"Next in History\",\n                                onclick: function(frame) {\n                                    _loadDatasetOffset(\n                                        current_dataset,\n                                        1,\n                                        frame\n                                    );\n                                },\n                                disabled: function() {\n                                    return !_findDataset(current_dataset, 1);\n                                }\n                            }\n                        ]\n                    },\n                    config\n                )\n            );\n        });\n    },\n\n    _loadDataset: function(dataset_id, callback) {\n        var self = this;\n        var dataset = new DATA.Dataset({ id: dataset_id });\n        $.when(dataset.fetch()).then(() => {\n            var is_tabular = _.find(\n                [\"tabular\", \"interval\"],\n                data_type => dataset.get(\"data_type\").indexOf(data_type) !== -1\n            );\n            var title = dataset.get(\"name\");\n            var history_details = self.history_cache[dataset.get(\"history_id\")];\n            if (history_details) {\n                title = history_details.name + \": \" + title;\n            }\n            callback(\n                dataset,\n                is_tabular\n                    ? {\n                          title: title,\n                          url: null,\n                          content: DATA.createTabularDatasetChunkedView({\n                              model: new DATA.TabularDataset(dataset.toJSON()),\n                              embedded: true,\n                              height: \"100%\"\n                          }).$el\n                      }\n                    : {\n                          title: title,\n                          url:\n                              Galaxy.root +\n                              \"datasets/\" +\n                              dataset_id +\n                              \"/display/?preview=True\",\n                          content: null\n                      }\n            );\n        });\n    },\n\n    /** Add a trackster visualization to the frames. */\n    addTrackster: function(viz_id) {\n        var self = this;\n        var viz = new visualization.Visualization({ id: viz_id });\n        $.when(viz.fetch()).then(() => {\n            var ui = new trackster.TracksterUI(Galaxy.root);\n\n            // Construct frame config based on dataset's type.\n            var frame_config = {\n                title: viz.get(\"name\"),\n                type: \"other\",\n                content: function(parent_elt) {\n                    // Create view config.\n                    var view_config = {\n                        container: parent_elt,\n                        name: viz.get(\"title\"),\n                        id: viz.id,\n                        // FIXME: this will not work with custom builds b/c the dbkey needed to be encoded.\n                        dbkey: viz.get(\"dbkey\"),\n                        stand_alone: false\n                    };\n\n                    var latest_revision = viz.get(\"latest_revision\");\n                    var drawables = latest_revision.config.view.drawables;\n\n                    // Set up datasets in drawables.\n                    _.each(drawables, d => {\n                        d.dataset = {\n                            hda_ldda: d.hda_ldda,\n                            id: d.dataset_id\n                        };\n                    });\n                    view = ui.create_visualization(\n                        view_config,\n                        latest_revision.config.viewport,\n                        latest_revision.config.view.drawables,\n                        latest_revision.config.bookmarks,\n                        false\n                    );\n                }\n            };\n            self.add(frame_config);\n        });\n    },\n\n    /** Add and display a new frame/window based on options. */\n    add: function(options) {\n        if (options.target == \"_blank\") {\n            window.open(options.url);\n        } else if (\n            options.target == \"_top\" ||\n            options.target == \"_parent\" ||\n            options.target == \"_self\"\n        ) {\n            window.location = options.url;\n        } else if (!this.active || options.noscratchbook) {\n            var $galaxy_main = $(window.parent.document).find(\"#galaxy_main\");\n            if (options.target == \"galaxy_main\" || options.target == \"center\") {\n                if ($galaxy_main.length === 0) {\n                    window.location =\n                        options.url +\n                        (options.url.indexOf(\"?\") == -1 ? \"?\" : \"&\") +\n                        \"use_panels=True\";\n                } else {\n                    $galaxy_main.attr(\"src\", options.url);\n                }\n            } else window.location = options.url;\n        } else {\n            this.frames.add(options);\n        }\n    }\n});\n"]}