{"version":3,"sources":["ui/loading-indicator.js"],"names":["$","$where","options","render","html","self","cover","$indicator","css","$text","children","z-index","top","bottom","left","right","opacity","background-color","text-align","margin-top","margin","color","font-style","this","_jquery2","default","extend","show","msg","speed","parent","insertBefore","message","fadeIn","callback","hide","find","fadeOut","length","remove"],"mappings":"0LAGIA,EAAAA,EAAAA,kBAEJ,SAA0BC,EAAQC,GAJjC,SAAAC,IAeO,IAAIC,GAbRJ,kCACJ,uCACA,oDACQK,4DACJ,SACAH,UAEQI,KAAAA,MAeAC,EAAaP,EAAEI,GAVdD,OACDC,IAYQF,EAAQM,MAHhBD,SAAeH,UAkCnB,OA3BIK,EAAQF,SAAWG,2BAEvBR,EAAIA,OACAK,EAAAA,KACII,UAAA,EACAC,IAAAA,EAAKX,IAAOO,OACZK,OAAAA,EAAQZ,IAAOO,UACfM,KAAAA,EAAMb,IAAOO,QACbO,MAAAA,EAAOd,IAAOO,SACdQ,QAAAA,GACAC,mBAAA,QACAC,aAAA,WAEJT,EAAQF,SAAWG,2BAASF,KACxBW,aAAA,UAGJV,EAAQF,SAAWG,2BAASF,KACxBY,OAAAA,oBACAJ,QAAAA,OACAK,MAAAA,SAEJZ,SAAMC,8BAASF,KACXY,OAAAA,kBACAE,aAAA,WAGRf,EArDJ,IAAIF,EAAOkB,KA8Ff,OA5FIrB,EAAUsB,EAAAC,QAAOC,QAETpB,OAAO,GAEXJ,OAkDJG,EAAAA,KAAKsB,SAAOC,EAASA,EAAKC,GAe1BxB,OAdIuB,EAAAA,GAAMA,aACNC,EAAAA,GAAQA,OAER5B,EAIA6B,SACAzB,KAAKE,sBACLF,SAEAA,EAAAE,WAAAJ,IAAA4B,aAAA9B,GACHI,EAbD2B,QAAAJ,GAWIvB,EAAKE,WAAW0B,OAAOJ,EAAOK,GAI7BF,GAAL3B,EAAK2B,QAAU,SAASJ,GAIxBvB,EAAK8B,WAAOC,KAAA,KAASP,KAAOK,IAGpB7B,EAAAA,KAAAA,SAAKE,EAAW8B,GAc3B,OAbehC,EAAAA,GAAKE,OACLF,EAAAE,YAAI2B,EAAU3B,WAAA+B,OACVJ,EAAAA,WAAAA,QAAAA,EAAAA,WACH7B,EAAAE,WAAAgC,SAJLL,GAMGA,MAINA,GACDA,IAGP7B,GAEDA","file":"../../scripts/ui/loading-indicator.js","sourcesContent":["import jQuery from \"jquery\";\n(\"use_strict\");\n\nvar $ = jQuery;\n//TODO: too specific to history panel\nfunction LoadingIndicator($where, options) {\n    var self = this;\n    // defaults\n    options = jQuery.extend(\n        {\n            cover: false\n        },\n        options || {}\n    );\n\n    function render() {\n        var html = [\n            '<div class=\"loading-indicator\">',\n            '<div class=\"loading-indicator-text\">',\n            '<span class=\"fa fa-spinner fa-spin fa-lg\"></span>',\n            '<span class=\"loading-indicator-message\">loading...</span>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\\n\");\n\n        var $indicator = $(html)\n                .hide()\n                .css(\n                    options.css || {\n                        position: \"fixed\"\n                    }\n                ),\n            $text = $indicator.children(\".loading-indicator-text\");\n\n        if (options.cover) {\n            $indicator.css({\n                \"z-index\": 2,\n                top: $where.css(\"top\"),\n                bottom: $where.css(\"bottom\"),\n                left: $where.css(\"left\"),\n                right: $where.css(\"right\"),\n                opacity: 0.5,\n                \"background-color\": \"white\",\n                \"text-align\": \"center\"\n            });\n            $text = $indicator.children(\".loading-indicator-text\").css({\n                \"margin-top\": \"20px\"\n            });\n        } else {\n            $text = $indicator.children(\".loading-indicator-text\").css({\n                margin: \"12px 0px 0px 10px\",\n                opacity: \"0.85\",\n                color: \"grey\"\n            });\n            $text.children(\".loading-indicator-message\").css({\n                margin: \"0px 8px 0px 0px\",\n                \"font-style\": \"italic\"\n            });\n        }\n        return $indicator;\n    }\n\n    self.show = function(msg, speed, callback) {\n        msg = msg || \"loading...\";\n        speed = speed || \"fast\";\n        // remove previous\n        $where\n            .parent()\n            .find(\".loading-indicator\")\n            .remove();\n        // since position is fixed - we insert as sibling\n        self.$indicator = render().insertBefore($where);\n        self.message(msg);\n        self.$indicator.fadeIn(speed, callback);\n        return self;\n    };\n\n    self.message = function(msg) {\n        self.$indicator.find(\"i\").text(msg);\n    };\n\n    self.hide = function(speed, callback) {\n        speed = speed || \"fast\";\n        if (self.$indicator && self.$indicator.length) {\n            self.$indicator.fadeOut(speed, function() {\n                self.$indicator.remove();\n                if (callback) {\n                    callback();\n                }\n            });\n        } else {\n            if (callback) {\n                callback();\n            }\n        }\n        return self;\n    };\n    return self;\n}\n\n//============================================================================\nexport default LoadingIndicator;\n"]}