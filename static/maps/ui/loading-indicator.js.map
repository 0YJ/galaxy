{"version":3,"sources":["ui/loading-indicator.js"],"names":["root","factory","define","amd","undefined","$where","options","render","html","position","join","$indicator","$","top","bottom","left","right","css","self","children","$text","z-index","margin","opacity","color","background-color","margin-top","show","msg","parent","font-style","this","LoadingIndicator","cover","speed","callback","message","hide","remove","insertBefore","length","fadeOut"],"mappings":"mCAAA,SAAUA,EAAMC,GACU,mBAAXC,QAAyBA,OAAOC,IAD9CD,UAAAD,GAGOC,EAAAA,iBAAAD,IAHR,MAAAG,EAOK,WAqGD,OAnGA,SAAAC,EAAAC,GAaI,SAAAC,IACI,IAAAC,GACI,kCAQJ,uCAIgBC,oDADW,4DAH3B,SAHI,UAYJC,KAAA,MAEQC,EAAAC,EAAAJ,GACAK,OACAC,IACAC,EAAMV,MACNW,SAAcC,UAiCtBC,OA9BQP,EAAAQ,SAAc,2BAElBC,EAAAA,OACIT,EAAAM,KADuDI,UAA3D,EAXJR,IAcOR,EAAAY,IAAA,OACHG,OAAQT,EAAAA,IAAWQ,UACfG,KAAAA,EAAQL,IAAA,QACRM,MAAAA,EAASN,IAAA,SACTO,QAAAA,GAHuDC,mBAA3D,QAKAL,aAAA,WAEIT,EAAAQ,SAAc,2BAAAF,KAF+BS,aAAjD,UAMPf,EAAAQ,SAAA,2BAAAF,KAVWK,OAAQ,oBAYfK,QAAO,OACRC,MAAMA,SAENT,SAAA,8BAAAF,KACAZ,OACKwB,kBAGLC,aAAA,WAGAZ,EAhFZ,IAAAA,EAUSa,KA8FD,OA5FJzB,EAAS0B,OAAAA,QAELC,OAAA,GAGQA,OAoDRf,EAAKS,KAAO,SAASC,EAAKM,EAAOC,GA0BpB,OAXbjB,EAAKkB,GAAL,aACIlB,EAAAA,GAAKP,OAZLN,EAeCgC,SACDH,KAAAA,sBACAI,SAEQpB,EAAAA,WAAKP,IAAL4B,aAAAlC,GACAa,EAAAkB,QAAAR,GACIO,EAAAA,WAAAA,OAAAA,EAAAA,GACHjB,GAGLA,EAAAkB,QAAA,SAAAR,GACIO,EAAAA,WAAAA,KAAAA,KAAAA,KAAAA,IAGRjB,EAAAmB,KAAA,SAAAH,EAAAC,GAAA,OACHD,EAfDA,GAAA,OAgBAhB,EAAOA,YAAPA,EAAAP,WAAA6B,OACHtB,EAAAP,WAAA8B,QAAAP,EAAA,WAbehB,EAAKP,WAAW2B,SAehCH,GACOH,MAVSG,GACAA,IAGDjB,GAEJA","file":"../../scripts/ui/loading-indicator.js","sourcesContent":["(function(root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else {\n        // Browser globals\n        root.LoadingIndicator = factory();\n    }\n\n    //============================================================================\n})(this, function() {\n    //TODO: too specific to history panel\n    function LoadingIndicator($where, options) {\n        var self = this;\n        // defaults\n        options = jQuery.extend(\n            {\n                cover: false\n            },\n            options || {}\n        );\n\n        function render() {\n            var html = [\n                '<div class=\"loading-indicator\">',\n                '<div class=\"loading-indicator-text\">',\n                '<span class=\"fa fa-spinner fa-spin fa-lg\"></span>',\n                '<span class=\"loading-indicator-message\">loading...</span>',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\\n\");\n\n            var $indicator = $(html)\n                    .hide()\n                    .css(\n                        options.css || {\n                            position: \"fixed\"\n                        }\n                    ),\n                $text = $indicator.children(\".loading-indicator-text\");\n\n            if (options.cover) {\n                $indicator.css({\n                    \"z-index\": 2,\n                    top: $where.css(\"top\"),\n                    bottom: $where.css(\"bottom\"),\n                    left: $where.css(\"left\"),\n                    right: $where.css(\"right\"),\n                    opacity: 0.5,\n                    \"background-color\": \"white\",\n                    \"text-align\": \"center\"\n                });\n                $text = $indicator.children(\".loading-indicator-text\").css({\n                    \"margin-top\": \"20px\"\n                });\n            } else {\n                $text = $indicator.children(\".loading-indicator-text\").css({\n                    margin: \"12px 0px 0px 10px\",\n                    opacity: \"0.85\",\n                    color: \"grey\"\n                });\n                $text.children(\".loading-indicator-message\").css({\n                    margin: \"0px 8px 0px 0px\",\n                    \"font-style\": \"italic\"\n                });\n            }\n            return $indicator;\n        }\n\n        self.show = function(msg, speed, callback) {\n            msg = msg || \"loading...\";\n            speed = speed || \"fast\";\n            // remove previous\n            $where\n                .parent()\n                .find(\".loading-indicator\")\n                .remove();\n            // since position is fixed - we insert as sibling\n            self.$indicator = render().insertBefore($where);\n            self.message(msg);\n            self.$indicator.fadeIn(speed, callback);\n            return self;\n        };\n\n        self.message = function(msg) {\n            self.$indicator.find(\"i\").text(msg);\n        };\n\n        self.hide = function(speed, callback) {\n            speed = speed || \"fast\";\n            if (self.$indicator && self.$indicator.length) {\n                self.$indicator.fadeOut(speed, function() {\n                    self.$indicator.remove();\n                    if (callback) {\n                        callback();\n                    }\n                });\n            } else {\n                if (callback) {\n                    callback();\n                }\n            }\n            return self;\n        };\n        return self;\n    }\n\n    //============================================================================\n    return LoadingIndicator;\n});\n"]}