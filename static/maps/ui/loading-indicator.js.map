{"version":3,"sources":["ui/loading-indicator.js"],"names":["root","factory","define","amd","LoadingIndicator","this","$where","options","render","html","join","$indicator","$","hide","css","position","$text","children","cover","z-index","top","bottom","left","right","opacity","background-color","text-align","margin-top","margin","color","font-style","self","jQuery","extend","show","msg","speed","callback","parent","find","remove","insertBefore","message","fadeIn","text","length","fadeOut"],"mappings":"CAAC,SAAUA,EAAMC,GACS,kBAAXC,SAAyBA,OAAOC,IAEvCD,UAAWD,GAGXD,EAAKI,iBAAmBH,KAI9BI,KAAM,WAEJ,QAASD,GAAkBE,EAAQC,GAQ/B,QAASC,KACL,GAAIC,IACA,kCACI,uCACI,oDACA,4DACJ,SACJ,UACFC,KAAM,MAEJC,EAAaC,EAAGH,GAAOI,OAAOC,IAAKP,EAAQO,MACvCC,SAAc,UAElBC,EAAQL,EAAWM,SAAU,0BA4BjC,OA1BIV,GAAQW,OACRP,EAAWG,KACPK,UAAc,EACdC,IAAcd,EAAOQ,IAAK,OAC1BO,OAAcf,EAAOQ,IAAK,UAC1BQ,KAAchB,EAAOQ,IAAK,QAC1BS,MAAcjB,EAAOQ,IAAK,SAC1BU,QAAc,GACdC,mBAAoB,QACpBC,aAAc,WAElBV,EAAQL,EAAWM,SAAU,2BAA4BH,KACrDa,aAAsB,WAI1BX,EAAQL,EAAWM,SAAU,2BAA4BH,KACrDc,OAAsB,oBACtBJ,QAAsB,OACtBK,MAAsB,SAE1Bb,EAAMC,SAAU,8BAA+BH,KAC3Cc,OAAkB,kBAClBE,aAAkB,YAGnBnB,EA/CX,GAAIoB,GAAO1B,IA8EX,OA5EAE,GAAUyB,OAAOC,QACbf,OAAc,GACfX,OA8CHwB,EAAKG,KAAO,SAAUC,EAAKC,EAAOC,GAS9B,MARAF,GAAMA,GAAO,aACbC,EAAQA,GAAS,OAEjB9B,EAAOgC,SAASC,KAAM,sBAAuBC,SAE7CT,EAAKpB,WAAaH,IAASiC,aAAcnC,GACzCyB,EAAKW,QAASP,GACdJ,EAAKpB,WAAWgC,OAAQP,EAAOC,GACxBN,GAGXA,EAAKW,QAAU,SAAUP,GACrBJ,EAAKpB,WAAW4B,KAAM,KAAMK,KAAMT,IAGtCJ,EAAKlB,KAAO,SAAUuB,EAAOC,GAUzB,MATAD,GAAQA,GAAS,OACbL,EAAKpB,YAAcoB,EAAKpB,WAAWkC,OACnCd,EAAKpB,WAAWmC,QAASV,EAAO,WAC5BL,EAAKpB,WAAW6B,SACZH,GAAYA,MAGhBA,GAAYA,IAEbN,GAEJA,EAIX,MAAO3B","file":"../../scripts/ui/loading-indicator.js","sourcesContent":["(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else {\n        // Browser globals\n        root.LoadingIndicator = factory();\n    }\n\n//============================================================================\n}(this, function () {\n    //TODO: too specific to history panel\n    function LoadingIndicator( $where, options ){\n\n        var self = this;\n        // defaults\n        options = jQuery.extend({\n            cover       : false\n        }, options || {} );\n\n        function render(){\n            var html = [\n                '<div class=\"loading-indicator\">',\n                    '<div class=\"loading-indicator-text\">',\n                        '<span class=\"fa fa-spinner fa-spin fa-lg\"></span>',\n                        '<span class=\"loading-indicator-message\">loading...</span>',\n                    '</div>',\n                '</div>'\n            ].join( '\\n' );\n\n            var $indicator = $( html ).hide().css( options.css || {\n                    position    : 'fixed'\n                }),\n                $text = $indicator.children( '.loading-indicator-text' );\n\n            if( options.cover ){\n                $indicator.css({\n                    'z-index'   : 2,\n                    top         : $where.css( 'top' ),\n                    bottom      : $where.css( 'bottom' ),\n                    left        : $where.css( 'left' ),\n                    right       : $where.css( 'right' ),\n                    opacity     : 0.5,\n                    'background-color': 'white',\n                    'text-align': 'center'\n                });\n                $text = $indicator.children( '.loading-indicator-text' ).css({\n                    'margin-top'        : '20px'\n                });\n\n            } else {\n                $text = $indicator.children( '.loading-indicator-text' ).css({\n                    margin              : '12px 0px 0px 10px',\n                    opacity             : '0.85',\n                    color               : 'grey'\n                });\n                $text.children( '.loading-indicator-message' ).css({\n                    margin          : '0px 8px 0px 0px',\n                    'font-style'    : 'italic'\n                });\n            }\n            return $indicator;\n        }\n\n        self.show = function( msg, speed, callback ){\n            msg = msg || 'loading...';\n            speed = speed || 'fast';\n            // remove previous\n            $where.parent().find( '.loading-indicator' ).remove();\n            // since position is fixed - we insert as sibling\n            self.$indicator = render().insertBefore( $where );\n            self.message( msg );\n            self.$indicator.fadeIn( speed, callback );\n            return self;\n        };\n\n        self.message = function( msg ){\n            self.$indicator.find( 'i' ).text( msg );\n        };\n\n        self.hide = function( speed, callback ){\n            speed = speed || 'fast';\n            if( self.$indicator && self.$indicator.length ){\n                self.$indicator.fadeOut( speed, function(){\n                    self.$indicator.remove();\n                    if( callback ){ callback(); }\n                });\n            } else {\n                if( callback ){ callback(); }\n            }\n            return self;\n        };\n        return self;\n    }\n\n//============================================================================\n    return LoadingIndicator;\n}));\n"]}