{"version":3,"sources":["ui/loading-indicator.js"],"names":["root","factory","define","amd","LoadingIndicator","undefined","$where","options","html","$indicator","position","join","$text","$","hide","css","top","children","left","right","opacity","bottom","background-color","text-align","margin","color","font-style","speed","self","extend","cover","render","insertBefore","message","msg","fadeIn","parent","find","remove","callback","fadeOut","length"],"mappings":"cAAC,SAAUA,EAAMC,GACS,kBAAXC,SAAyBA,OAAOC,IAAvCD,UAAOA,GAAXF,EAGOI,iBAAAH,SAJVI,GAUO,WAVP,QAAAD,GAUmBE,EAAAC,GAMY,QAErBA,KAGC,GAAIC,IADR,kCACQA,uCAGQ,oDAMRC,4DACIC,SADR,UAAAC,KAGIC,MAEAL,EAAJM,EAAmBL,GAAAM,OAAAC,IAAAR,EAAAQ,MACfN,SAAe,UAEXO,EAAAA,EAAcC,SAFH,0BA+BnB,OA3BQC,GAAAA,OACAC,EAAcb,KACdc,UANW,EAOXJ,IAAAV,EAAoBS,IAAA,OACpBM,OAAcf,EAAAS,IAAA,UARlBG,KAAAZ,EAAAS,IAAA,QAUAH,MAAQH,EAAWQ,IAAU,SACzBG,QAAsB,GAD1BE,mBAAA,QAIGC,aAAA,WAECC,EAAAA,EAAsBP,SAAA,2BADmCF,KAEzDK,aAFyD,WAMzDI,EAAAA,EAAkBP,SAD6B,2BAAAF,KAE/CS,OAAkB,oBAFtBJ,QAAA,OAIHK,MAAA,SAEJb,EAAAK,SAAA,8BAAAF,KALWS,OAAkB,kBAOlBE,aAAeC,YAGvBlB,EAvDR,GAAAmB,GAASxB,IAgFL,OA9EAG,GAAIqB,OAAJC,QACAC,OAAA,GACAvB,OAsDIqB,EAAAA,KAAKnB,SAAasB,EAAAA,EAASC,GAG3B,MAFAJ,GAAKK,GAASC,aACdN,EAAKnB,GAAW0B,OARpB7B,EAAA8B,SAAAC,KAAA,sBAAAC,SAYAV,EAAKK,WAAUF,IAAeC,aAAA1B,GAC1BsB,EAAKnB,QAAAA,GADTmB,EAAAnB,WAAA0B,OAAAR,EAAAY,GAHWX,GASPA,EAAAK,QAASxB,SAALyB,GACAN,EAAAA,WAAKnB,KAAW+B,KAASb,KAAzBO,IAEoBK,EAAAA,KAAAA,SAAAA,EAAAA,GAO5B,MAPyCZ,GAAAA,GAAA,OAChCC,EAHDnB,YAAAmB,EAAAnB,WAAAgC,OADJb,EAKOnB,WAAA+B,QAAAb,EAAA,WACCY,EAAAA,WAAUD,SAAEC,GAAAA,MAEbX,GAAPW,IAEJX,GAAOA,EAIX,MAAOxB","file":"../../scripts/ui/loading-indicator.js","sourcesContent":["(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else {\n        // Browser globals\n        root.LoadingIndicator = factory();\n    }\n\n//============================================================================\n}(this, function () {\n    //TODO: too specific to history panel\n    function LoadingIndicator( $where, options ){\n\n        var self = this;\n        // defaults\n        options = jQuery.extend({\n            cover       : false\n        }, options || {} );\n\n        function render(){\n            var html = [\n                '<div class=\"loading-indicator\">',\n                    '<div class=\"loading-indicator-text\">',\n                        '<span class=\"fa fa-spinner fa-spin fa-lg\"></span>',\n                        '<span class=\"loading-indicator-message\">loading...</span>',\n                    '</div>',\n                '</div>'\n            ].join( '\\n' );\n\n            var $indicator = $( html ).hide().css( options.css || {\n                    position    : 'fixed'\n                }),\n                $text = $indicator.children( '.loading-indicator-text' );\n\n            if( options.cover ){\n                $indicator.css({\n                    'z-index'   : 2,\n                    top         : $where.css( 'top' ),\n                    bottom      : $where.css( 'bottom' ),\n                    left        : $where.css( 'left' ),\n                    right       : $where.css( 'right' ),\n                    opacity     : 0.5,\n                    'background-color': 'white',\n                    'text-align': 'center'\n                });\n                $text = $indicator.children( '.loading-indicator-text' ).css({\n                    'margin-top'        : '20px'\n                });\n\n            } else {\n                $text = $indicator.children( '.loading-indicator-text' ).css({\n                    margin              : '12px 0px 0px 10px',\n                    opacity             : '0.85',\n                    color               : 'grey'\n                });\n                $text.children( '.loading-indicator-message' ).css({\n                    margin          : '0px 8px 0px 0px',\n                    'font-style'    : 'italic'\n                });\n            }\n            return $indicator;\n        }\n\n        self.show = function( msg, speed, callback ){\n            msg = msg || 'loading...';\n            speed = speed || 'fast';\n            // remove previous\n            $where.parent().find( '.loading-indicator' ).remove();\n            // since position is fixed - we insert as sibling\n            self.$indicator = render().insertBefore( $where );\n            self.message( msg );\n            self.$indicator.fadeIn( speed, callback );\n            return self;\n        };\n\n        self.message = function( msg ){\n            self.$indicator.find( 'i' ).text( msg );\n        };\n\n        self.hide = function( speed, callback ){\n            speed = speed || 'fast';\n            if( self.$indicator && self.$indicator.length ){\n                self.$indicator.fadeOut( speed, function(){\n                    self.$indicator.remove();\n                    if( callback ){ callback(); }\n                });\n            } else {\n                if( callback ){ callback(); }\n            }\n            return self;\n        };\n        return self;\n    }\n\n//============================================================================\n    return LoadingIndicator;\n}));\n"]}