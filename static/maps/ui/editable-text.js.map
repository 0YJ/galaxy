{"version":3,"sources":["ui/editable-text.js"],"names":["$","fn","make_text_editable","config_dict","num_cols","num_rows","use_textarea","on_finish","help_text","container","addClass","click","e","removeClass","button_elt","new_text","find","remove","text","html","set_text","cur_text","input_elt","cols","keyCode","val","trim","size","attr","keyup","trigger","this","stopPropagation","focus","select","tooltip"],"mappings":"kEAGIA,uDAAAA,QAFHA,EAAAC,GAAAC,mBAAD,SAAAC,GAEA,IAAIH,EAAAA,aAAJG,EAAAA,EAAAC,SAAA,GAWQC,EAAW,aAAcF,EAAcA,EAAYE,SAAW,EATtEC,EACA,iBAAAH,GAAAA,EAAAG,aAWQC,EAAY,cAAeJ,EAAcA,EAAYI,UAAY,KACjEC,EAAY,cAAeL,EAAcA,EAAYK,UAAY,KAPzEC,EAAKP,EAAAA,MAmGD,OAlGAO,EAAAC,SAAA,iBAAAC,MAAA,SAAAC,GACA,KACIP,EAAAA,MAAAA,SAAW,UAAcF,OAAd,GADf,CAeIM,EAAUI,YAAY,iBAN1BJ,IAqBYF,EACHO,EAtBTL,EAAUC,SAASK,GACfN,EAAAO,KAAA,UAAAC,SAEI,KAAAF,EACHN,EAAAS,KAAAH,GAYON,EAAUU,KAAK,QAPvBV,EAAIW,SAAW,iBAWPb,GARJA,EAAIQ,IAKHM,EACDZ,aAAUC,EAUAP,EAAYkB,SARlBd,EAAWW,OAafZ,GARJgB,EAAAtB,EAAA,eACIqB,MAAAA,KACIhB,EAAAkB,KAAcpB,IAGlBmB,KAAAA,EAAAA,KAJJD,IAKIP,MAAAA,SALJF,GAY8B,KAAdA,EAAEY,SAJdF,EAAcD,KAMFD,EAAAA,EAAAA,aACHF,KAAA,QAPGP,MAAZ,WAaQ,OAJRG,EAAad,EAAEyB,QAIP,KAGXH,EAAMtB,EAAA,wBACHsB,MAAAA,MAActB,EAAA0B,KAAAL,GAAAM,KACTC,IAEGR,KAAAA,WAEHS,EAAMR,KAECQ,MAAA,SAAAjB,GACQkB,KAAR9B,EAAEwB,QAEFxB,EAAA+B,MAAAD,QAAA,QACS,KAATV,EAASpB,SAAToB,EAASpB,EAAE+B,MAAMN,OAMhCb,EAAAoB,oBAKDvB,EAAIK,KAAAA,IACAL,EAAAA,OAAAA,GACHK,GACDQ,EAAUW,OAAVnB,GAAAQ,EAAUW,QAGVX,EAAAY,SACAtB,EAAEoB,qBAMLxB,GADGC,EAAUmB,KAAK,QAASpB,GAAW2B,UAGhC1B","file":"../../scripts/ui/editable-text.js","sourcesContent":["import jQuery from \"jquery\";\n(\"use_strict\");\n\nvar $ = jQuery;\n\n// ============================================================================\n/**\n * Make an element with text editable: (a) when user clicks on text, a textbox/area\n * is provided for editing; (b) when enter key pressed, element's text is set and on_finish\n * is called.\n */\n$.fn.make_text_editable = function(config_dict) {\n    // Get config options.\n    var num_cols = \"num_cols\" in config_dict ? config_dict.num_cols : 30,\n        num_rows = \"num_rows\" in config_dict ? config_dict.num_rows : 4,\n        use_textarea =\n            \"use_textarea\" in config_dict ? config_dict.use_textarea : false,\n        on_finish = \"on_finish\" in config_dict ? config_dict.on_finish : null,\n        help_text = \"help_text\" in config_dict ? config_dict.help_text : null;\n\n    // Add element behavior.\n    var container = $(this);\n    container.addClass(\"editable-text\").click(function(e) {\n        // If there's already an input element, editing is active, so do nothing.\n        if ($(this).children(\":input\").length > 0) {\n            return;\n        }\n\n        container.removeClass(\"editable-text\");\n\n        // Handler for setting element text.\n        var set_text = function(new_text) {\n            container.find(\":input\").remove();\n\n            if (new_text !== \"\") {\n                container.text(new_text);\n            } else {\n                // No text; need a line so that there is a click target.\n                container.html(\"<br>\");\n            }\n            container.addClass(\"editable-text\");\n\n            if (on_finish) {\n                on_finish(new_text);\n            }\n        };\n\n        // Create input element(s) for editing.\n        var cur_text =\n                \"cur_text\" in config_dict\n                    ? config_dict.cur_text\n                    : container.text(),\n            input_elt,\n            button_elt;\n\n        if (use_textarea) {\n            input_elt = $(\"<textarea/>\")\n                .attr({ rows: num_rows, cols: num_cols })\n                .text($.trim(cur_text))\n                .keyup(function(e) {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        set_text(cur_text);\n                    }\n                });\n            button_elt = $(\"<button/>\")\n                .text(\"Done\")\n                .click(function() {\n                    set_text(input_elt.val());\n                    // Return false so that click does not propogate to container.\n                    return false;\n                });\n        } else {\n            input_elt = $(\"<input type='text'/>\")\n                .attr({ value: $.trim(cur_text), size: num_cols })\n                .blur(function() {\n                    set_text(cur_text);\n                })\n                .keyup(function(e) {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        $(this).trigger(\"blur\");\n                    } else if (e.keyCode === 13) {\n                        // Enter key.\n                        set_text($(this).val());\n                    }\n\n                    // Do not propogate event to avoid unwanted side effects.\n                    e.stopPropagation();\n                });\n        }\n\n        // Replace text with input object(s) and focus & select.\n        container.text(\"\");\n        container.append(input_elt);\n        if (button_elt) {\n            container.append(button_elt);\n        }\n        input_elt.focus();\n        input_elt.select();\n\n        // Do not propogate to elements below b/c that blurs input and prevents it from being used.\n        e.stopPropagation();\n    });\n\n    // Add help text if there some.\n    if (help_text) {\n        container.attr(\"title\", help_text).tooltip();\n    }\n\n    return container;\n};\n\n// ============================================================================\n"]}