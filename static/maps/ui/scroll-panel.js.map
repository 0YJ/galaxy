{"version":3,"sources":["ui/scroll-panel.js"],"names":["$","ui","plugin","add","drag","e","this","data","instance","timeout","clearTimeout","o","options","element","panel","width","panel_pos","panel_w","panel_h","viewport","parent","viewport_w","viewport_h","element_w","nudge","p_min_y","p_max_x","left","p_max_y","min_vis_x","min_vis_y","top","max_vis_y","max_vis_x","offset","click","mouse_x","t","Math","min","position","mouse_y","moved","p_min_x","amount_moved","css","element_h","old_e","ddmanager","prepareOffsets","mouseMove","stop","setTimeout"],"mappings":"aAEAA,EAAAC,GAAAC,OAAAC,IAAA,YAAA,eAGIC,KAAM,SAASC,EAAGJ,GADjBC,IAAOC,EAAIH,EAAAM,MAAaC,KAAA,aACzBH,aAAMI,EAAgBC,SAClB,IAAID,EAAAA,EAAAA,QACJE,EAAcF,EAASC,QACnBE,EAAOC,EAAAA,MACPC,EAAUL,EAAAA,WACVM,EAAUA,EAFdC,QAGIC,EAAAA,EAAYF,SACZG,EAAUH,EAAMC,SAChBG,EAAUJ,EAAAC,QACVI,EAAWL,EAAMM,SACjBC,EAAAA,EAAaF,QACbG,EAAAA,EAAaH,SACbI,GAAAA,EAIAC,IAbJP,EAAAI,GAgBII,IAAcP,EAAUI,GACxBI,GAjBJV,EAAAW,KAkBIC,EAlBJC,EAAAR,EAsBIS,GAAcd,EAAUe,IAHxBC,EAAAF,EAAAR,EAEAW,EAAAA,EAAYJ,SAAAA,KAAYR,EArB5Ba,OAAAC,MAAAR,KA4BA,GANIG,QAAAA,EAAcd,SAAAA,IAtBlBR,EAAA0B,OAAAC,MAAAJ,IA4BOf,EAAUW,KAdb,GAcmCS,EAlBvBvB,EAkB8CgB,EAAc,CAJxEQ,EAAAC,KAAAC,IAbQ,GAGR,EAUAvB,EAAAW,MACAS,EAAUnC,IAAGuC,OAASb,EAAOnB,KAAS0B,GACtCO,GAAUxC,EACdO,EAAA0B,OAAAd,OAAAO,MAAAU,EACOrB,EAAAA,SAAUW,MAAOD,EAEpBZ,IAAAA,GAAmBE,EAAUW,KAAOU,GAApCD,EApBYvB,EAoBZoB,EAAA,CACAS,EAAQJ,KAARC,IApBQ,GAoBRvB,EAAAW,KAAAgB,GACAnC,EAAAA,IAAS0B,OAAOd,EAAhBO,KAAAU,GACApC,GAAGuC,EACNhC,EAAA0B,OAAAd,OAAAO,MAAAU,EACMpC,EAAEyC,SAAa1B,MAAUW,EAE5Bb,IAAAA,GAAmBE,EAAUW,IAtBfV,GAsBdwB,QA3BY5B,EA2BZiB,EAAA,CACAY,EAAQJ,KAARC,IA3BQ,GAIMtB,EAuBdD,EAAAe,KACAvB,EAAAA,IAAS0B,MAAOd,EAAhBW,IAAAM,GAEHO,EAAA9B,EAAA0B,WAAAT,IAAAf,EAAAe,IACMvB,EAAF0B,OAAiBlB,OAAAe,KAAgBH,EAClC3B,EAAAuC,SAAQF,KAAUd,EAClBV,GAAM+B,EAEN,IAAID,GAAAA,EAAqBJ,IAANf,GAAuBT,QApC9BH,EAoCZmB,EAAA,CACAxB,IAAAA,EAAAA,KAAS0B,IApCD,GAoCeH,EAAOa,IAA9BD,GACA1C,EAAGuC,IAAH,MAAmBI,EAAAA,IAAnBP,EAAA,MAEH,IAAAO,EAAA5B,EAAAe,IAAAjB,EAAA0B,WAAAT,IACMvB,EAAF0B,OAAiBlB,OAAAe,KAAgBN,EAClCxB,EAAAuC,SAAQF,KAAUd,EAClBV,GAAM+B,EAGNrC,EAAAA,SAAAA,KAAA8B,KAAgBlB,IAAOW,EAAvBS,SAA8BI,KAA9B,GACA3C,EAAAA,SAAGuC,IAAST,KAAOa,IAAAA,EAAAA,SAAnBb,IAAA,GACAW,EAAAA,SAAQf,KAARW,KAAAC,IAAAtC,EAAAuC,SAAAb,KAAAV,EAAAM,GACHtB,EAAAuC,SAAAT,IAAAO,KAAAC,IAAAtC,EAAAuC,SAAAT,IAAAb,EAAA4B,GAEEN,GACAA,EAAAA,GAAAA,UAAeF,eAAaE,EAAbnC,GAGlBqC,IACKA,EAAQK,MAAA1C,EACTL,EAAKgD,QAAUC,WAAgBzC,WAA/BA,EAAA0C,UAAA7C,IAAA,MAGJ8C,KAAA,SAAa9C,EAAAJ,GACTO,IAAAA,EAASuC,EAAAA,MAATxC,KAAA,aACAC,aAASC,EAAU2C","file":"../../scripts/ui/scroll-panel.js","sourcesContent":["// This is an extension to jQuery UI draggable\n// When dragging move the parent element (\"panel\") relative to its parent\n// (\"viewport\") so that the draggable is always visible. \n\n$.ui.plugin.add(\"draggable\", \"scrollPanel\", {\n    drag: function(e, ui) {\n        var instance = $(this).data(\"draggable\");\n        clearTimeout( instance.timeout );\n        var o = ui.options,\n            element = instance.element,\n            panel = o.panel,\n            panel_pos = panel.position(),\n            panel_w = panel.width(),\n            panel_h = panel.height(),\n            viewport = panel.parent(),\n            viewport_w = viewport.width(),\n            viewport_h = viewport.height(),\n            element_w = element.width(),\n            element_h = element.height(),\n            moved = false,\n            close_dist = 5,\n            nudge = 23,\n            // Legal panel range\n            p_min_x = - ( panel_w - viewport_w ),\n            p_min_y = - ( panel_h - viewport_h ),\n            p_max_x = 0,\n            p_max_y = 0,\n            // Visible\n            min_vis_x = - panel_pos.left,\n            max_vis_x = min_vis_x + viewport_w,\n            min_vis_y = - panel_pos.top,\n            max_vis_y = min_vis_y + viewport_h,\n            // Mouse\n            mouse_x = ui.position.left + instance.offset.click.left;\n            mouse_y = ui.position.top + instance.offset.click.top;\n        // Move it\n        if ( ( panel_pos.left < p_max_x ) && ( mouse_x - close_dist < min_vis_x ) ) {\n            var t = Math.min( nudge, p_max_x - panel_pos.left );\n            panel.css( \"left\", panel_pos.left + t );\n            moved = true;\n            instance.offset.parent.left += t;\n            ui.position.left -= t\n        }\n        if ( ( ! moved ) && ( panel_pos.left > p_min_x ) && ( mouse_x + close_dist > max_vis_x ) ) {\n            var t = Math.min( nudge, panel_pos.left  - p_min_x );\n            panel.css( \"left\", panel_pos.left - t );\n            moved = true;\n            instance.offset.parent.left -= t;\n            ui.position.left += t;      \n        }\n        if ( ( ! moved ) && ( panel_pos.top < p_max_y ) && ( mouse_y - close_dist < min_vis_y ) ) {\n            var t = Math.min( nudge, p_max_y - panel_pos.top );\n            panel.css( \"top\", panel_pos.top + t );\n            // Firefox sometimes moves by less, so we need to check. Yuck.\n            var amount_moved = panel.position().top - panel_pos.top;\n            instance.offset.parent.top += amount_moved;\n            ui.position.top -= amount_moved;\n            moved = true;\n        }\n        if ( ( ! moved ) && ( panel_pos.top > p_min_y ) && ( mouse_y + close_dist > max_vis_y ) ) {\n            var t = Math.min( nudge, panel_pos.top  - p_min_x );\n            panel.css( \"top\", ( panel_pos.top - t ) + \"px\" );\n            // Firefox sometimes moves by less, so we need to check. Yuck.\n            var amount_moved = panel_pos.top - panel.position().top;   \n            instance.offset.parent.top -= amount_moved;\n            ui.position.top += amount_moved;\n            moved = true;\n        }\n        // Still contain in panel\n        ui.position.left = Math.max( ui.position.left, 0 );\n        ui.position.top = Math.max( ui.position.top, 0 );\n        ui.position.left = Math.min( ui.position.left, panel_w - element_w );\n        ui.position.top = Math.min( ui.position.top, panel_h - element_h );\n        // Update offsets\n        if ( moved ) {\n            $.ui.ddmanager.prepareOffsets( instance, e );\n        }\n        // Keep moving even if mouse doesn't move\n        if ( moved ) {\n            instance.old_e = e;\n            instance.timeout = setTimeout( function() { instance.mouseMove( e ) }, 50 );\n        }\n    },\n    stop: function( e, ui ) {\n        var instance = $(this).data(\"draggable\");\n        clearTimeout( instance.timeout );\n    }\n});"]}