{"version":3,"sources":["ui/scroll-panel.js"],"names":["$","ui","plugin","add","drag","e","this","data","instance","timeout","clearTimeout","o","options","element","panel","width","panel_pos","moved","panel_w","panel_h","viewport","parent","height","viewport_w","element_h","p_min_x","close_dist","min_vis_x","mouse_x","position","mouse_y","p_max_x","left","offset","viewport_h","Math","min","top","t","p_max_y","nudge","max_vis_x","amount_moved","min_vis_y","css","max_vis_y","ddmanager","prepareOffsets","max","setTimeout","mouseMove","element_w","old_e","stop"],"mappings":"aAEAA,EAAAC,GAAAC,OAAAC,IAAA,YAAA,eAGIC,KAAM,SAASC,EAAGJ,GADjBC,IAAOC,EAAIH,EAAAM,MAAaC,KAAA,aACzBH,aAAMI,EAAgBC,SAClB,IAAID,EAAAA,EAAAA,QACJE,EAAcF,EAASC,QACnBE,EAAOC,EAAAA,MACPC,EAAUL,EAAAA,WACVM,EAAUA,EAFdC,QAGIC,EAAAA,EAAYF,SAmCZG,GAlCAC,SAAUJ,EAAMC,SAChBI,WAAUL,SAAAC,QACVK,WAAiBC,SAAjBC,SACAC,UAAaH,EAASL,QAOtBS,UAAAX,EAAAS,SACAG,OAAcP,EAIdQ,WAAA,EACAC,MAAY,GAKZC,UAAaC,EAAHN,YACVO,UAAaD,EAAerB,YAChCuB,QAAA,EACOf,QAAUgB,EAEblB,WAAWE,EAAQA,KACnBC,UAAAU,UAAAJ,WACAf,WAASyB,EAAcD,IACvB/B,UAAY+B,UAAZE,WAEGN,QAAeZ,EAAAA,SAAUgB,KAAOP,EAAeG,OAAAA,MAAUF,KAC5DI,QAAQK,EAAKC,SAALC,IAAiBrB,EAAUgB,OAAQP,MAA3CY,IAEApB,EAAAe,KAAAD,SAAAH,QAAAF,WAAAC,UAAA,CACAnB,EAAAA,KAASyB,IAAOZ,MAAOW,QAAvBhB,EAAAgB,MACA/B,EAAG4B,IAAH,OAAAb,EAAAgB,KAAAM,GACHrB,OAAA,EACMT,EAAFyB,OAAiBjB,OAAAgB,MAAgBO,EAClCtC,EAAA4B,SAAQM,MAAUK,EAElB,IAAAvB,OAAAD,EAAAgB,KAAAP,SAAAG,QAAAF,WAAAe,UAAA,CACIC,EAAAA,KAAAA,IAAAA,MAAqBb,EAANG,KAAuBhB,SAC1CR,EAAAA,IAASyB,OAAOZ,EAAhBW,KAA8BU,GAC9BzC,OAAG4B,EACHZ,EAAQgB,OAARZ,OAAAW,MAAAM,EACHrC,EAAA4B,SAAAG,MAAAM,EAEG,IAAIA,OAAcE,EAAOxB,IAAUqB,SAAnCP,QAAAJ,WAAAiB,UAAA,CACA7B,EAAM8B,KAAKR,IAASpB,MAAAA,QAAFA,EAAlBqB,KACAvB,EAAA8B,IAAA,MAAA5B,EAAAqB,IAAAC,GAEA9B,EAAgBa,EAAOgB,WAAOK,IAA9B1B,EAAAqB,IACApC,EAAG4B,OAAHR,OAAmBqB,KAAAA,EACnBzB,EAAAA,SAAAoB,KAAAK,EACHzB,OAAA,EAEDhB,IAAG4B,OAAgBM,EAAaN,IAAAA,SAAhCC,QAAAJ,WAAAmB,UAAA,CACGhB,IAAAA,EAASQ,KAAZD,IAAkBD,MAAUlC,EAAYoC,IAAxCZ,SACGI,EAAAA,IAASG,MAAYI,EAAQP,IAASG,EAAMd,MAE/C,IAAAwB,EAAA1B,EAAAqB,IAAAvB,EAAAe,WAAAQ,IACKpB,EAAQgB,OAAAZ,OAAAgB,KAAAK,EACT1C,EAAEC,SAAG6C,KAAUC,EAClB9B,OAAA,EAGGT,EAAAA,SAAAA,KAAA2B,KAAAa,IAAA/C,EAAA4B,SAAAG,KAAA,GACAxB,EAAAA,SAAAA,IAASC,KAAUwC,IAAAA,EAAAA,SAAYZ,IAAA,GAAa7B,EAAAA,SAAAA,KAAS0C,KAAAA,IAATjD,EAAA4B,SAAAG,KAAAd,EAAAiC,WAAyBlD,EAAA4B,SAArEQ,IAAAF,KAAAC,IAAAnC,EAAA4B,SAAAQ,IAAAlB,EAAAK,WA5EgCP,OA+ElCjB,EAAAC,GAAA6C,UAAa7C,eAAKO,EAAAH,GAGvBY,QAlFLT,EAAA4C,MAAA/C,EA4EYG,EAASC,QAAUwC,WAAY,WAAazC,EAAS0C,UAAW7C,IAAO,MAG/EgD,KAAM,SAAUhD,EAAGJ,GACf,IAAIO,EAAWR,EAAEM,MAAMC,KAAK,aAC5BG,aAAcF,EAASC","file":"../../scripts/ui/scroll-panel.js","sourcesContent":["// This is an extension to jQuery UI draggable\n// When dragging move the parent element (\"panel\") relative to its parent\n// (\"viewport\") so that the draggable is always visible. \n\n$.ui.plugin.add(\"draggable\", \"scrollPanel\", {\n    drag: function(e, ui) {\n        var instance = $(this).data(\"draggable\");\n        clearTimeout( instance.timeout );\n        var o = ui.options,\n            element = instance.element,\n            panel = o.panel,\n            panel_pos = panel.position(),\n            panel_w = panel.width(),\n            panel_h = panel.height()\n            viewport = panel.parent();\n            viewport_w = viewport.width(),\n            viewport_h = viewport.height(),\n            element_w = element.width(),\n            element_h = element.height(),\n            moved = false,\n            close_dist = 5,\n            nudge = 23,\n            // Legal panel range\n            p_min_x = - ( panel_w - viewport_w ),\n            p_min_y = - ( panel_h - viewport_h ),\n            p_max_x = 0,\n            p_max_y = 0,\n            // Visible\n            min_vis_x = - panel_pos.left,\n            max_vis_x = min_vis_x + viewport_w,\n            min_vis_y = - panel_pos.top,\n            max_vis_y = min_vis_y + viewport_h,\n            // Mouse\n            mouse_x = ui.position.left + instance.offset.click.left;\n            mouse_y = ui.position.top + instance.offset.click.top;\n        // Move it\n        if ( ( panel_pos.left < p_max_x ) && ( mouse_x - close_dist < min_vis_x ) ) {\n            var t = Math.min( nudge, p_max_x - panel_pos.left );\n            panel.css( \"left\", panel_pos.left + t );\n            moved = true;\n            instance.offset.parent.left += t;\n            ui.position.left -= t\n        }\n        if ( ( ! moved ) && ( panel_pos.left > p_min_x ) && ( mouse_x + close_dist > max_vis_x ) ) {\n            var t = Math.min( nudge, panel_pos.left  - p_min_x );\n            panel.css( \"left\", panel_pos.left - t );\n            moved = true;\n            instance.offset.parent.left -= t;\n            ui.position.left += t;      \n        }\n        if ( ( ! moved ) && ( panel_pos.top < p_max_y ) && ( mouse_y - close_dist < min_vis_y ) ) {\n            var t = Math.min( nudge, p_max_y - panel_pos.top );\n            panel.css( \"top\", panel_pos.top + t );\n            // Firefox sometimes moves by less, so we need to check. Yuck.\n            var amount_moved = panel.position().top - panel_pos.top;\n            instance.offset.parent.top += amount_moved;\n            ui.position.top -= amount_moved;\n            moved = true;\n        }\n        if ( ( ! moved ) && ( panel_pos.top > p_min_y ) && ( mouse_y + close_dist > max_vis_y ) ) {\n            var t = Math.min( nudge, panel_pos.top  - p_min_x );\n            panel.css( \"top\", ( panel_pos.top - t ) + \"px\" );\n            // Firefox sometimes moves by less, so we need to check. Yuck.\n            var amount_moved = panel_pos.top - panel.position().top;   \n            instance.offset.parent.top -= amount_moved;\n            ui.position.top += amount_moved;\n            moved = true;\n        }\n        // Still contain in panel\n        ui.position.left = Math.max( ui.position.left, 0 );\n        ui.position.top = Math.max( ui.position.top, 0 );\n        ui.position.left = Math.min( ui.position.left, panel_w - element_w );\n        ui.position.top = Math.min( ui.position.top, panel_h - element_h );\n        // Update offsets\n        if ( moved ) {\n            $.ui.ddmanager.prepareOffsets( instance, e );\n        }\n        // Keep moving even if mouse doesn't move\n        if ( moved ) {\n            instance.old_e = e;\n            instance.timeout = setTimeout( function() { instance.mouseMove( e ) }, 50 );\n        }\n    },\n    stop: function( e, ui ) {\n        var instance = $(this).data(\"draggable\");\n        clearTimeout( instance.timeout );\n    }\n});"]}