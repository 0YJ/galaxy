{"version":3,"sources":["ui/scroll-panel.js"],"names":["$","ui","plugin","add","drag","e","instance","this","data","clearTimeout","timeout","o","options","element","panel","panel_pos","position","panel_w","width","panel_h","height","viewport","parent","viewport_w","viewport_h","element_w","element_h","moved","close_dist","nudge","p_min_x","p_min_y","p_max_x","p_max_y","min_vis_x","left","max_vis_x","min_vis_y","top","max_vis_y","mouse_x","offset","click","mouse_y","t","Math","min","css","amount_moved","max","ddmanager","prepareOffsets","old_e","setTimeout","mouseMove","stop"],"mappings":"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","file":"../../scripts/ui/scroll-panel.js","sourcesContent":["// This is an extension to jQuery UI draggable\n// When dragging move the parent element (\"panel\") relative to its parent\n// (\"viewport\") so that the draggable is always visible. \n\n$.ui.plugin.add(\"draggable\", \"scrollPanel\", {\n    drag: function(e, ui) {\n        var instance = $(this).data(\"draggable\");\n        clearTimeout( instance.timeout );\n        var o = ui.options,\n            element = instance.element,\n            panel = o.panel,\n            panel_pos = panel.position(),\n            panel_w = panel.width(),\n            panel_h = panel.height()\n            viewport = panel.parent();\n            viewport_w = viewport.width(),\n            viewport_h = viewport.height(),\n            element_w = element.width(),\n            element_h = element.height(),\n            moved = false,\n            close_dist = 5,\n            nudge = 23,\n            // Legal panel range\n            p_min_x = - ( panel_w - viewport_w ),\n            p_min_y = - ( panel_h - viewport_h ),\n            p_max_x = 0,\n            p_max_y = 0,\n            // Visible\n            min_vis_x = - panel_pos.left,\n            max_vis_x = min_vis_x + viewport_w,\n            min_vis_y = - panel_pos.top,\n            max_vis_y = min_vis_y + viewport_h,\n            // Mouse\n            mouse_x = ui.position.left + instance.offset.click.left;\n            mouse_y = ui.position.top + instance.offset.click.top;\n        // Move it\n        if ( ( panel_pos.left < p_max_x ) && ( mouse_x - close_dist < min_vis_x ) ) {\n            var t = Math.min( nudge, p_max_x - panel_pos.left );\n            panel.css( \"left\", panel_pos.left + t );\n            moved = true;\n            instance.offset.parent.left += t;\n            ui.position.left -= t\n        }\n        if ( ( ! moved ) && ( panel_pos.left > p_min_x ) && ( mouse_x + close_dist > max_vis_x ) ) {\n            var t = Math.min( nudge, panel_pos.left  - p_min_x );\n            panel.css( \"left\", panel_pos.left - t );\n            moved = true;\n            instance.offset.parent.left -= t;\n            ui.position.left += t;      \n        }\n        if ( ( ! moved ) && ( panel_pos.top < p_max_y ) && ( mouse_y - close_dist < min_vis_y ) ) {\n            var t = Math.min( nudge, p_max_y - panel_pos.top );\n            panel.css( \"top\", panel_pos.top + t );\n            // Firefox sometimes moves by less, so we need to check. Yuck.\n            var amount_moved = panel.position().top - panel_pos.top;\n            instance.offset.parent.top += amount_moved;\n            ui.position.top -= amount_moved;\n            moved = true;\n        }\n        if ( ( ! moved ) && ( panel_pos.top > p_min_y ) && ( mouse_y + close_dist > max_vis_y ) ) {\n            var t = Math.min( nudge, panel_pos.top  - p_min_x );\n            panel.css( \"top\", ( panel_pos.top - t ) + \"px\" );\n            // Firefox sometimes moves by less, so we need to check. Yuck.\n            var amount_moved = panel_pos.top - panel.position().top;   \n            instance.offset.parent.top -= amount_moved;\n            ui.position.top += amount_moved;\n            moved = true;\n        }\n        // Still contain in panel\n        ui.position.left = Math.max( ui.position.left, 0 );\n        ui.position.top = Math.max( ui.position.top, 0 );\n        ui.position.left = Math.min( ui.position.left, panel_w - element_w );\n        ui.position.top = Math.min( ui.position.top, panel_h - element_h );\n        // Update offsets\n        if ( moved ) {\n            $.ui.ddmanager.prepareOffsets( instance, e );\n        }\n        // Keep moving even if mouse doesn't move\n        if ( moved ) {\n            instance.old_e = e;\n            instance.timeout = setTimeout( function() { instance.mouseMove( e ) }, 50 );\n        }\n    },\n    stop: function( e, ui ) {\n        var instance = $(this).data(\"draggable\");\n        clearTimeout( instance.timeout );\n    }\n});"]}