{"version":3,"sources":["reports_webapp/run_stats.js"],"names":["date_by_subtracting_days","date","days","Date","getFullYear","create_chart","create_histogram","getHours","d3","window","getSeconds","date_by_subtracting_hours","getMonth","getDate","get_utc_time_hours","getMilliseconds","data","inp_data","getUTCMonth","getUTCDate","getUTCHours","hours_array","i","days_array","margin","top","now","left","barWidth","width","time","chart_width","right","chart_zoom","height","max","zoom","select","selectAll","style","bottom","$","wdth","chart_height","name","attr","path","on","classes","css","this","split","chart","filter","bar","duration","curr_margin","transition","size","append","text","enter","m_y","m_x","d","yAxis","axis","left_pad","event","curr_day","e","title","_y2","first","y","scale","linear","range","orient","tickFormat","round","curr_day_text","call","text_height","node","getBoundingClientRect","curr_month","String","curr_month_text","locale","toLocaleString","month","getBBox","histogram","ticks","lengths","push","minutes","hours","bar_x","dx","this_width","top_pad","svg","trans","x","domain","layout","bins","length","undefined","xAxis","Math","floor"],"mappings":"uEAGA,SAASA,EAAyBC,EAAMC,GACpC,OAAO,IAAIC,KACPF,EAAKG,cACLH,EA8BQI,WA7BRJ,EA8bQK,UAAAA,EArchBL,EAAAM,WACIC,EAAKC,aASDR,EAAKS,aAPbT,EAASD,mBAYT,SAAAW,EAASA,EAA0BV,GAC/B,OAAA,IAAOE,KASVF,EAAAG,cAPOH,EAAKW,WASbX,EAAAY,UACAZ,EAASa,WAAAA,EACLb,EAAIA,aACJA,EAAAS,aACHT,EAAAc,mBAKM,SAAAD,IACH,IAAAb,EAAA,IAAAE,KACA,OAAA,IAAIa,KAAOC,EAAAA,iBAAXhB,EAAAiB,cAAAjB,EAAAkB,aAAAlB,EAAAmB,cAAA,EAAA,sDAMIC,aAAAA,SAAiBV,EAAAA,EAAAA,EAAAA,GANrB,IAYCW,EAZGN,EAAOC,EAUXI,KACIE,EAAAA,IANJ,IAAKD,EAAI,EAAGA,EAAI,GAAIA,IASpBD,EAAIG,KAAWC,EAA4BC,EAAIC,IAG/C,IAAAJ,KACIK,IAAAA,EAAAA,EAAAA,EAAAA,GAAWC,IACdN,EAAUO,KAAAA,EAAgBJ,EAAAJ,IAG3B,IAAAE,GAAIO,IAAAA,GAAcF,MAAQL,GAAAA,OAAR,GAAsBA,KAAOQ,IAE/CJ,EAAIK,EACAC,SAAJJ,EACAF,EAAWZ,KACIkB,QAAXJ,IACHF,EAAMC,IAEN,IAAAE,EAfW,IAeXP,EAAAG,KAAAH,EAAAQ,MANGC,EAAa,KAUjB,GAAA,GAAAzB,EAAA2B,IAAAnB,GACIoB,EAFJ,IAEkB5B,EAAG6B,IAAHrB,QAEdR,IAAAA,EACK8B,EAQL9B,IAAAA,EAbJ,IAeS+B,EAAMd,IAAUD,EAAAgB,OAyCjBC,EAAA,WAAIC,IAAAA,SAAeC,EAAnBV,GASAzB,IAAAA,EACK6B,EA/BHA,OA+BGA,IAULO,GACAC,KAAA,QAAAd,GACAvB,KAAAA,SACYA,GAjDfqC,KAAK,sBAAuB,YAsDzBrC,KAAAA,UAlBK6B,OAmBgBS,EAnBhBT,IAoBOM,GAnDVI,GAAV,QAbA,WACAN,IAAEO,EAAWC,EAAIZ,OAAAa,MAAUP,KAAAA,SApBvBK,EAAUA,EAAQG,MAAM,KAsB5B3C,EACI4C,UADJ,IAEKf,EADO,IApBHgB,OAmBT,IAnBoBL,EAAQ,IA4B5BT,MAAA,SAAA,WACIe,aAMIC,SAAA,KACAV,KAAIW,SAAAA,GACJA,KAAAA,QAAezB,GAElBvB,EAEG6B,OAAAa,MACAX,MAAIjB,SAAJ,WACAmC,aAhCCF,SAAS,KAkCVV,KAAA,SAAeF,EAAIV,GACfyB,KAAAA,QAAOA,EAAPzB,KA2CZmB,EACKO,EAIkBrB,UAAA,KALvBtB,KAMK4C,GA/DAC,QAiELF,OAAA,KACAP,KACKO,YACAd,SAAAA,EAAKvB,GAKF,IAAIwC,GAAcrC,EAAMS,KAExB,MAAA,cADAsB,IAAgB3B,EAAhBD,GACA,IAAAJ,EAAAC,IAAA,MAEAsB,GAAA,aAAWgB,SAAAA,GAhEX,IAHA,IAAIzC,EAAI,EAsEhBoC,EAAAM,EAnEeN,GAAQ,IAsEvBA,GAAA,GACIO,IAlEI,IAAIvB,EAAW,EAAJpB,EAAQ,GAwE3Bd,EAEKmD,OADLnD,EAEKqC,MAAKC,KAFV,IAtEaT,OAAO,aA+EpBA,OAAA,QAEKsB,KAAO,YAZZ,eAcUnC,EAASG,KAAA,GAdnB,MAhIA,IA+IUqC,EAAA5B,IAAaZ,EAAAC,IAAK,IAf5B,MAgBYyC,KAAAA,aAAO,WACPC,KAAAA,GAEJ3D,EAjFK6B,OAAO7B,EAAG4D,MAAMtB,KAAK,IAmF1BT,OAAA,aAEEQ,KAAA,QAZVH,EAQQ,MA9EKG,KAAK,SAAU,QAoF5BR,OAAA,QAEKsB,KAAO,YARJ,gBASOnC,EAAAG,KAAAe,GATP,MAnJR,IA4JesB,EAAA5B,IAAAZ,EAAAC,KATP,MASOoB,KAAKX,QAAaE,EATzB,MAUES,KAAA,SAAU,QAAAA,KAAKmB,OAAL,aAjFfjB,GAAG,aAAc,SAAAiB,GAqFlBlC,EACAO,OAAA7B,EAAA4D,MAAAtB,KAAA,IAEKa,OAAO,aAQWtB,OAAA,QATvBQ,KAAA,aAAA,UAWArC,EAEKmD,OAAOnD,EAAA4D,MACPvB,KAAK,IAGFR,OAAIP,aA7FHO,OAAO,QA+FRQ,KAAIxB,QAAAA,KACAS,KAAAA,SAAAA,KADJe,KAAA,OAEO,IACHf,KAAAA,KAIPsB,EA7FJO,OAAO,KA+FRA,OAAA,QACAd,KAAA,QAAIwB,SACJxB,KAAA,cAAA,OACAS,KAAAA,YACY,SAAAgB,GAAA,MAAA,wBAKJV,KAAAW,GAGInB,EACIoB,OAAAA,KACAC,KAAAA,QAAAA,QACHd,OAAA,QACGa,KAAAA,QAAAA,KACH3B,KAAA,IAAA,SAAAmB,GAlGT,IAAID,EAAMvC,EAAOG,KAoGT0C,GAAAA,EAAAA,IAlNhB,IAsNS,MAAA,IACKN,EADL,IACeD,EADf,OAHIC,EArOD,KAwOH,IArGSD,IA2Gd,IAAAY,EAAAlE,EAAAmE,MAAAC,SAAAC,OA5NJ,IA4NI,IAGAJ,EAAAA,EAAAA,IACAnB,OAKQqB,MAAAD,GACAI,OAAA,QAxGPC,WAAW,SAAAf,GAAA,OAAKxD,EAAGwE,MAAMhB,EAAIxD,EAAG2B,IAAInB,GAAO,KAmChD,GAyEgBc,EAxGX6B,OAAO,KA0GIsB,KAAAA,QAAAA,UACHpC,KAAA,KAHGf,KAGHc,GAxGRC,KAAK,cAAe,OA0GbA,KAAA,YALIf,cAKJN,EAAAG,KALIG,IAKJN,EAAAC,IALIK,KAMPoD,KAhBLjB,GAkBQ5B,OAAA,WAMAe,EACIO,OAAA,KACIwB,OAAAA,QACAV,KAAAA,QAAAA,YACH5B,KAAA,YAAM,SAAAyB,GACHa,IAAAA,EAAAA,EAAAA,OAAAA,MAAevC,GAAfwC,OAxGZ,MA2GQf,eAFC7C,EAAAG,KAAAuC,EAAAmB,wBAAAxD,MAAA,GAEDwC,MA9GO7C,EAAOC,IAAMyC,EAAKmB,wBAAwBnD,OAAS,EAAI,IA8G9DmC,iBAIPT,KApCL,kBAuCAN,EASuBK,OAAA,QAAAd,KATvB,IAAA,SAAAmB,GAAA,OAvQJ,IAuQIA,EAAA5B,IA1GCS,KAAK,SAAU,SAAAmB,GAAA,OAAKA,EAAI5B,IAqHzBS,KAAA,QAAAjB,EAAA,GAjHQ,SAARE,EAAiB,CA0HLA,EACH6B,OAFD,QAGI7B,KAAAA,KAAAA,GACHe,KAAA,KAAA,GAvHJA,KAAK,KAAM,GAyHRA,KAAA,KAAOf,GAbfe,KAAA,SAAA,SAzGKA,KAAK,eAAgB,GAyH1BA,KAAA,iBAAA,QACAA,KAAIyC,YAAJ,SAAAtB,EAAA1C,GAAA,MAAA,cAAAM,EAAA,EAAA,WAQQ0B,EA5HHK,OAAO,QA8HJd,KAAA,OAAItB,cACAsB,KAAA,YAHJ,wBAIQ2B,KAAAA,SAAAA,EAAAA,GASR,OANQA,EAAAlD,GAAAf,WAAA,GACHuB,IAAAyD,OAAAlE,EAAAC,GAAAf,YAED+E,EAAa/D,GAAAA,aAtHzB,IAAI8C,EAAW,GAgIfI,GAAA,EACAa,EACA3B,OAAI6B,QACJf,KAAAA,KAAQ,GACRnB,KACKK,KAAO,GAIJd,KAAA,KAAIf,GACJe,KAAA,KAAI4C,SAAAA,EAAAA,GAlIJ,IAAIjB,EAAM,EAoJV,OAfI1C,EAAOyD,GAAOhE,WAAcmE,IAC5B5D,EA/HI0C,EAAM,IAHNA,EAAM,GAoIVgB,GAAAA,GAMAL,EAAAA,EAAJ7D,GAAAT,WAMIU,IAEI4D,KAAAA,SAAAA,SACAV,KAAAA,eAAQ,GACX5B,KAAA,iBAAM,QACHsC,KAAAA,YAAAA,SAAAA,EAAAA,GAAAA,MAAAA,uBAGJG,EAAAA,GACH,IAAAL,EAAA,GAtITR,GAAQ,EAwIAnB,EAnCRK,OAAA,QAqCHd,KAAA,OAAA,cAtIQA,KAAK,iBAAkB,QAwIhCe,KAAA,SAAAI,EAAA1C,GAEKqC,IADL7B,EAEKe,GA/HO,OAmIZxB,EAAAC,GAAAT,WAAAoE,IACYnD,EAAAyD,OAARlE,EAAiCC,GAAAoE,eAHxB,SAGuCC,MAAA,UAE3CtD,GAAAA,IADLkD,OAEUlE,EAAUsB,GAAAA,WAI3BsC,EAAA5D,EAAAC,GAAAT,WA3IsBiB,IAgJnBe,KAAA,YAAA,SAAAmB,EAAA1C,GACA,IAAA6D,EAhYA,IAiYWlE,EAAXT,EA7IiB6B,OAAOa,MA+IpBjB,OACS2D,UAAA/D,MAgBTb,OAdAkB,EAAJZ,GAAAT,WAAAwD,IACI1B,EA1IgBwC,GAAe,IAHfA,GAAe,GA+InCV,GAAA,GAKWE,EAAHtD,EAEIC,GAAId,WAIZQ,eAAiB6E,EAAmBC,GAApC9E,KAAkCmE,EAAlCnE,YAEJ,GAAA,QAAAc,EAAA,CAEAwB,EACIyC,OAAQC,QACXnD,KAAA,KAAA,GAhJQA,KAAK,KAAM,GAkJpBA,KAAA,KAAA,GACIrC,KAAA,KAAA,GACAqC,KAAIT,SAAOF,SADfW,KAEO,eAAA,GACHA,KAAIT,iBAAJ,QACHS,KAAA,YAAA,SAAAmB,EAAA1C,GAAA,MAAA,cAAAM,EAAA,EAAA,WAGD0B,EACIoB,OAAOC,QAEkB9B,KAAA,OAAA,cACxBgC,KAHG,YADR,uBA7ISjB,KAAK,SAACI,EAAG1C,GASN,OA4IJ0B,EAAaX,GAAAA,UAAH,GACdW,IAAkBG,OAAM5B,EAAxBD,GAAAT,WAhJmBU,EAAWD,GAAGT,YAsKjC,IAAAyE,EAAIW,GA9JAxB,GAAQ,EAgKZnB,EACI4C,OAAAA,QACHrD,KAAA,KAAA,GACDA,KAAIoD,KAAAA,GACAA,KAAAA,KAAAA,GACHpD,KAAA,KAAA,SAAAmB,EAAA1C,GA9JO,IAAIkD,EAAM,EAqLlBlB,OAhCJ/B,EAAAD,GAAAV,YAAA0E,IAlJqBb,EAyKrBD,EAAA,IATAA,EAAA,GAEKnC,GADO,GAcFkC,EALVhD,EAAAD,GAAAV,YAQUwC,IAAAP,KAOF,SAAc,SACdA,KAAA,eAAA,GACAA,KAAIvB,iBAAJ,QA5KCuB,KAAK,YAAa,SAACmB,EAAG1C,GAAJ,MAAA,uBAgLnBgE,EAAO5B,GACHA,IAAAA,EAAc,GACdpC,GAAAA,EACHgC,EACDK,OAAIjB,QACJlC,KACK6B,OAAU+B,gBA7KdvB,KAAK,iBAAkB,QAoLxBrC,KACK6B,SAAAA,EAAO7B,GAUZ,IAAAsB,EArCE,GAyDNqE,OA9MY5E,EAAWD,GAAGV,YAAc4E,IAmM/BnD,EAAU+B,OAAMtB,EAChBT,GAAOqD,eATZ,SAOAC,MAIU,UAjDlB7D,GAAAA,IAAAyD,OAAAhE,EAAAD,GAAAlB,eAsDAoF,EAAAjE,EAAAD,GAAAV,YAGIkB,IAEAqE,KAAAA,YAAkBC,SAAlBpC,EAAA1C,GACH,IAAA6D,EA7hBD,IAuVgBkB,EAAa7F,EAwM7B6B,OAAAa,MAEYkC,OAGalD,UAAW8B,MAyBxBsC,OAjOI/E,EAAWD,GAAGV,YAAc0E,IA0M5Cb,EAQAU,GAAA,IAPeoB,GAAH,GAxMQ9B,GAAQ,GAuN5Ba,EAEY/D,EACPsB,GAAKjC,YAIE0F,eAAUD,EAAuBnC,GAAjCoC,KAAsCjB,EAAtCiB,OAjNZlD,EAwNAO,OAAA,KACAd,KAAIoB,QAAWsC,YAtNV5C,OAAO,QA2NZP,EAAAf,OAAA,aAAAsB,OAAA,QAQA,eAAAf,GAAA,eAAAA,GACAQ,EAKQf,OALRe,IAKmB5C,GACXqC,KAAIsB,SAAY3C,EAAc0C,GAC9BrB,KAAIyD,QAAW9E,EAAa0C,GAC5B3B,MAAIiE,SAAAA,cAQP7C,iBADLP,SAEUnC,EAAS2B,EAAA2B,GA5MnB,IAAK,IAvBDvD,EAAOC,EAEPgB,EAAa,KACbT,GAAWC,IAAK,GAAIO,MAAO,GAAIQ,OAAQ,GAAIb,KAAM,IAGjDgB,EADS,IACenB,EAAOC,IAAMD,EAAOgB,OAG5CT,EADQ,IACcP,EAAOG,KAAOH,EAAOQ,MAI3CyE,EAAIjG,EAAGmE,MACNC,SACA8B,QAAQ,EAAGlG,EAAG2B,IAAInB,KAClB6D,OAAO,EARA,MAWR7D,EAAOR,EAAGmG,OAAOd,YAAYe,KAAKH,EAAEX,MAAM,IAAnCtF,CAAwCQ,GAG/C+E,KACKzE,EAAI,EAAGA,EAAIN,EAAK6F,OAAQvF,IAC7ByE,EAAQC,KAAKhF,EAAKM,GAAGuF,QAIzB,GAAoB,GAAhBrG,EAAG2B,IAAInB,GACHoB,EAxBK,IAwBW5B,EAAG2B,IAAI4D,QAE3B,IAAI3D,EAAO,EAKf,IAAIsC,EAAIlE,EAAGmE,MACNC,SACA8B,QAAQ,EAAGlG,EAAG2B,IAAInB,EAAM,SAAAgD,GAAA,OAAKA,EAAEU,MAC/BG,OAlCQ,IAkCO,IAwChBzB,EAAQ5C,EACP6B,OADO,IACIO,GACXC,KAAK,UAFE,OAEgBd,EAFhB,IAE+BY,GACtCE,KAAK,QAASd,GACdc,KAAK,SAAUF,GACfE,KAAK,sBAAuB,YAC5BE,GAAG,QA3CR,WACI,IAAIC,EAAUxC,EAAG6B,OAAOa,MAAML,KAAK,SACnCG,EAAUA,EAAQG,MAAM,KACxB3C,EACK8B,UADL,IACmBU,EAAQ,IACtBK,OAFL,IAEgBL,EAAQ,IACnBT,MAAM,SAAU,WAChBkB,aACAF,SAAS,KACTV,KAAK,SAAUF,GACfE,KAAK,QAASd,GAEnBvB,EACK6B,OAAOa,MACPX,MAAM,SAAU,WAChBkB,aACAF,SAAS,KACTV,KAAK,SAAUF,EAAeV,GAC9BY,KAAK,QAASd,EAAcE,KA4BrCmB,EACKO,OAAO,KACPA,OAAO,QACPd,KAAK,QAAS,SACdA,KAAK,YAAa,SAAAyB,GAAA,MAAA,wBAClBV,KAAKW,GAGV,IAuDI4B,EAvDA7C,EAAMF,EACLd,UAAU,QACVtB,KAAKA,GACL6C,QACAF,OAAO,KACPd,KAAK,QAAS,OACdA,KAAK,YAAa,SAAAmB,GAAA,MAAA,eAAmByC,EAAEzC,EAAEyC,KAAMjF,EAAOG,MAApC,MAA6C+C,EAAEV,EAAEU,KAAMlD,EAAOC,KAA9D,MAClBsB,GAAG,aAAc,SAAAiB,GAMd,IAJA,IAAI1C,EAAI,EAEJoC,EAAOM,EAAE6C,OAENnD,GAAQ,GACXA,GAAc,GACdpC,IAEJ,IAAIoB,EAAW,EAAJpB,EAAQ,GACnBd,EACK6B,OAAO7B,EAAG4D,MAAMtB,KAAK,IACrBT,OAAO,aACPA,OAAO,QACPQ,KAAK,YAJV,eAIqCrB,EAAOG,KAAO,GAJnD,MA7GK,IAiH6DqC,EAAE6C,OAASzE,IAAQZ,EAAOC,IAAM,IAJlG,MAKKoB,KAAK,aAAc,WACnBe,KAAKI,EAAE6C,QAEZrG,EACK6B,OAAO7B,EAAG4D,MAAMtB,KAAK,IACrBT,OAAO,aACPQ,KAAK,QAAYH,EAHtB,MAIKG,KAAK,SAAU,QACfR,OAAO,QACPQ,KAAK,YANV,gBAMsCrB,EAAOG,KAAOe,GANpD,MArHK,IA2HiEsB,EAAE6C,OAASzE,IAAQZ,EAAOC,KANhG,MAOKoB,KAAK,QAAYH,EAPtB,MAQKG,KAAK,SAAU,QACfA,KAAK,OAAQ,aAErBE,GAAG,aAAc,SAAAiB,GAEdxD,EACK6B,OAAO7B,EAAG4D,MAAMtB,KAAK,IACrBT,OAAO,aACPA,OAAO,QACPQ,KAAK,aAAc,UAExBrC,EACK6B,OAAO7B,EAAG4D,MAAMtB,KAAK,IACrBT,OAAO,aACPA,OAAO,QACPQ,KAAK,QAAS,KACdA,KAAK,SAAU,KACfA,KAAK,OAAQ,MAMtBsD,OADWW,GAAX9F,EAAK,GACG,EAEAyF,EAAEzF,EAAK,GAAGoF,IAItB9C,EACKK,OAAO,QACPd,KAAK,IAAK,GACVA,KAAK,QAASsD,EAAQ,GACtBtD,KAAK,SAAU,SAAAmB,GAAA,OA9JP,IA8JqBU,EAAEV,EAAEU,KAGtC,IAAIqC,EAAQvG,EAAG+F,IACVrC,OACAS,MAAM8B,GACN3B,OAAO,UACPC,WA1Ge,SAAAf,GAChB,IAAIkC,EAAQc,KAAKC,MAAMjD,EAAI,IACvBiC,EAAUe,KAAKC,MAAMjD,EAAY,GAARkC,GAS7B,OAPIA,EAAQ,KACRA,EAAAA,IAAYA,GAEZD,EAAU,KACVA,EAAAA,IAAcA,GAGRC,EAAV,IAAmBD,IAkGvB7C,EACKO,OAAO,KACPd,KAAK,QAAS,UACdA,KAAK,KAHV,KAGqBD,GAChBC,KAAK,YAJV,cAIqCrB,EAAOG,KAJ5C,MAI+DH,EAAOC,IAAlB,KAJpD,KAKKyD,KAAK6B,GAGV3D,EACKO,OAAO,KACPA,OAAO,QACPd,KAAK,QAAS,YACdA,KAAK,YAAa,SAAAyB,GACf,IAAIJ,EAAO1D,EAAG6B,OAAH,MAAgBO,GAAQwC,OAKnC,MAFIoB,eAFYhF,EAAOG,KAAOuC,EAAKmB,wBAAwBxD,MAAQ,EAAI,IAEnE,MADWL,EAAOC,IAvLjB,IAuLgCyC,EAAKmB,wBAAwBnD,OAAS,IACvE,MAIP0B,KAAK,kBAGV,IAAIK,EAAQzD,EAAG+F,IACVrC,OACAS,MAAMD,GACNI,OAAO,QAGZ1B,EACKO,OAAO,KACPd,KAAK,QAAS,UACdA,KAAK,KAHV,KAGqBD,GAChBC,KAAK,YAJV,cAIqCrB,EAAOG,KAJ5C,IAIoDH,EAAOC,IAJ3D,KAKKyD,KAAKjB,GAGVb,EACKO,OAAO,KACPA,OAAO,QACPd,KAAK,QAAS,YACdA,KAAK,YAAa,SAAAyB,GACf,IAAIJ,EAAO1D,EAAG6B,OAAH,MAAgBO,GAAQwC,OAKnC,MAFIoB,eAFYhF,EAAOG,KAAOuC,EAAKmB,wBAAwBxD,MAAQ,GAE/D,MADWL,EAAOC,IAAMyC,EAAKmB,wBAAwBnD,OAAS,EAAI,IAClE,iBAIP0B,KAAK,kBAGVR,EACKO,OAAO,KACPd,KAAK,QAAS,YACdc,OAAO,QACZP,EAAMf,OAAO,aAAasB,OAAO,SA5qBrC,IAAInD,EAAKC,OAAOD","file":"../../scripts/reports_webapp/run_stats.js","sourcesContent":["// TODO: get rid of this.\nvar d3 = window.d3;\n\nfunction date_by_subtracting_days(date, days) {\n    return new Date(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate() - days,\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds(),\n        date.getMilliseconds()\n    );\n}\n\nfunction date_by_subtracting_hours(date, hours) {\n    return new Date(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n        date.getHours() - hours,\n        date.getMinutes(),\n        date.getSeconds(),\n        date.getMilliseconds()\n    );\n}\n\n// Gets the utc time without minutes and seconds\nfunction get_utc_time_hours() {\n    var date = new Date();\n    return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), 0, 0);\n}\n\n// This is commented out until we make Reports more responsive.\n// setTimeout(refresh, 60000); //1 minute = 60000 ms\n\nexport function create_chart(inp_data, name, time, title) {\n    // Initialize starting variables\n    var data = inp_data;\n\n    var hours_array = [];\n    var now = get_utc_time_hours();\n    var i;\n    for (i = 0; i < 24; i++) {\n        hours_array.push(date_by_subtracting_hours(now, i));\n    }\n\n    var days_array = [];\n    for (i = 0; i < 30; i++) {\n        days_array.push(date_by_subtracting_days(now, i));\n    }\n\n    var margin = { top: 60, right: 30, bottom: 50, left: 60 };\n    var width = 300;\n    var barWidth = 0;\n    if (time == \"hours\") {\n        barWidth = width / 24;\n    } else if (time == \"days\") {\n        barWidth = width / 30;\n    }\n    var chart_width = width + margin.left + margin.right;\n\n    var chart_zoom = 1.75;\n    var height = 150;\n    if (d3.max(data) != 0) {\n        var zoom = height / d3.max(data);\n    } else {\n        var zoom = 1.0;\n    }\n    var chart_height = height + margin.top + margin.bottom;\n\n    // Function for zooming in and out of charts\n    function click() {\n        var classes = d3.select(this).attr(\"class\");\n        classes = classes.split(\" \");\n        d3\n            .selectAll(`.${classes[0]}`)\n            .filter(`.${classes[1]}`)\n            .style(\"cursor\", \"zoom-in\")\n            .transition()\n            .duration(750)\n            .attr(\"height\", chart_height)\n            .attr(\"width\", chart_width);\n\n        d3\n            .select(this)\n            .style(\"cursor\", \"default\")\n            .transition()\n            .duration(750)\n            .attr(\"height\", chart_height * chart_zoom)\n            .attr(\"width\", chart_width * chart_zoom);\n    }\n\n    // Initialize all chart containers to have the correct height\n    $(\".charts\").css(\"height\", chart_height * chart_zoom);\n\n    // Create the chart object\n    var chart = d3\n        .select(`#${name}`)\n        .attr(\"width\", chart_width)\n        .attr(\"height\", chart_height)\n        .attr(\"preserveAspectRatio\", \"xMidYMin\")\n        .attr(\"viewBox\", `0 0 ${chart_width} ${chart_height}`)\n        .on(\"click\", click);\n\n    // Create bars on the chart and assosciate data with it\n    var bar = chart\n        .selectAll(\"g\")\n        .data(data)\n        .enter()\n        .append(\"g\")\n        .attr(\"transform\", (d, i) => {\n            // Place the bar in the correct place\n            var curr_margin = +margin.left;\n            curr_margin += +(i * barWidth);\n            return `translate(${curr_margin},${margin.top})`;\n        })\n        .on(\"mouseenter\", d => {\n            // Show tool tip\n            var i = 1;\n            var size = d;\n\n            while (size >= 10) {\n                size = size / 10;\n                i++;\n            }\n\n            var wdth = i * 4 + 10;\n            d3\n                .select(d3.event.path[1])\n                .select(\".tool_tip\")\n                .select(\"text\")\n                .attr(\"transform\", `translate( ${margin.left - 5}, ${height - d * zoom + +margin.top + 10} )`)\n                .attr(\"visibility\", \"visible\")\n                .text(d);\n\n            d3\n                .select(d3.event.path[1])\n                .select(\".tool_tip\")\n                .attr(\"width\", `${wdth}px`)\n                .attr(\"height\", \"15px\")\n                .select(\"rect\")\n                .attr(\"transform\", `translate( ${+margin.left - wdth}, ${height - d * zoom + +margin.top} )`)\n                .attr(\"width\", `${wdth}px`)\n                .attr(\"height\", \"15px\")\n                .attr(\"fill\", \"#ebd9b2\");\n        })\n        .on(\"mouseleave\", d => {\n            // Remove tool tip\n            d3\n                .select(d3.event.path[1])\n                .select(\".tool_tip\")\n                .select(\"text\")\n                .attr(\"visibility\", \"hidden\");\n\n            d3\n                .select(d3.event.path[1])\n                .select(\".tool_tip\")\n                .select(\"rect\")\n                .attr(\"width\", \"0\")\n                .attr(\"height\", \"0\")\n                .attr(\"fill\", \"\")\n                .text(d);\n        });\n\n    // Add a title to the chart\n    chart\n        .append(\"g\")\n        .append(\"text\")\n        .attr(\"class\", \"title\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"transform\", e => `translate( ${width},15 )`)\n        .text(title);\n\n    // Add an x axis line to the chart\n    chart\n        .append(\"g\")\n        .attr(\"class\", \"axis\")\n        .append(\"path\")\n        .attr(\"class\", \"x\")\n        .attr(\"d\", d => {\n            var m_x = margin.left;\n            var m_y = +margin.top + height;\n            var l_x = m_x + width;\n            var l_y = m_y;\n\n            return `M${m_x} ${m_y} L ${l_x} ${l_y}`;\n        });\n\n    // Declare how high the y axis goes\n    var y = d3.scale.linear().range([height, 0]);\n\n    // Create a yAxis object\n    var yAxis = d3.svg\n        .axis()\n        .scale(y)\n        .orient(\"left\")\n        .tickFormat(d => d3.round(d * d3.max(data), 0));\n\n    // Put the y axis on the chart\n    chart\n        .append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"id\", `y_${name}`)\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"transform\", `translate( ${margin.left},${margin.top})`)\n        .call(yAxis)\n        .select(\".domain\");\n\n    // Put a title for y axis on chart\n    chart\n        .append(\"g\")\n        .append(\"text\")\n        .attr(\"class\", \"ax_title\")\n        .attr(\"transform\", e => {\n            var axis = d3.select(`#y_${name}`).node();\n            var left_pad = +margin.left - axis.getBoundingClientRect().width - 5;\n            var top_pad = +margin.top + axis.getBoundingClientRect().height / 2 - 30;\n            var trans = `translate(${left_pad},${top_pad})rotate(-90)`;\n\n            return trans;\n        })\n        .text(\"Number of Jobs\");\n\n    // Add color to the chart's bars\n    bar\n        .append(\"rect\")\n        .attr(\"y\", d => height - d * zoom)\n        .attr(\"height\", d => d * zoom)\n        .attr(\"width\", barWidth - 1);\n\n    // Append x axis\n    if (time == \"hours\") {\n        // Append hour lines\n        bar\n            .append(\"line\")\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\"y2\", 3)\n            .attr(\"stroke\", \"black\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"transform\", (d, i) => `translate( ${barWidth / 2}, ${height})`);\n\n        // Append hour numbers\n        bar\n            .append(\"text\")\n            .attr(\"fill\", \"rgb(0,0,0)\")\n            .attr(\"transform\", `translate( 10, ${height + 10} )`)\n            .text((d, i) => {\n                var time = \"0000\";\n\n                if (hours_array[i].getHours() < 10) {\n                    time = `0${String(hours_array[i].getHours())}`;\n                } else {\n                    time = hours_array[i].getHours();\n                }\n\n                return time;\n            });\n\n        // Append day lines\n        var curr_day = \"\";\n        var first = false;\n        bar\n            .append(\"line\")\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\"y2\", (d, i) => {\n                var _y2 = 0;\n\n                if (hours_array[i].getDate() != curr_day) {\n                    if (!first) {\n                        _y2 = 27;\n                        first = true;\n                    } else {\n                        _y2 = 20;\n                    }\n\n                    curr_day = hours_array[i].getDate();\n                }\n\n                return _y2;\n            })\n            .attr(\"stroke\", \"black\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"transform\", (d, i) => `translate( 0, ${height})`);\n\n        // Append day numbers\n        curr_day = \"\";\n        var curr_day_text = \"\";\n        first = false;\n        bar\n            .append(\"text\")\n            .attr(\"fill\", \"rgb(0,0,0)\")\n            .attr(\"pointer-events\", \"none\")\n            .text((d, i) => {\n                var time = \"\";\n                var locale = \"en-us\";\n\n                if (hours_array[i].getDate() != curr_day_text) {\n                    time = String(hours_array[i].toLocaleString(locale, { month: \"long\" }));\n                    time += ` ${String(hours_array[i].getDate())}`;\n\n                    curr_day_text = hours_array[i].getDate();\n                }\n\n                return time;\n            })\n            .attr(\"transform\", function(d, i) {\n                var text_height = height;\n                var this_width = d3\n                    .select(this)\n                    .node()\n                    .getBBox().width;\n\n                if (hours_array[i].getDate() != curr_day) {\n                    if (!first) {\n                        text_height += 26;\n                        first = true;\n                    } else {\n                        text_height += 18;\n                    }\n\n                    curr_day = hours_array[i].getDate();\n                }\n\n                return `translate( ${this_width + 2}, ${text_height} )`;\n            });\n    } else if (time == \"days\") {\n        // Append day lines\n        bar\n            .append(\"line\")\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\"y2\", 3)\n            .attr(\"stroke\", \"black\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"transform\", (d, i) => `translate( ${barWidth / 2}, ${height})`);\n\n        // Append day numbers\n        bar\n            .append(\"text\")\n            .attr(\"fill\", \"rgb(0,0,0)\")\n            .attr(\"transform\", `translate( 9, ${height + 10} )`)\n            .text((d, i) => {\n                var time = \"0000\";\n\n                if (days_array[i].getDate() < 10) {\n                    time = `0${String(days_array[i].getDate())}`;\n                } else {\n                    time = days_array[i].getDate();\n                }\n\n                return time;\n            });\n\n        // Append month lines\n        var curr_month = \"\";\n        var first = false;\n        bar\n            .append(\"line\")\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\"y2\", (d, i) => {\n                var _y2 = 0;\n\n                if (days_array[i].getMonth() != curr_month) {\n                    if (!first) {\n                        _y2 = 27;\n                        first = true;\n                    } else {\n                        _y2 = 20;\n                    }\n\n                    curr_month = days_array[i].getMonth();\n                }\n\n                return _y2;\n            })\n            .attr(\"stroke\", \"black\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"transform\", (d, i) => `translate( 0, ${height})`);\n\n        // Append month numbers\n        curr_month = \"\";\n        var curr_month_text = \"\";\n        first = false;\n        bar\n            .append(\"text\")\n            .attr(\"fill\", \"rgb(0,100,0)\")\n            .attr(\"pointer-events\", \"none\")\n            .text((d, i) => {\n                var time = \"\";\n                var locale = \"en-us\";\n\n                if (days_array[i].getMonth() != curr_month_text) {\n                    time = String(days_array[i].toLocaleString(locale, { month: \"long\" }));\n                    time += ` ${String(days_array[i].getFullYear())}`;\n\n                    curr_month_text = days_array[i].getMonth();\n                }\n\n                return time;\n            })\n            .attr(\"transform\", function(d, i) {\n                var text_height = height;\n                var this_width = d3\n                    .select(this)\n                    .node()\n                    .getBBox().width;\n\n                if (days_array[i].getMonth() != curr_month) {\n                    if (!first) {\n                        text_height += 26;\n                        first = true;\n                    } else {\n                        text_height += 18;\n                    }\n\n                    curr_month = days_array[i].getMonth();\n                }\n\n                return `translate( ${this_width + 2}, ${text_height} )`;\n            });\n    }\n\n    // Put an invisible tool tip on the chart\n    chart\n        .append(\"g\")\n        .attr(\"class\", \"tool_tip\")\n        .append(\"rect\");\n    chart.select(\".tool_tip\").append(\"text\");\n\n    // Initialize initial zoomed charts\n    if (name == \"jc_dy_chart\" || name == \"jc_hr_chart\") {\n        d3\n            .select(`#${name}`)\n            .attr(\"height\", chart_height * chart_zoom)\n            .attr(\"width\", chart_width * chart_zoom)\n            .style(\"cursor\", \"default\");\n    }\n}\n\n//============================================================================================================\n\nexport function create_histogram(inp_data, name, title) {\n    // Initialize initial variables\n    // inp_data is an array of numbers that are the amount of minutes per run\n    var data = inp_data;\n\n    var chart_zoom = 1.75;\n    var margin = { top: 60, right: 30, bottom: 50, left: 60 };\n\n    var height = 150;\n    var chart_height = height + margin.top + margin.bottom;\n\n    var width = 300;\n    var chart_width = width + margin.left + margin.right;\n\n    // Cereate x axis metadata\n    // Used for x axis, histogram creation, and bar initialization\n    var x = d3.scale\n        .linear()\n        .domain([0, d3.max(data)])\n        .range([0, width]);\n\n    // Generate a histogram using twenty uniformly-spaced bins.\n    var data = d3.layout.histogram().bins(x.ticks(20))(data);\n\n    // Create an array of the sizes of the bars\n    var lengths = [];\n    for (var i = 0; i < data.length; i++) {\n        lengths.push(data[i].length);\n    }\n\n    // Find the amount needed to magnify the bars\n    if (d3.max(data) != 0) {\n        var zoom = height / d3.max(lengths);\n    } else {\n        var zoom = 1.0;\n    }\n\n    // Create y axis metadata\n    // Used for y axis and bar initialization\n    var y = d3.scale\n        .linear()\n        .domain([0, d3.max(data, d => d.y)])\n        .range([height, 0]);\n\n    // Function for zooming in and out of charts\n    function click() {\n        var classes = d3.select(this).attr(\"class\");\n        classes = classes.split(\" \");\n        d3\n            .selectAll(`.${classes[0]}`)\n            .filter(`.${classes[1]}`)\n            .style(\"cursor\", \"zoom-in\")\n            .transition()\n            .duration(750)\n            .attr(\"height\", chart_height)\n            .attr(\"width\", chart_width);\n\n        d3\n            .select(this)\n            .style(\"cursor\", \"default\")\n            .transition()\n            .duration(750)\n            .attr(\"height\", chart_height * chart_zoom)\n            .attr(\"width\", chart_width * chart_zoom);\n    }\n\n    // Formatter for x axis times (converting minutes to HH:MM).\n    var formatMinutes = d => {\n        var hours = Math.floor(d / 60);\n        var minutes = Math.floor(d - hours * 60);\n\n        if (hours < 10) {\n            hours = `0${hours}`;\n        }\n        if (minutes < 10) {\n            minutes = `0${minutes}`;\n        }\n\n        return `${hours}:${minutes}`;\n    };\n\n    // Create a chart object\n    var chart = d3\n        .select(`#${name}`)\n        .attr(\"viewBox\", `0 0 ${chart_width} ${chart_height}`)\n        .attr(\"width\", chart_width)\n        .attr(\"height\", chart_height)\n        .attr(\"preserveAspectRatio\", \"xMidYMin\")\n        .on(\"click\", click);\n\n    // Put title on chart\n    chart\n        .append(\"g\")\n        .append(\"text\")\n        .attr(\"class\", \"title\")\n        .attr(\"transform\", e => `translate( ${width},15 )`)\n        .text(title);\n\n    // Put bars on chart\n    var bar = chart\n        .selectAll(\".bar\")\n        .data(data)\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"bar\")\n        .attr(\"transform\", d => `translate(${+x(d.x) + +margin.left},${+y(d.y) + +margin.top})`)\n        .on(\"mouseenter\", d => {\n            // Show tool tip\n            var i = 0;\n\n            var size = d.length;\n\n            while (size >= 1) {\n                size = size / 10;\n                i++;\n            }\n            var wdth = i * 4 + 10;\n            d3\n                .select(d3.event.path[1])\n                .select(\".tool_tip\")\n                .select(\"text\")\n                .attr(\"transform\", `translate( ${margin.left - 5}, ${height - d.length * zoom + +margin.top + 10} )`)\n                .attr(\"visibility\", \"visible\")\n                .text(d.length);\n\n            d3\n                .select(d3.event.path[1])\n                .select(\".tool_tip\")\n                .attr(\"width\", `${wdth}px`)\n                .attr(\"height\", \"15px\")\n                .select(\"rect\")\n                .attr(\"transform\", `translate( ${+margin.left - wdth}, ${height - d.length * zoom + +margin.top} )`)\n                .attr(\"width\", `${wdth}px`)\n                .attr(\"height\", \"15px\")\n                .attr(\"fill\", \"#ebd9b2\");\n        })\n        .on(\"mouseleave\", d => {\n            // Remove tool tip\n            d3\n                .select(d3.event.path[1])\n                .select(\".tool_tip\")\n                .select(\"text\")\n                .attr(\"visibility\", \"hidden\");\n\n            d3\n                .select(d3.event.path[1])\n                .select(\".tool_tip\")\n                .select(\"rect\")\n                .attr(\"width\", \"0\")\n                .attr(\"height\", \"0\")\n                .attr(\"fill\", \"\");\n        });\n\n    // Create bar width\n    var bar_x;\n    if (data[0] == undefined) {\n        bar_x = 1;\n    } else {\n        bar_x = x(data[0].dx);\n    }\n\n    // Add color to bar\n    bar\n        .append(\"rect\")\n        .attr(\"x\", 1)\n        .attr(\"width\", bar_x - 1)\n        .attr(\"height\", d => height - y(d.y));\n\n    // Create x axis\n    var xAxis = d3.svg\n        .axis()\n        .scale(x)\n        .orient(\"bottom\")\n        .tickFormat(formatMinutes);\n\n    // Add x axis to chart\n    chart\n        .append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"id\", `x_${name}`)\n        .attr(\"transform\", `translate( ${margin.left},${+height + +margin.top})`)\n        .call(xAxis);\n\n    // Add a title to the x axis\n    chart\n        .append(\"g\")\n        .append(\"text\")\n        .attr(\"class\", \"ax_title\")\n        .attr(\"transform\", e => {\n            var axis = d3.select(`#x_${name}`).node();\n            var left_pad = +margin.left + axis.getBoundingClientRect().width / 2 + 30;\n            var top_pad = +margin.top + height + axis.getBoundingClientRect().height + 10;\n            var trans = `translate(${left_pad},${top_pad})`;\n\n            return trans;\n        })\n        .text(\"ETA - hrs:mins\");\n\n    // Create y axis\n    var yAxis = d3.svg\n        .axis()\n        .scale(y)\n        .orient(\"left\");\n\n    // Add y axis to chart\n    chart\n        .append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"id\", `y_${name}`)\n        .attr(\"transform\", `translate( ${margin.left},${margin.top})`)\n        .call(yAxis);\n\n    // Add a title to the y axis\n    chart\n        .append(\"g\")\n        .append(\"text\")\n        .attr(\"class\", \"ax_title\")\n        .attr(\"transform\", e => {\n            var axis = d3.select(`#y_${name}`).node();\n            var left_pad = +margin.left - axis.getBoundingClientRect().width - 5;\n            var top_pad = +margin.top + axis.getBoundingClientRect().height / 2 - 30;\n            var trans = `translate(${left_pad},${top_pad})rotate(-90)`;\n\n            return trans;\n        })\n        .text(\"Number of Jobs\");\n\n    // Put an invisible tool tip on the chart\n    chart\n        .append(\"g\")\n        .attr(\"class\", \"tool_tip\")\n        .append(\"rect\");\n    chart.select(\".tool_tip\").append(\"text\");\n}\n"]}