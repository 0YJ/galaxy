{"version":3,"sources":["reports_webapp/run_stats.js"],"names":["date_by_subtracting_days","date","days","Date","getFullYear","create_chart","create_histogram","getHours","d3","getMinutes","getSeconds","getMilliseconds","date_by_subtracting_hours","hours","getMonth","getDate","get_utc_time_hours","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","inp_data","name","time","title","i","data","hours_array","now","push","days_array","margin","top","bottom","left","barWidth","chart_width","right","chart_zoom","max","width","chart_height","$","css","chart","select","curr_margin","attr","on","this","classes","zoom","height","selectAll","filter","transition","duration","click","style","bar","size","enter","append","d","path","wdth","m_x","m_y","l_x","l_y","text","_d","event","yAxis","svg","round","axis","left_pad","top_pad","trans","e","curr_day","y","scale","linear","range","_y2","first","tickFormat","text_height","call","locale","node","String","getBoundingClientRect","month","curr_month","curr_month_text","this_width","curr_day_text","toLocaleString","getBBox","lengths","formatMinutes","minutes","xAxis","x","layout","histogram","bins","ticks","length","domain","split","bar_x","undefined","dx","orient","Math","floor"],"mappings":"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","file":"../../scripts/reports_webapp/run_stats.js","sourcesContent":["import * as d3 from \"../libs/d3\";\nimport { event as currentEvent } from \"../libs/d3\";\n\nfunction date_by_subtracting_days(date, days) {\n    return new Date(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate() - days,\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds(),\n        date.getMilliseconds()\n    );\n}\n\nfunction date_by_subtracting_hours(date, hours) {\n    return new Date(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n        date.getHours() - hours,\n        date.getMinutes(),\n        date.getSeconds(),\n        date.getMilliseconds()\n    );\n}\n\n// Gets the utc time without minutes and seconds\nfunction get_utc_time_hours() {\n    var date = new Date();\n    return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), 0, 0);\n}\n\n// This is commented out until we make Reports more responsive.\n// setTimeout(refresh, 60000); //1 minute = 60000 ms\n\nexport function create_chart(inp_data, name, time, title) {\n    // Initialize starting variables\n    var data = inp_data;\n\n    var hours_array = [];\n    var now = get_utc_time_hours();\n    var i;\n    for (i = 0; i < 24; i++) {\n        hours_array.push(date_by_subtracting_hours(now, i));\n    }\n\n    var days_array = [];\n    for (i = 0; i < 30; i++) {\n        days_array.push(date_by_subtracting_days(now, i));\n    }\n\n    var margin = { top: 60, right: 30, bottom: 50, left: 60 };\n    var width = 300;\n    var barWidth = 0;\n    if (time == \"hours\") {\n        barWidth = width / 24;\n    } else if (time == \"days\") {\n        barWidth = width / 30;\n    }\n    var chart_width = width + margin.left + margin.right;\n\n    var chart_zoom = 1.75;\n    var height = 150;\n    if (d3.max(data) != 0) {\n        var zoom = height / d3.max(data);\n    } else {\n        var zoom = 1.0;\n    }\n    var chart_height = height + margin.top + margin.bottom;\n\n    // Function for zooming in and out of charts\n    function click() {\n        var classes = d3.select(this).attr(\"class\");\n        classes = classes.split(\" \");\n        d3\n            .selectAll(`.${classes[0]}`)\n            .filter(`.${classes[1]}`)\n            .style(\"cursor\", \"zoom-in\")\n            .transition()\n            .duration(750)\n            .attr(\"height\", chart_height)\n            .attr(\"width\", chart_width);\n\n        d3\n            .select(this)\n            .style(\"cursor\", \"default\")\n            .transition()\n            .duration(750)\n            .attr(\"height\", chart_height * chart_zoom)\n            .attr(\"width\", chart_width * chart_zoom);\n    }\n\n    // Initialize all chart containers to have the correct height\n    $(\".charts\").css(\"height\", chart_height * chart_zoom);\n\n    // Create the chart object\n    var chart = d3\n        .select(`#${name}`)\n        .attr(\"width\", chart_width)\n        .attr(\"height\", chart_height)\n        .attr(\"preserveAspectRatio\", \"xMidYMin\")\n        .attr(\"viewBox\", `0 0 ${chart_width} ${chart_height}`)\n        .on(\"click\", click);\n\n    // Create bars on the chart and assosciate data with it\n    var bar = chart\n        .selectAll(\"g\")\n        .data(data)\n        .enter()\n        .append(\"g\")\n        .attr(\"transform\", (d, i) => {\n            // Place the bar in the correct place\n            var curr_margin = +margin.left;\n            curr_margin += +(i * barWidth);\n            return `translate(${curr_margin},${margin.top})`;\n        })\n        .on(\"mouseenter\", d => {\n            // Show tool tip\n            var i = 1;\n            var size = d;\n\n            while (size >= 10) {\n                size = size / 10;\n                i++;\n            }\n\n            var wdth = i * 4 + 10;\n            d3\n                .select(currentEvent.path[1])\n                .select(\".tool_tip\")\n                .select(\"text\")\n                .attr(\"transform\", `translate( ${margin.left - 5}, ${height - d * zoom + +margin.top + 10} )`)\n                .attr(\"visibility\", \"visible\")\n                .text(d);\n\n            d3\n                .select(currentEvent.path[1])\n                .select(\".tool_tip\")\n                .attr(\"width\", `${wdth}px`)\n                .attr(\"height\", \"15px\")\n                .select(\"rect\")\n                .attr(\"transform\", `translate( ${+margin.left - wdth}, ${height - d * zoom + +margin.top} )`)\n                .attr(\"width\", `${wdth}px`)\n                .attr(\"height\", \"15px\")\n                .attr(\"fill\", \"#ebd9b2\");\n        })\n        .on(\"mouseleave\", d => {\n            // Remove tool tip\n            d3\n                .select(currentEvent.path[1])\n                .select(\".tool_tip\")\n                .select(\"text\")\n                .attr(\"visibility\", \"hidden\");\n\n            d3\n                .select(currentEvent.path[1])\n                .select(\".tool_tip\")\n                .select(\"rect\")\n                .attr(\"width\", \"0\")\n                .attr(\"height\", \"0\")\n                .attr(\"fill\", \"\")\n                .text(d);\n        });\n\n    // Add a title to the chart\n    chart\n        .append(\"g\")\n        .append(\"text\")\n        .attr(\"class\", \"title\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"transform\", e => `translate( ${width},15 )`)\n        .text(title);\n\n    // Add an x axis line to the chart\n    chart\n        .append(\"g\")\n        .attr(\"class\", \"axis\")\n        .append(\"path\")\n        .attr(\"class\", \"x\")\n        .attr(\"d\", d => {\n            var m_x = margin.left;\n            var m_y = +margin.top + height;\n            var l_x = m_x + width;\n            var l_y = m_y;\n\n            return `M${m_x} ${m_y} L ${l_x} ${l_y}`;\n        });\n\n    // Declare how high the y axis goes\n    var y = d3.scale.linear().range([height, 0]);\n\n    // Create a yAxis object\n    var yAxis = d3.svg\n        .axis()\n        .scale(y)\n        .orient(\"left\")\n        .tickFormat(d => d3.round(d * d3.max(data), 0));\n\n    // Put the y axis on the chart\n    chart\n        .append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"id\", `y_${name}`)\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"transform\", `translate( ${margin.left},${margin.top})`)\n        .call(yAxis)\n        .select(\".domain\");\n\n    // Put a title for y axis on chart\n    chart\n        .append(\"g\")\n        .append(\"text\")\n        .attr(\"class\", \"ax_title\")\n        .attr(\"transform\", e => {\n            var axis = d3.select(`#y_${name}`).node();\n            var left_pad = +margin.left - axis.getBoundingClientRect().width - 5;\n            var top_pad = +margin.top + axis.getBoundingClientRect().height / 2 - 30;\n            var trans = `translate(${left_pad},${top_pad})rotate(-90)`;\n\n            return trans;\n        })\n        .text(\"Number of Jobs\");\n\n    // Add color to the chart's bars\n    bar\n        .append(\"rect\")\n        .attr(\"y\", d => height - d * zoom)\n        .attr(\"height\", d => d * zoom)\n        .attr(\"width\", barWidth - 1);\n\n    // Append x axis\n    if (time == \"hours\") {\n        // Append hour lines\n        bar\n            .append(\"line\")\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\"y2\", 3)\n            .attr(\"stroke\", \"black\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"transform\", (d, i) => `translate( ${barWidth / 2}, ${height})`);\n\n        // Append hour numbers\n        bar\n            .append(\"text\")\n            .attr(\"fill\", \"rgb(0,0,0)\")\n            .attr(\"transform\", `translate( 10, ${height + 10} )`)\n            .text((d, i) => {\n                var time = \"0000\";\n\n                if (hours_array[i].getHours() < 10) {\n                    time = `0${String(hours_array[i].getHours())}`;\n                } else {\n                    time = hours_array[i].getHours();\n                }\n\n                return time;\n            });\n\n        // Append day lines\n        var curr_day = \"\";\n        var first = false;\n        bar\n            .append(\"line\")\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\"y2\", (d, i) => {\n                var _y2 = 0;\n\n                if (hours_array[i].getDate() != curr_day) {\n                    if (!first) {\n                        _y2 = 27;\n                        first = true;\n                    } else {\n                        _y2 = 20;\n                    }\n\n                    curr_day = hours_array[i].getDate();\n                }\n\n                return _y2;\n            })\n            .attr(\"stroke\", \"black\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"transform\", (d, i) => `translate( 0, ${height})`);\n\n        // Append day numbers\n        curr_day = \"\";\n        var curr_day_text = \"\";\n        first = false;\n        bar\n            .append(\"text\")\n            .attr(\"fill\", \"rgb(0,0,0)\")\n            .attr(\"pointer-events\", \"none\")\n            .text((d, i) => {\n                var time = \"\";\n                var locale = \"en-us\";\n\n                if (hours_array[i].getDate() != curr_day_text) {\n                    time = String(hours_array[i].toLocaleString(locale, { month: \"long\" }));\n                    time += ` ${String(hours_array[i].getDate())}`;\n\n                    curr_day_text = hours_array[i].getDate();\n                }\n\n                return time;\n            })\n            .attr(\"transform\", function(d, i) {\n                var text_height = height;\n                var this_width = d3\n                    .select(this)\n                    .node()\n                    .getBBox().width;\n\n                if (hours_array[i].getDate() != curr_day) {\n                    if (!first) {\n                        text_height += 26;\n                        first = true;\n                    } else {\n                        text_height += 18;\n                    }\n\n                    curr_day = hours_array[i].getDate();\n                }\n\n                return `translate( ${this_width + 2}, ${text_height} )`;\n            });\n    } else if (time == \"days\") {\n        // Append day lines\n        bar\n            .append(\"line\")\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\"y2\", 3)\n            .attr(\"stroke\", \"black\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"transform\", (d, i) => `translate( ${barWidth / 2}, ${height})`);\n\n        // Append day numbers\n        bar\n            .append(\"text\")\n            .attr(\"fill\", \"rgb(0,0,0)\")\n            .attr(\"transform\", `translate( 9, ${height + 10} )`)\n            .text((d, i) => {\n                var time = \"0000\";\n\n                if (days_array[i].getDate() < 10) {\n                    time = `0${String(days_array[i].getDate())}`;\n                } else {\n                    time = days_array[i].getDate();\n                }\n\n                return time;\n            });\n\n        // Append month lines\n        var curr_month = \"\";\n        var first = false;\n        bar\n            .append(\"line\")\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\"y2\", (d, i) => {\n                var _y2 = 0;\n\n                if (days_array[i].getMonth() != curr_month) {\n                    if (!first) {\n                        _y2 = 27;\n                        first = true;\n                    } else {\n                        _y2 = 20;\n                    }\n\n                    curr_month = days_array[i].getMonth();\n                }\n\n                return _y2;\n            })\n            .attr(\"stroke\", \"black\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"transform\", (d, i) => `translate( 0, ${height})`);\n\n        // Append month numbers\n        curr_month = \"\";\n        var curr_month_text = \"\";\n        first = false;\n        bar\n            .append(\"text\")\n            .attr(\"fill\", \"rgb(0,100,0)\")\n            .attr(\"pointer-events\", \"none\")\n            .text((d, i) => {\n                var time = \"\";\n                var locale = \"en-us\";\n\n                if (days_array[i].getMonth() != curr_month_text) {\n                    time = String(days_array[i].toLocaleString(locale, { month: \"long\" }));\n                    time += ` ${String(days_array[i].getFullYear())}`;\n\n                    curr_month_text = days_array[i].getMonth();\n                }\n\n                return time;\n            })\n            .attr(\"transform\", function(d, i) {\n                var text_height = height;\n                var this_width = d3\n                    .select(this)\n                    .node()\n                    .getBBox().width;\n\n                if (days_array[i].getMonth() != curr_month) {\n                    if (!first) {\n                        text_height += 26;\n                        first = true;\n                    } else {\n                        text_height += 18;\n                    }\n\n                    curr_month = days_array[i].getMonth();\n                }\n\n                return `translate( ${this_width + 2}, ${text_height} )`;\n            });\n    }\n\n    // Put an invisible tool tip on the chart\n    chart\n        .append(\"g\")\n        .attr(\"class\", \"tool_tip\")\n        .append(\"rect\");\n    chart.select(\".tool_tip\").append(\"text\");\n\n    // Initialize initial zoomed charts\n    if (name == \"jc_dy_chart\" || name == \"jc_hr_chart\") {\n        d3\n            .select(`#${name}`)\n            .attr(\"height\", chart_height * chart_zoom)\n            .attr(\"width\", chart_width * chart_zoom)\n            .style(\"cursor\", \"default\");\n    }\n}\n\n//============================================================================================================\n\nexport function create_histogram(inp_data, name, title) {\n    // Initialize initial variables\n    // inp_data is an array of numbers that are the amount of minutes per run\n    var data = inp_data;\n\n    var chart_zoom = 1.75;\n    var margin = { top: 60, right: 30, bottom: 50, left: 60 };\n\n    var height = 150;\n    var chart_height = height + margin.top + margin.bottom;\n\n    var width = 300;\n    var chart_width = width + margin.left + margin.right;\n\n    // Cereate x axis metadata\n    // Used for x axis, histogram creation, and bar initialization\n    var x = d3.scale\n        .linear()\n        .domain([0, d3.max(data)])\n        .range([0, width]);\n\n    // Generate a histogram using twenty uniformly-spaced bins.\n    var data = d3.layout.histogram().bins(x.ticks(20))(data);\n\n    // Create an array of the sizes of the bars\n    var lengths = [];\n    for (var i = 0; i < data.length; i++) {\n        lengths.push(data[i].length);\n    }\n\n    // Find the amount needed to magnify the bars\n    if (d3.max(data) != 0) {\n        var zoom = height / d3.max(lengths);\n    } else {\n        var zoom = 1.0;\n    }\n\n    // Create y axis metadata\n    // Used for y axis and bar initialization\n    var y = d3.scale\n        .linear()\n        .domain([0, d3.max(data, d => d.y)])\n        .range([height, 0]);\n\n    // Function for zooming in and out of charts\n    function click() {\n        var classes = d3.select(this).attr(\"class\");\n        classes = classes.split(\" \");\n        d3\n            .selectAll(`.${classes[0]}`)\n            .filter(`.${classes[1]}`)\n            .style(\"cursor\", \"zoom-in\")\n            .transition()\n            .duration(750)\n            .attr(\"height\", chart_height)\n            .attr(\"width\", chart_width);\n\n        d3\n            .select(this)\n            .style(\"cursor\", \"default\")\n            .transition()\n            .duration(750)\n            .attr(\"height\", chart_height * chart_zoom)\n            .attr(\"width\", chart_width * chart_zoom);\n    }\n\n    // Formatter for x axis times (converting minutes to HH:MM).\n    var formatMinutes = d => {\n        var hours = Math.floor(d / 60);\n        var minutes = Math.floor(d - hours * 60);\n\n        if (hours < 10) {\n            hours = `0${hours}`;\n        }\n        if (minutes < 10) {\n            minutes = `0${minutes}`;\n        }\n\n        return `${hours}:${minutes}`;\n    };\n\n    // Create a chart object\n    var chart = d3\n        .select(`#${name}`)\n        .attr(\"viewBox\", `0 0 ${chart_width} ${chart_height}`)\n        .attr(\"width\", chart_width)\n        .attr(\"height\", chart_height)\n        .attr(\"preserveAspectRatio\", \"xMidYMin\")\n        .on(\"click\", click);\n\n    // Put title on chart\n    chart\n        .append(\"g\")\n        .append(\"text\")\n        .attr(\"class\", \"title\")\n        .attr(\"transform\", e => `translate( ${width},15 )`)\n        .text(title);\n\n    // Put bars on chart\n    var bar = chart\n        .selectAll(\".bar\")\n        .data(data)\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"bar\")\n        .attr(\"transform\", d => `translate(${+x(d.x) + +margin.left},${+y(d.y) + +margin.top})`)\n        .on(\"mouseenter\", d => {\n            // Show tool tip\n            var i = 0;\n\n            var size = d.length;\n\n            while (size >= 1) {\n                size = size / 10;\n                i++;\n            }\n            var wdth = i * 4 + 10;\n            d3\n                .select(currentEvent.path[1])\n                .select(\".tool_tip\")\n                .select(\"text\")\n                .attr(\"transform\", `translate( ${margin.left - 5}, ${height - d.length * zoom + +margin.top + 10} )`)\n                .attr(\"visibility\", \"visible\")\n                .text(d.length);\n\n            d3\n                .select(currentEvent.path[1])\n                .select(\".tool_tip\")\n                .attr(\"width\", `${wdth}px`)\n                .attr(\"height\", \"15px\")\n                .select(\"rect\")\n                .attr(\"transform\", `translate( ${+margin.left - wdth}, ${height - d.length * zoom + +margin.top} )`)\n                .attr(\"width\", `${wdth}px`)\n                .attr(\"height\", \"15px\")\n                .attr(\"fill\", \"#ebd9b2\");\n        })\n        .on(\"mouseleave\", d => {\n            // Remove tool tip\n            d3\n                .select(currentEvent.path[1])\n                .select(\".tool_tip\")\n                .select(\"text\")\n                .attr(\"visibility\", \"hidden\");\n\n            d3\n                .select(currentEvent.path[1])\n                .select(\".tool_tip\")\n                .select(\"rect\")\n                .attr(\"width\", \"0\")\n                .attr(\"height\", \"0\")\n                .attr(\"fill\", \"\");\n        });\n\n    // Create bar width\n    var bar_x;\n    if (data[0] == undefined) {\n        bar_x = 1;\n    } else {\n        bar_x = x(data[0].dx);\n    }\n\n    // Add color to bar\n    bar\n        .append(\"rect\")\n        .attr(\"x\", 1)\n        .attr(\"width\", bar_x - 1)\n        .attr(\"height\", d => height - y(d.y));\n\n    // Create x axis\n    var xAxis = d3.svg\n        .axis()\n        .scale(x)\n        .orient(\"bottom\")\n        .tickFormat(formatMinutes);\n\n    // Add x axis to chart\n    chart\n        .append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"id\", `x_${name}`)\n        .attr(\"transform\", `translate( ${margin.left},${+height + +margin.top})`)\n        .call(xAxis);\n\n    // Add a title to the x axis\n    chart\n        .append(\"g\")\n        .append(\"text\")\n        .attr(\"class\", \"ax_title\")\n        .attr(\"transform\", e => {\n            var axis = d3.select(`#x_${name}`).node();\n            var left_pad = +margin.left + axis.getBoundingClientRect().width / 2 + 30;\n            var top_pad = +margin.top + height + axis.getBoundingClientRect().height + 10;\n            var trans = `translate(${left_pad},${top_pad})`;\n\n            return trans;\n        })\n        .text(\"ETA - hrs:mins\");\n\n    // Create y axis\n    var yAxis = d3.svg\n        .axis()\n        .scale(y)\n        .orient(\"left\");\n\n    // Add y axis to chart\n    chart\n        .append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"id\", `y_${name}`)\n        .attr(\"transform\", `translate( ${margin.left},${margin.top})`)\n        .call(yAxis);\n\n    // Add a title to the y axis\n    chart\n        .append(\"g\")\n        .append(\"text\")\n        .attr(\"class\", \"ax_title\")\n        .attr(\"transform\", e => {\n            var axis = d3.select(`#y_${name}`).node();\n            var left_pad = +margin.left - axis.getBoundingClientRect().width - 5;\n            var top_pad = +margin.top + axis.getBoundingClientRect().height / 2 - 30;\n            var trans = `translate(${left_pad},${top_pad})rotate(-90)`;\n\n            return trans;\n        })\n        .text(\"Number of Jobs\");\n\n    // Put an invisible tool tip on the chart\n    chart\n        .append(\"g\")\n        .attr(\"class\", \"tool_tip\")\n        .append(\"rect\");\n    chart.select(\".tool_tip\").append(\"text\");\n}\n"]}