{"version":3,"sources":["viz/trackster/filters.js"],"names":["extend","Filter","obj_dict","this","manager","name","index","tool_id","tool_exp_name","prototype","to_dict","create_action_icon","css_class","on_click_fn","$","attr","addClass","tooltip","click","low","Number","MAX_VALUE","high","min","max","container","slider_label","filter","parent_div","filter_label","values_span","appendTo","values_span_container","text","slider_div","control_element","slider","step","values","slide","change","edit_slider_values","range","display_controls_div","transparency_icon","alpha_filter","event","ui","track","force","span","call","parseFloat","toString","length","multi_value","slider_row","parents","input_size","cur_value","focus","select","e","stopPropagation","blur","remove","keyup","keyCode","trigger","removeClass","invalid","isNaN","a_val","slider_max","slider_min","new_value","val","alert","split","height_icon","show","hide","height_filter","request_draw","clear_after","type","find","NumberFilter","get_slider_step","self","copy","_keep_val","keep","element","applies_to","to_filter","Array","setTimeout","returnVal","updated","i","update_ui_elt","update_attrs","FiltersManager","Math","floor","value","filters","ceil","bind","alpha_filter_name","height_filter_name","filters_dict","filter_manager","filter_dicts","add_filter","visible","console","log","run_buttons_row","push","run_on_dataset","toggle","is","active_filters","new_track","tool_filter_conditions","get_or_create_dict_item","append","remove_all","active_filters_list","children","filter_tuple","target_dataset_id","title","buttons","Close","Galaxy","key","dict","new_item","run_filter","input_dataset_id","url_params","cond","tool_filter_str","join","input","slice","getJSON","run_tool_url","response","error","modal","body","dataset_id"],"mappings":"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","file":"../../../scripts/viz/trackster/filters.js","sourcesContent":["import * as _ from \"libs/underscore\";\nvar extend = _.extend;\n\n/**\n * Filters that enable users to show/hide data points dynamically.\n */\nvar Filter = function(obj_dict) {\n    this.manager = null;\n    this.name = obj_dict.name;\n    // Index into payload to filter.\n    this.index = obj_dict.index;\n    this.tool_id = obj_dict.tool_id;\n    // Name to use for filter when building expression for tool.\n    this.tool_exp_name = obj_dict.tool_exp_name;\n};\n\nextend(Filter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        return {\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        };\n    }\n});\n\n/**\n * Creates an action icon.\n */\nvar create_action_icon = (title, css_class, on_click_fn) =>\n    $(\"<a/>\")\n        .attr(\"href\", \"javascript:void(0);\")\n        .attr(\"title\", title)\n        .addClass(\"icon-button\")\n        .addClass(css_class)\n        .tooltip()\n        .click(on_click_fn);\n\n/**\n * Number filters have a min, max as well as a low, high; low and high are used \n */\nvar NumberFilter = function(obj_dict) {\n    //\n    // Attribute init.\n    //\n    Filter.call(this, obj_dict);\n    // Filter low/high. These values are used to filter elements.\n    this.low = \"low\" in obj_dict ? obj_dict.low : -Number.MAX_VALUE;\n    this.high = \"high\" in obj_dict ? obj_dict.high : Number.MAX_VALUE;\n    // Slide min/max. These values are used to set/update slider.\n    this.min = \"min\" in obj_dict ? obj_dict.min : Number.MAX_VALUE;\n    this.max = \"max\" in obj_dict ? obj_dict.max : -Number.MAX_VALUE;\n    // UI elements associated with filter.\n    this.container = null;\n    this.slider = null;\n    this.slider_label = null;\n\n    //\n    // Create HTML.\n    //\n\n    // Function that supports inline text editing of slider values.\n    // Enable users to edit parameter's value via a text box.\n    var edit_slider_values = (container, span, slider) => {\n        container.click(function() {\n            var cur_value = span.text();\n            var max = parseFloat(slider.slider(\"option\", \"max\"));\n\n            var input_size =\n                max <= 1 ? 4 : max <= 1000000 ? max.toString().length : 6;\n\n            var multi_value = false;\n            var slider_row = $(this).parents(\".slider-row\");\n\n            // Row now has input.\n            slider_row.addClass(\"input\");\n\n            // Increase input size if there are two values.\n            if (slider.slider(\"option\", \"values\")) {\n                input_size = 2 * input_size + 1;\n                multi_value = true;\n            }\n            span.text(\"\");\n            // Temporary input for changing value.\n            $(\"<input type='text'/>\")\n                .attr(\"size\", input_size)\n                .attr(\"maxlength\", input_size)\n                .attr(\"value\", cur_value)\n                .appendTo(span)\n                .focus()\n                .select()\n                .click(e => {\n                    // Don't want click to propogate up to values_span and restart everything.\n                    e.stopPropagation();\n                })\n                .blur(function() {\n                    $(this).remove();\n                    span.text(cur_value);\n                    slider_row.removeClass(\"input\");\n                })\n                .keyup(function(e) {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        $(this).trigger(\"blur\");\n                    } else if (e.keyCode === 13) {\n                        //\n                        // Enter/return key initiates callback. If new value(s) are in slider range,\n                        // change value (which calls slider's change() function).\n                        //\n                        var slider_min = slider.slider(\"option\", \"min\");\n\n                        var slider_max = slider.slider(\"option\", \"max\");\n\n                        var invalid = a_val =>\n                            isNaN(a_val) ||\n                            a_val > slider_max ||\n                            a_val < slider_min;\n\n                        var new_value = $(this).val();\n                        if (!multi_value) {\n                            new_value = parseFloat(new_value);\n                            if (invalid(new_value)) {\n                                alert(\n                                    `Parameter value must be in the range [${slider_min}-${slider_max}]`\n                                );\n                                return $(this);\n                            }\n                        } else {\n                            // Multi value.\n                            new_value = new_value.split(\"-\");\n                            new_value = [\n                                parseFloat(new_value[0]),\n                                parseFloat(new_value[1])\n                            ];\n                            if (\n                                invalid(new_value[0]) ||\n                                invalid(new_value[1])\n                            ) {\n                                alert(\n                                    `Parameter value must be in the range [${slider_min}-${slider_max}]`\n                                );\n                                return $(this);\n                            }\n                        }\n\n                        // Updating the slider also updates slider values and removes input.\n                        slider.slider(\n                            multi_value ? \"values\" : \"value\",\n                            new_value\n                        );\n                        slider_row.removeClass(\"input\");\n                    }\n                });\n        });\n    };\n\n    var filter = this;\n\n    filter.parent_div = $(\"<div/>\").addClass(\"filter-row slider-row\");\n\n    // Set up filter label (name, values).\n    var filter_label = $(\"<div/>\")\n        .addClass(\"elt-label\")\n        .appendTo(filter.parent_div);\n\n    var name_span = $(\"<span/>\")\n        .addClass(\"slider-name\")\n        .text(`${filter.name}  `)\n        .appendTo(filter_label);\n\n    var values_span = $(\"<span/>\").text(`${this.low}-${this.high}`);\n\n    var values_span_container = $(\"<span/>\")\n        .addClass(\"slider-value\")\n        .appendTo(filter_label)\n        .append(\"[\")\n        .append(values_span)\n        .append(\"]\");\n\n    filter.values_span = values_span;\n\n    // Set up slider for filter.\n    var slider_div = $(\"<div/>\")\n        .addClass(\"slider\")\n        .appendTo(filter.parent_div);\n    filter.control_element = $(\"<div/>\")\n        .attr(\"id\", `${filter.name}-filter-control`)\n        .appendTo(slider_div);\n    filter.control_element.slider({\n        range: true,\n        min: this.min,\n        max: this.max,\n        step: this.get_slider_step(this.min, this.max),\n        values: [this.low, this.high],\n        slide: function(event, ui) {\n            filter.slide(event, ui);\n        },\n        change: function(event, ui) {\n            filter.control_element\n                .slider(\"option\", \"slide\")\n                .call(filter.control_element, event, ui);\n        }\n    });\n    filter.slider = filter.control_element;\n    filter.slider_label = values_span;\n\n    // Enable users to edit slider values via text box.\n    edit_slider_values(\n        values_span_container,\n        values_span,\n        filter.control_element\n    );\n\n    // Set up filter display controls.\n    var display_controls_div = $(\"<div/>\")\n        .addClass(\"display-controls\")\n        .appendTo(filter.parent_div);\n    this.transparency_icon = create_action_icon(\n        \"Use filter for data transparency\",\n        \"layer-transparent\",\n        () => {\n            if (filter.manager.alpha_filter !== filter) {\n                // Setting this filter as the alpha filter.\n                filter.manager.alpha_filter = filter;\n                // Update UI for new filter.\n                filter.manager.parent_div\n                    .find(\".layer-transparent\")\n                    .removeClass(\"active\")\n                    .hide();\n                filter.transparency_icon.addClass(\"active\").show();\n            } else {\n                // Clearing filter as alpha filter.\n                filter.manager.alpha_filter = null;\n                filter.transparency_icon.removeClass(\"active\");\n            }\n            filter.manager.track.request_draw({\n                force: true,\n                clear_after: true\n            });\n        }\n    )\n        .appendTo(display_controls_div)\n        .hide();\n    this.height_icon = create_action_icon(\n        \"Use filter for data height\",\n        \"arrow-resize-090\",\n        () => {\n            if (filter.manager.height_filter !== filter) {\n                // Setting this filter as the height filter.\n                filter.manager.height_filter = filter;\n                // Update UI for new filter.\n                filter.manager.parent_div\n                    .find(\".arrow-resize-090\")\n                    .removeClass(\"active\")\n                    .hide();\n                filter.height_icon.addClass(\"active\").show();\n            } else {\n                // Clearing filter as alpha filter.\n                filter.manager.height_filter = null;\n                filter.height_icon.removeClass(\"active\");\n            }\n            filter.manager.track.request_draw({\n                force: true,\n                clear_after: true\n            });\n        }\n    )\n        .appendTo(display_controls_div)\n        .hide();\n    filter.parent_div.hover(\n        () => {\n            filter.transparency_icon.show();\n            filter.height_icon.show();\n        },\n        () => {\n            if (filter.manager.alpha_filter !== filter) {\n                filter.transparency_icon.hide();\n            }\n            if (filter.manager.height_filter !== filter) {\n                filter.height_icon.hide();\n            }\n        }\n    );\n\n    // Add to clear floating layout.\n    $(\"<div style='clear: both;'/>\").appendTo(filter.parent_div);\n};\nextend(NumberFilter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        var obj_dict = Filter.prototype.to_dict.call(this);\n        return extend(obj_dict, {\n            type: \"number\",\n            min: this.min,\n            max: this.max,\n            low: this.low,\n            high: this.high\n        });\n    },\n    /**\n     * Return a copy of filter.\n     */\n    copy: function() {\n        return new NumberFilter({\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        });\n    },\n    /**\n     * Get step for slider.\n     */\n    // FIXME: make this a \"static\" function.\n    get_slider_step: function(min, max) {\n        var range = max - min;\n        return range <= 2 ? 0.01 : 1;\n    },\n    /**\n     * Handle slide events.\n     */\n    slide: function(event, ui) {\n        var values = ui.values;\n\n        // Set new values in UI.\n        this.values_span.text(`${values[0]}-${values[1]}`);\n\n        // Set new values in filter.\n        this.low = values[0];\n        this.high = values[1];\n\n        // Set timeout to update if filter low, high are stable.\n        var self = this;\n        setTimeout(() => {\n            if (values[0] === self.low && values[1] === self.high) {\n                self.manager.track.request_draw({\n                    force: true,\n                    clear_after: true\n                });\n            }\n        }, 25);\n    },\n    /** \n     * Returns true if filter can be applied to element.\n     */\n    applies_to: function(element) {\n        if (element.length > this.index) {\n            return true;\n        }\n        return false;\n    },\n    /**\n     * Helper function: returns true if value in in filter's [low, high] range.\n     */\n    _keep_val: function(val) {\n        return isNaN(val) || (val >= this.low && val <= this.high);\n    },\n    /**\n     * Returns true if (a) element's value(s) is in [low, high] (range is inclusive) \n     * or (b) if value is non-numeric and hence unfilterable.\n     */\n    keep: function(element) {\n        if (!this.applies_to(element)) {\n            // No element to filter on.\n            return true;\n        }\n\n        // Keep value function.\n        var filter = this;\n\n        // Do filtering.\n        var to_filter = element[this.index];\n        if (to_filter instanceof Array) {\n            var returnVal = true;\n            for (var i = 0; i < to_filter.length; i++) {\n                if (!this._keep_val(to_filter[i])) {\n                    // Exclude element.\n                    returnVal = false;\n                    break;\n                }\n            }\n            return returnVal;\n        } else {\n            return this._keep_val(element[this.index]);\n        }\n    },\n    /**\n     * Update filter's min and max values based on element's values.\n     */\n    update_attrs: function(element) {\n        var updated = false;\n        if (!this.applies_to(element)) {\n            return updated;\n        }\n\n        //\n        // Update filter's min, max based on element values.\n        //\n\n        // Make value(s) into an Array.\n        var values = element[this.index];\n        if (!(values instanceof Array)) {\n            values = [values];\n        }\n\n        // Loop through values and update min, max.\n        for (var i = 0; i < values.length; i++) {\n            var value = values[i];\n            if (value < this.min) {\n                this.min = Math.floor(value);\n                updated = true;\n            }\n            if (value > this.max) {\n                this.max = Math.ceil(value);\n                updated = true;\n            }\n        }\n        return updated;\n    },\n    /**\n     * Update filter's slider.\n     */\n    update_ui_elt: function() {\n        // Only show filter if min < max because filter is not useful otherwise. This\n        // covers all corner cases, such as when min, max have not been defined and\n        // when min == max.\n        if (this.min < this.max) {\n            this.parent_div.show();\n        } else {\n            this.parent_div.hide();\n        }\n\n        var slider_min = this.slider.slider(\"option\", \"min\");\n        var slider_max = this.slider.slider(\"option\", \"max\");\n        if (this.min < slider_min || this.max > slider_max) {\n            // Update slider min, max, step.\n            this.slider.slider(\"option\", \"min\", this.min);\n            this.slider.slider(\"option\", \"max\", this.max);\n            this.slider.slider(\n                \"option\",\n                \"step\",\n                this.get_slider_step(this.min, this.max)\n            );\n            // Refresh slider:\n            // TODO: do we want to keep current values or reset to min/max?\n            // Currently we reset values:\n            this.slider.slider(\"option\", \"values\", [this.min, this.max]);\n            // To use the current values.\n            //var values = this.slider.slider( \"option\", \"values\" );\n            //this.slider.slider( \"option\", \"values\", values );\n        }\n    }\n});\n\n/**\n * Manages a set of filters.\n */\nvar FiltersManager = function(track, obj_dict) {\n    this.track = track;\n    this.alpha_filter = null;\n    this.height_filter = null;\n    this.filters = [];\n\n    //\n    // Create HTML.\n    //\n\n    //\n    // Create parent div.\n    //\n    this.parent_div = $(\"<div/>\")\n        .addClass(\"filters\")\n        .hide();\n    // Disable dragging, double clicking, keys on div so that actions on slider do not impact viz.\n    this.parent_div\n        .bind(\"drag\", e => {\n            e.stopPropagation();\n        })\n        .click(e => {\n            e.stopPropagation();\n        })\n        .bind(\"dblclick\", e => {\n            e.stopPropagation();\n        })\n        .bind(\"keydown\", e => {\n            e.stopPropagation();\n        });\n\n    //\n    // Restore state from dict.\n    //\n    if (obj_dict && \"filters\" in obj_dict) {\n        // Second condition needed for backward compatibility.\n        var alpha_filter_name =\n            \"alpha_filter\" in obj_dict ? obj_dict.alpha_filter : null;\n\n        var height_filter_name =\n            \"height_filter\" in obj_dict ? obj_dict.height_filter : null;\n\n        var filters_dict = obj_dict.filters;\n        var filter;\n        for (var i = 0; i < filters_dict.length; i++) {\n            if (filters_dict[i].type === \"number\") {\n                filter = new NumberFilter(filters_dict[i]);\n                this.add_filter(filter);\n                if (filter.name === alpha_filter_name) {\n                    this.alpha_filter = filter;\n                    filter.transparency_icon.addClass(\"active\").show();\n                }\n                if (filter.name === height_filter_name) {\n                    this.height_filter = filter;\n                    filter.height_icon.addClass(\"active\").show();\n                }\n            } else {\n                console.log(\"ERROR: unsupported filter: \", name, type);\n            }\n        }\n\n        if (\"visible\" in obj_dict && obj_dict.visible) {\n            this.parent_div.show();\n        }\n    }\n\n    // Add button to filter complete dataset.\n    if (this.filters.length !== 0) {\n        var run_buttons_row = $(\"<div/>\")\n            .addClass(\"param-row\")\n            .appendTo(this.parent_div);\n        var run_on_dataset_button = $(\"<input type='submit'/>\")\n            .attr(\"value\", \"Run on complete dataset\")\n            .appendTo(run_buttons_row);\n        var filter_manager = this;\n        run_on_dataset_button.click(() => {\n            filter_manager.run_on_dataset();\n        });\n    }\n};\n\nextend(FiltersManager.prototype, {\n    // HTML manipulation and inspection.\n    show: function() {\n        this.parent_div.show();\n    },\n    hide: function() {\n        this.parent_div.hide();\n    },\n    toggle: function() {\n        this.parent_div.toggle();\n    },\n    visible: function() {\n        return this.parent_div.is(\":visible\");\n    },\n    /**\n     * Returns dictionary for manager.\n     */\n    to_dict: function() {\n        var obj_dict = {};\n        var filter_dicts = [];\n        var filter;\n\n        // Include individual filter states.\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            filter_dicts.push(filter.to_dict());\n        }\n        obj_dict.filters = filter_dicts;\n\n        // Include transparency, height filters.\n        obj_dict.alpha_filter = this.alpha_filter\n            ? this.alpha_filter.name\n            : null;\n        obj_dict.height_filter = this.height_filter\n            ? this.height_filter.name\n            : null;\n\n        // Include visibility.\n        obj_dict.visible = this.parent_div.is(\":visible\");\n\n        return obj_dict;\n    },\n    /**\n     * Return a copy of the manager.\n     */\n    copy: function(new_track) {\n        var copy = new FiltersManager(new_track);\n        for (var i = 0; i < this.filters.length; i++) {\n            copy.add_filter(this.filters[i].copy());\n        }\n        return copy;\n    },\n    /**\n     * Add a filter to the manager.\n     */\n    add_filter: function(filter) {\n        filter.manager = this;\n        this.parent_div.append(filter.parent_div);\n        this.filters.push(filter);\n    },\n    /**\n     * Remove all filters from manager.\n     */\n    remove_all: function() {\n        this.filters = [];\n        this.parent_div.children().remove();\n    },\n    /**\n     * Initialize filters.\n     */\n\n    init_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.update_ui_elt();\n        }\n    },\n    /**\n     * Clear filters so that they do not impact track display.\n     */\n    clear_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.slider.slider(\"option\", \"values\", [filter.min, filter.max]);\n        }\n        this.alpha_filter = null;\n        this.height_filter = null;\n\n        // Hide icons for setting filters.\n        this.parent_div.find(\".icon-button\").hide();\n    },\n    run_on_dataset: function() {\n        // Get or create dictionary item.\n        var get_or_create_dict_item = (dict, key, new_item) => {\n            // Add new item to dict if\n            if (!(key in dict)) {\n                dict[key] = new_item;\n            }\n            return dict[key];\n        };\n\n        //\n        // Find and group active filters. Active filters are those being used to hide data.\n        // Filters with the same tool id are grouped.\n        //\n        var active_filters = {};\n\n        var filter;\n        var tool_filter_conditions;\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            if (filter.tool_id) {\n                // Add filtering conditions if filter low/high are set.\n                if (filter.min !== filter.low) {\n                    tool_filter_conditions = get_or_create_dict_item(\n                        active_filters,\n                        filter.tool_id,\n                        []\n                    );\n                    tool_filter_conditions[\n                        tool_filter_conditions.length\n                    ] = `${filter.tool_exp_name} >= ${filter.low}`;\n                }\n                if (filter.max !== filter.high) {\n                    tool_filter_conditions = get_or_create_dict_item(\n                        active_filters,\n                        filter.tool_id,\n                        []\n                    );\n                    tool_filter_conditions[\n                        tool_filter_conditions.length\n                    ] = `${filter.tool_exp_name} <= ${filter.high}`;\n                }\n            }\n        }\n\n        //\n        // Use tools to run filters.\n        //\n\n        // Create list of (tool_id, tool_filters) tuples.\n        var active_filters_list = [];\n        for (var tool_id in active_filters) {\n            active_filters_list[active_filters_list.length] = [\n                tool_id,\n                active_filters[tool_id]\n            ];\n        }\n\n        // Invoke recursive function to run filters; this enables chaining of filters via\n        // iteratively application.\n        (function run_filter(input_dataset_id, filters) {\n            var // Set up filtering info and params.\n            filter_tuple = filters[0];\n\n            var tool_id = filter_tuple[0];\n            var tool_filters = filter_tuple[1];\n            var tool_filter_str = `(${tool_filters.join(\") and (\")})`;\n\n            var url_params = {\n                cond: tool_filter_str,\n                input: input_dataset_id,\n                target_dataset_id: input_dataset_id,\n                tool_id: tool_id\n            };\n\n            // Remove current filter.\n            filters = filters.slice(1);\n\n            $.getJSON(run_tool_url, url_params, response => {\n                if (response.error) {\n                    // General error.\n                    Galaxy.modal.show({\n                        title: \"Filter Dataset\",\n                        body: `Error running tool ${tool_id}`,\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else if (filters.length === 0) {\n                    // No more filters to run.\n                    Galaxy.modal.show({\n                        title: \"Filtering Dataset\",\n                        body:\n                            \"Filter(s) are running on the complete dataset. Outputs are in dataset's history.\",\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else {\n                    // More filters to run.\n                    run_filter(response.dataset_id, filters);\n                }\n            });\n        })(this.track.dataset_id, active_filters_list);\n    }\n});\n\nexport default {\n    FiltersManager: FiltersManager,\n    NumberFilter: NumberFilter\n};\n"]}