{"version":3,"sources":["viz/trackster/filters.js"],"names":["extend","Filter","obj_dict","this","manager","name","index","tool_id","tool_exp_name","prototype","to_dict","create_action_icon","title","css_class","on_click_fn","$","attr","addClass","tooltip","click","NumberFilter","low","Number","MAX_VALUE","high","min","max","slider","slider_label","filter","slider_div","control_element","step","values","parent_div","values_span","change","text","appendTo","filter_label","edit_slider_values","append","transparency_icon","force","clear_after","slide","event","ui","display_controls_div","height_filter","call","container","span","cur_value","parseFloat","input_size","toString","multi_value","parents","slider_row","focus","select","e","blur","keyCode","trigger","stopPropagation","slider_min","slider_max","invalid","a_val","isNaN","new_value","val","alert","removeClass","height_icon","alpha_filter","find","show","type","track","request_draw","hide","copy","range","hover","self","setTimeout","_keep_val","keep","get_slider_step","returnVal","i","applies_to","element","length","updated","to_filter","Array","update_attrs","value","bind","floor","Math","ceil","update_ui_elt","height_filter_name","filters_dict","add_filter","alpha_filter_name","run_on_dataset_button","filter_manager","filters","toggle","visible","new_track","FiltersManager","log","children","run_buttons_row","init_filters","run_on_dataset","is","dict","filter_dicts","push","tool_filter_conditions","run_filter","input_dataset_id","remove_all","url_params","remove","slice","body","buttons","Close","Galaxy","modal","get_or_create_dict_item","key","new_item","active_filters","active_filters_list","filter_tuple","cond","join","input","target_dataset_id","getJSON","run_tool_url","response","error","dataset_id"],"mappings":"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","file":"../../../scripts/viz/trackster/filters.js","sourcesContent":["import * as _ from \"libs/underscore\";\nvar extend = _.extend;\n\n/**\n * Filters that enable users to show/hide data points dynamically.\n */\nvar Filter = function(obj_dict) {\n    this.manager = null;\n    this.name = obj_dict.name;\n    // Index into payload to filter.\n    this.index = obj_dict.index;\n    this.tool_id = obj_dict.tool_id;\n    // Name to use for filter when building expression for tool.\n    this.tool_exp_name = obj_dict.tool_exp_name;\n};\n\nextend(Filter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        return {\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        };\n    }\n});\n\n/**\n * Creates an action icon.\n */\nvar create_action_icon = function(title, css_class, on_click_fn) {\n    return $(\"<a/>\")\n        .attr(\"href\", \"javascript:void(0);\")\n        .attr(\"title\", title)\n        .addClass(\"icon-button\")\n        .addClass(css_class)\n        .tooltip()\n        .click(on_click_fn);\n};\n\n/**\n * Number filters have a min, max as well as a low, high; low and high are used \n */\nvar NumberFilter = function(obj_dict) {\n    //\n    // Attribute init.\n    //\n    Filter.call(this, obj_dict);\n    // Filter low/high. These values are used to filter elements.\n    this.low = \"low\" in obj_dict ? obj_dict.low : -Number.MAX_VALUE;\n    this.high = \"high\" in obj_dict ? obj_dict.high : Number.MAX_VALUE;\n    // Slide min/max. These values are used to set/update slider.\n    this.min = \"min\" in obj_dict ? obj_dict.min : Number.MAX_VALUE;\n    this.max = \"max\" in obj_dict ? obj_dict.max : -Number.MAX_VALUE;\n    // UI elements associated with filter.\n    this.container = null;\n    this.slider = null;\n    this.slider_label = null;\n\n    //\n    // Create HTML.\n    //\n\n    // Function that supports inline text editing of slider values.\n    // Enable users to edit parameter's value via a text box.\n    var edit_slider_values = function(container, span, slider) {\n        container.click(function() {\n            var cur_value = span.text();\n            var max = parseFloat(slider.slider(\"option\", \"max\"));\n\n            var input_size =\n                max <= 1 ? 4 : max <= 1000000 ? max.toString().length : 6;\n\n            var multi_value = false;\n            var slider_row = $(this).parents(\".slider-row\");\n\n            // Row now has input.\n            slider_row.addClass(\"input\");\n\n            // Increase input size if there are two values.\n            if (slider.slider(\"option\", \"values\")) {\n                input_size = 2 * input_size + 1;\n                multi_value = true;\n            }\n            span.text(\"\");\n            // Temporary input for changing value.\n            $(\"<input type='text'/>\")\n                .attr(\"size\", input_size)\n                .attr(\"maxlength\", input_size)\n                .attr(\"value\", cur_value)\n                .appendTo(span)\n                .focus()\n                .select()\n                .click(function(e) {\n                    // Don't want click to propogate up to values_span and restart everything.\n                    e.stopPropagation();\n                })\n                .blur(function() {\n                    $(this).remove();\n                    span.text(cur_value);\n                    slider_row.removeClass(\"input\");\n                })\n                .keyup(function(e) {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        $(this).trigger(\"blur\");\n                    } else if (e.keyCode === 13) {\n                        //\n                        // Enter/return key initiates callback. If new value(s) are in slider range,\n                        // change value (which calls slider's change() function).\n                        //\n                        var slider_min = slider.slider(\"option\", \"min\");\n\n                        var slider_max = slider.slider(\"option\", \"max\");\n\n                        var invalid = function(a_val) {\n                            return (\n                                isNaN(a_val) ||\n                                a_val > slider_max ||\n                                a_val < slider_min\n                            );\n                        };\n\n                        var new_value = $(this).val();\n                        if (!multi_value) {\n                            new_value = parseFloat(new_value);\n                            if (invalid(new_value)) {\n                                alert(\n                                    \"Parameter value must be in the range [\" +\n                                        slider_min +\n                                        \"-\" +\n                                        slider_max +\n                                        \"]\"\n                                );\n                                return $(this);\n                            }\n                        } else {\n                            // Multi value.\n                            new_value = new_value.split(\"-\");\n                            new_value = [\n                                parseFloat(new_value[0]),\n                                parseFloat(new_value[1])\n                            ];\n                            if (\n                                invalid(new_value[0]) ||\n                                invalid(new_value[1])\n                            ) {\n                                alert(\n                                    \"Parameter value must be in the range [\" +\n                                        slider_min +\n                                        \"-\" +\n                                        slider_max +\n                                        \"]\"\n                                );\n                                return $(this);\n                            }\n                        }\n\n                        // Updating the slider also updates slider values and removes input.\n                        slider.slider(\n                            multi_value ? \"values\" : \"value\",\n                            new_value\n                        );\n                        slider_row.removeClass(\"input\");\n                    }\n                });\n        });\n    };\n\n    var filter = this;\n\n    filter.parent_div = $(\"<div/>\").addClass(\"filter-row slider-row\");\n\n    // Set up filter label (name, values).\n    var filter_label = $(\"<div/>\")\n        .addClass(\"elt-label\")\n        .appendTo(filter.parent_div);\n\n    var name_span = $(\"<span/>\")\n        .addClass(\"slider-name\")\n        .text(filter.name + \"  \")\n        .appendTo(filter_label);\n\n    var values_span = $(\"<span/>\").text(this.low + \"-\" + this.high);\n\n    var values_span_container = $(\"<span/>\")\n        .addClass(\"slider-value\")\n        .appendTo(filter_label)\n        .append(\"[\")\n        .append(values_span)\n        .append(\"]\");\n\n    filter.values_span = values_span;\n\n    // Set up slider for filter.\n    var slider_div = $(\"<div/>\")\n        .addClass(\"slider\")\n        .appendTo(filter.parent_div);\n    filter.control_element = $(\"<div/>\")\n        .attr(\"id\", filter.name + \"-filter-control\")\n        .appendTo(slider_div);\n    filter.control_element.slider({\n        range: true,\n        min: this.min,\n        max: this.max,\n        step: this.get_slider_step(this.min, this.max),\n        values: [this.low, this.high],\n        slide: function(event, ui) {\n            filter.slide(event, ui);\n        },\n        change: function(event, ui) {\n            filter.control_element\n                .slider(\"option\", \"slide\")\n                .call(filter.control_element, event, ui);\n        }\n    });\n    filter.slider = filter.control_element;\n    filter.slider_label = values_span;\n\n    // Enable users to edit slider values via text box.\n    edit_slider_values(\n        values_span_container,\n        values_span,\n        filter.control_element\n    );\n\n    // Set up filter display controls.\n    var display_controls_div = $(\"<div/>\")\n        .addClass(\"display-controls\")\n        .appendTo(filter.parent_div);\n    this.transparency_icon = create_action_icon(\n        \"Use filter for data transparency\",\n        \"layer-transparent\",\n        function() {\n            if (filter.manager.alpha_filter !== filter) {\n                // Setting this filter as the alpha filter.\n                filter.manager.alpha_filter = filter;\n                // Update UI for new filter.\n                filter.manager.parent_div\n                    .find(\".layer-transparent\")\n                    .removeClass(\"active\")\n                    .hide();\n                filter.transparency_icon.addClass(\"active\").show();\n            } else {\n                // Clearing filter as alpha filter.\n                filter.manager.alpha_filter = null;\n                filter.transparency_icon.removeClass(\"active\");\n            }\n            filter.manager.track.request_draw({\n                force: true,\n                clear_after: true\n            });\n        }\n    )\n        .appendTo(display_controls_div)\n        .hide();\n    this.height_icon = create_action_icon(\n        \"Use filter for data height\",\n        \"arrow-resize-090\",\n        function() {\n            if (filter.manager.height_filter !== filter) {\n                // Setting this filter as the height filter.\n                filter.manager.height_filter = filter;\n                // Update UI for new filter.\n                filter.manager.parent_div\n                    .find(\".arrow-resize-090\")\n                    .removeClass(\"active\")\n                    .hide();\n                filter.height_icon.addClass(\"active\").show();\n            } else {\n                // Clearing filter as alpha filter.\n                filter.manager.height_filter = null;\n                filter.height_icon.removeClass(\"active\");\n            }\n            filter.manager.track.request_draw({\n                force: true,\n                clear_after: true\n            });\n        }\n    )\n        .appendTo(display_controls_div)\n        .hide();\n    filter.parent_div.hover(\n        function() {\n            filter.transparency_icon.show();\n            filter.height_icon.show();\n        },\n        function() {\n            if (filter.manager.alpha_filter !== filter) {\n                filter.transparency_icon.hide();\n            }\n            if (filter.manager.height_filter !== filter) {\n                filter.height_icon.hide();\n            }\n        }\n    );\n\n    // Add to clear floating layout.\n    $(\"<div style='clear: both;'/>\").appendTo(filter.parent_div);\n};\nextend(NumberFilter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        var obj_dict = Filter.prototype.to_dict.call(this);\n        return extend(obj_dict, {\n            type: \"number\",\n            min: this.min,\n            max: this.max,\n            low: this.low,\n            high: this.high\n        });\n    },\n    /**\n     * Return a copy of filter.\n     */\n    copy: function() {\n        return new NumberFilter({\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        });\n    },\n    /**\n     * Get step for slider.\n     */\n    // FIXME: make this a \"static\" function.\n    get_slider_step: function(min, max) {\n        var range = max - min;\n        return range <= 2 ? 0.01 : 1;\n    },\n    /**\n     * Handle slide events.\n     */\n    slide: function(event, ui) {\n        var values = ui.values;\n\n        // Set new values in UI.\n        this.values_span.text(values[0] + \"-\" + values[1]);\n\n        // Set new values in filter.\n        this.low = values[0];\n        this.high = values[1];\n\n        // Set timeout to update if filter low, high are stable.\n        var self = this;\n        setTimeout(function() {\n            if (values[0] === self.low && values[1] === self.high) {\n                self.manager.track.request_draw({\n                    force: true,\n                    clear_after: true\n                });\n            }\n        }, 25);\n    },\n    /** \n     * Returns true if filter can be applied to element.\n     */\n    applies_to: function(element) {\n        if (element.length > this.index) {\n            return true;\n        }\n        return false;\n    },\n    /**\n     * Helper function: returns true if value in in filter's [low, high] range.\n     */\n    _keep_val: function(val) {\n        return isNaN(val) || (val >= this.low && val <= this.high);\n    },\n    /**\n     * Returns true if (a) element's value(s) is in [low, high] (range is inclusive) \n     * or (b) if value is non-numeric and hence unfilterable.\n     */\n    keep: function(element) {\n        if (!this.applies_to(element)) {\n            // No element to filter on.\n            return true;\n        }\n\n        // Keep value function.\n        var filter = this;\n\n        // Do filtering.\n        var to_filter = element[this.index];\n        if (to_filter instanceof Array) {\n            var returnVal = true;\n            for (var i = 0; i < to_filter.length; i++) {\n                if (!this._keep_val(to_filter[i])) {\n                    // Exclude element.\n                    returnVal = false;\n                    break;\n                }\n            }\n            return returnVal;\n        } else {\n            return this._keep_val(element[this.index]);\n        }\n    },\n    /**\n     * Update filter's min and max values based on element's values.\n     */\n    update_attrs: function(element) {\n        var updated = false;\n        if (!this.applies_to(element)) {\n            return updated;\n        }\n\n        //\n        // Update filter's min, max based on element values.\n        //\n\n        // Make value(s) into an Array.\n        var values = element[this.index];\n        if (!(values instanceof Array)) {\n            values = [values];\n        }\n\n        // Loop through values and update min, max.\n        for (var i = 0; i < values.length; i++) {\n            var value = values[i];\n            if (value < this.min) {\n                this.min = Math.floor(value);\n                updated = true;\n            }\n            if (value > this.max) {\n                this.max = Math.ceil(value);\n                updated = true;\n            }\n        }\n        return updated;\n    },\n    /**\n     * Update filter's slider.\n     */\n    update_ui_elt: function() {\n        // Only show filter if min < max because filter is not useful otherwise. This\n        // covers all corner cases, such as when min, max have not been defined and\n        // when min == max.\n        if (this.min < this.max) {\n            this.parent_div.show();\n        } else {\n            this.parent_div.hide();\n        }\n\n        var slider_min = this.slider.slider(\"option\", \"min\");\n        var slider_max = this.slider.slider(\"option\", \"max\");\n        if (this.min < slider_min || this.max > slider_max) {\n            // Update slider min, max, step.\n            this.slider.slider(\"option\", \"min\", this.min);\n            this.slider.slider(\"option\", \"max\", this.max);\n            this.slider.slider(\n                \"option\",\n                \"step\",\n                this.get_slider_step(this.min, this.max)\n            );\n            // Refresh slider:\n            // TODO: do we want to keep current values or reset to min/max?\n            // Currently we reset values:\n            this.slider.slider(\"option\", \"values\", [this.min, this.max]);\n            // To use the current values.\n            //var values = this.slider.slider( \"option\", \"values\" );\n            //this.slider.slider( \"option\", \"values\", values );\n        }\n    }\n});\n\n/**\n * Manages a set of filters.\n */\nvar FiltersManager = function(track, obj_dict) {\n    this.track = track;\n    this.alpha_filter = null;\n    this.height_filter = null;\n    this.filters = [];\n\n    //\n    // Create HTML.\n    //\n\n    //\n    // Create parent div.\n    //\n    this.parent_div = $(\"<div/>\")\n        .addClass(\"filters\")\n        .hide();\n    // Disable dragging, double clicking, keys on div so that actions on slider do not impact viz.\n    this.parent_div\n        .bind(\"drag\", function(e) {\n            e.stopPropagation();\n        })\n        .click(function(e) {\n            e.stopPropagation();\n        })\n        .bind(\"dblclick\", function(e) {\n            e.stopPropagation();\n        })\n        .bind(\"keydown\", function(e) {\n            e.stopPropagation();\n        });\n\n    //\n    // Restore state from dict.\n    //\n    if (obj_dict && \"filters\" in obj_dict) {\n        // Second condition needed for backward compatibility.\n        var alpha_filter_name =\n            \"alpha_filter\" in obj_dict ? obj_dict.alpha_filter : null;\n\n        var height_filter_name =\n            \"height_filter\" in obj_dict ? obj_dict.height_filter : null;\n\n        var filters_dict = obj_dict.filters;\n        var filter;\n        for (var i = 0; i < filters_dict.length; i++) {\n            if (filters_dict[i].type === \"number\") {\n                filter = new NumberFilter(filters_dict[i]);\n                this.add_filter(filter);\n                if (filter.name === alpha_filter_name) {\n                    this.alpha_filter = filter;\n                    filter.transparency_icon.addClass(\"active\").show();\n                }\n                if (filter.name === height_filter_name) {\n                    this.height_filter = filter;\n                    filter.height_icon.addClass(\"active\").show();\n                }\n            } else {\n                console.log(\"ERROR: unsupported filter: \", name, type);\n            }\n        }\n\n        if (\"visible\" in obj_dict && obj_dict.visible) {\n            this.parent_div.show();\n        }\n    }\n\n    // Add button to filter complete dataset.\n    if (this.filters.length !== 0) {\n        var run_buttons_row = $(\"<div/>\")\n            .addClass(\"param-row\")\n            .appendTo(this.parent_div);\n        var run_on_dataset_button = $(\"<input type='submit'/>\")\n            .attr(\"value\", \"Run on complete dataset\")\n            .appendTo(run_buttons_row);\n        var filter_manager = this;\n        run_on_dataset_button.click(function() {\n            filter_manager.run_on_dataset();\n        });\n    }\n};\n\nextend(FiltersManager.prototype, {\n    // HTML manipulation and inspection.\n    show: function() {\n        this.parent_div.show();\n    },\n    hide: function() {\n        this.parent_div.hide();\n    },\n    toggle: function() {\n        this.parent_div.toggle();\n    },\n    visible: function() {\n        return this.parent_div.is(\":visible\");\n    },\n    /**\n     * Returns dictionary for manager.\n     */\n    to_dict: function() {\n        var obj_dict = {};\n        var filter_dicts = [];\n        var filter;\n\n        // Include individual filter states.\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            filter_dicts.push(filter.to_dict());\n        }\n        obj_dict.filters = filter_dicts;\n\n        // Include transparency, height filters.\n        obj_dict.alpha_filter = this.alpha_filter\n            ? this.alpha_filter.name\n            : null;\n        obj_dict.height_filter = this.height_filter\n            ? this.height_filter.name\n            : null;\n\n        // Include visibility.\n        obj_dict.visible = this.parent_div.is(\":visible\");\n\n        return obj_dict;\n    },\n    /**\n     * Return a copy of the manager.\n     */\n    copy: function(new_track) {\n        var copy = new FiltersManager(new_track);\n        for (var i = 0; i < this.filters.length; i++) {\n            copy.add_filter(this.filters[i].copy());\n        }\n        return copy;\n    },\n    /**\n     * Add a filter to the manager.\n     */\n    add_filter: function(filter) {\n        filter.manager = this;\n        this.parent_div.append(filter.parent_div);\n        this.filters.push(filter);\n    },\n    /**\n     * Remove all filters from manager.\n     */\n    remove_all: function() {\n        this.filters = [];\n        this.parent_div.children().remove();\n    },\n    /**\n     * Initialize filters.\n     */\n\n    init_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.update_ui_elt();\n        }\n    },\n    /**\n     * Clear filters so that they do not impact track display.\n     */\n    clear_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.slider.slider(\"option\", \"values\", [filter.min, filter.max]);\n        }\n        this.alpha_filter = null;\n        this.height_filter = null;\n\n        // Hide icons for setting filters.\n        this.parent_div.find(\".icon-button\").hide();\n    },\n    run_on_dataset: function() {\n        // Get or create dictionary item.\n        var get_or_create_dict_item = function(dict, key, new_item) {\n            // Add new item to dict if\n            if (!(key in dict)) {\n                dict[key] = new_item;\n            }\n            return dict[key];\n        };\n\n        //\n        // Find and group active filters. Active filters are those being used to hide data.\n        // Filters with the same tool id are grouped.\n        //\n        var active_filters = {};\n\n        var filter;\n        var tool_filter_conditions;\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            if (filter.tool_id) {\n                // Add filtering conditions if filter low/high are set.\n                if (filter.min !== filter.low) {\n                    tool_filter_conditions = get_or_create_dict_item(\n                        active_filters,\n                        filter.tool_id,\n                        []\n                    );\n                    tool_filter_conditions[tool_filter_conditions.length] =\n                        filter.tool_exp_name + \" >= \" + filter.low;\n                }\n                if (filter.max !== filter.high) {\n                    tool_filter_conditions = get_or_create_dict_item(\n                        active_filters,\n                        filter.tool_id,\n                        []\n                    );\n                    tool_filter_conditions[tool_filter_conditions.length] =\n                        filter.tool_exp_name + \" <= \" + filter.high;\n                }\n            }\n        }\n\n        //\n        // Use tools to run filters.\n        //\n\n        // Create list of (tool_id, tool_filters) tuples.\n        var active_filters_list = [];\n        for (var tool_id in active_filters) {\n            active_filters_list[active_filters_list.length] = [\n                tool_id,\n                active_filters[tool_id]\n            ];\n        }\n\n        // Invoke recursive function to run filters; this enables chaining of filters via\n        // iteratively application.\n        (function run_filter(input_dataset_id, filters) {\n            var // Set up filtering info and params.\n            filter_tuple = filters[0];\n\n            var tool_id = filter_tuple[0];\n            var tool_filters = filter_tuple[1];\n            var tool_filter_str = \"(\" + tool_filters.join(\") and (\") + \")\";\n\n            var url_params = {\n                cond: tool_filter_str,\n                input: input_dataset_id,\n                target_dataset_id: input_dataset_id,\n                tool_id: tool_id\n            };\n\n            // Remove current filter.\n            filters = filters.slice(1);\n\n            $.getJSON(run_tool_url, url_params, function(response) {\n                if (response.error) {\n                    // General error.\n                    Galaxy.modal.show({\n                        title: \"Filter Dataset\",\n                        body: \"Error running tool \" + tool_id,\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else if (filters.length === 0) {\n                    // No more filters to run.\n                    Galaxy.modal.show({\n                        title: \"Filtering Dataset\",\n                        body:\n                            \"Filter(s) are running on the complete dataset. Outputs are in dataset's history.\",\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else {\n                    // More filters to run.\n                    run_filter(response.dataset_id, filters);\n                }\n            });\n        })(this.track.dataset_id, active_filters_list);\n    }\n});\n\nexport default {\n    FiltersManager: FiltersManager,\n    NumberFilter: NumberFilter\n};\n"]}