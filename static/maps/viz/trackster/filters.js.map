{"version":3,"sources":["viz/trackster/filters.js"],"names":["extend","Filter","obj_dict","this","manager","name","index","tool_id","tool_exp_name","prototype","to_dict","create_action_icon","css_class","on_click_fn","$","attr","addClass","tooltip","click","low","Number","MAX_VALUE","high","min","max","container","slider_label","filter","parent_div","control_element","range","values_span","step","values","slide","text","appendTo","filter_label","slider","append","edit_slider_values","slider_div","display_controls_div","transparency_icon","alpha_filter","event","ui","clear_after","height_icon","span","call","parseFloat","toString","length","multi_value","slider_row","parents","input_size","cur_value","focus","select","e","stopPropagation","blur","remove","keyup","keyCode","trigger","removeClass","invalid","isNaN","a_val","slider_max","slider_min","new_value","val","split","alert","values_span_container","hover","find","hide","show","NumberFilter","track","request_draw","height_filter","get_slider_step","self","applies_to","element","type","copy","keep","to_filter","returnVal","setTimeout","update_attrs","updated","force","_keep_val","i","Array","value","Math","floor","bind","ceil","update_ui_elt","filters_dict","filters","add_filter","FiltersManager","run_buttons_row","run_on_dataset_button","filter_manager","toggle","visible","alpha_filter_name","filter_dicts","height_filter_name","console","log","remove_all","run_on_dataset","clear_filters","is","dict","key","push","tool_filter_conditions","active_filters","new_track","active_filters_list","filter_tuple","input","target_dataset_id","input_dataset_id","Galaxy","title","buttons","body","get_or_create_dict_item","new_item","run_filter","url_params","cond","join","slice","getJSON","run_tool_url","response","error","modal","Close","dataset_id"],"mappings":"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","file":"../../../scripts/viz/trackster/filters.js","sourcesContent":["import * as _ from \"libs/underscore\";\nvar extend = _.extend;\n\n/**\n * Filters that enable users to show/hide data points dynamically.\n */\nvar Filter = function(obj_dict) {\n    this.manager = null;\n    this.name = obj_dict.name;\n    // Index into payload to filter.\n    this.index = obj_dict.index;\n    this.tool_id = obj_dict.tool_id;\n    // Name to use for filter when building expression for tool.\n    this.tool_exp_name = obj_dict.tool_exp_name;\n};\n\nextend(Filter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        return {\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        };\n    }\n});\n\n/**\n * Creates an action icon.\n */\nvar create_action_icon = (title, css_class, on_click_fn) =>\n    $(\"<a/>\")\n        .attr(\"href\", \"javascript:void(0);\")\n        .attr(\"title\", title)\n        .addClass(\"icon-button\")\n        .addClass(css_class)\n        .tooltip()\n        .click(on_click_fn);\n\n/**\n * Number filters have a min, max as well as a low, high; low and high are used \n */\nvar NumberFilter = function(obj_dict) {\n    //\n    // Attribute init.\n    //\n    Filter.call(this, obj_dict);\n    // Filter low/high. These values are used to filter elements.\n    this.low = \"low\" in obj_dict ? obj_dict.low : -Number.MAX_VALUE;\n    this.high = \"high\" in obj_dict ? obj_dict.high : Number.MAX_VALUE;\n    // Slide min/max. These values are used to set/update slider.\n    this.min = \"min\" in obj_dict ? obj_dict.min : Number.MAX_VALUE;\n    this.max = \"max\" in obj_dict ? obj_dict.max : -Number.MAX_VALUE;\n    // UI elements associated with filter.\n    this.container = null;\n    this.slider = null;\n    this.slider_label = null;\n\n    //\n    // Create HTML.\n    //\n\n    // Function that supports inline text editing of slider values.\n    // Enable users to edit parameter's value via a text box.\n    var edit_slider_values = (container, span, slider) => {\n        container.click(function() {\n            var cur_value = span.text();\n            var max = parseFloat(slider.slider(\"option\", \"max\"));\n\n            var input_size =\n                max <= 1 ? 4 : max <= 1000000 ? max.toString().length : 6;\n\n            var multi_value = false;\n            var slider_row = $(this).parents(\".slider-row\");\n\n            // Row now has input.\n            slider_row.addClass(\"input\");\n\n            // Increase input size if there are two values.\n            if (slider.slider(\"option\", \"values\")) {\n                input_size = 2 * input_size + 1;\n                multi_value = true;\n            }\n            span.text(\"\");\n            // Temporary input for changing value.\n            $(\"<input type='text'/>\")\n                .attr(\"size\", input_size)\n                .attr(\"maxlength\", input_size)\n                .attr(\"value\", cur_value)\n                .appendTo(span)\n                .focus()\n                .select()\n                .click(e => {\n                    // Don't want click to propogate up to values_span and restart everything.\n                    e.stopPropagation();\n                })\n                .blur(function() {\n                    $(this).remove();\n                    span.text(cur_value);\n                    slider_row.removeClass(\"input\");\n                })\n                .keyup(function(e) {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        $(this).trigger(\"blur\");\n                    } else if (e.keyCode === 13) {\n                        //\n                        // Enter/return key initiates callback. If new value(s) are in slider range,\n                        // change value (which calls slider's change() function).\n                        //\n                        var slider_min = slider.slider(\"option\", \"min\");\n\n                        var slider_max = slider.slider(\"option\", \"max\");\n\n                        var invalid = a_val =>\n                            isNaN(a_val) ||\n                            a_val > slider_max ||\n                            a_val < slider_min;\n\n                        var new_value = $(this).val();\n                        if (!multi_value) {\n                            new_value = parseFloat(new_value);\n                            if (invalid(new_value)) {\n                                alert(\n                                    \"Parameter value must be in the range [\" +\n                                        slider_min +\n                                        \"-\" +\n                                        slider_max +\n                                        \"]\"\n                                );\n                                return $(this);\n                            }\n                        } else {\n                            // Multi value.\n                            new_value = new_value.split(\"-\");\n                            new_value = [\n                                parseFloat(new_value[0]),\n                                parseFloat(new_value[1])\n                            ];\n                            if (\n                                invalid(new_value[0]) ||\n                                invalid(new_value[1])\n                            ) {\n                                alert(\n                                    \"Parameter value must be in the range [\" +\n                                        slider_min +\n                                        \"-\" +\n                                        slider_max +\n                                        \"]\"\n                                );\n                                return $(this);\n                            }\n                        }\n\n                        // Updating the slider also updates slider values and removes input.\n                        slider.slider(\n                            multi_value ? \"values\" : \"value\",\n                            new_value\n                        );\n                        slider_row.removeClass(\"input\");\n                    }\n                });\n        });\n    };\n\n    var filter = this;\n\n    filter.parent_div = $(\"<div/>\").addClass(\"filter-row slider-row\");\n\n    // Set up filter label (name, values).\n    var filter_label = $(\"<div/>\")\n        .addClass(\"elt-label\")\n        .appendTo(filter.parent_div);\n\n    var name_span = $(\"<span/>\")\n        .addClass(\"slider-name\")\n        .text(filter.name + \"  \")\n        .appendTo(filter_label);\n\n    var values_span = $(\"<span/>\").text(this.low + \"-\" + this.high);\n\n    var values_span_container = $(\"<span/>\")\n        .addClass(\"slider-value\")\n        .appendTo(filter_label)\n        .append(\"[\")\n        .append(values_span)\n        .append(\"]\");\n\n    filter.values_span = values_span;\n\n    // Set up slider for filter.\n    var slider_div = $(\"<div/>\")\n        .addClass(\"slider\")\n        .appendTo(filter.parent_div);\n    filter.control_element = $(\"<div/>\")\n        .attr(\"id\", filter.name + \"-filter-control\")\n        .appendTo(slider_div);\n    filter.control_element.slider({\n        range: true,\n        min: this.min,\n        max: this.max,\n        step: this.get_slider_step(this.min, this.max),\n        values: [this.low, this.high],\n        slide: function(event, ui) {\n            filter.slide(event, ui);\n        },\n        change: function(event, ui) {\n            filter.control_element\n                .slider(\"option\", \"slide\")\n                .call(filter.control_element, event, ui);\n        }\n    });\n    filter.slider = filter.control_element;\n    filter.slider_label = values_span;\n\n    // Enable users to edit slider values via text box.\n    edit_slider_values(\n        values_span_container,\n        values_span,\n        filter.control_element\n    );\n\n    // Set up filter display controls.\n    var display_controls_div = $(\"<div/>\")\n        .addClass(\"display-controls\")\n        .appendTo(filter.parent_div);\n    this.transparency_icon = create_action_icon(\n        \"Use filter for data transparency\",\n        \"layer-transparent\",\n        () => {\n            if (filter.manager.alpha_filter !== filter) {\n                // Setting this filter as the alpha filter.\n                filter.manager.alpha_filter = filter;\n                // Update UI for new filter.\n                filter.manager.parent_div\n                    .find(\".layer-transparent\")\n                    .removeClass(\"active\")\n                    .hide();\n                filter.transparency_icon.addClass(\"active\").show();\n            } else {\n                // Clearing filter as alpha filter.\n                filter.manager.alpha_filter = null;\n                filter.transparency_icon.removeClass(\"active\");\n            }\n            filter.manager.track.request_draw({\n                force: true,\n                clear_after: true\n            });\n        }\n    )\n        .appendTo(display_controls_div)\n        .hide();\n    this.height_icon = create_action_icon(\n        \"Use filter for data height\",\n        \"arrow-resize-090\",\n        () => {\n            if (filter.manager.height_filter !== filter) {\n                // Setting this filter as the height filter.\n                filter.manager.height_filter = filter;\n                // Update UI for new filter.\n                filter.manager.parent_div\n                    .find(\".arrow-resize-090\")\n                    .removeClass(\"active\")\n                    .hide();\n                filter.height_icon.addClass(\"active\").show();\n            } else {\n                // Clearing filter as alpha filter.\n                filter.manager.height_filter = null;\n                filter.height_icon.removeClass(\"active\");\n            }\n            filter.manager.track.request_draw({\n                force: true,\n                clear_after: true\n            });\n        }\n    )\n        .appendTo(display_controls_div)\n        .hide();\n    filter.parent_div.hover(\n        () => {\n            filter.transparency_icon.show();\n            filter.height_icon.show();\n        },\n        () => {\n            if (filter.manager.alpha_filter !== filter) {\n                filter.transparency_icon.hide();\n            }\n            if (filter.manager.height_filter !== filter) {\n                filter.height_icon.hide();\n            }\n        }\n    );\n\n    // Add to clear floating layout.\n    $(\"<div style='clear: both;'/>\").appendTo(filter.parent_div);\n};\nextend(NumberFilter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        var obj_dict = Filter.prototype.to_dict.call(this);\n        return extend(obj_dict, {\n            type: \"number\",\n            min: this.min,\n            max: this.max,\n            low: this.low,\n            high: this.high\n        });\n    },\n    /**\n     * Return a copy of filter.\n     */\n    copy: function() {\n        return new NumberFilter({\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        });\n    },\n    /**\n     * Get step for slider.\n     */\n    // FIXME: make this a \"static\" function.\n    get_slider_step: function(min, max) {\n        var range = max - min;\n        return range <= 2 ? 0.01 : 1;\n    },\n    /**\n     * Handle slide events.\n     */\n    slide: function(event, ui) {\n        var values = ui.values;\n\n        // Set new values in UI.\n        this.values_span.text(values[0] + \"-\" + values[1]);\n\n        // Set new values in filter.\n        this.low = values[0];\n        this.high = values[1];\n\n        // Set timeout to update if filter low, high are stable.\n        var self = this;\n        setTimeout(() => {\n            if (values[0] === self.low && values[1] === self.high) {\n                self.manager.track.request_draw({\n                    force: true,\n                    clear_after: true\n                });\n            }\n        }, 25);\n    },\n    /** \n     * Returns true if filter can be applied to element.\n     */\n    applies_to: function(element) {\n        if (element.length > this.index) {\n            return true;\n        }\n        return false;\n    },\n    /**\n     * Helper function: returns true if value in in filter's [low, high] range.\n     */\n    _keep_val: function(val) {\n        return isNaN(val) || (val >= this.low && val <= this.high);\n    },\n    /**\n     * Returns true if (a) element's value(s) is in [low, high] (range is inclusive) \n     * or (b) if value is non-numeric and hence unfilterable.\n     */\n    keep: function(element) {\n        if (!this.applies_to(element)) {\n            // No element to filter on.\n            return true;\n        }\n\n        // Keep value function.\n        var filter = this;\n\n        // Do filtering.\n        var to_filter = element[this.index];\n        if (to_filter instanceof Array) {\n            var returnVal = true;\n            for (var i = 0; i < to_filter.length; i++) {\n                if (!this._keep_val(to_filter[i])) {\n                    // Exclude element.\n                    returnVal = false;\n                    break;\n                }\n            }\n            return returnVal;\n        } else {\n            return this._keep_val(element[this.index]);\n        }\n    },\n    /**\n     * Update filter's min and max values based on element's values.\n     */\n    update_attrs: function(element) {\n        var updated = false;\n        if (!this.applies_to(element)) {\n            return updated;\n        }\n\n        //\n        // Update filter's min, max based on element values.\n        //\n\n        // Make value(s) into an Array.\n        var values = element[this.index];\n        if (!(values instanceof Array)) {\n            values = [values];\n        }\n\n        // Loop through values and update min, max.\n        for (var i = 0; i < values.length; i++) {\n            var value = values[i];\n            if (value < this.min) {\n                this.min = Math.floor(value);\n                updated = true;\n            }\n            if (value > this.max) {\n                this.max = Math.ceil(value);\n                updated = true;\n            }\n        }\n        return updated;\n    },\n    /**\n     * Update filter's slider.\n     */\n    update_ui_elt: function() {\n        // Only show filter if min < max because filter is not useful otherwise. This\n        // covers all corner cases, such as when min, max have not been defined and\n        // when min == max.\n        if (this.min < this.max) {\n            this.parent_div.show();\n        } else {\n            this.parent_div.hide();\n        }\n\n        var slider_min = this.slider.slider(\"option\", \"min\");\n        var slider_max = this.slider.slider(\"option\", \"max\");\n        if (this.min < slider_min || this.max > slider_max) {\n            // Update slider min, max, step.\n            this.slider.slider(\"option\", \"min\", this.min);\n            this.slider.slider(\"option\", \"max\", this.max);\n            this.slider.slider(\n                \"option\",\n                \"step\",\n                this.get_slider_step(this.min, this.max)\n            );\n            // Refresh slider:\n            // TODO: do we want to keep current values or reset to min/max?\n            // Currently we reset values:\n            this.slider.slider(\"option\", \"values\", [this.min, this.max]);\n            // To use the current values.\n            //var values = this.slider.slider( \"option\", \"values\" );\n            //this.slider.slider( \"option\", \"values\", values );\n        }\n    }\n});\n\n/**\n * Manages a set of filters.\n */\nvar FiltersManager = function(track, obj_dict) {\n    this.track = track;\n    this.alpha_filter = null;\n    this.height_filter = null;\n    this.filters = [];\n\n    //\n    // Create HTML.\n    //\n\n    //\n    // Create parent div.\n    //\n    this.parent_div = $(\"<div/>\")\n        .addClass(\"filters\")\n        .hide();\n    // Disable dragging, double clicking, keys on div so that actions on slider do not impact viz.\n    this.parent_div\n        .bind(\"drag\", e => {\n            e.stopPropagation();\n        })\n        .click(e => {\n            e.stopPropagation();\n        })\n        .bind(\"dblclick\", e => {\n            e.stopPropagation();\n        })\n        .bind(\"keydown\", e => {\n            e.stopPropagation();\n        });\n\n    //\n    // Restore state from dict.\n    //\n    if (obj_dict && \"filters\" in obj_dict) {\n        // Second condition needed for backward compatibility.\n        var alpha_filter_name =\n            \"alpha_filter\" in obj_dict ? obj_dict.alpha_filter : null;\n\n        var height_filter_name =\n            \"height_filter\" in obj_dict ? obj_dict.height_filter : null;\n\n        var filters_dict = obj_dict.filters;\n        var filter;\n        for (var i = 0; i < filters_dict.length; i++) {\n            if (filters_dict[i].type === \"number\") {\n                filter = new NumberFilter(filters_dict[i]);\n                this.add_filter(filter);\n                if (filter.name === alpha_filter_name) {\n                    this.alpha_filter = filter;\n                    filter.transparency_icon.addClass(\"active\").show();\n                }\n                if (filter.name === height_filter_name) {\n                    this.height_filter = filter;\n                    filter.height_icon.addClass(\"active\").show();\n                }\n            } else {\n                console.log(\"ERROR: unsupported filter: \", name, type);\n            }\n        }\n\n        if (\"visible\" in obj_dict && obj_dict.visible) {\n            this.parent_div.show();\n        }\n    }\n\n    // Add button to filter complete dataset.\n    if (this.filters.length !== 0) {\n        var run_buttons_row = $(\"<div/>\")\n            .addClass(\"param-row\")\n            .appendTo(this.parent_div);\n        var run_on_dataset_button = $(\"<input type='submit'/>\")\n            .attr(\"value\", \"Run on complete dataset\")\n            .appendTo(run_buttons_row);\n        var filter_manager = this;\n        run_on_dataset_button.click(() => {\n            filter_manager.run_on_dataset();\n        });\n    }\n};\n\nextend(FiltersManager.prototype, {\n    // HTML manipulation and inspection.\n    show: function() {\n        this.parent_div.show();\n    },\n    hide: function() {\n        this.parent_div.hide();\n    },\n    toggle: function() {\n        this.parent_div.toggle();\n    },\n    visible: function() {\n        return this.parent_div.is(\":visible\");\n    },\n    /**\n     * Returns dictionary for manager.\n     */\n    to_dict: function() {\n        var obj_dict = {};\n        var filter_dicts = [];\n        var filter;\n\n        // Include individual filter states.\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            filter_dicts.push(filter.to_dict());\n        }\n        obj_dict.filters = filter_dicts;\n\n        // Include transparency, height filters.\n        obj_dict.alpha_filter = this.alpha_filter\n            ? this.alpha_filter.name\n            : null;\n        obj_dict.height_filter = this.height_filter\n            ? this.height_filter.name\n            : null;\n\n        // Include visibility.\n        obj_dict.visible = this.parent_div.is(\":visible\");\n\n        return obj_dict;\n    },\n    /**\n     * Return a copy of the manager.\n     */\n    copy: function(new_track) {\n        var copy = new FiltersManager(new_track);\n        for (var i = 0; i < this.filters.length; i++) {\n            copy.add_filter(this.filters[i].copy());\n        }\n        return copy;\n    },\n    /**\n     * Add a filter to the manager.\n     */\n    add_filter: function(filter) {\n        filter.manager = this;\n        this.parent_div.append(filter.parent_div);\n        this.filters.push(filter);\n    },\n    /**\n     * Remove all filters from manager.\n     */\n    remove_all: function() {\n        this.filters = [];\n        this.parent_div.children().remove();\n    },\n    /**\n     * Initialize filters.\n     */\n\n    init_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.update_ui_elt();\n        }\n    },\n    /**\n     * Clear filters so that they do not impact track display.\n     */\n    clear_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.slider.slider(\"option\", \"values\", [filter.min, filter.max]);\n        }\n        this.alpha_filter = null;\n        this.height_filter = null;\n\n        // Hide icons for setting filters.\n        this.parent_div.find(\".icon-button\").hide();\n    },\n    run_on_dataset: function() {\n        // Get or create dictionary item.\n        var get_or_create_dict_item = (dict, key, new_item) => {\n            // Add new item to dict if\n            if (!(key in dict)) {\n                dict[key] = new_item;\n            }\n            return dict[key];\n        };\n\n        //\n        // Find and group active filters. Active filters are those being used to hide data.\n        // Filters with the same tool id are grouped.\n        //\n        var active_filters = {};\n\n        var filter;\n        var tool_filter_conditions;\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            if (filter.tool_id) {\n                // Add filtering conditions if filter low/high are set.\n                if (filter.min !== filter.low) {\n                    tool_filter_conditions = get_or_create_dict_item(\n                        active_filters,\n                        filter.tool_id,\n                        []\n                    );\n                    tool_filter_conditions[tool_filter_conditions.length] =\n                        filter.tool_exp_name + \" >= \" + filter.low;\n                }\n                if (filter.max !== filter.high) {\n                    tool_filter_conditions = get_or_create_dict_item(\n                        active_filters,\n                        filter.tool_id,\n                        []\n                    );\n                    tool_filter_conditions[tool_filter_conditions.length] =\n                        filter.tool_exp_name + \" <= \" + filter.high;\n                }\n            }\n        }\n\n        //\n        // Use tools to run filters.\n        //\n\n        // Create list of (tool_id, tool_filters) tuples.\n        var active_filters_list = [];\n        for (var tool_id in active_filters) {\n            active_filters_list[active_filters_list.length] = [\n                tool_id,\n                active_filters[tool_id]\n            ];\n        }\n\n        // Invoke recursive function to run filters; this enables chaining of filters via\n        // iteratively application.\n        (function run_filter(input_dataset_id, filters) {\n            var // Set up filtering info and params.\n            filter_tuple = filters[0];\n\n            var tool_id = filter_tuple[0];\n            var tool_filters = filter_tuple[1];\n            var tool_filter_str = \"(\" + tool_filters.join(\") and (\") + \")\";\n\n            var url_params = {\n                cond: tool_filter_str,\n                input: input_dataset_id,\n                target_dataset_id: input_dataset_id,\n                tool_id: tool_id\n            };\n\n            // Remove current filter.\n            filters = filters.slice(1);\n\n            $.getJSON(run_tool_url, url_params, response => {\n                if (response.error) {\n                    // General error.\n                    Galaxy.modal.show({\n                        title: \"Filter Dataset\",\n                        body: \"Error running tool \" + tool_id,\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else if (filters.length === 0) {\n                    // No more filters to run.\n                    Galaxy.modal.show({\n                        title: \"Filtering Dataset\",\n                        body:\n                            \"Filter(s) are running on the complete dataset. Outputs are in dataset's history.\",\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else {\n                    // More filters to run.\n                    run_filter(response.dataset_id, filters);\n                }\n            });\n        })(this.track.dataset_id, active_filters_list);\n    }\n});\n\nexport default {\n    FiltersManager: FiltersManager,\n    NumberFilter: NumberFilter\n};\n"]}