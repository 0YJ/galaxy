{"version":3,"sources":["viz/trackster/filters.js"],"names":["define","_","extend","Filter","obj_dict","this","manager","name","index","tool_id","tool_exp_name","prototype","to_dict","create_action_icon","title","css_class","on_click_fn","$","attr","addClass","tooltip","click","NumberFilter","call","low","Number","MAX_VALUE","high","min","max","container","slider","slider_label","filter","parent_div","filter_label","appendTo","values_span","text","values_span_container","append","slider_div","control_element","range","step","get_slider_step","values","slide","event","ui","change","span","cur_value","parseFloat","input_size","toString","length","multi_value","slider_row","parents","focus","select","e","stopPropagation","blur","remove","removeClass","keyup","keyCode","trigger","slider_min","slider_max","invalid","a_val","isNaN","new_value","val","split","alert","display_controls_div","transparency_icon","alpha_filter","find","hide","show","track","request_draw","force","clear_after","height_icon","height_filter","hover","type","copy","self","setTimeout","applies_to","element","_keep_val","keep","to_filter","Array","returnVal","i","update_attrs","updated","value","Math","floor","ceil","update_ui_elt","FiltersManager","filters","bind","alpha_filter_name","height_filter_name","filters_dict","add_filter","console","log","visible","run_buttons_row","filter_manager","run_on_dataset","toggle","is","filter_dicts","push","new_track","remove_all","children","init_filters","clear_filters","tool_filter_conditions","get_or_create_dict_item","dict","key","new_item","active_filters","active_filters_list","run_filter","input_dataset_id","filter_tuple","tool_filters","tool_filter_str","join","url_params","cond","input","target_dataset_id","slice","getJSON","run_tool_url","response","error","Galaxy","modal","body","buttons","Close","dataset_id"],"mappings":"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","file":"../../../scripts/viz/trackster/filters.js","sourcesContent":["define( [\"libs/underscore\"], function(_) {\n\nvar extend = _.extend;\n\n/**\n * Filters that enable users to show/hide data points dynamically.\n */\nvar Filter = function(obj_dict) {\n    this.manager = null;\n    this.name = obj_dict.name;\n    // Index into payload to filter.\n    this.index = obj_dict.index;\n    this.tool_id = obj_dict.tool_id;\n    // Name to use for filter when building expression for tool.\n    this.tool_exp_name = obj_dict.tool_exp_name;\n};\n\nextend(Filter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        return {\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        };\n    } \n});\n\n/**\n * Creates an action icon.\n */\nvar create_action_icon =  function(title, css_class, on_click_fn) {\n    return $(\"<a/>\").attr(\"href\", \"javascript:void(0);\").attr(\"title\", title)\n                    .addClass(\"icon-button\").addClass(css_class).tooltip()\n                    .click(on_click_fn);\n};\n\n/**\n * Number filters have a min, max as well as a low, high; low and high are used \n */\nvar NumberFilter = function(obj_dict) {\n    //\n    // Attribute init.\n    //\n    Filter.call(this, obj_dict);\n    // Filter low/high. These values are used to filter elements.\n    this.low = ('low' in obj_dict ? obj_dict.low : -Number.MAX_VALUE);\n    this.high = ('high' in obj_dict ? obj_dict.high : Number.MAX_VALUE);\n    // Slide min/max. These values are used to set/update slider.\n    this.min = ('min' in obj_dict ? obj_dict.min : Number.MAX_VALUE);\n    this.max = ('max' in obj_dict ? obj_dict.max : -Number.MAX_VALUE);\n    // UI elements associated with filter.\n    this.container = null;\n    this.slider = null;\n    this.slider_label = null;\n    \n    //\n    // Create HTML.\n    //\n    \n    // Function that supports inline text editing of slider values.\n    // Enable users to edit parameter's value via a text box.\n    var edit_slider_values = function(container, span, slider) {\n        container.click(function() {\n            var cur_value = span.text(),\n                max = parseFloat(slider.slider(\"option\", \"max\")),\n                input_size = (max <= 1 ? 4 : max <= 1000000 ? max.toString().length : 6),\n                multi_value = false,\n                slider_row = $(this).parents(\".slider-row\");\n                \n            // Row now has input.\n            slider_row.addClass(\"input\");\n                \n            // Increase input size if there are two values.\n            if (slider.slider(\"option\", \"values\")) {\n                input_size = 2*input_size + 1;\n                multi_value = true;\n            }\n            span.text(\"\");\n            // Temporary input for changing value.\n            $(\"<input type='text'/>\").attr(\"size\", input_size).attr(\"maxlength\", input_size)\n                                     .attr(\"value\", cur_value).appendTo(span).focus().select()\n                                     .click(function(e) {\n                // Don't want click to propogate up to values_span and restart everything.\n                e.stopPropagation();\n            }).blur(function() {\n                $(this).remove();\n                span.text(cur_value);\n                slider_row.removeClass(\"input\");\n            }).keyup(function(e) {\n                if (e.keyCode === 27) {\n                    // Escape key.\n                    $(this).trigger(\"blur\");\n                } else if (e.keyCode === 13) {\n                    //\n                    // Enter/return key initiates callback. If new value(s) are in slider range, \n                    // change value (which calls slider's change() function).\n                    //\n                    var slider_min = slider.slider(\"option\", \"min\"),\n                        slider_max = slider.slider(\"option\", \"max\"),\n                        invalid = function(a_val) {\n                            return (isNaN(a_val) || a_val > slider_max || a_val < slider_min);\n                        },\n                        new_value = $(this).val();\n                    if (!multi_value) {\n                        new_value = parseFloat(new_value);\n                        if (invalid(new_value)) {\n                            alert(\"Parameter value must be in the range [\" + slider_min + \"-\" + slider_max + \"]\");\n                            return $(this);\n                        }\n                    }\n                    else { // Multi value.\n                        new_value = new_value.split(\"-\");\n                        new_value = [parseFloat(new_value[0]), parseFloat(new_value[1])];\n                        if (invalid(new_value[0]) || invalid(new_value[1])) {\n                            alert(\"Parameter value must be in the range [\" + slider_min + \"-\" + slider_max + \"]\");\n                            return $(this);\n                        }\n                    }\n                    \n                    // Updating the slider also updates slider values and removes input. \n                    slider.slider((multi_value ? \"values\" : \"value\"), new_value);\n                    slider_row.removeClass(\"input\");\n                }\n            });\n        });\n    };\n    \n    var filter = this;\n    \n    filter.parent_div = $(\"<div/>\").addClass(\"filter-row slider-row\");\n    \n    // Set up filter label (name, values).\n    var filter_label = $(\"<div/>\").addClass(\"elt-label\").appendTo(filter.parent_div),\n        name_span = $(\"<span/>\").addClass(\"slider-name\").text(filter.name + \"  \").appendTo(filter_label),\n        values_span = $(\"<span/>\").text(this.low + \"-\" + this.high),\n        values_span_container = $(\"<span/>\").addClass(\"slider-value\").appendTo(filter_label).append(\"[\").append(values_span).append(\"]\");\n    filter.values_span = values_span;\n            \n    // Set up slider for filter.\n    var slider_div = $(\"<div/>\").addClass(\"slider\").appendTo(filter.parent_div);\n    filter.control_element = $(\"<div/>\").attr(\"id\", filter.name + \"-filter-control\").appendTo(slider_div);\n    filter.control_element.slider({\n        range: true,\n        min: this.min,\n        max: this.max,\n        step: this.get_slider_step(this.min, this.max),\n        values: [this.low, this.high],\n        slide: function(event, ui) { \n            filter.slide(event, ui); \n        },\n        change: function(event, ui) {\n            filter.control_element.slider(\"option\", \"slide\").call(filter.control_element, event, ui);\n        }\n    });\n    filter.slider = filter.control_element;\n    filter.slider_label = values_span;\n    \n    // Enable users to edit slider values via text box.\n    edit_slider_values(values_span_container, values_span, filter.control_element);\n    \n    // Set up filter display controls.\n    var display_controls_div = $(\"<div/>\").addClass(\"display-controls\").appendTo(filter.parent_div);\n    this.transparency_icon = create_action_icon(\"Use filter for data transparency\", \"layer-transparent\", \n                                                function() {\n                                                    if (filter.manager.alpha_filter !== filter) {\n                                                        // Setting this filter as the alpha filter.\n                                                        filter.manager.alpha_filter = filter;\n                                                        // Update UI for new filter.\n                                                        filter.manager.parent_div.find(\".layer-transparent\").removeClass(\"active\").hide();\n                                                        filter.transparency_icon.addClass(\"active\").show();\n                                                    }\n                                                    else {\n                                                        // Clearing filter as alpha filter.\n                                                        filter.manager.alpha_filter = null;\n                                                        filter.transparency_icon.removeClass(\"active\");\n                                                    }\n                                                    filter.manager.track.request_draw({ force: true, clear_after: true });\n                                                } )\n                                                .appendTo(display_controls_div).hide();\n    this.height_icon = create_action_icon(\"Use filter for data height\", \"arrow-resize-090\", \n                                                function() {\n                                                    if (filter.manager.height_filter !== filter) {\n                                                        // Setting this filter as the height filter.\n                                                        filter.manager.height_filter = filter;\n                                                        // Update UI for new filter.\n                                                        filter.manager.parent_div.find(\".arrow-resize-090\").removeClass(\"active\").hide();\n                                                        filter.height_icon.addClass(\"active\").show();\n                                                    }\n                                                    else {\n                                                        // Clearing filter as alpha filter.\n                                                        filter.manager.height_filter = null;\n                                                        filter.height_icon.removeClass(\"active\");\n                                                    }\n                                                    filter.manager.track.request_draw({ force: true, clear_after: true });\n                                                } )\n                                                .appendTo(display_controls_div).hide();\n    filter.parent_div.hover( function() { \n                                filter.transparency_icon.show();\n                                filter.height_icon.show(); \n                            },\n                            function() {\n                                if (filter.manager.alpha_filter !== filter) {\n                                    filter.transparency_icon.hide();\n                                }\n                                if (filter.manager.height_filter !== filter) {\n                                    filter.height_icon.hide();\n                                }\n                            } );\n    \n    // Add to clear floating layout.\n    $(\"<div style='clear: both;'/>\").appendTo(filter.parent_div);\n};\nextend(NumberFilter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        var obj_dict = Filter.prototype.to_dict.call(this);\n        return extend(obj_dict, {\n            type: 'number',\n            min: this.min,\n            max: this.max,\n            low: this.low,\n            high: this.high\n        });\n    },\n    /**\n     * Return a copy of filter.\n     */\n    copy: function() {\n        return new NumberFilter( \n            {\n                name: this.name, \n                index: this.index, \n                tool_id: this.tool_id, \n                tool_exp_name: this.tool_exp_name\n            });\n    },\n    /**\n     * Get step for slider.\n     */\n    // FIXME: make this a \"static\" function.\n    get_slider_step: function(min, max) {\n        var range = max - min;\n        return (range <= 2 ? 0.01 : 1);\n    },\n    /**\n     * Handle slide events.\n     */\n    slide: function(event, ui) {\n        var values = ui.values;\n\n        // Set new values in UI.\n        this.values_span.text(values[0] + \"-\" + values[1]);\n\n        // Set new values in filter.\n        this.low = values[0];\n        this.high = values[1];\n         \n        // Set timeout to update if filter low, high are stable.\n        var self = this;\n        setTimeout(function() {\n            if (values[0] === self.low && values[1] === self.high) {\n                self.manager.track.request_draw({ force: true, clear_after: true });\n            }\n        }, 25);\n         \n     },\n    /** \n     * Returns true if filter can be applied to element.\n     */\n    applies_to: function(element) {\n        if (element.length > this.index) {\n            return true;\n        }\n        return false;\n    },\n    /**\n     * Helper function: returns true if value in in filter's [low, high] range.\n     */\n    _keep_val: function(val) {\n        return (isNaN(val) || (val >= this.low && val <= this.high));\n    },    \n    /**\n     * Returns true if (a) element's value(s) is in [low, high] (range is inclusive) \n     * or (b) if value is non-numeric and hence unfilterable.\n     */\n    keep: function(element) {\n        if ( !this.applies_to( element ) ) {\n            // No element to filter on.\n            return true;\n        }\n\n        // Keep value function.\n        var filter = this;\n\n        // Do filtering.\n        var to_filter = element[this.index];\n        if (to_filter instanceof Array) {\n            var returnVal = true;\n            for (var i = 0; i < to_filter.length; i++) {\n                if (!this._keep_val(to_filter[i])) {\n                    // Exclude element.\n                    returnVal = false;\n                    break;\n                }\n            }\n            return returnVal;\n        }\n        else {\n            return this._keep_val(element[this.index]);\n        }\n    },\n    /**\n     * Update filter's min and max values based on element's values.\n     */\n    update_attrs: function(element) {\n        var updated = false;\n        if (!this.applies_to(element) ) {\n            return updated;\n        }\n        \n        //\n        // Update filter's min, max based on element values.\n        //\n        \n        // Make value(s) into an Array.\n        var values = element[this.index];\n        if (!(values instanceof Array)) {\n            values = [values];\n        }\n        \n        // Loop through values and update min, max.\n        for (var i = 0; i < values.length; i++) {\n            var value = values[i];\n            if (value < this.min) {\n                this.min = Math.floor(value);\n                updated = true;\n            }\n            if (value > this.max) {\n                this.max = Math.ceil(value);\n                updated = true;\n            }\n        }\n        return updated;\n    },\n    /**\n     * Update filter's slider.\n     */\n    update_ui_elt: function () {\n        // Only show filter if min < max because filter is not useful otherwise. This\n        // covers all corner cases, such as when min, max have not been defined and\n        // when min == max.\n        if (this.min < this.max) {\n            this.parent_div.show();\n        }\n        else {\n            this.parent_div.hide();\n        }\n        \n        var \n            slider_min = this.slider.slider(\"option\", \"min\"),\n            slider_max = this.slider.slider(\"option\", \"max\");\n        if (this.min < slider_min || this.max > slider_max) {\n            // Update slider min, max, step.\n            this.slider.slider(\"option\", \"min\", this.min);\n            this.slider.slider(\"option\", \"max\", this.max);\n            this.slider.slider(\"option\", \"step\", this.get_slider_step(this.min, this.max));\n            // Refresh slider:\n            // TODO: do we want to keep current values or reset to min/max?\n            // Currently we reset values:\n            this.slider.slider(\"option\", \"values\", [this.min, this.max]);\n            // To use the current values.\n            //var values = this.slider.slider( \"option\", \"values\" );\n            //this.slider.slider( \"option\", \"values\", values );\n        }\n    }\n});\n \n/**\n * Manages a set of filters.\n */\nvar FiltersManager = function(track, obj_dict) {\n    this.track = track;\n    this.alpha_filter = null;\n    this.height_filter = null;\n    this.filters = [];\n    \n    //\n    // Create HTML.\n    //\n        \n    //\n    // Create parent div.\n    //\n    this.parent_div = $(\"<div/>\").addClass(\"filters\").hide();\n    // Disable dragging, double clicking, keys on div so that actions on slider do not impact viz.\n    this.parent_div.bind(\"drag\", function(e) {\n        e.stopPropagation();\n    }).click(function(e) {\n        e.stopPropagation();\n    }).bind(\"dblclick\", function(e) {\n        e.stopPropagation();\n    }).bind(\"keydown\", function(e) {\n        e.stopPropagation();\n    });\n    \n    //\n    // Restore state from dict.\n    //\n    if (obj_dict && 'filters' in obj_dict) { // Second condition needed for backward compatibility.\n        var \n            alpha_filter_name = ('alpha_filter' in obj_dict ? obj_dict.alpha_filter : null),\n            height_filter_name = ('height_filter' in obj_dict ? obj_dict.height_filter : null),            \n            filters_dict = obj_dict.filters,\n            filter;\n        for (var i = 0; i < filters_dict.length; i++) {\n            if (filters_dict[i].type === 'number') {\n                filter = new NumberFilter(filters_dict[i]);\n                this.add_filter(filter);\n                if (filter.name === alpha_filter_name) {\n                    this.alpha_filter = filter;\n                    filter.transparency_icon.addClass(\"active\").show();\n                }\n                if (filter.name === height_filter_name) {\n                    this.height_filter = filter;\n                    filter.height_icon.addClass(\"active\").show();\n                }\n            } \n            else {\n                console.log(\"ERROR: unsupported filter: \", name, type);\n            }\n        }\n        \n        \n        if ('visible' in obj_dict && obj_dict.visible) {\n            this.parent_div.show();\n        }\n    }\n    \n    // Add button to filter complete dataset.\n    if (this.filters.length !== 0) {\n        var run_buttons_row = $(\"<div/>\").addClass(\"param-row\").appendTo(this.parent_div);\n        var run_on_dataset_button = $(\"<input type='submit'/>\").attr(\"value\", \"Run on complete dataset\").appendTo(run_buttons_row);\n        var filter_manager = this;\n        run_on_dataset_button.click( function() {\n            filter_manager.run_on_dataset();\n        });\n    }\n        \n};\n\nextend(FiltersManager.prototype, {\n    // HTML manipulation and inspection.\n    show: function() { this.parent_div.show(); },\n    hide: function() { this.parent_div.hide(); },\n    toggle: function() { this.parent_div.toggle(); },\n    visible: function() { return this.parent_div.is(\":visible\"); },\n    /**\n     * Returns dictionary for manager.\n     */\n    to_dict: function() {\n        var obj_dict = {},\n            filter_dicts = [],\n            filter;\n            \n        // Include individual filter states.\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            filter_dicts.push(filter.to_dict());\n        }\n        obj_dict.filters = filter_dicts;\n        \n        // Include transparency, height filters.\n        obj_dict.alpha_filter = (this.alpha_filter ? this.alpha_filter.name : null);\n        obj_dict.height_filter = (this.height_filter ? this.height_filter.name : null);\n        \n        // Include visibility.\n        obj_dict.visible = this.parent_div.is(\":visible\");\n        \n        return obj_dict;\n    },\n    /**\n     * Return a copy of the manager.\n     */\n    copy: function(new_track) {\n        var copy = new FiltersManager(new_track);\n        for (var i = 0; i < this.filters.length; i++) {\n            copy.add_filter(this.filters[i].copy());\n        }\n        return copy;\n    },\n    /**\n     * Add a filter to the manager.\n     */\n    add_filter: function(filter) {\n        filter.manager = this;\n        this.parent_div.append(filter.parent_div);\n        this.filters.push(filter);  \n    },\n    /**\n     * Remove all filters from manager.\n     */\n    remove_all: function() {\n        this.filters = [];\n        this.parent_div.children().remove();\n    },\n    /**\n     * Initialize filters.\n     */ \n    init_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.update_ui_elt();\n        }\n    },\n    /**\n     * Clear filters so that they do not impact track display.\n     */\n    clear_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.slider.slider(\"option\", \"values\", [filter.min, filter.max]);\n        }\n        this.alpha_filter = null;\n        this.height_filter = null;\n        \n        // Hide icons for setting filters.\n        this.parent_div.find(\".icon-button\").hide();\n    },\n    run_on_dataset: function() {\n        // Get or create dictionary item.\n        var get_or_create_dict_item = function(dict, key, new_item) {\n            // Add new item to dict if \n            if (!(key in dict)) {\n                dict[key] = new_item;\n            }\n            return dict[key];\n        };\n        \n        //\n        // Find and group active filters. Active filters are those being used to hide data.\n        // Filters with the same tool id are grouped.\n        //\n        var active_filters = {},\n            filter, \n            tool_filter_conditions;\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            if (filter.tool_id) {\n                // Add filtering conditions if filter low/high are set.\n                if (filter.min !== filter.low) {\n                    tool_filter_conditions = get_or_create_dict_item(active_filters, filter.tool_id, []);\n                    tool_filter_conditions[tool_filter_conditions.length] = filter.tool_exp_name + \" >= \" + filter.low;\n                }\n                if (filter.max !== filter.high) {\n                    tool_filter_conditions = get_or_create_dict_item(active_filters, filter.tool_id, []);\n                    tool_filter_conditions[tool_filter_conditions.length] = filter.tool_exp_name + \" <= \" + filter.high;\n                }\n            }\n        }\n        \n        //\n        // Use tools to run filters.\n        //\n        \n        // Create list of (tool_id, tool_filters) tuples.\n        var active_filters_list = [];\n        for (var tool_id in active_filters) {\n            active_filters_list[active_filters_list.length] = [tool_id, active_filters[tool_id]];\n        }\n        \n        // Invoke recursive function to run filters; this enables chaining of filters via\n        // iteratively application.\n        (function run_filter(input_dataset_id, filters) {\n            var \n                // Set up filtering info and params.\n                filter_tuple = filters[0],\n                tool_id = filter_tuple[0],\n                tool_filters = filter_tuple[1],\n                tool_filter_str = \"(\" + tool_filters.join(\") and (\") + \")\",\n                url_params = {\n                    cond: tool_filter_str,\n                    input: input_dataset_id,\n                    target_dataset_id: input_dataset_id,\n                    tool_id: tool_id\n                };\n\n            // Remove current filter.\n            filters = filters.slice(1);\n                \n            $.getJSON(run_tool_url, url_params, function(response) {\n                if (response.error) {\n                    // General error.\n                    Galaxy.modal.show({\n                        title: \"Filter Dataset\",\n                        body : \"Error running tool \" + tool_id,\n                        buttons : { \"Close\" : Galaxy.modal.hide() }\n                    });\n                }\n                else if (filters.length === 0) {\n                    // No more filters to run.\n                    Galaxy.modal.show({\n                        title: \"Filtering Dataset\",\n                        body: \"Filter(s) are running on the complete dataset. Outputs are in dataset's history.\",\n                        buttons: { \"Close\" : Galaxy.modal.hide() }\n                    });\n                }\n                else {\n                    // More filters to run.\n                    run_filter(response.dataset_id, filters);\n                }\n            });\n              \n        })(this.track.dataset_id, active_filters_list);        \n    }\n});\n\nreturn {\n    FiltersManager: FiltersManager,\n    NumberFilter: NumberFilter\n};\n\n});\n"]}