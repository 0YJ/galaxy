{"version":3,"sources":["viz/trackster/filters.js"],"names":["extend","Filter","obj_dict","this","manager","name","index","tool_id","tool_exp_name","prototype","to_dict","create_action_icon","title","css_class","on_click_fn","$","attr","addClass","tooltip","click","NumberFilter","low","Number","MAX_VALUE","high","min","max","slider","slider_label","step","get_slider_step","filter","slide","change","parent_div","text","filter_label","values_span","values_span_container","edit_slider_values","append","display_controls_div","transparency_icon","appendTo","slider_div","force","clear_after","event","ui","height_filter","control_element","call","container","span","cur_value","parseFloat","toString","length","multi_value","slider_row","parents","input_size","focus","select","e","blur","keyCode","trigger","stopPropagation","slider_min","invalid","a_val","slider_max","new_value","alert","isNaN","removeClass","height_icon","alpha_filter","find","show","type","track","request_draw","hide","copy","range","hover","self","setTimeout","_keep_val","keep","returnVal","i","values","applies_to","element","val","updated","to_filter","Array","update_attrs","value","bind","floor","Math","ceil","update_ui_elt","filters_dict","alpha_filter_name","height_filter_name","console","FiltersManager","visible","filters","add_filter","new_track","log","children","run_buttons_row","filter_manager","init_filters","toggle","run_on_dataset","is","dict","filter_dicts","push","tool_filter_conditions","run_filter","filter_tuple","cond","input","target_dataset_id","getJSON","run_tool_url","url_params","response","clear_filters","Galaxy","buttons","dataset_id","get_or_create_dict_item","key","new_item","active_filters","active_filters_list","input_dataset_id","join","slice","error","modal","body","Close"],"mappings":"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","file":"../../../scripts/viz/trackster/filters.js","sourcesContent":["import * as _ from \"libs/underscore\";\nvar extend = _.extend;\n\n/**\n * Filters that enable users to show/hide data points dynamically.\n */\nvar Filter = function(obj_dict) {\n    this.manager = null;\n    this.name = obj_dict.name;\n    // Index into payload to filter.\n    this.index = obj_dict.index;\n    this.tool_id = obj_dict.tool_id;\n    // Name to use for filter when building expression for tool.\n    this.tool_exp_name = obj_dict.tool_exp_name;\n};\n\nextend(Filter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        return {\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        };\n    }\n});\n\n/**\n * Creates an action icon.\n */\nvar create_action_icon = function(title, css_class, on_click_fn) {\n    return $(\"<a/>\")\n        .attr(\"href\", \"javascript:void(0);\")\n        .attr(\"title\", title)\n        .addClass(\"icon-button\")\n        .addClass(css_class)\n        .tooltip()\n        .click(on_click_fn);\n};\n\n/**\n * Number filters have a min, max as well as a low, high; low and high are used \n */\nvar NumberFilter = function(obj_dict) {\n    //\n    // Attribute init.\n    //\n    Filter.call(this, obj_dict);\n    // Filter low/high. These values are used to filter elements.\n    this.low = \"low\" in obj_dict ? obj_dict.low : -Number.MAX_VALUE;\n    this.high = \"high\" in obj_dict ? obj_dict.high : Number.MAX_VALUE;\n    // Slide min/max. These values are used to set/update slider.\n    this.min = \"min\" in obj_dict ? obj_dict.min : Number.MAX_VALUE;\n    this.max = \"max\" in obj_dict ? obj_dict.max : -Number.MAX_VALUE;\n    // UI elements associated with filter.\n    this.container = null;\n    this.slider = null;\n    this.slider_label = null;\n\n    //\n    // Create HTML.\n    //\n\n    // Function that supports inline text editing of slider values.\n    // Enable users to edit parameter's value via a text box.\n    var edit_slider_values = function(container, span, slider) {\n        container.click(function() {\n            var cur_value = span.text(),\n                max = parseFloat(slider.slider(\"option\", \"max\")),\n                input_size =\n                    max <= 1 ? 4 : max <= 1000000 ? max.toString().length : 6,\n                multi_value = false,\n                slider_row = $(this).parents(\".slider-row\");\n\n            // Row now has input.\n            slider_row.addClass(\"input\");\n\n            // Increase input size if there are two values.\n            if (slider.slider(\"option\", \"values\")) {\n                input_size = 2 * input_size + 1;\n                multi_value = true;\n            }\n            span.text(\"\");\n            // Temporary input for changing value.\n            $(\"<input type='text'/>\")\n                .attr(\"size\", input_size)\n                .attr(\"maxlength\", input_size)\n                .attr(\"value\", cur_value)\n                .appendTo(span)\n                .focus()\n                .select()\n                .click(function(e) {\n                    // Don't want click to propogate up to values_span and restart everything.\n                    e.stopPropagation();\n                })\n                .blur(function() {\n                    $(this).remove();\n                    span.text(cur_value);\n                    slider_row.removeClass(\"input\");\n                })\n                .keyup(function(e) {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        $(this).trigger(\"blur\");\n                    } else if (e.keyCode === 13) {\n                        //\n                        // Enter/return key initiates callback. If new value(s) are in slider range,\n                        // change value (which calls slider's change() function).\n                        //\n                        var slider_min = slider.slider(\"option\", \"min\"),\n                            slider_max = slider.slider(\"option\", \"max\"),\n                            invalid = function(a_val) {\n                                return (\n                                    isNaN(a_val) ||\n                                    a_val > slider_max ||\n                                    a_val < slider_min\n                                );\n                            },\n                            new_value = $(this).val();\n                        if (!multi_value) {\n                            new_value = parseFloat(new_value);\n                            if (invalid(new_value)) {\n                                alert(\n                                    \"Parameter value must be in the range [\" +\n                                        slider_min +\n                                        \"-\" +\n                                        slider_max +\n                                        \"]\"\n                                );\n                                return $(this);\n                            }\n                        } else {\n                            // Multi value.\n                            new_value = new_value.split(\"-\");\n                            new_value = [\n                                parseFloat(new_value[0]),\n                                parseFloat(new_value[1])\n                            ];\n                            if (\n                                invalid(new_value[0]) ||\n                                invalid(new_value[1])\n                            ) {\n                                alert(\n                                    \"Parameter value must be in the range [\" +\n                                        slider_min +\n                                        \"-\" +\n                                        slider_max +\n                                        \"]\"\n                                );\n                                return $(this);\n                            }\n                        }\n\n                        // Updating the slider also updates slider values and removes input.\n                        slider.slider(\n                            multi_value ? \"values\" : \"value\",\n                            new_value\n                        );\n                        slider_row.removeClass(\"input\");\n                    }\n                });\n        });\n    };\n\n    var filter = this;\n\n    filter.parent_div = $(\"<div/>\").addClass(\"filter-row slider-row\");\n\n    // Set up filter label (name, values).\n    var filter_label = $(\"<div/>\")\n            .addClass(\"elt-label\")\n            .appendTo(filter.parent_div),\n        name_span = $(\"<span/>\")\n            .addClass(\"slider-name\")\n            .text(filter.name + \"  \")\n            .appendTo(filter_label),\n        values_span = $(\"<span/>\").text(this.low + \"-\" + this.high),\n        values_span_container = $(\"<span/>\")\n            .addClass(\"slider-value\")\n            .appendTo(filter_label)\n            .append(\"[\")\n            .append(values_span)\n            .append(\"]\");\n    filter.values_span = values_span;\n\n    // Set up slider for filter.\n    var slider_div = $(\"<div/>\")\n        .addClass(\"slider\")\n        .appendTo(filter.parent_div);\n    filter.control_element = $(\"<div/>\")\n        .attr(\"id\", filter.name + \"-filter-control\")\n        .appendTo(slider_div);\n    filter.control_element.slider({\n        range: true,\n        min: this.min,\n        max: this.max,\n        step: this.get_slider_step(this.min, this.max),\n        values: [this.low, this.high],\n        slide: function(event, ui) {\n            filter.slide(event, ui);\n        },\n        change: function(event, ui) {\n            filter.control_element\n                .slider(\"option\", \"slide\")\n                .call(filter.control_element, event, ui);\n        }\n    });\n    filter.slider = filter.control_element;\n    filter.slider_label = values_span;\n\n    // Enable users to edit slider values via text box.\n    edit_slider_values(\n        values_span_container,\n        values_span,\n        filter.control_element\n    );\n\n    // Set up filter display controls.\n    var display_controls_div = $(\"<div/>\")\n        .addClass(\"display-controls\")\n        .appendTo(filter.parent_div);\n    this.transparency_icon = create_action_icon(\n        \"Use filter for data transparency\",\n        \"layer-transparent\",\n        function() {\n            if (filter.manager.alpha_filter !== filter) {\n                // Setting this filter as the alpha filter.\n                filter.manager.alpha_filter = filter;\n                // Update UI for new filter.\n                filter.manager.parent_div\n                    .find(\".layer-transparent\")\n                    .removeClass(\"active\")\n                    .hide();\n                filter.transparency_icon.addClass(\"active\").show();\n            } else {\n                // Clearing filter as alpha filter.\n                filter.manager.alpha_filter = null;\n                filter.transparency_icon.removeClass(\"active\");\n            }\n            filter.manager.track.request_draw({\n                force: true,\n                clear_after: true\n            });\n        }\n    )\n        .appendTo(display_controls_div)\n        .hide();\n    this.height_icon = create_action_icon(\n        \"Use filter for data height\",\n        \"arrow-resize-090\",\n        function() {\n            if (filter.manager.height_filter !== filter) {\n                // Setting this filter as the height filter.\n                filter.manager.height_filter = filter;\n                // Update UI for new filter.\n                filter.manager.parent_div\n                    .find(\".arrow-resize-090\")\n                    .removeClass(\"active\")\n                    .hide();\n                filter.height_icon.addClass(\"active\").show();\n            } else {\n                // Clearing filter as alpha filter.\n                filter.manager.height_filter = null;\n                filter.height_icon.removeClass(\"active\");\n            }\n            filter.manager.track.request_draw({\n                force: true,\n                clear_after: true\n            });\n        }\n    )\n        .appendTo(display_controls_div)\n        .hide();\n    filter.parent_div.hover(\n        function() {\n            filter.transparency_icon.show();\n            filter.height_icon.show();\n        },\n        function() {\n            if (filter.manager.alpha_filter !== filter) {\n                filter.transparency_icon.hide();\n            }\n            if (filter.manager.height_filter !== filter) {\n                filter.height_icon.hide();\n            }\n        }\n    );\n\n    // Add to clear floating layout.\n    $(\"<div style='clear: both;'/>\").appendTo(filter.parent_div);\n};\nextend(NumberFilter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        var obj_dict = Filter.prototype.to_dict.call(this);\n        return extend(obj_dict, {\n            type: \"number\",\n            min: this.min,\n            max: this.max,\n            low: this.low,\n            high: this.high\n        });\n    },\n    /**\n     * Return a copy of filter.\n     */\n    copy: function() {\n        return new NumberFilter({\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        });\n    },\n    /**\n     * Get step for slider.\n     */\n    // FIXME: make this a \"static\" function.\n    get_slider_step: function(min, max) {\n        var range = max - min;\n        return range <= 2 ? 0.01 : 1;\n    },\n    /**\n     * Handle slide events.\n     */\n    slide: function(event, ui) {\n        var values = ui.values;\n\n        // Set new values in UI.\n        this.values_span.text(values[0] + \"-\" + values[1]);\n\n        // Set new values in filter.\n        this.low = values[0];\n        this.high = values[1];\n\n        // Set timeout to update if filter low, high are stable.\n        var self = this;\n        setTimeout(function() {\n            if (values[0] === self.low && values[1] === self.high) {\n                self.manager.track.request_draw({\n                    force: true,\n                    clear_after: true\n                });\n            }\n        }, 25);\n    },\n    /** \n     * Returns true if filter can be applied to element.\n     */\n    applies_to: function(element) {\n        if (element.length > this.index) {\n            return true;\n        }\n        return false;\n    },\n    /**\n     * Helper function: returns true if value in in filter's [low, high] range.\n     */\n    _keep_val: function(val) {\n        return isNaN(val) || (val >= this.low && val <= this.high);\n    },\n    /**\n     * Returns true if (a) element's value(s) is in [low, high] (range is inclusive) \n     * or (b) if value is non-numeric and hence unfilterable.\n     */\n    keep: function(element) {\n        if (!this.applies_to(element)) {\n            // No element to filter on.\n            return true;\n        }\n\n        // Keep value function.\n        var filter = this;\n\n        // Do filtering.\n        var to_filter = element[this.index];\n        if (to_filter instanceof Array) {\n            var returnVal = true;\n            for (var i = 0; i < to_filter.length; i++) {\n                if (!this._keep_val(to_filter[i])) {\n                    // Exclude element.\n                    returnVal = false;\n                    break;\n                }\n            }\n            return returnVal;\n        } else {\n            return this._keep_val(element[this.index]);\n        }\n    },\n    /**\n     * Update filter's min and max values based on element's values.\n     */\n    update_attrs: function(element) {\n        var updated = false;\n        if (!this.applies_to(element)) {\n            return updated;\n        }\n\n        //\n        // Update filter's min, max based on element values.\n        //\n\n        // Make value(s) into an Array.\n        var values = element[this.index];\n        if (!(values instanceof Array)) {\n            values = [values];\n        }\n\n        // Loop through values and update min, max.\n        for (var i = 0; i < values.length; i++) {\n            var value = values[i];\n            if (value < this.min) {\n                this.min = Math.floor(value);\n                updated = true;\n            }\n            if (value > this.max) {\n                this.max = Math.ceil(value);\n                updated = true;\n            }\n        }\n        return updated;\n    },\n    /**\n     * Update filter's slider.\n     */\n    update_ui_elt: function() {\n        // Only show filter if min < max because filter is not useful otherwise. This\n        // covers all corner cases, such as when min, max have not been defined and\n        // when min == max.\n        if (this.min < this.max) {\n            this.parent_div.show();\n        } else {\n            this.parent_div.hide();\n        }\n\n        var slider_min = this.slider.slider(\"option\", \"min\"),\n            slider_max = this.slider.slider(\"option\", \"max\");\n        if (this.min < slider_min || this.max > slider_max) {\n            // Update slider min, max, step.\n            this.slider.slider(\"option\", \"min\", this.min);\n            this.slider.slider(\"option\", \"max\", this.max);\n            this.slider.slider(\n                \"option\",\n                \"step\",\n                this.get_slider_step(this.min, this.max)\n            );\n            // Refresh slider:\n            // TODO: do we want to keep current values or reset to min/max?\n            // Currently we reset values:\n            this.slider.slider(\"option\", \"values\", [this.min, this.max]);\n            // To use the current values.\n            //var values = this.slider.slider( \"option\", \"values\" );\n            //this.slider.slider( \"option\", \"values\", values );\n        }\n    }\n});\n\n/**\n * Manages a set of filters.\n */\nvar FiltersManager = function(track, obj_dict) {\n    this.track = track;\n    this.alpha_filter = null;\n    this.height_filter = null;\n    this.filters = [];\n\n    //\n    // Create HTML.\n    //\n\n    //\n    // Create parent div.\n    //\n    this.parent_div = $(\"<div/>\")\n        .addClass(\"filters\")\n        .hide();\n    // Disable dragging, double clicking, keys on div so that actions on slider do not impact viz.\n    this.parent_div\n        .bind(\"drag\", function(e) {\n            e.stopPropagation();\n        })\n        .click(function(e) {\n            e.stopPropagation();\n        })\n        .bind(\"dblclick\", function(e) {\n            e.stopPropagation();\n        })\n        .bind(\"keydown\", function(e) {\n            e.stopPropagation();\n        });\n\n    //\n    // Restore state from dict.\n    //\n    if (obj_dict && \"filters\" in obj_dict) {\n        // Second condition needed for backward compatibility.\n        var alpha_filter_name =\n                \"alpha_filter\" in obj_dict ? obj_dict.alpha_filter : null,\n            height_filter_name =\n                \"height_filter\" in obj_dict ? obj_dict.height_filter : null,\n            filters_dict = obj_dict.filters,\n            filter;\n        for (var i = 0; i < filters_dict.length; i++) {\n            if (filters_dict[i].type === \"number\") {\n                filter = new NumberFilter(filters_dict[i]);\n                this.add_filter(filter);\n                if (filter.name === alpha_filter_name) {\n                    this.alpha_filter = filter;\n                    filter.transparency_icon.addClass(\"active\").show();\n                }\n                if (filter.name === height_filter_name) {\n                    this.height_filter = filter;\n                    filter.height_icon.addClass(\"active\").show();\n                }\n            } else {\n                console.log(\"ERROR: unsupported filter: \", name, type);\n            }\n        }\n\n        if (\"visible\" in obj_dict && obj_dict.visible) {\n            this.parent_div.show();\n        }\n    }\n\n    // Add button to filter complete dataset.\n    if (this.filters.length !== 0) {\n        var run_buttons_row = $(\"<div/>\")\n            .addClass(\"param-row\")\n            .appendTo(this.parent_div);\n        var run_on_dataset_button = $(\"<input type='submit'/>\")\n            .attr(\"value\", \"Run on complete dataset\")\n            .appendTo(run_buttons_row);\n        var filter_manager = this;\n        run_on_dataset_button.click(function() {\n            filter_manager.run_on_dataset();\n        });\n    }\n};\n\nextend(FiltersManager.prototype, {\n    // HTML manipulation and inspection.\n    show: function() {\n        this.parent_div.show();\n    },\n    hide: function() {\n        this.parent_div.hide();\n    },\n    toggle: function() {\n        this.parent_div.toggle();\n    },\n    visible: function() {\n        return this.parent_div.is(\":visible\");\n    },\n    /**\n     * Returns dictionary for manager.\n     */\n    to_dict: function() {\n        var obj_dict = {},\n            filter_dicts = [],\n            filter;\n\n        // Include individual filter states.\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            filter_dicts.push(filter.to_dict());\n        }\n        obj_dict.filters = filter_dicts;\n\n        // Include transparency, height filters.\n        obj_dict.alpha_filter = this.alpha_filter\n            ? this.alpha_filter.name\n            : null;\n        obj_dict.height_filter = this.height_filter\n            ? this.height_filter.name\n            : null;\n\n        // Include visibility.\n        obj_dict.visible = this.parent_div.is(\":visible\");\n\n        return obj_dict;\n    },\n    /**\n     * Return a copy of the manager.\n     */\n    copy: function(new_track) {\n        var copy = new FiltersManager(new_track);\n        for (var i = 0; i < this.filters.length; i++) {\n            copy.add_filter(this.filters[i].copy());\n        }\n        return copy;\n    },\n    /**\n     * Add a filter to the manager.\n     */\n    add_filter: function(filter) {\n        filter.manager = this;\n        this.parent_div.append(filter.parent_div);\n        this.filters.push(filter);\n    },\n    /**\n     * Remove all filters from manager.\n     */\n    remove_all: function() {\n        this.filters = [];\n        this.parent_div.children().remove();\n    },\n    /**\n     * Initialize filters.\n     */\n\n    init_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.update_ui_elt();\n        }\n    },\n    /**\n     * Clear filters so that they do not impact track display.\n     */\n    clear_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.slider.slider(\"option\", \"values\", [filter.min, filter.max]);\n        }\n        this.alpha_filter = null;\n        this.height_filter = null;\n\n        // Hide icons for setting filters.\n        this.parent_div.find(\".icon-button\").hide();\n    },\n    run_on_dataset: function() {\n        // Get or create dictionary item.\n        var get_or_create_dict_item = function(dict, key, new_item) {\n            // Add new item to dict if\n            if (!(key in dict)) {\n                dict[key] = new_item;\n            }\n            return dict[key];\n        };\n\n        //\n        // Find and group active filters. Active filters are those being used to hide data.\n        // Filters with the same tool id are grouped.\n        //\n        var active_filters = {},\n            filter,\n            tool_filter_conditions;\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            if (filter.tool_id) {\n                // Add filtering conditions if filter low/high are set.\n                if (filter.min !== filter.low) {\n                    tool_filter_conditions = get_or_create_dict_item(\n                        active_filters,\n                        filter.tool_id,\n                        []\n                    );\n                    tool_filter_conditions[tool_filter_conditions.length] =\n                        filter.tool_exp_name + \" >= \" + filter.low;\n                }\n                if (filter.max !== filter.high) {\n                    tool_filter_conditions = get_or_create_dict_item(\n                        active_filters,\n                        filter.tool_id,\n                        []\n                    );\n                    tool_filter_conditions[tool_filter_conditions.length] =\n                        filter.tool_exp_name + \" <= \" + filter.high;\n                }\n            }\n        }\n\n        //\n        // Use tools to run filters.\n        //\n\n        // Create list of (tool_id, tool_filters) tuples.\n        var active_filters_list = [];\n        for (var tool_id in active_filters) {\n            active_filters_list[active_filters_list.length] = [\n                tool_id,\n                active_filters[tool_id]\n            ];\n        }\n\n        // Invoke recursive function to run filters; this enables chaining of filters via\n        // iteratively application.\n        (function run_filter(input_dataset_id, filters) {\n            var // Set up filtering info and params.\n                filter_tuple = filters[0],\n                tool_id = filter_tuple[0],\n                tool_filters = filter_tuple[1],\n                tool_filter_str = \"(\" + tool_filters.join(\") and (\") + \")\",\n                url_params = {\n                    cond: tool_filter_str,\n                    input: input_dataset_id,\n                    target_dataset_id: input_dataset_id,\n                    tool_id: tool_id\n                };\n\n            // Remove current filter.\n            filters = filters.slice(1);\n\n            $.getJSON(run_tool_url, url_params, function(response) {\n                if (response.error) {\n                    // General error.\n                    Galaxy.modal.show({\n                        title: \"Filter Dataset\",\n                        body: \"Error running tool \" + tool_id,\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else if (filters.length === 0) {\n                    // No more filters to run.\n                    Galaxy.modal.show({\n                        title: \"Filtering Dataset\",\n                        body:\n                            \"Filter(s) are running on the complete dataset. Outputs are in dataset's history.\",\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else {\n                    // More filters to run.\n                    run_filter(response.dataset_id, filters);\n                }\n            });\n        })(this.track.dataset_id, active_filters_list);\n    }\n});\n\nexport default {\n    FiltersManager: FiltersManager,\n    NumberFilter: NumberFilter\n};\n"]}