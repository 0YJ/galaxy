{"version":3,"sources":["viz/trackster/filters.js"],"names":["extend","default","Filter","obj_dict","this","manager","name","index","tool_id","tool_exp_name","prototype","to_dict","create_action_icon","title","css_class","on_click_fn","attr","click","NumberFilter","call","low","Number","MAX_VALUE","high","min","max","slider","slider_label","filter","parent_div","$","addClass","filter_label","display_controls_div","values_span","transparency_icon","text","appendTo","append","clear_after","control_element","height_filter","slider_div","range","step","get_slider_step","values","height_icon","ui","force","event","container","span","cur_value","parseFloat","input_size","toString","length","multi_value","slider_row","parents","select","e","stopPropagation","keyup","removeClass","trigger","keyCode","invalid","a_val","slider_max","new_value","val","split","alert","slider_min","slide","values_span_container","alpha_filter","find","show","hide","request_draw","self","element","isNaN","keep","type","copy","returnVal","applies_to","updated","setTimeout","track","value","_keep_val","to_filter","i","FiltersManager","update_attrs","Array","bind","Math","floor","alpha_filter_name","height_filter_name","update_ui_elt","run_buttons_row","toggle","visible","filter_dicts","push","new_track","filters_dict","filters","add_filter","console","log","init_filters","filter_manager","get_or_create_dict_item","dict","is","tool_filter_conditions","active_filters_list","filter_tuple","remove_all","Galaxy","remove","body","buttons","clear_filters","dataset_id","run_on_dataset","key","new_item","active_filters","run_filter","input_dataset_id","url_params","cond","join","input","target_dataset_id","slice","getJSON","run_tool_url","response","error","modal","Close"],"mappings":"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","file":"../../../scripts/viz/trackster/filters.js","sourcesContent":["import _ from \"libs/underscore\";\nvar extend = _.extend;\n\n/**\n * Filters that enable users to show/hide data points dynamically.\n */\nvar Filter = function(obj_dict) {\n    this.manager = null;\n    this.name = obj_dict.name;\n    // Index into payload to filter.\n    this.index = obj_dict.index;\n    this.tool_id = obj_dict.tool_id;\n    // Name to use for filter when building expression for tool.\n    this.tool_exp_name = obj_dict.tool_exp_name;\n};\n\nextend(Filter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        return {\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        };\n    }\n});\n\n/**\n * Creates an action icon.\n */\nvar create_action_icon = function(title, css_class, on_click_fn) {\n    return $(\"<a/>\")\n        .attr(\"href\", \"javascript:void(0);\")\n        .attr(\"title\", title)\n        .addClass(\"icon-button\")\n        .addClass(css_class)\n        .tooltip()\n        .click(on_click_fn);\n};\n\n/**\n * Number filters have a min, max as well as a low, high; low and high are used \n */\nvar NumberFilter = function(obj_dict) {\n    //\n    // Attribute init.\n    //\n    Filter.call(this, obj_dict);\n    // Filter low/high. These values are used to filter elements.\n    this.low = \"low\" in obj_dict ? obj_dict.low : -Number.MAX_VALUE;\n    this.high = \"high\" in obj_dict ? obj_dict.high : Number.MAX_VALUE;\n    // Slide min/max. These values are used to set/update slider.\n    this.min = \"min\" in obj_dict ? obj_dict.min : Number.MAX_VALUE;\n    this.max = \"max\" in obj_dict ? obj_dict.max : -Number.MAX_VALUE;\n    // UI elements associated with filter.\n    this.container = null;\n    this.slider = null;\n    this.slider_label = null;\n\n    //\n    // Create HTML.\n    //\n\n    // Function that supports inline text editing of slider values.\n    // Enable users to edit parameter's value via a text box.\n    var edit_slider_values = function(container, span, slider) {\n        container.click(function() {\n            var cur_value = span.text(),\n                max = parseFloat(slider.slider(\"option\", \"max\")),\n                input_size =\n                    max <= 1 ? 4 : max <= 1000000 ? max.toString().length : 6,\n                multi_value = false,\n                slider_row = $(this).parents(\".slider-row\");\n\n            // Row now has input.\n            slider_row.addClass(\"input\");\n\n            // Increase input size if there are two values.\n            if (slider.slider(\"option\", \"values\")) {\n                input_size = 2 * input_size + 1;\n                multi_value = true;\n            }\n            span.text(\"\");\n            // Temporary input for changing value.\n            $(\"<input type='text'/>\")\n                .attr(\"size\", input_size)\n                .attr(\"maxlength\", input_size)\n                .attr(\"value\", cur_value)\n                .appendTo(span)\n                .focus()\n                .select()\n                .click(function(e) {\n                    // Don't want click to propogate up to values_span and restart everything.\n                    e.stopPropagation();\n                })\n                .blur(function() {\n                    $(this).remove();\n                    span.text(cur_value);\n                    slider_row.removeClass(\"input\");\n                })\n                .keyup(function(e) {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        $(this).trigger(\"blur\");\n                    } else if (e.keyCode === 13) {\n                        //\n                        // Enter/return key initiates callback. If new value(s) are in slider range,\n                        // change value (which calls slider's change() function).\n                        //\n                        var slider_min = slider.slider(\"option\", \"min\"),\n                            slider_max = slider.slider(\"option\", \"max\"),\n                            invalid = function(a_val) {\n                                return (\n                                    isNaN(a_val) ||\n                                    a_val > slider_max ||\n                                    a_val < slider_min\n                                );\n                            },\n                            new_value = $(this).val();\n                        if (!multi_value) {\n                            new_value = parseFloat(new_value);\n                            if (invalid(new_value)) {\n                                alert(\n                                    \"Parameter value must be in the range [\" +\n                                        slider_min +\n                                        \"-\" +\n                                        slider_max +\n                                        \"]\"\n                                );\n                                return $(this);\n                            }\n                        } else {\n                            // Multi value.\n                            new_value = new_value.split(\"-\");\n                            new_value = [\n                                parseFloat(new_value[0]),\n                                parseFloat(new_value[1])\n                            ];\n                            if (\n                                invalid(new_value[0]) ||\n                                invalid(new_value[1])\n                            ) {\n                                alert(\n                                    \"Parameter value must be in the range [\" +\n                                        slider_min +\n                                        \"-\" +\n                                        slider_max +\n                                        \"]\"\n                                );\n                                return $(this);\n                            }\n                        }\n\n                        // Updating the slider also updates slider values and removes input.\n                        slider.slider(\n                            multi_value ? \"values\" : \"value\",\n                            new_value\n                        );\n                        slider_row.removeClass(\"input\");\n                    }\n                });\n        });\n    };\n\n    var filter = this;\n\n    filter.parent_div = $(\"<div/>\").addClass(\"filter-row slider-row\");\n\n    // Set up filter label (name, values).\n    var filter_label = $(\"<div/>\")\n            .addClass(\"elt-label\")\n            .appendTo(filter.parent_div),\n        name_span = $(\"<span/>\")\n            .addClass(\"slider-name\")\n            .text(filter.name + \"  \")\n            .appendTo(filter_label),\n        values_span = $(\"<span/>\").text(this.low + \"-\" + this.high),\n        values_span_container = $(\"<span/>\")\n            .addClass(\"slider-value\")\n            .appendTo(filter_label)\n            .append(\"[\")\n            .append(values_span)\n            .append(\"]\");\n    filter.values_span = values_span;\n\n    // Set up slider for filter.\n    var slider_div = $(\"<div/>\")\n        .addClass(\"slider\")\n        .appendTo(filter.parent_div);\n    filter.control_element = $(\"<div/>\")\n        .attr(\"id\", filter.name + \"-filter-control\")\n        .appendTo(slider_div);\n    filter.control_element.slider({\n        range: true,\n        min: this.min,\n        max: this.max,\n        step: this.get_slider_step(this.min, this.max),\n        values: [this.low, this.high],\n        slide: function(event, ui) {\n            filter.slide(event, ui);\n        },\n        change: function(event, ui) {\n            filter.control_element\n                .slider(\"option\", \"slide\")\n                .call(filter.control_element, event, ui);\n        }\n    });\n    filter.slider = filter.control_element;\n    filter.slider_label = values_span;\n\n    // Enable users to edit slider values via text box.\n    edit_slider_values(\n        values_span_container,\n        values_span,\n        filter.control_element\n    );\n\n    // Set up filter display controls.\n    var display_controls_div = $(\"<div/>\")\n        .addClass(\"display-controls\")\n        .appendTo(filter.parent_div);\n    this.transparency_icon = create_action_icon(\n        \"Use filter for data transparency\",\n        \"layer-transparent\",\n        function() {\n            if (filter.manager.alpha_filter !== filter) {\n                // Setting this filter as the alpha filter.\n                filter.manager.alpha_filter = filter;\n                // Update UI for new filter.\n                filter.manager.parent_div\n                    .find(\".layer-transparent\")\n                    .removeClass(\"active\")\n                    .hide();\n                filter.transparency_icon.addClass(\"active\").show();\n            } else {\n                // Clearing filter as alpha filter.\n                filter.manager.alpha_filter = null;\n                filter.transparency_icon.removeClass(\"active\");\n            }\n            filter.manager.track.request_draw({\n                force: true,\n                clear_after: true\n            });\n        }\n    )\n        .appendTo(display_controls_div)\n        .hide();\n    this.height_icon = create_action_icon(\n        \"Use filter for data height\",\n        \"arrow-resize-090\",\n        function() {\n            if (filter.manager.height_filter !== filter) {\n                // Setting this filter as the height filter.\n                filter.manager.height_filter = filter;\n                // Update UI for new filter.\n                filter.manager.parent_div\n                    .find(\".arrow-resize-090\")\n                    .removeClass(\"active\")\n                    .hide();\n                filter.height_icon.addClass(\"active\").show();\n            } else {\n                // Clearing filter as alpha filter.\n                filter.manager.height_filter = null;\n                filter.height_icon.removeClass(\"active\");\n            }\n            filter.manager.track.request_draw({\n                force: true,\n                clear_after: true\n            });\n        }\n    )\n        .appendTo(display_controls_div)\n        .hide();\n    filter.parent_div.hover(\n        function() {\n            filter.transparency_icon.show();\n            filter.height_icon.show();\n        },\n        function() {\n            if (filter.manager.alpha_filter !== filter) {\n                filter.transparency_icon.hide();\n            }\n            if (filter.manager.height_filter !== filter) {\n                filter.height_icon.hide();\n            }\n        }\n    );\n\n    // Add to clear floating layout.\n    $(\"<div style='clear: both;'/>\").appendTo(filter.parent_div);\n};\nextend(NumberFilter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        var obj_dict = Filter.prototype.to_dict.call(this);\n        return extend(obj_dict, {\n            type: \"number\",\n            min: this.min,\n            max: this.max,\n            low: this.low,\n            high: this.high\n        });\n    },\n    /**\n     * Return a copy of filter.\n     */\n    copy: function() {\n        return new NumberFilter({\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        });\n    },\n    /**\n     * Get step for slider.\n     */\n    // FIXME: make this a \"static\" function.\n    get_slider_step: function(min, max) {\n        var range = max - min;\n        return range <= 2 ? 0.01 : 1;\n    },\n    /**\n     * Handle slide events.\n     */\n    slide: function(event, ui) {\n        var values = ui.values;\n\n        // Set new values in UI.\n        this.values_span.text(values[0] + \"-\" + values[1]);\n\n        // Set new values in filter.\n        this.low = values[0];\n        this.high = values[1];\n\n        // Set timeout to update if filter low, high are stable.\n        var self = this;\n        setTimeout(function() {\n            if (values[0] === self.low && values[1] === self.high) {\n                self.manager.track.request_draw({\n                    force: true,\n                    clear_after: true\n                });\n            }\n        }, 25);\n    },\n    /** \n     * Returns true if filter can be applied to element.\n     */\n    applies_to: function(element) {\n        if (element.length > this.index) {\n            return true;\n        }\n        return false;\n    },\n    /**\n     * Helper function: returns true if value in in filter's [low, high] range.\n     */\n    _keep_val: function(val) {\n        return isNaN(val) || (val >= this.low && val <= this.high);\n    },\n    /**\n     * Returns true if (a) element's value(s) is in [low, high] (range is inclusive) \n     * or (b) if value is non-numeric and hence unfilterable.\n     */\n    keep: function(element) {\n        if (!this.applies_to(element)) {\n            // No element to filter on.\n            return true;\n        }\n\n        // Keep value function.\n        var filter = this;\n\n        // Do filtering.\n        var to_filter = element[this.index];\n        if (to_filter instanceof Array) {\n            var returnVal = true;\n            for (var i = 0; i < to_filter.length; i++) {\n                if (!this._keep_val(to_filter[i])) {\n                    // Exclude element.\n                    returnVal = false;\n                    break;\n                }\n            }\n            return returnVal;\n        } else {\n            return this._keep_val(element[this.index]);\n        }\n    },\n    /**\n     * Update filter's min and max values based on element's values.\n     */\n    update_attrs: function(element) {\n        var updated = false;\n        if (!this.applies_to(element)) {\n            return updated;\n        }\n\n        //\n        // Update filter's min, max based on element values.\n        //\n\n        // Make value(s) into an Array.\n        var values = element[this.index];\n        if (!(values instanceof Array)) {\n            values = [values];\n        }\n\n        // Loop through values and update min, max.\n        for (var i = 0; i < values.length; i++) {\n            var value = values[i];\n            if (value < this.min) {\n                this.min = Math.floor(value);\n                updated = true;\n            }\n            if (value > this.max) {\n                this.max = Math.ceil(value);\n                updated = true;\n            }\n        }\n        return updated;\n    },\n    /**\n     * Update filter's slider.\n     */\n    update_ui_elt: function() {\n        // Only show filter if min < max because filter is not useful otherwise. This\n        // covers all corner cases, such as when min, max have not been defined and\n        // when min == max.\n        if (this.min < this.max) {\n            this.parent_div.show();\n        } else {\n            this.parent_div.hide();\n        }\n\n        var slider_min = this.slider.slider(\"option\", \"min\"),\n            slider_max = this.slider.slider(\"option\", \"max\");\n        if (this.min < slider_min || this.max > slider_max) {\n            // Update slider min, max, step.\n            this.slider.slider(\"option\", \"min\", this.min);\n            this.slider.slider(\"option\", \"max\", this.max);\n            this.slider.slider(\n                \"option\",\n                \"step\",\n                this.get_slider_step(this.min, this.max)\n            );\n            // Refresh slider:\n            // TODO: do we want to keep current values or reset to min/max?\n            // Currently we reset values:\n            this.slider.slider(\"option\", \"values\", [this.min, this.max]);\n            // To use the current values.\n            //var values = this.slider.slider( \"option\", \"values\" );\n            //this.slider.slider( \"option\", \"values\", values );\n        }\n    }\n});\n\n/**\n * Manages a set of filters.\n */\nvar FiltersManager = function(track, obj_dict) {\n    this.track = track;\n    this.alpha_filter = null;\n    this.height_filter = null;\n    this.filters = [];\n\n    //\n    // Create HTML.\n    //\n\n    //\n    // Create parent div.\n    //\n    this.parent_div = $(\"<div/>\")\n        .addClass(\"filters\")\n        .hide();\n    // Disable dragging, double clicking, keys on div so that actions on slider do not impact viz.\n    this.parent_div\n        .bind(\"drag\", function(e) {\n            e.stopPropagation();\n        })\n        .click(function(e) {\n            e.stopPropagation();\n        })\n        .bind(\"dblclick\", function(e) {\n            e.stopPropagation();\n        })\n        .bind(\"keydown\", function(e) {\n            e.stopPropagation();\n        });\n\n    //\n    // Restore state from dict.\n    //\n    if (obj_dict && \"filters\" in obj_dict) {\n        // Second condition needed for backward compatibility.\n        var alpha_filter_name =\n                \"alpha_filter\" in obj_dict ? obj_dict.alpha_filter : null,\n            height_filter_name =\n                \"height_filter\" in obj_dict ? obj_dict.height_filter : null,\n            filters_dict = obj_dict.filters,\n            filter;\n        for (var i = 0; i < filters_dict.length; i++) {\n            if (filters_dict[i].type === \"number\") {\n                filter = new NumberFilter(filters_dict[i]);\n                this.add_filter(filter);\n                if (filter.name === alpha_filter_name) {\n                    this.alpha_filter = filter;\n                    filter.transparency_icon.addClass(\"active\").show();\n                }\n                if (filter.name === height_filter_name) {\n                    this.height_filter = filter;\n                    filter.height_icon.addClass(\"active\").show();\n                }\n            } else {\n                console.log(\"ERROR: unsupported filter: \", name, type);\n            }\n        }\n\n        if (\"visible\" in obj_dict && obj_dict.visible) {\n            this.parent_div.show();\n        }\n    }\n\n    // Add button to filter complete dataset.\n    if (this.filters.length !== 0) {\n        var run_buttons_row = $(\"<div/>\")\n            .addClass(\"param-row\")\n            .appendTo(this.parent_div);\n        var run_on_dataset_button = $(\"<input type='submit'/>\")\n            .attr(\"value\", \"Run on complete dataset\")\n            .appendTo(run_buttons_row);\n        var filter_manager = this;\n        run_on_dataset_button.click(function() {\n            filter_manager.run_on_dataset();\n        });\n    }\n};\n\nextend(FiltersManager.prototype, {\n    // HTML manipulation and inspection.\n    show: function() {\n        this.parent_div.show();\n    },\n    hide: function() {\n        this.parent_div.hide();\n    },\n    toggle: function() {\n        this.parent_div.toggle();\n    },\n    visible: function() {\n        return this.parent_div.is(\":visible\");\n    },\n    /**\n     * Returns dictionary for manager.\n     */\n    to_dict: function() {\n        var obj_dict = {},\n            filter_dicts = [],\n            filter;\n\n        // Include individual filter states.\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            filter_dicts.push(filter.to_dict());\n        }\n        obj_dict.filters = filter_dicts;\n\n        // Include transparency, height filters.\n        obj_dict.alpha_filter = this.alpha_filter\n            ? this.alpha_filter.name\n            : null;\n        obj_dict.height_filter = this.height_filter\n            ? this.height_filter.name\n            : null;\n\n        // Include visibility.\n        obj_dict.visible = this.parent_div.is(\":visible\");\n\n        return obj_dict;\n    },\n    /**\n     * Return a copy of the manager.\n     */\n    copy: function(new_track) {\n        var copy = new FiltersManager(new_track);\n        for (var i = 0; i < this.filters.length; i++) {\n            copy.add_filter(this.filters[i].copy());\n        }\n        return copy;\n    },\n    /**\n     * Add a filter to the manager.\n     */\n    add_filter: function(filter) {\n        filter.manager = this;\n        this.parent_div.append(filter.parent_div);\n        this.filters.push(filter);\n    },\n    /**\n     * Remove all filters from manager.\n     */\n    remove_all: function() {\n        this.filters = [];\n        this.parent_div.children().remove();\n    },\n    /**\n     * Initialize filters.\n     */\n\n    init_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.update_ui_elt();\n        }\n    },\n    /**\n     * Clear filters so that they do not impact track display.\n     */\n    clear_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.slider.slider(\"option\", \"values\", [filter.min, filter.max]);\n        }\n        this.alpha_filter = null;\n        this.height_filter = null;\n\n        // Hide icons for setting filters.\n        this.parent_div.find(\".icon-button\").hide();\n    },\n    run_on_dataset: function() {\n        // Get or create dictionary item.\n        var get_or_create_dict_item = function(dict, key, new_item) {\n            // Add new item to dict if\n            if (!(key in dict)) {\n                dict[key] = new_item;\n            }\n            return dict[key];\n        };\n\n        //\n        // Find and group active filters. Active filters are those being used to hide data.\n        // Filters with the same tool id are grouped.\n        //\n        var active_filters = {},\n            filter,\n            tool_filter_conditions;\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            if (filter.tool_id) {\n                // Add filtering conditions if filter low/high are set.\n                if (filter.min !== filter.low) {\n                    tool_filter_conditions = get_or_create_dict_item(\n                        active_filters,\n                        filter.tool_id,\n                        []\n                    );\n                    tool_filter_conditions[tool_filter_conditions.length] =\n                        filter.tool_exp_name + \" >= \" + filter.low;\n                }\n                if (filter.max !== filter.high) {\n                    tool_filter_conditions = get_or_create_dict_item(\n                        active_filters,\n                        filter.tool_id,\n                        []\n                    );\n                    tool_filter_conditions[tool_filter_conditions.length] =\n                        filter.tool_exp_name + \" <= \" + filter.high;\n                }\n            }\n        }\n\n        //\n        // Use tools to run filters.\n        //\n\n        // Create list of (tool_id, tool_filters) tuples.\n        var active_filters_list = [];\n        for (var tool_id in active_filters) {\n            active_filters_list[active_filters_list.length] = [\n                tool_id,\n                active_filters[tool_id]\n            ];\n        }\n\n        // Invoke recursive function to run filters; this enables chaining of filters via\n        // iteratively application.\n        (function run_filter(input_dataset_id, filters) {\n            var // Set up filtering info and params.\n                filter_tuple = filters[0],\n                tool_id = filter_tuple[0],\n                tool_filters = filter_tuple[1],\n                tool_filter_str = \"(\" + tool_filters.join(\") and (\") + \")\",\n                url_params = {\n                    cond: tool_filter_str,\n                    input: input_dataset_id,\n                    target_dataset_id: input_dataset_id,\n                    tool_id: tool_id\n                };\n\n            // Remove current filter.\n            filters = filters.slice(1);\n\n            $.getJSON(run_tool_url, url_params, function(response) {\n                if (response.error) {\n                    // General error.\n                    Galaxy.modal.show({\n                        title: \"Filter Dataset\",\n                        body: \"Error running tool \" + tool_id,\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else if (filters.length === 0) {\n                    // No more filters to run.\n                    Galaxy.modal.show({\n                        title: \"Filtering Dataset\",\n                        body:\n                            \"Filter(s) are running on the complete dataset. Outputs are in dataset's history.\",\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else {\n                    // More filters to run.\n                    run_filter(response.dataset_id, filters);\n                }\n            });\n        })(this.track.dataset_id, active_filters_list);\n    }\n});\n\nexport default {\n    FiltersManager: FiltersManager,\n    NumberFilter: NumberFilter\n};\n"]}