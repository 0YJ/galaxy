{"version":3,"sources":["viz/viz_views.js"],"names":["TrackHeaderView","Backbone","View","extend","className","initialize","this","model","config","get","on","update_name","render","$el","append","$","addClass","drag_handle_class","text","get_value","action_icons","render_action_icons","e","stopPropagation","self","icons_div","appendTo","find","_underscore2","default","each","action_icons_def","icon_dict","add_action_icon","title","css_class","on_click_fn","hide","set_display_modes","display_modes","prepend","name","attr","new_modes","tooltip","click","track","init_mode","mode","mode_icon","make_popupmenu","mode_mapping","i","len","length","change_mode"],"mappings":"4KAIIA,EAAkBC,SAASC,KAAKC,QAChCC,UAAW,eAEXC,WAAY,WAERC,KAAKC,MAAMC,OACNC,IAAI,QACJC,GAAG,eAAgBJ,KAAKK,YAAaL,MAC1CA,KAAKM,UAXbA,OAAA,WAeQN,KAAKO,IAAIC,OAAOC,EAAE,UAAUC,SAASV,KAAKC,MAAMU,oBAChDX,KAAKO,IAAIC,OAbbd,EAAAA,UACAI,SAAW,cAeEc,KAAKZ,KAAKC,MAAMC,OAAOW,UAAU,UAR1Cb,KAAAc,gBACHd,KATsCe,sBAYnCf,KAAAO,IAAKA,SAAIC,SAASQ,GAClBA,EAAAC,oBAQAjB,KAAAO,IAAKQ,OAAAA,EAAAA,gCAGLV,YAAKE,WACDS,KAAAA,IAAAA,KAAEC,eAAFL,KAAAZ,KAAAC,MAAAC,OAAAW,UAAA,UAGJE,oBAAA,WACA,IAAAG,EAAKX,KACRP,KA9BsCmB,UAAAV,EAAA,UAuC9BC,SAAS,eAPlBL,OACIe,SAASC,KAAKd,KACjBe,EAAAC,QAlCsCC,KAAAxB,KAAAC,MAAAwB,iBAAA,SAAAC,GA2C/BR,EAAKS,gBAPbZ,EAAAA,KACQG,EAAOU,MACXF,EAAAG,UAIAH,EAAAI,YACIZ,EAAKS,QADTD,EAAAK,QAYA/B,KAAKgC,kBAAkBhC,KAAKC,MAAMgC,gBAelCN,gBAAKb,SAMGgB,EACHF,EAELC,EACIC,EACHI,EACJH,GAED,IAAAb,EAAAlB,KAdIA,KAAKc,aAAaqB,GAAQ1B,EAAE,QACvB2B,KAAK,QAASR,GAgBvBI,SAAAA,eACItB,SAAK2B,GACDC,UACHC,MAAA,WAdOT,EAAYZ,EAAKjB,SAEpBmB,SAASpB,KAAKmB,WAgBnBY,GACA/B,KAAKC,aAAMgC,GAAXF,QAYAC,kBACIQ,SAAavC,EADjBwC,GAAA,GAAAJ,EAAA,CASYrC,KAAAC,MAAAgC,cAAAI,EACArC,KAAAC,MAAAyC,KACAD,GACHzC,KAAAC,MANDC,OAAAW,UAAA,SAOHb,KARoBC,MAArBgC,cAAA,GAXJjC,KAAKc,aAAa6B,UAAUP,KAsB5BQ,QACH,0BAAA5C,KAAA0C,KAAA,KAdG,IAAK,IAFDF,EAAQxC,KAAKC,MACb4C,KACKC,EAAI,EAAGC,EAAMP,EAAMP,cAAce,OAAQF,EAAIC,EAAKD,IAAK,CAC5D,IAAIJ,EAAOF,EAAMP,cAAca,GAC/BD,EAAaH,GAAS,SAASA,GAC3B,OAAO,WACHF,EAAMS,YAAYP,IAFJ,CAQnBA,GAGPE,eAAe5C,KAAKc,aAAa6B,UAAWE,kBAKhDnD,gBAAiBA","file":"../../scripts/viz/viz_views.js","sourcesContent":["import _ from \"libs/underscore\";\n/**\n * View for track/group header.\n */\nvar TrackHeaderView = Backbone.View.extend({\n    className: \"track-header\",\n\n    initialize: function() {\n        // Watch and update name changes.\n        this.model.config\n            .get(\"name\")\n            .on(\"change:value\", this.update_name, this);\n        this.render();\n    },\n\n    render: function() {\n        this.$el.append($(\"<div/>\").addClass(this.model.drag_handle_class));\n        this.$el.append(\n            $(\"<div/>\")\n                .addClass(\"track-name\")\n                .text(this.model.config.get_value(\"name\"))\n        );\n\n        // Icons container.\n        this.action_icons = {};\n        this.render_action_icons();\n\n        // Suppress double clicks in header so that they do not impact viz under header.\n        this.$el.dblclick(function(e) {\n            e.stopPropagation();\n        });\n\n        // Needed for floating elts in header.\n        this.$el.append($(\"<div style='clear: both'/>\"));\n    },\n\n    update_name: function() {\n        this.$el.find(\".track-name\").text(this.model.config.get_value(\"name\"));\n    },\n\n    render_action_icons: function() {\n        var self = this;\n        this.icons_div = $(\"<div/>\")\n            .addClass(\"track-icons\")\n            .hide()\n            .appendTo(this.$el);\n        _.each(this.model.action_icons_def, function(icon_dict) {\n            self.add_action_icon(\n                icon_dict.name,\n                icon_dict.title,\n                icon_dict.css_class,\n                icon_dict.on_click_fn,\n                icon_dict.prepend,\n                icon_dict.hide\n            );\n        });\n\n        // Set up behavior for modes popup.\n        this.set_display_modes(this.model.display_modes);\n    },\n\n    /**\n     * Add an action icon to this object. Appends icon unless prepend flag is specified.\n     */\n    add_action_icon: function(\n        name,\n        title,\n        css_class,\n        on_click_fn,\n        prepend,\n        hide\n    ) {\n        var self = this;\n        this.action_icons[name] = $(\"<a/>\")\n            .attr(\"title\", title)\n            .addClass(\"icon-button\")\n            .addClass(css_class)\n            .tooltip()\n            .click(function() {\n                on_click_fn(self.model);\n            })\n            .appendTo(this.icons_div);\n        if (hide) {\n            this.action_icons[name].hide();\n        }\n    },\n\n    /**\n     * Set track's modes and update mode icon popup.\n     */\n    set_display_modes: function(new_modes, init_mode) {\n        if (!new_modes) {\n            return;\n        }\n\n        // HACK: move this out of view and into track.\n\n        // Set modes, init mode.\n        this.model.display_modes = new_modes;\n        this.model.mode =\n            init_mode ||\n            this.model.config.get_value(\"mode\") ||\n            this.model.display_modes[0];\n\n        this.action_icons.mode_icon.attr(\n            \"title\",\n            \"Set display mode (now: \" + this.mode + \")\"\n        );\n\n        // Setup popup menu for changing modes.\n        var self = this,\n            track = this.model,\n            mode_mapping = {};\n        for (var i = 0, len = track.display_modes.length; i < len; i++) {\n            var mode = track.display_modes[i];\n            mode_mapping[mode] = (function(mode) {\n                return function() {\n                    track.change_mode(mode);\n                    // HACK: the popup menu messes with the track's hover event, so manually show/hide\n                    // icons div for now.\n                    //self.icons_div.show();\n                    //track.container_div.mouseleave(function() { track.icons_div.hide(); } );\n                };\n            })(mode);\n        }\n\n        make_popupmenu(this.action_icons.mode_icon, mode_mapping);\n    }\n});\n\nexport default {\n    TrackHeaderView: TrackHeaderView\n};\n"]}