{"version":3,"sources":["utils/utils.js"],"names":["deepeach","dict","callback","iframe","d","i","_","isObject","new_dict","request","options","ajaxConfig","url","done","$","type","isEmptyObject","response","data","indexOf","dataType","success","response_text","error","jQuery","parseJSON","complete","console","debug","e","fail","cssGetAttribute","classname","responseText","el","appendTo","remove","status","always","roundToDecimalPlaces","number","numPlaces","numberPlaces","placesMultiplier","size","Math","mb","kb","unit","cssLoadFile","length","Galaxy","root","name","value","css","get","top","cache_key","JSON","stringify","__utils__get__","window","merge","round","defaults","optionsDefault","src","bytesToString","normal_font","undefined","rounded","gb","uid","__utils__uid__","time","getMinutes","minutes","styles","Date","hours","getQueryString","getHours","decodeURIComponent","location","search","getDate","getMonth","getFullYear","sanitize","content","text","html","textify","lst","isArray","pos","toString","replace","lastIndexOf","substr","isEmpty","Array","isJSON","test","clone","obj","linkify","replacedText","replacePattern1","inputText","replacePattern2","replacePattern3","appendScriptStyle","script","key","RegExp","encodeURIComponent","setWindowTitle","title","document","config","brand","_localization2","default"],"mappings":"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","file":"../../scripts/utils/utils.js","sourcesContent":["/**\n * Galaxy utilities comprises small functions, which at this point\n * do not require their own classes/files\n*/\nimport _l from \"utils/localization\";\n/** Builds a basic iframe */\nfunction iframe(src) {\n    return (\n        '<iframe src=\"' +\n        src +\n        '\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>'\n    );\n}\n\n/** Traverse through json */\nfunction deepeach(dict, callback) {\n    for (var i in dict) {\n        var d = dict[i];\n        if (_.isObject(d)) {\n            var new_dict = callback(d);\n            new_dict && (dict[i] = new_dict);\n            deepeach(d, callback);\n        }\n    }\n}\n\n/** Identifies urls and replaces them with anchors */\nfunction linkify(inputText) {\n    var replacedText;\n    var replacePattern1;\n    var replacePattern2;\n    var replacePattern3;\n\n    // URLs starting with http://, https://, or ftp://\n    replacePattern1 = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\n    replacedText = inputText.replace(\n        replacePattern1,\n        '<a href=\"$1\" target=\"_blank\">$1</a>'\n    );\n\n    // URLs starting with \"www.\" (without // before it, or it'd re-link the ones done above).\n    replacePattern2 = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\n    replacedText = replacedText.replace(\n        replacePattern2,\n        '$1<a href=\"http://$2\" target=\"_blank\">$2</a>'\n    );\n\n    // Change email addresses to mailto:: links.\n    replacePattern3 = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\n    replacedText = replacedText.replace(\n        replacePattern3,\n        '<a href=\"mailto:$1\">$1</a>'\n    );\n\n    return replacedText;\n}\n\n/** Clone */\nfunction clone(obj) {\n    return JSON.parse(JSON.stringify(obj) || null);\n}\n\n/**\n     * Check if a string is a json string\n     * @param{String}   text - Content to be validated\n     */\nfunction isJSON(text) {\n    return /^[\\],:{}\\s]*$/.test(\n        text\n            .replace(/\\\\[\"\\\\\\/bfnrtu]/g, \"@\")\n            .replace(\n                /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\n                \"]\"\n            )\n            .replace(/(?:^|:|,)(?:\\s*\\[)+/g, \"\")\n    );\n}\n\n/**\n     * Sanitize/escape a string\n     * @param{String}   content - Content to be sanitized\n     */\nfunction sanitize(content) {\n    return $(\"<div/>\")\n        .text(content)\n        .html();\n}\n\n/**\n     * Checks if a value or list of values is `empty`\n     * usually used for selectable options\n     * @param{String}   value - Value or list to be validated\n     */\nfunction isEmpty(value) {\n    if (!(value instanceof Array)) {\n        value = [value];\n    }\n    if (value.length === 0) {\n        return true;\n    }\n    for (var i in value) {\n        if (\n            [\"__null__\", \"__undefined__\", null, undefined].indexOf(value[i]) >\n            -1\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n     * Convert list to pretty string\n     * @param{String}   lst - List of strings to be converted in human readable list sentence\n     */\nfunction textify(lst) {\n    if ($.isArray(lst)) {\n        var lst = lst.toString().replace(/,/g, \", \");\n        var pos = lst.lastIndexOf(\", \");\n        if (pos != -1) {\n            lst = lst.substr(0, pos) + \" or \" + lst.substr(pos + 2);\n        }\n        return lst;\n    }\n    return \"\";\n}\n\n/**\n     * Request handler for GET\n     * @param{String}   url     - Url request is made to\n     * @param{Function} success - Callback on success\n     * @param{Function} error   - Callback on error\n     * @param{Boolean}  cache   - Use cached data if available\n     */\nfunction get(options) {\n    top.__utils__get__ = top.__utils__get__ || {};\n    var cache_key = JSON.stringify(options);\n    if (options.cache && top.__utils__get__[cache_key]) {\n        options.success && options.success(top.__utils__get__[cache_key]);\n        window.console.debug(\n            \"utils.js::get() - Fetching from cache [\" + options.url + \"].\"\n        );\n    } else {\n        request({\n            url: options.url,\n            data: options.data,\n            success: function(response) {\n                top.__utils__get__[cache_key] = response;\n                options.success && options.success(response);\n            },\n            error: function(response, status) {\n                options.error && options.error(response, status);\n            }\n        });\n    }\n}\n\n/**\n     * Request handler\n     * @param{String}   method  - Request method ['GET', 'POST', 'DELETE', 'PUT']\n     * @param{String}   url     - Url request is made to\n     * @param{Object}   data    - Data send to url\n     * @param{Function} success - Callback on success\n     * @param{Function} error   - Callback on error\n     */\nfunction request(options) {\n    // prepare ajax\n    var ajaxConfig = {\n        contentType: \"application/json\",\n        type: options.type || \"GET\",\n        data: options.data || {},\n        url: options.url\n    };\n    // encode data into url\n    if (ajaxConfig.type == \"GET\" || ajaxConfig.type == \"DELETE\") {\n        if (!$.isEmptyObject(ajaxConfig.data)) {\n            ajaxConfig.url += ajaxConfig.url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n            ajaxConfig.url += $.param(ajaxConfig.data, true);\n        }\n        ajaxConfig.data = null;\n    } else {\n        ajaxConfig.dataType = \"json\";\n        ajaxConfig.url = ajaxConfig.url;\n        ajaxConfig.data = JSON.stringify(ajaxConfig.data);\n    }\n\n    // make request\n    $.ajax(ajaxConfig)\n        .done(response => {\n            if (typeof response === \"string\") {\n                try {\n                    response = response.replace(\"Infinity,\", '\"Infinity\",');\n                    response = jQuery.parseJSON(response);\n                } catch (e) {\n                    console.debug(e);\n                }\n            }\n            options.success && options.success(response);\n        })\n        .fail(response => {\n            var response_text = null;\n            try {\n                response_text = jQuery.parseJSON(response.responseText);\n            } catch (e) {\n                response_text = response.responseText;\n            }\n            options.error && options.error(response_text, response.status);\n        })\n        .always(() => {\n            options.complete && options.complete();\n        });\n}\n\n/**\n     * Read a property value from CSS\n     * @param{String}   classname   - CSS class\n     * @param{String}   name        - CSS property\n     */\nfunction cssGetAttribute(classname, name) {\n    var el = $('<div class=\"' + classname + '\"></div>');\n    el.appendTo(\":eq(0)\");\n    var value = el.css(name);\n    el.remove();\n    return value;\n}\n\n/**\n     * Load a CSS file\n     * @param{String}   url - Url of CSS file\n     */\nfunction cssLoadFile(url) {\n    if (!$('link[href^=\"' + url + '\"]').length) {\n        $('<link href=\"' + Galaxy.root + url + '\" rel=\"stylesheet\">').appendTo(\n            \"head\"\n        );\n    }\n}\n\n/**\n     * Safely merge to dictionaries\n     * @param{Object}   options         - Target dictionary\n     * @param{Object}   optionsDefault  - Source dictionary\n     */\nfunction merge(options, optionsDefault) {\n    if (options) {\n        return _.defaults(options, optionsDefault);\n    } else {\n        return optionsDefault;\n    }\n}\n\n/**\n     * Round floaing point 'number' to 'numPlaces' number of decimal places.\n     * @param{Object}   number      a floaing point number\n     * @param{Object}   numPlaces   number of decimal places\n     */\nfunction roundToDecimalPlaces(number, numPlaces) {\n    var placesMultiplier = 1;\n    for (var i = 0; i < numPlaces; i++) {\n        placesMultiplier *= 10;\n    }\n    return Math.round(number * placesMultiplier) / placesMultiplier;\n}\n\n// calculate on import\nvar kb = 1024;\n\nvar mb = kb * kb;\nvar gb = mb * kb;\nvar tb = gb * kb;\n/**\n     * Format byte size to string with units\n     * @param{Integer}   size           - Size in bytes\n     * @param{Boolean}   normal_font    - Switches font between normal and bold\n     */\nfunction bytesToString(size, normal_font, numberPlaces) {\n    numberPlaces = numberPlaces !== undefined ? numberPlaces : 1;\n    // identify unit\n    var unit = \"\";\n    if (size >= tb) {\n        size = size / tb;\n        unit = \"TB\";\n    } else if (size >= gb) {\n        size = size / gb;\n        unit = \"GB\";\n    } else if (size >= mb) {\n        size = size / mb;\n        unit = \"MB\";\n    } else if (size >= kb) {\n        size = size / kb;\n        unit = \"KB\";\n    } else if (size > 0) {\n        unit = \"b\";\n    } else {\n        return normal_font ? \"0 b\" : \"<strong>-</strong>\";\n    }\n    // return formatted string\n    var rounded = unit == \"b\" ? size : roundToDecimalPlaces(size, numberPlaces);\n    if (normal_font) {\n        return rounded + \" \" + unit;\n    } else {\n        return \"<strong>\" + rounded + \"</strong> \" + unit;\n    }\n}\n\n/** Create a unique id */\nfunction uid() {\n    top.__utils__uid__ = top.__utils__uid__ || 0;\n    return \"uid-\" + top.__utils__uid__++;\n}\n\n/** Create a time stamp */\nfunction time() {\n    var d = new Date();\n    var hours = (d.getHours() < 10 ? \"0\" : \"\") + d.getHours();\n    var minutes = (d.getMinutes() < 10 ? \"0\" : \"\") + d.getMinutes();\n    return (\n        d.getDate() +\n        \"/\" +\n        (d.getMonth() + 1) +\n        \"/\" +\n        d.getFullYear() +\n        \", \" +\n        hours +\n        \":\" +\n        minutes\n    );\n}\n\n/** Append script and style tags to Galaxy main application */\nfunction appendScriptStyle(data) {\n    // create a script tag inside head tag\n    if (data.script && data.script !== \"\") {\n        $(\"<script/>\", { type: \"text/javascript\" })\n            .text(data.script)\n            .appendTo(\"head\");\n    }\n    // create a style tag inside head tag\n    if (data.styles && data.styles !== \"\") {\n        $(\"<style/>\", { type: \"text/css\" })\n            .text(data.styles)\n            .appendTo(\"head\");\n    }\n}\n\n/** Get querystrings from url */\nfunction getQueryString(key) {\n    return decodeURIComponent(\n        window.location.search.replace(\n            new RegExp(\n                \"^(?:.*[&\\\\?]\" +\n                    encodeURIComponent(key).replace(/[\\.\\+\\*]/g, \"\\\\$&\") +\n                    \"(?:\\\\=([^&]*))?)?.*$\",\n                \"i\"\n            ),\n            \"$1\"\n        )\n    );\n}\n\nfunction setWindowTitle(title) {\n    if (title) {\n        window.document.title =\n            \"Galaxy \" +\n            (window.Galaxy.config.brand\n                ? \" | \" + window.Galaxy.config.brand\n                : \"\") +\n            \" | \" +\n            _l(title);\n    } else {\n        window.document.title =\n            \"Galaxy \" +\n            (window.Galaxy.config.brand\n                ? \" | \" + window.Galaxy.config.brand\n                : \"\");\n    }\n}\n\nexport default {\n    cssLoadFile: cssLoadFile,\n    cssGetAttribute: cssGetAttribute,\n    get: get,\n    merge: merge,\n    iframe: iframe,\n    bytesToString: bytesToString,\n    uid: uid,\n    time: time,\n    request: request,\n    sanitize: sanitize,\n    textify: textify,\n    isEmpty: isEmpty,\n    deepeach: deepeach,\n    isJSON: isJSON,\n    clone: clone,\n    linkify: linkify,\n    appendScriptStyle: appendScriptStyle,\n    getQueryString: getQueryString,\n    setWindowTitle: setWindowTitle\n};\n"]}