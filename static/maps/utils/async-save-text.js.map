{"version":3,"sources":["utils/async-save-text.js"],"names":["define","jQuery","click_to_edit_elt","text_elt_id","save_url","text_parm_name","num_cols","num_rows","on_start","undefined","$","click","length","t","size","value","trim","use_textarea","attr","blur","rows","cols","remove","on_finish","e","text_elt","show","ajax_data","ajax","url","error","alert","success","this","processed_text","trigger","data","text","html","async_save_text","hide","insertAfter","focus","select"],"mappings":"kCAAAA,QAAQ,UAAW,SAASC,GACxB,aADJD,IAAAA,EAAQC,EAwGJ,OAnGA,SAIIC,EACAC,EAFJC,EAWIC,EACAC,EACIA,EACHC,EACDC,EACID,QAGJE,IAAAH,IACAI,EAAQR,SAEEO,IAANF,IACIA,EAAA,GAEJG,EAAA,IAAAR,GAAAS,MAAA,WAIA,KAAAD,EAAA,oBAAkBE,OAAA,GAAlB,CAKIC,IAEIC,EAFJD,EAAMH,EAAA,IAAAP,GACFY,EAAAA,EAASC,QAIjBH,EADCI,EACCC,EAAF,yBACEC,MAAKC,KAAAb,EAAWc,KAAAf,IACdI,KAAAA,EAAQY,KAAAA,IAERZ,EAAA,+BAAeQ,MACXK,MAAAA,EAAAA,KAAUV,GACbC,KAAAR,KAGDY,KAAA,KAAIM,mBACAX,EAAAM,KAAA,WACAT,EAAAA,MAAAA,SACHe,EAHDC,OAIIH,GACAA,EAAII,KAGJjB,EAAAA,MAAAA,SAAEkB,GACEC,GAAKzB,KAALyB,EAAAA,QAEAC,EAAAA,MAAAA,QAAO,aACHC,GACI,KADJA,EAAAA,QACI,CAKP,IAAAJ,KACDK,EAAAA,GAAStB,EAAAuB,MAASC,MACdxB,EAAAuB,MAAAE,QAAA,QACAzB,EAAAkB,MACIH,IAAAA,EACHW,KAAAT,EACGF,MAAAA,WACHM,MACD,wBACIR,EACH,YA7BjBS,QAAA,SAAAE,GAmCc,KAAAA,EACVT,EAAAY,KAAAH,GAEJT,EAAAa,KAAA,iBAEcb,GACdF,EAAAV,SAORL,GACO+B,EAAAA,GAVCd,EAASe,OACT3B,EAAE4B,YAAYhB,GACdZ,EAAE6B,QACF7B,EAAE8B","file":"../../scripts/utils/async-save-text.js","sourcesContent":["define([\"jquery\"], function(jQuery) {\n    \"use_strict\";\n\n    var $ = jQuery;\n    // ============================================================================\n    /**\n * Edit and save text asynchronously.\n */\n    function async_save_text(\n        click_to_edit_elt,\n        text_elt_id,\n        save_url,\n        text_parm_name,\n        num_cols,\n        use_textarea,\n        num_rows,\n        on_start,\n        on_finish\n    ) {\n        // Set defaults if necessary.\n        if (num_cols === undefined) {\n            num_cols = 30;\n        }\n        if (num_rows === undefined) {\n            num_rows = 4;\n        }\n\n        // Set up input element.\n        $(\"#\" + click_to_edit_elt).click(function() {\n            // Check if this is already active\n            if ($(\"#renaming-active\").length > 0) {\n                return;\n            }\n            var text_elt = $(\"#\" + text_elt_id),\n                old_text = text_elt.text(),\n                t;\n\n            if (use_textarea) {\n                t = $(\"<textarea></textarea>\")\n                    .attr({ rows: num_rows, cols: num_cols })\n                    .text($.trim(old_text));\n            } else {\n                t = $(\"<input type='text'></input>\").attr({\n                    value: $.trim(old_text),\n                    size: num_cols\n                });\n            }\n            t.attr(\"id\", \"renaming-active\");\n            t.blur(function() {\n                $(this).remove();\n                text_elt.show();\n                if (on_finish) {\n                    on_finish(t);\n                }\n            });\n            t.keyup(function(e) {\n                if (e.keyCode === 27) {\n                    // Escape key\n                    $(this).trigger(\"blur\");\n                } else if (e.keyCode === 13) {\n                    // Enter key submits\n                    var ajax_data = {};\n                    ajax_data[text_parm_name] = $(this).val();\n                    $(this).trigger(\"blur\");\n                    $.ajax({\n                        url: save_url,\n                        data: ajax_data,\n                        error: function() {\n                            alert(\n                                \"Text editing for elt \" +\n                                    text_elt_id +\n                                    \" failed\"\n                            );\n                            // TODO: call finish or no? For now, let's not because error occurred.\n                        },\n                        success: function(processed_text) {\n                            // Set new text and call finish method.\n                            if (processed_text !== \"\") {\n                                text_elt.text(processed_text);\n                            } else {\n                                text_elt.html(\"<em>None</em>\");\n                            }\n                            if (on_finish) {\n                                on_finish(t);\n                            }\n                        }\n                    });\n                }\n            });\n\n            if (on_start) {\n                on_start(t);\n            }\n            // Replace text with input object and focus & select.\n            text_elt.hide();\n            t.insertAfter(text_elt);\n            t.focus();\n            t.select();\n\n            return;\n        });\n    }\n\n    // ============================================================================\n    return async_save_text;\n});\n"]}