{"version":3,"sources":["utils/async-save-text.js"],"names":["define","jQuery","async_save_text","click_to_edit_elt","text_elt_id","save_url","text_parm_name","num_cols","use_textarea","num_rows","on_start","on_finish","undefined","$","click","length","t","text_elt","old_text","text","attr","rows","cols","trim","value","size","blur","remove","show","keyup","e","keyCode","this","trigger","ajax_data","val","ajax","url","data","error","success","processed_text","html","hide"],"mappings":"YAAAA,SAAS,UAAY,SAAUC,GAC/B,YAOA,SAASC,GAAiBC,EAAmBC,EAAaC,EAChCC,EAAgBC,EAAUC,EAAcC,EAAUC,EAAUC,OAClFC,KAAAL,IACAA,EAAIA,QAEHK,KAAAH,IACDA,EAAIA,GAIJI,EAAA,IAAAV,GAAAW,MAAA,WAEI,KAAAD,EAAA,oBAAAE,OAAA,GAAA,CAGC,GACDC,GADCC,EAAAJ,EAAA,IAAAT,GACDc,EAAID,EAAaE,MAIjBH,GAAIR,EAAAA,EAAAA,yBAAcY,MAAAC,KAAAZ,EAAAa,KAAAf,IAAAY,KAAAN,EAAAU,KAAAL,IAAlBL,EAAA,+BAEOO,MAAAI,MAAAX,EAAAU,KAAAL,GAAAO,KAAAlB,IAENS,EAAAI,KAAA,KAAA,mBACDJ,EAAAA,KAAEI,WACFJ,EAAEU,MAAMC,SACJd,EAAEe,OACFX,GACAN,EAAIA,KAGPK,EAAAa,MAND,SAAAC,GAOAd,GAAS,KAAPa,EAAFE,QAEQlB,EAAAmB,MAAAC,QAAA,YACApB,IAAiB,KAAfiB,EAAFC,QAAA,CAEA,GAAAG,KACAA,GAAIA,GAAJrB,EAAAmB,MAAAG,MACAD,EAAAA,MAAAA,QAAU5B,QACVO,EAAAA,MACAA,IAAEuB,EACEC,KAAAA,EACAC,MAAAA,WACAC,MAAO,wBAAWnC,EAAA,YAGjBoC,QANE,SAAAC,GAQC,KAAAA,EACAxB,EAAIwB,KAAAA,GAEHxB,EAAMyB,KAAA,iBAEN/B,GACDA,EAAIA,SAQhBD,GAAJA,EAAIA,GAGJO,EAAA0B,OACA1B,EAAAA,YAAS0B,GACT3B,EAAAA,QACAA,EAAAA,YA7ER,GAAAH,GAAAZ,CAoFA,OAAAC","file":"../../scripts/utils/async-save-text.js","sourcesContent":["define([ 'jquery' ], function( jQuery ){\n'use_strict';\n\nvar $ = jQuery;\n// ============================================================================\n/**\n * Edit and save text asynchronously.\n */\nfunction async_save_text( click_to_edit_elt, text_elt_id, save_url,\n                          text_parm_name, num_cols, use_textarea, num_rows, on_start, on_finish ) {\n    // Set defaults if necessary.\n    if (num_cols === undefined) {\n        num_cols = 30;\n    }\n    if (num_rows === undefined) {\n        num_rows = 4;\n    }\n\n    // Set up input element.\n    $(\"#\" + click_to_edit_elt).click(function() {\n        // Check if this is already active\n        if ( $(\"#renaming-active\").length > 0) {\n            return;\n        }\n        var text_elt = $(\"#\" + text_elt_id),\n            old_text = text_elt.text(),\n            t;\n\n        if (use_textarea) {\n            t = $(\"<textarea></textarea>\").attr({ rows: num_rows, cols: num_cols }).text( $.trim(old_text) );\n        } else {\n            t = $(\"<input type='text'></input>\").attr({ value: $.trim(old_text), size: num_cols });\n        }\n        t.attr(\"id\", \"renaming-active\");\n        t.blur( function() {\n            $(this).remove();\n            text_elt.show();\n            if (on_finish) {\n                on_finish(t);\n            }\n        });\n        t.keyup( function( e ) {\n            if ( e.keyCode === 27 ) {\n                // Escape key\n                $(this).trigger( \"blur\" );\n            } else if ( e.keyCode === 13 ) {\n                // Enter key submits\n                var ajax_data = {};\n                ajax_data[text_parm_name] = $(this).val();\n                $(this).trigger( \"blur\" );\n                $.ajax({\n                    url: save_url,\n                    data: ajax_data,\n                    error: function() {\n                        alert( \"Text editing for elt \" + text_elt_id + \" failed\" );\n                        // TODO: call finish or no? For now, let's not because error occurred.\n                    },\n                    success: function(processed_text) {\n                        // Set new text and call finish method.\n                        if (processed_text !== \"\") {\n                            text_elt.text(processed_text);\n                        } else {\n                            text_elt.html(\"<em>None</em>\");\n                        }\n                        if (on_finish) {\n                            on_finish(t);\n                        }\n                    }\n                });\n            }\n        });\n\n        if (on_start) {\n            on_start(t);\n        }\n        // Replace text with input object and focus & select.\n        text_elt.hide();\n        t.insertAfter(text_elt);\n        t.focus();\n        t.select();\n\n        return;\n    });\n}\n\n// ============================================================================\n    return async_save_text;\n});\n\n"]}