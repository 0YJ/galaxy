{"version":3,"sources":["utils/query-string-parsing.js"],"names":["get","key","queryString","window","location","search","substr","keyRegex","RegExp","matches","match","length","parse","parsed","split","forEach","pairString","pair","decodeURI"],"mappings":"qIA8BCA,IA7BD,SAAaC,EAAKC,GACdA,EAAcA,GAAeC,OAAOC,SAASC,OAAOC,OAAO,GAC3D,IAAIC,EAAW,IAAIC,OAAOP,EAAM,aAAc,KAC1CQ,EAAUP,EAAYQ,MAAMH,GAChC,GAAKE,GAAYA,EAAQE,OAExB,OAAA,KALDT,EAAAA,EAAAA,IAAAA,EAAcA,SAAeC,GAC7B,OAAII,mBACAE,EAAAA,OAAUP,EAAAA,OAAYQ,GAAMH,QAAhC,MAAA,SAGCI,OACDF,EAAU,GAAVA,GA2BAG,MApBC,SAAAV,GACD,IAAAA,EACH,SAED,IAAAW,KAMIC,OALKZ,EAAaY,MAAA,KACdC,QAAA,SAAAC,GACH,IAAAC,EAAAD,EAAAF,MAAA,KACDD,EAAIA,EAAAA,IAAJK,UAAAD,EAAA,MAEAH","file":"../../scripts/utils/query-string-parsing.js","sourcesContent":["// ============================================================================\nfunction get(key, queryString) {\n    queryString = queryString || window.location.search.substr(1);\n    var keyRegex = new RegExp(key + \"=([^&#$]+)\", \"g\");\n    var matches = queryString.match(keyRegex);\n    if (!matches || !matches.length) {\n        return undefined;\n    }\n    matches = _.map(matches, function(match) {\n        return decodeURIComponent(\n            match.substr(key.length + 1).replace(/\\+/g, \" \")\n        );\n    });\n    if (matches.length === 1) {\n        return matches[0];\n    }\n    return matches;\n}\n\nfunction parse(queryString) {\n    if (!queryString) {\n        return {};\n    }\n    var parsed = {},\n        split = queryString.split(\"&\");\n    split.forEach(function(pairString) {\n        var pair = pairString.split(\"=\");\n        parsed[pair[0]] = decodeURI(pair[1]);\n    });\n    return parsed;\n}\n\n// ============================================================================\nexport default {\n    get: get,\n    parse: parse\n};\n"]}