{"version":3,"sources":["utils/query-string-parsing.js"],"names":["define","get","key","queryString","window","location","search","substr","keyRegex","matches","RegExp","undefined","length","parse","parsed","split","forEach","pairString","pair","decodeURI"],"mappings":"YAAAA,WAAW,WAAXA,QAAAC,GAAWC,EAAAC,GACXA,EAAAA,GAAAC,OAAAC,SAAAC,OAAAC,OAAA,EACA,IAAAC,GAAcN,GAAKC,QAAAA,EAAa,cAC5BA,EAAAA,EAAcA,MAAeC,EAC7B,IAAAK,GAAID,EAAeE,OAIlB,MADGD,GAAAA,EAAOE,OAAP,GACH,IAAAF,EAAAG,OACDH,EAAUA,GAENA,EAGP,QAAAI,GAAAV,GAGG,IAAKA,EAAe,QADxB,IAAAW,KAIIC,OAHKZ,GAAaY,MAAA,KAAEC,QAAO,SAAPC,GAAY,GAAAC,GAAAD,EAAAF,MAAA,IAChCD,GAAIA,EAAS,IAAbK,UAAAD,EAAA,MAEAH,EAIA,OACHd,IAAAA,EAKOY,MAAUA","file":"../../scripts/utils/query-string-parsing.js","sourcesContent":["define([], function(){\n// ============================================================================\nfunction get( key, queryString ){\n    queryString = queryString || window.location.search.substr( 1 );\n    var keyRegex = new RegExp( key + '=([^&#$]+)' ),\n        matches = queryString.match( keyRegex );\n    if( !matches || !matches.length ){\n        return undefined;\n    }\n    matches = matches.splice( 1 );\n    if( matches.length === 1 ){\n        return matches[0];\n    }\n    return matches;\n}\n\nfunction parse( queryString ){\n    if( !queryString ){ return {}; }\n    var parsed = {},\n        split = queryString.split( '&' );\n    split.forEach( function( pairString ){\n        var pair = pairString.split( '=' );\n        parsed[ pair[0] ] = decodeURI( pair[1] );\n    });\n    return parsed;\n}\n\n// ============================================================================\n    return {\n        get     : get,\n        parse   : parse,\n    };\n});\n"]}