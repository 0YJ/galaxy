{"version":3,"sources":["utils/query-string-parsing.js"],"names":["define","get","key","queryString","window","location","search","substr","keyRegex","RegExp","matches","match","length","splice","parse","parsed","split","forEach","pairString","pair","decodeURI"],"mappings":"AAAAA,UAAW,WAEX,QAASC,GAAKC,EAAKC,GACfA,EAAcA,GAAeC,OAAOC,SAASC,OAAOC,OAAQ,EAC5D,IAAIC,GAAW,GAAIC,QAAQP,EAAM,cAC7BQ,EAAUP,EAAYQ,MAAOH,EACjC,IAAKE,GAAYA,EAAQE,OAIzB,MADAF,GAAUA,EAAQG,OAAQ,GACH,IAAnBH,EAAQE,OACDF,EAAQ,GAEZA,EAGX,QAASI,GAAOX,GACZ,IAAKA,EAAe,QACpB,IAAIY,KAMJ,OALYZ,GAAYa,MAAO,KACzBC,QAAS,SAAUC,GACrB,GAAIC,GAAOD,EAAWF,MAAO,IAC7BD,GAAQI,EAAK,IAAOC,UAAWD,EAAK,MAEjCJ,EAIP,OACId,IAAUA,EACVa,MAAUA","file":"../../scripts/utils/query-string-parsing.js","sourcesContent":["define([], function(){\n// ============================================================================\nfunction get( key, queryString ){\n    queryString = queryString || window.location.search.substr( 1 );\n    var keyRegex = new RegExp( key + '=([^&#$]+)' ),\n        matches = queryString.match( keyRegex );\n    if( !matches || !matches.length ){\n        return undefined;\n    }\n    matches = matches.splice( 1 );\n    if( matches.length === 1 ){\n        return matches[0];\n    }\n    return matches;\n}\n\nfunction parse( queryString ){\n    if( !queryString ){ return {}; }\n    var parsed = {},\n        split = queryString.split( '&' );\n    split.forEach( function( pairString ){\n        var pair = pairString.split( '=' );\n        parsed[ pair[0] ] = decodeURI( pair[1] );\n    });\n    return parsed;\n}\n\n// ============================================================================\n    return {\n        get     : get,\n        parse   : parse,\n    };\n});\n"]}