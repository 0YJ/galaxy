{"version":3,"sources":["libs/jquery/jqtouch.js"],"names":["$","jQTouch","options","warn","message","undefined","window","console","jQTSettings","debug","addTapHandler","addAnimation","animation","selector","name","animations","addPageToHistory","hash","page","tapHandler","isSupported","fn","tapHandlers","push","history","clickHandler","$el","target","attr","id","e","is","touchSelectors","join","closest","isExternalLink","goingBack","toPage","unselect","doNavigation","fromPage","navigationEndHandler","trackScrollPositions","css","support","animationEvents","useAnimations","unbind","setTimeout","finalAnimationName","$body","removeClass","scrollTop","data","scroll","bufferTime","each","this","back","trigger","direction","reverseAnimation","opposites","hasClass","length","defaultAnimation","is3d","replace","pageYOffset","lastScroll","addClass","$currentPage","setHash","up","down","getOrientation","left","orientation","right","in","out","goBack","to","go","from","goTo","nextPage","i","max","showPageByHref","publicObj","hashChangeHandler","location","initHairExtensions","el","div","insertPages","nodes","targetPage","document","remove","innerHTML","index","$node","newPageCount","append","abs","orientationChangeHandler","scrollTo","Math","updateHash","transform3d","supportForTransform3d","start","WebKitAnimationEvent","touch","TouchEvent","navigator","userAgent","indexOf","useFastTouch","isFunction","extensions","addDefaultTapHandlers","extend","maxTapHandlers","j","extTapHandlers","backSelector","k","maxAnimations","submitSelector","touchSelector","anatomyLessons","useTouchScroll","ios5","fullScreenClass","standalone","statusBar","bind","startHash","touchStartHandler","method","href","ajax","success","defaults","settings","callback","url","firstPage","$referrer","cacheGetRequests","error","$form","getAnimation","submitHandler","preventDefault","eq","formSelector","serialize","head","getElementsByTagName","style","createElement","textContent","appendChild","body","result","parentNode","removeChild","REGEX_IOS_VERSION","selectors","agentString","exec","on","isDefaultPrevented","params","supported","flag","handler","len","submitParentForm","$head","prototype","tapBuffer","hairExtensions","addGlossToIcon","fixedViewport","fullScreen","icon","ready","icon4","preloadImages","starter","startupScreen","src","precomposed","initFXExtensions","makeActive","obj","addExtension","extension"],"mappings":"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","file":"../../../scripts/libs/jquery/jqtouch.js","sourcesContent":["(function() {\n\n    $.jQTouch = function(options) {\n        // Initialize internal jQT variables\n        var $body,\n            $head=$('head'),\n            history=[],\n            newPageCount=0,\n            jQTSettings={},\n            $currentPage='',\n            orientation='portrait',\n            touchSelectors=[],\n            publicObj={},\n            tapBuffer=100, // High click delay = ~350, quickest animation (slide) = 250\n            extensions=$.jQTouch.prototype.extensions,\n            extTapHandlers=$.jQTouch.prototype.tapHandlers,\n            tapHandlers=[],\n            animations=[],\n            hairExtensions='',\n            defaults = {\n                addGlossToIcon: true,\n                backSelector: '.back, .cancel, .goback',\n                cacheGetRequests: true,\n                debug: true,\n                defaultAnimation: 'slideleft',\n                fixedViewport: true,\n                formSelector: 'form',\n                fullScreen: true,\n                fullScreenClass: 'fullscreen',\n                icon: null,\n                icon4: null, // available in iOS 4.2 and later\n                preloadImages: false,\n                starter: $(document).ready,\n                startupScreen: null,\n                statusBar: 'default', // other options: black-translucent, black\n                submitSelector: '.submit',\n                touchSelector: 'a, .touch',\n                trackScrollPositions: true,\n                updateHash: true,\n                useAnimations: true,\n                useFastTouch: true,\n                useTouchScroll: true,\n                animations: [ // highest to lowest priority\n                    {name:'cubeleft', selector:'.cubeleft, .cube', is3d: true},\n                    {name:'cuberight', selector:'.cuberight', is3d: true},\n                    {name:'dissolve', selector:'.dissolve'},\n                    {name:'fade', selector:'.fade'},\n                    {name:'flipleft', selector:'.flipleft, .flip', is3d: true},\n                    {name:'flipright', selector:'.flipright', is3d: true},\n                    {name:'pop', selector:'.pop', is3d: true},\n                    {name:'swapleft', selector:'.swapleft, .swap', is3d: true},\n                    {name:'swapright', selector:'.swapright', is3d: true},\n                    {name:'slidedown', selector:'.slidedown'},\n                    {name:'slideright', selector:'.slideright'},\n                    {name:'slideup', selector:'.slideup'},\n                    {name:'slideleft', selector:'.slideleft, .slide, #jqt > * > ul li a'}\n                ]\n            }; // end defaults\n\n        function warn(message) {\n            if (window.console !== undefined && jQTSettings.debug === true) {\n                console.warn(message);\n            }\n        }\n\n        function addAnimation(animation) {\n            if (typeof(animation.selector) === 'string' && typeof(animation.name) === 'string') {\n                animations.push(animation);\n            }\n        }\n\n        function addTapHandler(tapHandler) {\n            if (typeof(tapHandler.name) === 'string' && typeof(tapHandler.isSupported) === 'function' && typeof(tapHandler.fn) === 'function') {\n                tapHandlers.push(tapHandler);\n            }\n        }\n\n        function addPageToHistory(page, animation) {\n            history.unshift({\n                page: page,\n                animation: animation,\n                hash: '#' + page.attr('id'),\n                id: page.attr('id')\n            });\n        }\n\n        // Unfortunately, we can not assume the 'tap' event\n        // is being used for links, forms, etc.\n        function clickHandler(e) {\n            // Figure out whether to prevent default\n            var $el = $(e.target);\n\n            // Find the nearest tappable ancestor\n            if (!$el.is(touchSelectors.join(', '))) {\n                $el = $(e.target).closest(touchSelectors.join(', '));\n            }\n\n            // Prevent default if we found an internal link\n            // (relative or absolute)\n            if ($el && $el.attr('href') && !$el.isExternalLink()) {\n                warn('Need to prevent default click behavior.');\n                e.preventDefault();\n            } else {\n                warn('No need to prevent default click behavior.');\n            }\n\n            // Trigger a tap event if touchstart is not on the job\n            if ($.support.touch) {\n                warn('Not converting click to a tap event because touch handler is on the job.');\n            } else {\n                warn('Converting click event to a tap event because touch handlers are not present or off.');\n                $(e.target).trigger('tap', e);\n            }\n        }\n\n        function doNavigation(fromPage, toPage, animation, goingBack) {\n\n            goingBack = goingBack ? goingBack : false;\n\n            // Error check for target page\n            if (toPage === undefined || toPage.length === 0) {\n                $.fn.unselect();\n                warn('Target element is missing.');\n                return false;\n            }\n\n            // Error check for fromPage === toPage\n            if (toPage.hasClass('current')) {\n                $.fn.unselect();\n                warn('You are already on the page you are trying to navigate to.');\n                return false;\n            }\n\n            // Collapse the keyboard\n            $(':focus').trigger('blur');\n\n            fromPage.trigger('pageAnimationStart', { direction: 'out', back: goingBack });\n            toPage.trigger('pageAnimationStart', { direction: 'in', back: goingBack });\n\n            if ($.support.animationEvents && animation && jQTSettings.useAnimations) {\n                // Fail over to 2d animation if need be\n                if (!$.support.transform3d && animation.is3d) {\n                    warn('Did not detect support for 3d animations, falling back to ' + jQTSettings.defaultAnimation + '.');\n                    animation.name = jQTSettings.defaultAnimation;\n                }\n\n                // Reverse animation if need be\n                var finalAnimationName = animation.name,\n                    is3d = animation.is3d ? 'animating3d' : '';\n\n                if (goingBack) {\n                    finalAnimationName = finalAnimationName.replace(/left|right|up|down|in|out/, reverseAnimation);\n                }\n\n                warn('finalAnimationName is ' + finalAnimationName + '.');\n\n                // Bind internal 'cleanup' callback\n                fromPage.bind('webkitAnimationEnd', navigationEndHandler);\n\n                // Trigger animations\n                $body.addClass('animating ' + is3d);\n\n                var lastScroll = window.pageYOffset;\n\n                // Position the incoming page so toolbar is at top of\n                // viewport regardless of scroll position on from page\n                if (jQTSettings.trackScrollPositions === true) {\n                    toPage.css('top', window.pageYOffset - (toPage.data('lastScroll') || 0));\n                }\n\n                toPage.addClass(finalAnimationName + ' in current');\n                fromPage.removeClass('current').addClass(finalAnimationName + ' out inmotion');\n\n                if (jQTSettings.trackScrollPositions === true) {\n                    fromPage.data('lastScroll', lastScroll);\n                    $('.scroll', fromPage).each(function() {\n                        $(this).data('lastScroll', this.scrollTop);\n                    });\n                }\n            } else {\n                toPage.addClass('current in');\n                fromPage.removeClass('current');\n                navigationEndHandler();\n            }\n\n            // Housekeeping\n            $currentPage = toPage;\n            if (goingBack) {\n                history.shift();\n            } else {\n                addPageToHistory($currentPage, animation);\n            }\n            setHash($currentPage.attr('id'));\n\n            // Private navigationEnd callback\n            function navigationEndHandler(event) {\n                var bufferTime = tapBuffer;\n\n                if ($.support.animationEvents && animation && jQTSettings.useAnimations) {\n                    fromPage.unbind('webkitAnimationEnd', navigationEndHandler);\n                    fromPage.removeClass(finalAnimationName + ' out inmotion');\n                    if (finalAnimationName) {\n                        toPage.removeClass(finalAnimationName);\n                    }\n                    $body.removeClass('animating animating3d');\n                    if (jQTSettings.trackScrollPositions === true) {\n                        toPage.css('top', -toPage.data('lastScroll'));\n\n                        // Have to make sure the scroll/style resets\n                        // are outside the flow of this function.\n                        setTimeout(function() {\n                            toPage.css('top', 0);\n                            window.scroll(0, toPage.data('lastScroll'));\n                            $('.scroll', toPage).each(function() {\n                                this.scrollTop = - $(this).data('lastScroll');\n                            });\n                        }, 0);\n                    }\n                } else {\n                    fromPage.removeClass(finalAnimationName + ' out inmotion');\n                    if (finalAnimationName) {\n                        toPage.removeClass(finalAnimationName);\n                    }\n                    bufferTime += 260;\n                }\n\n                // 'in' class is intentionally delayed,\n                // as it is our ghost click hack\n                setTimeout(function() {\n                    toPage.removeClass('in');\n                    window.scroll(0,0);\n                }, bufferTime);\n\n                fromPage.unselect();\n\n                // Trigger custom events\n                toPage.trigger('pageAnimationEnd', {\n                    direction:'in',\n                    animation: animation,\n                    back: goingBack\n                });\n                fromPage.trigger('pageAnimationEnd', {\n                    direction:'out',\n                    animation: animation,\n                    back: goingBack\n                });\n            }\n\n            return true;\n        }\n\n        function reverseAnimation(animation) {\n            var opposites={\n                'up' : 'down',\n                'down' : 'up',\n                'left' : 'right',\n                'right' : 'left',\n                'in' : 'out',\n                'out' : 'in'\n            };\n\n            return opposites[animation] || animation;\n        }\n\n        function getOrientation() {\n            return orientation;\n        }\n\n        function goBack() {\n            // Error checking\n            if (history.length < 1) {\n                warn('History is empty.');\n            }\n\n            if (history.length === 1) {\n                warn('You are on the first panel.');\n                window.history.go(-1);\n            }\n\n            var from = history[0],\n                to = history[1];\n\n            if (doNavigation(from.page, to.page, from.animation, true)) {\n                return publicObj;\n            } else {\n                warn('Could not go back.');\n                return false;\n            }\n        }\n\n        function goTo(toPage, animation) {\n            var fromPage = history[0].page;\n\n            if (typeof animation === 'string') {\n                for (var i=0, max=animations.length; i < max; i++) {\n                    if (animations[i].name === animation) {\n                        animation = animations[i];\n                        break;\n                    }\n                }\n            }\n\n            if (typeof toPage === 'string') {\n                var nextPage = $(toPage);\n\n                if (nextPage.length < 1) {\n                    showPageByHref(toPage, {\n                        animation: animation\n                    });\n                    return;\n                } else {\n                    toPage = nextPage;\n                }\n            }\n            if (doNavigation(fromPage, toPage, animation)) {\n                return publicObj;\n            } else {\n                warn('Could not animate pages.');\n                return false;\n            }\n        }\n\n        function hashChangeHandler(e) {\n            if (location.hash === history[0].hash) {\n                warn('We are on the right panel.');\n                return true;\n            } else if (location.hash === '') {\n                goBack();\n                return true;\n            } else if (history[1] && location.hash === history[1].hash) {\n                goBack();\n                return true;\n            } else {\n                // Lastly, just try going to the ID...\n                warn('Could not find ID in history, just forwarding to DOM element.');\n                goTo($(location.hash), jQTSettings.defaultAnimation);\n            }\n        }\n\n        function initHairExtensions(options) {\n            // Preload images\n            if (jQTSettings.preloadImages) {\n                for (var i = jQTSettings.preloadImages.length - 1; i >= 0; i--) {\n                    (new Image()).src = jQTSettings.preloadImages[i];\n                }\n            }\n\n            // Set appropriate icon\n            // (retina display available in iOS 4.2 and later.)\n            var precomposed = (jQTSettings.addGlossToIcon) ? '' : '-precomposed';\n            if (jQTSettings.icon) {\n                hairExtensions += '<link rel=\"apple-touch-icon' + precomposed + '\" href=\"' + jQTSettings.icon + '\" />';\n            }\n            if (jQTSettings.icon4) {\n                hairExtensions += '<link rel=\"apple-touch-icon' + precomposed + '\" sizes=\"114x114\" href=\"' + jQTSettings.icon4 + '\" />';\n            }\n            // Set startup screen\n            if (jQTSettings.startupScreen) {\n                hairExtensions += '<link rel=\"apple-touch-startup-image\" href=\"' + jQTSettings.startupScreen + '\" />';\n            }\n\n            // Set viewport\n            if (jQTSettings.fixedViewport) {\n                hairExtensions += '<meta name=\"viewport\" content=\"initial-scale=1.0, maximum-scale=1.0, user-scalable=0\"/>';\n            }\n\n            // Set full-screen\n            if (jQTSettings.fullScreen) {\n                hairExtensions += '<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />';\n                if (jQTSettings.statusBar) {\n                    hairExtensions += '<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"' + jQTSettings.statusBar + '\" />';\n                }\n            }\n\n            // Attach hair extensions\n            if (hairExtensions) {\n                $head.prepend(hairExtensions);\n            }\n        }\n\n        function initFXExtensions() {\n            // Define public jQuery functions\n            $.fn.isExternalLink = function() {\n                var $el = $(this);\n                return ($el.attr('target') === '_blank' || $el.attr('rel') === 'external' || $el.is('a[href^=\"http://maps.google.com\"], a[href^=\"mailto:\"], a[href^=\"tel:\"], a[href^=\"javascript:\"], a[href*=\"youtube.com/v\"], a[href*=\"youtube.com/watch\"]'));\n            };\n            $.fn.makeActive = function() {\n                return $(this).addClass('active');\n            };\n            $.fn.unselect = function(obj) {\n                if (obj) {\n                    obj.removeClass('active');\n                } else {\n                    $('.active').removeClass('active');\n                }\n            };\n        }\n\n        function getAnimation(el) {\n            var animation;\n\n            for (var i=0, max=animations.length; i < max; i++) {\n                if (el.is(animations[i].selector)) {\n                    animation = animations[i];\n                    break;\n                }\n            }\n\n            if (!animation) {\n                warn('Animation could not be found. Using ' + jQTSettings.defaultAnimation + '.');\n                animation = jQTSettings.defaultAnimation;\n            }\n            return animation;\n        }\n\n        function insertPages(nodes, animation) {\n\n            var targetPage = null;\n\n            // Call dom.createElement element directly\n            // instead of relying on $(nodes), to work around:\n            // https://github.com/madrobby/zepto/issues/312\n            var div = document.createElement('div');\n            div.innerHTML = nodes;\n\n            $(div).children().each(function(index, node) {\n                var $node = $(this);\n                if (!$node.attr('id')) {\n                    $node.attr('id', 'page-' + (++newPageCount));\n                }\n\n                // Remove any existing instance\n                $('#' + $node.attr('id')).remove();\n\n                $body.append($node);\n                $body.trigger('pageInserted', {page: $node});\n\n                if ($node.hasClass('current') || !targetPage) {\n                    targetPage = $node;\n                }\n            });\n            if (targetPage !== null) {\n                goTo(targetPage, animation);\n                return targetPage;\n            } else {\n                return false;\n            }\n        }\n\n        function orientationChangeHandler() {\n            scrollTo(0,0);\n            orientation = Math.abs(window.orientation) === 90 ? 'landscape' : 'portrait';\n            $body.removeClass('portrait landscape').addClass(orientation).trigger('turn', {orientation: orientation});\n        }\n\n        function setHash(hash) {\n            // Sanitize\n            if (jQTSettings.updateHash) {\n                location.hash = '#' + hash.replace(/^#/, '');\n            }\n        }\n\n        // Document ready stuff\n        function start() {\n            // Store some properties in a support object\n            if (!$.support) $.support = {};\n            $.support.animationEvents = (typeof window.WebKitAnimationEvent !== 'undefined');\n            $.support.touch = (typeof window.TouchEvent !== 'undefined') && (window.navigator.userAgent.indexOf('Mobile') > -1) && jQTSettings.useFastTouch;\n            $.support.transform3d = supportForTransform3d();\n            $.support.ios5 = supportIOS5();\n\n            if (!$.support.touch) {\n                warn('This device does not support touch interaction, or it has been deactivated by the developer. Some features might be unavailable.');\n            }\n            if (!$.support.transform3d) {\n                warn('This device does not support 3d animation. 2d animations will be used instead.');\n            }\n\n            // Add extensions\n            for (var i=0, max=extensions.length; i < max; i++) {\n                var fn = extensions[i];\n                if ($.isFunction(fn)) {\n                    $.extend(publicObj, fn(publicObj));\n                }\n            }\n\n            // Add extensions tapHandlers\n            for (var j=0, maxTapHandlers=extTapHandlers.length; j < maxTapHandlers; j++) {\n                addTapHandler(extTapHandlers[j]);\n            }\n            // Add default tapHandlers\n            addDefaultTapHandlers();\n\n            // Add animations\n            for (var k=0, maxAnimations=defaults.animations.length; k < maxAnimations; k++) {\n                var animation = defaults.animations[k];\n                if (jQTSettings[animation.name + 'Selector'] !== undefined) {\n                    animation.selector = jQTSettings[animation.name + 'Selector'];\n                }\n                addAnimation(animation);\n            }\n\n            // Create an array of stuff that needs touch event handling\n            touchSelectors.push(jQTSettings.touchSelector);\n            touchSelectors.push(jQTSettings.backSelector);\n            touchSelectors.push(jQTSettings.submitSelector);\n            $(touchSelectors.join(', ')).css('-webkit-touch-callout', 'none');\n\n            // Make sure we have a jqt element\n            $body = $('#jqt');\n            var anatomyLessons = [];\n\n            if ($body.length === 0) {\n                warn('Could not find an element with the id \"jqt\", so the body id has been set to \"jqt\". If you are having any problems, wrapping your panels in a div with the id \"jqt\" might help.');\n                $body = $(document.body).attr('id', 'jqt');\n            }\n\n            // Add some specific css if need be\n            if ($.support.transform3d) {\n                anatomyLessons.push('supports3d');\n            }\n\n            if (jQTSettings.useTouchScroll) {\n                if ($.support.ios5) {\n                    anatomyLessons.push('touchscroll');\n                } else {\n                    anatomyLessons.push('autoscroll');\n                }\n            }\n\n            if (jQTSettings.fullScreenClass && window.navigator.standalone === true) {\n                anatomyLessons.push(jQTSettings.fullScreenClass, jQTSettings.statusBar);\n            }\n\n            // Bind events\n            $body\n                .addClass(anatomyLessons.join(' '))\n                .bind('click', clickHandler)\n                .bind('orientationchange', orientationChangeHandler)\n                .bind('submit', submitHandler)\n                .bind('tap', tapHandler)\n                .bind($.support.touch ? 'touchstart' : 'mousedown', touchStartHandler)\n                .trigger('orientationchange');\n\n            $(window).bind('hashchange', hashChangeHandler);\n\n            var startHash = location.hash;\n\n            // Determine what the initial view should be\n            if ($('#jqt > .current').length === 0) {\n                $currentPage = $('#jqt > *:first-child').addClass('current');\n            } else {\n                $currentPage = $('#jqt > .current');\n            }\n\n            setHash($currentPage.attr('id'));\n            addPageToHistory($currentPage);\n\n            if ($(startHash).length === 1) {\n                goTo(startHash);\n            }\n        }\n\n        function showPageByHref(href, options) {\n\n            var defaults = {\n                data: null,\n                method: 'GET',\n                animation: null,\n                callback: null,\n                $referrer: null\n            };\n\n            var settings = $.extend({}, defaults, options);\n\n            if (href !== '#') {\n                $.ajax({\n                    url: href,\n                    data: settings.data,\n                    type: settings.method,\n                    success: function (data) {\n                        var firstPage = insertPages(data, settings.animation);\n                        if (firstPage) {\n                            if (settings.method === 'GET' && jQTSettings.cacheGetRequests === true && settings.$referrer) {\n                                settings.$referrer.attr('href', '#' + firstPage.attr('id'));\n                            }\n                            if (settings.callback) {\n                                settings.callback(true);\n                            }\n                        }\n                    },\n                    error: function (data) {\n                        if (settings.$referrer) {\n                            settings.$referrer.unselect();\n                        }\n                        if (settings.callback) {\n                            settings.callback(false);\n                        }\n                    }\n                });\n            } else if (settings.$referrer) {\n                settings.$referrer.unselect();\n            }\n        }\n\n        function submitHandler(e, callback) {\n\n            $(':focus').trigger('blur');\n\n            e.preventDefault();\n\n            var $form = (typeof(e)==='string') ? $(e).eq(0) : (e.target ? $(e.target) : $(e));\n\n            if ($form.length && $form.is(jQTSettings.formSelector) && $form.attr('action')) {\n                showPageByHref($form.attr('action'), {\n                    data: $form.serialize(),\n                    method: $form.attr('method') || 'POST',\n                    animation: getAnimation($form),\n                    callback: callback\n                });\n                return false;\n            }\n            return true;\n        }\n\n        function submitParentForm($el) {\n\n            var $form = $el.closest('form');\n            if ($form.length === 0) {\n                warn('No parent form found.');\n            } else {\n                warn('About to submit parent form.');\n                $form.trigger('submit');\n                return false;\n            }\n            return true;\n        }\n\n        function supportForTransform3d() {\n\n            var head, body, style, div, result;\n\n            head = document.getElementsByTagName('head')[0];\n            body = document.body;\n\n            style = document.createElement('style');\n            style.textContent = '@media (transform-3d),(-o-transform-3d),(-moz-transform-3d),(-webkit-transform-3d){#jqt-3dtest{height:3px}}';\n\n            div = document.createElement('div');\n            div.id = 'jqt-3dtest';\n\n            // Add to the page\n            head.appendChild(style);\n            body.appendChild(div);\n\n            // Check the result\n            result = div.offsetHeight === 3;\n\n            // Clean up\n            style.parentNode.removeChild(style);\n            div.parentNode.removeChild(div);\n\n            // Pass back result\n            warn('Support for 3d transforms: ' + result + '.');\n            return result;\n        }\n\n        function supportIOS5() {\n            var support = false;\n            var REGEX_IOS_VERSION = /OS (\\d+)(_\\d+)* like Mac OS X/i;\n\n            var agentString = window.navigator.userAgent;\n            if (REGEX_IOS_VERSION.test(agentString)) {\n                support = (REGEX_IOS_VERSION.exec(agentString)[1] >= 5);\n            }\n            return support;\n        }\n\n        function touchStartHandler(e) {\n\n            var $el = $(e.target),\n                selectors = touchSelectors.join(', ');\n\n            // Find the nearest tappable ancestor\n            if (!$el.is(selectors)) {\n                $el = $el.closest(selectors);\n            }\n\n            // Make sure we have a tappable element\n            if ($el.length && $el.attr('href')) {\n                $el.addClass('active');\n            }\n\n            // Remove our active class if we move\n            $el.on($.support.touch ? 'touchmove' : 'mousemove', function() {\n                $el.removeClass('active');\n            });\n\n            $el.on('touchend', function() {\n                $el.unbind('touchmove mousemove');\n            });\n        }\n\n        function tapHandler(e) {\n\n            if (e.isDefaultPrevented()) {\n                return true;\n            }\n\n            // Grab the target element\n            var $el = $(e.target);\n\n            // Find the nearest tappable ancestor\n            if (!$el.is(touchSelectors.join(', '))) {\n                $el = $el.closest(touchSelectors.join(', '));\n            }\n\n            // Make sure we have a tappable element\n            if (!$el.length || !$el.attr('href')) {\n                warn('Could not find a link related to tapped element.');\n                return true;\n            }\n\n            // Init some vars\n            var target = $el.attr('target'),\n                hash = $el.prop('hash'),\n                href = $el.attr('href');\n\n            var params = {\n                e: e,\n                $el: $el,\n                target: target,\n                hash: hash,\n                href: href,\n                jQTSettings: jQTSettings\n            };\n\n            // Loop thru all handlers\n            for (var i=0, len=tapHandlers.length; i<len; i++) {\n                var handler = tapHandlers[i];\n                var supported = handler.isSupported(e, params);\n                if (supported) {\n                    var flag = handler.fn(e, params);\n                    return flag;\n                }\n            }\n        }\n\n        function addDefaultTapHandlers() {\n            addTapHandler({\n                name: 'external-link',\n                isSupported: function(e, params) {\n                    return params.$el.isExternalLink();\n                },\n                fn: function(e, params) {\n                    params.$el.unselect();\n                    return true;\n                }\n            });\n            addTapHandler({\n                name: 'back-selector',\n                isSupported: function(e, params) {\n                    return params.$el.is(params.jQTSettings.backSelector);\n                },\n                fn: function(e, params) {\n                    // User clicked or tapped a back button\n                    goBack(params.hash);\n                }\n            });\n            addTapHandler({\n                name: 'submit-selector',\n                isSupported: function(e, params) {\n                    return params.$el.is(params.jQTSettings.submitSelector);\n                },\n                fn: function(e, params) {\n                    // User clicked or tapped a submit element\n                    submitParentForm(params.$el);\n                }\n            });\n            addTapHandler({\n                name: 'webapp',\n                isSupported: function(e, params) {\n                    return params.target === '_webapp';\n                },\n                fn: function(e, params) {\n                    // User clicked or tapped an internal link, fullscreen mode\n                    window.location = params.href;\n                    return false;\n                }\n            });\n            addTapHandler({\n                name: 'no-op',\n                isSupported: function(e, params) {\n                    return params.href === '#';\n                },\n                fn: function(e, params) {\n                    // Allow tap on item with no href\n                    params.$el.unselect();\n                    return true;\n                }\n            });\n            addTapHandler({\n                name: 'standard',\n                isSupported: function(e, params) {\n                    return params.hash && params.hash !== '#';\n                },\n                fn: function(e, params) {\n                    var animation = getAnimation(params.$el);\n                    // Internal href\n                    params.$el.addClass('active');\n                    goTo(\n                        $(params.hash).data('referrer', params.$el),\n                        animation,\n                        params.$el.hasClass('reverse')\n                    );\n                    return false;\n                }\n            });\n            addTapHandler({\n                name: 'external',\n                isSupported: function(e, params) {\n                    return true;\n                },\n                fn: function(e, params) {\n                    var animation = getAnimation(params.$el);\n\n                    // External href\n                    params.$el.addClass('loading active');\n                    showPageByHref(params.$el.attr('href'), {\n                        animation: animation,\n                        callback: function() {\n                            params.$el.removeClass('loading');\n                            setTimeout($.fn.unselect, 250, params.$el);\n                        },\n                        $referrer: params.$el\n                    });\n                    return false;\n                }\n            });\n        }\n\n        // Get the party started\n        jQTSettings = $.extend({}, defaults, options);\n\n        initHairExtensions(options);\n\n        initFXExtensions();\n\n        // Expose public methods and properties\n        publicObj = {\n            addAnimation: addAnimation,\n            animations: animations,\n            getOrientation: getOrientation,\n            goBack: goBack,\n            insertPages: insertPages,\n            goTo: goTo,\n            history: history,\n            settings: jQTSettings,\n            submitForm: submitHandler\n        };\n        \n        // must be called publicObj assignement to prevent timing problem with extension loading. \n        jQTSettings.starter(start);\n\n        return publicObj;\n    };\n\n    $.jQTouch.prototype.extensions = [];\n    $.jQTouch.prototype.tapHandlers = [];\n\n    // Extensions directly manipulate the jQTouch object,\n    // before it's initialized\n    $.jQTouch.addExtension = function(extension) {\n        $.jQTouch.prototype.extensions.push(extension);\n    };\n\n    // Experimental tap handlers that can bypass\n    // default jQTouch tap handling\n    $.jQTouch.addTapHandler = function(extension) {\n        $.jQTouch.prototype.tapHandlers.push(extension);\n    };\n\n})(); // Double closure, ALL THE WAY ACROSS THE SKY\n"]}