{"version":3,"sources":["libs/jquery/jstorage.js"],"names":["_reloadData","data","_backend","_storage_elm","load","getAttribute","E5","_observer_update","E6","_storage_service","jStorage","_load_storage","_handleTTL","_handlePubSub","_setupObserver","window","addEventListener","_storageObserver","document","attachEvent","setInterval","updateTime","clearTimeout","_observer_timeout","setTimeout","jStorage_update","_checkUpdatedKeys","newCrc32List","oldCrc32List","JSON","parse","stringify","_storage","__jstorage_meta","CRC32","key","updated","removed","hasOwnProperty","push","String","substr","_fireObservers","keys","action","concat","_observers","i","len","length","j","jlen","_publishChange","Date","toString","E8","setAttribute","save","_storage_size","_save","_dropOldEvents","E7","_checkKey","TypeError","curtime","TTL","nextExpire","Infinity","changed","deleted","_ttl_timeout","PubSub","pubelm","_pubsubCurrent","_pubsub_last","_fireSubscribers","channel","payload","_pubsub_observers","retire","splice","_publish","unshift","murmurhash2_32_gc","str","seed","k","l","h","charCodeAt","$","jQuery","decode","prototype","evalJSON","parseJSON","Object","toJSON","encode","Error","_XMLService","isXML","elm","documentElement","ownerDocument","nodeName","xmlNode","this","XMLSerializer","serializeToString","E1","xml","E2","xmlString","resultXML","dom_parser","DOMParser","parseFromString","ActiveXObject","_xmlString","xml_doc","async","loadXML","call","version","set","value","options","deleteKey","_is_xml","setTTL","get","def","ttl","Number","getTTL","flush","storageObj","F","index","storageSize","currentBackend","storageAvailable","listenKeyChange","callback","stopListening","subscribe","publish","reInit","localStorageReallyWorks","localStorage","setItem","removeItem","BogusQuotaExceededErrorOnIos5","E3","globalStorage","location","hostname","E4","createElement","addBehavior","style","behavior","getElementsByTagName","appendChild","E","event","persisted"],"mappings":"CA0BC,WAiOG,QAASA,KACL,GAAIC,GAAO,IAEX,IAAe,oBAAZC,EAA+B,CAC9BC,EAAaC,KAAK,WAElB,KACIH,EAAOE,EAAaE,aAAa,YACpC,MAAMC,IAEP,IACIC,EAAmBJ,EAAaE,aAAa,mBAChD,MAAMG,IAEPC,EAAiBC,SAAWT,EAGhCU,IAGAC,IAEAC,IAMJ,QAASC,KACU,gBAAZZ,GAA0C,iBAAZA,EAC1B,oBAAsBa,QACrBA,OAAOC,iBAAiB,UAAWC,GAAkB,GAErDC,SAASC,YAAY,YAAaF,GAErB,oBAAZf,GACLkB,YAAYH,EAAkB,KAQtC,QAASA,KACL,GAAII,EAEJC,cAAaC,GACbA,EAAoBC,WAAW,WAE3B,GAAe,gBAAZtB,GAA0C,iBAAZA,EAC7BmB,EAAaZ,EAAiBgB,oBAC5B,IAAe,oBAAZvB,EAA+B,CACpCC,EAAaC,KAAK,WAClB,KACIiB,EAAalB,EAAaE,aAAa,mBAC1C,MAAMC,KAGRe,GAAcA,GAAcd,IAC3BA,EAAmBc,EACnBK,MAGL,IAMP,QAASA,KACL,GACIC,GADAC,EAAeC,EAAKC,MAAMD,EAAKE,UAAUC,EAASC,gBAAgBC,OAGtElC,KACA2B,EAAeE,EAAKC,MAAMD,EAAKE,UAAUC,EAASC,gBAAgBC,OAElE,IAAIC,GACAC,KACAC,IAEJ,KAAIF,IAAOP,GACP,GAAGA,EAAaU,eAAeH,GAAK,CAChC,IAAIR,EAAaQ,GAAK,CAClBE,EAAQE,KAAKJ,EACb,UAEDP,EAAaO,IAAQR,EAAaQ,IAAiD,MAAzCK,OAAOZ,EAAaO,IAAMM,OAAO,EAAE,IAC5EL,EAAQG,KAAKJ,GAKzB,IAAIA,IAAOR,GACJA,EAAaW,eAAeH,KACvBP,EAAaO,IACbC,EAAQG,KAAKJ,GAKzBO,GAAeN,EAAS,WACxBM,EAAeL,EAAS,WAS5B,QAASK,GAAeC,EAAMC,GAE1B,GADAD,KAAUE,OAAOF,OACJ,WAAVC,EAAoB,CACnBD,IACA,KAAI,GAAIR,KAAOW,GACRA,EAAWR,eAAeH,IACzBQ,EAAKJ,KAAKJ,EAGlBS,GAAS,UAEb,IAAI,GAAIG,GAAE,EAAGC,EAAML,EAAKM,OAAQF,EAAEC,EAAKD,IAAI,CACvC,GAAGD,EAAWH,EAAKI,IACf,IAAI,GAAIG,GAAE,EAAGC,EAAOL,EAAWH,EAAKI,IAAIE,OAAQC,EAAEC,EAAMD,IACpDJ,EAAWH,EAAKI,IAAIG,GAAGP,EAAKI,GAAIH,EAGxC,IAAGE,EAAW,KACV,IAAI,GAAII,GAAE,EAAGC,EAAOL,EAAW,KAAKG,OAAQC,EAAEC,EAAMD,IAChDJ,EAAW,KAAKI,GAAGP,EAAKI,GAAIH,IAS5C,QAASQ,KACL,GAAI/B,KAAe,GAAIgC,OAAQC,UAE/B,IAAe,gBAAZpD,GAA0C,iBAAZA,EAC7B,IACIO,EAAiBgB,gBAAkBJ,EACrC,MAAOkC,GAELrD,GAAW,MAEE,oBAAZA,IACLC,EAAaqD,aAAa,kBAAmBnC,GAC7ClB,EAAasD,KAAK,YAGtBxC,KAMJ,QAASN,KAEL,GAAGF,EAAiBC,SAChB,IACIsB,EAAWH,EAAKC,MAAMU,OAAO/B,EAAiBC,WACjD,MAAMF,GAAIC,EAAiBC,SAAW,SAEvCD,GAAiBC,SAAW,IAEhCgD,GAAgBjD,EAAiBC,SAAS8B,OAAO/B,EAAiBC,UAAUuC,OAAO,EAE/EjB,EAASC,kBACTD,EAASC,oBAETD,EAASC,gBAAgBC,QACzBF,EAASC,gBAAgBC,UAOjC,QAASyB,KACLC,GACA,KACInD,EAAiBC,SAAWmB,EAAKE,UAAUC,GAExC7B,IACCA,EAAaqD,aAAa,WAAW/C,EAAiBC,UACtDP,EAAasD,KAAK,aAEtBC,EAAgBjD,EAAiBC,SAAS8B,OAAO/B,EAAiBC,UAAUuC,OAAO,EACtF,MAAMY,KAQX,QAASC,GAAU3B,GACf,IAAIA,GAAsB,gBAAPA,IAAiC,gBAAPA,GACzC,KAAM,IAAI4B,WAAU,qCAExB,IAAU,mBAAP5B,EACC,KAAM,IAAI4B,WAAU,oBAExB,QAAO,EAMX,QAASnD,KACL,GAAIoD,GAASjB,EAAGkB,EAAK/B,EAAOgC,EAAaC,EAAAA,EAAUC,GAAU,EAAOC,IAIpE,IAFA/C,aAAagD,GAETtC,EAASC,iBAA0D,gBAAhCD,GAASC,gBAAgBgC,IAAhE,CAKAD,GAAW,GAAIX,MACfY,EAAMjC,EAASC,gBAAgBgC,IAE/B/B,EAAQF,EAASC,gBAAgBC,KACjC,KAAIa,IAAKkB,GACFA,EAAI3B,eAAeS,KACfkB,EAAIlB,IAAMiB,SACFC,GAAIlB,SACJb,GAAMa,SACNf,GAASe,GAChBqB,GAAU,EACVC,EAAQ9B,KAAKQ,IACRkB,EAAIlB,GAAKmB,IACdA,EAAaD,EAAIlB,IAM1BmB,IAAcC,EAAAA,IACbG,EAAe9C,WAAWZ,EAAYsD,EAAaF,IAIpDI,IACCT,IACAP,IACAV,EAAe2B,EAAS,aAOhC,QAASxD,KACL,GAAIkC,EACJ,IAAIf,EAASC,gBAAgBsC,OAA7B,CAGA,GAAIC,GACAC,EAAiBC,CAErB,KAAI3B,EAAMf,EAASC,gBAAgBsC,OAAOtB,OAAO,EAAGF,GAAG,EAAGA,IACtDyB,EAASxC,EAASC,gBAAgBsC,OAAOxB,GACtCyB,EAAO,GAAKE,IACXD,EAAiBD,EAAO,GACxBG,EAAiBH,EAAO,GAAIA,EAAO,IAI3CE,GAAeD,GASnB,QAASE,GAAiBC,EAASC,GAC/B,GAAGC,EAAkBF,GACjB,IAAI,GAAI7B,GAAE,EAAGC,EAAM8B,EAAkBF,GAAS3B,OAAQF,EAAEC,EAAKD,IAEzD+B,EAAkBF,GAAS7B,GAAG6B,EAAS/C,EAAKC,MAAMD,EAAKE,UAAU8C,KAQ7E,QAASjB,KACL,GAAI5B,EAASC,gBAAgBsC,OAA7B,CAMA,IAAI,GAFAQ,IAAU,GAAI1B,MAAS,IAEnBN,EAAE,EAAGC,EAAMhB,EAASC,gBAAgBsC,OAAOtB,OAAQF,EAAEC,EAAKD,IAC9D,GAAGf,EAASC,gBAAgBsC,OAAOxB,GAAG,IAAMgC,EAAO,CAE/C/C,EAASC,gBAAgBsC,OAAOS,OAAOjC,EAAGf,EAASC,gBAAgBsC,OAAOtB,OAASF,EACnF,OAIJf,EAASC,gBAAgBsC,OAAOtB,cACzBjB,GAASC,gBAAgBsC,QAWxC,QAASU,GAASL,EAASC,GACnB7C,EAASC,kBACTD,EAASC,oBAETD,EAASC,gBAAgBsC,SACzBvC,EAASC,gBAAgBsC,WAG7BvC,EAASC,gBAAgBsC,OAAOW,UAAU,GAAI7B,MAAMuB,EAASC,IAE7DlB,IACAP,IAmBJ,QAAS+B,GAAkBC,EAAKC,GAO5B,IANA,GAIIC,GAHAC,EAAIH,EAAInC,OACRuC,EAAIH,EAAOE,EACXxC,EAAI,EAGDwC,GAAK,GACRD,EAC0B,IAApBF,EAAIK,WAAW1C,IACO,IAAtBqC,EAAIK,aAAa1C,KAAc,GACT,IAAtBqC,EAAIK,aAAa1C,KAAc,IACT,IAAtBqC,EAAIK,aAAa1C,KAAc,GAErCuC,EAAqB,YAAV,MAAJA,KAA4C,YAAZA,IAAM,IAAoB,QAAW,IAC5EA,GAAKA,IAAM,GACXA,EAAqB,YAAV,MAAJA,KAA4C,YAAZA,IAAM,IAAoB,QAAW,IAE5EE,EAAqB,YAAV,MAAJA,KAA4C,YAAZA,IAAM,IAAoB,QAAW,IAAOF,EAEnFC,GAAK,IACHxC,CAGN,QAAQwC,GACJ,IAAK,GAAGC,IAA8B,IAAxBJ,EAAIK,WAAW1C,EAAI,KAAc,EAC/C,KAAK,GAAGyC,IAA8B,IAAxBJ,EAAIK,WAAW1C,EAAI,KAAc,CAC/C,KAAK,GAAGyC,GAA0B,IAApBJ,EAAIK,WAAW1C,GACzByC,EAAqB,YAAV,MAAJA,KAA4C,YAAZA,IAAM,IAAoB,QAAW,IAOpF,MAJAA,IAAKA,IAAM,GACXA,EAAqB,YAAV,MAAJA,KAA4C,YAAZA,IAAM,IAAoB,QAAW,KAC5EA,GAAKA,IAAM,MAEE,EAlmBjB,GAKIE,GAAI3E,OAAO4E,QAAU5E,OAAO2E,IAAM3E,OAAO2E,MAGzC7D,GACIC,MACIf,OAAOc,OAASd,OAAOc,KAAKC,OAASf,OAAOc,KAAK+D,SACjDpD,OAAOqD,UAAUC,UAAY,SAASV,GAAK,MAAO5C,QAAO4C,GAAKU,aAC9DJ,EAAEK,WACFL,EAAEI,SACN/D,UACIiE,OAAOC,QACPlF,OAAOc,OAASd,OAAOc,KAAKE,WAAahB,OAAOc,KAAKqE,SACrDR,EAAEO,OAId,MAAK,SAAWpE,IAAW,aAAeA,IACtC,KAAM,IAAIsE,OAAM,kGAGpB,IAgCI7B,GA9BAtC,GAAYC,iBAAiBC,WAG7BzB,GAAoBC,SAAS,MAG7BP,EAAe,KAGfuD,EAAgB,EAGhBxD,GAAW,EAGX4C,KAGAvB,GAAoB,EAGpBhB,EAAmB,EAGnBuE,KAGAJ,GAAgB,GAAIrB,MAapB+C,GAMIC,MAAO,SAASC,GACZ,GAAIC,IAAmBD,EAAMA,EAAIE,eAAiBF,EAAM,GAAGC,eAC3D,SAAOA,GAA+C,SAA7BA,EAAgBE,UAO7CP,OAAQ,SAASQ,GACb,IAAIC,KAAKN,MAAMK,GACX,OAAO,CAEX,KACI,OAAO,GAAIE,gBAAgBC,kBAAkBH,GAChD,MAAMI,GACH,IACI,MAAOJ,GAAQK,IAClB,MAAMC,KAEX,OAAO,GAOXpB,OAAQ,SAASqB,GACb,GAOAC,GAPIC,EAAc,aAAepG,UAAU,GAAKqG,YAAaC,iBACpDtG,OAAOuG,eAAiB,SAASC,GACtC,GAAIC,GAAU,GAAIF,eAAc,mBAGhC,OAFAE,GAAQC,MAAQ,QAChBD,EAAQE,QAAQH,GACTC,EAGX,SAAIL,IAGJD,EAAYC,EAAWQ,KAAK,aAAe5G,SAAU,GAAKqG,YAAgBrG,OAAQkG,EAAW,cACtFN,KAAKN,MAAMa,IAAWA,IAsfzCxB,GAAEhF,UAEEkH,QAvmBmB,QAonBnBC,IAAK,SAAS1F,EAAK2F,EAAOC,GAMtB,GALAjE,EAAU3B,GAEV4F,EAAUA,UAGS,KAATD,EAEN,MADAnB,MAAKqB,UAAU7F,GACR2F,CAGX,IAAG1B,EAAYC,MAAMyB,GACjBA,GAASG,SAAQ,EAAKlB,IAAIX,EAAYF,OAAO4B,QAC3C,CAAA,GAAmB,kBAATA,GACZ,MACKA,IAAyB,gBAATA,KAErBA,EAAQjG,EAAKC,MAAMD,EAAKE,UAAU+F,KAUtC,MAPA9F,GAASG,GAAO2F,EAEhB9F,EAASC,gBAAgBC,MAAMC,GAAO,KAAOgD,EAAkBtD,EAAKE,UAAU+F,GAAQ,YAEtFnB,KAAKuB,OAAO/F,EAAK4F,EAAQ9D,KAAO,GAEhCvB,EAAeP,EAAK,WACb2F,GAUXK,IAAK,SAAShG,EAAKiG,GAEf,MADAtE,GAAU3B,GACPA,IAAOH,GACHA,EAASG,IAAgC,gBAAjBH,GAASG,IAAoBH,EAASG,GAAK8F,QAC3D7B,EAAYR,OAAO5D,EAASG,GAAK4E,KAEjC/E,EAASG,OAGF,KAAT,EAAuB,KAAOiG,GAS/CJ,UAAW,SAAS7F,GAEhB,MADA2B,GAAU3B,GACPA,IAAOH,WACCA,GAASG,GAE0B,gBAAhCH,GAASC,gBAAgBgC,KACjC9B,IAAOH,GAASC,gBAAgBgC,WACvBjC,GAASC,gBAAgBgC,IAAI9B,SAGjCH,GAASC,gBAAgBC,MAAMC,GAEtCwB,IACAP,IACAV,EAAeP,EAAK,YACb,IAYf+F,OAAQ,SAAS/F,EAAKkG,GAClB,GAAIrE,IAAW,GAAIX,KAGnB,OAFAS,GAAU3B,GACVkG,EAAMC,OAAOD,IAAQ,EAClBlG,IAAOH,KAEFA,EAASC,gBAAgBgC,MACzBjC,EAASC,gBAAgBgC,QAI1BoE,EAAI,EACHrG,EAASC,gBAAgBgC,IAAI9B,GAAO6B,EAAUqE,QAEvCrG,GAASC,gBAAgBgC,IAAI9B,GAGxCwB,IAEA/C,IAEAwC,KACO,IAWfmF,OAAQ,SAASpG,GACb,GAAI6B,IAAW,GAAIX,KAEnB,OADAS,GAAU3B,GACPA,IAAOH,IAAYA,EAASC,gBAAgBgC,KAAOjC,EAASC,gBAAgBgC,IAAI9B,GACzEH,EAASC,gBAAgBgC,IAAI9B,GAAO6B,GAC5B,EAEX,GAQXwE,MAAO,WAKH,MAJAxG,IAAYC,iBAAiBC,WAC7ByB,IACAP,IACAV,EAAe,KAAM,YACd,GAQX+F,WAAY,WACR,QAASC,MAET,MADAA,GAAE7C,UAAY7D,EACP,GAAI0G,IASfC,MAAO,WACH,GAAgB5F,GAAZ4F,IACJ,KAAI5F,IAAKf,GACFA,EAASM,eAAeS,IAAW,mBAALA,GAC7B4F,EAAMpG,KAAKQ,EAGnB,OAAO4F,IASXC,YAAa,WACT,MAAOlF,IAQXmF,eAAgB,WACZ,MAAO3I,IAQX4I,iBAAkB,WACd,QAAS5I,GASb6I,gBAAiB,SAAS5G,EAAK6G,GAC3BlF,EAAU3B,GACNW,EAAWX,KACXW,EAAWX,OAEfW,EAAWX,GAAKI,KAAKyG,IASzBC,cAAe,SAAS9G,EAAK6G,GAGzB,GAFAlF,EAAU3B,GAENW,EAAWX,GAAf,CAIA,IAAI6G,EAEA,kBADOlG,GAAWX,EAItB,KAAI,GAAIY,GAAID,EAAWX,GAAKc,OAAS,EAAGF,GAAG,EAAGA,IACvCD,EAAWX,GAAKY,IAAMiG,GACrBlG,EAAWX,GAAK6C,OAAOjC,EAAE,KAWrCmG,UAAW,SAAStE,EAASoE,GAEzB,KADApE,GAAWA,GAAW,IAAItB,YAEtB,KAAM,IAAIS,WAAU,sBAEpBe,GAAkBF,KAClBE,EAAkBF,OAEtBE,EAAkBF,GAASrC,KAAKyG,IASpCG,QAAS,SAASvE,EAASC,GAEvB,KADAD,GAAWA,GAAW,IAAItB,YAEtB,KAAM,IAAIS,WAAU,sBAGxBkB,GAASL,EAASC,IAMtBuE,OAAQ,WACJpJ,MAtwBR,WAEI,GAAIqJ,IAA0B,CAC9B,IAAG,gBAAkBtI,QACjB,IACIA,OAAOuI,aAAaC,QAAQ,WAAY,UACxCF,GAA0B,EAC1BtI,OAAOuI,aAAaE,WAAW,YACjC,MAAMC,IAMZ,GAAGJ,EACC,IACOtI,OAAOuI,eACN7I,EAAmBM,OAAOuI,aAC1BpJ,EAAW,eACXK,EAAmBE,EAAiBgB,iBAE1C,MAAMiI,QAGP,IAAG,iBAAmB3I,QACvB,IACOA,OAAO4I,gBAEpBlJ,EAD8B,aAA5BM,OAAO6I,SAASC,SACC9I,OAAO4I,cAAc,yBAGrB5I,OAAO4I,cAAc5I,OAAO6I,SAASC,UAE1C3J,EAAW,gBACXK,EAAmBE,EAAiBgB,iBAE1C,MAAMqI,QAGP,CAED,GADA3J,EAAee,SAAS6I,cAAc,SACnC5J,EAAa6J,YA8BZ,YADA7J,EAAe,KA1BfA,GAAa8J,MAAMC,SAAW,yBAG9BhJ,SAASiJ,qBAAqB,QAAQ,GAAGC,YAAYjK,EAErD,KACIA,EAAaC,KAAK,YACrB,MAAMiK,GAEHlK,EAAaqD,aAAa,WAAY,MACtCrD,EAAasD,KAAK,YAClBtD,EAAaC,KAAK,YAGtB,GAAIH,GAAO,IACX,KACIA,EAAOE,EAAaE,aAAa,YACpC,MAAMC,IAEP,IACIC,EAAmBJ,EAAaE,aAAa,mBAChD,MAAMG,IAEPC,EAAiBC,SAAWT,EAC5BC,EAAW,mBAQnBS,IAGAC,IAGAE,IAGAD,IAGG,oBAAsBE,SACrBA,OAAOC,iBAAiB,WAAY,SAASsJ,GACtCA,EAAMC,WACLtJ,MAEL","file":"../../../scripts/libs/jquery/jstorage.js","sourcesContent":["/*\n * ----------------------------- JSTORAGE -------------------------------------\n * Simple local storage wrapper to save data on the browser side, supporting\n * all major browsers - IE6+, Firefox2+, Safari4+, Chrome4+ and Opera 10.5+\n *\n * Copyright (c) 2010 - 2012 Andris Reinman, andris.reinman@gmail.com\n * Project homepage: www.jstorage.info\n *\n * Licensed under MIT-style license:\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n (function(){\n    var\n        /* jStorage version */\n        JSTORAGE_VERSION = \"0.4.4\",\n\n        /* detect a dollar object or create one if not found */\n        $ = window.jQuery || window.$ || (window.$ = {}),\n\n        /* check for a JSON handling support */\n        JSON = {\n            parse:\n                window.JSON && (window.JSON.parse || window.JSON.decode) ||\n                String.prototype.evalJSON && function(str){return String(str).evalJSON();} ||\n                $.parseJSON ||\n                $.evalJSON,\n            stringify:\n                Object.toJSON ||\n                window.JSON && (window.JSON.stringify || window.JSON.encode) ||\n                $.toJSON\n        };\n\n    // Break if no JSON support was found\n    if(!('parse' in JSON) || !('stringify' in JSON)){\n        throw new Error(\"No JSON support found, include //cdnjs.cloudflare.com/ajax/libs/json2/20110223/json2.js to page\");\n    }\n\n    var\n        /* This is the object, that holds the cached values */\n        _storage = {__jstorage_meta:{CRC32:{}}},\n\n        /* Actual browser storage (localStorage or globalStorage['domain']) */\n        _storage_service = {jStorage:\"{}\"},\n\n        /* DOM element for older IE versions, holds userData behavior */\n        _storage_elm = null,\n\n        /* How much space does the storage take */\n        _storage_size = 0,\n\n        /* which backend is currently used */\n        _backend = false,\n\n        /* onchange observers */\n        _observers = {},\n\n        /* timeout to wait after onchange event */\n        _observer_timeout = false,\n\n        /* last update time */\n        _observer_update = 0,\n\n        /* pubsub observers */\n        _pubsub_observers = {},\n\n        /* skip published items older than current timestamp */\n        _pubsub_last = +new Date(),\n\n        /* Next check for TTL */\n        _ttl_timeout,\n\n        /**\n         * XML encoding and decoding as XML nodes can't be JSON'ized\n         * XML nodes are encoded and decoded if the node is the value to be saved\n         * but not if it's as a property of another object\n         * Eg. -\n         *   $.jStorage.set(\"key\", xmlNode);        // IS OK\n         *   $.jStorage.set(\"key\", {xml: xmlNode}); // NOT OK\n         */\n        _XMLService = {\n\n            /**\n             * Validates a XML node to be XML\n             * based on jQuery.isXML function\n             */\n            isXML: function(elm){\n                var documentElement = (elm ? elm.ownerDocument || elm : 0).documentElement;\n                return documentElement ? documentElement.nodeName !== \"HTML\" : false;\n            },\n\n            /**\n             * Encodes a XML node to string\n             * based on http://www.mercurytide.co.uk/news/article/issues-when-working-ajax/\n             */\n            encode: function(xmlNode) {\n                if(!this.isXML(xmlNode)){\n                    return false;\n                }\n                try{ // Mozilla, Webkit, Opera\n                    return new XMLSerializer().serializeToString(xmlNode);\n                }catch(E1) {\n                    try {  // IE\n                        return xmlNode.xml;\n                    }catch(E2){}\n                }\n                return false;\n            },\n\n            /**\n             * Decodes a XML node from string\n             * loosely based on http://outwestmedia.com/jquery-plugins/xmldom/\n             */\n            decode: function(xmlString){\n                var dom_parser = (\"DOMParser\" in window && (new DOMParser()).parseFromString) ||\n                        (window.ActiveXObject && function(_xmlString) {\n                    var xml_doc = new ActiveXObject('Microsoft.XMLDOM');\n                    xml_doc.async = 'false';\n                    xml_doc.loadXML(_xmlString);\n                    return xml_doc;\n                }),\n                resultXML;\n                if(!dom_parser){\n                    return false;\n                }\n                resultXML = dom_parser.call(\"DOMParser\" in window && (new DOMParser()) || window, xmlString, 'text/xml');\n                return this.isXML(resultXML)?resultXML:false;\n            }\n        };\n\n\n    ////////////////////////// PRIVATE METHODS ////////////////////////\n\n    /**\n     * Initialization function. Detects if the browser supports DOM Storage\n     * or userData behavior and behaves accordingly.\n     */\n    function _init(){\n        /* Check if browser supports localStorage */\n        var localStorageReallyWorks = false;\n        if(\"localStorage\" in window){\n            try {\n                window.localStorage.setItem('_tmptest', 'tmpval');\n                localStorageReallyWorks = true;\n                window.localStorage.removeItem('_tmptest');\n            } catch(BogusQuotaExceededErrorOnIos5) {\n                // Thanks be to iOS5 Private Browsing mode which throws\n                // QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n            }\n        }\n\n        if(localStorageReallyWorks){\n            try {\n                if(window.localStorage) {\n                    _storage_service = window.localStorage;\n                    _backend = \"localStorage\";\n                    _observer_update = _storage_service.jStorage_update;\n                }\n            } catch(E3) {/* Firefox fails when touching localStorage and cookies are disabled */}\n        }\n        /* Check if browser supports globalStorage */\n        else if(\"globalStorage\" in window){\n            try {\n                if(window.globalStorage) {\n\t\t\t\t\tif(window.location.hostname == 'localhost'){\n\t\t\t\t\t\t_storage_service = window.globalStorage['localhost.localdomain'];\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t_storage_service = window.globalStorage[window.location.hostname];\n\t\t\t\t\t}\n                    _backend = \"globalStorage\";\n                    _observer_update = _storage_service.jStorage_update;\n                }\n            } catch(E4) {/* Firefox fails when touching localStorage and cookies are disabled */}\n        }\n        /* Check if browser supports userData behavior */\n        else {\n            _storage_elm = document.createElement('link');\n            if(_storage_elm.addBehavior){\n\n                /* Use a DOM element to act as userData storage */\n                _storage_elm.style.behavior = 'url(#default#userData)';\n\n                /* userData element needs to be inserted into the DOM! */\n                document.getElementsByTagName('head')[0].appendChild(_storage_elm);\n\n                try{\n                    _storage_elm.load(\"jStorage\");\n                }catch(E){\n                    // try to reset cache\n                    _storage_elm.setAttribute(\"jStorage\", \"{}\");\n                    _storage_elm.save(\"jStorage\");\n                    _storage_elm.load(\"jStorage\");\n                }\n\n                var data = \"{}\";\n                try{\n                    data = _storage_elm.getAttribute(\"jStorage\");\n                }catch(E5){}\n\n                try{\n                    _observer_update = _storage_elm.getAttribute(\"jStorage_update\");\n                }catch(E6){}\n\n                _storage_service.jStorage = data;\n                _backend = \"userDataBehavior\";\n            }else{\n                _storage_elm = null;\n                return;\n            }\n        }\n\n        // Load data from storage\n        _load_storage();\n\n        // remove dead keys\n        _handleTTL();\n\n        // start listening for changes\n        _setupObserver();\n\n        // initialize publish-subscribe service\n        _handlePubSub();\n\n        // handle cached navigation\n        if(\"addEventListener\" in window){\n            window.addEventListener(\"pageshow\", function(event){\n                if(event.persisted){\n                    _storageObserver();\n                }\n            }, false);\n        }\n    }\n\n    /**\n     * Reload data from storage when needed\n     */\n    function _reloadData(){\n        var data = \"{}\";\n\n        if(_backend == \"userDataBehavior\"){\n            _storage_elm.load(\"jStorage\");\n\n            try{\n                data = _storage_elm.getAttribute(\"jStorage\");\n            }catch(E5){}\n\n            try{\n                _observer_update = _storage_elm.getAttribute(\"jStorage_update\");\n            }catch(E6){}\n\n            _storage_service.jStorage = data;\n        }\n\n        _load_storage();\n\n        // remove dead keys\n        _handleTTL();\n\n        _handlePubSub();\n    }\n\n    /**\n     * Sets up a storage change observer\n     */\n    function _setupObserver(){\n        if(_backend == \"localStorage\" || _backend == \"globalStorage\"){\n            if(\"addEventListener\" in window){\n                window.addEventListener(\"storage\", _storageObserver, false);\n            }else{\n                document.attachEvent(\"onstorage\", _storageObserver);\n            }\n        }else if(_backend == \"userDataBehavior\"){\n            setInterval(_storageObserver, 1000);\n        }\n    }\n\n    /**\n     * Fired on any kind of data change, needs to check if anything has\n     * really been changed\n     */\n    function _storageObserver(){\n        var updateTime;\n        // cumulate change notifications with timeout\n        clearTimeout(_observer_timeout);\n        _observer_timeout = setTimeout(function(){\n\n            if(_backend == \"localStorage\" || _backend == \"globalStorage\"){\n                updateTime = _storage_service.jStorage_update;\n            }else if(_backend == \"userDataBehavior\"){\n                _storage_elm.load(\"jStorage\");\n                try{\n                    updateTime = _storage_elm.getAttribute(\"jStorage_update\");\n                }catch(E5){}\n            }\n\n            if(updateTime && updateTime != _observer_update){\n                _observer_update = updateTime;\n                _checkUpdatedKeys();\n            }\n\n        }, 25);\n    }\n\n    /**\n     * Reloads the data and checks if any keys are changed\n     */\n    function _checkUpdatedKeys(){\n        var oldCrc32List = JSON.parse(JSON.stringify(_storage.__jstorage_meta.CRC32)),\n            newCrc32List;\n\n        _reloadData();\n        newCrc32List = JSON.parse(JSON.stringify(_storage.__jstorage_meta.CRC32));\n\n        var key,\n            updated = [],\n            removed = [];\n\n        for(key in oldCrc32List){\n            if(oldCrc32List.hasOwnProperty(key)){\n                if(!newCrc32List[key]){\n                    removed.push(key);\n                    continue;\n                }\n                if(oldCrc32List[key] != newCrc32List[key] && String(oldCrc32List[key]).substr(0,2) == \"2.\"){\n                    updated.push(key);\n                }\n            }\n        }\n\n        for(key in newCrc32List){\n            if(newCrc32List.hasOwnProperty(key)){\n                if(!oldCrc32List[key]){\n                    updated.push(key);\n                }\n            }\n        }\n\n        _fireObservers(updated, \"updated\");\n        _fireObservers(removed, \"deleted\");\n    }\n\n    /**\n     * Fires observers for updated keys\n     *\n     * @param {Array|String} keys Array of key names or a key\n     * @param {String} action What happened with the value (updated, deleted, flushed)\n     */\n    function _fireObservers(keys, action){\n        keys = [].concat(keys || []);\n        if(action == \"flushed\"){\n            keys = [];\n            for(var key in _observers){\n                if(_observers.hasOwnProperty(key)){\n                    keys.push(key);\n                }\n            }\n            action = \"deleted\";\n        }\n        for(var i=0, len = keys.length; i<len; i++){\n            if(_observers[keys[i]]){\n                for(var j=0, jlen = _observers[keys[i]].length; j<jlen; j++){\n                    _observers[keys[i]][j](keys[i], action);\n                }\n            }\n            if(_observers[\"*\"]){\n                for(var j=0, jlen = _observers[\"*\"].length; j<jlen; j++){\n                    _observers[\"*\"][j](keys[i], action);\n                }\n            }\n        }\n    }\n\n    /**\n     * Publishes key change to listeners\n     */\n    function _publishChange(){\n        var updateTime = (+new Date()).toString();\n\n        if(_backend == \"localStorage\" || _backend == \"globalStorage\"){\n            try {\n                _storage_service.jStorage_update = updateTime;\n            } catch (E8) {\n                // safari private mode has been enabled after the jStorage initialization\n                _backend = false;\n            }\n        }else if(_backend == \"userDataBehavior\"){\n            _storage_elm.setAttribute(\"jStorage_update\", updateTime);\n            _storage_elm.save(\"jStorage\");\n        }\n\n        _storageObserver();\n    }\n\n    /**\n     * Loads the data from the storage based on the supported mechanism\n     */\n    function _load_storage(){\n        /* if jStorage string is retrieved, then decode it */\n        if(_storage_service.jStorage){\n            try{\n                _storage = JSON.parse(String(_storage_service.jStorage));\n            }catch(E6){_storage_service.jStorage = \"{}\";}\n        }else{\n            _storage_service.jStorage = \"{}\";\n        }\n        _storage_size = _storage_service.jStorage?String(_storage_service.jStorage).length:0;\n\n        if(!_storage.__jstorage_meta){\n            _storage.__jstorage_meta = {};\n        }\n        if(!_storage.__jstorage_meta.CRC32){\n            _storage.__jstorage_meta.CRC32 = {};\n        }\n    }\n\n    /**\n     * This functions provides the \"save\" mechanism to store the jStorage object\n     */\n    function _save(){\n        _dropOldEvents(); // remove expired events\n        try{\n            _storage_service.jStorage = JSON.stringify(_storage);\n            // If userData is used as the storage engine, additional\n            if(_storage_elm) {\n                _storage_elm.setAttribute(\"jStorage\",_storage_service.jStorage);\n                _storage_elm.save(\"jStorage\");\n            }\n            _storage_size = _storage_service.jStorage?String(_storage_service.jStorage).length:0;\n        }catch(E7){/* probably cache is full, nothing is saved this way*/}\n    }\n\n    /**\n     * Function checks if a key is set and is string or numberic\n     *\n     * @param {String} key Key name\n     */\n    function _checkKey(key){\n        if(!key || (typeof key != \"string\" && typeof key != \"number\")){\n            throw new TypeError('Key name must be string or numeric');\n        }\n        if(key == \"__jstorage_meta\"){\n            throw new TypeError('Reserved key name');\n        }\n        return true;\n    }\n\n    /**\n     * Removes expired keys\n     */\n    function _handleTTL(){\n        var curtime, i, TTL, CRC32, nextExpire = Infinity, changed = false, deleted = [];\n\n        clearTimeout(_ttl_timeout);\n\n        if(!_storage.__jstorage_meta || typeof _storage.__jstorage_meta.TTL != \"object\"){\n            // nothing to do here\n            return;\n        }\n\n        curtime = +new Date();\n        TTL = _storage.__jstorage_meta.TTL;\n\n        CRC32 = _storage.__jstorage_meta.CRC32;\n        for(i in TTL){\n            if(TTL.hasOwnProperty(i)){\n                if(TTL[i] <= curtime){\n                    delete TTL[i];\n                    delete CRC32[i];\n                    delete _storage[i];\n                    changed = true;\n                    deleted.push(i);\n                }else if(TTL[i] < nextExpire){\n                    nextExpire = TTL[i];\n                }\n            }\n        }\n\n        // set next check\n        if(nextExpire != Infinity){\n            _ttl_timeout = setTimeout(_handleTTL, nextExpire - curtime);\n        }\n\n        // save changes\n        if(changed){\n            _save();\n            _publishChange();\n            _fireObservers(deleted, \"deleted\");\n        }\n    }\n\n    /**\n     * Checks if there's any events on hold to be fired to listeners\n     */\n    function _handlePubSub(){\n        var i, len;\n        if(!_storage.__jstorage_meta.PubSub){\n            return;\n        }\n        var pubelm,\n            _pubsubCurrent = _pubsub_last;\n\n        for(i=len=_storage.__jstorage_meta.PubSub.length-1; i>=0; i--){\n            pubelm = _storage.__jstorage_meta.PubSub[i];\n            if(pubelm[0] > _pubsub_last){\n                _pubsubCurrent = pubelm[0];\n                _fireSubscribers(pubelm[1], pubelm[2]);\n            }\n        }\n\n        _pubsub_last = _pubsubCurrent;\n    }\n\n    /**\n     * Fires all subscriber listeners for a pubsub channel\n     *\n     * @param {String} channel Channel name\n     * @param {Mixed} payload Payload data to deliver\n     */\n    function _fireSubscribers(channel, payload){\n        if(_pubsub_observers[channel]){\n            for(var i=0, len = _pubsub_observers[channel].length; i<len; i++){\n                // send immutable data that can't be modified by listeners\n                _pubsub_observers[channel][i](channel, JSON.parse(JSON.stringify(payload)));\n            }\n        }\n    }\n\n    /**\n     * Remove old events from the publish stream (at least 2sec old)\n     */\n    function _dropOldEvents(){\n        if(!_storage.__jstorage_meta.PubSub){\n            return;\n        }\n\n        var retire = +new Date() - 2000;\n\n        for(var i=0, len = _storage.__jstorage_meta.PubSub.length; i<len; i++){\n            if(_storage.__jstorage_meta.PubSub[i][0] <= retire){\n                // deleteCount is needed for IE6\n                _storage.__jstorage_meta.PubSub.splice(i, _storage.__jstorage_meta.PubSub.length - i);\n                break;\n            }\n        }\n\n        if(!_storage.__jstorage_meta.PubSub.length){\n            delete _storage.__jstorage_meta.PubSub;\n        }\n\n    }\n\n    /**\n     * Publish payload to a channel\n     *\n     * @param {String} channel Channel name\n     * @param {Mixed} payload Payload to send to the subscribers\n     */\n    function _publish(channel, payload){\n        if(!_storage.__jstorage_meta){\n            _storage.__jstorage_meta = {};\n        }\n        if(!_storage.__jstorage_meta.PubSub){\n            _storage.__jstorage_meta.PubSub = [];\n        }\n\n        _storage.__jstorage_meta.PubSub.unshift([+new Date, channel, payload]);\n\n        _save();\n        _publishChange();\n    }\n\n\n    /**\n     * JS Implementation of MurmurHash2\n     *\n     *  SOURCE: https://github.com/garycourt/murmurhash-js (MIT licensed)\n     *\n     * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n     * @see http://github.com/garycourt/murmurhash-js\n     * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n     * @see http://sites.google.com/site/murmurhash/\n     *\n     * @param {string} str ASCII only\n     * @param {number} seed Positive integer only\n     * @return {number} 32-bit positive integer hash\n     */\n\n    function murmurhash2_32_gc(str, seed) {\n        var\n            l = str.length,\n            h = seed ^ l,\n            i = 0,\n            k;\n\n        while (l >= 4) {\n            k =\n                ((str.charCodeAt(i) & 0xff)) |\n                ((str.charCodeAt(++i) & 0xff) << 8) |\n                ((str.charCodeAt(++i) & 0xff) << 16) |\n                ((str.charCodeAt(++i) & 0xff) << 24);\n\n            k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n            k ^= k >>> 24;\n            k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n            h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n            l -= 4;\n            ++i;\n        }\n\n        switch (l) {\n            case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n            case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n            case 1: h ^= (str.charCodeAt(i) & 0xff);\n                h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n        }\n\n        h ^= h >>> 13;\n        h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n        h ^= h >>> 15;\n\n        return h >>> 0;\n    }\n\n    ////////////////////////// PUBLIC INTERFACE /////////////////////////\n\n    $.jStorage = {\n        /* Version number */\n        version: JSTORAGE_VERSION,\n\n        /**\n         * Sets a key's value.\n         *\n         * @param {String} key Key to set. If this value is not set or not\n         *              a string an exception is raised.\n         * @param {Mixed} value Value to set. This can be any value that is JSON\n         *              compatible (Numbers, Strings, Objects etc.).\n         * @param {Object} [options] - possible options to use\n         * @param {Number} [options.TTL] - optional TTL value\n         * @return {Mixed} the used value\n         */\n        set: function(key, value, options){\n            _checkKey(key);\n\n            options = options || {};\n\n            // undefined values are deleted automatically\n            if(typeof value == \"undefined\"){\n                this.deleteKey(key);\n                return value;\n            }\n\n            if(_XMLService.isXML(value)){\n                value = {_is_xml:true,xml:_XMLService.encode(value)};\n            }else if(typeof value == \"function\"){\n                return undefined; // functions can't be saved!\n            }else if(value && typeof value == \"object\"){\n                // clone the object before saving to _storage tree\n                value = JSON.parse(JSON.stringify(value));\n            }\n\n            _storage[key] = value;\n\n            _storage.__jstorage_meta.CRC32[key] = \"2.\" + murmurhash2_32_gc(JSON.stringify(value), 0x9747b28c);\n\n            this.setTTL(key, options.TTL || 0); // also handles saving and _publishChange\n\n            _fireObservers(key, \"updated\");\n            return value;\n        },\n\n        /**\n         * Looks up a key in cache\n         *\n         * @param {String} key - Key to look up.\n         * @param {mixed} def - Default value to return, if key didn't exist.\n         * @return {Mixed} the key value, default value or null\n         */\n        get: function(key, def){\n            _checkKey(key);\n            if(key in _storage){\n                if(_storage[key] && typeof _storage[key] == \"object\" && _storage[key]._is_xml) {\n                    return _XMLService.decode(_storage[key].xml);\n                }else{\n                    return _storage[key];\n                }\n            }\n            return typeof(def) == 'undefined' ? null : def;\n        },\n\n        /**\n         * Deletes a key from cache.\n         *\n         * @param {String} key - Key to delete.\n         * @return {Boolean} true if key existed or false if it didn't\n         */\n        deleteKey: function(key){\n            _checkKey(key);\n            if(key in _storage){\n                delete _storage[key];\n                // remove from TTL list\n                if(typeof _storage.__jstorage_meta.TTL == \"object\" &&\n                  key in _storage.__jstorage_meta.TTL){\n                    delete _storage.__jstorage_meta.TTL[key];\n                }\n\n                delete _storage.__jstorage_meta.CRC32[key];\n\n                _save();\n                _publishChange();\n                _fireObservers(key, \"deleted\");\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * Sets a TTL for a key, or remove it if ttl value is 0 or below\n         *\n         * @param {String} key - key to set the TTL for\n         * @param {Number} ttl - TTL timeout in milliseconds\n         * @return {Boolean} true if key existed or false if it didn't\n         */\n        setTTL: function(key, ttl){\n            var curtime = +new Date();\n            _checkKey(key);\n            ttl = Number(ttl) || 0;\n            if(key in _storage){\n\n                if(!_storage.__jstorage_meta.TTL){\n                    _storage.__jstorage_meta.TTL = {};\n                }\n\n                // Set TTL value for the key\n                if(ttl>0){\n                    _storage.__jstorage_meta.TTL[key] = curtime + ttl;\n                }else{\n                    delete _storage.__jstorage_meta.TTL[key];\n                }\n\n                _save();\n\n                _handleTTL();\n\n                _publishChange();\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * Gets remaining TTL (in milliseconds) for a key or 0 when no TTL has been set\n         *\n         * @param {String} key Key to check\n         * @return {Number} Remaining TTL in milliseconds\n         */\n        getTTL: function(key){\n            var curtime = +new Date(), ttl;\n            _checkKey(key);\n            if(key in _storage && _storage.__jstorage_meta.TTL && _storage.__jstorage_meta.TTL[key]){\n                ttl = _storage.__jstorage_meta.TTL[key] - curtime;\n                return ttl || 0;\n            }\n            return 0;\n        },\n\n        /**\n         * Deletes everything in cache.\n         *\n         * @return {Boolean} Always true\n         */\n        flush: function(){\n            _storage = {__jstorage_meta:{CRC32:{}}};\n            _save();\n            _publishChange();\n            _fireObservers(null, \"flushed\");\n            return true;\n        },\n\n        /**\n         * Returns a read-only copy of _storage\n         *\n         * @return {Object} Read-only copy of _storage\n        */\n        storageObj: function(){\n            function F() {}\n            F.prototype = _storage;\n            return new F();\n        },\n\n        /**\n         * Returns an index of all used keys as an array\n         * ['key1', 'key2',..'keyN']\n         *\n         * @return {Array} Used keys\n        */\n        index: function(){\n            var index = [], i;\n            for(i in _storage){\n                if(_storage.hasOwnProperty(i) && i != \"__jstorage_meta\"){\n                    index.push(i);\n                }\n            }\n            return index;\n        },\n\n        /**\n         * How much space in bytes does the storage take?\n         *\n         * @return {Number} Storage size in chars (not the same as in bytes,\n         *                  since some chars may take several bytes)\n         */\n        storageSize: function(){\n            return _storage_size;\n        },\n\n        /**\n         * Which backend is currently in use?\n         *\n         * @return {String} Backend name\n         */\n        currentBackend: function(){\n            return _backend;\n        },\n\n        /**\n         * Test if storage is available\n         *\n         * @return {Boolean} True if storage can be used\n         */\n        storageAvailable: function(){\n            return !!_backend;\n        },\n\n        /**\n         * Register change listeners\n         *\n         * @param {String} key Key name\n         * @param {Function} callback Function to run when the key changes\n         */\n        listenKeyChange: function(key, callback){\n            _checkKey(key);\n            if(!_observers[key]){\n                _observers[key] = [];\n            }\n            _observers[key].push(callback);\n        },\n\n        /**\n         * Remove change listeners\n         *\n         * @param {String} key Key name to unregister listeners against\n         * @param {Function} [callback] If set, unregister the callback, if not - unregister all\n         */\n        stopListening: function(key, callback){\n            _checkKey(key);\n\n            if(!_observers[key]){\n                return;\n            }\n\n            if(!callback){\n                delete _observers[key];\n                return;\n            }\n\n            for(var i = _observers[key].length - 1; i>=0; i--){\n                if(_observers[key][i] == callback){\n                    _observers[key].splice(i,1);\n                }\n            }\n        },\n\n        /**\n         * Subscribe to a Publish/Subscribe event stream\n         *\n         * @param {String} channel Channel name\n         * @param {Function} callback Function to run when the something is published to the channel\n         */\n        subscribe: function(channel, callback){\n            channel = (channel || \"\").toString();\n            if(!channel){\n                throw new TypeError('Channel not defined');\n            }\n            if(!_pubsub_observers[channel]){\n                _pubsub_observers[channel] = [];\n            }\n            _pubsub_observers[channel].push(callback);\n        },\n\n        /**\n         * Publish data to an event stream\n         *\n         * @param {String} channel Channel name\n         * @param {Mixed} payload Payload to deliver\n         */\n        publish: function(channel, payload){\n            channel = (channel || \"\").toString();\n            if(!channel){\n                throw new TypeError('Channel not defined');\n            }\n\n            _publish(channel, payload);\n        },\n\n        /**\n         * Reloads the data from browser storage\n         */\n        reInit: function(){\n            _reloadData();\n        }\n    };\n\n    // Initialize jStorage\n    _init();\n\n})();\n"]}