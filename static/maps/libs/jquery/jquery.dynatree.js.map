{"version":3,"sources":["libs/jquery/jquery.dynatree.js"],"names":["_log","mode","msg","_canLog","args","Array","prototype","slice","apply","arguments","dt","Date","tag","getHours","getMinutes","getSeconds","getMilliseconds","window","console","info","warn","log","e","number","join","logMsg","unshift","this","getDynaTreePersistData","DTNodeStatus_Error","DTNodeStatus_Loading","DTNodeStatus_Ok","$","getDtNodeFromElement","el","alert","ui","dynatree","getNode","noop","offsetString","n","_checkBrowser","matched","browser","ua","toLowerCase","match","exec","indexOf","version","navigator","userAgent","chrome","webkit","safari","versionCompare","v1","v2","p1","p2","i","v1parts","split","v2parts","minLength","Math","min","length","parseInt","isNaN","NaN","_initDragAndDrop","tree","dnd","options","onDragStart","onDrop","_registerDnd","$tree","draggable","addClasses","appendTo","containment","delay","distance","revert","dropped","helper","ddmanager","current","hasClass","scroll","scrollSpeed","scrollSensitivity","connectToDynatree","event","sourceNode","target","_onDragEvent","start","data","droppable","tolerance","greedy","Class","create","initialize","BROWSER","jquerySupports","positionMyOfs","DynaTreeNode","parent","title","key","_nodeCount","extend","nodedatadefaults","li","span","ul","childList","_isLoading","hasSubSel","bExpanded","bSelected","toString","toDict","recursive","callback","node","dict","activate","activeNode","focus","focusNode","expand","select","children","l","isStatusNode","push","fromDict","undefined","render","removeChildren","addChild","_getInnerHtml","imageSrc","opts","cache","level","getLevel","res","minExpandLevel","tagConnector","hasChildren","tagExpander","checkbox","hideCheckbox","tagCheckbox","icon","charAt","imagePath","iconClass","tagNodeIcon","nodeTitle","onCustomRender","call","tooltip","replace","href","noLink","classNames","_fixOrder","cl","childLI","firstChild","childNode1","childNode2","dtnode","logDebug","insertBefore","nextSibling","useEffects","includeInvisible","cn","isLastSib","isLastSibling","firstTime","document","createElement","generateIds","id","idPrefix","className","appendChild","style","display","innerHTML","cnList","isFolder","folder","expanded","isLazy","lazy","lastsib","selected","partsel","active","addClass","combinedExpanderPrefix","combinedIconPrefix","onCreate","onRender","container","noConnector","isHidden","isExpanded","fx","duration","animate","getKeyPath","excludeSelf","path","sep","keyPathSeparator","visitParents","getParent","getChildren","isFirstSibling","p","isLoading","getPrevSibling","ac","getNextSibling","isChildOf","otherNode","isDescendantOf","countChildren","sortChildren","cmp","deep","a","b","x","y","sort","_setStatusNode","removeChild","shift","setLazyNodeStatus","lts","removeClass","nodeLoading","autoFocus","tnRoot","strings","loading","nodeWait","loadError","nodeError","_parentList","includeRoot","includeSelf","dtn","_getTypeForOuterNodeEvent","cns","eventX","pageX","offsetLeft","eventY","pageY","offsetTop","childNodes","nx","clientWidth","ny","clientHeight","expander","radio","nodeIcon","getEventTargetType","tcn","empty","vline","connector","isVisible","parents","makeVisible","_expand","find","isFocused","tnFocused","_activate","flag","fireEvents","onQueryActivate","deactivate","activeVisible","persist","cookie","cookieId","persistence","activeKey","onActivate","onDeactivate","activateSilently","isActive","_userActivate","clickFolderMode","toggleExpand","_setSubSel","_updatePartSelectionState","sel","unselectable","allSelected","allDeselected","s","_fixSelectionState","visit","_select","allChildsSelected","isPartSel","onQuerySelect","selectMode","addSelect","onSelect","clearSelect","toggleSelect","isSelected","_loadContent","onLazyRead","logWarning","bExpand","forceSync","onQueryExpand","addExpand","clearExpand","allowEffects","autoCollapse","collapseSiblings","onExpand","scheduleAction","ms","timer","clearTimeout","self","setTimeout","_onClick","targetType","aTag","getElementsByTagName","msie","preventDefault","_onDblClick","_onKeydown","sib","handled","which","_onKeypress","_onFocus","type","onBlur","focused","onFocus","fn","remove","root","tn","splice","isRecursiveCall","retainPersistence","setTitle","reload","force","reloadChildren","eventType","attr","bind","isOk","unbind","_loadKeyPath","keyPath","segList","seg","child","resetLazy","_addChildNode","beforeNode","pers","iBefore","inArray","isInitializing","cookiesFound","focusedKey","expandedKeyList","selectedKeyList","bEnableUpdate","obj","prevFlag","enableUpdate","tnFirst","append","appendAjax","ajaxOptions","debugLazyDelay","logInfo","orgSuccess","success","orgError","error","ajaxDefaults","textStatus","jqXHR","prevPhase","phase","postProcess","dataType","hasOwnProperty","d","parseJSON","isArray","trigger","errorThrown","ajax","move","targetNode","pos","prevParent","targetParent","lastentry","DynaTreeStatus","_getTreePersistData","cookieOpts","ts","read","write","idx","isReloading","DynaTree","$widget","element","divTree","get","_load","rootVisible","each","src","search","lastIndexOf","tagEmpty","tagVline","initAjax","url","initId","$ulInitialize","hide","_reloadAjax","_createFromTag","_checkConsistency","onPostInit","ajaxOpts","addActiveKey","addFocusedKey","addExpandedKeyList","addSelectedKeyList","XMLHttpRequest","serializeArray","stopOnParents","nodeList","getSelectedNodes","name","arr","value","getPersistData","debugLevel","isUserEvent","redraw","renderInvisibleNodes","getRoot","enable","disable","getNodeByKey","getElementById","getActiveNode","reactivate","setFocus","activateKey","loadKeyPath","selectKey","bEnable","count","parentTreeNode","$ulParent","$li","$liSpan","$liA","html","iPos","trim","substring","dataAttr","eval","childNode","$ul","_setDndStatus","hitMode","accept","posOpts","$source","$target","markerOffsetX","markerAt","$dndMarker","css","z-index","prependTo","my","at","of","offset","show","position","eventName","enterResponse","r","nodeTag","$helper","clone","onDragEnter","over","before","after","nodeOfs","relPos","left","top","relPos2","width","height","preventVoidMoves","autoExpandMS","onDragOver","isForbidden","onDragLeave","onDragStop","cancelDrag","dd","cancel","widget","_init","_create","__focusHandler","fix","eventNames","keyboard","o","onClick","onDblClick","onKeydown","onKeypress","div","addEventListener","onfocusin","onfocusout","Widget","getTree","getter","buildType","_DynaTreeClass","_DynaTreeNodeClass","selector","parentNode","timeout","expires","hidden","defaults","didRegisterDnd","plugin","add","click","drag","prevTargetNode","closest","stop","jQuery"],"mappings":"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","file":"../../../scripts/libs/jquery/jquery.dynatree.js","sourcesContent":["/*! ****************************************************************************\r\n\tjquery.dynatree.js\r\n\tDynamic tree view control, with support for lazy loading of branches.\r\n\r\n\tCopyright (c) 2006-2014, Martin Wendt (http://wwWendt.de)\r\n\tDual licensed under the MIT or GPL Version 2 licenses.\r\n\thttp://code.google.com/p/dynatree/wiki/LicenseInfo\r\n\r\n\tA current version and some documentation is available at\r\n\t\thttp://dynatree.googlecode.com/\r\n\r\n\t@version: 1.2.8\r\n\t@date:    2015-07-04T16:44\r\n\r\n\t@depends: jquery.js\r\n\t@depends: jquery.ui.core.js\r\n\t@depends: jquery.cookie.js\r\n*******************************************************************************/\r\n\r\n/* jsHint options*/\r\n// Note: We currently allow eval() to parse the 'data' attributes, when initializing from HTML.\r\n// TODO: pass jsHint with the options given in grunt.js only.\r\n//       The following should not be required:\r\n/*global alert */\r\n/*jshint nomen:false, smarttabs:true, eqeqeq:false, evil:true, regexp:false */\r\n\r\n/*************************************************************************\r\n *  Debug functions\r\n */\r\n\r\nvar _canLog = true;\r\n\r\nfunction _log(mode, msg) {\r\n\t/**\r\n\t * Usage: logMsg(\"%o was toggled\", this);\r\n\t */\r\n\tif( !_canLog ){\r\n\t\treturn;\r\n\t}\r\n\t// Remove first argument\r\n\tvar args = Array.prototype.slice.apply(arguments, [1]);\r\n\t// Prepend timestamp\r\n\tvar dt = new Date();\r\n\tvar tag = dt.getHours() + \":\" + dt.getMinutes() + \":\" +\r\n\t\t\t\tdt.getSeconds() + \".\" + dt.getMilliseconds();\r\n\targs[0] = tag + \" - \" + args[0];\r\n\r\n\ttry {\r\n\t\tswitch( mode ) {\r\n\t\tcase \"info\":\r\n\t\t\twindow.console.info.apply(window.console, args);\r\n\t\t\tbreak;\r\n\t\tcase \"warn\":\r\n\t\t\twindow.console.warn.apply(window.console, args);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\twindow.console.log.apply(window.console, args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t} catch(e) {\r\n\t\tif( !window.console ){\r\n\t\t\t_canLog = false; // Permanently disable, when logging is not supported by the browser\r\n\t\t}else if(e.number === -2146827850){\r\n\t\t\t// fix for IE8, where window.console.log() exists, but does not support .apply()\r\n\t\t\twindow.console.log(args.join(\", \"));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nfunction logMsg(msg) {\r\n\tArray.prototype.unshift.apply(arguments, [\"debug\"]);\r\n\t_log.apply(this, arguments);\r\n}\r\n\r\n\r\n// Forward declaration\r\nvar getDynaTreePersistData = null;\r\n\r\n\r\n\r\n/*************************************************************************\r\n *  Constants\r\n */\r\nvar DTNodeStatus_Error   = -1;\r\nvar DTNodeStatus_Loading = 1;\r\nvar DTNodeStatus_Ok      = 0;\r\n\r\n\r\n// Start of local namespace\r\n(function($) {\r\n\r\n/*************************************************************************\r\n *  Common tool functions.\r\n */\r\n\r\nvar Class = {\r\n\tcreate: function() {\r\n\t\treturn function() {\r\n\t\t\tthis.initialize.apply(this, arguments);\r\n\t\t};\r\n\t}\r\n};\r\n\r\n// Tool function to get dtnode from the event target:\r\nfunction getDtNodeFromElement(el) {\r\n\talert(\"getDtNodeFromElement is deprecated\");\r\n\treturn $.ui.dynatree.getNode(el);\r\n/*\r\n\tvar iMax = 5;\r\n\twhile( el && iMax-- ) {\r\n\t\tif(el.dtnode) { return el.dtnode; }\r\n\t\tel = el.parentNode;\r\n\t}\r\n\treturn null;\r\n*/\r\n}\r\n\r\nfunction noop() {\r\n}\r\n\r\n\r\n/* Convert number to string and prepend +/-; return empty string for 0.*/\r\nfunction offsetString(n){\r\n\treturn n === 0 ? \"\" : (( n > 0 ) ? (\"+\" + n) : (\"\" + n));\r\n}\r\n\r\n\r\n/* Check browser version, since $.browser was removed in jQuery 1.9 */\r\nfunction _checkBrowser(){\r\n\tvar matched, browser;\r\n\tfunction uaMatch( ua ) {\r\n\t\tua = ua.toLowerCase();\r\n\t\tvar match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t\t ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t\t [];\r\n\t\treturn {\r\n\t\t\tbrowser: match[ 1 ] || \"\",\r\n\t\t\tversion: match[ 2 ] || \"0\"\r\n\t\t};\r\n\t}\r\n\tmatched = uaMatch( navigator.userAgent );\r\n\tbrowser = {};\r\n\t if ( matched.browser ) {\r\n\t\t browser[ matched.browser ] = true;\r\n\t\t browser.version = matched.version;\r\n\t }\r\n\t if ( browser.chrome ) {\r\n\t\t browser.webkit = true;\r\n\t } else if ( browser.webkit ) {\r\n\t\t browser.safari = true;\r\n\t }\r\n\t return browser;\r\n}\r\n\r\n\r\n/** Compare two dotted version strings (like '10.2.3').\r\n * @returns {Integer} 0: v1 == v2, -1: v1 < v2, 1: v1 > v2\r\n */\r\nfunction versionCompare(v1, v2) {\r\n\tvar v1parts = (\"\" + v1).split(\".\"),\r\n\t\tv2parts = (\"\" + v2).split(\".\"),\r\n\t\tminLength = Math.min(v1parts.length, v2parts.length),\r\n\t\tp1, p2, i;\r\n\t// Compare tuple pair-by-pair.\r\n\tfor(i = 0; i < minLength; i++) {\r\n\t\t// Convert to integer if possible, because \"8\" > \"10\".\r\n\t\tp1 = parseInt(v1parts[i], 10);\r\n\t\tp2 = parseInt(v2parts[i], 10);\r\n\t\tif (isNaN(p1)){ p1 = v1parts[i]; }\r\n\t\tif (isNaN(p2)){ p2 = v2parts[i]; }\r\n\t\tif (p1 == p2) {\r\n\t\t\tcontinue;\r\n\t\t}else if (p1 > p2) {\r\n\t\t\treturn 1;\r\n\t\t}else if (p1 < p2) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\t// one operand is NaN\r\n\t\treturn NaN;\r\n\t}\r\n\t// The longer tuple is always considered 'greater'\r\n\tif (v1parts.length === v2parts.length) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn (v1parts.length < v2parts.length) ? -1 : 1;\r\n}\r\n\r\n\r\n//var BROWSER = jQuery.browser || _checkBrowser();\r\nvar BROWSER = _checkBrowser(); // issue 440\r\nvar jquerySupports = {\r\n\t// http://jqueryui.com/upgrade-guide/1.9/#deprecated-offset-option-merged-into-my-and-at\r\n\tpositionMyOfs: versionCompare($.ui.version, \"1.9\") >= 0  //isVersionAtLeast($.ui.version, 1, 9)\r\n\t};\r\n\r\n\r\n/*************************************************************************\r\n *  Class DynaTreeNode\r\n */\r\nvar DynaTreeNode = Class.create();\r\n\r\nDynaTreeNode.prototype = {\r\n\tinitialize: function(parent, tree, data) {\r\n\t\t/**\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tthis.parent = parent;\r\n\t\tthis.tree = tree;\r\n\t\tif ( typeof data === \"string\" ){\r\n\t\t\tdata = { title: data };\r\n\t\t}\r\n//      if( !data.key ){\r\n\t\tif( data.key == null ){ // test for null OR undefined (issue 420)\r\n\t\t\tdata.key = \"_\" + tree._nodeCount++;\r\n\t\t}else{\r\n\t\t\tdata.key = \"\" + data.key; // issue 371\r\n\t\t}\r\n\t\tthis.data = $.extend({}, $.ui.dynatree.nodedatadefaults, data);\r\n\t\tthis.li = null; // not yet created\r\n\t\tthis.span = null; // not yet created\r\n\t\tthis.ul = null; // not yet created\r\n\t\tthis.childList = null; // no subnodes yet\r\n\t\tthis._isLoading = false; // Lazy content is being loaded\r\n\t\tthis.hasSubSel = false;\r\n\t\tthis.bExpanded = false;\r\n\t\tthis.bSelected = false;\r\n\r\n\t},\r\n\r\n\ttoString: function() {\r\n\t\treturn \"DynaTreeNode<\" + this.data.key + \">: '\" + this.data.title + \"'\";\r\n\t},\r\n\r\n\ttoDict: function(recursive, callback) {\r\n\t\tvar node,\r\n\t\t\tdict = $.extend({}, this.data);\r\n\t\tdict.activate = ( this.tree.activeNode === this );\r\n\t\tdict.focus = ( this.tree.focusNode === this );\r\n\t\tdict.expand = this.bExpanded;\r\n\t\tdict.select = this.bSelected;\r\n\t\tif( callback ){\r\n\t\t\tcallback(dict);\r\n\t\t}\r\n\t\tif( recursive && this.childList ) {\r\n\t\t\tdict.children = [];\r\n\t\t\tfor(var i=0, l=this.childList.length; i<l; i++ ){\r\n\t\t\t\tnode = this.childList[i];\r\n\t\t\t\tif( !node.isStatusNode() ){\r\n\t\t\t\t\tdict.children.push(node.toDict(true, callback));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdelete dict.children;\r\n\t\t}\r\n\t\treturn dict;\r\n\t},\r\n\r\n\tfromDict: function(dict) {\r\n\t\t/**\r\n\t\t * Update node data. If dict contains 'children', then also replace\r\n\t\t * the hole sub tree.\r\n\t\t */\r\n\t\tvar children = dict.children;\r\n\t\tif(children === undefined){\r\n\t\t\tthis.data = $.extend(this.data, dict);\r\n\t\t\tthis.render();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdict = $.extend({}, dict);\r\n\t\tdict.children = undefined;\r\n\t\tthis.data = $.extend(this.data, dict);\r\n\t\tthis.removeChildren();\r\n\t\tthis.addChild(children);\r\n\t},\r\n\r\n\t_getInnerHtml: function() {\r\n\t\tvar tree = this.tree,\r\n\t\t\topts = tree.options,\r\n\t\t\tcache = tree.cache,\r\n\t\t\tlevel = this.getLevel(),\r\n\t\t\tdata = this.data,\r\n\t\t\tres = \"\",\r\n\t\t\timageSrc;\r\n\t\t// connector (expanded, expandable or simple)\r\n\t\tif( level < opts.minExpandLevel ) {\r\n\t\t\tif(level > 1){\r\n\t\t\t\tres += cache.tagConnector;\r\n\t\t\t}\r\n\t\t\t// .. else (i.e. for root level) skip expander/connector altogether\r\n\t\t} else if( this.hasChildren() !== false ) {\r\n\t\t\tres += cache.tagExpander;\r\n\t\t} else {\r\n\t\t\tres += cache.tagConnector;\r\n\t\t}\r\n\t\t// Checkbox mode\r\n\t\tif( opts.checkbox && data.hideCheckbox !== true && !data.isStatusNode ) {\r\n\t\t\tres += cache.tagCheckbox;\r\n\t\t}\r\n\t\t// folder or doctype icon\r\n\t\tif ( data.icon ) {\r\n\t\t\tif (data.icon.charAt(0) === \"/\"){\r\n\t\t\t\timageSrc = data.icon;\r\n\t\t\t}else{\r\n\t\t\t\timageSrc = opts.imagePath + data.icon;\r\n\t\t\t}\r\n\t\t\tres += \"<img src='\" + imageSrc + \"' alt='' />\";\r\n\t\t} else if ( data.icon === false ) {\r\n\t\t\t// icon == false means 'no icon'\r\n//          noop(); // keep JSLint happy\r\n\t\t} else if ( data.iconClass ) {\r\n\t\t\tres +=  \"<span class='\" + \" \" + data.iconClass +  \"'></span>\";\r\n\t\t} else {\r\n\t\t\t// icon == null means 'default icon'\r\n\t\t\tres += cache.tagNodeIcon;\r\n\t\t}\r\n\t\t// node title\r\n\t\tvar nodeTitle = \"\";\r\n\t\tif ( opts.onCustomRender ){\r\n\t\t\tnodeTitle = opts.onCustomRender.call(tree, this) || \"\";\r\n\t\t}\r\n\t\tif(!nodeTitle){\r\n\t\t\tvar tooltip = data.tooltip ? ' title=\"' + data.tooltip.replace(/\\\"/g, '&quot;') + '\"' : '',\r\n\t\t\t\thref = data.href || \"#\";\r\n\t\t\tif( opts.noLink || data.noLink ) {\r\n\t\t\t\tnodeTitle = '<span style=\"display:inline-block;\" class=\"' + opts.classNames.title + '\"' + tooltip + '>' + data.title + '</span>';\r\n//              this.tree.logDebug(\"nodeTitle: \" + nodeTitle);\r\n\t\t\t} else {\r\n\t\t\t\tnodeTitle = '<a href=\"' + href + '\" class=\"' + opts.classNames.title + '\"' + tooltip + '>' + data.title + '</a>';\r\n\t\t\t}\r\n\t\t}\r\n\t\tres += nodeTitle;\r\n\t\treturn res;\r\n\t},\r\n\r\n\r\n\t_fixOrder: function() {\r\n\t\t/**\r\n\t\t * Make sure, that <li> order matches childList order.\r\n\t\t */\r\n\t\tvar cl = this.childList;\r\n\t\tif( !cl || !this.ul ){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar childLI = this.ul.firstChild;\r\n\t\tfor(var i=0, l=cl.length-1; i<l; i++) {\r\n\t\t\tvar childNode1 = cl[i];\r\n\t\t\tvar childNode2 = childLI.dtnode;\r\n\t\t\tif( childNode1 !== childNode2 ) {\r\n\t\t\t\tthis.tree.logDebug(\"_fixOrder: mismatch at index \" + i + \": \" + childNode1 + \" != \" + childNode2);\r\n\t\t\t\tthis.ul.insertBefore(childNode1.li, childNode2.li);\r\n\t\t\t} else {\r\n\t\t\t\tchildLI = childLI.nextSibling;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\trender: function(useEffects, includeInvisible) {\r\n\t\t/**\r\n\t\t * Create <li><span>..</span> .. </li> tags for this node.\r\n\t\t *\r\n\t\t * <li id='KEY' dtnode=NODE> // This div contains the node's span and list of child div's.\r\n\t\t *   <span class='title'>S S S A</span> // Span contains graphic spans and title <a> tag\r\n\t\t *   <ul> // only present, when node has children\r\n\t\t *       <li id='KEY' dtnode=NODE>child1</li>\r\n\t\t *       <li id='KEY' dtnode=NODE>child2</li>\r\n\t\t *   </ul>\r\n\t\t * </li>\r\n\t\t */\r\n//      this.tree.logDebug(\"%s.render(%s)\", this, useEffects);\r\n\t\t// ---\r\n\t\tvar tree = this.tree,\r\n\t\t\tparent = this.parent,\r\n\t\t\tdata = this.data,\r\n\t\t\topts = tree.options,\r\n\t\t\tcn = opts.classNames,\r\n\t\t\tisLastSib = this.isLastSibling(),\r\n\t\t\tfirstTime = false;\r\n\r\n\t\tif( !parent && !this.ul ) {\r\n\t\t\t// Root node has only a <ul>\r\n\t\t\tthis.li = this.span = null;\r\n\t\t\tthis.ul = document.createElement(\"ul\");\r\n\t\t\tif( opts.minExpandLevel > 1 ){\r\n\t\t\t\tthis.ul.className = cn.container + \" \" + cn.noConnector;\r\n\t\t\t}else{\r\n\t\t\t\tthis.ul.className = cn.container;\r\n\t\t\t}\r\n\t\t} else if( parent ) {\r\n\t\t\t// Create <li><span /> </li>\r\n\t\t\tif( ! this.li ) {\r\n\t\t\t\tfirstTime = true;\r\n\t\t\t\tthis.li = document.createElement(\"li\");\r\n\t\t\t\tthis.li.dtnode = this;\r\n\t\t\t\tif( data.key && opts.generateIds ){\r\n\t\t\t\t\tthis.li.id = opts.idPrefix + data.key;\r\n\t\t\t\t}\r\n\t\t\t\tthis.span = document.createElement(\"span\");\r\n\t\t\t\tthis.span.className = cn.title;\r\n\t\t\t\tthis.li.appendChild(this.span);\r\n\r\n\t\t\t\tif( !parent.ul ) {\r\n\t\t\t\t\t// This is the parent's first child: create UL tag\r\n\t\t\t\t\t// (Hidden, because it will be\r\n\t\t\t\t\tparent.ul = document.createElement(\"ul\");\r\n\t\t\t\t\tparent.ul.style.display = \"none\";\r\n\t\t\t\t\tparent.li.appendChild(parent.ul);\r\n//                  if( opts.minExpandLevel > this.getLevel() ){\r\n//                      parent.ul.className = cn.noConnector;\r\n//                  }\r\n\t\t\t\t}\r\n\t\t\t\t// set node connector images, links and text\r\n//              this.span.innerHTML = this._getInnerHtml();\r\n\r\n\t\t\t\tparent.ul.appendChild(this.li);\r\n\t\t\t}\r\n\t\t\t// set node connector images, links and text\r\n\t\t\tthis.span.innerHTML = this._getInnerHtml();\r\n\t\t\t// Set classes for current status\r\n\t\t\tvar cnList = [];\r\n\t\t\tcnList.push(cn.node);\r\n\t\t\tif( data.isFolder ){\r\n\t\t\t\tcnList.push(cn.folder);\r\n\t\t\t}\r\n\t\t\tif( this.bExpanded ){\r\n\t\t\t\tcnList.push(cn.expanded);\r\n\t\t\t}\r\n\t\t\tif( this.hasChildren() !== false ){\r\n\t\t\t\tcnList.push(cn.hasChildren);\r\n\t\t\t}\r\n\t\t\tif( data.isLazy && this.childList === null ){\r\n\t\t\t\tcnList.push(cn.lazy);\r\n\t\t\t}\r\n\t\t\tif( isLastSib ){\r\n\t\t\t\tcnList.push(cn.lastsib);\r\n\t\t\t}\r\n\t\t\tif( this.bSelected ){\r\n\t\t\t\tcnList.push(cn.selected);\r\n\t\t\t}\r\n\t\t\tif( this.hasSubSel ){\r\n\t\t\t\tcnList.push(cn.partsel);\r\n\t\t\t}\r\n\t\t\tif( tree.activeNode === this ){\r\n\t\t\t\tcnList.push(cn.active);\r\n\t\t\t}\r\n\t\t\tif( data.addClass ){\r\n\t\t\t\tcnList.push(data.addClass);\r\n\t\t\t}\r\n\t\t\t// IE6 doesn't correctly evaluate multiple class names,\r\n\t\t\t// so we create combined class names that can be used in the CSS\r\n\t\t\tcnList.push(cn.combinedExpanderPrefix\r\n\t\t\t\t\t+ (this.bExpanded ? \"e\" : \"c\")\r\n\t\t\t\t\t+ (data.isLazy && this.childList === null ? \"d\" : \"\")\r\n\t\t\t\t\t+ (isLastSib ? \"l\" : \"\")\r\n\t\t\t\t\t);\r\n\t\t\tcnList.push(cn.combinedIconPrefix\r\n\t\t\t\t\t+ (this.bExpanded ? \"e\" : \"c\")\r\n\t\t\t\t\t+ (data.isFolder ? \"f\" : \"\")\r\n\t\t\t\t\t);\r\n\t\t\tthis.span.className = cnList.join(\" \");\r\n\r\n\t\t\t// TODO: we should not set this in the <span> tag also, if we set it here:\r\n\t\t\tthis.li.className = isLastSib ? cn.lastsib : \"\";\r\n\r\n\t\t\t// Allow tweaking, binding, after node was created for the first time\r\n\t\t\tif(firstTime && opts.onCreate){\r\n\t\t\t\topts.onCreate.call(tree, this, this.span);\r\n\t\t\t}\r\n\t\t\t// Hide children, if node is collapsed\r\n//          this.ul.style.display = ( this.bExpanded || !parent ) ? \"\" : \"none\";\r\n\t\t\t// Allow tweaking after node state was rendered\r\n\t\t\tif(opts.onRender){\r\n\t\t\t\topts.onRender.call(tree, this, this.span);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Visit child nodes\r\n\t\tif( (this.bExpanded || includeInvisible === true) && this.childList ) {\r\n\t\t\tfor(var i=0, l=this.childList.length; i<l; i++) {\r\n\t\t\t\tthis.childList[i].render(false, includeInvisible);\r\n\t\t\t}\r\n\t\t\t// Make sure the tag order matches the child array\r\n\t\t\tthis._fixOrder();\r\n\t\t}\r\n\t\t// Hide children, if node is collapsed\r\n\t\tif( this.ul ) {\r\n\t\t\tvar isHidden = (this.ul.style.display === \"none\");\r\n\t\t\tvar isExpanded = !!this.bExpanded;\r\n//          logMsg(\"isHidden:%s\", isHidden);\r\n\t\t\tif( useEffects && opts.fx && (isHidden === isExpanded) ) {\r\n\t\t\t\tvar duration = opts.fx.duration || 200;\r\n\t\t\t\t$(this.ul).animate(opts.fx, duration);\r\n\t\t\t} else {\r\n\t\t\t\tthis.ul.style.display = ( this.bExpanded || !parent ) ? \"\" : \"none\";\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t/** Return '/id1/id2/id3'. */\r\n\tgetKeyPath: function(excludeSelf) {\r\n\t\tvar path = [],\r\n\t\t\tsep = this.tree.options.keyPathSeparator;\r\n\r\n\t\tthis.visitParents(function(node){\r\n\t\t\tif(node.parent){\r\n\t\t\t\tpath.unshift(node.data.key);\r\n\t\t\t}\r\n\t\t}, !excludeSelf);\r\n\t\treturn sep + path.join(sep);\r\n\t},\r\n\r\n\tgetParent: function() {\r\n\t\treturn this.parent;\r\n\t},\r\n\r\n\tgetChildren: function() {\r\n\t\tif(this.hasChildren() === undefined){\r\n\t\t\treturn undefined; // Lazy node: unloaded, currently loading, or load error\r\n\t\t}\r\n\t\treturn this.childList;\r\n\t},\r\n\r\n\t/** Check if node has children (returns undefined, if not sure). */\r\n\thasChildren: function() {\r\n\t\tif(this.data.isLazy){\r\n\t\t\tif(this.childList === null || this.childList === undefined){\r\n\t\t\t\t// Not yet loaded\r\n\t\t\t\treturn undefined;\r\n\t\t\t}else if(this.childList.length === 0){\r\n\t\t\t\t// Loaded, but response was empty\r\n\t\t\t\treturn false;\r\n\t\t\t}else if(this.childList.length === 1 && this.childList[0].isStatusNode()){\r\n\t\t\t\t// Currently loading or load error\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn !!this.childList;\r\n\t},\r\n\r\n\tisFirstSibling: function() {\r\n\t\tvar p = this.parent;\r\n\t\treturn !p || p.childList[0] === this;\r\n\t},\r\n\r\n\tisLastSibling: function() {\r\n\t\tvar p = this.parent;\r\n\t\treturn !p || p.childList[p.childList.length-1] === this;\r\n\t},\r\n\r\n\tisLoading: function() {\r\n\t\treturn !!this._isLoading;\r\n\t},\r\n\r\n\tgetPrevSibling: function() {\r\n\t\tif( !this.parent ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar ac = this.parent.childList;\r\n\t\tfor(var i=1, l=ac.length; i<l; i++){ // start with 1, so prev(first) = null\r\n\t\t\tif( ac[i] === this ){\r\n\t\t\t\treturn ac[i-1];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\r\n\tgetNextSibling: function() {\r\n\t\tif( !this.parent ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar ac = this.parent.childList;\r\n\t\tfor(var i=0, l=ac.length-1; i<l; i++){ // up to length-2, so next(last) = null\r\n\t\t\tif( ac[i] === this ){\r\n\t\t\t\treturn ac[i+1];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\r\n\tisStatusNode: function() {\r\n\t\treturn (this.data.isStatusNode === true);\r\n\t},\r\n\r\n\tisChildOf: function(otherNode) {\r\n\t\treturn (this.parent && this.parent === otherNode);\r\n\t},\r\n\r\n\tisDescendantOf: function(otherNode) {\r\n\t\tif(!otherNode){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar p = this.parent;\r\n\t\twhile( p ) {\r\n\t\t\tif( p === otherNode ){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\tcountChildren: function() {\r\n\t\tvar cl = this.childList;\r\n\t\tif( !cl ){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar n = cl.length;\r\n\t\tfor(var i=0, l=n; i<l; i++){\r\n\t\t\tvar child = cl[i];\r\n\t\t\tn += child.countChildren();\r\n\t\t}\r\n\t\treturn n;\r\n\t},\r\n\r\n\t/**Sort child list by title.\r\n\t * cmd: optional compare function.\r\n\t * deep: optional: pass true to sort all descendant nodes.\r\n\t */\r\n\tsortChildren: function(cmp, deep) {\r\n\t\tvar cl = this.childList;\r\n\t\tif( !cl ){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcmp = cmp || function(a, b) {\r\n//          return a.data.title === b.data.title ? 0 : a.data.title > b.data.title ? 1 : -1;\r\n\t\t\tvar x = a.data.title.toLowerCase(),\r\n\t\t\t\ty = b.data.title.toLowerCase();\r\n\t\t\treturn x === y ? 0 : x > y ? 1 : -1;\r\n\t\t\t};\r\n\t\tcl.sort(cmp);\r\n\t\tif( deep ){\r\n\t\t\tfor(var i=0, l=cl.length; i<l; i++){\r\n\t\t\t\tif( cl[i].childList ){\r\n\t\t\t\t\tcl[i].sortChildren(cmp, \"$norender$\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( deep !== \"$norender$\" ){\r\n\t\t\tthis.render();\r\n\t\t}\r\n\t},\r\n\r\n\t_setStatusNode: function(data) {\r\n\t\t// Create, modify or remove the status child node (pass 'null', to remove it).\r\n\t\tvar firstChild = ( this.childList ? this.childList[0] : null );\r\n\t\tif( !data ) {\r\n\t\t\tif ( firstChild && firstChild.isStatusNode()) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\t// I've seen exceptions here with loadKeyPath...\r\n\t\t\t\t\tif(this.ul){\r\n\t\t\t\t\t\tthis.ul.removeChild(firstChild.li);\r\n\t\t\t\t\t\tfirstChild.li = null; // avoid leaks (issue 215)\r\n\t\t\t\t\t}\r\n\t\t\t\t}catch(e){}\r\n\t\t\t\tif( this.childList.length === 1 ){\r\n\t\t\t\t\tthis.childList = [];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.childList.shift();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if ( firstChild ) {\r\n\t\t\tdata.isStatusNode = true;\r\n\t\t\tdata.key = \"_statusNode\";\r\n\t\t\tfirstChild.data = data;\r\n\t\t\tfirstChild.render();\r\n\t\t} else {\r\n\t\t\tdata.isStatusNode = true;\r\n\t\t\tdata.key = \"_statusNode\";\r\n\t\t\tfirstChild = this.addChild(data);\r\n\t\t}\r\n\t},\r\n\r\n\tsetLazyNodeStatus: function(lts, opts) {\r\n\t\tvar tooltip = (opts && opts.tooltip) ? opts.tooltip : null,\r\n\t\t\tinfo = (opts && opts.info) ? \" (\" + opts.info + \")\" : \"\";\r\n\t\tswitch( lts ) {\r\n\t\t\tcase DTNodeStatus_Ok:\r\n\t\t\t\tthis._setStatusNode(null);\r\n\t\t\t\t$(this.span).removeClass(this.tree.options.classNames.nodeLoading);\r\n\t\t\t\tthis._isLoading = false;\r\n//              this.render();\r\n\t\t\t\tif( this.tree.options.autoFocus ) {\r\n\t\t\t\t\tif( this === this.tree.tnRoot && this.childList && this.childList.length > 0) {\r\n\t\t\t\t\t\t// special case: using ajaxInit\r\n\t\t\t\t\t\tthis.childList[0].focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DTNodeStatus_Loading:\r\n\t\t\t\tthis._isLoading = true;\r\n\t\t\t\t$(this.span).addClass(this.tree.options.classNames.nodeLoading);\r\n\t\t\t\t// The root is hidden, so we set a temporary status child\r\n\t\t\t\tif(!this.parent){\r\n\t\t\t\t\tthis._setStatusNode({\r\n\t\t\t\t\t\ttitle: this.tree.options.strings.loading + info,\r\n\t\t\t\t\t\ttooltip: tooltip,\r\n\t\t\t\t\t\taddClass: this.tree.options.classNames.nodeWait\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DTNodeStatus_Error:\r\n\t\t\t\tthis._isLoading = false;\r\n//              $(this.span).addClass(this.tree.options.classNames.nodeError);\r\n\t\t\t\tthis._setStatusNode({\r\n\t\t\t\t\ttitle: this.tree.options.strings.loadError + info,\r\n\t\t\t\t\ttooltip: tooltip,\r\n\t\t\t\t\taddClass: this.tree.options.classNames.nodeError\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Bad LazyNodeStatus: '\" + lts + \"'.\";\r\n\t\t}\r\n\t},\r\n\r\n\t_parentList: function(includeRoot, includeSelf) {\r\n\t\tvar l = [];\r\n\t\tvar dtn = includeSelf ? this : this.parent;\r\n\t\twhile( dtn ) {\r\n\t\t\tif( includeRoot || dtn.parent ){\r\n\t\t\t\tl.unshift(dtn);\r\n\t\t\t}\r\n\t\t\tdtn = dtn.parent;\r\n\t\t}\r\n\t\treturn l;\r\n\t},\r\n\tgetLevel: function() {\r\n\t\t/**\r\n\t\t * Return node depth. 0: System root node, 1: visible top-level node.\r\n\t\t */\r\n\t\tvar level = 0;\r\n\t\tvar dtn = this.parent;\r\n\t\twhile( dtn ) {\r\n\t\t\tlevel++;\r\n\t\t\tdtn = dtn.parent;\r\n\t\t}\r\n\t\treturn level;\r\n\t},\r\n\r\n\t_getTypeForOuterNodeEvent: function(event) {\r\n\t\t/** Return the inner node span (title, checkbox or expander) if\r\n\t\t *  event.target points to the outer span.\r\n\t\t *  This function should fix issue #93:\r\n\t\t *  FF2 ignores empty spans, when generating events (returning the parent instead).\r\n\t\t */\r\n\t\tvar cns = this.tree.options.classNames;\r\n\t\tvar target = event.target;\r\n\t\t// Only process clicks on an outer node span (probably due to a FF2 event handling bug)\r\n\t\tif( target.className.indexOf(cns.node) < 0 ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t// Event coordinates, relative to outer node span:\r\n\t\tvar eventX = event.pageX - target.offsetLeft;\r\n\t\tvar eventY = event.pageY - target.offsetTop;\r\n\r\n\t\tfor(var i=0, l=target.childNodes.length; i<l; i++) {\r\n\t\t\tvar cn = target.childNodes[i];\r\n\t\t\tvar x = cn.offsetLeft - target.offsetLeft;\r\n\t\t\tvar y = cn.offsetTop - target.offsetTop;\r\n\t\t\tvar nx = cn.clientWidth, ny = cn.clientHeight;\r\n//          alert (cn.className + \": \" + x + \", \" + y + \", s:\" + nx + \", \" + ny);\r\n\t\t\tif( eventX >= x && eventX <= (x+nx) && eventY >= y && eventY <= (y+ny) ) {\r\n//              alert(\"HIT \"+ cn.className);\r\n\t\t\t\tif( cn.className==cns.title ){\r\n\t\t\t\t\treturn \"title\";\r\n\t\t\t\t}else if( cn.className==cns.expander ){\r\n\t\t\t\t\treturn \"expander\";\r\n\t\t\t\t}else if( cn.className==cns.checkbox || cn.className==cns.radio ){\r\n\t\t\t\t\treturn \"checkbox\";\r\n\t\t\t\t}else if( cn.className==cns.nodeIcon ){\r\n\t\t\t\t\treturn \"icon\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn \"prefix\";\r\n\t},\r\n\r\n\tgetEventTargetType: function(event) {\r\n\t\t// Return the part of a node, that a click event occurred on.\r\n\t\t// Note: there is no check, if the event was fired on THIS node.\r\n\t\tvar tcn = event && event.target ? event.target.className : \"\",\r\n\t\t\tcns = this.tree.options.classNames;\r\n\r\n\t\tif( tcn.indexOf(cns.title) >= 0 ){\r\n\t\t\treturn \"title\";\r\n\t\t}else if( tcn.indexOf(cns.expander) >= 0 ){\r\n\t\t\treturn \"expander\";\r\n\t\t}else if( tcn.indexOf(cns.checkbox) >= 0 || tcn.indexOf(cns.radio) >= 0 ){\r\n\t\t\treturn \"checkbox\";\r\n\t\t}else if( tcn.indexOf(cns.nodeIcon) >= 0 ){\r\n\t\t\treturn \"icon\";\r\n\t\t}else if( tcn.indexOf(cns.empty) >= 0 || tcn.indexOf(cns.vline) >= 0 || tcn.indexOf(cns.connector) >= 0 ){\r\n\t\t\treturn \"prefix\";\r\n\t\t}else if( tcn.indexOf(cns.node) >= 0 ){\r\n\t\t\t// FIX issue #93\r\n\t\t\treturn this._getTypeForOuterNodeEvent(event);\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\r\n\tisVisible: function() {\r\n\t\t// Return true, if all parents are expanded.\r\n\t\tvar parents = this._parentList(true, false);\r\n\t\tfor(var i=0, l=parents.length; i<l; i++){\r\n\t\t\tif( ! parents[i].bExpanded ){ return false; }\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\tmakeVisible: function() {\r\n\t\t// Make sure, all parents are expanded\r\n\t\tvar parents = this._parentList(true, false);\r\n\t\tfor(var i=0, l=parents.length; i<l; i++){\r\n\t\t\tparents[i]._expand(true);\r\n\t\t}\r\n\t},\r\n\r\n\tfocus: function() {\r\n\t\t// TODO: check, if we already have focus\r\n//      this.tree.logDebug(\"dtnode.focus(): %o\", this);\r\n\t\tthis.makeVisible();\r\n\t\ttry {\r\n\t\t\t$(this.span).find(\">a\").focus();\r\n\t\t} catch(e) { }\r\n\t},\r\n\r\n\tisFocused: function() {\r\n\t\treturn (this.tree.tnFocused === this);\r\n\t},\r\n\r\n\t_activate: function(flag, fireEvents) {\r\n\t\t// (De)Activate - but not focus - this node.\r\n\t\tthis.tree.logDebug(\"dtnode._activate(%o, fireEvents=%o) - %o\", flag, fireEvents, this);\r\n\t\tvar opts = this.tree.options;\r\n\t\tif( this.data.isStatusNode ){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif( flag ) {\r\n\t\t\tif ( fireEvents && opts.onQueryActivate && opts.onQueryActivate.call(this.tree, flag, this) === false ){\r\n\t\t\t\treturn; // Callback returned false\r\n\t\t\t}\r\n\t\t\t// Activate\r\n\t\t\tif( this.tree.activeNode ) {\r\n\t\t\t\tif( this.tree.activeNode === this ){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.tree.activeNode.deactivate();\r\n\t\t\t}\r\n\t\t\tif( opts.activeVisible ){\r\n\t\t\t\tthis.makeVisible();\r\n\t\t\t}\r\n\t\t\tthis.tree.activeNode = this;\r\n\t\t\tif( opts.persist ){\r\n\t\t\t\t$.cookie(opts.cookieId + \"-active\", this.data.key, opts.cookie);\r\n\t\t\t}\r\n\t\t\tthis.tree.persistence.activeKey = this.data.key;\r\n\t\t\t$(this.span).addClass(opts.classNames.active);\r\n\t\t\tif ( fireEvents && opts.onActivate ){\r\n\t\t\t\topts.onActivate.call(this.tree, this);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Deactivate\r\n\t\t\tif( this.tree.activeNode === this ) {\r\n\t\t\t\tif ( opts.onQueryActivate && opts.onQueryActivate.call(this.tree, false, this) === false ){\r\n\t\t\t\t\treturn; // Callback returned false\r\n\t\t\t\t}\r\n\t\t\t\t$(this.span).removeClass(opts.classNames.active);\r\n\t\t\t\tif( opts.persist ) {\r\n\t\t\t\t\t// Note: we don't pass null, but ''. So the cookie is not deleted.\r\n\t\t\t\t\t// If we pass null, we also have to pass a COPY of opts, because $cookie will override opts.expires (issue 84)\r\n\t\t\t\t\t$.cookie(opts.cookieId + \"-active\", \"\", opts.cookie);\r\n\t\t\t\t}\r\n\t\t\t\tthis.tree.persistence.activeKey = null;\r\n\t\t\t\tthis.tree.activeNode = null;\r\n\t\t\t\tif ( fireEvents && opts.onDeactivate ){\r\n\t\t\t\t\topts.onDeactivate.call(this.tree, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tactivate: function() {\r\n\t\t// Select - but not focus - this node.\r\n//      this.tree.logDebug(\"dtnode.activate(): %o\", this);\r\n\t\tthis._activate(true, true);\r\n\t},\r\n\r\n\tactivateSilently: function() {\r\n\t\tthis._activate(true, false);\r\n\t},\r\n\r\n\tdeactivate: function() {\r\n//      this.tree.logDebug(\"dtnode.deactivate(): %o\", this);\r\n\t\tthis._activate(false, true);\r\n\t},\r\n\r\n\tisActive: function() {\r\n\t\treturn (this.tree.activeNode === this);\r\n\t},\r\n\r\n\t_userActivate: function() {\r\n\t\t// Handle user click / [space] / [enter], according to clickFolderMode.\r\n\t\tvar activate = true;\r\n\t\tvar expand = false;\r\n\t\tif ( this.data.isFolder ) {\r\n\t\t\tswitch( this.tree.options.clickFolderMode ) {\r\n\t\t\tcase 2:\r\n\t\t\t\tactivate = false;\r\n\t\t\t\texpand = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tactivate = expand = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( this.parent === null ) {\r\n\t\t\texpand = false;\r\n\t\t}\r\n\t\tif( expand ) {\r\n\t\t\tthis.toggleExpand();\r\n\t\t\tthis.focus();\r\n\t\t}\r\n\t\tif( activate ) {\r\n\t\t\tthis.activate();\r\n\t\t}\r\n\t},\r\n\r\n\t_setSubSel: function(hasSubSel) {\r\n\t\tif( hasSubSel ) {\r\n\t\t\tthis.hasSubSel = true;\r\n\t\t\t$(this.span).addClass(this.tree.options.classNames.partsel);\r\n\t\t} else {\r\n\t\t\tthis.hasSubSel = false;\r\n\t\t\t$(this.span).removeClass(this.tree.options.classNames.partsel);\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t * Fix selection and partsel status, of parent nodes, according to current status of\r\n\t * end nodes.\r\n\t */\r\n\t_updatePartSelectionState: function() {\r\n//      alert(\"_updatePartSelectionState \" + this);\r\n//      this.tree.logDebug(\"_updatePartSelectionState() - %o\", this);\r\n\t\tvar sel;\r\n\t\t// Return `true` or `false` for end nodes and remove part-sel flag\r\n\t\tif( ! this.hasChildren() ){\r\n\t\t\tsel = (this.bSelected && !this.data.unselectable && !this.data.isStatusNode);\r\n\t\t\tthis._setSubSel(false);\r\n\t\t\treturn sel;\r\n\t\t}\r\n\t\t// Return `true`, `false`, or `undefined` for parent nodes\r\n\t\tvar i, l,\r\n\t\t\tcl = this.childList,\r\n\t\t\tallSelected = true,\r\n\t\t\tallDeselected = true;\r\n\t\tfor(i=0, l=cl.length; i<l;  i++) {\r\n\t\t\tvar n = cl[i],\r\n\t\t\t\ts = n._updatePartSelectionState();\r\n\t\t\tif( s !== false){\r\n\t\t\t\tallDeselected = false;\r\n\t\t\t}\r\n\t\t\tif( s !== true){\r\n\t\t\t\tallSelected = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( allSelected ){\r\n\t\t\tsel = true;\r\n\t\t} else if ( allDeselected ){\r\n\t\t\tsel = false;\r\n\t\t} else {\r\n\t\t\tsel = undefined;\r\n\t\t}\r\n\t\tthis._setSubSel(sel === undefined);\r\n\t\tthis.bSelected = (sel === true);\r\n\t\treturn sel;\r\n\t},\r\n\r\n\t/**\r\n\t * Fix selection status, after this node was (de)selected in multi-hier mode.\r\n\t * This includes (de)selecting all children.\r\n\t */\r\n\t_fixSelectionState: function() {\r\n//      alert(\"_fixSelectionState \" + this);\r\n//      this.tree.logDebug(\"_fixSelectionState(%s) - %o\", this.bSelected, this);\r\n\t\tvar p, i, l;\r\n\t\tif( this.bSelected ) {\r\n\t\t\t// Select all children\r\n\t\t\tthis.visit(function(node){\r\n\t\t\t\tnode.parent._setSubSel(true);\r\n\t\t\t\tif(!node.data.unselectable){\r\n\t\t\t\t\tnode._select(true, false, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// Select parents, if all children are selected\r\n\t\t\tp = this.parent;\r\n\t\t\twhile( p ) {\r\n\t\t\t\tp._setSubSel(true);\r\n\t\t\t\tvar allChildsSelected = true;\r\n\t\t\t\tfor(i=0, l=p.childList.length; i<l;  i++) {\r\n\t\t\t\t\tvar n = p.childList[i];\r\n\t\t\t\t\tif( !n.bSelected && !n.data.isStatusNode && !n.data.unselectable) {\r\n\t\t\t\t\t// issue 305 proposes this:\r\n//                  if( !n.bSelected && !n.data.isStatusNode ) {\r\n\t\t\t\t\t\tallChildsSelected = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif( allChildsSelected ){\r\n\t\t\t\t\tp._select(true, false, false);\r\n\t\t\t\t}\r\n\t\t\t\tp = p.parent;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Deselect all children\r\n\t\t\tthis._setSubSel(false);\r\n\t\t\tthis.visit(function(node){\r\n\t\t\t\tnode._setSubSel(false);\r\n\t\t\t\tnode._select(false, false, false);\r\n\t\t\t});\r\n\t\t\t// Deselect parents, and recalc hasSubSel\r\n\t\t\tp = this.parent;\r\n\t\t\twhile( p ) {\r\n\t\t\t\tp._select(false, false, false);\r\n\t\t\t\tvar isPartSel = false;\r\n\t\t\t\tfor(i=0, l=p.childList.length; i<l;  i++) {\r\n\t\t\t\t\tif( p.childList[i].bSelected || p.childList[i].hasSubSel ) {\r\n\t\t\t\t\t\tisPartSel = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tp._setSubSel(isPartSel);\r\n\t\t\t\tp = p.parent;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_select: function(sel, fireEvents, deep) {\r\n\t\t// Select - but not focus - this node.\r\n//      this.tree.logDebug(\"dtnode._select(%o) - %o\", sel, this);\r\n\t\tvar opts = this.tree.options;\r\n\t\tif( this.data.isStatusNode ){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//\r\n\t\tif( this.bSelected === sel ) {\r\n//          this.tree.logDebug(\"dtnode._select(%o) IGNORED - %o\", sel, this);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Allow event listener to abort selection\r\n\t\tif ( fireEvents && opts.onQuerySelect && opts.onQuerySelect.call(this.tree, sel, this) === false ){\r\n\t\t\treturn; // Callback returned false\r\n\t\t}\r\n\t\t// Force single-selection\r\n\t\tif( opts.selectMode==1 && sel ) {\r\n\t\t\tthis.tree.visit(function(node){\r\n\t\t\t\tif( node.bSelected ) {\r\n\t\t\t\t\t// Deselect; assuming that in selectMode:1 there's max. one other selected node\r\n\t\t\t\t\tnode._select(false, false, false);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.bSelected = sel;\r\n//        this.tree._changeNodeList(\"select\", this, sel);\r\n\r\n\t\tif( sel ) {\r\n\t\t\tif( opts.persist ){\r\n\t\t\t\tthis.tree.persistence.addSelect(this.data.key);\r\n\t\t\t}\r\n\t\t\t$(this.span).addClass(opts.classNames.selected);\r\n\r\n\t\t\tif( deep && opts.selectMode === 3 ){\r\n\t\t\t\tthis._fixSelectionState();\r\n\t\t\t}\r\n\t\t\tif ( fireEvents && opts.onSelect ){\r\n\t\t\t\topts.onSelect.call(this.tree, true, this);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( opts.persist ){\r\n\t\t\t\tthis.tree.persistence.clearSelect(this.data.key);\r\n\t\t\t}\r\n\t\t\t$(this.span).removeClass(opts.classNames.selected);\r\n\r\n\t\t\tif( deep && opts.selectMode === 3 ){\r\n\t\t\t\tthis._fixSelectionState();\r\n\t\t\t}\r\n\t\t\tif ( fireEvents && opts.onSelect ){\r\n\t\t\t\topts.onSelect.call(this.tree, false, this);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tselect: function(sel) {\r\n\t\t// Select - but not focus - this node.\r\n//      this.tree.logDebug(\"dtnode.select(%o) - %o\", sel, this);\r\n\t\tif( this.data.unselectable ){\r\n\t\t\treturn this.bSelected;\r\n\t\t}\r\n\t\treturn this._select(sel!==false, true, true);\r\n\t},\r\n\r\n\ttoggleSelect: function() {\r\n//      this.tree.logDebug(\"dtnode.toggleSelect() - %o\", this);\r\n\t\treturn this.select(!this.bSelected);\r\n\t},\r\n\r\n\tisSelected: function() {\r\n\t\treturn this.bSelected;\r\n\t},\r\n\r\n\tisLazy: function() {\r\n\t\treturn !!this.data.isLazy;\r\n\t},\r\n\r\n\t_loadContent: function() {\r\n\t\ttry {\r\n\t\t\tvar opts = this.tree.options;\r\n\t\t\tthis.tree.logDebug(\"_loadContent: start - %o\", this);\r\n\t\t\tthis.setLazyNodeStatus(DTNodeStatus_Loading);\r\n\t\t\tif( true === opts.onLazyRead.call(this.tree, this) ) {\r\n\t\t\t\t// If function returns 'true', we assume that the loading is done:\r\n\t\t\t\tthis.setLazyNodeStatus(DTNodeStatus_Ok);\r\n\t\t\t\t// Otherwise (i.e. if the loading was started as an asynchronous process)\r\n\t\t\t\t// the onLazyRead(dtnode) handler is expected to call dtnode.setLazyNodeStatus(DTNodeStatus_Ok/_Error) when done.\r\n\t\t\t\tthis.tree.logDebug(\"_loadContent: succeeded - %o\", this);\r\n\t\t\t}\r\n\t\t} catch(e) {\r\n\t\t\tthis.tree.logWarning(\"_loadContent: failed - %o\", e);\r\n\t\t\tthis.setLazyNodeStatus(DTNodeStatus_Error, {tooltip: \"\"+e});\r\n\t\t}\r\n\t},\r\n\r\n\t_expand: function(bExpand, forceSync) {\r\n\t\tif( this.bExpanded === bExpand ) {\r\n\t\t\tthis.tree.logDebug(\"dtnode._expand(%o) IGNORED - %o\", bExpand, this);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.tree.logDebug(\"dtnode._expand(%o) - %o\", bExpand, this);\r\n\t\tvar opts = this.tree.options;\r\n\t\tif( !bExpand && this.getLevel() < opts.minExpandLevel ) {\r\n\t\t\tthis.tree.logDebug(\"dtnode._expand(%o) prevented collapse - %o\", bExpand, this);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( opts.onQueryExpand && opts.onQueryExpand.call(this.tree, bExpand, this) === false ){\r\n\t\t\treturn; // Callback returned false\r\n\t\t}\r\n\t\tthis.bExpanded = bExpand;\r\n\r\n\t\t// Persist expand state\r\n\t\tif( opts.persist ) {\r\n\t\t\tif( bExpand ){\r\n\t\t\t\tthis.tree.persistence.addExpand(this.data.key);\r\n\t\t\t}else{\r\n\t\t\t\tthis.tree.persistence.clearExpand(this.data.key);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Do not apply animations in init phase, or before lazy-loading\r\n\t\tvar allowEffects = !(this.data.isLazy && this.childList === null)\r\n\t\t\t&& !this._isLoading\r\n\t\t\t&& !forceSync;\r\n\t\tthis.render(allowEffects);\r\n\r\n\t\t// Auto-collapse mode: collapse all siblings\r\n\t\tif( this.bExpanded && this.parent && opts.autoCollapse ) {\r\n\t\t\tvar parents = this._parentList(false, true);\r\n\t\t\tfor(var i=0, l=parents.length; i<l; i++){\r\n\t\t\t\tparents[i].collapseSiblings();\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If the currently active node is now hidden, deactivate it\r\n\t\tif( opts.activeVisible && this.tree.activeNode && ! this.tree.activeNode.isVisible() ) {\r\n\t\t\tthis.tree.activeNode.deactivate();\r\n\t\t}\r\n\t\t// Expanding a lazy node: set 'loading...' and call callback\r\n\t\tif( bExpand && this.data.isLazy && this.childList === null && !this._isLoading ) {\r\n\t\t\tthis._loadContent();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( opts.onExpand ){\r\n\t\t\topts.onExpand.call(this.tree, bExpand, this);\r\n\t\t}\r\n\t},\r\n\r\n\tisExpanded: function() {\r\n\t\treturn this.bExpanded;\r\n\t},\r\n\r\n\texpand: function(flag) {\r\n\t\tflag = (flag !== false);\r\n\t\tif( !this.childList && !this.data.isLazy && flag ){\r\n\t\t\treturn; // Prevent expanding empty nodes\r\n\t\t} else if( this.parent === null && !flag ){\r\n\t\t\treturn; // Prevent collapsing the root\r\n\t\t}\r\n\t\tthis._expand(flag);\r\n\t},\r\n\r\n\tscheduleAction: function(mode, ms) {\r\n\t\t/** Schedule activity for delayed execution (cancel any pending request).\r\n\t\t *  scheduleAction('cancel') will cancel the request.\r\n\t\t */\r\n\t\tif( this.tree.timer ) {\r\n\t\t\tclearTimeout(this.tree.timer);\r\n\t\t\tthis.tree.logDebug(\"clearTimeout(%o)\", this.tree.timer);\r\n\t\t}\r\n\t\tvar self = this; // required for closures\r\n\t\tswitch (mode) {\r\n\t\tcase \"cancel\":\r\n\t\t\t// Simply made sure that timer was cleared\r\n\t\t\tbreak;\r\n\t\tcase \"expand\":\r\n\t\t\tthis.tree.timer = setTimeout(function(){\r\n\t\t\t\tself.tree.logDebug(\"setTimeout: trigger expand\");\r\n\t\t\t\tself.expand(true);\r\n\t\t\t}, ms);\r\n\t\t\tbreak;\r\n\t\tcase \"activate\":\r\n\t\t\tthis.tree.timer = setTimeout(function(){\r\n\t\t\t\tself.tree.logDebug(\"setTimeout: trigger activate\");\r\n\t\t\t\tself.activate();\r\n\t\t\t}, ms);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow \"Invalid mode \" + mode;\r\n\t\t}\r\n\t\tthis.tree.logDebug(\"setTimeout(%s, %s): %s\", mode, ms, this.tree.timer);\r\n\t},\r\n\r\n\ttoggleExpand: function() {\r\n\t\tthis.expand(!this.bExpanded);\r\n\t},\r\n\r\n\tcollapseSiblings: function() {\r\n\t\tif( this.parent === null ){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar ac = this.parent.childList;\r\n\t\tfor (var i=0, l=ac.length; i<l; i++) {\r\n\t\t\tif ( ac[i] !== this && ac[i].bExpanded ){\r\n\t\t\t\tac[i]._expand(false);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_onClick: function(event) {\r\n//      this.tree.logDebug(\"dtnode.onClick(\" + event.type + \"): dtnode:\" + this + \", button:\" + event.button + \", which: \" + event.which);\r\n\t\tvar targetType = this.getEventTargetType(event);\r\n\t\tif( targetType === \"expander\" ) {\r\n\t\t\t// Clicking the expander icon always expands/collapses\r\n\t\t\tthis.toggleExpand();\r\n\t\t\tthis.focus(); // issue 95\r\n\t\t} else if( targetType === \"checkbox\" ) {\r\n\t\t\t// Clicking the checkbox always (de)selects\r\n\t\t\tthis.toggleSelect();\r\n\t\t\tthis.focus(); // issue 95\r\n\t\t} else {\r\n\t\t\tthis._userActivate();\r\n\t\t\tvar aTag = this.span.getElementsByTagName(\"a\");\r\n\t\t\tif(aTag[0]){\r\n\t\t\t\t// issue 154, 313\r\n\t\t\t\tif(!(BROWSER.msie && parseInt(BROWSER.version, 10) < 9)){\r\n\t\t\t\t\taTag[0].focus();\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// 'noLink' option was set\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Make sure that clicks stop, otherwise <a href='#'> jumps to the top\r\n\t\tevent.preventDefault();\r\n\t},\r\n\r\n\t_onDblClick: function(event) {\r\n//      this.tree.logDebug(\"dtnode.onDblClick(\" + event.type + \"): dtnode:\" + this + \", button:\" + event.button + \", which: \" + event.which);\r\n\t},\r\n\r\n\t_onKeydown: function(event) {\r\n//      this.tree.logDebug(\"dtnode.onKeydown(\" + event.type + \"): dtnode:\" + this + \", charCode:\" + event.charCode + \", keyCode: \" + event.keyCode + \", which: \" + event.which);\r\n\t\tvar handled = true,\r\n\t\t\tsib;\r\n//      alert(\"keyDown\" + event.which);\r\n\r\n\t\tswitch( event.which ) {\r\n\t\t\t// charCodes:\r\n//          case 43: // '+'\r\n\t\t\tcase 107: // '+'\r\n\t\t\tcase 187: // '+' @ Chrome, Safari\r\n\t\t\t\tif( !this.bExpanded ){ this.toggleExpand(); }\r\n\t\t\t\tbreak;\r\n//          case 45: // '-'\r\n\t\t\tcase 109: // '-'\r\n\t\t\tcase 189: // '+' @ Chrome, Safari\r\n\t\t\t\tif( this.bExpanded ){ this.toggleExpand(); }\r\n\t\t\t\tbreak;\r\n\t\t\t//~ case 42: // '*'\r\n\t\t\t\t//~ break;\r\n\t\t\t//~ case 47: // '/'\r\n\t\t\t\t//~ break;\r\n\t\t\t// case 13: // <enter>\r\n\t\t\t\t// <enter> on a focused <a> tag seems to generate a click-event.\r\n\t\t\t\t// this._userActivate();\r\n\t\t\t\t// break;\r\n\t\t\tcase 32: // <space>\r\n\t\t\t\tthis._userActivate();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8: // <backspace>\r\n\t\t\t\tif( this.parent ){\r\n\t\t\t\t\tthis.parent.focus();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 37: // <left>\r\n\t\t\t\tif( this.bExpanded ) {\r\n\t\t\t\t\tthis.toggleExpand();\r\n\t\t\t\t\tthis.focus();\r\n//              } else if( this.parent && (this.tree.options.rootVisible || this.parent.parent) ) {\r\n\t\t\t\t} else if( this.parent && this.parent.parent ) {\r\n\t\t\t\t\tthis.parent.focus();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39: // <right>\r\n\t\t\t\tif( !this.bExpanded && (this.childList || this.data.isLazy) ) {\r\n\t\t\t\t\tthis.toggleExpand();\r\n\t\t\t\t\tthis.focus();\r\n\t\t\t\t} else if( this.childList ) {\r\n\t\t\t\t\tthis.childList[0].focus();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38: // <up>\r\n\t\t\t\tsib = this.getPrevSibling();\r\n\t\t\t\twhile( sib && sib.bExpanded && sib.childList ){\r\n\t\t\t\t\tsib = sib.childList[sib.childList.length-1];\r\n\t\t\t\t}\r\n//              if( !sib && this.parent && (this.tree.options.rootVisible || this.parent.parent) )\r\n\t\t\t\tif( !sib && this.parent && this.parent.parent ){\r\n\t\t\t\t\tsib = this.parent;\r\n\t\t\t\t}\r\n\t\t\t\tif( sib ){\r\n\t\t\t\t\tsib.focus();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40: // <down>\r\n\t\t\t\tif( this.bExpanded && this.childList ) {\r\n\t\t\t\t\tsib = this.childList[0];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar parents = this._parentList(false, true);\r\n\t\t\t\t\tfor(var i=parents.length-1; i>=0; i--) {\r\n\t\t\t\t\t\tsib = parents[i].getNextSibling();\r\n\t\t\t\t\t\tif( sib ){ break; }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif( sib ){\r\n\t\t\t\t\tsib.focus();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\thandled = false;\r\n\t\t}\r\n\t\t// Return false, if handled, to prevent default processing\r\n//      return !handled;\r\n\t\tif(handled){\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t},\r\n\r\n\t_onKeypress: function(event) {\r\n\t\t// onKeypress is only hooked to allow user callbacks.\r\n\t\t// We don't process it, because IE and Safari don't fire keypress for cursor keys.\r\n//      this.tree.logDebug(\"dtnode.onKeypress(\" + event.type + \"): dtnode:\" + this + \", charCode:\" + event.charCode + \", keyCode: \" + event.keyCode + \", which: \" + event.which);\r\n\t},\r\n\r\n\t_onFocus: function(event) {\r\n\t\t// Handles blur and focus events.\r\n//      this.tree.logDebug(\"dtnode._onFocus(%o): %o\", event, this);\r\n\t\tvar opts = this.tree.options;\r\n\t\tif ( event.type == \"blur\" || event.type == \"focusout\" ) {\r\n\t\t\tif ( opts.onBlur ){\r\n\t\t\t\topts.onBlur.call(this.tree, this);\r\n\t\t\t}\r\n\t\t\tif( this.tree.tnFocused ){\r\n\t\t\t\t$(this.tree.tnFocused.span).removeClass(opts.classNames.focused);\r\n\t\t\t}\r\n\t\t\tthis.tree.tnFocused = null;\r\n\t\t\tif( opts.persist ){\r\n\t\t\t\t$.cookie(opts.cookieId + \"-focus\", \"\", opts.cookie);\r\n\t\t\t}\r\n\t\t} else if ( event.type==\"focus\" || event.type==\"focusin\") {\r\n\t\t\t// Fix: sometimes the blur event is not generated\r\n\t\t\tif( this.tree.tnFocused && this.tree.tnFocused !== this ) {\r\n\t\t\t\tthis.tree.logDebug(\"dtnode.onFocus: out of sync: curFocus: %o\", this.tree.tnFocused);\r\n\t\t\t\t$(this.tree.tnFocused.span).removeClass(opts.classNames.focused);\r\n\t\t\t}\r\n\t\t\tthis.tree.tnFocused = this;\r\n\t\t\tif ( opts.onFocus ){\r\n\t\t\t\topts.onFocus.call(this.tree, this);\r\n\t\t\t}\r\n\t\t\t$(this.tree.tnFocused.span).addClass(opts.classNames.focused);\r\n\t\t\tif( opts.persist ){\r\n\t\t\t\t$.cookie(opts.cookieId + \"-focus\", this.data.key, opts.cookie);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// TODO: return anything?\r\n//      return false;\r\n\t},\r\n\r\n\tvisit: function(fn, includeSelf) {\r\n\t\t// Call fn(node) for all child nodes. Stop iteration, if fn() returns false.\r\n\t\tvar res = true;\r\n\t\tif( includeSelf === true ) {\r\n\t\t\tres = fn(this);\r\n\t\t\tif( res === false || res === \"skip\" ){\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.childList){\r\n\t\t\tfor(var i=0, l=this.childList.length; i<l; i++){\r\n\t\t\t\tres = this.childList[i].visit(fn, true);\r\n\t\t\t\tif( res === false ){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t},\r\n\r\n\tvisitParents: function(fn, includeSelf) {\r\n\t\t// Visit parent nodes (bottom up)\r\n\t\tif(includeSelf && fn(this) === false){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar p = this.parent;\r\n\t\twhile( p ) {\r\n\t\t\tif(fn(p) === false){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\tremove: function() {\r\n\t\t// Remove this node\r\n//      this.tree.logDebug (\"%s.remove()\", this);\r\n\t\tif ( this === this.tree.root ){\r\n\t\t\tthrow \"Cannot remove system root\";\r\n\t\t}\r\n\t\treturn this.parent.removeChild(this);\r\n\t},\r\n\r\n\tremoveChild: function(tn) {\r\n\t\t// Remove tn from list of direct children.\r\n\t\tvar ac = this.childList;\r\n\t\tif( ac.length === 1 ) {\r\n\t\t\tif( tn !== ac[0] ){\r\n\t\t\t\tthrow \"removeChild: invalid child\";\r\n\t\t\t}\r\n\t\t\treturn this.removeChildren();\r\n\t\t}\r\n\t\tif( tn === this.tree.activeNode ){\r\n\t\t\ttn.deactivate();\r\n\t\t}\r\n\t\tif( this.tree.options.persist ) {\r\n\t\t\tif( tn.bSelected ){\r\n\t\t\t\tthis.tree.persistence.clearSelect(tn.data.key);\r\n\t\t\t}\r\n\t\t\tif ( tn.bExpanded ){\r\n\t\t\t\tthis.tree.persistence.clearExpand(tn.data.key);\r\n\t\t\t}\r\n\t\t}\r\n\t\ttn.removeChildren(true);\r\n\t\tif(this.ul && tn.li\t){\r\n//          $(\"li\", $(this.ul)).remove(); // issue 399\r\n\t\t\tthis.ul.removeChild(tn.li); // issue 402\r\n\t\t}\r\n\t\tfor(var i=0, l=ac.length; i<l; i++) {\r\n\t\t\tif( ac[i] === tn ) {\r\n\t\t\t\tthis.childList.splice(i, 1);\r\n//              delete tn;  // JSLint complained\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tremoveChildren: function(isRecursiveCall, retainPersistence) {\r\n\t\t// Remove all child nodes (more efficiently than recursive remove())\r\n\t\tthis.tree.logDebug(\"%s.removeChildren(%o)\", this, isRecursiveCall);\r\n\t\tvar tree = this.tree;\r\n\t\tvar ac = this.childList;\r\n\t\tif( ac ) {\r\n\t\t\tfor(var i=0, l=ac.length; i<l; i++) {\r\n\t\t\t\tvar tn = ac[i];\r\n\t\t\t\tif ( tn === tree.activeNode && !retainPersistence ){\r\n\t\t\t\t\ttn.deactivate();\r\n\t\t\t\t}\r\n\t\t\t\tif( this.tree.options.persist && !retainPersistence ) {\r\n\t\t\t\t\tif( tn.bSelected ){\r\n\t\t\t\t\t\tthis.tree.persistence.clearSelect(tn.data.key);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( tn.bExpanded ){\r\n\t\t\t\t\t\tthis.tree.persistence.clearExpand(tn.data.key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttn.removeChildren(true, retainPersistence);\r\n\t\t\t\tif(this.ul && tn.li){\r\n//                  this.ul.removeChild(tn.li);\r\n\t\t\t\t\t$(\"li\", $(this.ul)).remove(); // issue 231\r\n\t\t\t\t}\r\n//              delete tn;  JSLint complained\r\n\t\t\t}\r\n\t\t\t// Set to 'null' which is interpreted as 'not yet loaded' for lazy\r\n\t\t\t// nodes\r\n\t\t\tthis.childList = null;\r\n\t\t}\r\n\t\tif( ! isRecursiveCall ) {\r\n//          this._expand(false);\r\n//          this.isRead = false;\r\n\t\t\tthis._isLoading = false;\r\n\t\t\tthis.render();\r\n\t\t}\r\n\t},\r\n\r\n\tsetTitle: function(title) {\r\n\t\tthis.fromDict({title: title});\r\n\t},\r\n\r\n\treload: function(force) {\r\n\t\tthrow \"Use reloadChildren() instead\";\r\n\t},\r\n\r\n\treloadChildren: function(callback) {\r\n\t\t// Reload lazy content (expansion state is maintained).\r\n\t\tif( this.parent === null ){\r\n\t\t\tthrow \"Use tree.reload() instead\";\r\n\t\t}else if( ! this.data.isLazy ){\r\n\t\t\tthrow \"node.reloadChildren() requires lazy nodes.\";\r\n\t\t}\r\n\t\t// appendAjax triggers 'nodeLoaded' event.\r\n\t\t// We listen to this, if a callback was passed to reloadChildren\r\n\t\tif(callback){\r\n\t\t\tvar self = this;\r\n\t\t\tvar eventType = \"nodeLoaded.dynatree.\" + this.tree.$tree.attr(\"id\")\r\n\t\t\t\t+ \".\" + this.data.key;\r\n\t\t\tthis.tree.$tree.bind(eventType, function(e, node, isOk){\r\n\t\t\t\tself.tree.$tree.unbind(eventType);\r\n\t\t\t\tself.tree.logDebug(\"loaded %o, %o, %o\", e, node, isOk);\r\n\t\t\t\tif(node !== self){\r\n\t\t\t\t\tthrow \"got invalid load event\";\r\n\t\t\t\t}\r\n\t\t\t\tcallback.call(self.tree, node, isOk);\r\n\t\t\t});\r\n\t\t}\r\n\t\t// The expansion state is maintained\r\n\t\tthis.removeChildren();\r\n\t\tthis._loadContent();\r\n//      if( this.bExpanded ) {\r\n//          // Remove children first, to prevent effects being applied\r\n//          this.removeChildren();\r\n//          // then force re-expand to trigger lazy loading\r\n////            this.expand(false);\r\n////            this.expand(true);\r\n//          this._loadContent();\r\n//      } else {\r\n//          this.removeChildren();\r\n//          this._loadContent();\r\n//      }\r\n\t},\r\n\r\n\t/**\r\n\t * Make sure the node with a given key path is available in the tree.\r\n\t */\r\n\t_loadKeyPath: function(keyPath, callback) {\r\n\t\tvar tree = this.tree;\r\n\t\ttree.logDebug(\"%s._loadKeyPath(%s)\", this, keyPath);\r\n\t\tif(keyPath === \"\"){\r\n\t\t\tthrow \"Key path must not be empty\";\r\n\t\t}\r\n\t\tvar segList = keyPath.split(tree.options.keyPathSeparator);\r\n\t\tif(segList[0] === \"\"){\r\n\t\t\tthrow \"Key path must be relative (don't start with '/')\";\r\n\t\t}\r\n\t\tvar seg = segList.shift();\r\n\t\tif(this.childList){\r\n\t\t\tfor(var i=0, l=this.childList.length; i < l; i++){\r\n\t\t\t\tvar child = this.childList[i];\r\n\t\t\t\tif( child.data.key === seg ){\r\n\t\t\t\t\tif(segList.length === 0) {\r\n\t\t\t\t\t\t// Found the end node\r\n\t\t\t\t\t\tcallback.call(tree, child, \"ok\");\r\n\r\n\t\t\t\t\t}else if(child.data.isLazy && (child.childList === null || child.childList === undefined)){\r\n\t\t\t\t\t\ttree.logDebug(\"%s._loadKeyPath(%s) -> reloading %s...\", this, keyPath, child);\r\n\t\t\t\t\t\tvar self = this;\r\n\t\t\t\t\t\t// Note: this line gives a JSLint warning (Don't make functions within a loop)\r\n\t\t\t\t\t\t/*jshint loopfunc:true */\r\n\t\t\t\t\t\tchild.reloadChildren(function(node, isOk){\r\n\t\t\t\t\t\t\t// After loading, look for direct child with that key\r\n\t\t\t\t\t\t\tif(isOk){\r\n\t\t\t\t\t\t\t\ttree.logDebug(\"%s._loadKeyPath(%s) -> reloaded %s.\", node, keyPath, node);\r\n\t\t\t\t\t\t\t\tcallback.call(tree, child, \"loaded\");\r\n\t\t\t\t\t\t\t\tnode._loadKeyPath(segList.join(tree.options.keyPathSeparator), callback);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\ttree.logWarning(\"%s._loadKeyPath(%s) -> reloadChildren() failed.\", self, keyPath);\r\n\t\t\t\t\t\t\t\tcallback.call(tree, child, \"error\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// we can ignore it, since it will only be exectuted once, the the loop is ended\r\n\t\t\t\t\t\t// See also http://stackoverflow.com/questions/3037598/how-to-get-around-the-jslint-error-dont-make-functions-within-a-loop\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcallback.call(tree, child, \"loaded\");\r\n\t\t\t\t\t\t// Look for direct child with that key\r\n\t\t\t\t\t\tchild._loadKeyPath(segList.join(tree.options.keyPathSeparator), callback);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Could not find key\r\n\t\t// Callback params: child: undefined, the segment, isEndNode (segList.length === 0)\r\n\t\tcallback.call(tree, undefined, \"notfound\", seg, segList.length === 0);\r\n\t\ttree.logWarning(\"Node not found: \" + seg);\r\n\t\treturn;\r\n\t},\r\n\r\n\tresetLazy: function() {\r\n\t\t// Discard lazy content.\r\n\t\tif( this.parent === null ){\r\n\t\t\tthrow \"Use tree.reload() instead\";\r\n\t\t}else if( ! this.data.isLazy ){\r\n\t\t\tthrow \"node.resetLazy() requires lazy nodes.\";\r\n\t\t}\r\n\t\tthis.expand(false);\r\n\t\tthis.removeChildren();\r\n\t},\r\n\r\n\t_addChildNode: function(dtnode, beforeNode) {\r\n\t\t/**\r\n\t\t * Internal function to add one single DynatreeNode as a child.\r\n\t\t *\r\n\t\t */\r\n\t\tvar tree = this.tree,\r\n\t\t\topts = tree.options,\r\n\t\t\tpers = tree.persistence;\r\n\r\n//      tree.logDebug(\"%s._addChildNode(%o)\", this, dtnode);\r\n\r\n\t\t// --- Update and fix dtnode attributes if necessary\r\n\t\tdtnode.parent = this;\r\n//      if( beforeNode && (beforeNode.parent !== this || beforeNode === dtnode ) )\r\n//          throw \"<beforeNode> must be another child of <this>\";\r\n\r\n\t\t// --- Add dtnode as a child\r\n\t\tif ( this.childList === null ) {\r\n\t\t\tthis.childList = [];\r\n\t\t} else if( ! beforeNode ) {\r\n\t\t\t// Fix 'lastsib'\r\n\t\t\tif(this.childList.length > 0) {\r\n\t\t\t\t$(this.childList[this.childList.length-1].span).removeClass(opts.classNames.lastsib);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( beforeNode ) {\r\n\t\t\tvar iBefore = $.inArray(beforeNode, this.childList);\r\n\t\t\tif( iBefore < 0 ){\r\n\t\t\t\tthrow \"<beforeNode> must be a child of <this>\";\r\n\t\t\t}\r\n\t\t\tthis.childList.splice(iBefore, 0, dtnode);\r\n\t\t} else {\r\n\t\t\t// Append node\r\n\t\t\tthis.childList.push(dtnode);\r\n\t\t}\r\n\r\n\t\t// --- Handle persistence\r\n\t\t// Initial status is read from cookies, if persistence is active and\r\n\t\t// cookies are already present.\r\n\t\t// Otherwise the status is read from the data attributes and then persisted.\r\n\t\tvar isInitializing = tree.isInitializing();\r\n\t\tif( opts.persist && pers.cookiesFound && isInitializing ) {\r\n\t\t\t// Init status from cookies\r\n//          tree.logDebug(\"init from cookie, pa=%o, dk=%o\", pers.activeKey, dtnode.data.key);\r\n\t\t\tif( pers.activeKey === dtnode.data.key ){\r\n\t\t\t\ttree.activeNode = dtnode;\r\n\t\t\t}\r\n\t\t\tif( pers.focusedKey === dtnode.data.key ){\r\n\t\t\t\ttree.focusNode = dtnode;\r\n\t\t\t}\r\n\t\t\tdtnode.bExpanded = ($.inArray(dtnode.data.key, pers.expandedKeyList) >= 0);\r\n\t\t\tdtnode.bSelected = ($.inArray(dtnode.data.key, pers.selectedKeyList) >= 0);\r\n//          tree.logDebug(\"    key=%o, bSelected=%o\", dtnode.data.key, dtnode.bSelected);\r\n\t\t} else {\r\n\t\t\t// Init status from data (Note: we write the cookies after the init phase)\r\n//          tree.logDebug(\"init from data\");\r\n\t\t\tif( dtnode.data.activate ) {\r\n\t\t\t\ttree.activeNode = dtnode;\r\n\t\t\t\tif( opts.persist ){\r\n\t\t\t\t\tpers.activeKey = dtnode.data.key;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif( dtnode.data.focus ) {\r\n\t\t\t\ttree.focusNode = dtnode;\r\n\t\t\t\tif( opts.persist ){\r\n\t\t\t\t\tpers.focusedKey = dtnode.data.key;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdtnode.bExpanded = ( dtnode.data.expand === true ); // Collapsed by default\r\n\t\t\tif( dtnode.bExpanded && opts.persist ){\r\n\t\t\t\tpers.addExpand(dtnode.data.key);\r\n\t\t\t}\r\n\t\t\tdtnode.bSelected = ( dtnode.data.select === true ); // Deselected by default\r\n/*\r\n\t\t\tDoesn't work, cause pers.selectedKeyList may be null\r\n\t\t\tif( dtnode.bSelected && opts.selectMode==1\r\n\t\t\t\t&& pers.selectedKeyList && pers.selectedKeyList.length>0 ) {\r\n\t\t\t\ttree.logWarning(\"Ignored multi-selection in single-mode for %o\", dtnode);\r\n\t\t\t\tdtnode.bSelected = false; // Fixing bad input data (multi selection for mode:1)\r\n\t\t\t}\r\n*/\r\n\t\t\tif( dtnode.bSelected && opts.persist ){\r\n\t\t\t\tpers.addSelect(dtnode.data.key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Always expand, if it's below minExpandLevel\r\n//      tree.logDebug (\"%s._addChildNode(%o), l=%o\", this, dtnode, dtnode.getLevel());\r\n\t\tif ( opts.minExpandLevel >= dtnode.getLevel() ) {\r\n//          tree.logDebug (\"Force expand for %o\", dtnode);\r\n\t\t\tthis.bExpanded = true;\r\n\t\t}\r\n\r\n\t\t// In multi-hier mode, update the parents selection state\r\n\t\t// issue #82: only if not initializing, because the children may not exist yet\r\n//      if( !dtnode.data.isStatusNode && opts.selectMode==3 && !isInitializing )\r\n//          dtnode._fixSelectionState();\r\n\r\n\t\t// In multi-hier mode, update the parents selection state\r\n\t\tif( dtnode.bSelected && opts.selectMode==3 ) {\r\n\t\t\tvar p = this;\r\n\t\t\twhile( p ) {\r\n\t\t\t\tif( !p.hasSubSel ){\r\n\t\t\t\t\tp._setSubSel(true);\r\n\t\t\t\t}\r\n\t\t\t\tp = p.parent;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// render this node and the new child\r\n\t\tif ( tree.bEnableUpdate ){\r\n\t\t\tthis.render();\r\n\t\t}\r\n\t\treturn dtnode;\r\n\t},\r\n\r\n\taddChild: function(obj, beforeNode) {\r\n\t\t/**\r\n\t\t * Add a node object as child.\r\n\t\t *\r\n\t\t * This should be the only place, where a DynaTreeNode is constructed!\r\n\t\t * (Except for the root node creation in the tree constructor)\r\n\t\t *\r\n\t\t * @param obj A JS object (may be recursive) or an array of those.\r\n\t\t * @param {DynaTreeNode} beforeNode (optional) sibling node.\r\n\t\t *\r\n\t\t * Data format: array of node objects, with optional 'children' attributes.\r\n\t\t * [\r\n\t\t *  { title: \"t1\", isFolder: true, ... }\r\n\t\t *  { title: \"t2\", isFolder: true, ...,\r\n\t\t *      children: [\r\n\t\t *          {title: \"t2.1\", ..},\r\n\t\t *          {..}\r\n\t\t *          ]\r\n\t\t *  }\r\n\t\t * ]\r\n\t\t * A simple object is also accepted instead of an array.\r\n\t\t *\r\n\t\t */\r\n//      this.tree.logDebug(\"%s.addChild(%o, %o)\", this, obj, beforeNode);\r\n\t\tif(typeof(obj) == \"string\"){\r\n\t\t\tthrow \"Invalid data type for \" + obj;\r\n\t\t}else if( !obj || obj.length === 0 ){ // Passed null or undefined or empty array\r\n\t\t\treturn;\r\n\t\t}else if( obj instanceof DynaTreeNode ){\r\n\t\t\treturn this._addChildNode(obj, beforeNode);\r\n\t\t}\r\n\r\n\t\tif( !obj.length ){ // Passed a single data object\r\n\t\t\tobj = [ obj ];\r\n\t\t}\r\n\t\tvar prevFlag = this.tree.enableUpdate(false);\r\n\r\n\t\tvar tnFirst = null;\r\n\t\tfor (var i=0, l=obj.length; i<l; i++) {\r\n\t\t\tvar data = obj[i];\r\n\t\t\tvar dtnode = this._addChildNode(new DynaTreeNode(this, this.tree, data), beforeNode);\r\n\t\t\tif( !tnFirst ){\r\n\t\t\t\ttnFirst = dtnode;\r\n\t\t\t}\r\n\t\t\t// Add child nodes recursively\r\n\t\t\tif( data.children ){\r\n\t\t\t\tdtnode.addChild(data.children, null);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.tree.enableUpdate(prevFlag);\r\n\t\treturn tnFirst;\r\n\t},\r\n\r\n\tappend: function(obj) {\r\n\t\tthis.tree.logWarning(\"node.append() is deprecated (use node.addChild() instead).\");\r\n\t\treturn this.addChild(obj, null);\r\n\t},\r\n\r\n\tappendAjax: function(ajaxOptions) {\r\n\t\tvar self = this;\r\n\t\tthis.removeChildren(false, true);\r\n\t\tthis.setLazyNodeStatus(DTNodeStatus_Loading);\r\n\t\t// Debug feature: force a delay, to simulate slow loading...\r\n\t\tif(ajaxOptions.debugLazyDelay){\r\n\t\t\tvar ms = ajaxOptions.debugLazyDelay;\r\n\t\t\tajaxOptions.debugLazyDelay = 0;\r\n\t\t\tthis.tree.logInfo(\"appendAjax: waiting for debugLazyDelay \" + ms);\r\n\t\t\tsetTimeout(function(){self.appendAjax(ajaxOptions);}, ms);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Ajax option inheritance: $.ajaxSetup < $.ui.dynatree.prototype.options.ajaxDefaults < tree.options.ajaxDefaults < ajaxOptions\r\n\t\tvar orgSuccess = ajaxOptions.success,\r\n\t\t\torgError = ajaxOptions.error,\r\n\t\t\teventType = \"nodeLoaded.dynatree.\" + this.tree.$tree.attr(\"id\") + \".\" + this.data.key;\r\n\t\tvar options = $.extend({}, this.tree.options.ajaxDefaults, ajaxOptions, {\r\n\t\t\tsuccess: function(data, textStatus, jqXHR){\r\n\t\t\t\t// <this> is the request options\r\n//              self.tree.logDebug(\"appendAjax().success\");\r\n\t\t\t\tvar prevPhase = self.tree.phase,\r\n\t\t\t\t\toptions = self.tree.options; // #473\r\n\r\n\t\t\t\tself.tree.phase = \"init\";\r\n\t\t\t\t// postProcess is similar to the standard dataFilter hook,\r\n\t\t\t\t// but it is also called for JSONP\r\n\t\t\t\tif( options.postProcess ){\r\n\t\t\t\t\tdata = options.postProcess.call(this, data, this.dataType);\r\n\t\t\t\t}\r\n\t\t\t\t// Process ASPX WebMethod JSON object inside \"d\" property\r\n\t\t\t\t// http://code.google.com/p/dynatree/issues/detail?id=202\r\n\t\t\t\telse if (data && data.hasOwnProperty(\"d\")) {\r\n\t\t\t\t   data = (typeof data.d) == \"string\" ? $.parseJSON(data.d) : data.d;\r\n\t\t\t\t}\r\n\t\t\t\tif(!$.isArray(data) || data.length !== 0){\r\n\t\t\t\t\tself.addChild(data, null);\r\n\t\t\t\t}\r\n\t\t\t\tself.tree.phase = \"postInit\";\r\n\t\t\t\tif( orgSuccess ){\r\n\t\t\t\t\torgSuccess.call(options, self, data, textStatus);\r\n\t\t\t\t}\r\n\t\t\t\tself.tree.logDebug(\"trigger \" + eventType);\r\n\t\t\t\tself.tree.$tree.trigger(eventType, [self, true]);\r\n\t\t\t\tself.tree.phase = prevPhase;\r\n\t\t\t\t// This should be the last command, so node._isLoading is true\r\n\t\t\t\t// while the callbacks run\r\n\t\t\t\tself.setLazyNodeStatus(DTNodeStatus_Ok);\r\n\t\t\t\tif($.isArray(data) && data.length === 0){\r\n\t\t\t\t\t// Set to [] which is interpreted as 'no children' for lazy\r\n\t\t\t\t\t// nodes\r\n\t\t\t\t\tself.childList = [];\r\n\t\t\t\t\tself.render();\r\n\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\terror: function(jqXHR, textStatus, errorThrown){\r\n\t\t\t\t// <this> is the request options\r\n\t\t\t\tself.tree.logWarning(\"appendAjax failed:\", textStatus, \":\\n\", jqXHR, \"\\n\", errorThrown);\r\n\t\t\t\tif( orgError ){\r\n\t\t\t\t\torgError.call(options, self, jqXHR, textStatus, errorThrown);\r\n\t\t\t\t}\r\n\t\t\t\tself.tree.$tree.trigger(eventType, [self, false]);\r\n\t\t\t\tself.setLazyNodeStatus(DTNodeStatus_Error, {info: textStatus, tooltip: \"\" + errorThrown});\r\n\t\t\t\t}\r\n\t\t});\r\n\t\t$.ajax(options);\r\n\t},\r\n\r\n\tmove: function(targetNode, mode) {\r\n\t\t/**Move this node to targetNode.\r\n\t\t *  mode 'child': append this node as last child of targetNode.\r\n\t\t *                This is the default. To be compatble with the D'n'd\r\n\t\t *                hitMode, we also accept 'over'.\r\n\t\t *  mode 'before': add this node as sibling before targetNode.\r\n\t\t *  mode 'after': add this node as sibling after targetNode.\r\n\t\t */\r\n\t\tvar pos;\r\n\t\tif(this === targetNode){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif( !this.parent  ){\r\n\t\t\tthrow \"Cannot move system root\";\r\n\t\t}\r\n\t\tif(mode === undefined || mode == \"over\"){\r\n\t\t\tmode = \"child\";\r\n\t\t}\r\n\t\tvar prevParent = this.parent;\r\n\t\tvar targetParent = (mode === \"child\") ? targetNode : targetNode.parent;\r\n\t\tif( targetParent.isDescendantOf(this) ){\r\n\t\t\tthrow \"Cannot move a node to it's own descendant\";\r\n\t\t}\r\n\t\t// Unlink this node from current parent\r\n\t\tif( this.parent.childList.length == 1 ) {\r\n\t\t\tthis.parent.childList = this.parent.data.isLazy ? [] : null;\r\n\t\t\tthis.parent.bExpanded = false;\r\n\t\t} else {\r\n\t\t\tpos = $.inArray(this, this.parent.childList);\r\n\t\t\tif( pos < 0 ){\r\n\t\t\t\tthrow \"Internal error\";\r\n\t\t\t}\r\n\t\t\tthis.parent.childList.splice(pos, 1);\r\n\t\t}\r\n\t\t// Remove from source DOM parent\r\n\t\tif(this.parent.ul && this.li){\r\n\t\t\tthis.parent.ul.removeChild(this.li);\r\n\t\t}\r\n\r\n\t\t// Insert this node to target parent's child list\r\n\t\tthis.parent = targetParent;\r\n\t\tif( targetParent.hasChildren() ) {\r\n\t\t\tswitch(mode) {\r\n\t\t\tcase \"child\":\r\n\t\t\t\t// Append to existing target children\r\n\t\t\t\ttargetParent.childList.push(this);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"before\":\r\n\t\t\t\t// Insert this node before target node\r\n\t\t\t\tpos = $.inArray(targetNode, targetParent.childList);\r\n\t\t\t\tif( pos < 0 ){\r\n\t\t\t\t\tthrow \"Internal error\";\r\n\t\t\t\t}\r\n\t\t\t\ttargetParent.childList.splice(pos, 0, this);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"after\":\r\n\t\t\t\t// Insert this node after target node\r\n\t\t\t\tpos = $.inArray(targetNode, targetParent.childList);\r\n\t\t\t\tif( pos < 0 ){\r\n\t\t\t\t\tthrow \"Internal error\";\r\n\t\t\t\t}\r\n\t\t\t\ttargetParent.childList.splice(pos+1, 0, this);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Invalid mode \" + mode;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttargetParent.childList = [ this ];\r\n\t\t}\r\n\t\t// Parent has no <ul> tag yet:\r\n\t\tif( !targetParent.ul ) {\r\n\t\t\t// This is the parent's first child: create UL tag\r\n\t\t\t// (Hidden, because it will be\r\n\t\t\ttargetParent.ul = document.createElement(\"ul\");\r\n\t\t\ttargetParent.ul.style.display = \"none\";\r\n\t\t\tif( targetParent.li ){\r\n\t\t\t\ttargetParent.li.appendChild(targetParent.ul);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Issue 319: Add to target DOM parent (only if node was already rendered(expanded))\r\n\t\tif(this.li){\r\n\t\t\ttargetParent.ul.appendChild(this.li);\r\n\t\t}\r\n\r\n\t\tif( this.tree !== targetNode.tree ) {\r\n\t\t\t// Fix node.tree for all source nodes\r\n\t\t\tthis.visit(function(node){\r\n\t\t\t\tnode.tree = targetNode.tree;\r\n\t\t\t}, null, true);\r\n\t\t\tthrow \"Not yet implemented.\";\r\n\t\t}\r\n\t\t// TODO: fix selection state\r\n\t\t// TODO: fix active state\r\n\t\tif( !prevParent.isDescendantOf(targetParent)) {\r\n\t\t\tprevParent.render();\r\n\t\t}\r\n\t\tif( !targetParent.isDescendantOf(prevParent) ) {\r\n\t\t\ttargetParent.render();\r\n\t\t}\r\n//      this.tree.redraw();\r\n/*\r\n\t\tvar tree = this.tree;\r\n\t\tvar opts = tree.options;\r\n\t\tvar pers = tree.persistence;\r\n\r\n\r\n\t\t// Always expand, if it's below minExpandLevel\r\n//      tree.logDebug (\"%s._addChildNode(%o), l=%o\", this, dtnode, dtnode.getLevel());\r\n\t\tif ( opts.minExpandLevel >= dtnode.getLevel() ) {\r\n//          tree.logDebug (\"Force expand for %o\", dtnode);\r\n\t\t\tthis.bExpanded = true;\r\n\t\t}\r\n\r\n\t\t// In multi-hier mode, update the parents selection state\r\n\t\t// issue #82: only if not initializing, because the children may not exist yet\r\n//      if( !dtnode.data.isStatusNode && opts.selectMode==3 && !isInitializing )\r\n//          dtnode._fixSelectionState();\r\n\r\n\t\t// In multi-hier mode, update the parents selection state\r\n\t\tif( dtnode.bSelected && opts.selectMode==3 ) {\r\n\t\t\tvar p = this;\r\n\t\t\twhile( p ) {\r\n\t\t\t\tif( !p.hasSubSel )\r\n\t\t\t\t\tp._setSubSel(true);\r\n\t\t\t\tp = p.parent;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// render this node and the new child\r\n\t\tif ( tree.bEnableUpdate )\r\n\t\t\tthis.render();\r\n\r\n\t\treturn dtnode;\r\n\r\n*/\r\n\t},\r\n\r\n\t// --- end of class\r\n\tlastentry: undefined\r\n};\r\n\r\n/*************************************************************************\r\n * class DynaTreeStatus\r\n */\r\n\r\nvar DynaTreeStatus = Class.create();\r\n\r\n\r\nDynaTreeStatus._getTreePersistData = function(cookieId, cookieOpts) {\r\n\t// Static member: Return persistence information from cookies\r\n\tvar ts = new DynaTreeStatus(cookieId, cookieOpts);\r\n\tts.read();\r\n\treturn ts.toDict();\r\n};\r\n// Make available in global scope\r\ngetDynaTreePersistData = DynaTreeStatus._getTreePersistData; // TODO: deprecated\r\n\r\n\r\nDynaTreeStatus.prototype = {\r\n\t// Constructor\r\n\tinitialize: function(cookieId, cookieOpts) {\r\n//      this._log(\"DynaTreeStatus: initialize\");\r\n\t\tif( cookieId === undefined ){\r\n\t\t\tcookieId = $.ui.dynatree.prototype.options.cookieId;\r\n\t\t}\r\n\t\tcookieOpts = $.extend({}, $.ui.dynatree.prototype.options.cookie, cookieOpts);\r\n\r\n\t\tthis.cookieId = cookieId;\r\n\t\tthis.cookieOpts = cookieOpts;\r\n\t\tthis.cookiesFound = undefined;\r\n\t\tthis.activeKey = null;\r\n\t\tthis.focusedKey = null;\r\n\t\tthis.expandedKeyList = null;\r\n\t\tthis.selectedKeyList = null;\r\n\t},\r\n\t// member functions\r\n\t_log: function(msg) {\r\n\t\t//  this.logDebug(\"_changeNodeList(%o): nodeList:%o, idx:%o\", mode, nodeList, idx);\r\n\t\tArray.prototype.unshift.apply(arguments, [\"debug\"]);\r\n\t\t_log.apply(this, arguments);\r\n\t},\r\n\tread: function() {\r\n//      this._log(\"DynaTreeStatus: read\");\r\n\t\t// Read or init cookies.\r\n\t\tthis.cookiesFound = false;\r\n\r\n\t\tvar cookie = $.cookie(this.cookieId + \"-active\");\r\n\t\tthis.activeKey = cookie || \"\";\r\n\t\tif( cookie ){\r\n\t\t\tthis.cookiesFound = true;\r\n\t\t}\r\n\t\tcookie = $.cookie(this.cookieId + \"-focus\");\r\n\t\tthis.focusedKey = cookie || \"\";\r\n\t\tif( cookie ){\r\n\t\t\tthis.cookiesFound = true;\r\n\t\t}\r\n\t\tcookie = $.cookie(this.cookieId + \"-expand\");\r\n\t\tthis.expandedKeyList = cookie ? cookie.split(\",\") : [];\r\n\t\tif( cookie ){\r\n\t\t\tthis.cookiesFound = true;\r\n\t\t}\r\n\t\tcookie = $.cookie(this.cookieId + \"-select\");\r\n\t\tthis.selectedKeyList = cookie ? cookie.split(\",\") : [];\r\n\t\tif( cookie ){\r\n\t\t\tthis.cookiesFound = true;\r\n\t\t}\r\n\t},\r\n\twrite: function() {\r\n//      this._log(\"DynaTreeStatus: write\");\r\n\t\t$.cookie(this.cookieId + \"-active\", ( this.activeKey === null ) ? \"\" : this.activeKey, this.cookieOpts);\r\n\t\t$.cookie(this.cookieId + \"-focus\", ( this.focusedKey === null ) ? \"\" : this.focusedKey, this.cookieOpts);\r\n\t\t$.cookie(this.cookieId + \"-expand\", ( this.expandedKeyList === null ) ? \"\" : this.expandedKeyList.join(\",\"), this.cookieOpts);\r\n\t\t$.cookie(this.cookieId + \"-select\", ( this.selectedKeyList === null ) ? \"\" : this.selectedKeyList.join(\",\"), this.cookieOpts);\r\n\t},\r\n\taddExpand: function(key) {\r\n//      this._log(\"addExpand(%o)\", key);\r\n\t\tif( $.inArray(key, this.expandedKeyList) < 0 ) {\r\n\t\t\tthis.expandedKeyList.push(key);\r\n\t\t\t$.cookie(this.cookieId + \"-expand\", this.expandedKeyList.join(\",\"), this.cookieOpts);\r\n\t\t}\r\n\t},\r\n\tclearExpand: function(key) {\r\n//      this._log(\"clearExpand(%o)\", key);\r\n\t\tvar idx = $.inArray(key, this.expandedKeyList);\r\n\t\tif( idx >= 0 ) {\r\n\t\t\tthis.expandedKeyList.splice(idx, 1);\r\n\t\t\t$.cookie(this.cookieId + \"-expand\", this.expandedKeyList.join(\",\"), this.cookieOpts);\r\n\t\t}\r\n\t},\r\n\taddSelect: function(key) {\r\n//      this._log(\"addSelect(%o)\", key);\r\n\t\tif( $.inArray(key, this.selectedKeyList) < 0 ) {\r\n\t\t\tthis.selectedKeyList.push(key);\r\n\t\t\t$.cookie(this.cookieId + \"-select\", this.selectedKeyList.join(\",\"), this.cookieOpts);\r\n\t\t}\r\n\t},\r\n\tclearSelect: function(key) {\r\n//      this._log(\"clearSelect(%o)\", key);\r\n\t\tvar idx = $.inArray(key, this.selectedKeyList);\r\n\t\tif( idx >= 0 ) {\r\n\t\t\tthis.selectedKeyList.splice(idx, 1);\r\n\t\t\t$.cookie(this.cookieId + \"-select\", this.selectedKeyList.join(\",\"), this.cookieOpts);\r\n\t\t}\r\n\t},\r\n\tisReloading: function() {\r\n\t\treturn this.cookiesFound === true;\r\n\t},\r\n\ttoDict: function() {\r\n\t\treturn {\r\n\t\t\tcookiesFound: this.cookiesFound,\r\n\t\t\tactiveKey: this.activeKey,\r\n\t\t\tfocusedKey: this.activeKey,\r\n\t\t\texpandedKeyList: this.expandedKeyList,\r\n\t\t\tselectedKeyList: this.selectedKeyList\r\n\t\t};\r\n\t},\r\n\t// --- end of class\r\n\tlastentry: undefined\r\n};\r\n\r\n\r\n/*************************************************************************\r\n * class DynaTree\r\n */\r\n\r\nvar DynaTree = Class.create();\r\n\r\n// --- Static members ----------------------------------------------------------\r\n\r\nDynaTree.version = \"@@Version\";\r\n\r\n//--- Class members ------------------------------------------------------------\r\n\r\nDynaTree.prototype = {\r\n\t// Constructor\r\n\tinitialize: function($widget) {\r\n\t\t// instance members\r\n\t\tthis.phase = \"init\";\r\n\t\tthis.$widget = $widget;\r\n\t\tthis.options = $widget.options;\r\n\t\tthis.$tree = $widget.element;\r\n\t\tthis.timer = null;\r\n\t\t// find container element\r\n\t\tthis.divTree = this.$tree.get(0);\r\n\r\n\t\t_initDragAndDrop(this);\r\n\t},\r\n\r\n\t// member functions\r\n\r\n\t_load: function(callback) {\r\n\t\tvar $widget = this.$widget;\r\n\t\tvar opts = this.options,\r\n\t\t\tself = this;\r\n\t\tthis.bEnableUpdate = true;\r\n\t\tthis._nodeCount = 1;\r\n\t\tthis.activeNode = null;\r\n\t\tthis.focusNode = null;\r\n\r\n\t\t// Some deprecation warnings to help with migration\r\n\t\tif( opts.rootVisible !== undefined ){\r\n\t\t\tthis.logWarning(\"Option 'rootVisible' is no longer supported.\");\r\n\t\t}\r\n\t\tif( opts.minExpandLevel < 1 ) {\r\n\t\t\tthis.logWarning(\"Option 'minExpandLevel' must be >= 1.\");\r\n\t\t\topts.minExpandLevel = 1;\r\n\t\t}\r\n//      _log(\"warn\", \"jQuery.support.boxModel \" + jQuery.support.boxModel);\r\n\r\n\t\t// If a 'options.classNames' dictionary was passed, still use defaults\r\n\t\t// for undefined classes:\r\n\t\tif( opts.classNames !== $.ui.dynatree.prototype.options.classNames ) {\r\n\t\t\topts.classNames = $.extend({}, $.ui.dynatree.prototype.options.classNames, opts.classNames);\r\n\t\t}\r\n\t\tif( opts.ajaxDefaults !== $.ui.dynatree.prototype.options.ajaxDefaults ) {\r\n\t\t\topts.ajaxDefaults = $.extend({}, $.ui.dynatree.prototype.options.ajaxDefaults, opts.ajaxDefaults);\r\n\t\t}\r\n\t\tif( opts.dnd !== $.ui.dynatree.prototype.options.dnd ) {\r\n\t\t\topts.dnd = $.extend({}, $.ui.dynatree.prototype.options.dnd, opts.dnd);\r\n\t\t}\r\n\t\t// Guess skin path, if not specified\r\n\t\tif(!opts.imagePath) {\r\n\t\t\t$(\"script\").each( function () {\r\n\t\t\t\tvar _rexDtLibName = /.*dynatree[^\\/]*\\.js$/i;\r\n\t\t\t\tif( this.src.search(_rexDtLibName) >= 0 ) {\r\n\t\t\t\t\tif( this.src.indexOf(\"/\")>=0 ){ // issue #47\r\n\t\t\t\t\t\topts.imagePath = this.src.slice(0, this.src.lastIndexOf(\"/\")) + \"/skin/\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\topts.imagePath = \"skin/\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.logDebug(\"Guessing imagePath from '%s': '%s'\", this.src, opts.imagePath);\r\n\t\t\t\t\treturn false; // first match\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.persistence = new DynaTreeStatus(opts.cookieId, opts.cookie);\r\n\t\tif( opts.persist ) {\r\n\t\t\tif( !$.cookie ){\r\n\t\t\t\t_log(\"warn\", \"Please include jquery.cookie.js to use persistence.\");\r\n\t\t\t}\r\n\t\t\tthis.persistence.read();\r\n\t\t}\r\n\t\tthis.logDebug(\"DynaTree.persistence: %o\", this.persistence.toDict());\r\n\r\n\t\t// Cached tag strings\r\n\t\tthis.cache = {\r\n\t\t\ttagEmpty: \"<span class='\" + opts.classNames.empty + \"'></span>\",\r\n\t\t\ttagVline: \"<span class='\" + opts.classNames.vline + \"'></span>\",\r\n\t\t\ttagExpander: \"<span class='\" + opts.classNames.expander + \"'></span>\",\r\n\t\t\ttagConnector: \"<span class='\" + opts.classNames.connector + \"'></span>\",\r\n\t\t\ttagNodeIcon: \"<span class='\" + opts.classNames.nodeIcon + \"'></span>\",\r\n\t\t\ttagCheckbox: \"<span class='\" + opts.classNames.checkbox + \"'></span>\",\r\n\t\t\tlastentry: undefined\r\n\t\t};\r\n\r\n\t\t// Clear container, in case it contained some 'waiting' or 'error' text\r\n\t\t// for clients that don't support JS.\r\n\t\t// We don't do this however, if we try to load from an embedded UL element.\r\n\t\tif( opts.children || (opts.initAjax && opts.initAjax.url) || opts.initId ){\r\n\t\t\t$(this.divTree).empty();\r\n\t\t}\r\n\t\tvar $ulInitialize = this.$tree.find(\">ul:first\").hide();\r\n\r\n\t\t// Create the root element\r\n\t\tthis.tnRoot = new DynaTreeNode(null, this, {});\r\n\t\tthis.tnRoot.bExpanded = true;\r\n\t\tthis.tnRoot.render();\r\n\t\tthis.divTree.appendChild(this.tnRoot.ul);\r\n\r\n\t\tvar root = this.tnRoot,\r\n\t\t\tisReloading = ( opts.persist && this.persistence.isReloading() ),\r\n\t\t\tisLazy = false,\r\n\t\t\tprevFlag = this.enableUpdate(false);\r\n\r\n\t\tthis.logDebug(\"Dynatree._load(): read tree structure...\");\r\n\r\n\t\t// Init tree structure\r\n\t\tif( opts.children ) {\r\n\t\t\t// Read structure from node array\r\n\t\t\troot.addChild(opts.children);\r\n\r\n\t\t} else if( opts.initAjax && opts.initAjax.url ) {\r\n\t\t\t// Init tree from AJAX request\r\n\t\t\tisLazy = true;\r\n\t\t\troot.data.isLazy = true;\r\n\t\t\tthis._reloadAjax(callback);\r\n\r\n\t\t} else if( opts.initId ) {\r\n\t\t\t// Init tree from another UL element\r\n\t\t\tthis._createFromTag(root, $(\"#\"+opts.initId));\r\n\r\n\t\t} else {\r\n\t\t\t// Init tree from the first UL element inside the container <div>\r\n//          var $ul = this.$tree.find(\">ul:first\").hide();\r\n\t\t\tthis._createFromTag(root, $ulInitialize);\r\n\t\t\t$ulInitialize.remove();\r\n\t\t}\r\n\r\n\t\tthis._checkConsistency();\r\n\t\t// Fix part-sel flags\r\n\t\tif(!isLazy && opts.selectMode == 3){\r\n\t\t\troot._updatePartSelectionState();\r\n\t\t}\r\n\t\t// Render html markup\r\n\t\tthis.logDebug(\"Dynatree._load(): render nodes...\");\r\n\t\tthis.enableUpdate(prevFlag);\r\n\r\n\t\t// bind event handlers\r\n\t\tthis.logDebug(\"Dynatree._load(): bind events...\");\r\n\t\tthis.$widget.bind();\r\n\r\n\t\t// --- Post-load processing\r\n\t\tthis.logDebug(\"Dynatree._load(): postInit...\");\r\n\t\tthis.phase = \"postInit\";\r\n\r\n\t\t// In persist mode, make sure that cookies are written, even if they are empty\r\n\t\tif( opts.persist ) {\r\n\t\t\tthis.persistence.write();\r\n\t\t}\r\n\t\t// Set focus, if possible (this will also fire an event and write a cookie)\r\n\t\tif( this.focusNode && this.focusNode.isVisible() ) {\r\n\t\t\tthis.logDebug(\"Focus on init: %o\", this.focusNode);\r\n\t\t\tthis.focusNode.focus();\r\n\t\t}\r\n\t\tif( !isLazy ) {\r\n\t\t\tif( opts.onPostInit ) {\r\n\t\t\t\topts.onPostInit.call(this, isReloading, false);\r\n\t\t\t}\r\n\t\t\tif( callback ){\r\n\t\t\t\tcallback.call(this, \"ok\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.phase = \"idle\";\r\n\t},\r\n\r\n\t_reloadAjax: function(callback) {\r\n\t\t// Reload\r\n\t\tvar opts = this.options;\r\n\t\tif( ! opts.initAjax || ! opts.initAjax.url ){\r\n\t\t\tthrow \"tree.reload() requires 'initAjax' mode.\";\r\n\t\t}\r\n\t\tvar pers = this.persistence;\r\n\t\tvar ajaxOpts = $.extend({}, opts.initAjax);\r\n\t\t// Append cookie info to the request\r\n//      this.logDebug(\"reloadAjax: key=%o, an.key:%o\", pers.activeKey, this.activeNode?this.activeNode.data.key:\"?\");\r\n\t\tif( ajaxOpts.addActiveKey ){\r\n\t\t\tajaxOpts.data.activeKey = pers.activeKey;\r\n\t\t}\r\n\t\tif( ajaxOpts.addFocusedKey ){\r\n\t\t\tajaxOpts.data.focusedKey = pers.focusedKey;\r\n\t\t}\r\n\t\tif( ajaxOpts.addExpandedKeyList ){\r\n\t\t\tajaxOpts.data.expandedKeyList = pers.expandedKeyList.join(\",\");\r\n\t\t}\r\n\t\tif( ajaxOpts.addSelectedKeyList ){\r\n\t\t\tajaxOpts.data.selectedKeyList = pers.selectedKeyList.join(\",\");\r\n\t\t}\r\n\t\t// Set up onPostInit callback to be called when Ajax returns\r\n\t\tif( ajaxOpts.success ){\r\n\t\t\tthis.logWarning(\"initAjax: success callback is ignored; use onPostInit instead.\");\r\n\t\t}\r\n\t\tif( ajaxOpts.error ){\r\n\t\t\tthis.logWarning(\"initAjax: error callback is ignored; use onPostInit instead.\");\r\n\t\t}\r\n\t\tvar isReloading = pers.isReloading();\r\n\t\tajaxOpts.success = function(dtnode, data, textStatus) {\r\n\t\t\tif(opts.selectMode == 3){\r\n\t\t\t\tdtnode.tree.tnRoot._updatePartSelectionState();\r\n\t\t\t}\r\n\t\t\tif(opts.onPostInit){\r\n\t\t\t\topts.onPostInit.call(dtnode.tree, isReloading, false);\r\n\t\t\t}\r\n\t\t\tif(callback){\r\n\t\t\t\tcallback.call(dtnode.tree, \"ok\");\r\n\t\t\t}\r\n\t\t};\r\n\t\tajaxOpts.error = function(dtnode, XMLHttpRequest, textStatus, errorThrown) {\r\n\t\t\tif(opts.onPostInit){\r\n\t\t\t\topts.onPostInit.call(dtnode.tree, isReloading, true, XMLHttpRequest, textStatus, errorThrown);\r\n\t\t\t}\r\n\t\t\tif(callback){\r\n\t\t\t\tcallback.call(dtnode.tree, \"error\", XMLHttpRequest, textStatus, errorThrown);\r\n\t\t\t}\r\n\t\t};\r\n//      }\r\n\t\tthis.logDebug(\"Dynatree._init(): send Ajax request...\");\r\n\t\tthis.tnRoot.appendAjax(ajaxOpts);\r\n\t},\r\n\r\n\ttoString: function() {\r\n\t\treturn \"Dynatree '\" + this.$tree.attr(\"id\") + \"'\";\r\n\t},\r\n\r\n\ttoDict: function(includeRoot) {\r\n\t\tvar dict = this.tnRoot.toDict(true);\r\n\t\treturn includeRoot ? dict : dict.children;\r\n\t},\r\n\r\n\tserializeArray: function(stopOnParents) {\r\n\t\t// Return a JavaScript array of objects, ready to be encoded as a JSON\r\n\t\t// string for selected nodes\r\n\t\tvar nodeList = this.getSelectedNodes(stopOnParents),\r\n\t\t\tname = this.$tree.attr(\"name\") || this.$tree.attr(\"id\"),\r\n\t\t\tarr = [];\r\n\t\tfor(var i=0, l=nodeList.length; i<l; i++){\r\n\t\t\tarr.push({name: name, value: nodeList[i].data.key});\r\n\t\t}\r\n\t\treturn arr;\r\n\t},\r\n\r\n\tgetPersistData: function() {\r\n\t\treturn this.persistence.toDict();\r\n\t},\r\n\r\n\tlogDebug: function(msg) {\r\n\t\tif( this.options.debugLevel >= 2 ) {\r\n\t\t\tArray.prototype.unshift.apply(arguments, [\"debug\"]);\r\n\t\t\t_log.apply(this, arguments);\r\n\t\t}\r\n\t},\r\n\r\n\tlogInfo: function(msg) {\r\n\t\tif( this.options.debugLevel >= 1 ) {\r\n\t\t\tArray.prototype.unshift.apply(arguments, [\"info\"]);\r\n\t\t\t_log.apply(this, arguments);\r\n\t\t}\r\n\t},\r\n\r\n\tlogWarning: function(msg) {\r\n\t\tArray.prototype.unshift.apply(arguments, [\"warn\"]);\r\n\t\t_log.apply(this, arguments);\r\n\t},\r\n\r\n\tisInitializing: function() {\r\n\t\treturn ( this.phase==\"init\" || this.phase==\"postInit\" );\r\n\t},\r\n\tisReloading: function() {\r\n\t\treturn ( this.phase==\"init\" || this.phase==\"postInit\" ) && this.options.persist && this.persistence.cookiesFound;\r\n\t},\r\n\tisUserEvent: function() {\r\n\t\treturn ( this.phase==\"userEvent\" );\r\n\t},\r\n\r\n\tredraw: function() {\r\n//      this.logDebug(\"dynatree.redraw()...\");\r\n\t\tthis.tnRoot.render(false, false);\r\n//      this.logDebug(\"dynatree.redraw() done.\");\r\n\t},\r\n\trenderInvisibleNodes: function() {\r\n\t\tthis.tnRoot.render(false, true);\r\n\t},\r\n\treload: function(callback) {\r\n\t\tthis._load(callback);\r\n\t},\r\n\r\n\tgetRoot: function() {\r\n\t\treturn this.tnRoot;\r\n\t},\r\n\r\n\tenable: function() {\r\n\t\tthis.$widget.enable();\r\n\t},\r\n\r\n\tdisable: function() {\r\n\t\tthis.$widget.disable();\r\n\t},\r\n\r\n\tgetNodeByKey: function(key) {\r\n\t\t// Search the DOM by element ID (assuming this is faster than traversing all nodes).\r\n\t\t// $(\"#...\") has problems, if the key contains '.', so we use getElementById()\r\n\t\tvar el = document.getElementById(this.options.idPrefix + key);\r\n\t\tif( el ){\r\n\t\t\treturn el.dtnode ? el.dtnode : null;\r\n\t\t}\r\n\t\t// Not found in the DOM, but still may be in an unrendered part of tree\r\n\t\tvar match = null;\r\n\t\tthis.visit(function(node){\r\n//          window.console.log(\"%s\", node);\r\n\t\t\tif(node.data.key === key) {\r\n\t\t\t\tmatch = node;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}, true);\r\n\t\treturn match;\r\n\t},\r\n\r\n\tgetActiveNode: function() {\r\n\t\treturn this.activeNode;\r\n\t},\r\n\r\n\treactivate: function(setFocus) {\r\n\t\t// Re-fire onQueryActivate and onActivate events.\r\n\t\tvar node = this.activeNode;\r\n//      this.logDebug(\"reactivate %o\", node);\r\n\t\tif( node ) {\r\n\t\t\tthis.activeNode = null; // Force re-activating\r\n\t\t\tnode.activate();\r\n\t\t\tif( setFocus ){\r\n\t\t\t\tnode.focus();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tgetSelectedNodes: function(stopOnParents) {\r\n\t\tvar nodeList = [];\r\n\t\tthis.tnRoot.visit(function(node){\r\n\t\t\tif( node.bSelected ) {\r\n\t\t\t\tnodeList.push(node);\r\n\t\t\t\tif( stopOnParents === true ){\r\n\t\t\t\t\treturn \"skip\"; // stop processing this branch\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn nodeList;\r\n\t},\r\n\r\n\tactivateKey: function(key) {\r\n\t\tvar dtnode = (key === null) ? null : this.getNodeByKey(key);\r\n\t\tif( !dtnode ) {\r\n\t\t\tif( this.activeNode ){\r\n\t\t\t\tthis.activeNode.deactivate();\r\n\t\t\t}\r\n\t\t\tthis.activeNode = null;\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tdtnode.focus();\r\n\t\tdtnode.activate();\r\n\t\treturn dtnode;\r\n\t},\r\n\r\n\tloadKeyPath: function(keyPath, callback) {\r\n\t\tvar segList = keyPath.split(this.options.keyPathSeparator);\r\n\t\t// Remove leading '/'\r\n\t\tif(segList[0] === \"\"){\r\n\t\t\tsegList.shift();\r\n\t\t}\r\n\t\t// Remove leading system root key\r\n\t\tif(segList[0] == this.tnRoot.data.key){\r\n\t\t\tthis.logDebug(\"Removed leading root key.\");\r\n\t\t\tsegList.shift();\r\n\t\t}\r\n\t\tkeyPath = segList.join(this.options.keyPathSeparator);\r\n\t\treturn this.tnRoot._loadKeyPath(keyPath, callback);\r\n\t},\r\n\r\n\tselectKey: function(key, select) {\r\n\t\tvar dtnode = this.getNodeByKey(key);\r\n\t\tif( !dtnode ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tdtnode.select(select);\r\n\t\treturn dtnode;\r\n\t},\r\n\r\n\tenableUpdate: function(bEnable) {\r\n\t\tif ( this.bEnableUpdate==bEnable ){\r\n\t\t\treturn bEnable;\r\n\t\t}\r\n\t\tthis.bEnableUpdate = bEnable;\r\n\t\tif ( bEnable ){\r\n\t\t\tthis.redraw();\r\n\t\t}\r\n\t\treturn !bEnable; // return previous value\r\n\t},\r\n\r\n\tcount: function() {\r\n\t\treturn this.tnRoot.countChildren();\r\n\t},\r\n\r\n\tvisit: function(fn, includeRoot) {\r\n\t\treturn this.tnRoot.visit(fn, includeRoot);\r\n\t},\r\n\r\n\t_createFromTag: function(parentTreeNode, $ulParent) {\r\n\t\t// Convert a <UL>...</UL> list into children of the parent tree node.\r\n\t\tvar self = this;\r\n/*\r\nTODO: better?\r\n\t\tthis.$lis = $(\"li:has(a[href])\", this.element);\r\n\t\tthis.$tabs = this.$lis.map(function() { return $(\"a\", this)[0]; });\r\n */\r\n\t\t$ulParent.find(\">li\").each(function() {\r\n\t\t\tvar $li = $(this),\r\n\t\t\t\t$liSpan = $li.find(\">span:first\"),\r\n\t\t\t\t$liA = $li.find(\">a:first\"),\r\n\t\t\t\ttitle,\r\n\t\t\t\thref = null,\r\n\t\t\t\ttarget = null,\r\n\t\t\t\ttooltip;\r\n\t\t\tif( $liSpan.length ) {\r\n\t\t\t\t// If a <li><span> tag is specified, use it literally.\r\n\t\t\t\ttitle = $liSpan.html();\r\n\t\t\t} else if( $liA.length ) {\r\n\t\t\t\ttitle = $liA.html();\r\n\t\t\t\thref = $liA.attr(\"href\");\r\n\t\t\t\ttarget = $liA.attr(\"target\");\r\n\t\t\t\ttooltip = $liA.attr(\"title\");\r\n\t\t\t} else {\r\n\t\t\t\t// If only a <li> tag is specified, use the trimmed string up to\r\n\t\t\t\t// the next child <ul> tag.\r\n\t\t\t\ttitle = $li.html();\r\n\t\t\t\tvar iPos = title.search(/<ul/i);\r\n\t\t\t\tif( iPos >= 0 ){\r\n\t\t\t\t\ttitle = $.trim(title.substring(0, iPos));\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttitle = $.trim(title);\r\n\t\t\t\t}\r\n//              self.logDebug(\"%o\", title);\r\n\t\t\t}\r\n\t\t\t// Parse node options from ID, title and class attributes\r\n\t\t\tvar data = {\r\n\t\t\t\ttitle: title,\r\n\t\t\t\ttooltip: tooltip,\r\n\t\t\t\tisFolder: $li.hasClass(\"folder\"),\r\n\t\t\t\tisLazy: $li.hasClass(\"lazy\"),\r\n\t\t\t\texpand: $li.hasClass(\"expanded\"),\r\n\t\t\t\tselect: $li.hasClass(\"selected\"),\r\n\t\t\t\tactivate: $li.hasClass(\"active\"),\r\n\t\t\t\tfocus: $li.hasClass(\"focused\"),\r\n\t\t\t\tnoLink: $li.hasClass(\"noLink\")\r\n\t\t\t};\r\n\t\t\tif( href ){\r\n\t\t\t\tdata.href = href;\r\n\t\t\t\tdata.target = target;\r\n\t\t\t}\r\n\t\t\tif( $li.attr(\"title\") ){\r\n\t\t\t\tdata.tooltip = $li.attr(\"title\"); // overrides <a title='...'>\r\n\t\t\t}\r\n\t\t\tif( $li.attr(\"id\") ){\r\n\t\t\t\tdata.key = \"\" + $li.attr(\"id\");\r\n\t\t\t}\r\n\t\t\t// If a data attribute is present, evaluate as a JavaScript object\r\n\t\t\tif( $li.attr(\"data\") ) {\r\n\t\t\t\tvar dataAttr = $.trim($li.attr(\"data\"));\r\n\t\t\t\tif( dataAttr ) {\r\n\t\t\t\t\tif( dataAttr.charAt(0) != \"{\" ){\r\n\t\t\t\t\t\tdataAttr = \"{\" + dataAttr + \"}\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t$.extend(data, eval(\"(\" + dataAttr + \")\"));\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tthrow (\"Error parsing node data: \" + e + \"\\ndata:\\n'\" + dataAttr + \"'\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar childNode = parentTreeNode.addChild(data);\r\n\t\t\t// Recursive reading of child nodes, if LI tag contains an UL tag\r\n\t\t\tvar $ul = $li.find(\">ul:first\");\r\n\t\t\tif( $ul.length ) {\r\n\t\t\t\tself._createFromTag(childNode, $ul); // must use 'self', because 'this' is the each() context\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_checkConsistency: function() {\r\n//      this.logDebug(\"tree._checkConsistency() NOT IMPLEMENTED - %o\", this);\r\n\t},\r\n\r\n\t_setDndStatus: function(sourceNode, targetNode, helper, hitMode, accept) {\r\n\t\t// hitMode: 'after', 'before', 'over', 'out', 'start', 'stop'\r\n\t\tvar $source = sourceNode ? $(sourceNode.span) : null,\r\n\t\t\t$target = $(targetNode.span),\r\n\t\t\tposOpts,\r\n\t\t\tmarkerOffsetX = 0,\r\n\t\t\tmarkerAt = \"center\";\r\n\r\n\t\tif( !this.$dndMarker ) {\r\n\t\t\tthis.$dndMarker = $(\"<div id='dynatree-drop-marker'></div>\")\r\n\t\t\t\t.hide()\r\n\t\t\t\t.css({\"z-index\": 1000})\r\n\t\t\t\t.prependTo($(this.divTree).parent());\r\n\r\n//          logMsg(\"Creating marker: %o\", this.$dndMarker);\r\n\t\t}\r\n/*\r\n\t\tif(hitMode === \"start\"){\r\n\t\t}\r\n\t\tif(hitMode === \"stop\"){\r\n//          sourceNode.removeClass(\"dynatree-drop-target\");\r\n\t\t}\r\n*/\r\n\t\tif(hitMode === \"after\" || hitMode === \"before\" || hitMode === \"over\"){\r\n//          $source && $source.addClass(\"dynatree-drag-source\");\r\n//          $target.addClass(\"dynatree-drop-target\");\r\n\r\n\t\t\tswitch(hitMode){\r\n\t\t\tcase \"before\":\r\n\t\t\t\tthis.$dndMarker.removeClass(\"dynatree-drop-after dynatree-drop-over\");\r\n\t\t\t\tthis.$dndMarker.addClass(\"dynatree-drop-before\");\r\n\t\t\t\tmarkerAt = \"top\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"after\":\r\n\t\t\t\tthis.$dndMarker.removeClass(\"dynatree-drop-before dynatree-drop-over\");\r\n\t\t\t\tthis.$dndMarker.addClass(\"dynatree-drop-after\");\r\n\t\t\t\tmarkerAt = \"bottom\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.$dndMarker.removeClass(\"dynatree-drop-after dynatree-drop-before\");\r\n\t\t\t\tthis.$dndMarker.addClass(\"dynatree-drop-over\");\r\n\t\t\t\t$target.addClass(\"dynatree-drop-target\");\r\n\t\t\t\tmarkerOffsetX = 8;\r\n\t\t\t}\r\n//          logMsg(\"Creating marker: %o\", this.$dndMarker);\r\n//          logMsg(\"    $target.offset=%o\", $target);\r\n//          logMsg(\"    pos/$target.offset=%o\", pos);\r\n//          logMsg(\"    $target.position=%o\", $target.position());\r\n//          logMsg(\"    $target.offsetParent=%o, ot:%o\", $target.offsetParent(), $target.offsetParent().offset());\r\n//          logMsg(\"    $(this.divTree).offset=%o\", $(this.divTree).offset());\r\n//          logMsg(\"    $(this.divTree).parent=%o\", $(this.divTree).parent());\r\n//          var pos = $target.offset();\r\n//          var parentPos = $target.offsetParent().offset();\r\n//          var bodyPos = $target.offsetParent().offset();\r\n\r\n\t\t\tif( jquerySupports.positionMyOfs ){\r\n\t\t\t\tposOpts = {\r\n\t\t\t\t\tmy: \"left\" + offsetString(markerOffsetX) + \" center\",\r\n\t\t\t\t\tat: \"left \" + markerAt,\r\n\t\t\t\t\tof: $target\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tposOpts = {\r\n\t\t\t\t\tmy: \"left center\",\r\n\t\t\t\t\tat: \"left \" + markerAt,\r\n\t\t\t\t\tof: $target,\r\n\t\t\t\t\toffset: \"\" + markerOffsetX + \" 0\"\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tthis.$dndMarker\r\n\t\t\t\t.show()\r\n\t\t\t\t.position(posOpts);\r\n\r\n//          helper.addClass(\"dynatree-drop-hover\");\r\n\t\t} else {\r\n//          $source && $source.removeClass(\"dynatree-drag-source\");\r\n\t\t\t$target.removeClass(\"dynatree-drop-target\");\r\n\t\t\tthis.$dndMarker.hide();\r\n//          helper.removeClass(\"dynatree-drop-hover\");\r\n\t\t}\r\n\t\tif(hitMode === \"after\"){\r\n\t\t\t$target.addClass(\"dynatree-drop-after\");\r\n\t\t} else {\r\n\t\t\t$target.removeClass(\"dynatree-drop-after\");\r\n\t\t}\r\n\t\tif(hitMode === \"before\"){\r\n\t\t\t$target.addClass(\"dynatree-drop-before\");\r\n\t\t} else {\r\n\t\t\t$target.removeClass(\"dynatree-drop-before\");\r\n\t\t}\r\n\t\tif(accept === true){\r\n\t\t\tif($source){\r\n\t\t\t\t$source.addClass(\"dynatree-drop-accept\");\r\n\t\t\t}\r\n\t\t\t$target.addClass(\"dynatree-drop-accept\");\r\n\t\t\thelper.addClass(\"dynatree-drop-accept\");\r\n\t\t}else{\r\n\t\t\tif($source){\r\n\t\t\t\t$source.removeClass(\"dynatree-drop-accept\");\r\n\t\t\t}\r\n\t\t\t$target.removeClass(\"dynatree-drop-accept\");\r\n\t\t\thelper.removeClass(\"dynatree-drop-accept\");\r\n\t\t}\r\n\t\tif(accept === false){\r\n\t\t\tif($source){\r\n\t\t\t\t$source.addClass(\"dynatree-drop-reject\");\r\n\t\t\t}\r\n\t\t\t$target.addClass(\"dynatree-drop-reject\");\r\n\t\t\thelper.addClass(\"dynatree-drop-reject\");\r\n\t\t}else{\r\n\t\t\tif($source){\r\n\t\t\t\t$source.removeClass(\"dynatree-drop-reject\");\r\n\t\t\t}\r\n\t\t\t$target.removeClass(\"dynatree-drop-reject\");\r\n\t\t\thelper.removeClass(\"dynatree-drop-reject\");\r\n\t\t}\r\n\t},\r\n\r\n\t_onDragEvent: function(eventName, node, otherNode, event, ui, draggable) {\r\n\t\t/**\r\n\t\t * Handles drag'n'drop functionality.\r\n\t\t *\r\n\t\t * A standard jQuery drag-and-drop process may generate these calls:\r\n\t\t *\r\n\t\t * draggable helper():\r\n\t\t *     _onDragEvent(\"helper\", sourceNode, null, event, null, null);\r\n\t\t * start:\r\n\t\t *     _onDragEvent(\"start\", sourceNode, null, event, ui, draggable);\r\n\t\t * drag:\r\n\t\t *     _onDragEvent(\"leave\", prevTargetNode, sourceNode, event, ui, draggable);\r\n\t\t *     _onDragEvent(\"over\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t *     _onDragEvent(\"enter\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t * stop:\r\n\t\t *     _onDragEvent(\"drop\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t *     _onDragEvent(\"leave\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t *     _onDragEvent(\"stop\", sourceNode, null, event, ui, draggable);\r\n\t\t */\r\n\t\tvar hitMode, enterResponse, r,\r\n\t\t\tdnd = this.options.dnd,\r\n\t\t\tres = null,\r\n\t\t\tnodeTag = $(node.span);\r\n\r\n\t\tswitch (eventName) {\r\n\t\tcase \"helper\":\r\n\t\t\t// Only event and node argument is available\r\n\t\t\tvar $helper = $(\"<div class='dynatree-drag-helper'><span class='dynatree-drag-helper-img' /></div>\")\r\n\t\t\t\t\t// .append($(event.target).closest(\".dynatree-title\").clone());\r\n\t\t\t\t\t.append(nodeTag.find(\".dynatree-title\").clone());\r\n\t\t\t// issue 244: helper should be child of scrollParent\r\n\t\t\t$(\"ul.dynatree-container\", node.tree.divTree).append($helper);\r\n//          $(node.tree.divTree).append($helper);\r\n\t\t\t// Attach node reference to helper object\r\n\t\t\t$helper.data(\"dtSourceNode\", node);\r\n\t\t\tres = $helper;\r\n\t\t\tbreak;\r\n\t\tcase \"start\":\r\n\t\t\tif(node.isStatusNode()) {\r\n\t\t\t\tres = false;\r\n\t\t\t} else if(dnd.onDragStart) {\r\n\t\t\t\tres = dnd.onDragStart(node);\r\n\t\t\t}\r\n\t\t\tif(res === false) {\r\n\t\t\t\tthis.logDebug(\"tree.onDragStart() cancelled\");\r\n\t\t\t\t//draggable._clear();\r\n\t\t\t\t// NOTE: the return value seems to be ignored (drag is not canceled, when false is returned)\r\n\t\t\t\tui.helper.trigger(\"mouseup\");\r\n\t\t\t\tui.helper.hide();\r\n\t\t\t} else {\r\n\t\t\t\tnodeTag.addClass(\"dynatree-drag-source\");\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"enter\":\r\n\t\t\tr = dnd.onDragEnter ? dnd.onDragEnter(node, otherNode, ui, draggable) : null;\r\n\t\t\tif(!r){\r\n\t\t\t\t// convert null, undefined, false to false\r\n\t\t\t\tres = false;\r\n\t\t\t}else if ( $.isArray(r) ) {\r\n\t\t\t\tres = {\r\n\t\t\t\t\tover: ($.inArray(\"over\", r) >= 0),\r\n\t\t\t\t\tbefore: ($.inArray(\"before\", r) >= 0),\r\n\t\t\t\t\tafter: ($.inArray(\"after\", r) >= 0)\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\tres = {\r\n\t\t\t\t\tover: ((r === true) || (r === \"over\")),\r\n\t\t\t\t\tbefore: ((r === true) || (r === \"before\")),\r\n\t\t\t\t\tafter: ((r === true) || (r === \"after\"))\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tui.helper.data(\"enterResponse\", res);\r\n//            this.logDebug(\"helper.enterResponse: %o\", res);\r\n\t\t\tbreak;\r\n\t\tcase \"over\":\r\n\t\t\tenterResponse = ui.helper.data(\"enterResponse\");\r\n\t\t\thitMode = null;\r\n\t\t\tif(enterResponse === false){\r\n\t\t\t\t// Don't call onDragOver if onEnter returned false.\r\n\t\t\t\t// issue 332\r\n//              break;\r\n\t\t\t} else if(typeof enterResponse === \"string\") {\r\n\t\t\t\t// Use hitMode from onEnter if provided.\r\n\t\t\t\thitMode = enterResponse;\r\n\t\t\t} else {\r\n\t\t\t\t// Calculate hitMode from relative cursor position.\r\n\t\t\t\tvar nodeOfs = nodeTag.offset();\r\n\t\t\t\tvar relPos = { x: event.pageX - nodeOfs.left,\r\n\t\t\t\t\t\t\t   y: event.pageY - nodeOfs.top };\r\n\t\t\t\tvar relPos2 = { x: relPos.x / nodeTag.width(),\r\n\t\t\t\t\t\t\t\ty: relPos.y / nodeTag.height() };\r\n\r\n\t\t\t\tif( enterResponse.after && relPos2.y > 0.75 ){\r\n\t\t\t\t\thitMode = \"after\";\r\n\t\t\t\t} else if(!enterResponse.over && enterResponse.after && relPos2.y > 0.5 ){\r\n\t\t\t\t\thitMode = \"after\";\r\n\t\t\t\t} else if(enterResponse.before && relPos2.y <= 0.25) {\r\n\t\t\t\t\thitMode = \"before\";\r\n\t\t\t\t} else if(!enterResponse.over && enterResponse.before && relPos2.y <= 0.5) {\r\n\t\t\t\t\thitMode = \"before\";\r\n\t\t\t\t} else if(enterResponse.over) {\r\n\t\t\t\t\thitMode = \"over\";\r\n\t\t\t\t}\r\n\t\t\t\t// Prevent no-ops like 'before source node'\r\n\t\t\t\t// TODO: these are no-ops when moving nodes, but not in copy mode\r\n\t\t\t\tif( dnd.preventVoidMoves ){\r\n\t\t\t\t\tif(node === otherNode){\r\n\t\t\t\t\t\thitMode = null;\r\n\t\t\t\t\t}else if(hitMode === \"before\" && otherNode && node === otherNode.getNextSibling()){\r\n\t\t\t\t\t\thitMode = null;\r\n\t\t\t\t\t}else if(hitMode === \"after\" && otherNode && node === otherNode.getPrevSibling()){\r\n\t\t\t\t\t\thitMode = null;\r\n\t\t\t\t\t}else if(hitMode === \"over\" && otherNode\r\n\t\t\t\t\t\t\t&& otherNode.parent === node && otherNode.isLastSibling() ){\r\n\t\t\t\t\t\thitMode = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n//              this.logDebug(\"hitMode: %s - %s - %s\", hitMode, (node.parent === otherNode), node.isLastSibling());\r\n\t\t\t\tui.helper.data(\"hitMode\", hitMode);\r\n\t\t\t}\r\n\t\t\t// Auto-expand node (only when 'over' the node, not 'before', or 'after')\r\n\t\t\tif(hitMode === \"over\"\r\n\t\t\t\t&& dnd.autoExpandMS && node.hasChildren() !== false && !node.bExpanded) {\r\n\t\t\t\tnode.scheduleAction(\"expand\", dnd.autoExpandMS);\r\n\t\t\t}\r\n\t\t\tif(hitMode && dnd.onDragOver){\r\n\t\t\t\tres = dnd.onDragOver(node, otherNode, hitMode, ui, draggable);\r\n\t\t\t\tif(res === \"over\" || res === \"before\" || res === \"after\") {\r\n\t\t\t\t\thitMode = res;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// issue 332\r\n//          this._setDndStatus(otherNode, node, ui.helper, hitMode, res!==false);\r\n\t\t\tthis._setDndStatus(otherNode, node, ui.helper, hitMode, res!==false && hitMode !== null);\r\n\t\t\tbreak;\r\n\t\tcase \"drop\":\r\n\t\t\t// issue 286: don't trigger onDrop, if DnD status is 'reject'\r\n\t\t\tvar isForbidden = ui.helper.hasClass(\"dynatree-drop-reject\");\r\n\t\t\thitMode = ui.helper.data(\"hitMode\");\r\n\t\t\tif(hitMode && dnd.onDrop && !isForbidden){\r\n\t\t\t\tdnd.onDrop(node, otherNode, hitMode, ui, draggable);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"leave\":\r\n\t\t\t// Cancel pending expand request\r\n\t\t\tnode.scheduleAction(\"cancel\");\r\n\t\t\tui.helper.data(\"enterResponse\", null);\r\n\t\t\tui.helper.data(\"hitMode\", null);\r\n\t\t\tthis._setDndStatus(otherNode, node, ui.helper, \"out\", undefined);\r\n\t\t\tif(dnd.onDragLeave){\r\n\t\t\t\tdnd.onDragLeave(node, otherNode, ui, draggable);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"stop\":\r\n\t\t\tnodeTag.removeClass(\"dynatree-drag-source\");\r\n\t\t\tif(dnd.onDragStop){\r\n\t\t\t\tdnd.onDragStop(node);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow \"Unsupported drag event: \" + eventName;\r\n\t\t}\r\n\t\treturn res;\r\n\t},\r\n\r\n\tcancelDrag: function() {\r\n\t\t var dd = $.ui.ddmanager.current;\r\n\t\t if(dd){\r\n\t\t\t dd.cancel();\r\n\t\t }\r\n\t},\r\n\r\n\t// --- end of class\r\n\tlastentry: undefined\r\n};\r\n\r\n/*************************************************************************\r\n * Widget $(..).dynatree\r\n */\r\n\r\n$.widget(\"ui.dynatree\", {\r\n/*\r\n\tinit: function() {\r\n\t\t// ui.core 1.6 renamed init() to _init(): this stub assures backward compatibility\r\n\t\t_log(\"warn\", \"ui.dynatree.init() was called; you should upgrade to jquery.ui.core.js v1.8 or higher.\");\r\n\t\treturn this._init();\r\n\t},\r\n */\r\n\t_init: function() {\r\n//      if( parseFloat($.ui.version) < 1.8 ) {\r\n\t\tif(versionCompare($.ui.version, \"1.8\") < 0){\r\n\t\t\t// jquery.ui.core 1.8 renamed _init() to _create(): this stub assures backward compatibility\r\n\t\t\tif(this.options.debugLevel >= 0){\r\n\t\t\t\t_log(\"warn\", \"ui.dynatree._init() was called; you should upgrade to jquery.ui.core.js v1.8 or higher.\");\r\n\t\t\t}\r\n\t\t\treturn this._create();\r\n\t\t}\r\n\t\t// jquery.ui.core 1.8 still uses _init() to perform \"default functionality\"\r\n\t\tif(this.options.debugLevel >= 2){\r\n\t\t\t_log(\"debug\", \"ui.dynatree._init() was called; no current default functionality.\");\r\n\t\t}\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tvar opts = this.options;\r\n\t\tif(opts.debugLevel >= 1){\r\n\t\t\tlogMsg(\"Dynatree._create(): version='%s', debugLevel=%o.\", $.ui.dynatree.version, this.options.debugLevel);\r\n\t\t}\r\n\t\t// The widget framework supplies this.element and this.options.\r\n\t\tthis.options.event += \".dynatree\"; // namespace event\r\n\r\n\t\tvar divTree = this.element.get(0);\r\n/*      // Clear container, in case it contained some 'waiting' or 'error' text\r\n\t\t// for clients that don't support JS\r\n\t\tif( opts.children || (opts.initAjax && opts.initAjax.url) || opts.initId )\r\n\t\t\t$(divTree).empty();\r\n*/\r\n\t\t// Create the DynaTree object\r\n\t\tthis.tree = new DynaTree(this);\r\n\t\tthis.tree._load();\r\n\t\tthis.tree.logDebug(\"Dynatree._init(): done.\");\r\n\t},\r\n\r\n\tbind: function() {\r\n\t\t// Prevent duplicate binding\r\n\t\tthis.unbind();\r\n\r\n\t\tvar eventNames = \"click.dynatree dblclick.dynatree\";\r\n\t\tif( this.options.keyboard ){\r\n\t\t\t// Note: leading ' '!\r\n\t\t\teventNames += \" keypress.dynatree keydown.dynatree\";\r\n\t\t}\r\n\t\tthis.element.bind(eventNames, function(event){\r\n\t\t\tvar dtnode = $.ui.dynatree.getNode(event.target);\r\n\t\t\tif( !dtnode ){\r\n\t\t\t\treturn true;  // Allow bubbling of other events\r\n\t\t\t}\r\n\t\t\tvar tree = dtnode.tree;\r\n\t\t\tvar o = tree.options;\r\n\t\t\ttree.logDebug(\"event(%s): dtnode: %s\", event.type, dtnode);\r\n\t\t\tvar prevPhase = tree.phase;\r\n\t\t\ttree.phase = \"userEvent\";\r\n\t\t\ttry {\r\n\t\t\t\tswitch(event.type) {\r\n\t\t\t\tcase \"click\":\r\n\t\t\t\t\treturn ( o.onClick && o.onClick.call(tree, dtnode, event)===false ) ? false : dtnode._onClick(event);\r\n\t\t\t\tcase \"dblclick\":\r\n\t\t\t\t\treturn ( o.onDblClick && o.onDblClick.call(tree, dtnode, event)===false ) ? false : dtnode._onDblClick(event);\r\n\t\t\t\tcase \"keydown\":\r\n\t\t\t\t\treturn ( o.onKeydown && o.onKeydown.call(tree, dtnode, event)===false ) ? false : dtnode._onKeydown(event);\r\n\t\t\t\tcase \"keypress\":\r\n\t\t\t\t\treturn ( o.onKeypress && o.onKeypress.call(tree, dtnode, event)===false ) ? false : dtnode._onKeypress(event);\r\n\t\t\t\t}\r\n\t\t\t} catch(e) {\r\n\t\t\t\tvar _ = null; // issue 117\r\n\t\t\t\ttree.logWarning(\"bind(%o): dtnode: %o, error: %o\", event, dtnode, e);\r\n\t\t\t} finally {\r\n\t\t\t\ttree.phase = prevPhase;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// focus/blur don't bubble, i.e. are not delegated to parent <div> tags,\r\n\t\t// so we use the addEventListener capturing phase.\r\n\t\t// See http://www.howtocreate.co.uk/tutorials/javascript/domevents\r\n\t\tfunction __focusHandler(event) {\r\n\t\t\t// Handles blur and focus.\r\n\t\t\t// Fix event for IE:\r\n\t\t\t// doesn't pass JSLint:\r\n//          event = arguments[0] = $.event.fix( event || window.event );\r\n\t\t\t// what jQuery does:\r\n//          var args = jQuery.makeArray( arguments );\r\n//          event = args[0] = jQuery.event.fix( event || window.event );\r\n\t\t\tevent = $.event.fix( event || window.event );\r\n\t\t\tvar dtnode = $.ui.dynatree.getNode(event.target);\r\n\t\t\treturn dtnode ? dtnode._onFocus(event) : false;\r\n\t\t}\r\n\t\tvar div = this.tree.divTree;\r\n\r\n\t\tif( div.addEventListener ) {\r\n\t\t\tdiv.addEventListener(\"focus\", __focusHandler, true);\r\n\t\t\tdiv.addEventListener(\"blur\", __focusHandler, true);\r\n\t\t} else {\r\n\t\t\tdiv.onfocusin = div.onfocusout = __focusHandler;\r\n\t\t}\r\n\t\t// EVENTS\r\n\t\t// disable click if event is configured to something else\r\n//      if (!(/^click/).test(o.event))\r\n//          this.$tabs.bind(\"click.tabs\", function() { return false; });\r\n\r\n\t},\r\n\r\n\tunbind: function() {\r\n\t\tthis.element.unbind(\".dynatree\");\r\n\t},\r\n\r\n/* TODO: we could handle option changes during runtime here (maybe to re-render, ...)\r\n\tsetData: function(key, value) {\r\n\t\tthis.tree.logDebug(\"dynatree.setData('\" + key + \"', '\" + value + \"')\");\r\n\t},\r\n*/\r\n\tenable: function() {\r\n\t\tthis.bind();\r\n\t\t// Call default disable(): remove -disabled from css:\r\n\t\t$.Widget.prototype.enable.apply(this, arguments);\r\n\t},\r\n\r\n\tdisable: function() {\r\n\t\tthis.unbind();\r\n\t\t// Call default disable(): add -disabled to css:\r\n\t\t$.Widget.prototype.disable.apply(this, arguments);\r\n\t},\r\n\r\n\t// --- getter methods (i.e. NOT returning a reference to $)\r\n\tgetTree: function() {\r\n\t\treturn this.tree;\r\n\t},\r\n\r\n\tgetRoot: function() {\r\n\t\treturn this.tree.getRoot();\r\n\t},\r\n\r\n\tgetActiveNode: function() {\r\n\t\treturn this.tree.getActiveNode();\r\n\t},\r\n\r\n\tgetSelectedNodes: function() {\r\n\t\treturn this.tree.getSelectedNodes();\r\n\t},\r\n\r\n\t// ------------------------------------------------------------------------\r\n\tlastentry: undefined\r\n});\r\n\r\n\r\n// The following methods return a value (thus breaking the jQuery call chain):\r\nif(versionCompare($.ui.version, \"1.8\") < 0){\r\n\t$.ui.dynatree.getter = \"getTree getRoot getActiveNode getSelectedNodes\";\r\n}\r\n\r\n/*******************************************************************************\r\n * Tools in ui.dynatree namespace\r\n */\r\n$.extend($.ui.dynatree, {\r\n\t/** @type {String} */\r\n\tversion: \"1.2.8\",\r\n\t/** @type {String} */\r\n\tbuildType: \"release\",\r\n\t/** Expose class object as $.ui.dynatree._DynaTreeClass */\r\n\t_DynaTreeClass: DynaTree,\r\n\t/** Expose class object as $.ui.dynatree._DynaTreeNodeClass */\r\n\t_DynaTreeNodeClass: DynaTreeNode,\r\n\t/**\r\n\t * Return a DynaTreeNode object for a given DOM element\r\n\t */\r\n\tgetNode: function(el) {\r\n\t\tif(el instanceof DynaTreeNode){\r\n\t\t\treturn el; // el already was a DynaTreeNode\r\n\t\t}\r\n\t\tif(el.selector !== undefined){\r\n\t\t\tel = el[0]; // el was a jQuery object: use the DOM element\r\n\t\t}\r\n\t\t// TODO: for some reason $el.parents(\"[dtnode]\") does not work (jQuery 1.6.1)\r\n\t\t// maybe, because dtnode is a property, not an attribute\r\n\t\twhile( el ) {\r\n\t\t\tif(el.dtnode) {\r\n\t\t\t\treturn el.dtnode;\r\n\t\t\t}\r\n\t\t\tel = el.parentNode;\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t/**Return persistence information from cookies.*/\r\n\tgetPersistData: DynaTreeStatus._getTreePersistData\r\n});\r\n\r\n\r\n\r\n/*******************************************************************************\r\n * Plugin default options:\r\n */\r\n$.ui.dynatree.prototype.options = {\r\n\ttitle: \"Dynatree\", // Tree's name (only used for debug output)\r\n\tminExpandLevel: 1, // 1: root node is not collapsible\r\n\timagePath: null, // Path to a folder containing icons. Defaults to 'skin/' subdirectory.\r\n\tchildren: null, // Init tree structure from this object array.\r\n\tinitId: null, // Init tree structure from a <ul> element with this ID.\r\n\tinitAjax: null, // Ajax options used to initialize the tree strucuture.\r\n\tautoFocus: true, // Set focus to first child, when expanding or lazy-loading.\r\n\tkeyboard: true, // Support keyboard navigation.\r\n\tpersist: false, // Persist expand-status to a cookie\r\n\tautoCollapse: false, // Automatically collapse all siblings, when a node is expanded.\r\n\tclickFolderMode: 3, // 1:activate, 2:expand, 3:activate and expand\r\n\tactiveVisible: true, // Make sure, active nodes are visible (expanded).\r\n\tcheckbox: false, // Show checkboxes.\r\n\tselectMode: 2, // 1:single, 2:multi, 3:multi-hier\r\n\tfx: null, // Animations, e.g. null or { height: \"toggle\", duration: 200 }\r\n\tnoLink: false, // Use <span> instead of <a> tags for all nodes\r\n\t// Low level event handlers: onEvent(dtnode, event): return false, to stop default processing\r\n\tonClick: null, // null: generate focus, expand, activate, select events.\r\n\tonDblClick: null, // (No default actions.)\r\n\tonKeydown: null, // null: generate keyboard navigation (focus, expand, activate).\r\n\tonKeypress: null, // (No default actions.)\r\n\tonFocus: null, // null: set focus to node.\r\n\tonBlur: null, // null: remove focus from node.\r\n\r\n\t// Pre-event handlers onQueryEvent(flag, dtnode): return false, to stop processing\r\n\tonQueryActivate: null, // Callback(flag, dtnode) before a node is (de)activated.\r\n\tonQuerySelect: null, // Callback(flag, dtnode) before a node is (de)selected.\r\n\tonQueryExpand: null, // Callback(flag, dtnode) before a node is expanded/collpsed.\r\n\r\n\t// High level event handlers\r\n\tonPostInit: null, // Callback(isReloading, isError) when tree was (re)loaded.\r\n\tonActivate: null, // Callback(dtnode) when a node is activated.\r\n\tonDeactivate: null, // Callback(dtnode) when a node is deactivated.\r\n\tonSelect: null, // Callback(flag, dtnode) when a node is (de)selected.\r\n\tonExpand: null, // Callback(flag, dtnode) when a node is expanded/collapsed.\r\n\tonLazyRead: null, // Callback(dtnode) when a lazy node is expanded for the first time.\r\n\tonCustomRender: null, // Callback(dtnode) before a node is rendered. Return a HTML string to override.\r\n\tonCreate: null, // Callback(dtnode, nodeSpan) after a node was rendered for the first time.\r\n\tonRender: null, // Callback(dtnode, nodeSpan) after a node was rendered.\r\n\t\t\t\t// postProcess is similar to the standard dataFilter hook,\r\n\t\t\t\t// but it is also called for JSONP\r\n\tpostProcess: null, // Callback(data, dataType) before an Ajax result is passed to dynatree\r\n\r\n\t// Drag'n'drop support\r\n\tdnd: {\r\n\t\t// Make tree nodes draggable:\r\n\t\tonDragStart: null, // Callback(sourceNode), return true, to enable dnd\r\n\t\tonDragStop: null, // Callback(sourceNode)\r\n//      helper: null,\r\n\t\trevert: false, // true: slide helper back to source if drop is rejected\r\n\t\t// Make tree nodes accept draggables\r\n\t\tautoExpandMS: 1000, // Expand nodes after n milliseconds of hovering.\r\n\t\tpreventVoidMoves: true, // Prevent dropping nodes 'before self', etc.\r\n\t\tonDragEnter: null, // Callback(targetNode, sourceNode, ui, draggable)\r\n\t\tonDragOver: null, // Callback(targetNode, sourceNode, hitMode)\r\n\t\tonDrop: null, // Callback(targetNode, sourceNode, hitMode, ui, draggable)\r\n\t\tonDragLeave: null // Callback(targetNode, sourceNode)\r\n\t},\r\n\tajaxDefaults: { // Used by initAjax option\r\n\t\tcache: false, // false: Append random '_' argument to the request url to prevent caching.\r\n\t\ttimeout: 0, // >0: Make sure we get an ajax error for invalid URLs\r\n\t\tdataType: \"json\" // Expect json format and pass json object to callbacks.\r\n\t},\r\n\tstrings: {\r\n\t\tloading: \"Loading&#8230;\",\r\n\t\tloadError: \"Load error!\"\r\n\t},\r\n\tgenerateIds: false, // Generate id attributes like <span id='dynatree-id-KEY'>\r\n\tidPrefix: \"dynatree-id-\", // Used to generate node id's like <span id=\"dynatree-id-<key>\">.\r\n\tkeyPathSeparator: \"/\", // Used by node.getKeyPath() and tree.loadKeyPath().\r\n//    cookieId: \"dynatree-cookie\", // Choose a more unique name, to allow multiple trees.\r\n\tcookieId: \"dynatree\", // Choose a more unique name, to allow multiple trees.\r\n\tcookie: {\r\n\t\texpires: null //7, // Days or Date; null: session cookie\r\n//      path: \"/\", // Defaults to current page\r\n//      domain: \"jquery.com\",\r\n//      secure: true\r\n\t},\r\n\t// Class names used, when rendering the HTML markup.\r\n\t// Note:\r\n\t// These settings only apply on initialisation.\r\n\t// If only single entries are passed for options.classNames, all other\r\n\t// values are still set to default.\r\n\tclassNames: {\r\n\t\tcontainer: \"dynatree-container\",\r\n\t\tnode: \"dynatree-node\",\r\n\t\tfolder: \"dynatree-folder\",\r\n//      document: \"dynatree-document\",\r\n\r\n\t\tempty: \"dynatree-empty\",\r\n\t\tvline: \"dynatree-vline\",\r\n\t\texpander: \"dynatree-expander\",\r\n\t\tconnector: \"dynatree-connector\",\r\n\t\tcheckbox: \"dynatree-checkbox\",\r\n\t\tradio: \"dynatree-radio\",\r\n\t\tnodeIcon: \"dynatree-icon\",\r\n\t\ttitle: \"dynatree-title\",\r\n\t\tnoConnector: \"dynatree-no-connector\",\r\n\r\n\t\tnodeError: \"dynatree-statusnode-error\",\r\n\t\tnodeWait: \"dynatree-statusnode-wait\",\r\n\t\thidden: \"dynatree-hidden\",\r\n\t\tcombinedExpanderPrefix: \"dynatree-exp-\",\r\n\t\tcombinedIconPrefix: \"dynatree-ico-\",\r\n\t\tnodeLoading: \"dynatree-loading\",\r\n//      disabled: \"dynatree-disabled\",\r\n\t\thasChildren: \"dynatree-has-children\",\r\n\t\tactive: \"dynatree-active\",\r\n\t\tselected: \"dynatree-selected\",\r\n\t\texpanded: \"dynatree-expanded\",\r\n\t\tlazy: \"dynatree-lazy\",\r\n\t\tfocused: \"dynatree-focused\",\r\n\t\tpartsel: \"dynatree-partsel\",\r\n\t\tlastsib: \"dynatree-lastsib\"\r\n\t},\r\n\tdebugLevel: 1, // 0:quiet, 1:normal, 2:debug\r\n\r\n\t// ------------------------------------------------------------------------\r\n\tlastentry: undefined\r\n};\r\n//\r\nif(versionCompare($.ui.version, \"1.8\") < 0){\r\n\t$.ui.dynatree.defaults = $.ui.dynatree.prototype.options;\r\n}\r\n\r\n/*******************************************************************************\r\n * Reserved data attributes for a tree node.\r\n */\r\n$.ui.dynatree.nodedatadefaults = {\r\n\ttitle: null, // (required) Displayed name of the node (html is allowed here)\r\n\tkey: null, // May be used with activate(), select(), find(), ...\r\n\tisFolder: false, // Use a folder icon. Also the node is expandable but not selectable.\r\n\tisLazy: false, // Call onLazyRead(), when the node is expanded for the first time to allow for delayed creation of children.\r\n\ttooltip: null, // Show this popup text.\r\n\thref: null, // Added to the generated <a> tag.\r\n\ticon: null, // Use a custom image (filename relative to tree.options.imagePath). 'null' for default icon, 'false' for no icon.\r\n\taddClass: null, // Class name added to the node's span tag.\r\n\tnoLink: false, // Use <span> instead of <a> tag for this node\r\n\tactivate: false, // Initial active status.\r\n\tfocus: false, // Initial focused status.\r\n\texpand: false, // Initial expanded status.\r\n\tselect: false, // Initial selected status.\r\n\thideCheckbox: false, // Suppress checkbox display for this node.\r\n\tunselectable: false, // Prevent selection.\r\n//  disabled: false,\r\n\t// The following attributes are only valid if passed to some functions:\r\n\tchildren: null, // Array of child nodes.\r\n\t// NOTE: we can also add custom attributes here.\r\n\t// This may then also be used in the onActivate(), onSelect() or onLazyTree() callbacks.\r\n\t// ------------------------------------------------------------------------\r\n\tlastentry: undefined\r\n};\r\n\r\n/*******************************************************************************\r\n * Drag and drop support\r\n */\r\nfunction _initDragAndDrop(tree) {\r\n\tvar dnd = tree.options.dnd || null;\r\n\t// Register 'connectToDynatree' option with ui.draggable\r\n\tif(dnd && (dnd.onDragStart || dnd.onDrop)) {\r\n\t\t_registerDnd();\r\n\t}\r\n\t// Attach ui.draggable to this Dynatree instance\r\n\tif(dnd && dnd.onDragStart ) {\r\n\t\ttree.$tree.draggable({\r\n\t\t\taddClasses: false,\r\n\t\t\tappendTo: \"body\",\r\n\t\t\tcontainment: false,\r\n\t\t\tdelay: 0,\r\n\t\t\tdistance: 4,\r\n//            revert: false,\r\n\t\t\t// slide back, when dropping over non-target\r\n\t\t\trevert: dnd.revert !== true ? false : function(dropped){\r\n\t\t\t\t// This is called by ui-draggable._mouseStop() when a drag stops.\r\n\t\t\t\t// Return `true` to let the helper slide back.\r\n\t\t\t\tlogMsg(\"draggable.revert(), dropped=\", dropped);\r\n\t\t\t\tif(typeof dropped === \"boolean\"){\r\n\t\t\t\t\t// dropped == true, when dropped over a simple, valid droppable target.\r\n\t\t\t\t\t// false, when dropped outside a drop target.\r\n\t\t\t\t\treturn !dropped;\r\n\t\t\t\t}\r\n\t\t\t\t// Drop comes from another tree. Default behavior is to assume\r\n\t\t\t\t// a valid drop, since we are over a drop-target.\r\n\t\t\t\t// Therefore we have to make an extra check, if the target node\r\n\t\t\t\t// was rejected by a Dynatree callback.\r\n\t\t\t\tvar helper = $.ui.ddmanager && $.ui.ddmanager.current && $.ui.ddmanager.current.helper;\r\n\t\t\t\tvar isRejected = helper && helper.hasClass(\"dynatree-drop-reject\");\r\n\t\t\t\treturn isRejected;\r\n\t\t\t\t},\r\n\t\t\tscroll: true, // issue 244: enable scrolling (if ul.dynatree-container)\r\n\t\t\tscrollSpeed: 7,\r\n\t\t\tscrollSensitivity: 10,\r\n\t\t\t// Delegate draggable.start, drag, and stop events to our handler\r\n\t\t\tconnectToDynatree: true,\r\n\t\t\t// Let source tree create the helper element\r\n\t\t\thelper: function(event) {\r\n\t\t\t\tvar sourceNode = $.ui.dynatree.getNode(event.target);\r\n\t\t\t\tif(!sourceNode){ // issue 211\r\n\t\t\t\t\treturn \"<div></div>\";\r\n\t\t\t\t}\r\n\t\t\t\treturn sourceNode.tree._onDragEvent(\"helper\", sourceNode, null, event, null, null);\r\n\t\t\t},\r\n\t\t\tstart: function(event, ui) {\r\n\t\t\t\t// See issues 211, 268, 278\r\n//              var sourceNode = $.ui.dynatree.getNode(event.target);\r\n\t\t\t\tvar sourceNode = ui.helper.data(\"dtSourceNode\");\r\n\t\t\t\treturn !!sourceNode; // Abort dragging if no Node could be found\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t// Attach ui.droppable to this Dynatree instance\r\n\tif(dnd && dnd.onDrop) {\r\n\t\ttree.$tree.droppable({\r\n\t\t\taddClasses: false,\r\n\t\t\ttolerance: \"pointer\",\r\n//            tolerance: \"intersect\",\r\n\t\t\tgreedy: false\r\n\t\t});\r\n\t}\r\n}\r\n\r\n//--- Extend ui.draggable event handling --------------------------------------\r\nvar didRegisterDnd = false;\r\nvar _registerDnd = function() {\r\n\tif(didRegisterDnd){\r\n\t\treturn;\r\n\t}\r\n\t// Register proxy-functions for draggable.start/drag/stop\r\n\t$.ui.plugin.add(\"draggable\", \"connectToDynatree\", {\r\n\t\tstart: function(event, ui) {\r\n\t\t\t// issue 386\r\n\t\t\tvar draggable = $(this).data(\"ui-draggable\") || $(this).data(\"draggable\"),\r\n\t\t\t\tsourceNode = ui.helper.data(\"dtSourceNode\") || null;\r\n//          logMsg(\"draggable-connectToDynatree.start, %s\", sourceNode);\r\n//          logMsg(\"    this: %o\", this);\r\n//          logMsg(\"    event: %o\", event);\r\n//          logMsg(\"    draggable: %o\", draggable);\r\n//          logMsg(\"    ui: %o\", ui);\r\n\r\n\t\t\tif(sourceNode) {\r\n\t\t\t\t// Adjust helper offset, so cursor is slightly outside top/left corner\r\n//              draggable.offset.click.top -= event.target.offsetTop;\r\n//              draggable.offset.click.left -= event.target.offsetLeft;\r\n\t\t\t\tdraggable.offset.click.top = -2;\r\n\t\t\t\tdraggable.offset.click.left = + 16;\r\n//              logMsg(\"    draggable2: %o\", draggable);\r\n//              logMsg(\"    draggable.offset.click FIXED: %s/%s\", draggable.offset.click.left, draggable.offset.click.top);\r\n\t\t\t\t// Trigger onDragStart event\r\n\t\t\t\t// TODO: when called as connectTo..., the return value is ignored(?)\r\n\t\t\t\treturn sourceNode.tree._onDragEvent(\"start\", sourceNode, null, event, ui, draggable);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrag: function(event, ui) {\r\n\t\t\t// issue 386\r\n\t\t\tvar draggable = $(this).data(\"ui-draggable\") || $(this).data(\"draggable\"),\r\n\t\t\t\tsourceNode = ui.helper.data(\"dtSourceNode\") || null,\r\n\t\t\t\tprevTargetNode = ui.helper.data(\"dtTargetNode\") || null,\r\n\t\t\t\ttargetNode = $.ui.dynatree.getNode(event.target);\r\n//          logMsg(\"$.ui.dynatree.getNode(%o): %s\", event.target, targetNode);\r\n//          logMsg(\"connectToDynatree.drag: helper: %o\", ui.helper[0]);\r\n\t\t\tif(event.target && !targetNode){\r\n\t\t\t\t// We got a drag event, but the targetNode could not be found\r\n\t\t\t\t// at the event location. This may happen,\r\n\t\t\t\t// 1. if the mouse jumped over the drag helper,\r\n\t\t\t\t// 2. or if non-dynatree element is dragged\r\n\t\t\t\t// We ignore it:\r\n\t\t\t\tvar isHelper = $(event.target).closest(\"div.dynatree-drag-helper,#dynatree-drop-marker\").length > 0;\r\n\t\t\t\tif(isHelper){\r\n//                  logMsg(\"Drag event over helper: ignored.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n//          logMsg(\"draggable-connectToDynatree.drag: targetNode(from event): %s, dtTargetNode: %s\", targetNode, ui.helper.data(\"dtTargetNode\"));\r\n\t\t\tui.helper.data(\"dtTargetNode\", targetNode);\r\n\t\t\t// Leaving a tree node\r\n\t\t\tif(prevTargetNode && prevTargetNode !== targetNode ) {\r\n\t\t\t\tprevTargetNode.tree._onDragEvent(\"leave\", prevTargetNode, sourceNode, event, ui, draggable);\r\n\t\t\t}\r\n\t\t\tif(targetNode){\r\n\t\t\t\tif(!targetNode.tree.options.dnd.onDrop) {\r\n\t\t\t\t\t// not enabled as drop target\r\n\t\t\t\t} else if(targetNode === prevTargetNode) {\r\n\t\t\t\t\t// Moving over same node\r\n\t\t\t\t\ttargetNode.tree._onDragEvent(\"over\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Entering this node first time\r\n\t\t\t\t\ttargetNode.tree._onDragEvent(\"enter\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// else go ahead with standard event handling\r\n\t\t},\r\n\t\tstop: function(event, ui) {\r\n\t\t\t// issue 386\r\n\t\t\tvar draggable = $(this).data(\"ui-draggable\") || $(this).data(\"draggable\"),\r\n\t\t\t\tsourceNode = ui.helper.data(\"dtSourceNode\") || null,\r\n\t\t\t\ttargetNode = ui.helper.data(\"dtTargetNode\") || null,\r\n//              mouseDownEvent = draggable._mouseDownEvent,\r\n\t\t\t\teventType = event.type,\r\n\t\t\t\tdropped = (eventType == \"mouseup\" && event.which == 1);\r\n\t\t\tlogMsg(\"draggable-connectToDynatree.stop: targetNode(from event): %s, dtTargetNode: %s\", targetNode, ui.helper.data(\"dtTargetNode\"));\r\n//          logMsg(\"draggable-connectToDynatree.stop, %s\", sourceNode);\r\n//          logMsg(\"    type: %o, downEvent: %o, upEvent: %o\", eventType, mouseDownEvent, event);\r\n//          logMsg(\"    targetNode: %o\", targetNode);\r\n\t\t\tif(!dropped){\r\n\t\t\t\tlogMsg(\"Drag was cancelled\");\r\n\t\t\t}\r\n\t\t\tif(targetNode) {\r\n\t\t\t\tif(dropped){\r\n\t\t\t\t\ttargetNode.tree._onDragEvent(\"drop\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t\t\t}\r\n\t\t\t\ttargetNode.tree._onDragEvent(\"leave\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t\t}\r\n\t\t\tif(sourceNode){\r\n\t\t\t\tsourceNode.tree._onDragEvent(\"stop\", sourceNode, null, event, ui, draggable);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tdidRegisterDnd = true;\r\n};\r\n\r\n// ---------------------------------------------------------------------------\r\n}(jQuery));\r\n"]}