{"version":3,"sources":["polyfills.js"],"names":["window","console","log","debug","info","assert","Object","assign","_","extend","lastTime","x","vendors","length","requestAnimationFrame","callback","element","currTime","Math","Date","getTime","timeToCall","id","setTimeout","cancelAnimationFrame","clearTimeout","incompatibilities","compatible","CanvasRenderingContext2D","name","sessionStorage","err","filter","feature","map","root","document","querySelectorAll","item","location","href","join"],"mappings":"+CAKA,WAWIA,OAAOC,QAAUD,OAAOC,UAFxBC,IAAA,aACAC,MAAA,aAIIC,KAAM,aAHVJ,KAAAA,aACIE,MAAAA,aACAC,OAAAA,cAIAE,OAAAA,OAAQC,OAAAC,QAAAC,EAAaC,OASzB,IAAK,IANLC,EAAA,EACAJ,GAAOC,KAASD,MAAOC,SAAUC,KAKxBG,EAAI,EAAGA,EAAIC,EAAQC,SAAWb,OAAOc,wBAAyBH,EAHvEX,OAAAc,sBACIJ,OAAAA,EAAJC,GAAA,yBACAX,OAAIY,4BACJZ,OAASW,EAAOA,GAAIC,+BAKnBZ,OAAAc,wBAGGd,OAAOc,sBAAwB,SAASC,EAAUC,GADlD,IAAChB,GAAOc,IAAAA,MAAAA,UAEAG,EAAWC,KAAIC,IAAOC,EAAAA,IAA1BH,EAAAP,IACIW,EAAAA,OAAAA,WAAa,WACbC,EAAKtB,EAAOuB,IACZR,GAEJL,OADCA,EAAEW,EAFHA,EAGAX,IAIHV,OAAOwB,uBAAZxB,OAAKA,qBAAOwB,SACRxB,GACIyB,aAAaH,KAIrB,IAuBQI,IApBAC,KAAAA,SACIA,WAAO3B,WACV,OAAAA,OAAA4B,4BAKGC,KAAA,iBACIF,WAAA,WACH,IACD,OAAO3B,OAAP8B,eAAAjB,QAAA,EACH,MAAAkB,IAdT,OAAA,KAkBwBC,OAAxB,SAAAC,GAEQ,OAAQA,EAAQN,eAOxBO,IAAK,SAACR,GACF,OAAIS,EAAOC,OAIXnC,GAAAA,EAAYY,OAAA,CACf,IAAAsB,EAAAC,SAAAC,iBAAA,qBAAAC,KAAA,GAnFLH,IAgFYnC,OAAOuC,SAAWJ,EAAKK,KAAO,oCAElCvC,QAAQC,IAAI,0BAA4BwB,EAAkBe,KAAK,QAlFvE","file":"../scripts/polyfills.js","sourcesContent":["/**\n    Perform feature inference and redirect if below some minimum (must have canvas, etc.)\n    and polyfill for non-standard features.\n */\n\n(function() {\n    /* TODO: move to modernizr or something besides us doing this...\n     * These are across all of our apps (reports, tool shed), but:\n     *     these should be configurable via options because they all need different things.\n     * So, analysis-polyfills.js, reports-polyfills.js (or analysis/polyfills)\n     */\n    \"use strict\";\n    /*globals window, clearTimeout */\n\n    // ------------------------------------------------------------------ polyfills\n    // console protection needed in some versions of IE (at this point (IE>=9), shouldn't be needed)\n    window.console = window.console || {\n        log: function() {},\n        debug: function() {},\n        info: function() {},\n        warn: function() {},\n        error: function() {},\n        assert: function() {}\n    };\n\n    // phantomjs: does not have the native extend fn assign\n    Object.assign = Object.assign || _.extend;\n\n    // requestAnimationFrame polyfill\n    var lastTime = 0;\n    var vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame =\n            window[vendors[x] + \"RequestAnimationFrame\"];\n        window.cancelRequestAnimationFrame =\n            window[vendors[x] + \"CancelRequestAnimationFrame\"];\n    }\n\n    if (!window.requestAnimationFrame)\n        window.requestAnimationFrame = function(callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() {\n                callback(currTime + timeToCall);\n            }, timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n\n    if (!window.cancelAnimationFrame)\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n\n    // ------------------------------------------------------------------ can't/won't polyfill\n    var features = [\n        {\n            name: \"canvas\",\n            compatible: function() {\n                return window.CanvasRenderingContext2D;\n            }\n        },\n        {\n            name: \"sessionStorage\",\n            compatible: function() {\n                try {\n                    return window.sessionStorage.length >= 0;\n                } catch (err) {}\n                return false;\n            }\n        }\n    ];\n    // build a list of feature names for features that were not found\n    var incompatibilities = features\n        .filter(function(feature) {\n            return !feature.compatible();\n        })\n        .map(function(feature) {\n            return feature.name;\n        });\n\n    // if there are needed features missing, follow the index link to the static incompat warning\n    if (!!incompatibilities.length) {\n        var root = document.querySelectorAll('link[rel=\"index\"]').item(0);\n        if (root) {\n            window.location = root.href + \"static/incompatible-browser.html\";\n        }\n        console.log(\"incompatible browser:\\n\" + incompatibilities.join(\"\\n\"));\n    }\n})();\n"]}