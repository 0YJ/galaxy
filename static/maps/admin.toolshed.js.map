{"version":3,"sources":["admin.toolshed.js"],"names":["define","AdminToolshedRouter","initialize","routesHit","mod_categories_view","Backbone","mod_repository_view","mod_repoqueue_view","bind","mod_workflows_view","routes","Router","extend","this","history","on","trackPageview","","sheds","queue","workflows","status/r/:repositories","status","categories/s/:tool_shed","category/s/:tool_shed/c/:cateory_id","back","GalaxyAdminToolshedApp","window","known_views","trigger","replace","GalaxyApp","View","app_config","Galaxy","admintoolshedapp","adminRepoQueueView","admin_toolshed_router","adminShedListView","reDraw","RepoQueueView","adminShedCategoriesView","adminShedCategoryView","mod_shed_list_view","ShedListView","tool_shed","adminRepositoryView","repository_id","category_id","repositories","mod_repositories_view","Category","adminWorkflowsView","Workflows","pushState","adminRepoStatusView","split","mod_repo_status_view","RepoStatus","start"],"mappings":"aAAAA,QAAQ,8BACA,+BADA,iCAGA,+BAYAC,qCAVA,gCAYAC,+BACI,SAAKC,EACLC,EACAC,EAA2CC,EAAqBC,EAC3DC,EANoCC,GAS7CC,IAAAA,EAAQL,SAAAM,OAAAC,QAEJV,WAAA,WACAW,KAAAV,UAHI,EAKJE,SAAAS,QAAAC,GAAA,QAA+C,WAL3CF,KAAAV,aAAAU,MAMJA,KAAAL,KAA+C,QAN3CK,KAAAG,gBASJN,QAlByCO,GAAA,YAWzCC,MAA+C,YAUnDC,MAAA,QARIC,UAA+C,YAC/CC,yBAA+C,SAC/CC,OAA+C,SAC/CC,0BAA+C,aAC/CC,sCAA+C,eAUnDC,2CAAiB,cAAjBA,KAAM,WAUNC,KAAAA,UAAyBrB,EARjBsB,OAAOb,QAAQW,OAWnBG,KAAAA,SAAc,KAADC,SAAA,EAAuBC,SAAU,OAoEtD,OACIC,UAxEyB1B,SAAS2B,KAAKpB,QAW/BqB,YACIC,aAAAA,YAAOC,QAAiBC,SAAAA,aAAxB,eAAA,gBAIHlC,WAAA,WACJgC,OAPDC,iBAAAtB,KAQAA,KAAKwB,sBAAL,IAA8BpC,EAEtBiC,KAAAA,sBAAOC,GAAAA,cAAiBG,WAD5BJ,OAGKC,iBAAAC,mBACDF,OAAOC,iBAAiBG,mBAAxBC,SAGHF,OAAAA,iBAAyBD,mBAAoB,IAAA7B,EAAoBiC,gBAGjE3B,KAFDwB,sBAGKtB,GAAA,kBAAA,WACDmB,OAAOC,iBAAiBM,kBAC3BP,OAAAC,iBAAAG,kBAAAC,SAGGL,OAAOC,iBAAiBO,kBAAAA,IAAuBC,EAAAC,eAI/CV,KAAAA,sBAAOC,GAAAA,mBAAiBO,SAAwBG,GACnDX,OAAAC,iBAAAM,wBANLP,OAAAC,iBAAAM,wBAAAF,QAAAM,UAAAA,EAAAf,QAAA,MAAA,SAUQI,OAAOC,iBAAiBW,wBAAxB,IAAoDD,EAAqBf,cAAVe,UAAiCE,EAAAA,QAAeA,MAAAA,WAIlHlC,KAAAwB,sBAAAtB,GAAA,qBAAA,SAAA8B,EAAAG,GANLd,OAAAC,iBAAAO,sBAQKL,OAAAA,iBAAyBK,sBAAgBH,QAASU,UAAcJ,EAAAf,QAAA,MAAA,OAAAkB,YAAAA,IACjEd,OAGKC,iBAAAO,sBAAA,IAAAQ,EAAAC,UAAAN,UAAAA,EAAAf,QAAA,MAAA,OAAAkB,YAAAA,MAGRnC,KAPDwB,sBAAAtB,GAAA,mBAAA,SAAA8B,EAAAE,GAQKV,OAAAA,iBAAyBS,oBACtBZ,OAAOC,iBAAiBiB,oBAAoBb,QAAAM,UAAAA,EAAAf,QAAA,MAAA,OAAAiB,cAAAA,IAI5Cb,OAAOC,iBAAiBiB,oBAAqB,IAAI3C,EAAmB4C,aAApER,UAAAA,EAAAf,QAAA,MAAA,OAAAiB,cAAAA,MAbRlC,KAAKwB,sBAAsBtB,GAAG,eAAgB,SAASkC,GAiBvD5C,OAASS,iBAAewC,oBAC3BpB,OAAAC,iBAAAoB,oBAAAhB,QAAAU,aAAAA,EAAAO,MAAA,OAGEtB,OAAAC,iBAAAoB,oBAAA,IAAAE,EAAAC,YAAAT,aAAAA,EAAAO,MAAA,SA3HX3C,KAAAwB,sBAAAtB,GAAA,kBAAA,WA+GoBmB,OAAOC,iBAAiBiB,mBACxBlB,OAAOC,iBAAiBiB,mBAAmBb,SAG3CL,OAAOC,iBAAiBiB,mBAAqB,IAAI3C,EAAmB4C,YAI5EhD,SAASS,QAAQ6C,OAAOL,WAAW","file":"../scripts/admin.toolshed.js","sourcesContent":["define([\"mvc/toolshed/shed-list-view\",\n        \"mvc/toolshed/categories-view\",\n        \"mvc/toolshed/repositories-view\",\n        \"mvc/toolshed/repository-view\",\n        \"mvc/toolshed/repository-queue-view\",\n        \"mvc/toolshed/repo-status-view\",\n        \"mvc/toolshed/workflows-view\"],\n        function(mod_shed_list_view,\n                 mod_categories_view,\n                 mod_repositories_view,\n                 mod_repository_view,\n                 mod_repoqueue_view,\n                 mod_repo_status_view,\n                 mod_workflows_view) {\n\n    var AdminToolshedRouter = Backbone.Router.extend({\n\n        initialize: function() {\n            this.routesHit = 0;\n            // keep count of number of routes handled by the application\n            Backbone.history.on( 'route', function() { this.routesHit++; }, this );\n            this.bind( 'route', this.trackPageview );\n        },\n\n        routes: {\n            \"\"                                           : \"toolsheds\",\n            \"sheds\"                                      : \"toolsheds\",\n            \"queue\"                                      : \"queue\",\n            \"workflows\"                                  : \"workflows\",\n            \"status/r/:repositories\"                     : \"status\",\n            \"status\"                                     : \"status\",\n            \"categories/s/:tool_shed\"                    : \"categories\",\n            \"category/s/:tool_shed/c/:cateory_id\"        : \"repositories\",\n            \"repository/s/:tool_shed/r/:repository_id\"   : \"repository\",\n        },\n\n        /**\n        * If more than one route has been hit the user did not land on current\n        * page directly so we can go back safely. Otherwise go to the home page.\n        * Use replaceState if available so the navigation doesn't create an\n        * extra history entry\n        */\n        back: function() {\n            if( this.routesHit > 1 ) {\n                window.history.back();\n            } else {\n                this.navigate( '#', { trigger:true, replace:true } );\n            }\n        }\n\n    });\n\n    var GalaxyAdminToolshedApp = Backbone.View.extend({\n\n        app_config: {\n            known_views: ['toolsheds', 'queue', 'status', 'categories', 'repositories', 'repoository']\n        },\n\n        initialize: function() {\n            Galaxy.admintoolshedapp = this;\n            this.admin_toolshed_router = new AdminToolshedRouter();\n\n            this.admin_toolshed_router.on('route:queue', function() {\n                if (Galaxy.admintoolshedapp.adminRepoQueueView) {\n                    Galaxy.admintoolshedapp.adminRepoQueueView.reDraw();\n                }\n                else {\n                    Galaxy.admintoolshedapp.adminRepoQueueView = new mod_repoqueue_view.RepoQueueView();\n                }\n            });\n            this.admin_toolshed_router.on('route:toolsheds', function() {\n                if (Galaxy.admintoolshedapp.adminShedListView) {\n                    Galaxy.admintoolshedapp.adminShedListView.reDraw();\n                }\n                else {\n                    Galaxy.admintoolshedapp.adminShedListView = new mod_shed_list_view.ShedListView();\n                }\n            });\n            this.admin_toolshed_router.on('route:categories', function(tool_shed) {\n                if (Galaxy.admintoolshedapp.adminShedCategoriesView) {\n                    Galaxy.admintoolshedapp.adminShedCategoriesView.reDraw({tool_shed: tool_shed.replace(/\\//g, '%2f')});\n                }\n                else {\n                    Galaxy.admintoolshedapp.adminShedCategoriesView = new mod_categories_view.CategoryView({tool_shed: tool_shed.replace(/\\//g, '%2f')});\n                }\n            });\n            this.admin_toolshed_router.on('route:repositories', function(tool_shed, category_id) {\n                if (Galaxy.admintoolshedapp.adminShedCategoryView) {\n                    Galaxy.admintoolshedapp.adminShedCategoryView.reDraw({tool_shed: tool_shed.replace(/\\//g, '%2f'), category_id: category_id});\n                }\n                else {\n                    Galaxy.admintoolshedapp.adminShedCategoryView = new mod_repositories_view.Category({tool_shed: tool_shed.replace(/\\//g, '%2f'), category_id: category_id});\n                }\n            });\n            this.admin_toolshed_router.on('route:repository', function(tool_shed, repository_id) {\n                if (Galaxy.admintoolshedapp.adminRepositoryView) {\n                    Galaxy.admintoolshedapp.adminRepositoryView.reDraw({tool_shed: tool_shed.replace(/\\//g, '%2f'), repository_id: repository_id});\n                }\n                else {\n                    Galaxy.admintoolshedapp.adminRepositoryView = new mod_repository_view.RepoDetails({tool_shed: tool_shed.replace(/\\//g, '%2f'), repository_id: repository_id});\n                }\n            });\n            this.admin_toolshed_router.on('route:status', function(repositories) {\n                if (Galaxy.admintoolshedapp.adminRepoStatusView) {\n                    Galaxy.admintoolshedapp.adminRepoStatusView.reDraw({repositories: repositories.split('|')});\n                }\n                else {\n                    Galaxy.admintoolshedapp.adminRepoStatusView = new mod_repo_status_view.RepoStatus({repositories: repositories.split('|')});\n                }\n            });\n            this.admin_toolshed_router.on('route:workflows', function() {\n                if (Galaxy.admintoolshedapp.adminWorkflowsView) {\n                    Galaxy.admintoolshedapp.adminWorkflowsView.reDraw();\n                }\n                else {\n                    Galaxy.admintoolshedapp.adminWorkflowsView = new mod_workflows_view.Workflows();\n                }\n            });\n\n            Backbone.history.start({pushState: false});\n        },\n    });\n\n    return {\n        GalaxyApp: GalaxyAdminToolshedApp\n    };\n\n});"]}