{"version":3,"sources":["mvc/citation/citation-view.js"],"names":["define","baseMVC","citationModel","_l","CitationView","Backbone","View","extend","tagName","className","render","this","$el","append","formattedReference","model","entryType","fields","ref","authorsAndYear","_asSentence","author","year","title","pages","address","volume","number","journal","booktitle","howpublished","note","institution","type","_formatBookInfo","doiUrl","doi","url","info","chapter","editor","publisher","series","issn","str","trim","CitationListView","el","initialize","listenTo","collection","renderCitation","events","click .citations-to-bibtex","click .citations-to-formatted","citation","citationView","$","rawTextarea","val","attributes","content","html","citationsElement","each","item","showFormatted","showBibtex","show","hide","select","partialWarningElement","partial","join"],"mappings":"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","file":"../../../scripts/mvc/citation/citation-view.js","sourcesContent":["define([\n    \"mvc/base-mvc\",\n    \"mvc/citation/citation-model\",\n    \"utils/localization\"\n], function( baseMVC, citationModel, _l ){\n\nvar CitationView = Backbone.View.extend({\n    tagName: 'div',\n    className: 'citations',\n    render: function() {\n        this.$el.append( \"<p>\" + this.formattedReference() + \"</p>\" );\n        return this;\n    },\n    formattedReference: function() {\n        var model = this.model;\n        var entryType = model.entryType();\n        var fields = model.fields();\n\n        var ref = \"\";\n        // Code inspired by...\n        // https://github.com/vkaravir/bib-publication-list/blob/master/src/bib-publication-list.js\n        var authorsAndYear = this._asSentence( (fields.author ? fields.author : \"\") + (fields.year ? (\" (\" + fields.year + \")\") : \"\") ) + \" \";\n        var title = fields.title || \"\";\n        var pages = fields.pages ? (\"pp. \" + fields.pages) : \"\";\n        var address = fields.address;\n        if( entryType == \"article\" ) {\n            var volume = (fields.volume ? fields.volume : \"\") +\n                         (fields.number ? ( \" (\" + fields.number + \")\" ) : \"\") +\n                         (pages ? \", \" + pages : \"\");\n            ref = authorsAndYear + this._asSentence(title) +\n                    (fields.journal ? (\"In <em>\" + fields.journal + \", \") : \"\") +\n                    this._asSentence(volume) + \n                    this._asSentence(fields.address) +\n                    \"<\\/em>\";\n        } else if( entryType == \"inproceedings\" || entryType == \"proceedings\" ) {\n            ref = authorsAndYear + \n                    this._asSentence(title) + \n                    (fields.booktitle ? (\"In <em>\" + fields.booktitle + \", \") : \"\") +\n                    (pages ? pages : \"\") +\n                    (address ? \", \" + address : \"\") + \n                    \".<\\/em>\";\n        } else if( entryType == \"mastersthesis\" || entryType == \"phdthesis\" ) {\n            ref = authorsAndYear + this._asSentence(title) +\n                    (fields.howpublished ? fields.howpublished + \". \" : \"\") +\n                    (fields.note ? fields.note + \".\" : \"\");\n        } else if( entryType == \"techreport\" ) {\n            ref = authorsAndYear + this._asSentence(title) +\n                    this._asSentence(fields.institution) +\n                    this._asSentence(fields.number) +\n                    this._asSentence(fields.type);\n        } else if( entryType == \"book\" || entryType == \"inbook\" || entryType == \"incollection\" ) {\n            ref = authorsAndYear + \" \" + this._formatBookInfo(fields);\n        } else {\n            ref = authorsAndYear + \" \" + this._asSentence(title) +\n                    this._asSentence(fields.howpublished) +\n                    this._asSentence(fields.note);\n        }\n        var doiUrl = \"\";\n        if( fields.doi ) {\n            doiUrl = 'http://dx.doi.org/' + fields.doi;\n            ref += '[<a href=\"' + doiUrl + '\" target=\"_blank\">doi:' + fields.doi + \"</a>]\";\n        }\n        var url = fields.url || doiUrl;\n        if( url ) {\n            ref += '[<a href=\"' + url + '\" target=\"_blank\">Link</a>]';\n        }\n        return ref;\n    },\n    _formatBookInfo: function(fields) {\n        var info = \"\";\n        if( fields.chapter ) {\n            info += fields.chapter + \" in \";\n        }\n        if( fields.title ) {\n            info += \"<em>\" + fields.title + \"<\\/em>\";\n        }\n        if( fields.editor ) {\n            info += \", Edited by \" + fields.editor + \", \";\n        }\n        if( fields.publisher) {\n            info += \", \" + fields.publisher;\n        }\n        if( fields.pages ) {\n            info += \", pp. \" + fields.pages + \"\";\n        }\n        if( fields.series ) {\n            info += \", <em>\" + fields.series + \"<\\/em>\";\n        }\n        if( fields.volume ) {\n            info += \", Vol.\" + fields.volume;\n        }\n        if( fields.issn ) {\n            info += \", ISBN: \" + fields.issn;\n        }\n        return info + \".\";\n    },\n    _asSentence: function(str) {\n        return (str && str.trim()) ? str + \". \" : \"\";\n    }\n});\n\nvar CitationListView = Backbone.View.extend({\n    el: '#citations',\n    /**\n     * Set up view.\n     */\n    initialize: function() {\n        this.listenTo( this.collection, 'add', this.renderCitation );\n    },\n\n    events: {\n        'click .citations-to-bibtex': 'showBibtex',\n        'click .citations-to-formatted': 'showFormatted'\n    },\n\n    renderCitation: function( citation ) {\n        var citationView = new CitationView( { model: citation } );\n        this.$(\".citations-formatted\").append( citationView.render().el );\n        var rawTextarea = this.$(\".citations-bibtex-text\");\n        rawTextarea.val( rawTextarea.val() + \"\\n\\r\" + citation.attributes.content );\n    },\n\n    render: function() {\n        this.$el.html(this.citationsElement());\n        this.collection.each(function( item ){\n            this.renderCitation( item );\n        }, this);\n        this.showFormatted();\n    },\n\n    showBibtex: function() {\n        this.$(\".citations-to-formatted\").show();\n        this.$(\".citations-to-bibtex\").hide();\n        this.$(\".citations-bibtex\").show();\n        this.$(\".citations-formatted\").hide();\n        this.$(\".citations-bibtex-text\").select();\n    },\n\n    showFormatted: function() {\n        this.$(\".citations-to-formatted\").hide();\n        this.$(\".citations-to-bibtex\").show();\n        this.$(\".citations-bibtex\").hide();\n        this.$(\".citations-formatted\").show();\n    },\n\n    partialWarningElement: function() {\n        if( this.collection.partial ) {\n            return [\n                '<div style=\"padding:5px 10px\">',\n                '<b>Warning: This is a experimental feature.</b> Most Galaxy tools will not annotate',\n                ' citations explicitly at this time. When writing up your analysis, please manually',\n                ' review your histories and find all references',\n                ' that should be cited in order to completely describe your work. Also, please remember to',\n                ' <a href=\"https://wiki.galaxyproject.org/CitingGalaxy\">cite Galaxy</a>.',\n                '</div>',\n            ].join('');\n        } else {\n            return '';\n        }\n    },\n\n    citationsElement: function() {\n        return [\n            '<div class=\"toolForm\">',\n                '<div class=\"toolFormTitle\">',\n                    _l(\"Citations\"),\n                    ' <button type=\"button\" class=\"btn btn-xs citations-to-bibtex\" title=\"Show all in BibTeX format.\"><i class=\"fa fa-pencil-square-o\"></i> Show BibTeX</button>',\n                    ' <button type=\"button\" class=\"btn btn-xs citations-to-formatted\" title=\"Return to formatted citation list.\"><i class=\"fa fa-times\"></i> Hide BibTeX</button>',\n                '</div>',\n                '<div class=\"toolFormBody\" style=\"padding:5px 10px\">',\n                this.partialWarningElement(),\n                '<span class=\"citations-formatted\" style=\"word-wrap: break-word;\"></span>',\n                '</div>',\n                '<div class=\"citations-bibtex toolFormBody\" style=\"padding:5px 10px\">',\n                '<textarea style=\"width: 100%; height: 500px;\" class=\"citations-bibtex-text\"></textarea>',\n                '</div>',\n            '</div>'\n        ].join( '' );\n    }\n});\n\n//==============================================================================\nreturn {\n    CitationView : CitationView,\n    CitationListView  : CitationListView\n};\n\n});\n"]}