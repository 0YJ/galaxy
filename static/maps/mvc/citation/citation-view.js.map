{"version":3,"sources":["mvc/citation/citation-view.js"],"names":["define","CitationView","extend","className","Backbone","View","render","formattedReference","this","$el","append","entryType","model","fields","ref","authorsAndYear","pages","author","year","title","address","volume","_asSentence","booktitle","journal","doiUrl","url","howpublished","note","institution","_formatBookInfo","number","info","type","chapter","doi","publisher","str","series","initialize","issn","citationView","trim","CitationListView","listenTo","showFormatted","renderCitation","showBibtex","click .citations-to-bibtex","click .citations-to-formatted","citation","$","el","rawTextarea","val","attributes","content","html","citationsElement","collection","each","item","partialWarningElement","show","hide","select","partial","join","_l"],"mappings":"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","file":"../../../scripts/mvc/citation/citation-view.js","sourcesContent":["define([\n    \"mvc/base-mvc\",\n    \"mvc/citation/citation-model\",\n    \"utils/localization\"\n], function( baseMVC, citationModel, _l ){\n\nvar CitationView = Backbone.View.extend({\n    tagName: 'div',\n    className: 'citations',\n    render: function() {\n        this.$el.append( \"<p>\" + this.formattedReference() + \"</p>\" );\n        return this;\n    },\n    formattedReference: function() {\n        var model = this.model;\n        var entryType = model.entryType();\n        var fields = model.fields();\n\n        var ref = \"\";\n        // Code inspired by...\n        // https://github.com/vkaravir/bib-publication-list/blob/master/src/bib-publication-list.js\n        var authorsAndYear = this._asSentence( (fields.author ? fields.author : \"\") + (fields.year ? (\" (\" + fields.year + \")\") : \"\") ) + \" \";\n        var title = fields.title || \"\";\n        var pages = fields.pages ? (\"pp. \" + fields.pages) : \"\";\n        var address = fields.address;\n        if( entryType == \"article\" ) {\n            var volume = (fields.volume ? fields.volume : \"\") +\n                         (fields.number ? ( \" (\" + fields.number + \")\" ) : \"\") +\n                         (pages ? \", \" + pages : \"\");\n            ref = authorsAndYear + this._asSentence(title) +\n                    (fields.journal ? (\"In <em>\" + fields.journal + \", \") : \"\") +\n                    this._asSentence(volume) + \n                    this._asSentence(fields.address) +\n                    \"<\\/em>\";\n        } else if( entryType == \"inproceedings\" || entryType == \"proceedings\" ) {\n            ref = authorsAndYear + \n                    this._asSentence(title) + \n                    (fields.booktitle ? (\"In <em>\" + fields.booktitle + \", \") : \"\") +\n                    (pages ? pages : \"\") +\n                    (address ? \", \" + address : \"\") + \n                    \".<\\/em>\";\n        } else if( entryType == \"mastersthesis\" || entryType == \"phdthesis\" ) {\n            ref = authorsAndYear + this._asSentence(title) +\n                    (fields.howpublished ? fields.howpublished + \". \" : \"\") +\n                    (fields.note ? fields.note + \".\" : \"\");\n        } else if( entryType == \"techreport\" ) {\n            ref = authorsAndYear + this._asSentence(title) +\n                    this._asSentence(fields.institution) +\n                    this._asSentence(fields.number) +\n                    this._asSentence(fields.type);\n        } else if( entryType == \"book\" || entryType == \"inbook\" || entryType == \"incollection\" ) {\n            ref = authorsAndYear + \" \" + this._formatBookInfo(fields);\n        } else {\n            ref = authorsAndYear + \" \" + this._asSentence(title) +\n                    this._asSentence(fields.howpublished) +\n                    this._asSentence(fields.note);\n        }\n        var doiUrl = \"\";\n        if( fields.doi ) {\n            doiUrl = 'http://dx.doi.org/' + fields.doi;\n            ref += '[<a href=\"' + doiUrl + '\" target=\"_blank\">doi:' + fields.doi + \"</a>]\";\n        }\n        var url = fields.url || doiUrl;\n        if( url ) {\n            ref += '[<a href=\"' + url + '\" target=\"_blank\">Link</a>]';\n        }\n        return ref;\n    },\n    _formatBookInfo: function(fields) {\n        var info = \"\";\n        if( fields.chapter ) {\n            info += fields.chapter + \" in \";\n        }\n        if( fields.title ) {\n            info += \"<em>\" + fields.title + \"<\\/em>\";\n        }\n        if( fields.editor ) {\n            info += \", Edited by \" + fields.editor + \", \";\n        }\n        if( fields.publisher) {\n            info += \", \" + fields.publisher;\n        }\n        if( fields.pages ) {\n            info += \", pp. \" + fields.pages + \"\";\n        }\n        if( fields.series ) {\n            info += \", <em>\" + fields.series + \"<\\/em>\";\n        }\n        if( fields.volume ) {\n            info += \", Vol.\" + fields.volume;\n        }\n        if( fields.issn ) {\n            info += \", ISBN: \" + fields.issn;\n        }\n        return info + \".\";\n    },\n    _asSentence: function(str) {\n        return (str && str.trim()) ? str + \". \" : \"\";\n    }\n});\n\nvar CitationListView = Backbone.View.extend({\n    el: '#citations',\n    /**\n     * Set up view.\n     */\n    initialize: function() {\n        this.listenTo( this.collection, 'add', this.renderCitation );\n    },\n\n    events: {\n        'click .citations-to-bibtex': 'showBibtex',\n        'click .citations-to-formatted': 'showFormatted'\n    },\n\n    renderCitation: function( citation ) {\n        var citationView = new CitationView( { model: citation } );\n        this.$(\".citations-formatted\").append( citationView.render().el );\n        var rawTextarea = this.$(\".citations-bibtex-text\");\n        rawTextarea.val( rawTextarea.val() + \"\\n\\r\" + citation.attributes.content );\n    },\n\n    render: function() {\n        this.$el.html(this.citationsElement());\n        this.collection.each(function( item ){\n            this.renderCitation( item );\n        }, this);\n        this.showFormatted();\n    },\n\n    showBibtex: function() {\n        this.$(\".citations-to-formatted\").show();\n        this.$(\".citations-to-bibtex\").hide();\n        this.$(\".citations-bibtex\").show();\n        this.$(\".citations-formatted\").hide();\n        this.$(\".citations-bibtex-text\").select();\n    },\n\n    showFormatted: function() {\n        this.$(\".citations-to-formatted\").hide();\n        this.$(\".citations-to-bibtex\").show();\n        this.$(\".citations-bibtex\").hide();\n        this.$(\".citations-formatted\").show();\n    },\n\n    partialWarningElement: function() {\n        if( this.collection.partial ) {\n            return [\n                '<div style=\"padding:5px 10px\">',\n                '<b>Warning: This is a experimental feature.</b> Most Galaxy tools will not annotate',\n                ' citations explicitly at this time. When writing up your analysis, please manually',\n                ' review your histories and find all references',\n                ' that should be cited in order to completely describe your work. Also, please remember to',\n                ' <a href=\"https://galaxyproject.org/citing-galaxy\">cite Galaxy</a>.',\n                '</div>',\n            ].join('');\n        } else {\n            return '';\n        }\n    },\n\n    citationsElement: function() {\n        return [\n            '<div class=\"toolForm\">',\n                '<div class=\"toolFormTitle\">',\n                    _l(\"Citations\"),\n                    ' <button type=\"button\" class=\"btn btn-xs citations-to-bibtex\" title=\"Show all in BibTeX format.\"><i class=\"fa fa-pencil-square-o\"></i> Show BibTeX</button>',\n                    ' <button type=\"button\" class=\"btn btn-xs citations-to-formatted\" title=\"Return to formatted citation list.\"><i class=\"fa fa-times\"></i> Hide BibTeX</button>',\n                '</div>',\n                '<div class=\"toolFormBody\" style=\"padding:5px 10px\">',\n                this.partialWarningElement(),\n                '<span class=\"citations-formatted\" style=\"word-wrap: break-word;\"></span>',\n                '</div>',\n                '<div class=\"citations-bibtex toolFormBody\" style=\"padding:5px 10px\">',\n                '<textarea style=\"width: 100%; height: 500px;\" class=\"citations-bibtex-text\"></textarea>',\n                '</div>',\n            '</div>'\n        ].join( '' );\n    }\n});\n\n//==============================================================================\nreturn {\n    CitationView : CitationView,\n    CitationListView  : CitationListView\n};\n\n});\n"]}