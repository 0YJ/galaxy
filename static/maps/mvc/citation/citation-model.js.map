{"version":3,"sources":["mvc/citation/citation-model.js"],"names":["define","bibtexParse","_l","Citation","Backbone","Model","extend","baseMVC","LoggableMixin","defaults","content","initialize","parsed","toJSON","this","attributes","err","log","_fields","entry","rawFields","key","lowerKey","toLowerCase","value","entryType","fields","undefined","BaseCitationCollection","Collection","urlRoot","partial","Galaxy","root","HistoryCitationCollection","model","url","ToolCitationCollection","history_id","tool_id"],"mappings":"aAAAA,QAAQ,mBAAoB,eAAgB,sBAAuB,SAC/DC,EADJD,EAKIE,GAEA,IAIIC,EAAWC,SAASC,MAAMC,OAAOC,EAAQC,eAAeF,QAGxDG,cAPJ,WAOcA,UACNC,QAAS,IAKTC,WAAI,WACA,IAAAC,EACAA,IAEAA,EAASX,EAAAY,OAAAC,KAAAC,WAATL,SACH,MAAAM,GADGF,KAAKG,IAAI,yBAA2BD,GAOpC,GAFJF,KAAII,WACAJ,KAAAK,MAAIC,EAAAA,MAAYR,GAChBE,KAAKK,MAAL,CACI,IAAAC,EAAYA,KAAAA,MAAUC,UACtB,IAAA,IAAIC,KAAAA,EAAeC,CACnB,IAAAC,EAAAJ,EAAAC,GACHC,EAAAD,EAAAE,cACJT,KAAAI,QAAAI,GAAAE,KAIJC,UA7B8D,WA8B/DC,OAAQZ,KAAAK,MAAAL,KAAWK,MAAAM,eAAAE,GAElBD,OAAA,WAhCL,OAAAZ,KAAAI,WAsCIU,EAAyBxB,SAASyB,WAK9BvB,OAAAC,EAAAC,eACAsB,QACAC,cAjDR,WAgDQD,QAASE,OAAOC,KAAO,MAK3BC,SAAAA,EACAC,MAAAhC,IAkBJ,OACIA,SAAUA,EACV+B,0BAfCN,EAAAtB,QAJD8B,IAAK,WAOLC,OACAvB,KAAAgB,QAAA,cAAAhB,KAAAwB,WAAA,gBAYAD,uBAbJT,EAAAtB,QAQA8B,IAAA,WALQ,OAAOtB,KAAKgB,QAAU,UAAYhB,KAAKyB,QAAU,cAQrDpC,SAAAA","file":"../../../scripts/mvc/citation/citation-model.js","sourcesContent":["define([\"libs/bibtexParse\", \"mvc/base-mvc\", \"utils/localization\"], function(\n    bibtexParse,\n    baseMVC,\n    _l\n) {\n    var logNamespace = \"citation\";\n    //==============================================================================\n    /** @class model for tool citations.\n *  @name Citation\n *  @augments Backbone.Model\n */\n    var Citation = Backbone.Model.extend(baseMVC.LoggableMixin).extend({\n        _logNamespace: logNamespace,\n\n        defaults: {\n            content: \"\"\n        },\n\n        initialize: function() {\n            var parsed;\n            try {\n                // TODO: to model.parse/.validate\n                parsed = bibtexParse.toJSON(this.attributes.content);\n            } catch (err) {\n                this.log(\"Error parsing bibtex: \" + err);\n            }\n\n            this._fields = {};\n            this.entry = _.first(parsed);\n            if (this.entry) {\n                var rawFields = this.entry.entryTags;\n                for (var key in rawFields) {\n                    var value = rawFields[key];\n                    var lowerKey = key.toLowerCase();\n                    this._fields[lowerKey] = value;\n                }\n            }\n        },\n        entryType: function() {\n            return this.entry ? this.entry.entryType : undefined;\n        },\n        fields: function() {\n            return this._fields;\n        }\n    });\n\n    //==============================================================================\n    /** @class Backbone collection of citations.\n */\n    var BaseCitationCollection = Backbone.Collection\n        .extend(baseMVC.LoggableMixin)\n        .extend({\n            _logNamespace: logNamespace,\n\n            /** root api url */\n            urlRoot: Galaxy.root + \"api\",\n            partial: true, // Assume some tools in history/workflow may not be properly annotated yet.\n            model: Citation\n        });\n\n    var HistoryCitationCollection = BaseCitationCollection.extend({\n        /** complete api url */\n        url: function() {\n            return (\n                this.urlRoot + \"/histories/\" + this.history_id + \"/citations\"\n            );\n        }\n    });\n\n    var ToolCitationCollection = BaseCitationCollection.extend({\n        /** complete api url */\n        url: function() {\n            return this.urlRoot + \"/tools/\" + this.tool_id + \"/citations\";\n        },\n        partial: false // If a tool has citations, assume they are complete.\n    });\n\n    //==============================================================================\n\n    return {\n        Citation: Citation,\n        HistoryCitationCollection: HistoryCitationCollection,\n        ToolCitationCollection: ToolCitationCollection\n    };\n});\n"]}