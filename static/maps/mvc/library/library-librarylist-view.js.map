{"version":3,"sources":["mvc/library/library-librarylist-view.js"],"names":["define","el","events","mod_library_model","mod_library_libraryrow_view","_","LibraryListView","Backbone","View","extend","defaults","page_count","show_page","all_fetched","initialize","options","this","collection","success","that","error","mod_toastr","responseJSON","url","fetch","render","model","response","err_msg","$","models","template","templateLibraryList","libraries_to_render","sortLibraries","is_public","libraries","preferences","deleted","Galaxy","get","where","filter","Math","length","order","search_term","libraryToolbarView","total_libraries_count","page_start","fetchDeleted","ceil","slice","libraries_shown","renderRows","$el","html","library","renderOne","renderPaginator","find","set","tooltip","css","urlRoot","remove","trimmed_term","results","i","rowView","LibraryRowView","append","sort_clicked","sort_order","sortByNameAsc","sortByNameDesc","searchLibraries","trim","search","searching","join"],"mappings":"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","file":"../../../scripts/mvc/library/library-librarylist-view.js","sourcesContent":["define(\n    [\n        \"libs/toastr\",\n        \"mvc/library/library-model\",\n        \"mvc/library/library-libraryrow-view\",\n        \"libs/underscore\"\n    ],\n    function(mod_toastr, mod_library_model, mod_library_libraryrow_view, _) {\n        var LibraryListView = Backbone.View.extend({\n            el: \"#libraries_element\",\n\n            events: {\n                \"click .sort-libraries-link\": \"sort_clicked\"\n            },\n\n            defaults: {\n                page_count: null,\n                show_page: null,\n                all_fetched: false\n            },\n\n            /**\n     * Initialize and fetch the libraries from server.\n     * Async render afterwards.\n     * @param  {object} options an object with options\n     */\n            initialize: function(options) {\n                this.options = _.defaults(\n                    this.options || {},\n                    options,\n                    this.defaults\n                );\n                var that = this;\n                this.modal = null;\n                // collection of {Item}s\n                this.collection = new mod_library_model.Libraries();\n                this.collection.url =\n                    this.collection.urlRoot + \"?deleted=false\";\n                this.collection.fetch({\n                    success: function() {\n                        that.render();\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(response.responseJSON.err_msg);\n                        } else {\n                            mod_toastr.error(\"An error occurred.\");\n                        }\n                    }\n                });\n            },\n\n            /**\n     * Render the libraries table either from the object's own collection,\n     * or from a given array of library models,\n     * or render an empty list in case no data is given.\n     */\n            render: function(options) {\n                this.options = _.extend(this.options, options);\n                this.setElement(\"#libraries_element\");\n                var template = this.templateLibraryList();\n                var libraries_to_render = null;\n                var models = null;\n                var is_public = function(model) {\n                    return model.get(\"public\") === true;\n                };\n                $(\".tooltip\").hide();\n                if (typeof options !== \"undefined\") {\n                    models =\n                        typeof options.models !== \"undefined\"\n                            ? options.models\n                            : null;\n                }\n                if (this.collection !== null && models === null) {\n                    this.sortLibraries();\n                    if (Galaxy.libraries.preferences.get(\"with_deleted\")) {\n                        libraries_to_render = this.collection.models;\n                    } else {\n                        libraries_to_render = this.collection.where({\n                            deleted: false\n                        });\n                    }\n                    if (\n                        Galaxy.libraries.preferences.get(\"without_restricted\")\n                    ) {\n                        libraries_to_render = _.filter(\n                            libraries_to_render,\n                            is_public\n                        );\n                    }\n                } else if (models !== null) {\n                    if (Galaxy.libraries.preferences.get(\"with_deleted\")) {\n                        libraries_to_render = models;\n                    } else {\n                        var is_deleted = function(model) {\n                            return model.get(\"deleted\") === false;\n                        };\n                        libraries_to_render = _.filter(models, is_deleted);\n                    }\n                    if (\n                        Galaxy.libraries.preferences.get(\"without_restricted\")\n                    ) {\n                        libraries_to_render = _.filter(\n                            libraries_to_render,\n                            is_public\n                        );\n                    }\n                } else {\n                    libraries_to_render = [];\n                }\n\n                // pagination\n                if (\n                    this.options.show_page === null ||\n                    this.options.show_page < 1\n                ) {\n                    this.options.show_page = 1;\n                }\n                this.options.total_libraries_count = libraries_to_render.length;\n                var page_start =\n                    Galaxy.libraries.preferences.get(\"library_page_size\") *\n                    (this.options.show_page - 1);\n                this.options.page_count = Math.ceil(\n                    this.options.total_libraries_count /\n                        Galaxy.libraries.preferences.get(\"library_page_size\")\n                );\n                if (\n                    this.options.total_libraries_count > 0 &&\n                    page_start < this.options.total_libraries_count\n                ) {\n                    libraries_to_render = libraries_to_render.slice(\n                        page_start,\n                        page_start +\n                            Galaxy.libraries.preferences.get(\n                                \"library_page_size\"\n                            )\n                    );\n                    this.options.libraries_shown = libraries_to_render.length;\n                    // User requests page with no libraries\n                    if (\n                        Galaxy.libraries.preferences.get(\"library_page_size\") *\n                            this.options.show_page >\n                        this.options.total_libraries_count +\n                            Galaxy.libraries.preferences.get(\n                                \"library_page_size\"\n                            )\n                    ) {\n                        libraries_to_render = [];\n                    }\n                    this.$el.html(\n                        template({\n                            length: 1,\n                            order: Galaxy.libraries.preferences.get(\n                                \"sort_order\"\n                            ),\n                            search_term:\n                                Galaxy.libraries.libraryToolbarView.options\n                                    .search_term\n                        })\n                    );\n                    Galaxy.libraries.libraryToolbarView.renderPaginator(\n                        this.options\n                    );\n                    this.renderRows(libraries_to_render);\n                } else {\n                    this.$el.html(\n                        template({\n                            length: 0,\n                            order: Galaxy.libraries.preferences.get(\n                                \"sort_order\"\n                            ),\n                            search_term:\n                                Galaxy.libraries.libraryToolbarView.options\n                                    .search_term\n                        })\n                    );\n                    Galaxy.libraries.libraryToolbarView.renderPaginator(\n                        this.options\n                    );\n                }\n                $(\"#center [data-toggle]\").tooltip();\n                $(\"#center\").css(\"overflow\", \"auto\");\n            },\n\n            fetchDeleted: function() {\n                if (this.options.all_fetched) {\n                    this.render();\n                } else {\n                    var that = this;\n                    this.collection.url =\n                        this.collection.urlRoot + \"?deleted=true\";\n                    this.collection.fetch({\n                        remove: false,\n                        success: function() {\n                            that.options.all_fetched = true;\n                            that.render();\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(response.responseJSON.err_msg);\n                            } else {\n                                mod_toastr.error(\"An error occurred.\");\n                            }\n                        }\n                    });\n                }\n            },\n\n            /**\n     * Render all given models as rows in the library list\n     * @param  {array} libraries_to_render array of library models to render\n     */\n            renderRows: function(libraries_to_render) {\n                for (var i = 0; i < libraries_to_render.length; i++) {\n                    var library = libraries_to_render[i];\n                    this.renderOne({ library: library });\n                }\n            },\n\n            /**\n     * Create a view for the given model and add it to the libraries view.\n     * @param {Library} model of the view that will be rendered\n     */\n            renderOne: function(options) {\n                var library = options.library;\n                var rowView = new mod_library_libraryrow_view.LibraryRowView(\n                    library\n                );\n                this.$el.find(\"#library_list_body\").append(rowView.el);\n            },\n\n            /**\n     * Table heading was clicked, update sorting preferences and re-render.\n     * @return {[type]} [description]\n     */\n            sort_clicked: function() {\n                if (Galaxy.libraries.preferences.get(\"sort_order\") === \"asc\") {\n                    Galaxy.libraries.preferences.set({ sort_order: \"desc\" });\n                } else {\n                    Galaxy.libraries.preferences.set({ sort_order: \"asc\" });\n                }\n                this.render();\n            },\n\n            /**\n     * Sort the underlying collection according to the parameters received.\n     * Currently supports only sorting by name.\n     */\n            sortLibraries: function() {\n                if (Galaxy.libraries.preferences.get(\"sort_by\") === \"name\") {\n                    if (\n                        Galaxy.libraries.preferences.get(\"sort_order\") === \"asc\"\n                    ) {\n                        this.collection.sortByNameAsc();\n                    } else if (\n                        Galaxy.libraries.preferences.get(\"sort_order\") ===\n                        \"desc\"\n                    ) {\n                        this.collection.sortByNameDesc();\n                    }\n                }\n            },\n\n            /**\n     * In case the search_term is not empty perform the search and render\n     * the result. Render all visible libraries otherwise.\n     * @param  {string} search_term string to search for\n     */\n            searchLibraries: function(search_term) {\n                var trimmed_term = $.trim(search_term);\n                if (trimmed_term !== \"\") {\n                    var results = null;\n                    results = this.collection.search(search_term);\n                    this.options.searching = true;\n                    this.render({ models: results, show_page: 1 });\n                } else {\n                    this.options.searching = false;\n                    this.render();\n                }\n            },\n\n            // MMMMMMMMMMMMMMMMMM\n            // === TEMPLATES ====\n            // MMMMMMMMMMMMMMMMMM\n\n            templateLibraryList: function() {\n                return _.template(\n                    [\n                        '<div class=\"library_container table-responsive\">',\n                        \"<% if(length === 0) { %>\",\n                        \"<% if(search_term.length > 0) { %>\",\n                        \"<div>\",\n                        \"There are no libraries matching your search. Try different keyword.\",\n                        \"</div>\",\n                        \"<% } else{ %>\",\n                        \"<div>\",\n                        \"There are no libraries visible to you here. If you expected some to show up please consult the\",\n                        ' <a href=\"https://galaxyproject.org/data-libraries/#permissions\" target=\"_blank\">library security wikipage</a>',\n                        ' or visit the <a href=\"https://biostar.usegalaxy.org/\" target=\"_blank\">Galaxy support site</a>.',\n                        \"</div>\",\n                        \"<% }%>\",\n                        \"<% } else{ %>\",\n                        '<table class=\"grid table table-condensed\">',\n                        \"<thead>\",\n                        '<th style=\"width:30%;\">',\n                        '<a class=\"sort-libraries-link\" title=\"Click to reverse order\" href=\"#\">',\n                        \"name\",\n                        \"</a>\",\n                        '<span title=\"Sorted alphabetically\" class=\"fa fa-sort-alpha-<%- order %>\"/>',\n                        \"</th>\",\n                        '<th style=\"width:22%;\">description</th>',\n                        '<th style=\"width:22%;\">synopsis</th> ',\n                        '<th style=\"width:26%;\"></th>',\n                        \"</thead>\",\n                        '<tbody id=\"library_list_body\">',\n                        // library item views will attach here\n                        \"</tbody>\",\n                        \"</table>\",\n                        \"<% }%>\",\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            }\n        });\n\n        return {\n            LibraryListView: LibraryListView\n        };\n    }\n);\n"]}