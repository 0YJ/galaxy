{"version":3,"sources":["mvc/library/library-librarylist-view.js"],"names":["define","el","mod_toastr","events","mod_library_libraryrow_view","_","LibraryListView","page_count","View","extend","show_page","click .sort-libraries-link","defaults","initialize","success","options","that","render","this","error","response","collection","url","urlRoot","model","responseJSON","err_msg","$","setElement","models","templateLibraryList","libraries_to_render","is_public","sortLibraries","get","Galaxy","filter","preferences","where","deleted","libraries","is_deleted","page_start","libraries_shown","Math","ceil","total_libraries_count","slice","length","order","$el","html","template","renderRows","search_term","libraryToolbarView","renderPaginator","fetchDeleted","tooltip","all_fetched","remove","i","library","renderOne","rowView","LibraryRowView","find","append","set","sort_order","sortByNameDesc","sortByNameAsc","results","searching","join"],"mappings":"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","file":"../../../scripts/mvc/library/library-librarylist-view.js","sourcesContent":["define([\n    \"libs/toastr\",\n    \"mvc/library/library-model\",\n    \"mvc/library/library-libraryrow-view\",\n    \"libs/underscore\"\n], function(\n    mod_toastr,\n    mod_library_model,\n    mod_library_libraryrow_view,\n    _\n){\n\nvar LibraryListView = Backbone.View.extend({\n    el: '#libraries_element',\n\n    events: {\n        'click .sort-libraries-link'    : 'sort_clicked'\n    },\n\n    defaults: {\n        page_count: null,\n        show_page: null,\n        all_fetched: false\n    },\n\n    /**\n     * Initialize and fetch the libraries from server.\n     * Async render afterwards.\n     * @param  {object} options an object with options\n     */\n    initialize : function( options ){\n        this.options = _.defaults( this.options || {}, options, this.defaults );\n        var that = this;\n        this.modal = null;\n        // collection of {Item}s\n        this.collection = new mod_library_model.Libraries();\n        this.collection.url = this.collection.urlRoot + '?deleted=false';\n        this.collection.fetch({\n          success: function(){\n            that.render();\n          },\n          error: function( model, response ){\n              if ( typeof response.responseJSON !== \"undefined\" ){\n                mod_toastr.error( response.responseJSON.err_msg );\n              } else {\n                mod_toastr.error( 'An error occurred.' );\n              }\n          }\n        });\n    },\n\n    /**\n     * Render the libraries table either from the object's own collection,\n     * or from a given array of library models,\n     * or render an empty list in case no data is given.\n     */\n    render: function ( options ) {\n        this.options = _.extend( this.options, options );\n        this.setElement('#libraries_element');\n        var template = this.templateLibraryList();\n        var libraries_to_render = null;\n        var models = null;\n        var is_public = function(model){ return model.get('public') === true; }\n        $( \".tooltip\" ).hide();\n        if ( typeof options !== 'undefined' ){\n            models = typeof options.models !== 'undefined' ? options.models : null;\n        }\n        if ( this.collection !== null && models === null ){\n            this.sortLibraries();\n            if ( Galaxy.libraries.preferences.get( 'with_deleted' ) ){\n              libraries_to_render = this.collection.models;\n            } else {\n              libraries_to_render = this.collection.where( { deleted: false } );\n            }\n            if ( Galaxy.libraries.preferences.get( 'without_restricted' ) ){\n              libraries_to_render = _.filter( libraries_to_render, is_public );\n            }\n        } else if ( models !== null ){\n            if ( Galaxy.libraries.preferences.get( 'with_deleted' ) ){\n                libraries_to_render = models;\n            } else {\n                var is_deleted = function(model){ return model.get('deleted') === false; }\n                libraries_to_render = _.filter( models, is_deleted );\n            }\n            if ( Galaxy.libraries.preferences.get( 'without_restricted' ) ) {\n              libraries_to_render = _.filter( libraries_to_render, is_public );\n            }\n        } else {\n            libraries_to_render = [];\n        }\n\n        // pagination\n        if ( this.options.show_page === null || this.options.show_page < 1 ){\n            this.options.show_page = 1;\n        }\n        this.options.total_libraries_count = libraries_to_render.length\n        var page_start = ( Galaxy.libraries.preferences.get( 'library_page_size' ) * ( this.options.show_page - 1 ) );\n        this.options.page_count = Math.ceil( this.options.total_libraries_count / Galaxy.libraries.preferences.get( 'library_page_size' ) );\n        if ( this.options.total_libraries_count > 0 && ( page_start < this.options.total_libraries_count ) ){\n            libraries_to_render = libraries_to_render.slice( page_start, page_start + Galaxy.libraries.preferences.get( 'library_page_size' ) );\n            this.options.libraries_shown = libraries_to_render.length;\n            // User requests page with no libraries\n            if ( Galaxy.libraries.preferences.get( 'library_page_size' ) * this.options.show_page > ( this.options.total_libraries_count + Galaxy.libraries.preferences.get( 'library_page_size' ) ) ){\n                libraries_to_render = [];\n            }\n            this.$el.html( template({\n                length: 1,\n                order: Galaxy.libraries.preferences.get( 'sort_order' ),\n                search_term: Galaxy.libraries.libraryToolbarView.options.search_term\n            }));\n            Galaxy.libraries.libraryToolbarView.renderPaginator( this.options );\n            this.renderRows( libraries_to_render );\n        } else {\n            this.$el.html( template({\n                length: 0,\n                order: Galaxy.libraries.preferences.get( 'sort_order' ),\n                search_term: Galaxy.libraries.libraryToolbarView.options.search_term\n            }));\n            Galaxy.libraries.libraryToolbarView.renderPaginator( this.options );\n        }\n        $( \"#center [data-toggle]\" ).tooltip();\n        $( \"#center\" ).css( 'overflow','auto' );\n    },\n\n    fetchDeleted: function(){\n      if (this.options.all_fetched){\n        this.render();\n      } else{\n        var that = this;\n        this.collection.url = this.collection.urlRoot + '?deleted=true';\n        this.collection.fetch({\n          remove: false,\n          success: function(){\n            that.options.all_fetched = true;\n            that.render();\n          },\n          error: function( model, response ){\n              if ( typeof response.responseJSON !== \"undefined\" ){\n                mod_toastr.error( response.responseJSON.err_msg );\n              } else {\n                mod_toastr.error( 'An error occurred.' );\n              }\n          }\n        });\n      }\n    },\n\n    /**\n     * Render all given models as rows in the library list\n     * @param  {array} libraries_to_render array of library models to render\n     */\n    renderRows: function( libraries_to_render ){\n        for ( var i = 0; i < libraries_to_render.length; i++ ) {\n          var library = libraries_to_render[i];\n            this.renderOne( { library: library } );\n        }\n    },\n\n    /**\n     * Create a view for the given model and add it to the libraries view.\n     * @param {Library} model of the view that will be rendered\n     */\n    renderOne: function( options ){\n        var library = options.library;\n        var rowView = new mod_library_libraryrow_view.LibraryRowView( library );\n        this.$el.find( '#library_list_body' ).append( rowView.el );\n    },\n\n    /**\n     * Table heading was clicked, update sorting preferences and re-render.\n     * @return {[type]} [description]\n     */\n    sort_clicked : function(){\n        if (Galaxy.libraries.preferences.get('sort_order') === 'asc'){\n            Galaxy.libraries.preferences.set({'sort_order': 'desc'});\n        } else {\n            Galaxy.libraries.preferences.set({'sort_order': 'asc'});\n        }\n        this.render();\n    },\n\n    /**\n     * Sort the underlying collection according to the parameters received.\n     * Currently supports only sorting by name.\n     */\n    sortLibraries: function(){\n        if (Galaxy.libraries.preferences.get('sort_by') === 'name'){\n            if (Galaxy.libraries.preferences.get('sort_order') === 'asc'){\n                this.collection.sortByNameAsc();\n            } else if (Galaxy.libraries.preferences.get('sort_order') === 'desc'){\n                this.collection.sortByNameDesc();\n            }\n        }\n    },\n\n    /**\n     * In case the search_term is not empty perform the search and render\n     * the result. Render all visible libraries otherwise.\n     * @param  {string} search_term string to search for\n     */\n    searchLibraries: function(search_term){\n      var trimmed_term = $.trim(search_term);\n      if (trimmed_term !== ''){\n        var results = null\n        results = this.collection.search( search_term );\n        this.options.searching = true;\n        this.render({models: results, show_page: 1});\n      } else {\n        this.options.searching = false;\n        this.render();\n      }\n    },\n\n// MMMMMMMMMMMMMMMMMM\n// === TEMPLATES ====\n// MMMMMMMMMMMMMMMMMM\n\n    templateLibraryList: function(){\n      return _.template([\n      '<div class=\"library_container table-responsive\">',\n        '<% if(length === 0) { %>',\n          '<% if(search_term.length > 0) { %>',\n            '<div>',\n              'There are no libraries matching your search. Try different keyword.',\n            '</div>',\n          '<% } else{ %>',\n            '<div>',\n              'There are no libraries visible to you here. If you expected some to show up please consult the',\n              ' <a href=\"https://galaxyproject.org/data-libraries/#permissions\" target=\"_blank\">library security wikipage</a>',\n              ' or visit the <a href=\"https://biostar.usegalaxy.org/\" target=\"_blank\">Galaxy support site</a>.',\n            '</div>',\n          '<% }%>',\n        '<% } else{ %>',\n          '<table class=\"grid table table-condensed\">',\n            '<thead>',\n              '<th style=\"width:30%;\">',\n                '<a class=\"sort-libraries-link\" title=\"Click to reverse order\" href=\"#\">',\n                  'name',\n                '</a>',\n                '<span title=\"Sorted alphabetically\" class=\"fa fa-sort-alpha-<%- order %>\"/>',\n              '</th>',\n              '<th style=\"width:22%;\">description</th>',\n              '<th style=\"width:22%;\">synopsis</th> ',\n              '<th style=\"width:26%;\"></th>',\n            '</thead>',\n            '<tbody id=\"library_list_body\">',\n            // library item views will attach here\n            '</tbody>',\n          '</table>',\n        '<% }%>',\n      '</div>'\n      ].join(''));\n    }\n\n});\n\nreturn {\n    LibraryListView: LibraryListView\n};\n\n});\n"]}