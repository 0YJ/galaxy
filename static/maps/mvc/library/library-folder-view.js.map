{"version":3,"sources":["mvc/library/library-folder-view.js"],"names":["define","mod_toastr","mod_library_model","mod_select","FolderView","Backbone","View","extend","el","model","options","events","click .toolbtn_save_permissions","initialize","this","_","id","fetchFolder","FolderAsModel","that","fetch","success","show_permissions","showPermissions","render","error","response","responseJSON","err_msg","onclick","Galaxy","libraries","library_router","back","$","remove","template","templateFolder","$el","html","item","get","tooltip","shareFolder","info","goBack","is_admin","user","isAdmin","templateFolderPermissions","folder","self","root","done","fetched_permissions","prepareSelectBoxes","fail","css","_serializeRoles","role_list","selected_roles","i","length","push","selected_add_item_roles","add_library_item_role_list","selected_manage_folder_roles","manage_folder_role_list","selected_modify_folder_roles","modify_folder_role_list","addSelectObject","_createSelectOptions","manageSelectObject","modifySelectObject","init_data","minimumInputLength","multiple","placeholder","container","find","ajax","url","dataType","quietMillis","data","term","page","q","page_limit","results","more","total","roles","formatResult","role","name","type","formatSelection","initSelection","element","callback","val","split","each","initialData","join","dropdownCssClass","comingSoon","warning","copyToClipboard","href","history","location","lastIndexOf","substr","window","prompt","_extractIds","roles_list","ids_list","savePermissions","event","add_ids","select2","manage_ids","modify_ids","post","add_ids[]","manage_ids[]","modify_ids[]"],"mappings":"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","file":"../../../scripts/mvc/library/library-folder-view.js","sourcesContent":["define([\n  \"libs/toastr\",\n  \"mvc/library/library-model\",\n  'mvc/ui/ui-select'\n  ],\nfunction(\n        mod_toastr,\n        mod_library_model,\n        mod_select\n        ) {\n\nvar FolderView = Backbone.View.extend({\n  el: '#center',\n\n  model: null,\n\n  options: {\n\n  },\n\n  events: {\n    \"click .toolbtn_save_permissions\"     :   \"savePermissions\"\n  },\n\n  initialize: function(options){\n    this.options = _.extend(this.options, options);\n    if (this.options.id){\n      this.fetchFolder();\n    }\n  },\n\n  fetchFolder: function(options){\n    this.options = _.extend(this.options, options);\n    this.model = new mod_library_model.FolderAsModel({id:this.options.id});\n    var that = this;\n    this.model.fetch({\n      success: function() {\n        if (that.options.show_permissions){\n            that.showPermissions();\n        } else {\n            that.render();\n        }\n      },\n      error: function(model, response){\n        if (typeof response.responseJSON !== \"undefined\"){\n          mod_toastr.error(response.responseJSON.err_msg + ' Click this to go back.', '', {onclick: function() {Galaxy.libraries.library_router.back();}});\n        } else {\n          mod_toastr.error('An error ocurred. Click this to go back.', '', {onclick: function() {Galaxy.libraries.library_router.back();}});\n        }\n      }\n    });\n  },\n\n  render: function(options){\n    $(\".tooltip\").remove();\n    this.options = _.extend(this.options, options);\n    var template = this.templateFolder();\n    this.$el.html(template({item: this.model}));\n    $(\".peek\").html(this.model.get(\"peek\"));\n    $(\"#center [data-toggle]\").tooltip();\n  },\n\n  shareFolder: function(){\n    mod_toastr.info('Feature coming soon.');\n  },\n\n  goBack: function(){\n    Galaxy.libraries.library_router.back();\n  },\n\n  showPermissions: function(options){\n    this.options = _.extend(this.options, options);\n    $(\".tooltip\").remove();\n\n    var is_admin = false;\n    if (Galaxy.user){\n      is_admin = Galaxy.user.isAdmin();\n    }\n    var template = this.templateFolderPermissions();\n    this.$el.html(template({folder: this.model, is_admin:is_admin}));\n\n    var self = this;\n    $.get( Galaxy.root + \"api/folders/\" + self.id + \"/permissions?scope=current\").done(function(fetched_permissions) {\n      self.prepareSelectBoxes({fetched_permissions:fetched_permissions});\n    }).fail(function(){\n        mod_toastr.error('An error occurred while attempting to fetch folder permissions.');\n    });\n\n    $(\"#center [data-toggle]\").tooltip();\n    //hack to show scrollbars\n    $(\"#center\").css('overflow','auto');\n  },\n\n  _serializeRoles : function(role_list){\n    var selected_roles = [];\n    for (var i = 0; i < role_list.length; i++) {\n      selected_roles.push(role_list[i][1] + ':' + role_list[i][0]);\n    }\n    return selected_roles;\n  },\n\n  prepareSelectBoxes: function(options){\n    this.options = _.extend(this.options, options);\n    var fetched_permissions = this.options.fetched_permissions;\n    var self = this;\n\n    var selected_add_item_roles = this._serializeRoles(fetched_permissions.add_library_item_role_list);\n    var selected_manage_folder_roles = this._serializeRoles(fetched_permissions.manage_folder_role_list);\n    var selected_modify_folder_roles = this._serializeRoles(fetched_permissions.modify_folder_role_list);\n\n    self.addSelectObject = new mod_select.View(this._createSelectOptions(this, 'add_perm', selected_add_item_roles, false));\n    self.manageSelectObject = new mod_select.View(this._createSelectOptions(this, 'manage_perm', selected_manage_folder_roles, false));\n    self.modifySelectObject = new mod_select.View(this._createSelectOptions(this, 'modify_perm', selected_modify_folder_roles, false));\n  },\n\n  _createSelectOptions: function(self, id, init_data){\n    var select_options = {\n      minimumInputLength: 0,\n      css: id,\n      multiple:true,\n      placeholder: 'Click to select a role',\n      container: self.$el.find('#' + id),\n      ajax: {\n          url: Galaxy.root + \"api/folders/\" + self.id + \"/permissions?scope=available\",\n          dataType: 'json',\n          quietMillis: 100,\n          data: function (term, page) { // page is the one-based page number tracked by Select2\n              return {\n                  q: term, //search term\n                  page_limit: 10, // page size\n                  page: page // page number\n              };\n          },\n          results: function (data, page) {\n              var more = (page * 10) < data.total; // whether or not there are more results available\n              // notice we return the value of more so Select2 knows if more results can be loaded\n              return {results: data.roles, more: more};\n          }\n      },\n      formatResult : function roleFormatResult(role) {\n          return role.name + ' type: ' + role.type;\n      },\n\n      formatSelection: function roleFormatSelection(role) {\n          return role.name;\n      },\n      initSelection: function(element, callback) {\n      // the input tag has a value attribute preloaded that points to a preselected role's id\n      // this function resolves that id attribute to an object that select2 can render\n      // using its formatResult renderer - that way the role name is shown preselected\n          var data = [];\n          $(element.val().split(\",\")).each(function() {\n              var item = this.split(':');\n              data.push({\n                  id: item[0],\n                  name: item[1]\n              });\n          });\n          callback(data);\n      },\n      initialData: init_data.join(','),\n      dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n    };\n\n    return select_options;\n  },\n\n  comingSoon: function(){\n    mod_toastr.warning('Feature coming soon.');\n  },\n\n  copyToClipboard: function(){\n    var href = Backbone.history.location.href;\n    if (href.lastIndexOf('/permissions') !== -1){\n      href = href.substr(0, href.lastIndexOf('/permissions'));\n    }\n    window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", href);\n  },\n\n  /**\n   * Extract the role ids from Select2 elements's 'data'\n   */\n  _extractIds: function(roles_list){\n    ids_list = [];\n    for (var i = roles_list.length - 1; i >= 0; i--) {\n      ids_list.push(roles_list[i].id);\n    };\n    return ids_list;\n  },\n\n  /**\n   * Save the permissions for roles entered in the select boxes.\n   */\n  savePermissions: function(event){\n    var self = this;\n    var add_ids = this._extractIds(this.addSelectObject.$el.select2('data'));\n    var manage_ids = this._extractIds(this.manageSelectObject.$el.select2('data'));\n    var modify_ids = this._extractIds(this.modifySelectObject.$el.select2('data'));\n    $.post( Galaxy.root + \"api/folders/\" + self.id + \"/permissions?action=set_permissions\", { 'add_ids[]': add_ids, 'manage_ids[]': manage_ids, 'modify_ids[]': modify_ids, } )\n    .done(function(fetched_permissions){\n      self.showPermissions({fetched_permissions:fetched_permissions})\n      mod_toastr.success('Permissions saved.');\n    })\n    .fail(function(){\n      mod_toastr.error('An error occurred while attempting to set folder permissions.');\n    })\n  },\n\n  templateFolder : function(){\n    return _.template([\n    '<div class=\"library_style_container\">',\n      '<div id=\"library_toolbar\">',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify library item\" class=\"btn btn-default toolbtn_modify_dataset primary-button\" type=\"button\">',\n          '<span class=\"fa fa-pencil\"/>',\n          '&nbsp;Modify',\n        '</button>',\n        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/permissions\">',\n          '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Manage permissions\" class=\"btn btn-default toolbtn_change_permissions primary-button\" type=\"button\">',\n            '<span class=\"fa fa-group\"/>',\n            '&nbsp;Permissions',\n          '</button>',\n        '</a>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Share dataset\" class=\"btn btn-default toolbtn-share-dataset primary-button\" type=\"button\">',\n          '<span class=\"fa fa-share\"/>',\n          '&nbsp;Share',\n          '</span>',\n        '</button>',\n      '</div>',\n      '<p>',\n        'This dataset is unrestricted so everybody can access it. Just share the URL of this page. ',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy to clipboard\" class=\"btn btn-default btn-copy-link-to-clipboard primary-button\" type=\"button\">',\n          '<span class=\"fa fa-clipboard\"/>',\n          '&nbsp;To Clipboard',\n        '</button> ',\n      '</p>',\n      '<div class=\"dataset_table\">',\n        '<table class=\"grid table table-striped table-condensed\">',\n          '<tr>',\n            '<th scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">',\n              'Name',\n            '</th>',\n            '<td>',\n              '<%= _.escape(item.get(\"name\")) %>',\n            '</td>',\n          '</tr>',\n          '<% if (item.get(\"file_ext\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Data type</th>',\n              '<td>',\n                '<%= _.escape(item.get(\"file_ext\")) %>',\n              '</td>',\n            '</tr>',\n          '<% } %>',\n        '</table>',\n      '</div>',\n    '</div>'\n    ].join(''));\n  },\n\n  templateFolderPermissions : function(){\n    return _.template([\n    '<div class=\"library_style_container\">',\n      '<div id=\"library_toolbar\">',\n        '<a href=\"#/folders/<%= folder.get(\"parent_id\") %>\">',\n          '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to the parent folder\" class=\"btn btn-default primary-button\" type=\"button\">',\n            '<span class=\"fa fa-caret-left fa-lg\"/>',\n            '&nbsp;Parent folder',\n          '</button>',\n        '</a>',\n      '</div>',\n      '<h1>',\n        'Folder: <%= _.escape(folder.get(\"name\")) %>',\n      '</h1>',\n      '<div class=\"alert alert-warning\">',\n        '<% if (is_admin) { %>',\n          'You are logged in as an <strong>administrator</strong> therefore you can manage any folder on this Galaxy instance. Please make sure you understand the consequences.',\n        '<% } else { %>',\n          'You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.',\n        '<% }%>',\n      '</div>',\n      '<div class=\"dataset_table\">',\n        '<h2>Folder permissions</h2>',\n        '<h4>',\n          'Roles that can manage permissions on this folder',\n        '</h4>',\n        '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"/>',\n        '<div class=\"alert alert-info roles-selection\">',\n          'User with <strong>any</strong> of these roles can manage permissions on this folder.',\n        '</div>',\n        '<h4>',\n          'Roles that can add items to this folder',\n        '</h4>',\n        '<div id=\"add_perm\" class=\"add_perm roles-selection\"/>',\n        '<div class=\"alert alert-info roles-selection\">',\n          'User with <strong>any</strong> of these roles can add items to this folder (folders and datasets).',\n        '</div>',\n        '<h4>',\n          'Roles that can modify this folder',\n        '</h4>',\n        '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"/>',\n        '<div class=\"alert alert-info roles-selection\">',\n          'User with <strong>any</strong> of these roles can modify this folder (name, etc.).',\n        '</div>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n          '<span class=\"fa fa-floppy-o\"/>',\n          '&nbsp;Save',\n        '</button>',\n      '</div>',\n    '</div>'\n    ].join(''));\n  }\n\n});\n\nreturn {\n    FolderView: FolderView\n};\n\n});\n"]}