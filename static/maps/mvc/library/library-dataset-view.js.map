{"version":3,"sources":["mvc/library/library-dataset-view.js"],"names":["LibraryDatasetView","Backbone","View","extend","el","model","options","defaults","edit_mode","events","click .toolbtn_modify_dataset","click .toolbtn_cancel_modifications","click .toolbtn-download-dataset","click .toolbtn-import-dataset","click .copy-link-to-clipboard","click .toolbtn_save_permissions","select_extension","list_extensions","auto","id","text","description","list_genomes","initialize","this","_","fetchDataset","_libraryModel2","default","Item","that","fetchExtAndGenomes","fetch","success","show_permissions","showPermissions","show_version","fetchVersion","render","error","response","responseJSON","onclick","libraries","library_router","back","_toastr2","Galaxy","remove","template","$","html","item","templateDataset","tooltip","ldda_id","ldda","Ldda","renderVersion","err_msg","get","$el","renderSelectBoxes","genome_build","file_ext","downloadDataset","url","data","ld_ids","processDownload","method","param","each","pair","split","inputs","importIntoHistory","self","modal","closing_events","title","body","Import","refreshUserHistoriesList","templateBulkImportInModal","show","histories","models","buttons","Close","hide","callback","GalaxyHistories","length","warning","importCurrentIntoHistory","new_history_name","window","location","root","processImportToHistory","always","enableButton","history_id","historyItem","urlRoot","val","jQuery","getJSON","name","new_history","find","templateDatasetPermissions","fetched_permissions","save","content","source","is_admin","prepareSelectBoxes","selected_roles","i","accessSelectObject","selector","initialData","_serializeRoles","undefined","modifySelectObject","access_dataset_roles","set","is_unrestricted","_generate_select_options","minimumInputLength","multiple","config","is_admin_user","formatSelection","done","css","select_options","container","dataType","quietMillis","term","page","replace","q","results","_uiSelect2","saveModifications","modify_item_roles","manageSelectObject","ld","is_changed","manage_dataset_roles","new_info","placeholder","new_genome_build","formatResult","role","new_ext","patch","dataset_view","dropdownCssClass","join","ajax","copyToClipboard","e","preventDefault","href","history","prompt","post","total","roles","more","removeDatasetRestrictions","new_name","ids_list","roles_list","select_genome","select2","access_ids","modify_ids","_extractIds","info","description_url","lastIndexOf","makeDatasetPrivate","a","fail","current_genome","current_ext","value","push","savePermissions","event","manage_ids","templateVersion","access_ids[]","manage_ids[]","modify_ids[]","_utils2","datatypes","key","extension","sort","b","unshift","genomes","templateModifyDataset"],"mappings":"sSAIIA,EAAqBC,SAASC,KAAKC,QACnCC,GAAI,UAEJC,MAAO,KAEPC,WAEAC,UACIC,WAAW,GAGfC,QACIC,gCAAiC,qBACjCC,sCAAuC,SACvCC,kCAAmC,kBACnCC,gCAAiC,oBACjCC,gCAAiC,kBAhBrCd,sBAAqBC,qBACrBG,6BAD0C,4BAmBtCW,kCAAmC,kBAhBvCV,oCAH0C,qBAO1CE,cAAU,KAoBVS,iBAAkB,KAddC,mBAGAC,MACAC,GAAA,OACAC,KAAA,cACAC,YACA,sZASJC,gBAmBAC,WAAY,SAASjB,GAhBrBkB,KAAAlB,QAAAmB,EAAAtB,OAAAqB,KAAAlB,QAAAA,GACAY,KAAAA,qBACIC,KAAIb,QADFa,IAEFC,KAAAA,gBAUJM,aAAA,SAAApB,GACAgB,KAAAA,QAAcG,EA9C4BtB,OAAAqB,KAAAlB,QAAAA,GA0DtCkB,KAAKnB,MAAQ,IAAIsB,EAAAC,QAAkBC,MAVvCN,GAAAA,KAAYjB,QAAAa,KAER,IAAAW,EAAKC,KACLP,KAAAnB,MAAI2B,OACAC,QAAKP,WACRI,EAAAxB,QAAA4B,iBArDqCJ,EAAAK,kBAkEnBL,EAAKxB,QAAQ8B,aAVpCV,EAAcW,eAELhC,EAAQiC,UAGbC,MAAIT,SAAJzB,EAAAmC,QACiB,IAANR,EAAMS,aACbR,EAAAA,QAASM,MACDT,EAAKxB,aAAQ4B,QACbJ,0BADJ,IAIOY,QAAA,WACEJ,OAALK,UAAAC,eAAAC,UAKAC,EAAAlB,QAAAW,MAKQG,4CACIK,IANZL,QAAA,WAUGK,OAAAJ,UAAAC,eAAAC,cAalBP,OAjGyC,SAAAhC,GAoGtCkB,KAAKlB,QAAUmB,EAAEtB,OAAOqB,KAAKlB,QAASA,GAD1CgC,EAAAA,YAAQU,SACJ,IAAAC,EAAK3C,KAAUmB,kBACfyB,KAAAA,IAAEC,KAAAF,GAAFG,KAAA5B,KAAAnB,SACA6C,EAAA,SAAID,KAAAA,KAAW5C,MAAKgD,IAAAA,SACpBH,EAAA,yBAAuBI,WAG1BjB,aA1GyC,SAAA/B,GA6GtCkB,KAAKlB,QAAUmB,EAAEtB,OAAOqB,KAAKlB,QAASA,GAD1C+B,KAAAA,KACIb,KAAKlB,QAALiD,SAQI/B,KAAAgC,KAAKA,IAAO7B,EAAAC,QAAI6B,MACZtC,GAAAA,KAAIb,QAAKA,UAEbkB,KAAAgC,KAAKA,IAELhC,KAAKgC,KAAKxB,QAAMR,KAAAnB,MAAAc,GAAA,aAAAK,KAAAgC,KAAArC,GACZc,KAAAA,KAAAA,OACIH,QAAAA,WACHA,KAHW4B,iBAKRnB,MAAA,SAAIlC,EAAOmC,QACUA,IAAjBA,EAAAC,aACHK,EAAAlB,QAAMW,MAAAC,EAAAC,aAAAkB,SAENb,EAAAlB,QAAAW,MAAA,2BArBbT,KAAAA,SACAgB,EAAAlB,QAAUtB,MACN,2DA0BJ4C,cAAE,WACFA,EAAA,YAAID,SACJ,IAAAA,EAASE,KAAKF,kBACdC,KAAAA,IAAEC,KAAFF,GAAqBO,KAAKI,KAAIvD,MAA9BmD,KAAAhC,KAAAgC,QACHN,EA9IyC,SAAAC,KAAA3B,KAAAgC,KAAAI,IAAA,UAiJtCV,mBAAA,WACAA,EAAA,YAAID,SACJ,IAAAA,EAASE,KAAKF,wBACdzB,KAAAqC,IAAKC,KAAAA,GAAAA,KAAkBtC,KAAAnB,SACnB0D,KAAAA,mBACAC,aAAUxC,KAAKnB,MAAMuD,IAAI,gBAFNI,SAAvBxC,KAAAnB,MAAAuD,IAAA,cAKAV,EAAAA,SAAEC,KAAA3B,KAAAnB,MAAAuD,IAAyBN,SAC9BJ,EA1JyC,yBAAAI,WA6JtCW,gBAAIC,WACJ,IAAAA,EAAIC,OAASC,KAAAA,+CACbD,GAAKE,OAAAA,KAAgBH,IACxB1C,KAhKyC6C,gBAAAH,EAAAC,IAmKtCE,gBAAA,SAAAH,EAAAC,EAAAG,GAEI,GAAAJ,GAAAC,EAAA,CAEAA,EAAA,iBAAAA,EAAAA,EAAAjB,EAAAqB,MAAAJ,GAEAjB,IAAAA,EAAOiB,GACHjB,EAAAsB,KAAAL,EAAIM,MAAAA,KAAYC,WAChBC,IAAAA,EAAAA,KACID,MAAA,KAKPC,GACD,8BAEIF,EAAA,GANI,YAkBRA,EAAA,GACH,SAGLG,EACI,iBACQ3B,EACJ4B,cACKC,GAAL,QACIC,KACAC,EACAC,WAEIC,SAAAA,QACIL,SACH7B,SAEGD,EAAAA,QAAAA,KAAAA,oCAIf6B,kBAhBD,WAiBHpD,KAtNyC2D,yBAAA,SAAAN,GAsMlC,IAAI5B,EAAW4B,EAAKO,4BAkB5BD,EAAAA,MAAAA,OAAAA,MACIN,EAAIA,MAAOQ,MACXN,gBAAiB,EACjBC,MAAKM,sBACDrD,KAAAA,GAASqD,UAASA,EAAAA,UAAWC,SACzBC,SACIN,OAAA,WAIQxC,EAAAA,4BAEC+C,MAAA,WAHL1C,OAHJ+B,MAAAY,cAeAP,yBAAA,SAAAQ,GACH,IAAAd,EAAArD,KACGA,KAAA8D,UAAA,IAAA3D,EAAAC,QAAiBgE,gBACpBpE,KAAA8D,UAAAtD,OACJC,QAAA,SAAAqD,GAtBL,IAAAA,EAAAO,OA3NsC/C,EAAAlB,QAAAkE,QA+NtB,yDAsBpBC,IAEQC,QAAmB,WACvBC,OAAAC,SAAAnD,OAAAoD,QAMYrE,EAAKsE,IAIR7D,MACA8D,SAAOhG,EAAAmC,QACJ,IAAKsC,EAAMwB,aAVnBxD,EAAAlB,QAAAW,MAAAC,EAAAC,aAAAkB,SAaI4C,EAAAA,QAAAA,MAAe,0BAQ3BH,yBAAAA,WACI5E,KAAAsD,MAAI0B,cAAc,UAClBA,IAAAA,EAAkBA,KAAAA,MAAYC,EAAAA,4BAAuBC,MACrD5E,EAAAN,KACA,GAAA,KAAAwE,EACAW,EAAAA,KAAOC,OAAPT,KAAepD,iBACf8D,KAAAb,IAIQ/D,KAAAA,SAAAA,GACIc,EAAAA,uBAAA+D,EAAA3F,MAKQuB,KAAAA,SAAAA,EAAAA,EAASH,GACL0D,EAAAA,QAAAA,MAAOC,wBAFfG,OAHJ,WAHRvE,EAAAgD,MAAAwB,aAAA,gBAcQ,CACI,IAAAC,EAAArD,EAAA1B,KAAAsD,MAAWvC,KAIdwE,KALD,sDAMIL,MAGHlF,KAAA4E,uBAAAG,GACJ/E,KAAAsD,MAAAwB,aAAA,YAKbnE,uBAAiB,SAAAoE,GACb,IAAAC,EAAIvD,IAAWtB,EAAAC,QAAKoF,YACpBR,EAAI3B,IAAO2B,EAAXC,QAAAF,EAAA,YAGAI,OAAAC,QAAStG,OAAQ2G,KAAAA,6BAAmCV,GAK5CC,EAAAU,MACHC,QAAM3F,KAAAL,GAAAiG,OAAA,YAENnF,QAAA,WACJc,OAAA+B,MAAAY,OACD5C,EAAAlB,QACIqB,QACU,sDACNoE,IAIGlB,QACH,WAKKmB,OAALpB,SAAwBnD,OAAAoD,SAMxB5D,MAAA,SAAAlC,EACImC,QAdZ,IAAAA,EAAAC,aAiBEK,EAAAlB,QAAAW,MACF,yBA5VsCC,EAAAC,aAAAkB,SAgWlC4D,EAAAA,QAAJhF,MACgBiF,iEAYhBrF,gBAAK7B,SAAYH,GACjB,IAAA8C,EAAKwE,KAAAA,6BAEGC,EAAAA,KACAC,KAAAA,QAAAA,EAAAA,OAAanG,KAAKoG,QAAAA,GAFQ1E,EAAA,YADlCF,cAQ8B6E,IAA9BrG,KAAKsG,QAAAA,sBAAL,IAGQH,KAAAA,QAAaV,oBAAAc,qBACId,OAMjBS,KAAAA,MAAUM,KAAAC,iBADgB,IADlCzG,KAAAnB,MAAA2H,KAAAC,iBAAA,KAUJC,KAAAA,IAAAA,KACIjF,GACIkF,KAAAA,KAAAA,MACAC,SAAUrF,OAFOsF,OAAAC,iBAKbpF,EAAAU,IACHb,OANgBoD,KAOjBoC,0BACI1D,EAAA1D,GACH,8BAEGqH,KAAA,SAAAvB,GACApC,EAAAyC,oBACAL,oBAAAA,EACAI,SAAIlD,OAAJkE,OAAAC,kBAGInE,KAAAA,WACIhD,EAAAA,QAAAA,MACA0F,sEAGRlB,EAAAA,yBAAArC,UACHJ,EAAA,WAvBgBuF,IAAA,WAAA,SA0BrBC,gBAAAA,SAAeC,GAEfD,IAAAA,IADAA,KACAA,EAAAA,EAAAA,EAAef,EAAf9B,OAA6BvF,IAEzB4D,EACInB,KAIJ6F,EAAUpB,GAAA,GACVqB,IACA1E,EAAMqD,GAAA,GAASsB,QAAMC,IAAM,KAAAC,QAAA,IAAA,OAGnBC,OAAAA,GADG3B,mBAAP,SAAAhH,GAKHkB,KAAAlB,QAfiBmB,EAAAtB,OAAAqB,KAAAlB,QAAAA,GAgBlB4I,KAAAA,mBAAS,IAAAC,EAAAvH,QAAemH,KACpBvH,KAAA0G,0BACAR,SAAA,cACAC,YAASuB,KAAAA,gBACZ1H,KAAAlB,QAAA2G,oBAAAc,yBApELvG,KAAKsG,mBAAqB,IAAIqB,EAAAvH,QAAW1B,KAyE7CsB,KAAA0G,0BAvEYR,SAAU,cACVC,YAAanG,KAAKoG,gBAyE9BwB,KAAAA,QAAmBnC,oBAAAoC,sBAIf7H,KAAA8H,mBAAI,IAAoBH,EAAAvH,QAApB1B,KACAsB,KAAA0G,0BACIqB,SAAA,cACAC,YAAAA,KAAa5B,gBAFjBpG,KAGOlB,QAAA2G,oBAAAwC,0BAQXvB,yBACWwB,SAAapJ,GAGpBiJ,IAAAA,GACAC,mBAAa,EAChBpB,UAAA,EACDuB,YAAIC,yBACJC,aACWD,SAAqBE,GAG5BP,OAAOO,EAAAjD,KAAA,UAAgB+C,EAAAA,MAE1BrB,gBAAA,SAAAuB,GACGC,OAAAA,EAAUlD,MAEV0C,cAAO,SAAYQ,EAAnBpE,GAIA6D,IAAAA,KACAD,EAAAA,EAAQ7C,MAAMhC,MAAA,MAAAF,KAAA,WACVwF,IAAAA,EADUxI,KAAAkD,MAAA,KAEVzC,EAAAA,MACIgI,GAAAA,EAAAA,GACApD,KAAAzD,EAAA,OAGAuC,EAAAxB,IAEC+F,iBAFD,WAqCJ,OA/BKxB,EAAAC,UAAAnH,KAAAqC,IAAAkD,KAAA,IAAAzG,EAAAoH,UACJgB,EAAAD,IAAAnI,EAAAoH,SAdSgB,EAAdf,YAAArH,EAAAqH,YAAAwC,KAAA,KAgBHzB,EAAM0B,MACHH,IACAlH,OAAAoD,KACH,0BA3fqC3E,KAAAL,GA2a9B,+BAmFZkJ,SAAAA,OACIC,YAAEC,IACFpG,KAAIqG,SAAOvK,EAASwK,GAEhBD,OACHvB,EAAAH,EACM4B,WAAO,GApgBwB3B,KAAAA,IAwgBtCG,QAAIrE,SAAJV,EAAA4E,GACE4B,IACE5H,EACI,GADGoD,EACHhC,EAAAyG,MAMA/F,OAAK1C,QAAAA,EAAgB0I,MAAAC,KAAAA,KAGrBpC,GASZqC,kBAAAA,SAAAA,GACI,IAAAvB,GAAW,EACXtG,EAAEyH,KACE5H,MAMI8B,EAAKxE,KAAM2H,IAAIjB,KAAEkB,uBAAjBvB,MACA7B,QAAK1C,IAAL0C,GAAqBmG,IAAAzB,EAAA3F,IAAA,QAAA,CACjBqD,KAAAA,EAAAA,OAAAA,GA1FJ,YAiGAnE,EAAAlB,QAAAkE,QAhBR,6DAQ6ByD,EAArBvB,IAAA,OAAAgD,GAGAxB,GAAA,EAzFR,IAAIE,EAAWlI,KAAKqC,IAAIkD,KAAK,4BAA4BL,WAwGzD,IAAIuE,GACJvB,IAAawB,EAAAA,IAAAA,eAEZ3B,EAAAvB,IAAA,YAAA0B,GACDF,GAAOyB,GApGP,IAAIrB,EAAmBpI,KAAK2J,cAActH,IAAIuH,QAAQ,QAAQjK,QAE9B,IAArByI,GACPA,IAAqBL,EAAG3F,IAAI,kBAwGhC2F,EAAAvB,IAAInD,eAAJ+E,GACAJ,GAAI6B,GAMJ,IAAAtB,EAAIuB,KAAAA,iBAAkBC,IAClBH,QAAKtD,QAAAA,QAGL,IAAA/E,GACIgH,IADJR,EAEI1E,IAAAA,cAGA0E,EAAAvB,IAAA,WAAA+B,GACAP,GAAA,GAFJ,IAAAS,EAMMzI,KACFqD,EACIoC,EAAAA,KAAAA,MADiB+C,OAArB,EAGA/H,QAAA,SAAWA,GAETgI,EAAM3H,SACRQ,EAAAlB,QAAAK,QACI,sCAjmB0BM,MAAA,SAAAlC,EAAAmC,QA+eW,IAA1BA,EAASC,aAuHpCK,EAAAlB,QAAAW,MAAAC,EAAAC,aAAAkB,SApHoBb,EAAAlB,QAAWW,MACP,wEA4HZN,EAAAA,SACIa,EAAAlB,QAAA4J,KAAA,0BAIQnK,gBAAAA,SAAAA,GACAoK,EAAAA,iBAJsB,IAAAjB,EAAAvK,SAAAwK,QAA1BvE,SAAAsE,MAMH,IAAAA,EAAAkB,YAAA,kBACD5J,EAAAA,EAAAA,OAAKb,EAAAA,EAAAA,YACD,kBAAAgF,OAAAyE,OAAA,mCADJF,IAXMmB,mBAAd,WAiBH,IAAA9G,EAAArD,KACD0B,EAAAyH,KACI5H,OAAAoD,KACIjC,0BACAjC,EAAAA,GACI,oCAEQd,KAAAA,SAAAA,GACAC,EAAAA,MAAAA,KAAAA,iBAAM,IAFayD,EAAA1C,iBAI1B8E,oBAAAA,IAEGnE,EAAAlB,QAAAK,QAAW2J,wCAElBC,KAAA,WAZS/I,EAAAlB,QAAdW,MAcH,kEAKDwI,0BAAA,WACA,IAAAlG,EAAArD,KACA0B,EAAAyH,KACA5H,OAAIjB,KACAgK,0BACAC,EAAAA,GACA,2CAEID,KAAAA,SAAAA,GACHjH,EAAAxE,MAAA2H,KAAAC,iBAAA,IACDpD,EAAI1C,iBACA4J,oBAAczL,IAErBwC,EAAAlB,QAAAK,QACIkJ,iDAGDxC,KAAAA,WACAqD,EAAAA,QAAOF,MAJX,uEAzGJP,YAAa,SAASL,GAwHlB,IAAA,IADJ7H,KACImE,EAASvE,EACL4C,OAAA,EAAA2B,GAAA,EAAAA,IACIyD,EAAAgB,KAAAf,EAAA1D,GAAArG,IArHR,OAAO8J,GAkSCiB,gBAAA,SAAAC,GACA,IAAAtH,EAAArD,KACA6J,EAAA7J,KAAA+J,YACA/J,KAAAiG,mBAlLR5D,IAAAuH,QAAA,SAxGIgB,EAAa5K,KAAK+J,YA+R1Bc,KAAAA,mBAAiBxI,IAAAuH,QAAA,SAGLE,EAAA9J,KAAA+J,YACA/J,KAAAsG,mBAAAjE,IAAAuH,QAAA,SAUAlI,EAAAyH,KACA5H,OAAAoD,KAYA,0BACAtB,EAAA1D,GAyFA,uCAEAmL,eAAAjB,EACAkB,eAvHRH,EAx2BsCI,eAAAlB,IAq+BtC9C,KAAA,SAAAvB,GAEQpC,EAAA1C,iBACA8E,oBAAAA,IAYAnE,EAAAlB,QAAAK,QAAA,wBAyEA4J,KAAA,WACA/I,EAAAlB,QAAAW,MAYA,qEAoBAR,mBAAA,WACA,IAAAD,EAAAN,KAiDA,GAAAA,KAAAF,aAAAuE,QACA4G,EAAA7K,QACFuI,KAlpCgCjG,IAAAnB,OAAAoD,KAAA,qCA+mB9BlE,QAAS,SAASyK,GAuiB9BtH,IAAAA,IAAAA,KAA2BsH,EACdzJ,EAAFhC,gBAGCgL,MAgBX9K,GAAAuL,EAAAC,GAAAC,UA1qCLxL,KAAAsL,EAAAC,GAAAC,UAonB4BvL,YAAaqL,EAAUC,GAAKtL,YAyjBzCoK,gBAAAiB,EAAAC,GAAAlB,kBArjBK3J,EAAKb,gBAAgB4L,KACjB,SAACjB,EAAGkB,GAAJ,OAAWlB,EAAEzK,GAAK2L,EAAE3L,GAAK,EAAIyK,EAAEzK,GAAK2L,EAAE3L,IAAM,EAAI,IAEpDW,EAAKb,gBAAgB8L,QAAQjL,EAAKZ,SAIX,GAA/BM,KAAKP,gBAAgB4E,QACrB4G,EAAA7K,QAAUgC,KACNM,IAAKnB,OAAOoD,KAAO,cACnBlE,QAAS,SAAS+K,GACd,IAAK,IAAIL,KAAOK,EACZlL,EAAKR,aAAa2K,MACd9K,GAAI6L,EAAQL,GAAK,GACjBvL,KAAM4L,EAAQL,GAAK,KAG3B7K,EAAKR,aAAauL,KACd,SAACjB,EAAGkB,GAAJ,OAAWlB,EAAEzK,GAAK2L,EAAE3L,GAAK,EAAIyK,EAAEzK,GAAK2L,EAAE3L,IAAM,EAAI,QAOpE2C,kBAAmB,SAASxD,GAKxB,IAAIwB,EAAON,KACPsK,EAAiB,IACjBC,EAAc,YACK,IAAZzL,SAC6B,IAAzBA,EAAQyD,eACf+H,EAAiBxL,EAAQyD,mBAEG,IAArBzD,EAAQ0D,WACf+H,EAAczL,EAAQ0D,WAG9BxC,KAAK2J,cAAgB,IAAIhC,EAAAvH,QAAW1B,MAChCuI,IAAK,wBACLtE,KAAMrC,EAAKR,aACXqH,UAAW7G,EAAK+B,IAAIkD,KAAK,0BACzBiF,MAAOF,IAEXtK,KAAKR,iBAAmB,IAAImI,EAAAvH,QAAW1B,MACnCuI,IAAK,2BACLtE,KAAMrC,EAAKb,gBACX0H,UAAW7G,EAAK+B,IAAIkD,KAAK,6BACzBiF,MAAOD,KAIf1I,gBAAiB,WACb,OAAO5B,EAAEwB,UAGD,wCACA,6BACA,0KACA,uCACA,iBACA,YACA,mLACA,mCACA,mBACA,YACA,2CACA,2KACA,qCACA,eACA,YACA,UACA,2CACA,uFACA,8KACA,oCACA,oBACA,YACA,OACA,UACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,2CACA,QACA,2JACA,SACA,UAGA,8BACA,2DACA,OACA,oHACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,mCACA,+DACA,QACA,UACA,qCACA,OACA,kCACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,2CACA,OACA,4BACA,yDACA,QACA,UACA,4CACA,OACA,6BACA,0DACA,QACA,UACA,WAEA,sCACA,8BACA,qBACA,0CACA,SACA,UAEA,sCACA,+BACA,qBACA,0CACA,SACA,UAEA,QACA,qBACA,SACA,SAEA,wCACA,QACA,6BACA,OACA,iEACA,wKACA,WACA,OACA,SACA,UAEA,SAEA,UACFkH,KAAK,MAIfkC,gBAAiB,WACb,OAAO5K,EAAEwB,UAGD,wCACA,6BACA,2EACA,qJACA,+CACA,uBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8HAEA,8BACA,2DACA,OACA,2EACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,2CACA,+DACA,QACA,UACA,qCACA,OACA,iDACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SAEA,SAEA,UACFkH,KAAK,MAIf8C,sBAAuB,WACnB,OAAOxL,EAAEwB,UAGD,wCACA,6BACA,kLACA,oCACA,eACA,YACA,8KACA,uCACA,aACA,YACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8BACA,2DACA,OACA,oHACA,oIACA,QACA,OACA,iCACA,OACA,0EACA,QACA,QACA,OACA,oCACA,OACA,oEACA,QACA,QACA,OACA,4BACA,kDACA,QACA,OACA,2CACA,sDACA,QACA,OACA,mCACA,oDACA,QACA,mBACA,kCACA,wEACA,QACA,qCACA,yDACA,2EACA,iBACA,+BACA,UACA,QACA,OACA,yCACA,qEACA,QACA,OACA,oCACA,0EACA,QACA,OACA,+BACA,4DACA,QACA,OACA,mCACA,+DACA,QACA,OACA,yCACA,8IACA,QAEA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SACA,SAEA,UACFkH,KAAK,MAIfnD,2BAA4B,WACxB,OAAOvF,EAAEwB,UAGD,wCACA,6BACA,2EACA,mJACA,qCACA,wBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,sDACA,oCACA,wBACA,yKACA,iBACA,+IACA,UACA,SACA,8BACA,uCACA,kDACA,mEACA,8KACA,QACA,uCACA,+LACA,4CACA,yHACA,iBACA,oGACA,UACA,6CACA,mEACA,iDACA,qFACA,mGACA,mGACA,SACA,4DACA,mEACA,iDACA,sLACA,SACA,iLACA,uCACA,aACA,YACA,SAEA,UACFkH,KAAK,MAIf/E,0BAA2B,WACvB,OAAO3D,EAAEwB,UAED,QACA,mCACA,mBACA,qHACA,8CACA,mGACA,YACA,YACA,SACA,mCACA,kBACA,4GACA,WACA,SACA,UACFkH,KAAK,mBAMfnK,mBAAoBA","file":"../../../scripts/mvc/library/library-dataset-view.js","sourcesContent":["import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_utils from \"utils/utils\";\nimport mod_select from \"mvc/ui/ui-select\";\nvar LibraryDatasetView = Backbone.View.extend({\n    el: \"#center\",\n\n    model: null,\n\n    options: {},\n\n    defaults: {\n        edit_mode: false\n    },\n\n    events: {\n        \"click .toolbtn_modify_dataset\": \"enableModification\",\n        \"click .toolbtn_cancel_modifications\": \"render\",\n        \"click .toolbtn-download-dataset\": \"downloadDataset\",\n        \"click .toolbtn-import-dataset\": \"importIntoHistory\",\n        \"click .copy-link-to-clipboard\": \"copyToClipboard\",\n        \"click .make-private\": \"makeDatasetPrivate\",\n        \"click .remove-restrictions\": \"removeDatasetRestrictions\",\n        \"click .toolbtn_save_permissions\": \"savePermissions\",\n        \"click .toolbtn_save_modifications\": \"saveModifications\"\n    },\n\n    // genome select\n    select_genome: null,\n\n    // extension select\n    select_extension: null,\n\n    // extension types\n    list_extensions: [],\n\n    // datatype placeholder for extension auto-detection\n    auto: {\n        id: \"auto\",\n        text: \"Auto-detect\",\n        description:\n            \"This system will try to detect the file type automatically.\" +\n            \" If your file is not detected properly as one of the known formats,\" +\n            \" it most likely means that it has some format problems (e.g., different\" +\n            \" number of columns on different rows). You can still coerce the system\" +\n            \" to set your data to the format you think it should be.\" +\n            \" You can also upload compressed files, which will automatically be decompressed.\"\n    },\n\n    // genomes\n    list_genomes: [],\n\n    initialize: function(options) {\n        this.options = _.extend(this.options, options);\n        this.fetchExtAndGenomes();\n        if (this.options.id) {\n            this.fetchDataset();\n        }\n    },\n\n    fetchDataset: function(options) {\n        this.options = _.extend(this.options, options);\n        this.model = new mod_library_model.Item({\n            id: this.options.id\n        });\n        var that = this;\n        this.model.fetch({\n            success: function() {\n                if (that.options.show_permissions) {\n                    that.showPermissions();\n                } else if (that.options.show_version) {\n                    that.fetchVersion();\n                } else {\n                    that.render();\n                }\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(\n                        response.responseJSON.err_msg +\n                            \" Click this to go back.\",\n                        \"\",\n                        {\n                            onclick: function() {\n                                Galaxy.libraries.library_router.back();\n                            }\n                        }\n                    );\n                } else {\n                    mod_toastr.error(\n                        \"An error occurred. Click this to go back.\",\n                        \"\",\n                        {\n                            onclick: function() {\n                                Galaxy.libraries.library_router.back();\n                            }\n                        }\n                    );\n                }\n            }\n        });\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n        var template = this.templateDataset();\n        this.$el.html(template({ item: this.model }));\n        $(\".peek\").html(this.model.get(\"peek\"));\n        $(\"#center [data-toggle]\").tooltip();\n    },\n\n    fetchVersion: function(options) {\n        this.options = _.extend(this.options, options);\n        that = this;\n        if (!this.options.ldda_id) {\n            this.render();\n            mod_toastr.error(\n                \"Library dataset version requested but no id provided.\"\n            );\n        } else {\n            this.ldda = new mod_library_model.Ldda({\n                id: this.options.ldda_id\n            });\n            this.ldda.url =\n                this.ldda.urlRoot + this.model.id + \"/versions/\" + this.ldda.id;\n            this.ldda.fetch({\n                success: function() {\n                    that.renderVersion();\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                }\n            });\n        }\n    },\n\n    renderVersion: function() {\n        $(\".tooltip\").remove();\n        var template = this.templateVersion();\n        this.$el.html(template({ item: this.model, ldda: this.ldda }));\n        $(\".peek\").html(this.ldda.get(\"peek\"));\n    },\n\n    enableModification: function() {\n        $(\".tooltip\").remove();\n        var template = this.templateModifyDataset();\n        this.$el.html(template({ item: this.model }));\n        this.renderSelectBoxes({\n            genome_build: this.model.get(\"genome_build\"),\n            file_ext: this.model.get(\"file_ext\")\n        });\n        $(\".peek\").html(this.model.get(\"peek\"));\n        $(\"#center [data-toggle]\").tooltip();\n    },\n\n    downloadDataset: function() {\n        var url = Galaxy.root + \"api/libraries/datasets/download/uncompressed\";\n        var data = { ld_ids: this.id };\n        this.processDownload(url, data);\n    },\n\n    processDownload: function(url, data, method) {\n        //url and data options required\n        if (url && data) {\n            //data can be string of parameters or array/object\n            data = typeof data == \"string\" ? data : $.param(data);\n            //split params into form inputs\n            var inputs = \"\";\n            $.each(data.split(\"&\"), function() {\n                var pair = this.split(\"=\");\n                inputs +=\n                    '<input type=\"hidden\" name=\"' +\n                    pair[0] +\n                    '\" value=\"' +\n                    pair[1] +\n                    '\" />';\n            });\n            //send request\n            $(\n                '<form action=\"' +\n                    url +\n                    '\" method=\"' +\n                    (method || \"post\") +\n                    '\">' +\n                    inputs +\n                    \"</form>\"\n            )\n                .appendTo(\"body\")\n                .submit()\n                .remove();\n\n            mod_toastr.info(\"Your download will begin soon.\");\n        }\n    },\n\n    importIntoHistory: function() {\n        this.refreshUserHistoriesList(self => {\n            var template = self.templateBulkImportInModal();\n            self.modal = Galaxy.modal;\n            self.modal.show({\n                closing_events: true,\n                title: \"Import into History\",\n                body: template({ histories: self.histories.models }),\n                buttons: {\n                    Import: function() {\n                        self.importCurrentIntoHistory();\n                    },\n                    Close: function() {\n                        Galaxy.modal.hide();\n                    }\n                }\n            });\n        });\n    },\n\n    refreshUserHistoriesList: function(callback) {\n        var self = this;\n        this.histories = new mod_library_model.GalaxyHistories();\n        this.histories.fetch({\n            success: function(histories) {\n                if (histories.length === 0) {\n                    mod_toastr.warning(\n                        \"You have to create history first. Click this to do so.\",\n                        \"\",\n                        {\n                            onclick: function() {\n                                window.location = Galaxy.root;\n                            }\n                        }\n                    );\n                } else {\n                    callback(self);\n                }\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(response.responseJSON.err_msg);\n                } else {\n                    mod_toastr.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    importCurrentIntoHistory: function() {\n        this.modal.disableButton(\"Import\");\n        var new_history_name = this.modal.$(\"input[name=history_name]\").val();\n        var that = this;\n        if (new_history_name !== \"\") {\n            $.post(Galaxy.root + \"api/histories\", {\n                name: new_history_name\n            })\n                .done(new_history => {\n                    that.processImportToHistory(new_history.id);\n                })\n                .fail((xhr, status, error) => {\n                    mod_toastr.error(\"An error occurred.\");\n                })\n                .always(() => {\n                    that.modal.enableButton(\"Import\");\n                });\n        } else {\n            var history_id = $(this.modal.$el)\n                .find(\"select[name=dataset_import_single] option:selected\")\n                .val();\n            this.processImportToHistory(history_id);\n            this.modal.enableButton(\"Import\");\n        }\n    },\n\n    processImportToHistory: function(history_id) {\n        var historyItem = new mod_library_model.HistoryItem();\n        historyItem.url = historyItem.urlRoot + history_id + \"/contents\";\n        // set the used history as current so user will see the last one\n        // that he imported into in the history panel on the 'analysis' page\n        jQuery.getJSON(Galaxy.root + \"history/set_as_current?id=\" + history_id);\n        // save the dataset into selected history\n        historyItem.save(\n            { content: this.id, source: \"library\" },\n            {\n                success: function() {\n                    Galaxy.modal.hide();\n                    mod_toastr.success(\n                        \"Dataset imported. Click this to start analyzing it.\",\n                        \"\",\n                        {\n                            onclick: function() {\n                                window.location = Galaxy.root;\n                            }\n                        }\n                    );\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(\n                            \"Dataset not imported. \" +\n                                response.responseJSON.err_msg\n                        );\n                    } else {\n                        mod_toastr.error(\n                            \"An error occured. Dataset not imported. Please try again.\"\n                        );\n                    }\n                }\n            }\n        );\n    },\n\n    showPermissions: function(options) {\n        var template = this.templateDatasetPermissions();\n        var self = this;\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n        if (this.options.fetched_permissions !== undefined) {\n            if (\n                this.options.fetched_permissions.access_dataset_roles.length ===\n                0\n            ) {\n                this.model.set({ is_unrestricted: true });\n            } else {\n                this.model.set({ is_unrestricted: false });\n            }\n        }\n        this.$el.html(\n            template({\n                item: this.model,\n                is_admin: Galaxy.config.is_admin_user\n            })\n        );\n        $.get(\n            Galaxy.root +\n                \"api/libraries/datasets/\" +\n                self.id +\n                \"/permissions?scope=current\"\n        )\n            .done(fetched_permissions => {\n                self.prepareSelectBoxes({\n                    fetched_permissions: fetched_permissions,\n                    is_admin: Galaxy.config.is_admin_user\n                });\n            })\n            .fail(() => {\n                mod_toastr.error(\n                    \"An error occurred while attempting to fetch dataset permissions.\"\n                );\n            });\n        $(\"#center [data-toggle]\").tooltip();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    _serializeRoles: function(role_list) {\n        var selected_roles = [];\n        for (var i = 0; i < role_list.length; i++) {\n            // Replace the : and , in role's name since these are select2 separators for initialData\n            selected_roles.push(\n                role_list[i][1] +\n                    \":\" +\n                    role_list[i][0].replace(\":\", \" \").replace(\",\", \" &\")\n            );\n        }\n        return selected_roles;\n    },\n\n    prepareSelectBoxes: function(options) {\n        this.options = _.extend(this.options, options);\n        this.accessSelectObject = new mod_select.View(\n            this._generate_select_options({\n                selector: \"access_perm\",\n                initialData: this._serializeRoles(\n                    this.options.fetched_permissions.access_dataset_roles\n                )\n            })\n        );\n        this.modifySelectObject = new mod_select.View(\n            this._generate_select_options({\n                selector: \"modify_perm\",\n                initialData: this._serializeRoles(\n                    this.options.fetched_permissions.modify_item_roles\n                )\n            })\n        );\n        this.manageSelectObject = new mod_select.View(\n            this._generate_select_options({\n                selector: \"manage_perm\",\n                initialData: this._serializeRoles(\n                    this.options.fetched_permissions.manage_dataset_roles\n                )\n            })\n        );\n    },\n\n    _generate_select_options: function(options) {\n        var select_options = {\n            minimumInputLength: 0,\n            multiple: true,\n            placeholder: \"Click to select a role\",\n            formatResult: function roleFormatResult(role) {\n                return role.name + \" type: \" + role.type;\n            },\n            formatSelection: function roleFormatSelection(role) {\n                return role.name;\n            },\n            initSelection: function(element, callback) {\n                // the input tag has a value attribute preloaded that points to a preselected role's id\n                // this function resolves that id attribute to an object that select2 can render\n                // using its formatResult renderer - that way the role name is shown preselected\n                var data = [];\n                $(element.val().split(\",\")).each(function() {\n                    var item = this.split(\":\");\n                    data.push({\n                        id: item[0],\n                        name: item[1]\n                    });\n                });\n                callback(data);\n            },\n            dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n        select_options.container = this.$el.find(\"#\" + options.selector);\n        select_options.css = options.selector;\n        select_options.initialData = options.initialData.join(\",\");\n        select_options.ajax = {\n            url:\n                Galaxy.root +\n                \"api/libraries/datasets/\" +\n                this.id +\n                \"/permissions?scope=available\",\n            dataType: \"json\",\n            quietMillis: 100,\n            data: function(term, page) {\n                // page is the one-based page number tracked by Select2\n                return {\n                    q: term, //search term\n                    page_limit: 10, // page size, should be same as used in 'more' variable below\n                    page: page // page number\n                };\n            },\n            results: function(data, page) {\n                var more = page * 10 < data.total; // whether or not there are more results available\n                // notice we return the value of more so Select2 knows if more results can be loaded\n                return { results: data.roles, more: more };\n            }\n        };\n        return select_options;\n    },\n\n    /**\n   * Save the changes made to the library dataset.\n   */\n    saveModifications: function(options) {\n        var is_changed = false;\n        var ld = this.model;\n        var new_name = this.$el.find(\".input_dataset_name\").val();\n        if (typeof new_name !== \"undefined\" && new_name !== ld.get(\"name\")) {\n            if (new_name.length > 0) {\n                ld.set(\"name\", new_name);\n                is_changed = true;\n            } else {\n                mod_toastr.warning(\n                    \"Library dataset name has to be at least 1 character long.\"\n                );\n                return;\n            }\n        }\n        var new_info = this.$el.find(\".input_dataset_misc_info\").val();\n        if (\n            typeof new_info !== \"undefined\" &&\n            new_info !== ld.get(\"misc_info\")\n        ) {\n            ld.set(\"misc_info\", new_info);\n            is_changed = true;\n        }\n        var new_genome_build = this.select_genome.$el.select2(\"data\").id;\n        if (\n            typeof new_genome_build !== \"undefined\" &&\n            new_genome_build !== ld.get(\"genome_build\")\n        ) {\n            ld.set(\"genome_build\", new_genome_build);\n            is_changed = true;\n        }\n        var new_ext = this.select_extension.$el.select2(\"data\").id;\n        if (typeof new_ext !== \"undefined\" && new_ext !== ld.get(\"file_ext\")) {\n            ld.set(\"file_ext\", new_ext);\n            is_changed = true;\n        }\n        var dataset_view = this;\n        if (is_changed) {\n            ld.save(null, {\n                patch: true,\n                success: function(ld) {\n                    dataset_view.render();\n                    mod_toastr.success(\"Changes to library dataset saved.\");\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\n                            \"An error occured while attempting to update the library dataset.\"\n                        );\n                    }\n                }\n            });\n        } else {\n            dataset_view.render();\n            mod_toastr.info(\"Nothing has changed.\");\n        }\n    },\n\n    copyToClipboard: function(e) {\n        e.preventDefault();\n        var href = Backbone.history.location.href;\n        if (href.lastIndexOf(\"/permissions\") !== -1) {\n            href = href.substr(0, href.lastIndexOf(\"/permissions\"));\n        }\n        window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", href);\n    },\n\n    makeDatasetPrivate: function() {\n        var self = this;\n        $.post(\n            Galaxy.root +\n                \"api/libraries/datasets/\" +\n                self.id +\n                \"/permissions?action=make_private\"\n        )\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: false });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"The dataset is now private to you.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\n                    \"An error occurred while attempting to make dataset private.\"\n                );\n            });\n    },\n\n    removeDatasetRestrictions: function() {\n        var self = this;\n        $.post(\n            Galaxy.root +\n                \"api/libraries/datasets/\" +\n                self.id +\n                \"/permissions?action=remove_restrictions\"\n        )\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: true });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\n                    \"Access to this dataset is now unrestricted.\"\n                );\n            })\n            .fail(() => {\n                mod_toastr.error(\n                    \"An error occurred while attempting to make dataset unrestricted.\"\n                );\n            });\n    },\n\n    /**\n   * Extract the role ids from Select2 elements's 'data'\n   */\n    _extractIds: function(roles_list) {\n        var ids_list = [];\n        for (var i = roles_list.length - 1; i >= 0; i--) {\n            ids_list.push(roles_list[i].id);\n        }\n        return ids_list;\n    },\n\n    /**\n   * Save the permissions for roles entered in the select boxes.\n   */\n    savePermissions: function(event) {\n        var self = this;\n        var access_ids = this._extractIds(\n            this.accessSelectObject.$el.select2(\"data\")\n        );\n        var manage_ids = this._extractIds(\n            this.manageSelectObject.$el.select2(\"data\")\n        );\n        var modify_ids = this._extractIds(\n            this.modifySelectObject.$el.select2(\"data\")\n        );\n        $.post(\n            Galaxy.root +\n                \"api/libraries/datasets/\" +\n                self.id +\n                \"/permissions?action=set_permissions\",\n            {\n                \"access_ids[]\": access_ids,\n                \"manage_ids[]\": manage_ids,\n                \"modify_ids[]\": modify_ids\n            }\n        )\n            .done(fetched_permissions => {\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Permissions saved.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\n                    \"An error occurred while attempting to set dataset permissions.\"\n                );\n            });\n    },\n\n    /**\n   * If needed request all extensions and/or genomes from Galaxy\n   * and save them in sorted arrays.\n   */\n    fetchExtAndGenomes: function() {\n        var that = this;\n        if (this.list_genomes.length == 0) {\n            mod_utils.get({\n                url: Galaxy.root + \"api/datatypes?extension_only=False\",\n                success: function(datatypes) {\n                    for (var key in datatypes) {\n                        that.list_extensions.push({\n                            id: datatypes[key].extension,\n                            text: datatypes[key].extension,\n                            description: datatypes[key].description,\n                            description_url: datatypes[key].description_url\n                        });\n                    }\n                    that.list_extensions.sort(\n                        (a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0)\n                    );\n                    that.list_extensions.unshift(that.auto);\n                }\n            });\n        }\n        if (this.list_extensions.length == 0) {\n            mod_utils.get({\n                url: Galaxy.root + \"api/genomes\",\n                success: function(genomes) {\n                    for (var key in genomes) {\n                        that.list_genomes.push({\n                            id: genomes[key][1],\n                            text: genomes[key][0]\n                        });\n                    }\n                    that.list_genomes.sort(\n                        (a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0)\n                    );\n                }\n            });\n        }\n    },\n\n    renderSelectBoxes: function(options) {\n        // This won't work properly unlesss we already have the data fetched.\n        // See this.fetchExtAndGenomes()\n        // TODO switch to common resources:\n        // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n        var that = this;\n        var current_genome = \"?\";\n        var current_ext = \"auto\";\n        if (typeof options !== \"undefined\") {\n            if (typeof options.genome_build !== \"undefined\") {\n                current_genome = options.genome_build;\n            }\n            if (typeof options.file_ext !== \"undefined\") {\n                current_ext = options.file_ext;\n            }\n        }\n        this.select_genome = new mod_select.View({\n            css: \"dataset-genome-select\",\n            data: that.list_genomes,\n            container: that.$el.find(\"#dataset_genome_select\"),\n            value: current_genome\n        });\n        this.select_extension = new mod_select.View({\n            css: \"dataset-extension-select\",\n            data: that.list_extensions,\n            container: that.$el.find(\"#dataset_extension_select\"),\n            value: current_ext\n        });\n    },\n\n    templateDataset: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download dataset\" class=\"btn btn-default toolbtn-download-dataset primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-download\"></span>',\n                \"&nbsp;Download\",\n                \"</button>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import dataset into history\" class=\"btn btn-default toolbtn-import-dataset primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-book\"></span>',\n                \"&nbsp;to History\",\n                \"</button>\",\n                '<% if (item.get(\"can_user_modify\")) { %>',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify library item\" class=\"btn btn-default toolbtn_modify_dataset primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-pencil\"></span>',\n                \"&nbsp;Modify\",\n                \"</button>\",\n                \"<% } %>\",\n                '<% if (item.get(\"can_user_manage\")) { %>',\n                '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/permissions\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Manage permissions\" class=\"btn btn-default toolbtn_change_permissions primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-group\"></span>',\n                \"&nbsp;Permissions\",\n                \"</button>\",\n                \"</a>\",\n                \"<% } %>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<% if (item.get(\"is_unrestricted\")) { %>',\n                \"<div>\",\n                'This dataset is unrestricted so everybody with the link can access it. Just share <span class=\"copy-link-to-clipboard\"><a href=\"\"a>this page</a></span>.',\n                \"</div>\",\n                \"<% } %>\",\n\n                // TABLE START\n                '<div class=\"dataset_table\">',\n                '<table class=\"grid table table-striped table-condensed\">',\n                \"<tr>\",\n                '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                '<td><%= _.escape(item.get(\"name\")) %></td>',\n                \"</tr>\",\n                '<% if (item.get(\"file_ext\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data type</th>',\n                '<td><%= _.escape(item.get(\"file_ext\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"genome_build\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Genome build</th>',\n                '<td><%= _.escape(item.get(\"genome_build\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"file_size\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Size</th>',\n                '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"date_uploaded\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Date uploaded (UTC)</th>',\n                '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"uploaded_by\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Uploaded by</th>',\n                '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_data_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data Lines</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_comment_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Comment Lines</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_columns\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Number of Columns</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_column_types\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Column Types</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"message\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Message</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"misc_blurb\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Misc. blurb</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"misc_info\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Misc. info</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"misc_info\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"tags\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Tags</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if ( item.get(\"uuid\") !== \"ok\" ) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">UUID</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"uuid\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if ( item.get(\"state\") !== \"ok\" ) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">State</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"state\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"</table>\",\n\n                '<% if (item.get(\"job_stderr\")) { %>',\n                \"<h4>Job Standard Error</h4>\",\n                '<pre class=\"code\">',\n                '<%= _.escape(item.get(\"job_stderr\")) %>',\n                \"</pre>\",\n                \"<% } %>\",\n\n                '<% if (item.get(\"job_stdout\")) { %>',\n                \"<h4>Job Standard Output</h4>\",\n                '<pre class=\"code\">',\n                '<%= _.escape(item.get(\"job_stdout\")) %>',\n                \"</pre>\",\n                \"<% } %>\",\n\n                \"<div>\",\n                '<pre class=\"peek\">',\n                \"</pre>\",\n                \"</div>\",\n\n                '<% if (item.get(\"has_versions\")) { %>',\n                \"<div>\",\n                \"<h3>Expired versions:</h3>\",\n                \"<ul>\",\n                '<% _.each(item.get(\"expired_versions\"), function(version) { %>',\n                '<li><a title=\"See details of this version\" href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/versions/<%- version[0] %>\"><%- version[1] %></a></li>',\n                \"<% }) %>\",\n                \"<ul>\",\n                \"</div>\",\n                \"<% } %>\",\n                // TABLE END\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateVersion: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go to latest dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-caret-left fa-lg\"></span>',\n                \"&nbsp;Latest dataset\",\n                \"</button>\",\n                \"<a>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<div class=\"alert alert-warning\">This is an expired version of the library dataset: <%= _.escape(item.get(\"name\")) %></div>',\n                // DATASET START\n                '<div class=\"dataset_table\">',\n                '<table class=\"grid table table-striped table-condensed\">',\n                \"<tr>\",\n                '<th scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(ldda.id) %>\">Name</th>',\n                '<td><%= _.escape(ldda.get(\"name\")) %></td>',\n                \"</tr>\",\n                '<% if (ldda.get(\"file_ext\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data type</th>',\n                '<td><%= _.escape(ldda.get(\"file_ext\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"genome_build\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Genome build</th>',\n                '<td><%= _.escape(ldda.get(\"genome_build\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"file_size\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Size</th>',\n                '<td><%= _.escape(ldda.get(\"file_size\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"date_uploaded\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Date uploaded (UTC)</th>',\n                '<td><%= _.escape(ldda.get(\"date_uploaded\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"uploaded_by\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Uploaded by</th>',\n                '<td><%= _.escape(ldda.get(\"uploaded_by\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_data_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data Lines</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_data_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_comment_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Comment Lines</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_comment_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_columns\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Number of Columns</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_columns\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_column_types\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Column Types</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_column_types\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"message\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Message</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"message\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"misc_blurb\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Miscellaneous blurb</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_blurb\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"misc_info\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Miscellaneous information</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_info\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"tags\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Tags</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"</table>\",\n                \"<div>\",\n                '<pre class=\"peek\">',\n                \"</pre>\",\n                \"</div>\",\n                // DATASET END\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateModifyDataset: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Cancel modifications\" class=\"btn btn-default toolbtn_cancel_modifications primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-times\"></span>',\n                \"&nbsp;Cancel\",\n                \"</button>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_modifications primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-floppy-o\"></span>',\n                \"&nbsp;Save\",\n                \"</button>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<div class=\"dataset_table\">',\n                '<table class=\"grid table table-striped table-condensed\">',\n                \"<tr>\",\n                '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                '<td><input class=\"input_dataset_name form-control\" type=\"text\" placeholder=\"name\" value=\"<%= _.escape(item.get(\"name\")) %>\"></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Data type</th>',\n                \"<td>\",\n                '<span id=\"dataset_extension_select\" class=\"dataset-extension-select\" />',\n                \"</td>\",\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Genome build</th>',\n                \"<td>\",\n                '<span id=\"dataset_genome_select\" class=\"dataset-genome-select\" />',\n                \"</td>\",\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Size</th>',\n                '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Date uploaded (UTC)</th>',\n                '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Uploaded by</th>',\n                '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                \"</tr>\",\n                '<tr scope=\"row\">',\n                '<th scope=\"row\">Data Lines</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                \"</tr>\",\n                '<th scope=\"row\">Comment Lines</th>',\n                '<% if (item.get(\"metadata_comment_lines\") === \"\") { %>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                \"<% } else { %>\",\n                '<td scope=\"row\">unknown</td>',\n                \"<% } %>\",\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Number of Columns</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Column Types</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Message</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Misc. blurb</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Misc. information</th>',\n                '<td><input class=\"input_dataset_misc_info form-control\" type=\"text\" placeholder=\"info\" value=\"<%= _.escape(item.get(\"misc_info\")) %>\"></td>',\n                \"</tr>\",\n                //TODO: add functionality to modify tags here\n                '<% if (item.get(\"tags\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Tags</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"</table>\",\n                \"<div>\",\n                '<pre class=\"peek\">',\n                \"</pre>\",\n                \"</div>\",\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateDatasetPermissions: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-file-o\"></span>',\n                \"&nbsp;Dataset Details\",\n                \"</button>\",\n                \"<a>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<h1>Dataset: <%= _.escape(item.get(\"name\")) %></h1>',\n                '<div class=\"alert alert-warning\">',\n                \"<% if (is_admin) { %>\",\n                \"You are logged in as an <strong>administrator</strong> therefore you can manage any dataset on this Galaxy instance. Please make sure you understand the consequences.\",\n                \"<% } else { %>\",\n                \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                \"<% } %>\",\n                \"</div>\",\n                '<div class=\"dataset_table\">',\n                \"<h2>Library-related permissions</h2>\",\n                \"<h4>Roles that can modify the library item</h4>\",\n                '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"></div>',\n                '<div class=\"alert alert-info roles-selection\">User with <strong>any</strong> of these roles can modify name, metadata, and other information about this library item.</div>',\n                \"<hr/>\",\n                \"<h2>Dataset-related permissions</h2>\",\n                '<div class=\"alert alert-warning\">Changes made below will affect <strong>every</strong> library item that was created from this dataset and also every history this dataset is part of.</div>',\n                '<% if (!item.get(\"is_unrestricted\")) { %>',\n                '<p>You can <span class=\"remove-restrictions\"><a href=\"\">remove all access restrictions</a></span> on this dataset.</p>',\n                \"<% } else { %>\",\n                '<p>You can <span class=\"make-private\"><a href=\"\">make this dataset private</a></span> to you.</p>',\n                \"<% } %>\",\n                \"<h4>Roles that can access the dataset</h4>\",\n                '<div id=\"access_perm\" class=\"access_perm roles-selection\"></div>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User has to have <strong>all these roles</strong> in order to access this dataset.\",\n                \" Users without access permission <strong>cannot</strong> have other permissions on this dataset.\",\n                \" If there are no access roles set on the dataset it is considered <strong>unrestricted</strong>.\",\n                \"</div>\",\n                \"<h4>Roles that can manage permissions on the dataset</h4>\",\n                '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"></div>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can manage permissions of this dataset. If you remove yourself you will lose the ability manage this dataset unless you are an admin.\",\n                \"</div>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                '<span class=\"fa fa-floppy-o\"></span>',\n                \"&nbsp;Save\",\n                \"</button>\",\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateBulkImportInModal: function() {\n        return _.template(\n            [\n                \"<div>\",\n                '<div class=\"library-modal-item\">',\n                \"Select history: \",\n                '<select id=\"dataset_import_single\" name=\"dataset_import_single\" style=\"width:50%; margin-bottom: 1em; \" autofocus>',\n                \"<% _.each(histories, function(history) { %>\",\n                '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n                \"<% }); %>\",\n                \"</select>\",\n                \"</div>\",\n                '<div class=\"library-modal-item\">',\n                \"or create new: \",\n                '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">',\n                \"</input>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    LibraryDatasetView: LibraryDatasetView\n};\n"]}