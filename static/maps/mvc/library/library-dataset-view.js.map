{"version":3,"sources":["mvc/library/library-dataset-view.js"],"names":["define","mod_toastr","mod_library_model","mod_utils","mod_select","LibraryDatasetView","Backbone","View","extend","el","model","options","events","click .toolbtn_modify_dataset","click .toolbtn_cancel_modifications","click .toolbtn-download-dataset","click .toolbtn-import-dataset","click .toolbtn-share-dataset","click .btn-copy-link-to-clipboard","click .btn-make-private","click .btn-remove-restrictions","click .toolbtn_save_permissions","click .toolbtn_save_modifications","select_genome","select_extension","list_extensions","auto","id","text","description","list_genomes","initialize","this","_","fetchExtAndGenomes","fetchDataset","Item","that","fetch","success","show_permissions","showPermissions","show_version","fetchVersion","render","error","response","responseJSON","err_msg","onclick","Galaxy","libraries","library_router","back","$","remove","template","templateDataset","$el","html","item","get","tooltip","ldda_id","ldda","Ldda","url","urlRoot","renderVersion","templateVersion","enableModification","templateModifyDataset","renderSelectBoxes","genome_build","file_ext","downloadDataset","root","data","ld_ids","processDownload","method","param","inputs","each","split","pair","appendTo","submit","info","importIntoHistory","refreshUserHistoriesList","self","templateBulkImportInModal","modal","show","closing_events","title","body","histories","models","buttons","Import","importCurrentIntoHistory","Close","hide","callback","GalaxyHistories","length","warning","window","location","disableButton","new_history_name","val","post","name","done","new_history","processImportToHistory","fail","xhr","status","always","enableButton","history_id","find","historyItem","HistoryItem","jQuery","getJSON","save","content","source","shareDataset","goBack","undefined","fetched_permissions","access_dataset_roles","set","is_unrestricted","is_admin","user","isAdmin","templateDatasetPermissions","prepareSelectBoxes","css","_serializeRoles","role_list","selected_roles","i","push","selected_access_dataset_roles","selected_modify_item_roles","selected_manage_dataset_roles","modify_item_roles","manage_dataset_roles","access_select_options","minimumInputLength","multiple","placeholder","container","ajax","dataType","quietMillis","term","page","q","page_limit","results","more","total","roles","formatResult","role","type","formatSelection","initSelection","element","initialData","join","dropdownCssClass","modify_select_options","manage_select_options","accessSelectObject","modifySelectObject","manageSelectObject","templateAccessSelect","select2","comingSoon","copyToClipboard","href","history","lastIndexOf","substr","prompt","makeDatasetPrivate","removeDatasetRestrictions","_extractIds","roles_list","ids_list","savePermissions","event","access_ids","manage_ids","modify_ids","access_ids[]","manage_ids[]","modify_ids[]","datatypes","key","extension","description_url","sort","a","b","unshift","genomes","current_genome","current_ext","value"],"mappings":"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GF,0BACE,6EACA,4DACE,uCACE,2GACF,iBACE,gFACF,UACF,YACF,QAEA,2CACE,iCACE,6FACA,gKACE,wCACA,qBACF,aACF,SACF,UAGA,8BACE,2DACE,OACE,oHACA,6CACF,QACA,oCACE,OACE,iCACA,iDACF,QACF,UACA,wCACE,OACE,oCACA,qDACF,QACF,UACA,qCACE,OACE,4BACA,kDACF,QACF,UACA,yCACE,OACE,2CACA,sDACF,QACF,UACA,uCACE,OACE,mCACA,oDACF,QACF,UACA,+CACE,OACE,kCACA,wEACF,QACF,UACA,kDACE,OACE,qCACA,2EACF,QACF,UACA,4CACE,OACE,yCACA,qEACF,QACF,UACA,iDACE,OACE,oCACA,0EACF,QACF,UACA,mCACE,OACE,+BACA,4DACF,QACF,UACA,sCACE,OACE,2CACA,+DACF,QACF,UACA,qCACE,OACE,iDACA,8DACF,QACF,UACF,WAEF,QACE,qBACA,SACF,SAEA,wCACE,QACE,6BACA,OACE,iEACE,wKACF,WACF,OACF,SACF,UAEA,SAEA,UACE2H,KAAK,MAGT9G,gBAAkB,WAChB,MAAOpC,GAAEuB,UAET,wCACE,6BACE,2EACE,qJACE,+CACA,uBACF,YACF,MACF,SAGA,0BACE,6EACA,4DACE,uCACE,2GACF,iBACE,gFACF,UACF,YACF,QAEA,8HAEA,8BACE,2DACE,OACE,2EACA,6CACF,QACA,oCACE,OACE,iCACA,iDACF,QACF,UACA,wCACE,OACE,oCACA,qDACF,QACF,UACA,qCACE,OACE,4BACA,kDACF,QACF,UACA,yCACE,OACE,2CACA,sDACF,QACF,UACA,uCACE,OACE,mCACA,oDACF,QACF,UACA,+CACE,OACE,kCACA,wEACF,QACF,UACA,kDACE,OACE,qCACA,2EACF,QACF,UACA,4CACE,OACE,yCACA,qEACF,QACF,UACA,iDACE,OACE,oCACA,0EACF,QACF,UACA,mCACE,OACE,+BACA,4DACF,QACF,UACA,sCACE,OACE,2CACA,+DACF,QACF,UACA,qCACE,OACE,iDACA,8DACF,QACF,UACF,WACA,QACE,qBACA,SACF,SAEF,SAEF,UACE2H,KAAK,MAGT5G,sBAAwB,WACtB,MAAOtC,GAAEuB,UAET,wCACE,6BACE,kLACE,oCACA,eACF,YACA,8KACE,uCACA,aACF,YACF,SAGA,0BACE,6EACA,4DACE,uCACE,2GACF,iBACE,gFACF,UACF,YACF,QAEA,8BACE,wGACA,2DACE,OACE,oHACA,oIACF,QACA,OACE,iCACA,OACE,0EACF,QACF,QACA,OACE,oCACA,OACE,oEACF,QACF,QACA,OACE,4BACA,kDACF,QACA,OACE,2CACA,sDACF,QACA,OACE,mCACA,oDACF,QACA,mBACE,kCACA,wEACF,QACE,qCACA,yDACE,2EACF,iBACE,+BACF,UACF,QACA,OACE,yCACA,qEACF,QACA,OACE,oCACA,0EACF,QACA,OACE,+BACA,4DACF,QACA,OACE,iDACA,8DACF,QACA,OACE,2CACA,+DACF,QACF,WACA,QACE,qBACA,SACF,SACF,SAEF,UACE2H,KAAK,MAGTpC,2BAA6B,WAC3B,MAAO9G,GAAEuB,UAET,wCACE,6BACE,mDACE,6JACE,4CACA,0BACF,YACF,OACA,2EACE,mJACE,qCACA,wBACF,YACF,MACF,SAGA,0BACE,6EACE,4DACE,uCACE,2GACF,iBACE,gFACF,UACJ,YACF,QAEA,sDACA,oCACE,wBACE,yKACF,iBACE,+IACF,UACF,SACA,8BACE,uCACA,kDACA,mEACA,8KACA,QACA,uCACA,+LACA,4CACE,8DACE,yLACE,oCACA,4BACF,YACF,OACF,iBACE,4FACA,gKACE,wCACA,qBACA,YACF,gDACE,iLACE,kCACA,qBACF,YACF,OACF,UACA,6CACA,mEACA,iDACE,qFACA,mGACA,mGACF,SACA,4DACA,mEACA,iDACE,uLACF,SACA,iLACE,uCACA,aACF,YACF,SAEF,UACE2H,KAAK,MAGTvF,0BAA2B,WACzB,MAAO3D,GAAEuB,UACT,QACE,mCACE,mBACA,qHACE,8CACE,mGACF,YACF,YACF,SACA,mCACE,kBACA,4GACA,WACF,SACF,UACE2H,KAAK,MAITO,qBAAsB,WACpB,MAAOzJ,GAAEuB,UACT,uCACE,2CACE,iEACF,YACF,aACE2H,KAAK","file":"../../../scripts/mvc/library/library-dataset-view.js","sourcesContent":["define([\n  \"libs/toastr\",\n  \"mvc/library/library-model\",\n  \"utils/utils\",\n  'mvc/ui/ui-select'\n  ],\nfunction(\n        mod_toastr,\n        mod_library_model,\n        mod_utils,\n        mod_select\n        ) {\n\nvar LibraryDatasetView = Backbone.View.extend({\n  el: '#center',\n\n  model: null,\n\n  options: {\n\n  },\n\n  events: {\n    \"click .toolbtn_modify_dataset\"       :   \"enableModification\",\n    \"click .toolbtn_cancel_modifications\" :   \"render\",\n    \"click .toolbtn-download-dataset\"     :   \"downloadDataset\",\n    \"click .toolbtn-import-dataset\"       :   \"importIntoHistory\",\n    \"click .toolbtn-share-dataset\"        :   \"shareDataset\",\n    \"click .btn-copy-link-to-clipboard\"   :   \"copyToClipboard\",\n    \"click .btn-make-private\"             :   \"makeDatasetPrivate\",\n    \"click .btn-remove-restrictions\"      :   \"removeDatasetRestrictions\",\n    \"click .toolbtn_save_permissions\"     :   \"savePermissions\",\n    \"click .toolbtn_save_modifications\"   :   \"comingSoon\",\n\n  },\n\n  // genome select\n  select_genome : null,\n\n  // extension select\n  select_extension : null,\n\n  // extension types\n  list_extensions :[],\n\n  // datatype placeholder for extension auto-detection\n  auto: {\n      id          : 'auto',\n      text        : 'Auto-detect',\n      description : 'This system will try to detect the file type automatically.' +\n                    ' If your file is not detected properly as one of the known formats,' +\n                    ' it most likely means that it has some format problems (e.g., different' +\n                    ' number of columns on different rows). You can still coerce the system' +\n                    ' to set your data to the format you think it should be.' +\n                    ' You can also upload compressed files, which will automatically be decompressed.'\n  },\n\n  // genomes\n  list_genomes : [],\n\n  initialize: function(options){\n    this.options = _.extend(this.options, options);\n    this.fetchExtAndGenomes();\n    if (this.options.id){\n      this.fetchDataset();\n    }\n  },\n\n  fetchDataset: function(options){\n    this.options = _.extend(this.options, options);\n    this.model = new mod_library_model.Item({id: this.options.id});\n    var that = this;\n    this.model.fetch({\n      success: function() {\n        if (that.options.show_permissions){\n            that.showPermissions();\n        } else if (that.options.show_version) {\n            that.fetchVersion();\n        } else {\n            that.render();\n        }\n      },\n      error: function(model, response){\n        if (typeof response.responseJSON !== \"undefined\"){\n          mod_toastr.error(response.responseJSON.err_msg + ' Click this to go back.', '', {onclick: function() {Galaxy.libraries.library_router.back();}});\n        } else {\n          mod_toastr.error('An error ocurred. Click this to go back.', '', {onclick: function() {Galaxy.libraries.library_router.back();}});\n        }\n      }\n    });\n  },\n\n  render: function(options){\n    this.options = _.extend(this.options, options);\n    $(\".tooltip\").remove();\n    var template = this.templateDataset();\n    this.$el.html(template({item: this.model}));\n    $(\".peek\").html(this.model.get(\"peek\"));\n    $(\"#center [data-toggle]\").tooltip();\n  },\n\n  fetchVersion: function(options){\n    this.options = _.extend(this.options, options);\n    that = this;\n    if (!this.options.ldda_id){\n      this.render();\n      mod_toastr.error('Library dataset version requested but no id provided.');\n    } else {\n      this.ldda = new mod_library_model.Ldda({id: this.options.ldda_id});\n      this.ldda.url = this.ldda.urlRoot + this.model.id + '/versions/' + this.ldda.id;\n      this.ldda.fetch({\n        success: function(){\n          that.renderVersion();\n        },\n        error: function(model, response){\n          if (typeof response.responseJSON !== \"undefined\"){\n            mod_toastr.error(response.responseJSON.err_msg);\n          } else {\n            mod_toastr.error('An error ocurred.');\n          }\n        }\n      });\n    }\n  },\n\n  renderVersion: function(){\n    $(\".tooltip\").remove();\n    var template = this.templateVersion();\n    this.$el.html(template({item: this.model, ldda: this.ldda}));\n    $(\".peek\").html(this.ldda.get(\"peek\"));\n  },\n\n  enableModification: function(){\n    $(\".tooltip\").remove();\n    var template = this.templateModifyDataset();\n    this.$el.html(template({item: this.model}));\n    this.renderSelectBoxes({genome_build: this.model.get('genome_build'), file_ext: this.model.get('file_ext') });\n    $(\".peek\").html(this.model.get(\"peek\"));\n    $(\"#center [data-toggle]\").tooltip();\n  },\n\n  downloadDataset: function(){\n    var url = Galaxy.root + 'api/libraries/datasets/download/uncompressed';\n    var data = {'ld_ids': this.id};\n    this.processDownload(url, data);\n  },\n\n  processDownload: function(url, data, method){\n        //url and data options required\n        if( url && data ){\n          //data can be string of parameters or array/object\n          data = typeof data == 'string' ? data : $.param(data);\n          //split params into form inputs\n          var inputs = '';\n          $.each(data.split('&'), function(){\n            var pair = this.split('=');\n            inputs+='<input type=\"hidden\" name=\"'+ pair[0] +'\" value=\"'+ pair[1] +'\" />';\n          });\n          //send request\n          $('<form action=\"'+ url +'\" method=\"'+ (method||'post') +'\">'+inputs+'</form>')\n          .appendTo('body').submit().remove();\n\n          mod_toastr.info('Your download will begin soon.');\n        }\n   },\n\n  importIntoHistory: function(){\n    this.refreshUserHistoriesList(function(self){\n            var template = self.templateBulkImportInModal();\n            self.modal = Galaxy.modal;\n            self.modal.show({\n                closing_events  : true,\n                title           : 'Import into History',\n                body            : template({histories : self.histories.models}),\n                buttons         : {\n                    'Import'    : function() {self.importCurrentIntoHistory();},\n                    'Close'     : function() {Galaxy.modal.hide();}\n                }\n            });\n          });\n  },\n\n refreshUserHistoriesList: function(callback){\n    var self = this;\n    this.histories = new mod_library_model.GalaxyHistories();\n    this.histories.fetch({\n      success: function (histories){\n        if (histories.length === 0){\n          mod_toastr.warning('You have to create history first. Click this to do so.', '', {onclick: function() {window.location=Galaxy.root;}});\n        } else {\n          callback(self);\n        }\n      },\n      error: function(model, response){\n        if (typeof response.responseJSON !== \"undefined\"){\n          mod_toastr.error(response.responseJSON.err_msg);\n        } else {\n          mod_toastr.error('An error ocurred.');\n        }\n      }\n    });\n  },\n\n  importCurrentIntoHistory: function(){\n    this.modal.disableButton('Import');\n    var new_history_name = this.modal.$('input[name=history_name]').val();\n    var that = this;\n    if (new_history_name !== ''){\n      $.post( Galaxy.root + 'api/histories', {name: new_history_name})\n        .done(function( new_history ) {\n          that.processImportToHistory(new_history.id);\n        })\n        .fail(function( xhr, status, error ) {\n          mod_toastr.error('An error ocurred.');\n        })\n        .always(function() {\n          that.modal.enableButton('Import');\n        });\n    } else {\n      var history_id = $(this.modal.$el).find('select[name=dataset_import_single] option:selected').val();\n      this.processImportToHistory(history_id);\n      this.modal.enableButton('Import');\n    }\n  },\n\n  processImportToHistory: function( history_id ){\n    var historyItem = new mod_library_model.HistoryItem();\n    historyItem.url = historyItem.urlRoot + history_id + '/contents';\n    // set the used history as current so user will see the last one\n    // that he imported into in the history panel on the 'analysis' page\n    jQuery.getJSON( Galaxy.root + 'history/set_as_current?id=' + history_id  );\n    // save the dataset into selected history\n    historyItem.save({ content : this.id, source : 'library' }, {\n      success : function(){\n        Galaxy.modal.hide();\n        mod_toastr.success('Dataset imported. Click this to start analyzing it.', '', {onclick: function() {window.location=Galaxy.root;}});\n      },\n      error : function(model, response){\n        if (typeof response.responseJSON !== \"undefined\"){\n          mod_toastr.error('Dataset not imported. ' + response.responseJSON.err_msg);\n        } else {\n          mod_toastr.error('An error occured. Dataset not imported. Please try again.');\n        }\n      }\n      });\n  },\n\n  shareDataset: function(){\n    mod_toastr.info('Feature coming soon.');\n  },\n\n  goBack: function(){\n    Galaxy.libraries.library_router.back();\n  },\n\n  showPermissions: function(options){\n    this.options = _.extend(this.options, options);\n    $(\".tooltip\").remove();\n    if (this.options.fetched_permissions !== undefined){\n      if (this.options.fetched_permissions.access_dataset_roles.length === 0){\n        this.model.set({is_unrestricted:true});\n      } else{\n        this.model.set({is_unrestricted:false});\n      }\n    }\n    // Select works different for admins, details in this.prepareSelectBoxes\n    var is_admin = false;\n    if (Galaxy.user){\n      is_admin = Galaxy.user.isAdmin();\n    }\n    var template = this.templateDatasetPermissions();\n    this.$el.html(template({item: this.model, is_admin: is_admin}));\n    var self = this;\n    $.get( Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?scope=current\").done(function(fetched_permissions) {\n      self.prepareSelectBoxes({fetched_permissions: fetched_permissions, is_admin: is_admin});\n    }).fail(function(){\n        mod_toastr.error('An error occurred while attempting to fetch dataset permissions.');\n    });\n    $(\"#center [data-toggle]\").tooltip();\n    $(\"#center\").css('overflow','auto');\n  },\n\n  _serializeRoles : function(role_list){\n    var selected_roles = [];\n    for (var i = 0; i < role_list.length; i++) {\n      selected_roles.push(role_list[i][1] + ':' + role_list[i][0]);\n    }\n    return selected_roles;\n  },\n\n  prepareSelectBoxes: function(options){\n    this.options = _.extend(this.options, options);\n    var fetched_permissions = this.options.fetched_permissions;\n    var is_admin = this.options.is_admin\n    var self = this;\n    var selected_access_dataset_roles = [];\n    var selected_modify_item_roles = [];\n    var selected_manage_dataset_roles = [];\n    selected_access_dataset_roles = this._serializeRoles(fetched_permissions.access_dataset_roles);\n    selected_modify_item_roles = this._serializeRoles(fetched_permissions.modify_item_roles);\n    selected_manage_dataset_roles = this._serializeRoles(fetched_permissions.manage_dataset_roles);\n\n    if (is_admin){ // Admin has a special select that allows AJAX searching\n        var access_select_options = {\n          minimumInputLength: 0,\n          css: 'access_perm',\n          multiple:true,\n          placeholder: 'Click to select a role',\n          container: self.$el.find('#access_perm'),\n          ajax: {\n              url: Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?scope=available\",\n              dataType: 'json',\n              quietMillis: 100,\n              data: function (term, page) { // page is the one-based page number tracked by Select2\n                  return {\n                      q: term, //search term\n                      page_limit: 10, // page size\n                      page: page // page number\n                  };\n              },\n              results: function (data, page) {\n                  var more = (page * 10) < data.total; // whether or not there are more results available\n                  // notice we return the value of more so Select2 knows if more results can be loaded\n                  return {results: data.roles, more: more};\n              }\n          },\n          formatResult : function roleFormatResult(role) {\n              return role.name + ' type: ' + role.type;\n          },\n\n          formatSelection: function roleFormatSelection(role) {\n              return role.name;\n          },\n          initSelection: function(element, callback) {\n          // the input tag has a value attribute preloaded that points to a preselected role's id\n          // this function resolves that id attribute to an object that select2 can render\n          // using its formatResult renderer - that way the role name is shown preselected\n              var data = [];\n              $(element.val().split(\",\")).each(function() {\n                  var item = this.split(':');\n                  data.push({\n                      id: item[0],\n                      name: item[1]\n                  });\n              });\n              callback(data);\n          },\n          initialData: selected_access_dataset_roles.join(','),\n          dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n        var modify_select_options = {\n          minimumInputLength: 0,\n          css: 'modify_perm',\n          multiple:true,\n          placeholder: 'Click to select a role',\n          container: self.$el.find('#modify_perm'),\n          ajax: {\n              url: Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?scope=available\",\n              dataType: 'json',\n              quietMillis: 100,\n              data: function (term, page) { // page is the one-based page number tracked by Select2\n                  return {\n                      q: term, //search term\n                      page_limit: 10, // page size\n                      page: page // page number\n                  };\n              },\n              results: function (data, page) {\n                  var more = (page * 10) < data.total; // whether or not there are more results available\n                  // notice we return the value of more so Select2 knows if more results can be loaded\n                  return {results: data.roles, more: more};\n              }\n          },\n          formatResult : function roleFormatResult(role) {\n              return role.name + ' type: ' + role.type;\n          },\n\n          formatSelection: function roleFormatSelection(role) {\n              return role.name;\n          },\n          initSelection: function(element, callback) {\n          // the input tag has a value attribute preloaded that points to a preselected role's id\n          // this function resolves that id attribute to an object that select2 can render\n          // using its formatResult renderer - that way the role name is shown preselected\n              var data = [];\n              $(element.val().split(\",\")).each(function() {\n                  var item = this.split(':');\n                  data.push({\n                      id: item[0],\n                      name: item[1]\n                  });\n              });\n              callback(data);\n          },\n          initialData: selected_modify_item_roles.join(','),\n          dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n        var manage_select_options = {\n          minimumInputLength: 0,\n          css: 'manage_perm',\n          multiple:true,\n          placeholder: 'Click to select a role',\n          container: self.$el.find('#manage_perm'),\n          ajax: {\n              url: Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?scope=available\",\n              dataType: 'json',\n              quietMillis: 100,\n              data: function (term, page) { // page is the one-based page number tracked by Select2\n                  return {\n                      q: term, //search term\n                      page_limit: 10, // page size\n                      page: page // page number\n                  };\n              },\n              results: function (data, page) {\n                  var more = (page * 10) < data.total; // whether or not there are more results available\n                  // notice we return the value of more so Select2 knows if more results can be loaded\n                  return {results: data.roles, more: more};\n              }\n          },\n          formatResult : function roleFormatResult(role) {\n              return role.name + ' type: ' + role.type;\n          },\n\n          formatSelection: function roleFormatSelection(role) {\n              return role.name;\n          },\n          initSelection: function(element, callback) {\n          // the input tag has a value attribute preloaded that points to a preselected role's id\n          // this function resolves that id attribute to an object that select2 can render\n          // using its formatResult renderer - that way the role name is shown preselected\n              var data = [];\n              $(element.val().split(\",\")).each(function() {\n                  var item = this.split(':');\n                  data.push({\n                      id: item[0],\n                      name: item[1]\n                  });\n              });\n              callback(data);\n          },\n          initialData: selected_manage_dataset_roles.join(','),\n          dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n\n        self.accessSelectObject = new mod_select.View(access_select_options);\n        self.modifySelectObject = new mod_select.View(modify_select_options);\n        self.manageSelectObject = new mod_select.View(manage_select_options);\n    } else { // Non-admins have select with pre-loaded options\n        var template = self.templateAccessSelect();\n        $.get( Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?scope=available\", function( data ) {\n            $('.access_perm').html(template({options: data.roles}));\n            self.accessSelectObject = $('#access_select').select2();\n        }).fail(function() {\n            mod_toastr.error('An error occurred while attempting to fetch dataset permissions.');\n        });\n    }\n  },\n\n  comingSoon: function(){\n    mod_toastr.warning('Feature coming soon.');\n  },\n\n  copyToClipboard: function(){\n    var href = Backbone.history.location.href;\n    if (href.lastIndexOf('/permissions') !== -1){\n      href = href.substr(0, href.lastIndexOf('/permissions'));\n    }\n    window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", href);\n  },\n\n  makeDatasetPrivate: function(){\n    var self = this;\n    $.post( Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=make_private\").done(function(fetched_permissions) {\n      self.model.set({is_unrestricted: false});\n      self.showPermissions({fetched_permissions: fetched_permissions})\n      mod_toastr.success('The dataset is now private to you.');\n    }).fail(function(){\n      mod_toastr.error('An error occurred while attempting to make dataset private.');\n    });\n  },\n\n  removeDatasetRestrictions: function(){\n    var self = this;\n    $.post( Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=remove_restrictions\")\n    .done(function(fetched_permissions) {\n      self.model.set({is_unrestricted: true});\n      self.showPermissions({fetched_permissions: fetched_permissions})\n      mod_toastr.success('Access to this dataset is now unrestricted.');\n    })\n    .fail(function(){\n      mod_toastr.error('An error occurred while attempting to make dataset unrestricted.');\n    });\n  },\n\n  /**\n   * Extract the role ids from Select2 elements's 'data'\n   */\n  _extractIds: function(roles_list){\n    ids_list = [];\n    for (var i = roles_list.length - 1; i >= 0; i--) {\n      ids_list.push(roles_list[i].id);\n    };\n    return ids_list;\n  },\n\n  /**\n   * Save the permissions for roles entered in the select boxes.\n   */\n  savePermissions: function(event){\n    var self = this;\n    var access_ids = this._extractIds(this.accessSelectObject.$el.select2('data'));\n    var manage_ids = this._extractIds(this.manageSelectObject.$el.select2('data'));\n    var modify_ids = this._extractIds(this.modifySelectObject.$el.select2('data'));\n    $.post( Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=set_permissions\", { 'access_ids[]': access_ids, 'manage_ids[]': manage_ids, 'modify_ids[]': modify_ids, } )\n    .done(function(fetched_permissions){\n      self.showPermissions({fetched_permissions: fetched_permissions})\n      mod_toastr.success('Permissions saved.');\n    })\n    .fail(function(){\n      mod_toastr.error('An error occurred while attempting to set dataset permissions.');\n    })\n  },\n\n  /**\n   * Request all extensions and genomes from Galaxy\n   * and save them sorted in arrays.\n   */\n  fetchExtAndGenomes: function(){\n    var that = this;\n    mod_utils.get({\n        url      :  Galaxy.root + \"api/datatypes?extension_only=False\",\n        success  :  function( datatypes ) {\n                        for (key in datatypes) {\n                            that.list_extensions.push({\n                                id              : datatypes[key].extension,\n                                text            : datatypes[key].extension,\n                                description     : datatypes[key].description,\n                                description_url : datatypes[key].description_url\n                            });\n                        }\n                        that.list_extensions.sort(function(a, b) {\n                            return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                        });\n                        that.list_extensions.unshift(that.auto);\n                    }\n      });\n    mod_utils.get({\n        url     :    Galaxy.root + \"api/genomes\",\n        success : function( genomes ) {\n                    for ( key in genomes ) {\n                        that.list_genomes.push({\n                            id      : genomes[key][1],\n                            text    : genomes[key][0]\n                        });\n                    }\n                    that.list_genomes.sort(function(a, b) {\n                        return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                    });\n                }\n    });\n  },\n\n  renderSelectBoxes: function(options){\n    // This won't work properly unlesss we already have the data fetched.\n    // See this.fetchExtAndGenomes()\n    // TODO switch to common resources:\n    // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n    var current_genome = '?';\n    var current_ext = 'auto';\n    if (typeof options !== 'undefined'){\n      if (typeof options.genome_build !== 'undefined'){\n        current_genome = options.genome_build;\n      }\n      if (typeof options.file_ext !== 'undefined'){\n        current_ext = options.file_ext;\n      }\n    }\n    var that = this;\n    this.select_genome = new mod_select.View( {\n        css: 'dataset-genome-select',\n        data: that.list_genomes,\n        container: that.$el.find( '#dataset_genome_select' ),\n        value: current_genome\n    } );\n    this.select_extension = new mod_select.View({\n      css: 'dataset-extension-select',\n      data: that.list_extensions,\n      container: that.$el.find( '#dataset_extension_select' ),\n      value: current_ext\n    });\n  },\n\n  templateDataset : function(){\n    return _.template([\n    // CONTAINER START\n    '<div class=\"library_style_container\">',\n      '<div id=\"library_toolbar\">',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download dataset\" class=\"btn btn-default toolbtn-download-dataset primary-button toolbar-item\" type=\"button\">',\n          '<span class=\"fa fa-download\"></span>',\n          '&nbsp;Download',\n        '</button>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import dataset into history\" class=\"btn btn-default toolbtn-import-dataset primary-button toolbar-item\" type=\"button\">',\n          '<span class=\"fa fa-book\"></span>',\n          '&nbsp;to History',\n        '</button>',\n        '<% if (item.get(\"can_user_modify\")) { %>',\n          '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify library item\" class=\"btn btn-default toolbtn_modify_dataset primary-button toolbar-item\" type=\"button\">',\n            '<span class=\"fa fa-pencil\"></span>',\n            '&nbsp;Modify',\n          '</button>',\n        '<% } %>',\n        '<% if (item.get(\"can_user_manage\")) { %>',\n          '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/permissions\">',\n            '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Manage permissions\" class=\"btn btn-default toolbtn_change_permissions primary-button toolbar-item\" type=\"button\">',\n              '<span class=\"fa fa-group\"></span>',\n              '&nbsp;Permissions',\n            '</button>',\n          '</a>',\n        '<% } %>',\n      '</div>',\n\n    // BREADCRUMBS\n    '<ol class=\"breadcrumb\">',\n      '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n      '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n        '<% if (path_item[0] != item.id) { %>',\n          '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n        '<% } else { %>',\n          '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n        '<% } %>',\n      '<% }); %>',\n    '</ol>',\n\n    '<% if (item.get(\"is_unrestricted\")) { %>',\n      '<div class=\"alert alert-info\">',\n        'This dataset is unrestricted so everybody can access it. Just share the URL of this page. ',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy to clipboard\" class=\"btn btn-default btn-copy-link-to-clipboard primary-button\" type=\"button\">',\n          '<span class=\"fa fa-clipboard\"></span>',\n          '&nbsp;To Clipboard',\n        '</button> ',\n      '</div>',\n    '<% } %>',\n\n    // TABLE START\n    '<div class=\"dataset_table\">',\n      '<table class=\"grid table table-striped table-condensed\">',\n        '<tr>',\n          '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n          '<td><%= _.escape(item.get(\"name\")) %></td>',\n        '</tr>',\n        '<% if (item.get(\"file_ext\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Data type</th>',\n            '<td><%= _.escape(item.get(\"file_ext\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"genome_build\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Genome build</th>',\n            '<td><%= _.escape(item.get(\"genome_build\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"file_size\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Size</th>',\n            '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"date_uploaded\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Date uploaded (UTC)</th>',\n            '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"uploaded_by\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Uploaded by</th>',\n            '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"metadata_data_lines\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Data Lines</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"metadata_comment_lines\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Comment Lines</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"metadata_columns\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Number of Columns</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"metadata_column_types\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Column Types</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"message\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Message</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"misc_blurb\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Miscellaneous blurb</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"misc_info\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Miscellaneous information</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"misc_info\")) %></td>',\n          '</tr>',\n        '<% } %>',\n      '</table>',\n\n    '<div>',\n      '<pre class=\"peek\">',\n      '</pre>',\n    '</div>',\n\n    '<% if (item.get(\"has_versions\")) { %>',\n      '<div>',\n        '<h3>Expired versions:</h3>',\n        '<ul>',\n          '<% _.each(item.get(\"expired_versions\"), function(version) { %>',\n            '<li><a title=\"See details of this version\" href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/versions/<%- version[0] %>\"><%- version[1] %></a></li>',\n          '<% }) %>',\n        '<ul>',\n      '</div>',\n    '<% } %>',\n    // TABLE END\n    '</div>',\n    // CONTAINER END\n    '</div>'\n    ].join(''));\n  },\n\n  templateVersion : function(){\n    return _.template([\n    // CONTAINER START\n    '<div class=\"library_style_container\">',\n      '<div id=\"library_toolbar\">',\n        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n          '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go to latest dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n            '<span class=\"fa fa-caret-left fa-lg\"></span>',\n            '&nbsp;Latest dataset',\n          '</button>',\n        '<a>',\n      '</div>',\n\n      // BREADCRUMBS\n      '<ol class=\"breadcrumb\">',\n        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n          '<% if (path_item[0] != item.id) { %>',\n            '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n          '<% } else { %>',\n            '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n          '<% } %>',\n        '<% }); %>',\n      '</ol>',\n\n      '<div class=\"alert alert-warning\">This is an expired version of the library dataset: <%= _.escape(item.get(\"name\")) %></div>',\n      // DATASET START\n      '<div class=\"dataset_table\">',\n        '<table class=\"grid table table-striped table-condensed\">',\n          '<tr>',\n            '<th scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(ldda.id) %>\">Name</th>',\n            '<td><%= _.escape(ldda.get(\"name\")) %></td>',\n          '</tr>',\n          '<% if (ldda.get(\"file_ext\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Data type</th>',\n              '<td><%= _.escape(ldda.get(\"file_ext\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"genome_build\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Genome build</th>',\n              '<td><%= _.escape(ldda.get(\"genome_build\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"file_size\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Size</th>',\n              '<td><%= _.escape(ldda.get(\"file_size\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"date_uploaded\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Date uploaded (UTC)</th>',\n              '<td><%= _.escape(ldda.get(\"date_uploaded\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"uploaded_by\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Uploaded by</th>',\n              '<td><%= _.escape(ldda.get(\"uploaded_by\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"metadata_data_lines\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Data Lines</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_data_lines\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"metadata_comment_lines\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Comment Lines</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_comment_lines\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"metadata_columns\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Number of Columns</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_columns\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"metadata_column_types\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Column Types</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_column_types\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"message\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Message</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"message\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"misc_blurb\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Miscellaneous blurb</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_blurb\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"misc_info\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Miscellaneous information</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_info\")) %></td>',\n            '</tr>',\n          '<% } %>',\n        '</table>',\n        '<div>',\n          '<pre class=\"peek\">',\n          '</pre>',\n        '</div>',\n      // DATASET END\n      '</div>',\n    // CONTAINER END\n    '</div>'\n    ].join(''));\n  },\n\n  templateModifyDataset : function(){\n    return _.template([\n    // CONTAINER START\n    '<div class=\"library_style_container\">',\n      '<div id=\"library_toolbar\">',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Cancel modifications\" class=\"btn btn-default toolbtn_cancel_modifications primary-button toolbar-item\" type=\"button\">',\n          '<span class=\"fa fa-times\"></span>',\n          '&nbsp;Cancel',\n        '</button>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_modifications primary-button toolbar-item\" type=\"button\">',\n          '<span class=\"fa fa-floppy-o\"></span>',\n          '&nbsp;Save',\n        '</button>',\n      '</div>',\n\n      // BREADCRUMBS\n      '<ol class=\"breadcrumb\">',\n        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n          '<% if (path_item[0] != item.id) { %>',\n            '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n          '<% } else { %>',\n            '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n          '<% } %>',\n        '<% }); %>',\n      '</ol>',\n\n      '<div class=\"dataset_table\">',\n        '<p>For full editing options please import the dataset to history and use \"Edit attributes\" on it.</p>',\n        '<table class=\"grid table table-striped table-condensed\">',\n          '<tr>',\n            '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n            '<td><input class=\"input_dataset_name form-control\" type=\"text\" placeholder=\"name\" value=\"<%= _.escape(item.get(\"name\")) %>\"></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Data type</th>',\n            '<td>',\n              '<span id=\"dataset_extension_select\" class=\"dataset-extension-select\" />',\n            '</td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Genome build</th>',\n            '<td>',\n              '<span id=\"dataset_genome_select\" class=\"dataset-genome-select\" />',\n            '</td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Size</th>',\n            '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Date uploaded (UTC)</th>',\n            '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Uploaded by</th>',\n            '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n          '</tr>',\n          '<tr scope=\"row\">',\n            '<th scope=\"row\">Data Lines</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n          '</tr>',\n            '<th scope=\"row\">Comment Lines</th>',\n            '<% if (item.get(\"metadata_comment_lines\") === \"\") { %>',\n              '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n            '<% } else { %>',\n              '<td scope=\"row\">unknown</td>',\n            '<% } %>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Number of Columns</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Column Types</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Message</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Miscellaneous information</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"misc_info\")) %></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Miscellaneous blurb</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n          '</tr>',\n        '</table>',\n        '<div>',\n          '<pre class=\"peek\">',\n          '</pre>',\n        '</div>',\n      '</div>',\n    // CONTAINER END\n    '</div>'\n    ].join(''));\n  },\n\n  templateDatasetPermissions : function(){\n    return _.template([\n    // CONTAINER START\n    '<div class=\"library_style_container\">',\n      '<div id=\"library_toolbar\">',\n        '<a href=\"#folders/<%- item.get(\"folder_id\") %>\">',\n          '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to containing folder\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n            '<span class=\"fa fa-folder-open-o\"></span>',\n            '&nbsp;Containing Folder',\n          '</button>',\n        '</a>',\n        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n          '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n            '<span class=\"fa fa-file-o\"></span>',\n            '&nbsp;Dataset Details',\n          '</button>',\n        '<a>',\n      '</div>',\n\n      // BREADCRUMBS\n      '<ol class=\"breadcrumb\">',\n        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n          '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n            '<% if (path_item[0] != item.id) { %>',\n              '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n            '<% } else { %>',\n              '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n            '<% } %>',\n        '<% }); %>',\n      '</ol>',\n\n      '<h1>Dataset: <%= _.escape(item.get(\"name\")) %></h1>',\n      '<div class=\"alert alert-warning\">',\n        '<% if (is_admin) { %>',\n          'You are logged in as an <strong>administrator</strong> therefore you can manage any dataset on this Galaxy instance. Please make sure you understand the consequences.',\n        '<% } else { %>',\n          'You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.',\n        '<% } %>',\n      '</div>',\n      '<div class=\"dataset_table\">',\n        '<h2>Library-related permissions</h2>',\n        '<h4>Roles that can modify the library item</h4>',\n        '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"></div>',\n        '<div class=\"alert alert-info roles-selection\">User with <strong>any</strong> of these roles can modify name, metadata, and other information about this library item.</div>',\n        '<hr/>',\n        '<h2>Dataset-related permissions</h2>',\n        '<div class=\"alert alert-warning\">Changes made below will affect <strong>every</strong> library item that was created from this dataset and also every history this dataset is part of.</div>',\n        '<% if (!item.get(\"is_unrestricted\")) { %>',\n          '<p>You can remove all access restrictions on this dataset. ',\n            '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Everybody will be able to access the dataset.\" class=\"btn btn-default btn-remove-restrictions primary-button\" type=\"button\">',\n              '<span class=\"fa fa-globe\"></span>',\n              '&nbsp;Remove restrictions',\n            '</button>',\n          '</p>',\n        '<% } else { %>',\n          'This dataset is unrestricted so everybody can access it. Just share the URL of this page.',\n          '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy to clipboard\" class=\"btn btn-default btn-copy-link-to-clipboard primary-button\" type=\"button\">',\n            '<span class=\"fa fa-clipboard\"></span>',\n            '&nbsp;To Clipboard',\n            '</button>',\n          '<p>You can make this dataset private to you. ',\n            '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Only you will be able to access the dataset.\" class=\"btn btn-default btn-make-private primary-button\" type=\"button\">',\n              '<span class=\"fa fa-key\"></span>',\n              '&nbsp;Make Private',\n            '</button>',\n          '</p>',\n        '<% } %>',\n        '<h4>Roles that can access the dataset</h4>',\n        '<div id=\"access_perm\" class=\"access_perm roles-selection\"></div>',\n        '<div class=\"alert alert-info roles-selection\">',\n          'User has to have <strong>all these roles</strong> in order to access this dataset.',\n          ' Users without access permission <strong>cannot</strong> have other permissions on this dataset.',\n          ' If there are no access roles set on the dataset it is considered <strong>unrestricted</strong>.',\n        '</div>',\n        '<h4>Roles that can manage permissions on the dataset</h4>',\n        '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"></div>',\n        '<div class=\"alert alert-info roles-selection\">',\n          'User with <strong>any</strong> of these roles can manage permissions of this dataset. If you remove yourself you will loose the ability manage this dataset unless you are an admin.',\n        '</div>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n          '<span class=\"fa fa-floppy-o\"></span>',\n          '&nbsp;Save',\n        '</button>',\n      '</div>',\n    // CONTAINER END\n    '</div>'\n    ].join(''));\n  },\n\n  templateBulkImportInModal: function(){\n    return _.template([\n    '<div>',\n      '<div class=\"library-modal-item\">',\n        'Select history: ',\n        '<select id=\"dataset_import_single\" name=\"dataset_import_single\" style=\"width:50%; margin-bottom: 1em; \" autofocus>',\n          '<% _.each(histories, function(history) { %>',\n            '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n          '<% }); %>',\n        '</select>',\n      '</div>',\n      '<div class=\"library-modal-item\">',\n        'or create new: ',\n        '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">',\n        '</input>',\n      '</div>',\n    '</div>'\n    ].join(''));\n  },\n\n\n  templateAccessSelect: function(){\n    return _.template([\n    '<select id=\"access_select\" multiple>',\n      '<% _.each(options, function(option) { %>',\n        '<option value=\"<%- option.name %>\"><%- option.name %></option>',\n      '<% }); %>',\n    '</select>'\n    ].join(''));\n  }\n\n});\n\nreturn {\n    LibraryDatasetView: LibraryDatasetView\n};\n\n});\n"]}