{"version":3,"sources":["mvc/library/library-dataset-view.js"],"names":["define","el","model","mod_library_model","mod_utils","mod_select","LibraryDatasetView","Backbone","View","extend","options","defaults","events","edit_mode","click .toolbtn_modify_dataset","click .toolbtn_cancel_modifications","click .toolbtn-download-dataset","click .toolbtn-import-dataset","click .copy-link-to-clipboard","click .make-private","click .remove-restrictions","click .toolbtn_save_permissions","select_genome","select_extension","id","auto","text","list_genomes","fetchDataset","initialize","this","fetchExtAndGenomes","that","fetchVersion","Item","render","error","fetch","success","mod_toastr","onclick","Galaxy","libraries","response","responseJSON","err_msg","library_router","back","html","renderVersion","$el","template","item","get","$","_","ldda_id","templateVersion","Ldda","ldda","url","urlRoot","enableModification","renderSelectBoxes","genome_build","tooltip","processDownload","remove","data","split","pair","inputs","templateModifyDataset","file_ext","downloadDataset","refreshUserHistoriesList","self","modal","closing_events","title","Import","method","param","each","histories","window","callback","submit","importIntoHistory","importCurrentIntoHistory","templateBulkImportInModal","disableButton","new_history_name","post","models","name","processImportToHistory","hide","GalaxyHistories","historyItem","warning","content","location","root","showPermissions","templateDatasetPermissions","val","fetched_permissions","is_unrestricted","done","new_history","xhr","status","is_admin","config","is_admin_user","prepareSelectBoxes","history_id","find","enableButton","role_list","HistoryItem","selected_roles","jQuery","getJSON","selector","initialData","_serializeRoles","modifySelectObject","manageSelectObject","minimumInputLength","placeholder","type","role","undefined","dropdownCssClass","access_dataset_roles","length","select_options","set","quietMillis","page","results","fail","new_name","ld","is_changed","i","push","new_info","replace","new_genome_build","_generate_select_options","new_ext","patch","dataset_view","modify_item_roles","manage_dataset_roles","copyToClipboard","href","history","lastIndexOf","substr","formatResult","prompt","formatSelection","makeDatasetPrivate","element","css","join","ajax","_extractIds","ids_list","roles_list","term","page_limit","savePermissions","total","access_ids","more","accessSelectObject","datatypes","description_url","list_extensions","select2","key","save","current_genome","current_ext","info","container","value","templateDataset","removeDatasetRestrictions","event","manage_ids","modify_ids","access_ids[]","manage_ids[]","modify_ids[]","extension","description","sort","a","b","unshift","genomes"],"mappings":"qEAAAA,QAEQ,cAFRA,4BAQQ,cACIC,oBAEAC,SAAAA,EAH0CC,EAAAC,EAAAC,GA8qC9C,OACIC,mBA/qCqBC,SAASC,KAAKC,QAKnCC,GAAAA,UAEAC,MAAAA,KAAUD,WAIVE,UACIC,WAAA,GAGAD,QACAE,gCAAiC,qBACjCC,sCAAuB,SACvBC,kCAA8B,kBAC9BC,gCAAA,oBACAC,gCAAA,kBApBsCC,sBAAA,qBAkBtCC,6BAA8B,4BAKlCC,kCAAA,kBACAC,oCAxB0C,qBAwB1CA,cAAe,KAGfC,iBAAkB,KAOdC,mBADEC,MACFD,GAAI,OAWRE,KAAA,cACAC,YATQ,sZAmBRC,gBAEIC,WAAK3B,SAAYC,GACbqB,KAAAA,QAASd,EAAAA,OAAQc,KAAAA,QAAAA,GADmBM,KAAxCC,qBAGIC,KAAAA,QAAJR,IACAM,KAAK5B,gBAII0B,aAFD,SAEWI,GACPA,KAAAA,QAAAA,EAAKC,OAAAA,KAALvB,QAAAA,GACHoB,KAAA5B,MAFM,IAEAC,EAAA+B,MACHF,GAAAA,KAAAA,QAAKG,KAEZ,IAAAH,EATYF,KAUbM,KAAAA,MAAOC,OACHC,QAAI,WACAC,EAAAA,QAAWH,iBAKHI,EAAAA,kBACIC,EAAAA,QAAOC,aACVV,EAAAC,eARbD,EAWOG,UAMSM,MAAAA,SAAAA,EAAOC,QACV,IAAAC,EAAAC,aAHLL,EAHJH,MASHO,EAAAC,aAAAC,QACJ,0BAjCL,IAiBoBL,QAAS,WAoBhB9B,OAASgC,UAAAI,eAAAC,UAKXC,EAAU9C,MACnB,4CAzGoC,IA4G5BsC,QAAA,WACcC,OAAK/B,UAASA,eAAtCqC,cAWIZ,OAAA,SAAAzB,GAKAoB,KAAApB,QAAU2B,EAAAA,OAAMP,KAAApB,QAAAA,GACZ4B,EAAAA,YAAAA,SACIN,IAAAA,EAAAA,KAAKiB,kBACRnB,KAAAoB,IAHWF,KAAAG,GAAAC,KAAAtB,KAAA5B,SAIZkC,EAAAA,SAAAA,KAAON,KAAA5B,MAAAmD,IAASnD,SACZoD,EAAA,yBAAWX,WAGPJ,aAAAA,SAAAA,GACHT,KAAApB,QAAA6C,EAAA9C,OAAAqB,KAAApB,QAAAA,GACJsB,KAAAF,KAVLA,KAAApB,QAAA8C,SAiBAL,KAAAA,KAAW,IAAKM,EAApBC,MACAlC,GAASwB,KAAKG,QAAWC,UA/IatB,KAAA6B,KAAAC,IAyH9B9B,KAAK6B,KAAKE,QA0BtBC,KAAAA,MAAoBtC,GACd,aACE2B,KAAAA,KAAW3B,GACfM,KAASkB,KAAKG,OACTY,QAAAA,WACDC,KAAAA,iBADJ5B,MAAA,SAAAlC,EAAAyC,QAIA,IAAqBzC,EAAU0C,aAC7BL,EAAyB0B,MAAAA,EAA3BrB,aAAAC,SAvBgBN,EAAWH,MAAM,2BAIhCN,KAAAK,SAzIqCI,EAAAH,MAkH9B,2DAqDZ8B,cAAAA,WACIZ,EAAA,YAAAa,SACA,IAAIP,EAAJ9B,KAAiB2B,kBACb3B,KAAAoB,IAAAF,KAAAG,GAAAC,KAAAtB,KAAA5B,MAAAyD,KAAA7B,KAAA6B,QACAS,EAAAA,SAAOpB,KAAAlB,KAAOsC,KAAQf,IAAA,UAGtBC,mBAAYe,WACRf,EAAA,YAAIgB,SACJC,IAAAA,EAAAA,KACIC,wBAKP1C,KARDoB,IAAAF,KAAAG,GAAAC,KAAAtB,KAAA5B,SASA4B,KAAAiC,mBACAT,aACIxB,KAAA5B,MAAAmD,IAEI,gBAlCRoB,SAAU3C,KAAK5B,MAAMmD,IAAI,cA6C5BC,EAAA,SAAAN,KAAAlB,KAAA5B,MAAAmD,IAAA,SAtMqCC,EAAA,yBAAAW,WA0MtCS,gBAAKC,WACD,IAAAf,EACAgB,OAAKC,KACLD,+CACIE,GAAAA,OAAAA,KAAgBtD,IAChBuD,KAAAA,gBAAOnB,EAAAQ,IAGHY,gBAAAA,SAAQpB,EAAAQ,EAAAa,GAEP,GAAArB,GAAAQ,EAHI,CAKD3B,EAAOoC,iBAAPpC,EAAA2B,EAAAd,EAAA4B,MAAAd,GALC,IAAAG,EAAA,GAJGjB,EAAhB6B,KAAAf,EAAAC,MAAA,KAAA,WAHJ,IAAAC,EAAAxC,KAAAuC,MAAA,KA1MsCE,GAiL1B,8BA4ChBI,EAAAA,GACe,YACNS,EAAY,GACZA,SAGO7C,EAIQC,iBACI6C,EACH,cANTJ,GAAA,QADJ,KAWIK,EACH,WAELlD,SAAO,QACHmD,SACIhD,SAEAA,EAAAA,KAAAA,oCAIfiD,kBAxPyC,WA0MtC1D,KAAK6C,yBAAyB,SAASC,GAgD3Ca,IAAAA,EAAAA,EAA0BC,4BACtBd,EAAKC,MAAMc,OAAXd,MACIe,EAAAA,MAAAA,MAGA5D,gBAAJ,EACI4D,MAAAA,sBACEC,KAAKpD,GAAc2C,UAAAR,EAArBQ,UAAsCU,SAClCC,SAEMf,OAAA,WACGgB,EAAAA,4BAGLzD,MAAWH,WAEPK,OAAAoC,MAAWoB,cAW1BtB,yBAAA,SAAAW,GArRqC,IAAAV,EAAA9C,KA+NtCA,KAAKsD,UAAY,IAAIjF,EAAkB+F,gBAyD3CF,KAAAA,UAAAA,OACQG,QAAAA,SAAkBhG,GAEN0D,IADJD,EACRuC,OACJ5D,EAAA6D,QACA,yDAEI3D,IAIE4D,QAAS,WAEEhB,OAAAiB,SAAW7D,OAAA8D,QAQPjB,EAAAV,IAIbxC,MAAO,SAAAlC,EAASA,QACyB,IAA1ByC,EAASC,aAChBL,EAAWH,MACPO,EAAAC,aAAAC,SAIJN,EAAWH,MACP,0BAQxBoE,yBAAiB,WACb1E,KAAIqB,MAAAA,cAAgBsD,UACpB,IAAI7B,EAAJ9C,KAAA+C,MACKnE,EAAAA,4BACHgG,MACE1E,EAAKtB,KACL,GACiBiG,KADjBf,EAIItC,EAAAuC,KAAApD,OAAA8D,KAAiBK,iBAJrBb,KAKOH,IAENiB,KAAA,SAAAC,GACJ9E,EAAAgE,uBAAAc,EAAAtF,MAGO4B,KAAM,SADD2D,EAAAC,EAAA5E,GAEL6E,EAAiBC,MAAOC,wBAI5B1E,OAAO8D,WAMEa,EAAAA,MAAAA,aAAmB,gBAEpBH,CAFoB,IAAxBI,EAAA/D,EAAAxB,KAAA+C,MAAA3B,KAKEoE,KACF/E,sDAINmE,MACA5E,KAAAkE,uBAA2BqB,GAxWSvF,KAAA+C,MAAA0C,aAAA,YA6WtCvB,uBAAoBwB,SAAAA,GAChB,IAAArB,EAAA,IAAAhG,EAAAsH,YACAC,EAAAA,IAKHvB,EAAAtC,QAAAwD,EAAA,YAtFDM,OAAOC,QA0FXR,OAAAA,KAAoB,6BAAS1G,GAIjBmH,EAAAA,MACAC,QAAAA,KAAatG,GAAKuG,OAAAA,YAMrBC,QAAAA,WAEGH,OAAUhD,MAAAoB,OACV6B,EAAkBC,QAH1B,sDAQKE,IAGgBzF,QAAKuF,WAH1B1C,OAAAiB,SAAA7D,OAAA8D,SAaI2B,MAAAA,SAAoBhI,EADHyC,QAAA,IAAAA,EAAAC,aAGjBuF,EAAa/F,MACC,yBACHO,EAAYC,aAAiBwF,SAG7BC,EAAPjG,MARa,iEAiBTgC,gBAAAA,SAAU1D,GACNc,IAAAA,EAAAA,KAAI4B,6BACJ2C,EAAAA,KAFMjE,KAAApB,QAAV6C,EAAA9C,OAAAqB,KAAApB,QAAAA,GAIH4C,EAAA,YANDa,cAOAmE,IAAAhD,KAAAA,QAASlB,sBAtBjB,IAwBImE,KAAAA,QAAAA,oBAA4BC,qBAxBhCC,OA6BAC,KAAAA,MAAAC,KAAqBjI,iBAArB,IAEAgI,KAAAA,MAAAC,KAAsB/B,iBAAA,KAOlBgC,KAAAA,IAAAA,KACAxE,GACIhB,KAAAtB,KAAA5B,MACA+G,SAAOxE,OAAAyE,OAAAC,iBAGH0B,EAAAA,IAHGpG,OAAP8D,KAVc,0BAgBlBuC,EAAStH,GACL,8BAEAqF,KAAA,SAASiC,GACZlE,EAAAwC,oBApBLT,oBAAAA,EAsBO+B,SAAPjG,OAAAyE,OAAAC,kBAGJ4B,KAAA,WA5GYxG,EAAWH,MACP,sEAgHZkB,EAAA,yBAAAW,UACAX,EAAA,WAAI0F,IAAW,WAAc,SAMrBC,gBAAGN,SAAHnB,GAEH,IAHD,IAEI0B,KAFJC,EAGO,EAAAA,EAAA3B,EAAAiB,OAAAU,IAIHzB,EAAA0B,KACH5B,EAAA2B,GAAA,GACJ,IACGE,EAAgBnG,GAAIoE,GAATgC,QAAc,IAAA,KAAAA,QAAA,IAA4B5C,OAMrDwC,OAAAA,GAIJ9B,mBACWmC,SAAAA,GAGPN,KAAAA,QAAO1F,EAAA9C,OAAAqB,KAAgByH,QAAAA,GACvBL,KAAAA,mBAAA,IAAA7I,EAAAG,KACHsB,KAAA0H,0BACGC,SAAU,cAEV3B,YAAAhG,KAAmBiG,gBAGZjG,KAAApB,QAAY+I,oBACNjB,yBAIbS,KAAAA,mBAAc,IAAA5I,EAAAG,KACVkJ,KAAAA,0BACApH,SAAS,cACLqH,YAAAA,KAAaxH,gBACbI,KAAAA,QAAWD,oBACPsH,sBAKArH,KAAAA,mBAAAA,IAAWH,EAAMO,KACpBb,KAAA0H,0BACGjH,SAAAA,cAGHuF,YAAAhG,KAAAiG,gBACJjG,KAAApB,QAAAiG,oBAhBLkD,0BAzGRL,yBAA0B,SAAS9I,GAiInCoJ,IAAAA,GACQC,mBAAgBC,EAChBD,UAAKE,EACLF,YAAYG,yBACfC,aAAA,SAAA9B,GACM+B,OAAO/B,EAAAtC,KAAA,UAAAsC,EAAAD,MA9HViC,gBAAiB,SAA6BhC,GAiItDiC,OAAAA,EAAoBvE,MAEdF,cACE,SACI0E,EAAAjF,GAMA,IAAAlB,KAGA7B,EAAAA,EAAWD,MACP+B,MAAA,MAAAc,KAAA,WAGF,IAAA/B,EAAWtB,KAAAuC,MAAA,KACb9B,EAAWH,MAhBnBZ,GAAA4B,EAAA,GAjiBsC2C,KAAA3C,EAAA,OAwjBlCwB,EAAJR,IAQQQ,iBAAiBgC,WAwCzBtD,OAtCYqD,EAAAA,UAAAA,KAAqBA,IAAAA,KADJ,IAArBjG,EAAAmH,UAMHa,EACK8B,IAAW9J,EAAAmH,SACbtF,EAAWH,YACP1B,EAAAoH,YAAA2C,KAAA,KAEP/B,EAnBLgC,MAzjBsC9G,IAwb9BnB,OAAO8D,KAuJnB,0BArJYzE,KAAKN,GACL,+BAuJZmJ,SAAa,OACLC,YAAJ,IACAxG,KAAS+E,SAAI0B,EAAWpC,GAEvB,OACMmC,EAAPE,EAvlBsCC,WAAA,GAmc1BlC,KAAMA,IAGdC,QAAS,SAAS1E,EAAMyE,GAuJhCmC,IAAAA,EAAiB,GAAAnC,EAAAzE,EAAA6G,MAETC,OAAapC,QAAK6B,EAAAA,MAClBQ,KAAKC,KASL3I,GAYQkE,kBAAAA,SAAAA,GADiB,IAAAuC,GAArB,EAGA3G,EAAAA,KAAAA,MAEHwG,EAAKjH,KAAWoB,IAAAoE,KAAA,uBAAAZ,MACbnE,QAlBR,IAAAyG,GAxmBsCA,IAAAC,EAAA5F,IAAA,QAydpC,CAuKN,KAAA2F,EAAAP,OAAA,GAOQrI,YAHR2B,EAAoBqE,QACL,6DA1KH6C,EAAGN,IAAI,OAAQK,GACfE,GAAa,EA8KT,IAAAG,EAAAvH,KAAKoB,IAALoE,KAAgB+D,4BAAW3E,WAEf2E,IAAJ7J,GACAE,IAAAA,EAAAA,IAAAA,eAEA4J,EAAAA,IAAAA,YAAAA,GAJsBpC,GAA1B,GAQJlH,IAAAA,EAAKuJ,KAAAA,cAAqBrI,IAAAsI,QAAe,QACrChK,QAEJ,IAAAQ,GACHuH,IAAAN,EAAA5F,IAAA,kBAER4F,EAAAN,IAAA,eAAAY,GACGL,GAAKqC,GAED3H,IAAAA,EAAKnB,KAAAA,iBAAcS,IADTsI,QAAA,QAAAhK,QAGGiK,IAAThC,GACIzH,IAAAA,EAAAA,IAAKL,cAEDD,EAAAA,IAAAA,WAAAA,GAFmBwH,GAAvB,GAKJlH,IAAAA,EAAKL,KACDuH,EACHD,EAAAyC,KAAA,MACJhC,OAAA,EAZLpH,QAAA,SAAA2G,GAcHU,EAAAxH,SAzqBqCI,EAAAD,QAogBtB,sCA0KhBF,MAAA,SAAAlC,EAAAyC,QACA,IAAAA,EAAAC,aACAL,EAAAH,MAAAO,EAAAC,aAAAC,SAEI8I,EAAJvJ,MACkB,wEAMVwJ,EAAAA,SACHrJ,EAAAsJ,KAAA,0BAIDzH,gBAAMpC,WACN8J,IAAAA,EAAAA,SAAgB5I,QAALoD,SAAcyD,MAClB4B,IAAPI,EAAAA,YAAOJ,kBAJX5B,EAAAA,EAAAG,OAAA,EAAAH,EAAAE,YAAA,kBAOIO,OAAAA,OAAK,mCADmCT,IAIxCgC,mBAAOH,WAJiC,IAA5ChH,EAAA9C,KAlsBsCwB,EAAAuC,KAkiBlCpD,OAAO8D,KAwKfyF,0BACWzI,EAAEJ,GAED,oCAtKH0D,KAAK,SAASF,GAiMX/B,EAAA1E,MAAAyI,KAAA/B,iBAAA,IACAhC,EAAA4B,iBA/LIG,oBAAqBA,IAiNzBpE,EAAAD,QAqGA,wCAGAyG,KACF0B,WAp2BgClI,EAAAH,MAkjB1B,kEAKhB6J,0BAA2B,WA+Tf,IAAArH,EAAA9C,KACAwB,EAAAuC,KAYApD,OAAA8D,KACA,0BAyFA3B,EAAApD,GAnHJ,2CAsHIqF,KACF4D,SAxHN9D,GAz2BsC/B,EAAA1E,MAAAyI,KAAA/B,iBAAA,IAikB9BhC,EAAK4B,iBAoajBhC,oBAAuBmC,IAGXpE,EAAAD,QACA,iDAaAyG,KAAA,WAwEAxG,EAAAH,MACA,uEAsBAuI,YAAA,SAAAE,GAUA,IAAA,IA5gBJD,KA4gBIzB,EAAA0B,EAAApC,OAAA,EAAAU,GAAA,EAAAA,IACAyB,EAAAxB,KAAAyB,EACA1B,GAAA3H,IAiDA,OAAAoJ,GAlpChBI,gBAAA,SAAAkB,GA8lBQ,IAAItH,EAAO9C,KAglBZoJ,EAAApJ,KAAA6I,YACHrK,KAAAA,mBAAoBA,IAAAA,QAAAA,SAvrChC6L,EAAArK,KAAA6I,YA2mBoB7I,KAAKmG,mBAAmB/E,IAAIsI,QAAQ,SAEpCY,EAAatK,KAAK6I,YAClB7I,KAAKkG,mBAAmB9E,IAAIsI,QAAQ,SAExClI,EAAEuC,KACEpD,OAAO8D,KACH,0BACA3B,EAAKpD,GACL,uCAEA6K,eAAgBnB,EAChBoB,eAAgBH,EAChBI,eAAgBH,IAGnBvF,KAAK,SAASF,GACX/B,EAAK4B,iBACDG,oBAAqBA,IAEzBpE,EAAWD,QAAQ,wBAEtByG,KAAK,WACFxG,EAAWH,MACP,qEAShBL,mBAAoB,WAChB,IAAIC,EAAOF,KACqB,GAA5BA,KAAKH,aAAa8G,QAClBrI,EAAUiD,KACNO,IAAKnB,OAAO8D,KAAO,qCACnBjE,QAAS,SAAS+I,GACd,IAAK,IAAII,KAAOJ,EACZrJ,EAAKuJ,gBAAgBnC,MACjB5H,GAAI6J,EAAUI,GAAKe,UACnB9K,KAAM2J,EAAUI,GAAKe,UACrBC,YAAapB,EAAUI,GAAKgB,YAC5BnB,gBACID,EAAUI,GAAKH,kBAG3BtJ,EAAKuJ,gBAAgBmB,KAAK,SAASC,EAAGC,GAClC,OAAOD,EAAEnL,GAAKoL,EAAEpL,GAAK,EAAImL,EAAEnL,GAAKoL,EAAEpL,IAAM,EAAI,IAEhDQ,EAAKuJ,gBAAgBsB,QAAQ7K,EAAKP,SAIX,GAA/BK,KAAKyJ,gBAAgB9C,QACrBrI,EAAUiD,KACNO,IAAKnB,OAAO8D,KAAO,cACnBjE,QAAS,SAASwK,GACd,IAAK,IAAIrB,KAAOqB,EACZ9K,EAAKL,aAAayH,MACd5H,GAAIsL,EAAQrB,GAAK,GACjB/J,KAAMoL,EAAQrB,GAAK,KAG3BzJ,EAAKL,aAAa+K,KAAK,SAASC,EAAGC,GAC/B,OAAOD,EAAEnL,GAAKoL,EAAEpL,GAAK,EAAImL,EAAEnL,GAAKoL,EAAEpL,IAAM,EAAI,QAOhEuC,kBAAmB,SAASrD,GAKxB,IAAIsB,EAAOF,KACP6J,EAAiB,IACjBC,EAAc,YACK,IAAZlL,SAC6B,IAAzBA,EAAQsD,eACf2H,EAAiBjL,EAAQsD,mBAEG,IAArBtD,EAAQ+D,WACfmH,EAAclL,EAAQ+D,WAG9B3C,KAAKR,cAAgB,IAAIjB,EAAWG,MAChCgK,IAAK,wBACLpG,KAAMpC,EAAKL,aACXmK,UAAW9J,EAAKkB,IAAIoE,KAAK,0BACzByE,MAAOJ,IAEX7J,KAAKP,iBAAmB,IAAIlB,EAAWG,MACnCgK,IAAK,2BACLpG,KAAMpC,EAAKuJ,gBACXO,UAAW9J,EAAKkB,IAAIoE,KAAK,6BACzByE,MAAOH,KAIfI,gBAAiB,WACb,OAAOzI,EAAEJ,UAGD,wCACA,6BACA,0KACA,uCACA,iBACA,YACA,mLACA,mCACA,mBACA,YACA,2CACA,2KACA,qCACA,eACA,YACA,UACA,2CACA,uFACA,8KACA,oCACA,oBACA,YACA,OACA,UACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,2CACA,QACA,kJACA,SACA,UAGA,8BACA,2DACA,OACA,oHACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,mCACA,+DACA,QACA,UACA,qCACA,OACA,kCACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WAEA,QACA,qBACA,SACA,SAEA,wCACA,QACA,6BACA,OACA,iEACA,wKACA,WACA,OACA,SACA,UAEA,SAEA,UACFsH,KAAK,MAIfhH,gBAAiB,WACb,OAAOF,EAAEJ,UAGD,wCACA,6BACA,2EACA,qJACA,+CACA,uBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8HAEA,8BACA,2DACA,OACA,2EACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,2CACA,+DACA,QACA,UACA,qCACA,OACA,iDACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SAEA,SAEA,UACFsH,KAAK,MAIfjG,sBAAuB,WACnB,OAAOjB,EAAEJ,UAGD,wCACA,6BACA,kLACA,oCACA,eACA,YACA,8KACA,uCACA,aACA,YACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8BACA,2DACA,OACA,oHACA,oIACA,QACA,OACA,iCACA,OACA,0EACA,QACA,QACA,OACA,oCACA,OACA,oEACA,QACA,QACA,OACA,4BACA,kDACA,QACA,OACA,2CACA,sDACA,QACA,OACA,mCACA,oDACA,QACA,mBACA,kCACA,wEACA,QACA,qCACA,yDACA,2EACA,iBACA,+BACA,UACA,QACA,OACA,yCACA,qEACA,QACA,OACA,oCACA,0EACA,QACA,OACA,+BACA,4DACA,QACA,OACA,mCACA,+DACA,QACA,OACA,yCACA,8IACA,QAEA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SACA,SAEA,UACFsH,KAAK,MAIfhE,2BAA4B,WACxB,OAAOlD,EAAEJ,UAGD,wCACA,6BACA,2EACA,mJACA,qCACA,wBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,sDACA,oCACA,wBACA,yKACA,iBACA,+IACA,UACA,SACA,8BACA,uCACA,kDACA,mEACA,8KACA,QACA,uCACA,+LACA,4CACA,iHACA,iBACA,4FACA,UACA,6CACA,mEACA,iDACA,qFACA,mGACA,mGACA,SACA,4DACA,mEACA,iDACA,sLACA,SACA,iLACA,uCACA,aACA,YACA,SAEA,UACFsH,KAAK,MAIf/E,0BAA2B,WACvB,OAAOnC,EAAEJ,UAED,QACA,mCACA,mBACA,qHACA,8CACA,mGACA,YACA,YACA,SACA,mCACA,kBACA,4GACA,WACA,SACA,UACFsH,KAAK","file":"../../../scripts/mvc/library/library-dataset-view.js","sourcesContent":["define(\n    [\n        \"libs/toastr\",\n        \"mvc/library/library-model\",\n        \"utils/utils\",\n        \"mvc/ui/ui-select\"\n    ],\n    function(mod_toastr, mod_library_model, mod_utils, mod_select) {\n        var LibraryDatasetView = Backbone.View.extend({\n            el: \"#center\",\n\n            model: null,\n\n            options: {},\n\n            defaults: {\n                edit_mode: false\n            },\n\n            events: {\n                \"click .toolbtn_modify_dataset\": \"enableModification\",\n                \"click .toolbtn_cancel_modifications\": \"render\",\n                \"click .toolbtn-download-dataset\": \"downloadDataset\",\n                \"click .toolbtn-import-dataset\": \"importIntoHistory\",\n                \"click .copy-link-to-clipboard\": \"copyToClipboard\",\n                \"click .make-private\": \"makeDatasetPrivate\",\n                \"click .remove-restrictions\": \"removeDatasetRestrictions\",\n                \"click .toolbtn_save_permissions\": \"savePermissions\",\n                \"click .toolbtn_save_modifications\": \"saveModifications\"\n            },\n\n            // genome select\n            select_genome: null,\n\n            // extension select\n            select_extension: null,\n\n            // extension types\n            list_extensions: [],\n\n            // datatype placeholder for extension auto-detection\n            auto: {\n                id: \"auto\",\n                text: \"Auto-detect\",\n                description:\n                    \"This system will try to detect the file type automatically.\" +\n                    \" If your file is not detected properly as one of the known formats,\" +\n                    \" it most likely means that it has some format problems (e.g., different\" +\n                    \" number of columns on different rows). You can still coerce the system\" +\n                    \" to set your data to the format you think it should be.\" +\n                    \" You can also upload compressed files, which will automatically be decompressed.\"\n            },\n\n            // genomes\n            list_genomes: [],\n\n            initialize: function(options) {\n                this.options = _.extend(this.options, options);\n                this.fetchExtAndGenomes();\n                if (this.options.id) {\n                    this.fetchDataset();\n                }\n            },\n\n            fetchDataset: function(options) {\n                this.options = _.extend(this.options, options);\n                this.model = new mod_library_model.Item({\n                    id: this.options.id\n                });\n                var that = this;\n                this.model.fetch({\n                    success: function() {\n                        if (that.options.show_permissions) {\n                            that.showPermissions();\n                        } else if (that.options.show_version) {\n                            that.fetchVersion();\n                        } else {\n                            that.render();\n                        }\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(\n                                response.responseJSON.err_msg +\n                                    \" Click this to go back.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        Galaxy.libraries.library_router.back();\n                                    }\n                                }\n                            );\n                        } else {\n                            mod_toastr.error(\n                                \"An error occurred. Click this to go back.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        Galaxy.libraries.library_router.back();\n                                    }\n                                }\n                            );\n                        }\n                    }\n                });\n            },\n\n            render: function(options) {\n                this.options = _.extend(this.options, options);\n                $(\".tooltip\").remove();\n                var template = this.templateDataset();\n                this.$el.html(template({ item: this.model }));\n                $(\".peek\").html(this.model.get(\"peek\"));\n                $(\"#center [data-toggle]\").tooltip();\n            },\n\n            fetchVersion: function(options) {\n                this.options = _.extend(this.options, options);\n                that = this;\n                if (!this.options.ldda_id) {\n                    this.render();\n                    mod_toastr.error(\n                        \"Library dataset version requested but no id provided.\"\n                    );\n                } else {\n                    this.ldda = new mod_library_model.Ldda({\n                        id: this.options.ldda_id\n                    });\n                    this.ldda.url =\n                        this.ldda.urlRoot +\n                        this.model.id +\n                        \"/versions/\" +\n                        this.ldda.id;\n                    this.ldda.fetch({\n                        success: function() {\n                            that.renderVersion();\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(response.responseJSON.err_msg);\n                            } else {\n                                mod_toastr.error(\"An error occurred.\");\n                            }\n                        }\n                    });\n                }\n            },\n\n            renderVersion: function() {\n                $(\".tooltip\").remove();\n                var template = this.templateVersion();\n                this.$el.html(template({ item: this.model, ldda: this.ldda }));\n                $(\".peek\").html(this.ldda.get(\"peek\"));\n            },\n\n            enableModification: function() {\n                $(\".tooltip\").remove();\n                var template = this.templateModifyDataset();\n                this.$el.html(template({ item: this.model }));\n                this.renderSelectBoxes({\n                    genome_build: this.model.get(\"genome_build\"),\n                    file_ext: this.model.get(\"file_ext\")\n                });\n                $(\".peek\").html(this.model.get(\"peek\"));\n                $(\"#center [data-toggle]\").tooltip();\n            },\n\n            downloadDataset: function() {\n                var url =\n                    Galaxy.root +\n                    \"api/libraries/datasets/download/uncompressed\";\n                var data = { ld_ids: this.id };\n                this.processDownload(url, data);\n            },\n\n            processDownload: function(url, data, method) {\n                //url and data options required\n                if (url && data) {\n                    //data can be string of parameters or array/object\n                    data = typeof data == \"string\" ? data : $.param(data);\n                    //split params into form inputs\n                    var inputs = \"\";\n                    $.each(data.split(\"&\"), function() {\n                        var pair = this.split(\"=\");\n                        inputs +=\n                            '<input type=\"hidden\" name=\"' +\n                            pair[0] +\n                            '\" value=\"' +\n                            pair[1] +\n                            '\" />';\n                    });\n                    //send request\n                    $(\n                        '<form action=\"' +\n                            url +\n                            '\" method=\"' +\n                            (method || \"post\") +\n                            '\">' +\n                            inputs +\n                            \"</form>\"\n                    )\n                        .appendTo(\"body\")\n                        .submit()\n                        .remove();\n\n                    mod_toastr.info(\"Your download will begin soon.\");\n                }\n            },\n\n            importIntoHistory: function() {\n                this.refreshUserHistoriesList(function(self) {\n                    var template = self.templateBulkImportInModal();\n                    self.modal = Galaxy.modal;\n                    self.modal.show({\n                        closing_events: true,\n                        title: \"Import into History\",\n                        body: template({ histories: self.histories.models }),\n                        buttons: {\n                            Import: function() {\n                                self.importCurrentIntoHistory();\n                            },\n                            Close: function() {\n                                Galaxy.modal.hide();\n                            }\n                        }\n                    });\n                });\n            },\n\n            refreshUserHistoriesList: function(callback) {\n                var self = this;\n                this.histories = new mod_library_model.GalaxyHistories();\n                this.histories.fetch({\n                    success: function(histories) {\n                        if (histories.length === 0) {\n                            mod_toastr.warning(\n                                \"You have to create history first. Click this to do so.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        window.location = Galaxy.root;\n                                    }\n                                }\n                            );\n                        } else {\n                            callback(self);\n                        }\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(response.responseJSON.err_msg);\n                        } else {\n                            mod_toastr.error(\"An error occurred.\");\n                        }\n                    }\n                });\n            },\n\n            importCurrentIntoHistory: function() {\n                this.modal.disableButton(\"Import\");\n                var new_history_name = this.modal\n                    .$(\"input[name=history_name]\")\n                    .val();\n                var that = this;\n                if (new_history_name !== \"\") {\n                    $.post(Galaxy.root + \"api/histories\", {\n                        name: new_history_name\n                    })\n                        .done(function(new_history) {\n                            that.processImportToHistory(new_history.id);\n                        })\n                        .fail(function(xhr, status, error) {\n                            mod_toastr.error(\"An error occurred.\");\n                        })\n                        .always(function() {\n                            that.modal.enableButton(\"Import\");\n                        });\n                } else {\n                    var history_id = $(this.modal.$el)\n                        .find(\n                            \"select[name=dataset_import_single] option:selected\"\n                        )\n                        .val();\n                    this.processImportToHistory(history_id);\n                    this.modal.enableButton(\"Import\");\n                }\n            },\n\n            processImportToHistory: function(history_id) {\n                var historyItem = new mod_library_model.HistoryItem();\n                historyItem.url =\n                    historyItem.urlRoot + history_id + \"/contents\";\n                // set the used history as current so user will see the last one\n                // that he imported into in the history panel on the 'analysis' page\n                jQuery.getJSON(\n                    Galaxy.root + \"history/set_as_current?id=\" + history_id\n                );\n                // save the dataset into selected history\n                historyItem.save(\n                    { content: this.id, source: \"library\" },\n                    {\n                        success: function() {\n                            Galaxy.modal.hide();\n                            mod_toastr.success(\n                                \"Dataset imported. Click this to start analyzing it.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        window.location = Galaxy.root;\n                                    }\n                                }\n                            );\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(\n                                    \"Dataset not imported. \" +\n                                        response.responseJSON.err_msg\n                                );\n                            } else {\n                                mod_toastr.error(\n                                    \"An error occured. Dataset not imported. Please try again.\"\n                                );\n                            }\n                        }\n                    }\n                );\n            },\n\n            showPermissions: function(options) {\n                var template = this.templateDatasetPermissions();\n                var self = this;\n                this.options = _.extend(this.options, options);\n                $(\".tooltip\").remove();\n                if (this.options.fetched_permissions !== undefined) {\n                    if (\n                        this.options.fetched_permissions.access_dataset_roles\n                            .length === 0\n                    ) {\n                        this.model.set({ is_unrestricted: true });\n                    } else {\n                        this.model.set({ is_unrestricted: false });\n                    }\n                }\n                this.$el.html(\n                    template({\n                        item: this.model,\n                        is_admin: Galaxy.config.is_admin_user\n                    })\n                );\n                $.get(\n                    Galaxy.root +\n                        \"api/libraries/datasets/\" +\n                        self.id +\n                        \"/permissions?scope=current\"\n                )\n                    .done(function(fetched_permissions) {\n                        self.prepareSelectBoxes({\n                            fetched_permissions: fetched_permissions,\n                            is_admin: Galaxy.config.is_admin_user\n                        });\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to fetch dataset permissions.\"\n                        );\n                    });\n                $(\"#center [data-toggle]\").tooltip();\n                $(\"#center\").css(\"overflow\", \"auto\");\n            },\n\n            _serializeRoles: function(role_list) {\n                var selected_roles = [];\n                for (var i = 0; i < role_list.length; i++) {\n                    // Replace the : and , in role's name since these are select2 separators for initialData\n                    selected_roles.push(\n                        role_list[i][1] +\n                            \":\" +\n                            role_list[i][0].replace(\":\", \" \").replace(\",\", \" &\")\n                    );\n                }\n                return selected_roles;\n            },\n\n            prepareSelectBoxes: function(options) {\n                this.options = _.extend(this.options, options);\n                this.accessSelectObject = new mod_select.View(\n                    this._generate_select_options({\n                        selector: \"access_perm\",\n                        initialData: this._serializeRoles(\n                            this.options.fetched_permissions\n                                .access_dataset_roles\n                        )\n                    })\n                );\n                this.modifySelectObject = new mod_select.View(\n                    this._generate_select_options({\n                        selector: \"modify_perm\",\n                        initialData: this._serializeRoles(\n                            this.options.fetched_permissions.modify_item_roles\n                        )\n                    })\n                );\n                this.manageSelectObject = new mod_select.View(\n                    this._generate_select_options({\n                        selector: \"manage_perm\",\n                        initialData: this._serializeRoles(\n                            this.options.fetched_permissions\n                                .manage_dataset_roles\n                        )\n                    })\n                );\n            },\n\n            _generate_select_options: function(options) {\n                var select_options = {\n                    minimumInputLength: 0,\n                    multiple: true,\n                    placeholder: \"Click to select a role\",\n                    formatResult: function roleFormatResult(role) {\n                        return role.name + \" type: \" + role.type;\n                    },\n                    formatSelection: function roleFormatSelection(role) {\n                        return role.name;\n                    },\n                    initSelection: function(element, callback) {\n                        // the input tag has a value attribute preloaded that points to a preselected role's id\n                        // this function resolves that id attribute to an object that select2 can render\n                        // using its formatResult renderer - that way the role name is shown preselected\n                        var data = [];\n                        $(element.val().split(\",\")).each(function() {\n                            var item = this.split(\":\");\n                            data.push({\n                                id: item[0],\n                                name: item[1]\n                            });\n                        });\n                        callback(data);\n                    },\n                    dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n                };\n                select_options.container = this.$el.find(\n                    \"#\" + options.selector\n                );\n                select_options.css = options.selector;\n                select_options.initialData = options.initialData.join(\",\");\n                select_options.ajax = {\n                    url:\n                        Galaxy.root +\n                        \"api/libraries/datasets/\" +\n                        this.id +\n                        \"/permissions?scope=available\",\n                    dataType: \"json\",\n                    quietMillis: 100,\n                    data: function(term, page) {\n                        // page is the one-based page number tracked by Select2\n                        return {\n                            q: term, //search term\n                            page_limit: 10, // page size, should be same as used in 'more' variable below\n                            page: page // page number\n                        };\n                    },\n                    results: function(data, page) {\n                        var more = page * 10 < data.total; // whether or not there are more results available\n                        // notice we return the value of more so Select2 knows if more results can be loaded\n                        return { results: data.roles, more: more };\n                    }\n                };\n                return select_options;\n            },\n\n            /**\n   * Save the changes made to the library dataset.\n   */\n            saveModifications: function(options) {\n                var is_changed = false;\n                var ld = this.model;\n                var new_name = this.$el.find(\".input_dataset_name\").val();\n                if (\n                    typeof new_name !== \"undefined\" &&\n                    new_name !== ld.get(\"name\")\n                ) {\n                    if (new_name.length > 0) {\n                        ld.set(\"name\", new_name);\n                        is_changed = true;\n                    } else {\n                        mod_toastr.warning(\n                            \"Library dataset name has to be at least 1 character long.\"\n                        );\n                        return;\n                    }\n                }\n                var new_info = this.$el.find(\".input_dataset_misc_info\").val();\n                if (\n                    typeof new_info !== \"undefined\" &&\n                    new_info !== ld.get(\"misc_info\")\n                ) {\n                    ld.set(\"misc_info\", new_info);\n                    is_changed = true;\n                }\n                var new_genome_build = this.select_genome.$el.select2(\"data\")\n                    .id;\n                if (\n                    typeof new_genome_build !== \"undefined\" &&\n                    new_genome_build !== ld.get(\"genome_build\")\n                ) {\n                    ld.set(\"genome_build\", new_genome_build);\n                    is_changed = true;\n                }\n                var new_ext = this.select_extension.$el.select2(\"data\").id;\n                if (\n                    typeof new_ext !== \"undefined\" &&\n                    new_ext !== ld.get(\"file_ext\")\n                ) {\n                    ld.set(\"file_ext\", new_ext);\n                    is_changed = true;\n                }\n                var dataset_view = this;\n                if (is_changed) {\n                    ld.save(null, {\n                        patch: true,\n                        success: function(ld) {\n                            dataset_view.render();\n                            mod_toastr.success(\n                                \"Changes to library dataset saved.\"\n                            );\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(response.responseJSON.err_msg);\n                            } else {\n                                mod_toastr.error(\n                                    \"An error occured while attempting to update the library dataset.\"\n                                );\n                            }\n                        }\n                    });\n                } else {\n                    dataset_view.render();\n                    mod_toastr.info(\"Nothing has changed.\");\n                }\n            },\n\n            copyToClipboard: function() {\n                var href = Backbone.history.location.href;\n                if (href.lastIndexOf(\"/permissions\") !== -1) {\n                    href = href.substr(0, href.lastIndexOf(\"/permissions\"));\n                }\n                window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", href);\n            },\n\n            makeDatasetPrivate: function() {\n                var self = this;\n                $.post(\n                    Galaxy.root +\n                        \"api/libraries/datasets/\" +\n                        self.id +\n                        \"/permissions?action=make_private\"\n                )\n                    .done(function(fetched_permissions) {\n                        self.model.set({ is_unrestricted: false });\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\n                            \"The dataset is now private to you.\"\n                        );\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to make dataset private.\"\n                        );\n                    });\n            },\n\n            removeDatasetRestrictions: function() {\n                var self = this;\n                $.post(\n                    Galaxy.root +\n                        \"api/libraries/datasets/\" +\n                        self.id +\n                        \"/permissions?action=remove_restrictions\"\n                )\n                    .done(function(fetched_permissions) {\n                        self.model.set({ is_unrestricted: true });\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\n                            \"Access to this dataset is now unrestricted.\"\n                        );\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to make dataset unrestricted.\"\n                        );\n                    });\n            },\n\n            /**\n   * Extract the role ids from Select2 elements's 'data'\n   */\n            _extractIds: function(roles_list) {\n                var ids_list = [];\n                for (var i = roles_list.length - 1; i >= 0; i--) {\n                    ids_list.push(roles_list[i].id);\n                }\n                return ids_list;\n            },\n\n            /**\n   * Save the permissions for roles entered in the select boxes.\n   */\n            savePermissions: function(event) {\n                var self = this;\n                var access_ids = this._extractIds(\n                    this.accessSelectObject.$el.select2(\"data\")\n                );\n                var manage_ids = this._extractIds(\n                    this.manageSelectObject.$el.select2(\"data\")\n                );\n                var modify_ids = this._extractIds(\n                    this.modifySelectObject.$el.select2(\"data\")\n                );\n                $.post(\n                    Galaxy.root +\n                        \"api/libraries/datasets/\" +\n                        self.id +\n                        \"/permissions?action=set_permissions\",\n                    {\n                        \"access_ids[]\": access_ids,\n                        \"manage_ids[]\": manage_ids,\n                        \"modify_ids[]\": modify_ids\n                    }\n                )\n                    .done(function(fetched_permissions) {\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\"Permissions saved.\");\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to set dataset permissions.\"\n                        );\n                    });\n            },\n\n            /**\n   * If needed request all extensions and/or genomes from Galaxy\n   * and save them in sorted arrays.\n   */\n            fetchExtAndGenomes: function() {\n                var that = this;\n                if (this.list_genomes.length == 0) {\n                    mod_utils.get({\n                        url: Galaxy.root + \"api/datatypes?extension_only=False\",\n                        success: function(datatypes) {\n                            for (var key in datatypes) {\n                                that.list_extensions.push({\n                                    id: datatypes[key].extension,\n                                    text: datatypes[key].extension,\n                                    description: datatypes[key].description,\n                                    description_url:\n                                        datatypes[key].description_url\n                                });\n                            }\n                            that.list_extensions.sort(function(a, b) {\n                                return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                            });\n                            that.list_extensions.unshift(that.auto);\n                        }\n                    });\n                }\n                if (this.list_extensions.length == 0) {\n                    mod_utils.get({\n                        url: Galaxy.root + \"api/genomes\",\n                        success: function(genomes) {\n                            for (var key in genomes) {\n                                that.list_genomes.push({\n                                    id: genomes[key][1],\n                                    text: genomes[key][0]\n                                });\n                            }\n                            that.list_genomes.sort(function(a, b) {\n                                return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                            });\n                        }\n                    });\n                }\n            },\n\n            renderSelectBoxes: function(options) {\n                // This won't work properly unlesss we already have the data fetched.\n                // See this.fetchExtAndGenomes()\n                // TODO switch to common resources:\n                // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n                var that = this;\n                var current_genome = \"?\";\n                var current_ext = \"auto\";\n                if (typeof options !== \"undefined\") {\n                    if (typeof options.genome_build !== \"undefined\") {\n                        current_genome = options.genome_build;\n                    }\n                    if (typeof options.file_ext !== \"undefined\") {\n                        current_ext = options.file_ext;\n                    }\n                }\n                this.select_genome = new mod_select.View({\n                    css: \"dataset-genome-select\",\n                    data: that.list_genomes,\n                    container: that.$el.find(\"#dataset_genome_select\"),\n                    value: current_genome\n                });\n                this.select_extension = new mod_select.View({\n                    css: \"dataset-extension-select\",\n                    data: that.list_extensions,\n                    container: that.$el.find(\"#dataset_extension_select\"),\n                    value: current_ext\n                });\n            },\n\n            templateDataset: function() {\n                return _.template(\n                    [\n                        // CONTAINER START\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download dataset\" class=\"btn btn-default toolbtn-download-dataset primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-download\"></span>',\n                        \"&nbsp;Download\",\n                        \"</button>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import dataset into history\" class=\"btn btn-default toolbtn-import-dataset primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-book\"></span>',\n                        \"&nbsp;to History\",\n                        \"</button>\",\n                        '<% if (item.get(\"can_user_modify\")) { %>',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify library item\" class=\"btn btn-default toolbtn_modify_dataset primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-pencil\"></span>',\n                        \"&nbsp;Modify\",\n                        \"</button>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"can_user_manage\")) { %>',\n                        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/permissions\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Manage permissions\" class=\"btn btn-default toolbtn_change_permissions primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-group\"></span>',\n                        \"&nbsp;Permissions\",\n                        \"</button>\",\n                        \"</a>\",\n                        \"<% } %>\",\n                        \"</div>\",\n\n                        // BREADCRUMBS\n                        '<ol class=\"breadcrumb\">',\n                        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                        \"<% if (path_item[0] != item.id) { %>\",\n                        '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                        \"<% } else { %>\",\n                        '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                        \"<% } %>\",\n                        \"<% }); %>\",\n                        \"</ol>\",\n\n                        '<% if (item.get(\"is_unrestricted\")) { %>',\n                        \"<div>\",\n                        'This dataset is unrestricted so everybody with the link can access it. Just share <span class=\"copy-link-to-clipboard\"><a>this page</a></span>.',\n                        \"</div>\",\n                        \"<% } %>\",\n\n                        // TABLE START\n                        '<div class=\"dataset_table\">',\n                        '<table class=\"grid table table-striped table-condensed\">',\n                        \"<tr>\",\n                        '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                        '<td><%= _.escape(item.get(\"name\")) %></td>',\n                        \"</tr>\",\n                        '<% if (item.get(\"file_ext\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Data type</th>',\n                        '<td><%= _.escape(item.get(\"file_ext\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"genome_build\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Genome build</th>',\n                        '<td><%= _.escape(item.get(\"genome_build\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"file_size\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Size</th>',\n                        '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"date_uploaded\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Date uploaded (UTC)</th>',\n                        '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"uploaded_by\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Uploaded by</th>',\n                        '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"metadata_data_lines\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Data Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"metadata_comment_lines\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Comment Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"metadata_columns\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Number of Columns</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"metadata_column_types\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Column Types</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"message\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Message</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"misc_blurb\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Misc. blurb</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"misc_info\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Misc. info</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"misc_info\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"tags\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Tags</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        \"</table>\",\n\n                        \"<div>\",\n                        '<pre class=\"peek\">',\n                        \"</pre>\",\n                        \"</div>\",\n\n                        '<% if (item.get(\"has_versions\")) { %>',\n                        \"<div>\",\n                        \"<h3>Expired versions:</h3>\",\n                        \"<ul>\",\n                        '<% _.each(item.get(\"expired_versions\"), function(version) { %>',\n                        '<li><a title=\"See details of this version\" href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/versions/<%- version[0] %>\"><%- version[1] %></a></li>',\n                        \"<% }) %>\",\n                        \"<ul>\",\n                        \"</div>\",\n                        \"<% } %>\",\n                        // TABLE END\n                        \"</div>\",\n                        // CONTAINER END\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateVersion: function() {\n                return _.template(\n                    [\n                        // CONTAINER START\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go to latest dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-caret-left fa-lg\"></span>',\n                        \"&nbsp;Latest dataset\",\n                        \"</button>\",\n                        \"<a>\",\n                        \"</div>\",\n\n                        // BREADCRUMBS\n                        '<ol class=\"breadcrumb\">',\n                        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                        \"<% if (path_item[0] != item.id) { %>\",\n                        '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                        \"<% } else { %>\",\n                        '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                        \"<% } %>\",\n                        \"<% }); %>\",\n                        \"</ol>\",\n\n                        '<div class=\"alert alert-warning\">This is an expired version of the library dataset: <%= _.escape(item.get(\"name\")) %></div>',\n                        // DATASET START\n                        '<div class=\"dataset_table\">',\n                        '<table class=\"grid table table-striped table-condensed\">',\n                        \"<tr>\",\n                        '<th scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(ldda.id) %>\">Name</th>',\n                        '<td><%= _.escape(ldda.get(\"name\")) %></td>',\n                        \"</tr>\",\n                        '<% if (ldda.get(\"file_ext\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Data type</th>',\n                        '<td><%= _.escape(ldda.get(\"file_ext\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"genome_build\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Genome build</th>',\n                        '<td><%= _.escape(ldda.get(\"genome_build\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"file_size\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Size</th>',\n                        '<td><%= _.escape(ldda.get(\"file_size\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"date_uploaded\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Date uploaded (UTC)</th>',\n                        '<td><%= _.escape(ldda.get(\"date_uploaded\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"uploaded_by\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Uploaded by</th>',\n                        '<td><%= _.escape(ldda.get(\"uploaded_by\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"metadata_data_lines\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Data Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_data_lines\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"metadata_comment_lines\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Comment Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_comment_lines\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"metadata_columns\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Number of Columns</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_columns\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"metadata_column_types\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Column Types</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_column_types\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"message\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Message</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"message\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"misc_blurb\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Miscellaneous blurb</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_blurb\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"misc_info\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Miscellaneous information</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_info\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"tags\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Tags</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        \"</table>\",\n                        \"<div>\",\n                        '<pre class=\"peek\">',\n                        \"</pre>\",\n                        \"</div>\",\n                        // DATASET END\n                        \"</div>\",\n                        // CONTAINER END\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateModifyDataset: function() {\n                return _.template(\n                    [\n                        // CONTAINER START\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Cancel modifications\" class=\"btn btn-default toolbtn_cancel_modifications primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-times\"></span>',\n                        \"&nbsp;Cancel\",\n                        \"</button>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_modifications primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-floppy-o\"></span>',\n                        \"&nbsp;Save\",\n                        \"</button>\",\n                        \"</div>\",\n\n                        // BREADCRUMBS\n                        '<ol class=\"breadcrumb\">',\n                        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                        \"<% if (path_item[0] != item.id) { %>\",\n                        '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                        \"<% } else { %>\",\n                        '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                        \"<% } %>\",\n                        \"<% }); %>\",\n                        \"</ol>\",\n\n                        '<div class=\"dataset_table\">',\n                        '<table class=\"grid table table-striped table-condensed\">',\n                        \"<tr>\",\n                        '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                        '<td><input class=\"input_dataset_name form-control\" type=\"text\" placeholder=\"name\" value=\"<%= _.escape(item.get(\"name\")) %>\"></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Data type</th>',\n                        \"<td>\",\n                        '<span id=\"dataset_extension_select\" class=\"dataset-extension-select\" />',\n                        \"</td>\",\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Genome build</th>',\n                        \"<td>\",\n                        '<span id=\"dataset_genome_select\" class=\"dataset-genome-select\" />',\n                        \"</td>\",\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Size</th>',\n                        '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Date uploaded (UTC)</th>',\n                        '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Uploaded by</th>',\n                        '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                        \"</tr>\",\n                        '<tr scope=\"row\">',\n                        '<th scope=\"row\">Data Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                        \"</tr>\",\n                        '<th scope=\"row\">Comment Lines</th>',\n                        '<% if (item.get(\"metadata_comment_lines\") === \"\") { %>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                        \"<% } else { %>\",\n                        '<td scope=\"row\">unknown</td>',\n                        \"<% } %>\",\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Number of Columns</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Column Types</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Message</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Misc. blurb</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Misc. information</th>',\n                        '<td><input class=\"input_dataset_misc_info form-control\" type=\"text\" placeholder=\"info\" value=\"<%= _.escape(item.get(\"misc_info\")) %>\"></td>',\n                        \"</tr>\",\n                        //TODO: add functionality to modify tags here\n                        '<% if (item.get(\"tags\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Tags</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        \"</table>\",\n                        \"<div>\",\n                        '<pre class=\"peek\">',\n                        \"</pre>\",\n                        \"</div>\",\n                        \"</div>\",\n                        // CONTAINER END\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateDatasetPermissions: function() {\n                return _.template(\n                    [\n                        // CONTAINER START\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-file-o\"></span>',\n                        \"&nbsp;Dataset Details\",\n                        \"</button>\",\n                        \"<a>\",\n                        \"</div>\",\n\n                        // BREADCRUMBS\n                        '<ol class=\"breadcrumb\">',\n                        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                        \"<% if (path_item[0] != item.id) { %>\",\n                        '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                        \"<% } else { %>\",\n                        '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                        \"<% } %>\",\n                        \"<% }); %>\",\n                        \"</ol>\",\n\n                        '<h1>Dataset: <%= _.escape(item.get(\"name\")) %></h1>',\n                        '<div class=\"alert alert-warning\">',\n                        \"<% if (is_admin) { %>\",\n                        \"You are logged in as an <strong>administrator</strong> therefore you can manage any dataset on this Galaxy instance. Please make sure you understand the consequences.\",\n                        \"<% } else { %>\",\n                        \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                        \"<% } %>\",\n                        \"</div>\",\n                        '<div class=\"dataset_table\">',\n                        \"<h2>Library-related permissions</h2>\",\n                        \"<h4>Roles that can modify the library item</h4>\",\n                        '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"></div>',\n                        '<div class=\"alert alert-info roles-selection\">User with <strong>any</strong> of these roles can modify name, metadata, and other information about this library item.</div>',\n                        \"<hr/>\",\n                        \"<h2>Dataset-related permissions</h2>\",\n                        '<div class=\"alert alert-warning\">Changes made below will affect <strong>every</strong> library item that was created from this dataset and also every history this dataset is part of.</div>',\n                        '<% if (!item.get(\"is_unrestricted\")) { %>',\n                        '<p>You can <span class=\"remove-restrictions\"><a>remove all access restrictions</a></span> on this dataset.</p>',\n                        \"<% } else { %>\",\n                        '<p>You can <span class=\"make-private\"><a>make this dataset private</a></span> to you.</p>',\n                        \"<% } %>\",\n                        \"<h4>Roles that can access the dataset</h4>\",\n                        '<div id=\"access_perm\" class=\"access_perm roles-selection\"></div>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User has to have <strong>all these roles</strong> in order to access this dataset.\",\n                        \" Users without access permission <strong>cannot</strong> have other permissions on this dataset.\",\n                        \" If there are no access roles set on the dataset it is considered <strong>unrestricted</strong>.\",\n                        \"</div>\",\n                        \"<h4>Roles that can manage permissions on the dataset</h4>\",\n                        '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"></div>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can manage permissions of this dataset. If you remove yourself you will lose the ability manage this dataset unless you are an admin.\",\n                        \"</div>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                        '<span class=\"fa fa-floppy-o\"></span>',\n                        \"&nbsp;Save\",\n                        \"</button>\",\n                        \"</div>\",\n                        // CONTAINER END\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateBulkImportInModal: function() {\n                return _.template(\n                    [\n                        \"<div>\",\n                        '<div class=\"library-modal-item\">',\n                        \"Select history: \",\n                        '<select id=\"dataset_import_single\" name=\"dataset_import_single\" style=\"width:50%; margin-bottom: 1em; \" autofocus>',\n                        \"<% _.each(histories, function(history) { %>\",\n                        '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n                        \"<% }); %>\",\n                        \"</select>\",\n                        \"</div>\",\n                        '<div class=\"library-modal-item\">',\n                        \"or create new: \",\n                        '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">',\n                        \"</input>\",\n                        \"</div>\",\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            }\n        });\n\n        return {\n            LibraryDatasetView: LibraryDatasetView\n        };\n    }\n);\n"]}