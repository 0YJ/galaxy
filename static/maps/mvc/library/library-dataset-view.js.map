{"version":3,"sources":["mvc/library/library-dataset-view.js"],"names":["define","model","mod_library_model","options","mod_select","LibraryDatasetView","Backbone","View","extend","el","defaults","edit_mode","events","click .toolbtn_modify_dataset","click .toolbtn_cancel_modifications","click .toolbtn-download-dataset","select_genome","click .copy-link-to-clipboard","click .make-private","select_extension","click .toolbtn_save_permissions","click .toolbtn_save_modifications","auto","description","list_extensions","initialize","id","text","fetchExtAndGenomes","list_genomes","that","showPermissions","this","fetchVersion","fetchDataset","error","_","response","responseJSON","mod_toastr","err_msg","Galaxy","fetch","success","show_version","render","remove","onclick","libraries","library_router","back","template","$","templateDataset","item","html","get","renderVersion","ldda_id","Ldda","ldda","url","urlRoot","$el","renderSelectBoxes","genome_build","templateVersion","file_ext","enableModification","downloadDataset","templateModifyDataset","processDownload","data","tooltip","root","inputs","method","param","each","split","importIntoHistory","refreshUserHistoriesList","pair","self","closing_events","submit","body","hide","templateBulkImportInModal","modal","show","title","histories","models","buttons","importCurrentIntoHistory","Close","window","location","GalaxyHistories","callback","length","warning","processImportToHistory","new_history_name","xhr","status","val","enableButton","name","done","new_history","fail","history_id","always","historyItem","HistoryItem","jQuery","getJSON","save","source","fetched_permissions","templateDatasetPermissions","set","is_unrestricted","undefined","is_admin_user","is_admin","config","prepareSelectBoxes","selected_roles","i","role_list","css","_serializeRoles","selector","push","replace","initialData","accessSelectObject","access_dataset_roles","_generate_select_options","select_options","minimumInputLength","multiple","modify_item_roles","manageSelectObject","role","formatSelection","manage_dataset_roles","type","dropdownCssClass","element","dataType","quietMillis","term","q","page","is_changed","container","find","results","more","total","join","ajax","page_limit","ld","new_name","roles","saveModifications","new_info","new_genome_build","dataset_view","patch","select2","new_ext","href","history","substr","makeDatasetPrivate","info","lastIndexOf","prompt","removeDatasetRestrictions","_extractIds","post","ids_list","roles_list","modify_ids","savePermissions","event","manage_ids","modifySelectObject","mod_utils","access_ids[]","access_ids","manage_ids[]","modify_ids[]","datatypes","key","extension","description_url","sort","a","b","unshift","genomes","current_genome","current_ext","value"],"mappings":"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,IAAXuI,SACOkD,IAAAA,EAAAA,eAJTD,EAAA7M,EAAA8D,mBAVkC,IAArB9D,EAAQgE,WAkBvBd,EAAkBlD,EAAAgE,WAGhBnC,KAAAhB,cAAA,IAAAZ,EAAAG,MAhBI8H,IAAK,wBA0CT7D,KAAA1C,EAAAD,aACAkI,UAAAjI,EAAAiC,IAAAiG,KACE,0BAzCEkD,MAAOF,IA0DXhL,KAAAb,iBAAA,IAAAf,EACEG,MAoGF8H,IAAA,2BACA7D,KAAA1C,EArJkBN,gBAsJlBuI,UAAAjI,EAAAiC,IAAAiG,KAAA,6BACAkD,MAAAD,KAKA5J,gBAASF,WACT,OAAAf,EAAAe,UA3JA,wCAsKE,6BACA,0KAYA,uCACA,iBAyFA,YACA,mLACF,mCACA,mBApyB0C,YA8hBtC,2CA0QNmB,2KACE,qCACA,eACA,YAxQI,UAoRF,2CACA,uFAwEI,8KACA,oCAYN,oBACA,YA94B0C,OA2iBtC,UAuWNoD,SAGE,0BArWE,6EA+WA,4DACA,uCAiDF,2GACA,iBAl9B0C,gFAsjBtC,UAgaNlC,YACE,QAv9BJ,2CA2jBM,QAgbN,kJACInF,SADJ,UA1aI,8BACE,2DACE,OACE,oHACA,6CACF,QACA,oCACE,OACE,iCACA,iDACF,QACF,UACA,wCACE,OACE,oCACA,qDACF,QACF,UACA,qCACE,OACE,4BACA,kDACF,QACF,UACA,yCACE,OACE,2CACA,sDACF,QACF,UACA,uCACE,OACE,mCACA,oDACF,QACF,UACA,+CACE,OACE,kCACA,wEACF,QACF,UACA,kDACE,OACE,qCACA,2EACF,QACF,UACA,4CACE,OACE,yCACA,qEACF,QACF,UACA,iDACE,OACE,oCACA,0EACF,QACF,UACA,mCACE,OACE,+BACA,4DACF,QACF,UACA,sCACE,OACE,mCACA,+DACF,QACF,UACA,qCACE,OACE,kCACA,8DACF,QACF,UACA,gCACE,OACE,4BACA,yDACF,QACF,UACF,WAEF,QACE,qBACA,SACF,SAEA,wCACE,QACE,6BACA,OACE,iEACE,wKACF,WACF,OACF,SACF,UAEA,SAEA,UACE+J,KAAK,MAGTlG,gBAAkB,WAChB,OAAO9B,EAAEe,UAET,wCACE,6BACE,2EACE,qJACE,+CACA,uBACF,YACF,MACF,SAGA,0BACE,6EACA,4DACE,uCACE,2GACF,iBACE,gFACF,UACF,YACF,QAEA,8HAEA,8BACE,2DACE,OACE,2EACA,6CACF,QACA,oCACE,OACE,iCACA,iDACF,QACF,UACA,wCACE,OACE,oCACA,qDACF,QACF,UACA,qCACE,OACE,4BACA,kDACF,QACF,UACA,yCACE,OACE,2CACA,sDACF,QACF,UACA,uCACE,OACE,mCACA,oDACF,QACF,UACA,+CACE,OACE,kCACA,wEACF,QACF,UACA,kDACE,OACE,qCACA,2EACF,QACF,UACA,4CACE,OACE,yCACA,qEACF,QACF,UACA,iDACE,OACE,oCACA,0EACF,QACF,UACA,mCACE,OACE,+BACA,4DACF,QACF,UACA,sCACE,OACE,2CACA,+DACF,QACF,UACA,qCACE,OACE,iDACA,8DACF,QACF,UACA,gCACE,OACE,4BACA,yDACF,QACF,UACF,WACA,QACE,qBACA,SACF,SAEF,SAEF,UACEiH,KAAK,MAGT9F,sBAAwB,WACtB,OAAOlC,EAAEe,UAET,wCACE,6BACE,kLACE,oCACA,eACF,YACA,8KACE,uCACA,aACF,YACF,SAGA,0BACE,6EACA,4DACE,uCACE,2GACF,iBACE,gFACF,UACF,YACF,QAEA,8BACE,2DACE,OACE,oHACA,oIACF,QACA,OACE,iCACA,OACE,0EACF,QACF,QACA,OACE,oCACA,OACE,oEACF,QACF,QACA,OACE,4BACA,kDACF,QACA,OACE,2CACA,sDACF,QACA,OACE,mCACA,oDACF,QACA,mBACE,kCACA,wEACF,QACE,qCACA,yDACE,2EACF,iBACE,+BACF,UACF,QACA,OACE,yCACA,qEACF,QACA,OACE,oCACA,0EACF,QACA,OACE,+BACA,4DACF,QACA,OACE,mCACA,+DACF,QACA,OACE,yCACA,8IACF,QAEA,gCACE,OACE,4BACA,yDACF,QACF,UACF,WACA,QACE,qBACA,SACF,SACF,SAEF,UACEiH,KAAK,MAGT1C,2BAA6B,WAC3B,OAAOtF,EAAEe,UAET,wCACE,6BACE,2EACE,mJACE,qCACA,wBACF,YACF,MACF,SAGA,0BACE,6EACE,4DACE,uCACE,2GACF,iBACE,gFACF,UACJ,YACF,QAEA,sDACA,oCACE,wBACE,yKACF,iBACE,+IACF,UACF,SACA,8BACE,uCACA,kDACA,mEACA,8KACA,QACA,uCACA,+LACA,4CACE,iHACF,iBACE,4FACF,UACA,6CACA,mEACA,iDACE,qFACA,mGACA,mGACF,SACA,4DACA,mEACA,iDACE,sLACF,SACA,iLACE,uCACA,aACF,YACF,SAEF,UACEiH,KAAK,MAGT5E,0BAA2B,WACzB,OAAOpD,EAAEe,UACT,QACE,mCACE,mBACA,qHACE,8CACE,mGACF,YACF,YACF,SACA,mCACE,kBACA,4GACA,WACF,SACF,UACEiH,KAAK","file":"../../../scripts/mvc/library/library-dataset-view.js","sourcesContent":["define([\n  \"libs/toastr\",\n  \"mvc/library/library-model\",\n  \"utils/utils\",\n  'mvc/ui/ui-select'\n  ],\nfunction(\n        mod_toastr,\n        mod_library_model,\n        mod_utils,\n        mod_select\n        ) {\n\nvar LibraryDatasetView = Backbone.View.extend({\n  el: '#center',\n\n  model: null,\n\n  options: {},\n\n  defaults: {\n    edit_mode: false\n  },\n\n  events: {\n    \"click .toolbtn_modify_dataset\"       :   \"enableModification\",\n    \"click .toolbtn_cancel_modifications\" :   \"render\",\n    \"click .toolbtn-download-dataset\"     :   \"downloadDataset\",\n    \"click .toolbtn-import-dataset\"       :   \"importIntoHistory\",\n    \"click .copy-link-to-clipboard\"       :   \"copyToClipboard\",\n    \"click .make-private\"                 :   \"makeDatasetPrivate\",\n    \"click .remove-restrictions\"          :   \"removeDatasetRestrictions\",\n    \"click .toolbtn_save_permissions\"     :   \"savePermissions\",\n    \"click .toolbtn_save_modifications\"   :   \"saveModifications\"\n  },\n\n  // genome select\n  select_genome : null,\n\n  // extension select\n  select_extension : null,\n\n  // extension types\n  list_extensions :[],\n\n  // datatype placeholder for extension auto-detection\n  auto: {\n      id          : 'auto',\n      text        : 'Auto-detect',\n      description : 'This system will try to detect the file type automatically.' +\n                    ' If your file is not detected properly as one of the known formats,' +\n                    ' it most likely means that it has some format problems (e.g., different' +\n                    ' number of columns on different rows). You can still coerce the system' +\n                    ' to set your data to the format you think it should be.' +\n                    ' You can also upload compressed files, which will automatically be decompressed.'\n  },\n\n  // genomes\n  list_genomes : [],\n\n  initialize: function(options){\n    this.options = _.extend(this.options, options);\n    this.fetchExtAndGenomes();\n    if (this.options.id){\n      this.fetchDataset();\n    }\n  },\n\n  fetchDataset: function(options){\n    this.options = _.extend(this.options, options);\n    this.model = new mod_library_model.Item({id: this.options.id});\n    var that = this;\n    this.model.fetch({\n      success: function() {\n        if (that.options.show_permissions){\n            that.showPermissions();\n        } else if (that.options.show_version) {\n            that.fetchVersion();\n        } else {\n            that.render();\n        }\n      },\n      error: function(model, response){\n        if (typeof response.responseJSON !== \"undefined\"){\n          mod_toastr.error(response.responseJSON.err_msg + ' Click this to go back.', '', {onclick: function() {Galaxy.libraries.library_router.back();}});\n        } else {\n          mod_toastr.error('An error occurred. Click this to go back.', '', {onclick: function() {Galaxy.libraries.library_router.back();}});\n        }\n      }\n    });\n  },\n\n  render: function(options){\n    this.options = _.extend(this.options, options);\n    $(\".tooltip\").remove();\n    var template = this.templateDataset();\n    this.$el.html(template({item: this.model}));\n    $(\".peek\").html(this.model.get(\"peek\"));\n    $(\"#center [data-toggle]\").tooltip();\n  },\n\n  fetchVersion: function(options){\n    this.options = _.extend(this.options, options);\n    that = this;\n    if (!this.options.ldda_id){\n      this.render();\n      mod_toastr.error('Library dataset version requested but no id provided.');\n    } else {\n      this.ldda = new mod_library_model.Ldda({id: this.options.ldda_id});\n      this.ldda.url = this.ldda.urlRoot + this.model.id + '/versions/' + this.ldda.id;\n      this.ldda.fetch({\n        success: function(){\n          that.renderVersion();\n        },\n        error: function(model, response){\n          if (typeof response.responseJSON !== \"undefined\"){\n            mod_toastr.error(response.responseJSON.err_msg);\n          } else {\n            mod_toastr.error('An error occurred.');\n          }\n        }\n      });\n    }\n  },\n\n  renderVersion: function(){\n    $(\".tooltip\").remove();\n    var template = this.templateVersion();\n    this.$el.html(template({item: this.model, ldda: this.ldda}));\n    $(\".peek\").html(this.ldda.get(\"peek\"));\n  },\n\n  enableModification: function(){\n    $(\".tooltip\").remove();\n    var template = this.templateModifyDataset();\n    this.$el.html(template({item: this.model}));\n    this.renderSelectBoxes({\n      genome_build: this.model.get('genome_build'),\n      file_ext: this.model.get('file_ext')\n    });\n    $(\".peek\").html(this.model.get(\"peek\"));\n    $(\"#center [data-toggle]\").tooltip();\n  },\n\n  downloadDataset: function(){\n    var url = Galaxy.root + 'api/libraries/datasets/download/uncompressed';\n    var data = {'ld_ids': this.id};\n    this.processDownload(url, data);\n  },\n\n  processDownload: function(url, data, method){\n        //url and data options required\n        if( url && data ){\n          //data can be string of parameters or array/object\n          data = typeof data == 'string' ? data : $.param(data);\n          //split params into form inputs\n          var inputs = '';\n          $.each(data.split('&'), function(){\n            var pair = this.split('=');\n            inputs+='<input type=\"hidden\" name=\"'+ pair[0] +'\" value=\"'+ pair[1] +'\" />';\n          });\n          //send request\n          $('<form action=\"'+ url +'\" method=\"'+ (method||'post') +'\">'+inputs+'</form>')\n          .appendTo('body').submit().remove();\n\n          mod_toastr.info('Your download will begin soon.');\n        }\n   },\n\n  importIntoHistory: function(){\n    this.refreshUserHistoriesList(function(self){\n            var template = self.templateBulkImportInModal();\n            self.modal = Galaxy.modal;\n            self.modal.show({\n                closing_events  : true,\n                title           : 'Import into History',\n                body            : template({histories : self.histories.models}),\n                buttons         : {\n                    'Import'    : function() {self.importCurrentIntoHistory();},\n                    'Close'     : function() {Galaxy.modal.hide();}\n                }\n            });\n          });\n  },\n\n refreshUserHistoriesList: function(callback){\n    var self = this;\n    this.histories = new mod_library_model.GalaxyHistories();\n    this.histories.fetch({\n      success: function (histories){\n        if (histories.length === 0){\n          mod_toastr.warning('You have to create history first. Click this to do so.', '', {onclick: function() {window.location=Galaxy.root;}});\n        } else {\n          callback(self);\n        }\n      },\n      error: function(model, response){\n        if (typeof response.responseJSON !== \"undefined\"){\n          mod_toastr.error(response.responseJSON.err_msg);\n        } else {\n          mod_toastr.error('An error occurred.');\n        }\n      }\n    });\n  },\n\n  importCurrentIntoHistory: function(){\n    this.modal.disableButton('Import');\n    var new_history_name = this.modal.$('input[name=history_name]').val();\n    var that = this;\n    if (new_history_name !== ''){\n      $.post( Galaxy.root + 'api/histories', {name: new_history_name})\n        .done(function( new_history ) {\n          that.processImportToHistory(new_history.id);\n        })\n        .fail(function( xhr, status, error ) {\n          mod_toastr.error('An error occurred.');\n        })\n        .always(function() {\n          that.modal.enableButton('Import');\n        });\n    } else {\n      var history_id = $(this.modal.$el).find('select[name=dataset_import_single] option:selected').val();\n      this.processImportToHistory(history_id);\n      this.modal.enableButton('Import');\n    }\n  },\n\n  processImportToHistory: function( history_id ){\n    var historyItem = new mod_library_model.HistoryItem();\n    historyItem.url = historyItem.urlRoot + history_id + '/contents';\n    // set the used history as current so user will see the last one\n    // that he imported into in the history panel on the 'analysis' page\n    jQuery.getJSON( Galaxy.root + 'history/set_as_current?id=' + history_id  );\n    // save the dataset into selected history\n    historyItem.save({ content : this.id, source : 'library' }, {\n      success : function(){\n        Galaxy.modal.hide();\n        mod_toastr.success('Dataset imported. Click this to start analyzing it.', '', {onclick: function() {window.location=Galaxy.root;}});\n      },\n      error : function(model, response){\n        if (typeof response.responseJSON !== \"undefined\"){\n          mod_toastr.error('Dataset not imported. ' + response.responseJSON.err_msg);\n        } else {\n          mod_toastr.error('An error occured. Dataset not imported. Please try again.');\n        }\n      }\n      });\n  },\n\n  showPermissions: function(options){\n    var template = this.templateDatasetPermissions();\n    var self = this;\n    this.options = _.extend(this.options, options);\n    $(\".tooltip\").remove();\n    if (this.options.fetched_permissions !== undefined){\n      if (this.options.fetched_permissions.access_dataset_roles.length === 0){\n        this.model.set({is_unrestricted:true});\n      } else{\n        this.model.set({is_unrestricted:false});\n      }\n    }\n    this.$el.html(template({item: this.model, is_admin: Galaxy.config.is_admin_user}));\n    $.get(Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?scope=current\")\n      .done(function(fetched_permissions){\n        self.prepareSelectBoxes({fetched_permissions: fetched_permissions, is_admin: Galaxy.config.is_admin_user});\n      })\n      .fail(function(){\n        mod_toastr.error('An error occurred while attempting to fetch dataset permissions.');\n      });\n    $(\"#center [data-toggle]\").tooltip();\n    $(\"#center\").css('overflow','auto');\n  },\n\n  _serializeRoles : function(role_list){\n    var selected_roles = [];\n    for (var i = 0; i < role_list.length; i++) {\n      // Replace the : and , in role's name since these are select2 separators for initialData\n      selected_roles.push(role_list[i][1] + ':' + role_list[i][0].replace(':', ' ').replace(',', ' &'));\n    }\n    return selected_roles;\n  },\n\n  prepareSelectBoxes: function(options){\n    this.options = _.extend(this.options, options);\n    this.accessSelectObject = new mod_select.View(\n      this._generate_select_options({\n        selector: 'access_perm',\n        initialData: this._serializeRoles(this.options.fetched_permissions.access_dataset_roles)\n      })\n    );\n    this.modifySelectObject = new mod_select.View(\n      this._generate_select_options({\n        selector: 'modify_perm',\n        initialData: this._serializeRoles(this.options.fetched_permissions.modify_item_roles)\n      })\n    );\n    this.manageSelectObject = new mod_select.View(\n      this._generate_select_options({\n        selector: 'manage_perm',\n        initialData: this._serializeRoles(this.options.fetched_permissions.manage_dataset_roles)\n      })\n    );\n  },\n\n  _generate_select_options: function(options){\n    var select_options = {\n      minimumInputLength: 0,\n      multiple: true,\n      placeholder: 'Click to select a role',\n      formatResult : function roleFormatResult(role) {\n          return role.name + ' type: ' + role.type;\n      },\n      formatSelection: function roleFormatSelection(role) {\n          return role.name;\n      },\n      initSelection: function(element, callback) {\n      // the input tag has a value attribute preloaded that points to a preselected role's id\n      // this function resolves that id attribute to an object that select2 can render\n      // using its formatResult renderer - that way the role name is shown preselected\n          var data = [];\n          $(element.val().split(\",\")).each(function() {\n              var item = this.split(':');\n              data.push({\n                  id: item[0],\n                  name: item[1]\n              });\n          });\n          callback(data);\n      },\n      dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n    }\n    select_options.container = this.$el.find('#' + options.selector);\n    select_options.css = options.selector;\n    select_options.initialData = options.initialData.join(',');\n    select_options.ajax = {\n      url: Galaxy.root + \"api/libraries/datasets/\" + this.id + \"/permissions?scope=available\",\n        dataType: 'json',\n        quietMillis: 100,\n        data: function (term, page) { // page is the one-based page number tracked by Select2\n            return {\n                q: term, //search term\n                page_limit: 10, // page size, should be same as used in 'more' variable below\n                page: page // page number\n            };\n        },\n        results: function (data, page) {\n            var more = (page * 10) < data.total; // whether or not there are more results available\n            // notice we return the value of more so Select2 knows if more results can be loaded\n            return {results: data.roles, more: more};\n        }\n    }\n    return select_options;\n  },\n\n  /**\n   * Save the changes made to the library dataset.\n   */\n  saveModifications: function(options){\n    var is_changed = false;\n    var ld = this.model;\n    var new_name = this.$el.find('.input_dataset_name').val();\n    if (typeof new_name !== 'undefined' && new_name !== ld.get('name') ){\n      if (new_name.length > 0){\n        ld.set(\"name\", new_name);\n        is_changed = true;\n      } else{\n        mod_toastr.warning('Library dataset name has to be at least 1 character long.');\n        return;\n      }\n    }\n    var new_info = this.$el.find('.input_dataset_misc_info').val();\n    if (typeof new_info !== 'undefined' && new_info !== ld.get('misc_info') ){\n        ld.set(\"misc_info\", new_info);\n        is_changed = true;\n    }\n    var new_genome_build = this.select_genome.$el.select2('data').id;\n    if (typeof new_genome_build !== 'undefined' && new_genome_build !== ld.get('genome_build') ){\n        ld.set(\"genome_build\", new_genome_build);\n        is_changed = true;\n    }\n    var new_ext = this.select_extension.$el.select2('data').id;\n    if (typeof new_ext !== 'undefined' && new_ext !== ld.get('file_ext') ){\n        ld.set(\"file_ext\", new_ext);\n        is_changed = true;\n    }\n    var dataset_view = this;\n    if (is_changed){\n      ld.save(null, {\n        patch: true,\n        success: function(ld) {\n          dataset_view.render()\n          mod_toastr.success('Changes to library dataset saved.');\n        },\n        error: function(model, response){\n          if (typeof response.responseJSON !== \"undefined\"){\n            mod_toastr.error(response.responseJSON.err_msg);\n          } else {\n            mod_toastr.error('An error occured while attempting to update the library dataset.');\n          }\n        }\n      });\n    } else {\n      dataset_view.render()\n      mod_toastr.info('Nothing has changed.');\n    }\n  },\n\n  copyToClipboard: function(){\n    var href = Backbone.history.location.href;\n    if (href.lastIndexOf('/permissions') !== -1){\n      href = href.substr(0, href.lastIndexOf('/permissions'));\n    }\n    window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", href);\n  },\n\n  makeDatasetPrivate: function(){\n    var self = this;\n    $.post( Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=make_private\").done(function(fetched_permissions) {\n      self.model.set({is_unrestricted: false});\n      self.showPermissions({fetched_permissions: fetched_permissions})\n      mod_toastr.success('The dataset is now private to you.');\n    }).fail(function(){\n      mod_toastr.error('An error occurred while attempting to make dataset private.');\n    });\n  },\n\n  removeDatasetRestrictions: function(){\n    var self = this;\n    $.post( Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=remove_restrictions\")\n    .done(function(fetched_permissions) {\n      self.model.set({is_unrestricted: true});\n      self.showPermissions({fetched_permissions: fetched_permissions})\n      mod_toastr.success('Access to this dataset is now unrestricted.');\n    })\n    .fail(function(){\n      mod_toastr.error('An error occurred while attempting to make dataset unrestricted.');\n    });\n  },\n\n  /**\n   * Extract the role ids from Select2 elements's 'data'\n   */\n  _extractIds: function(roles_list){\n    var ids_list = [];\n    for (var i = roles_list.length - 1; i >= 0; i--) {\n      ids_list.push(roles_list[i].id);\n    };\n    return ids_list;\n  },\n\n  /**\n   * Save the permissions for roles entered in the select boxes.\n   */\n  savePermissions: function(event){\n    var self = this;\n    var access_ids = this._extractIds(this.accessSelectObject.$el.select2('data'));\n    var manage_ids = this._extractIds(this.manageSelectObject.$el.select2('data'));\n    var modify_ids = this._extractIds(this.modifySelectObject.$el.select2('data'));\n    $.post( Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=set_permissions\", { 'access_ids[]': access_ids, 'manage_ids[]': manage_ids, 'modify_ids[]': modify_ids, } )\n    .done(function(fetched_permissions){\n      self.showPermissions({fetched_permissions: fetched_permissions})\n      mod_toastr.success('Permissions saved.');\n    })\n    .fail(function(){\n      mod_toastr.error('An error occurred while attempting to set dataset permissions.');\n    })\n  },\n\n  /**\n   * If needed request all extensions and/or genomes from Galaxy\n   * and save them in sorted arrays.\n   */\n  fetchExtAndGenomes: function(){\n    var that = this;\n    if (this.list_genomes.length == 0){\n      mod_utils.get({\n        url      : Galaxy.root + \"api/datatypes?extension_only=False\",\n        success  : function( datatypes ) {\n          for (var key in datatypes) {\n              that.list_extensions.push({\n                  id              : datatypes[key].extension,\n                  text            : datatypes[key].extension,\n                  description     : datatypes[key].description,\n                  description_url : datatypes[key].description_url\n              });\n          }\n          that.list_extensions.sort(function(a, b) {\n              return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n          });\n          that.list_extensions.unshift(that.auto);\n        }\n      });\n    }\n    if (this.list_extensions.length == 0){\n      mod_utils.get({\n        url     : Galaxy.root + \"api/genomes\",\n        success : function( genomes ) {\n          for (var key in genomes ) {\n              that.list_genomes.push({\n                  id      : genomes[key][1],\n                  text    : genomes[key][0]\n              });\n          }\n          that.list_genomes.sort(function(a, b) {\n              return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n          });\n        }\n      });\n    }\n  },\n\n  renderSelectBoxes: function(options){\n    // This won't work properly unlesss we already have the data fetched.\n    // See this.fetchExtAndGenomes()\n    // TODO switch to common resources:\n    // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n    var that = this;\n    var current_genome = '?';\n    var current_ext = 'auto';\n    if (typeof options !== 'undefined'){\n      if (typeof options.genome_build !== 'undefined'){\n        current_genome = options.genome_build;\n      }\n      if (typeof options.file_ext !== 'undefined'){\n        current_ext = options.file_ext;\n      }\n    }\n    this.select_genome = new mod_select.View( {\n        css: 'dataset-genome-select',\n        data: that.list_genomes,\n        container: that.$el.find('#dataset_genome_select'),\n        value: current_genome\n    } );\n    this.select_extension = new mod_select.View({\n      css: 'dataset-extension-select',\n      data: that.list_extensions,\n      container: that.$el.find('#dataset_extension_select'),\n      value: current_ext\n    });\n  },\n\n  templateDataset : function(){\n    return _.template([\n    // CONTAINER START\n    '<div class=\"library_style_container\">',\n      '<div id=\"library_toolbar\">',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download dataset\" class=\"btn btn-default toolbtn-download-dataset primary-button toolbar-item\" type=\"button\">',\n          '<span class=\"fa fa-download\"></span>',\n          '&nbsp;Download',\n        '</button>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import dataset into history\" class=\"btn btn-default toolbtn-import-dataset primary-button toolbar-item\" type=\"button\">',\n          '<span class=\"fa fa-book\"></span>',\n          '&nbsp;to History',\n        '</button>',\n        '<% if (item.get(\"can_user_modify\")) { %>',\n          '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify library item\" class=\"btn btn-default toolbtn_modify_dataset primary-button toolbar-item\" type=\"button\">',\n            '<span class=\"fa fa-pencil\"></span>',\n            '&nbsp;Modify',\n          '</button>',\n        '<% } %>',\n        '<% if (item.get(\"can_user_manage\")) { %>',\n          '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/permissions\">',\n            '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Manage permissions\" class=\"btn btn-default toolbtn_change_permissions primary-button toolbar-item\" type=\"button\">',\n              '<span class=\"fa fa-group\"></span>',\n              '&nbsp;Permissions',\n            '</button>',\n          '</a>',\n        '<% } %>',\n      '</div>',\n\n    // BREADCRUMBS\n    '<ol class=\"breadcrumb\">',\n      '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n      '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n        '<% if (path_item[0] != item.id) { %>',\n          '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n        '<% } else { %>',\n          '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n        '<% } %>',\n      '<% }); %>',\n    '</ol>',\n\n    '<% if (item.get(\"is_unrestricted\")) { %>',\n      '<div>',\n        'This dataset is unrestricted so everybody with the link can access it. Just share <span class=\"copy-link-to-clipboard\"><a>this page</a></span>.',\n      '</div>',\n    '<% } %>',\n\n    // TABLE START\n    '<div class=\"dataset_table\">',\n      '<table class=\"grid table table-striped table-condensed\">',\n        '<tr>',\n          '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n          '<td><%= _.escape(item.get(\"name\")) %></td>',\n        '</tr>',\n        '<% if (item.get(\"file_ext\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Data type</th>',\n            '<td><%= _.escape(item.get(\"file_ext\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"genome_build\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Genome build</th>',\n            '<td><%= _.escape(item.get(\"genome_build\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"file_size\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Size</th>',\n            '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"date_uploaded\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Date uploaded (UTC)</th>',\n            '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"uploaded_by\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Uploaded by</th>',\n            '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"metadata_data_lines\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Data Lines</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"metadata_comment_lines\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Comment Lines</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"metadata_columns\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Number of Columns</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"metadata_column_types\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Column Types</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"message\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Message</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"misc_blurb\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Misc. blurb</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"misc_info\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Misc. info</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"misc_info\")) %></td>',\n          '</tr>',\n        '<% } %>',\n        '<% if (item.get(\"tags\")) { %>',\n          '<tr>',\n            '<th scope=\"row\">Tags</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n          '</tr>',\n        '<% } %>',\n      '</table>',\n\n    '<div>',\n      '<pre class=\"peek\">',\n      '</pre>',\n    '</div>',\n\n    '<% if (item.get(\"has_versions\")) { %>',\n      '<div>',\n        '<h3>Expired versions:</h3>',\n        '<ul>',\n          '<% _.each(item.get(\"expired_versions\"), function(version) { %>',\n            '<li><a title=\"See details of this version\" href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/versions/<%- version[0] %>\"><%- version[1] %></a></li>',\n          '<% }) %>',\n        '<ul>',\n      '</div>',\n    '<% } %>',\n    // TABLE END\n    '</div>',\n    // CONTAINER END\n    '</div>'\n    ].join(''));\n  },\n\n  templateVersion : function(){\n    return _.template([\n    // CONTAINER START\n    '<div class=\"library_style_container\">',\n      '<div id=\"library_toolbar\">',\n        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n          '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go to latest dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n            '<span class=\"fa fa-caret-left fa-lg\"></span>',\n            '&nbsp;Latest dataset',\n          '</button>',\n        '<a>',\n      '</div>',\n\n      // BREADCRUMBS\n      '<ol class=\"breadcrumb\">',\n        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n          '<% if (path_item[0] != item.id) { %>',\n            '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n          '<% } else { %>',\n            '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n          '<% } %>',\n        '<% }); %>',\n      '</ol>',\n\n      '<div class=\"alert alert-warning\">This is an expired version of the library dataset: <%= _.escape(item.get(\"name\")) %></div>',\n      // DATASET START\n      '<div class=\"dataset_table\">',\n        '<table class=\"grid table table-striped table-condensed\">',\n          '<tr>',\n            '<th scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(ldda.id) %>\">Name</th>',\n            '<td><%= _.escape(ldda.get(\"name\")) %></td>',\n          '</tr>',\n          '<% if (ldda.get(\"file_ext\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Data type</th>',\n              '<td><%= _.escape(ldda.get(\"file_ext\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"genome_build\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Genome build</th>',\n              '<td><%= _.escape(ldda.get(\"genome_build\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"file_size\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Size</th>',\n              '<td><%= _.escape(ldda.get(\"file_size\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"date_uploaded\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Date uploaded (UTC)</th>',\n              '<td><%= _.escape(ldda.get(\"date_uploaded\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"uploaded_by\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Uploaded by</th>',\n              '<td><%= _.escape(ldda.get(\"uploaded_by\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"metadata_data_lines\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Data Lines</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_data_lines\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"metadata_comment_lines\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Comment Lines</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_comment_lines\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"metadata_columns\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Number of Columns</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_columns\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"metadata_column_types\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Column Types</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_column_types\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"message\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Message</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"message\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"misc_blurb\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Miscellaneous blurb</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_blurb\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (ldda.get(\"misc_info\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Miscellaneous information</th>',\n              '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_info\")) %></td>',\n            '</tr>',\n          '<% } %>',\n          '<% if (item.get(\"tags\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Tags</th>',\n              '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n            '</tr>',\n          '<% } %>',\n        '</table>',\n        '<div>',\n          '<pre class=\"peek\">',\n          '</pre>',\n        '</div>',\n      // DATASET END\n      '</div>',\n    // CONTAINER END\n    '</div>'\n    ].join(''));\n  },\n\n  templateModifyDataset : function(){\n    return _.template([\n    // CONTAINER START\n    '<div class=\"library_style_container\">',\n      '<div id=\"library_toolbar\">',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Cancel modifications\" class=\"btn btn-default toolbtn_cancel_modifications primary-button toolbar-item\" type=\"button\">',\n          '<span class=\"fa fa-times\"></span>',\n          '&nbsp;Cancel',\n        '</button>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_modifications primary-button toolbar-item\" type=\"button\">',\n          '<span class=\"fa fa-floppy-o\"></span>',\n          '&nbsp;Save',\n        '</button>',\n      '</div>',\n\n      // BREADCRUMBS\n      '<ol class=\"breadcrumb\">',\n        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n          '<% if (path_item[0] != item.id) { %>',\n            '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n          '<% } else { %>',\n            '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n          '<% } %>',\n        '<% }); %>',\n      '</ol>',\n\n      '<div class=\"dataset_table\">',\n        '<table class=\"grid table table-striped table-condensed\">',\n          '<tr>',\n            '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n            '<td><input class=\"input_dataset_name form-control\" type=\"text\" placeholder=\"name\" value=\"<%= _.escape(item.get(\"name\")) %>\"></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Data type</th>',\n            '<td>',\n              '<span id=\"dataset_extension_select\" class=\"dataset-extension-select\" />',\n            '</td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Genome build</th>',\n            '<td>',\n              '<span id=\"dataset_genome_select\" class=\"dataset-genome-select\" />',\n            '</td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Size</th>',\n            '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Date uploaded (UTC)</th>',\n            '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Uploaded by</th>',\n            '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n          '</tr>',\n          '<tr scope=\"row\">',\n            '<th scope=\"row\">Data Lines</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n          '</tr>',\n            '<th scope=\"row\">Comment Lines</th>',\n            '<% if (item.get(\"metadata_comment_lines\") === \"\") { %>',\n              '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n            '<% } else { %>',\n              '<td scope=\"row\">unknown</td>',\n            '<% } %>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Number of Columns</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Column Types</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Message</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Misc. blurb</th>',\n            '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n          '</tr>',\n          '<tr>',\n            '<th scope=\"row\">Misc. information</th>',\n            '<td><input class=\"input_dataset_misc_info form-control\" type=\"text\" placeholder=\"info\" value=\"<%= _.escape(item.get(\"misc_info\")) %>\"></td>',\n          '</tr>',\n          //TODO: add functionality to modify tags here\n          '<% if (item.get(\"tags\")) { %>',\n            '<tr>',\n              '<th scope=\"row\">Tags</th>',\n              '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n            '</tr>',\n          '<% } %>',\n        '</table>',\n        '<div>',\n          '<pre class=\"peek\">',\n          '</pre>',\n        '</div>',\n      '</div>',\n    // CONTAINER END\n    '</div>'\n    ].join(''));\n  },\n\n  templateDatasetPermissions : function(){\n    return _.template([\n    // CONTAINER START\n    '<div class=\"library_style_container\">',\n      '<div id=\"library_toolbar\">',\n        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n          '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n            '<span class=\"fa fa-file-o\"></span>',\n            '&nbsp;Dataset Details',\n          '</button>',\n        '<a>',\n      '</div>',\n\n      // BREADCRUMBS\n      '<ol class=\"breadcrumb\">',\n        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n          '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n            '<% if (path_item[0] != item.id) { %>',\n              '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n            '<% } else { %>',\n              '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n            '<% } %>',\n        '<% }); %>',\n      '</ol>',\n\n      '<h1>Dataset: <%= _.escape(item.get(\"name\")) %></h1>',\n      '<div class=\"alert alert-warning\">',\n        '<% if (is_admin) { %>',\n          'You are logged in as an <strong>administrator</strong> therefore you can manage any dataset on this Galaxy instance. Please make sure you understand the consequences.',\n        '<% } else { %>',\n          'You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.',\n        '<% } %>',\n      '</div>',\n      '<div class=\"dataset_table\">',\n        '<h2>Library-related permissions</h2>',\n        '<h4>Roles that can modify the library item</h4>',\n        '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"></div>',\n        '<div class=\"alert alert-info roles-selection\">User with <strong>any</strong> of these roles can modify name, metadata, and other information about this library item.</div>',\n        '<hr/>',\n        '<h2>Dataset-related permissions</h2>',\n        '<div class=\"alert alert-warning\">Changes made below will affect <strong>every</strong> library item that was created from this dataset and also every history this dataset is part of.</div>',\n        '<% if (!item.get(\"is_unrestricted\")) { %>',\n          '<p>You can <span class=\"remove-restrictions\"><a>remove all access restrictions</a></span> on this dataset.</p>',\n        '<% } else { %>',\n          '<p>You can <span class=\"make-private\"><a>make this dataset private</a></span> to you.</p>',\n        '<% } %>',\n        '<h4>Roles that can access the dataset</h4>',\n        '<div id=\"access_perm\" class=\"access_perm roles-selection\"></div>',\n        '<div class=\"alert alert-info roles-selection\">',\n          'User has to have <strong>all these roles</strong> in order to access this dataset.',\n          ' Users without access permission <strong>cannot</strong> have other permissions on this dataset.',\n          ' If there are no access roles set on the dataset it is considered <strong>unrestricted</strong>.',\n        '</div>',\n        '<h4>Roles that can manage permissions on the dataset</h4>',\n        '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"></div>',\n        '<div class=\"alert alert-info roles-selection\">',\n          'User with <strong>any</strong> of these roles can manage permissions of this dataset. If you remove yourself you will lose the ability manage this dataset unless you are an admin.',\n        '</div>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n          '<span class=\"fa fa-floppy-o\"></span>',\n          '&nbsp;Save',\n        '</button>',\n      '</div>',\n    // CONTAINER END\n    '</div>'\n    ].join(''));\n  },\n\n  templateBulkImportInModal: function(){\n    return _.template([\n    '<div>',\n      '<div class=\"library-modal-item\">',\n        'Select history: ',\n        '<select id=\"dataset_import_single\" name=\"dataset_import_single\" style=\"width:50%; margin-bottom: 1em; \" autofocus>',\n          '<% _.each(histories, function(history) { %>',\n            '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n          '<% }); %>',\n        '</select>',\n      '</div>',\n      '<div class=\"library-modal-item\">',\n        'or create new: ',\n        '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">',\n        '</input>',\n      '</div>',\n    '</div>'\n    ].join(''));\n  }\n});\n\nreturn {\n    LibraryDatasetView: LibraryDatasetView\n};\n\n});\n"]}