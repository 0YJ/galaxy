{"version":3,"sources":["mvc/library/library-folderrow-view.js"],"names":["FolderRowView","Backbone","View","extend","events","click .undelete_dataset_btn","click .undelete_folder_btn","click .edit_folder_btn","click .cancel_folder_btn","click .save_folder_btn","defaults","type","visibility_config","edit_folder_btn","save_folder_btn","cancel_folder_btn","permission_folder_btn","initialize","options","this","_","render","model","edit_mode","folder_item","get","prepareButtons","template","templateRowFolder","templateRowFile","Galaxy","emit","content_item","error","folder","vis_config","showDatasetDetails","libraries","datasetView","_libraryDatasetView2","default","LibraryDatasetView","id","undeleteDataset","event","$","hide","target","closest","that","data","dataset_id","dataset","folderListView","collection","success","urlRoot","response","updated_dataset","sortFolder","add","onclick","window","_toastr2","folder_id","location","root","url","destroy","responseJSON","undeleteFolder","startModifications","remove","updated_folder","_libraryModel2","FolderAsModel","cancelModifications","repaint","saveModifications","is_changed","new_name","err_msg","save","patch","$el","val","length","old_element","set","new_description","find","tooltip","row_view","templateRowDeletedFile","templateRowDeletedFolder","info","replaceWith","join"],"mappings":"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AAIM,KAAK,iBAAiBC,WAGnC/D,kBAAmB,WACf,OAAOR,EAAEO,UAED,6EACA,OACA,gDACA,QACA,mFACA,yBACA,OACA,gFACA,QACA,OACA,yCACA,QACA,8BACA,oIACA,yJACA,UACA,kBACA,YACA,OACA,mDACA,QACA,YACA,OACA,wBACA,4NACA,sCACA,YACA,mOACA,qCACA,YACA,+BACA,0PACA,oCACA,YACA,0DACA,gQACA,qCACA,YACA,OACA,UACA,QACA,SACFsE,KAAK,MAIfpE,gBAAiB,WACb,OAAOT,EAAEO,UAED,8EACA,OACA,+CACA,QACA,oCACA,6CACA,QACA,OACA,mHACA,kCACA,MACA,QACA,8CACA,yDACA,0DACA,4DACA,OACA,oDACA,6CACA,UACA,QACA,OACA,mDACA,gIACA,UACA,8CACA,yHACA,UACA,6GACA,+HACA,UACA,8CACA,uGACA,uKACA,qCACA,YACA,OACA,UACA,QACA,SACFsE,KAAK,MAIfJ,uBAAwB,WACpB,OAAOzE,EAAEO,UAED,mFACA,OACA,+CACA,QACA,YACA,2BACA,kCACA,QACA,OACA,qCACA,QACA,OACA,gDACA,QACA,OACA,iDACA,QACA,OACA,mDACA,QACA,OACA,oDACA,6CACA,UACA,QACA,OACA,wHACA,qMACA,wCACA,YACA,QACA,SACFsE,KAAK,MAIfH,yBAA0B,WACtB,OAAO1E,EAAEO,UAED,wFACA,OACA,gDACA,QACA,YACA,2BACA,kCACA,QACA,OACA,yCACA,QACA,OACA,SACA,QACA,YACA,OACA,mDACA,QACA,YACA,OACA,wHACA,oMACA,wCACA,YACA,QACA,SACFsE,KAAK,mBAMfjG,cAAeA","file":"../../../scripts/mvc/library/library-folderrow-view.js","sourcesContent":["import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_library_dataset_view from \"mvc/library/library-dataset-view\";\nvar FolderRowView = Backbone.View.extend({\n    events: {\n        \"click .undelete_dataset_btn\": \"undeleteDataset\",\n        \"click .undelete_folder_btn\": \"undeleteFolder\",\n        \"click .edit_folder_btn\": \"startModifications\",\n        \"click .cancel_folder_btn\": \"cancelModifications\",\n        \"click .save_folder_btn\": \"saveModifications\"\n    },\n\n    defaults: {\n        type: null,\n        visibility_config: {\n            edit_folder_btn: false,\n            save_folder_btn: false,\n            cancel_folder_btn: false,\n            permission_folder_btn: false\n        },\n        edit_mode: false\n    },\n\n    initialize: function(options) {\n        this.options = _.defaults(options || {}, this.defaults);\n        this.render(this.options);\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        var folder_item = this.options.model;\n        var template = null;\n\n        if (\n            folder_item.get(\"type\") === \"folder\" ||\n            folder_item.get(\"model_class\") === \"LibraryFolder\"\n        ) {\n            this.options.type = \"folder\";\n            this.prepareButtons(folder_item);\n            if (folder_item.get(\"deleted\")) {\n                template = this.templateRowDeletedFolder();\n            } else {\n                template = this.templateRowFolder();\n            }\n        } else if (\n            folder_item.get(\"type\") === \"file\" ||\n            folder_item.get(\"model_class\") ===\n                \"LibraryDatasetDatasetAssociation\" ||\n            folder_item.get(\"model_class\") === \"LibraryDataset\"\n        ) {\n            this.options.type = \"file\";\n            if (folder_item.get(\"deleted\")) {\n                template = this.templateRowDeletedFile();\n            } else {\n                template = this.templateRowFile();\n            }\n        } else {\n            Galaxy.emit.error(\"Unknown library item type found.\");\n            Galaxy.emit.error(\n                folder_item.get(\"type\") || folder_item.get(\"model_class\")\n            );\n        }\n        this.setElement(\n            template({\n                content_item: folder_item,\n                edit_mode: this.options.edit_mode,\n                button_config: this.options.visibility_config\n            })\n        );\n        this.$el.show();\n        return this;\n    },\n\n    /**\n   * Modify the visibility of buttons for\n   * the filling of the row template of a given folder.\n   */\n    prepareButtons: function(folder) {\n        var vis_config = this.options.visibility_config;\n        if (this.options.edit_mode === false) {\n            vis_config.save_folder_btn = false;\n            vis_config.cancel_folder_btn = false;\n            if (folder.get(\"deleted\") === true) {\n                vis_config.edit_folder_btn = false;\n                vis_config.permission_folder_btn = false;\n            } else if (folder.get(\"deleted\") === false) {\n                vis_config.save_folder_btn = false;\n                vis_config.cancel_folder_btn = false;\n                if (folder.get(\"can_modify\") === true) {\n                    vis_config.edit_folder_btn = true;\n                }\n                if (folder.get(\"can_manage\") === true) {\n                    vis_config.permission_folder_btn = true;\n                }\n            }\n        } else if (this.options.edit_mode === true) {\n            vis_config.edit_folder_btn = false;\n            vis_config.permission_folder_btn = false;\n            vis_config.save_folder_btn = true;\n            vis_config.cancel_folder_btn = true;\n        }\n        this.options.visibility_config = vis_config;\n    },\n\n    /* Show the page with dataset details. */\n    showDatasetDetails: function() {\n        Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView(\n            { id: this.id }\n        );\n    },\n\n    /* Undelete the dataset on server and render the row again. */\n    undeleteDataset: function(event) {\n        $(\".tooltip\").hide();\n        var that = this;\n        var dataset_id = $(event.target)\n            .closest(\"tr\")\n            .data(\"id\");\n        var dataset = Galaxy.libraries.folderListView.collection.get(\n            dataset_id\n        );\n        dataset.url = dataset.urlRoot + dataset.id + \"?undelete=true\";\n        dataset.destroy({\n            success: function(model, response) {\n                Galaxy.libraries.folderListView.collection.remove(dataset_id);\n                var updated_dataset = new mod_library_model.Item(response);\n                Galaxy.libraries.folderListView.collection.add(updated_dataset);\n                Galaxy.libraries.folderListView.collection.sortFolder(\n                    \"name\",\n                    \"asc\"\n                );\n                mod_toastr.success(\n                    \"Dataset undeleted. Click this to see it.\",\n                    \"\",\n                    {\n                        onclick: function() {\n                            var folder_id = that.model.get(\"folder_id\");\n                            window.location =\n                                Galaxy.root +\n                                \"library/list#folders/\" +\n                                folder_id +\n                                \"/datasets/\" +\n                                that.id;\n                        }\n                    }\n                );\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(\n                        \"Dataset was not undeleted. \" +\n                            response.responseJSON.err_msg\n                    );\n                } else {\n                    mod_toastr.error(\n                        \"An error occured! Dataset was not undeleted. Please try again.\"\n                    );\n                }\n            }\n        });\n    },\n\n    /* Undelete the folder on server and render the row again. */\n    undeleteFolder: function(event) {\n        $(\".tooltip\").hide();\n        var that = this;\n        var folder_id = $(event.target)\n            .closest(\"tr\")\n            .data(\"id\");\n        var folder = Galaxy.libraries.folderListView.collection.get(folder_id);\n        folder.url = folder.urlRoot + folder.id + \"?undelete=true\";\n        folder.destroy({\n            success: function(model, response) {\n                Galaxy.libraries.folderListView.collection.remove(folder_id);\n                var updated_folder = new mod_library_model.FolderAsModel(\n                    response\n                );\n                Galaxy.libraries.folderListView.collection.add(updated_folder);\n                Galaxy.libraries.folderListView.collection.sortFolder(\n                    \"name\",\n                    \"asc\"\n                );\n                mod_toastr.success(\"Folder undeleted.\");\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(\n                        \"Folder was not undeleted. \" +\n                            response.responseJSON.err_msg\n                    );\n                } else {\n                    mod_toastr.error(\n                        \"An error occured! Folder was not undeleted. Please try again.\"\n                    );\n                }\n            }\n        });\n    },\n\n    /* User clicked the 'edit' button on row so render the row as editable. */\n    startModifications: function() {\n        this.options.edit_mode = true;\n        this.repaint();\n    },\n\n    /* User clicked the 'cancel' button so render normal row */\n    cancelModifications: function() {\n        this.options.edit_mode = false;\n        this.repaint();\n    },\n\n    saveModifications: function() {\n        var folder = Galaxy.libraries.folderListView.collection.get(\n            this.$el.data(\"id\")\n        );\n        var is_changed = false;\n        var new_name = this.$el.find(\".input_folder_name\").val();\n        if (\n            typeof new_name !== \"undefined\" &&\n            new_name !== folder.get(\"name\")\n        ) {\n            if (new_name.length > 2) {\n                folder.set(\"name\", new_name);\n                is_changed = true;\n            } else {\n                mod_toastr.warning(\n                    \"Folder name has to be at least 3 characters long.\"\n                );\n                return;\n            }\n        }\n        var new_description = this.$el.find(\".input_folder_description\").val();\n        if (\n            typeof new_description !== \"undefined\" &&\n            new_description !== folder.get(\"description\")\n        ) {\n            folder.set(\"description\", new_description);\n            is_changed = true;\n        }\n        if (is_changed) {\n            var row_view = this;\n            folder.save(null, {\n                patch: true,\n                success: function(folder) {\n                    row_view.options.edit_mode = false;\n                    row_view.repaint(folder);\n                    mod_toastr.success(\"Changes to folder saved.\");\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\n                            \"An error occured while attempting to update the folder.\"\n                        );\n                    }\n                }\n            });\n        } else {\n            this.options.edit_mode = false;\n            this.repaint(folder);\n            mod_toastr.info(\"Nothing has changed.\");\n        }\n    },\n\n    repaint: function() {\n        /* need to hide manually because of the element removal in setElement\n    invoked in render() */\n        $(\".tooltip\").hide();\n        /* we need to store the old element to be able to replace it with\n    new one */\n        var old_element = this.$el;\n        /* if user canceled the folder param is undefined,\n      if user saved and succeeded the updated folder is rendered */\n        this.render();\n        old_element.replaceWith(this.$el);\n        /* now we attach new tooltips to the newly created row element */\n        this.$el.find(\"[data-toggle]\").tooltip();\n    },\n\n    templateRowFolder: function() {\n        return _.template(\n            [\n                '<tr class=\"folder_row light library-row\" data-id=\"<%- content_item.id %>\">',\n                \"<td>\",\n                '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n                \"</td>\",\n                '<td style=\"text-align: center; \"><input style=\"margin: 0;\" type=\"checkbox\"></td>',\n                \"<% if(!edit_mode) { %>\",\n                \"<td>\",\n                '<a href=\"#folders/<%- content_item.id %>\"><%- content_item.get(\"name\") %></a>',\n                \"</td>\",\n                \"<td>\",\n                '<%- content_item.get(\"description\") %>',\n                \"</td>\",\n                \"<% } else if(edit_mode){ %>\",\n                '<td><textarea rows=\"4\" class=\"form-control input_folder_name\" placeholder=\"name\" ><%- content_item.get(\"name\") %></textarea></td>',\n                '<td><textarea rows=\"4\" class=\"form-control input_folder_description\" placeholder=\"description\" ><%- content_item.get(\"description\") %></textarea></td>',\n                \"<% } %>\",\n                \"<td>folder</td>\",\n                \"<td></td>\",\n                \"<td>\",\n                '<%= _.escape(content_item.get(\"update_time\")) %>',\n                \"</td>\",\n                \"<td></td>\",\n                \"<td>\",\n                \"<% if(edit_mode) { %>\", // start edit mode\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save changes\" class=\"primary-button btn-xs save_folder_btn\" type=\"button\" style=\"<% if(button_config.save_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-floppy-o\"/> Save',\n                \"</button>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Discard changes\" class=\"primary-button btn-xs cancel_folder_btn\" type=\"button\" style=\"<% if(button_config.cancel_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-times\"/> Cancel',\n                \"</button>\",\n                \"<% } else if (!edit_mode){%>\", // start no edit mode\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs edit_folder_btn\" type=\"button\" style=\"<% if(button_config.edit_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-pencil\"/> Edit',\n                \"</button>\",\n                '<a href=\"#/folders/<%- content_item.id %>/permissions\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permission_folder_btn\" title=\"Permissions of \\'<%- content_item.get(\"name\") %>\\'\" style=\"<% if(button_config.permission_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-group\"/> Manage',\n                \"</button>\",\n                \"</a>\",\n                \"<% } %>\", //end no edit mode\n                \"</td>\",\n                \"</tr>\"\n            ].join(\"\")\n        );\n    },\n\n    templateRowFile: function() {\n        return _.template(\n            [\n                '<tr class=\"dataset_row light library-row\" data-id=\"<%- content_item.id %>\">',\n                \"<td>\",\n                '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n                \"</td>\",\n                '<td style=\"text-align: center; \">',\n                '<input style=\"margin: 0;\" type=\"checkbox\">',\n                \"</td>\",\n                \"<td>\",\n                '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>\" class=\"library-dataset\">',\n                '<%- content_item.get(\"name\") %>',\n                \"<a>\",\n                \"</td>\",\n                '<td><%- content_item.get(\"message\") %></td>',\n                '<td><%= _.escape(content_item.get(\"file_ext\")) %></td>',\n                '<td><%= _.escape(content_item.get(\"file_size\")) %></td>',\n                '<td><%= _.escape(content_item.get(\"update_time\")) %></td>',\n                \"<td>\",\n                '<% if ( content_item.get(\"state\") !== \"ok\" ) { %>',\n                '<%= _.escape(content_item.get(\"state\")) %>',\n                \"<% } %>\",\n                \"</td>\",\n                \"<td>\",\n                '<% if (content_item.get(\"is_unrestricted\")) { %>',\n                '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Unrestricted dataset\" style=\"color:grey;\" class=\"fa fa-globe fa-lg\"/>',\n                \"<% } %>\",\n                '<% if (content_item.get(\"is_private\")) { %>',\n                '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Private dataset\" style=\"color:grey;\" class=\"fa fa-key fa-lg\"/>',\n                \"<% } %>\",\n                '<% if ((content_item.get(\"is_unrestricted\") === false) && (content_item.get(\"is_private\") === false)) { %>',\n                '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Restricted dataset\" style=\"color:grey;\" class=\"fa fa-shield fa-lg\"/>',\n                \"<% } %>\",\n                '<% if (content_item.get(\"can_manage\")) { %>',\n                '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>/permissions\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permissions-dataset-btn\" title=\"Permissions of \\'<%- content_item.get(\"name\") %>\\'\">',\n                '<span class=\"fa fa-group\"/> Manage',\n                \"</button>\",\n                \"</a>\",\n                \"<% } %>\",\n                \"</td>\",\n                \"</tr>\"\n            ].join(\"\")\n        );\n    },\n\n    templateRowDeletedFile: function() {\n        return _.template(\n            [\n                '<tr class=\"active deleted_dataset library-row\" data-id=\"<%- content_item.id %>\">',\n                \"<td>\",\n                '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n                \"</td>\",\n                \"<td></td>\",\n                '<td style=\"color:grey;\">',\n                '<%- content_item.get(\"name\") %>',\n                \"</td>\",\n                \"<td>\",\n                '<%- content_item.get(\"message\") %>',\n                \"</td>\",\n                \"<td>\",\n                '<%= _.escape(content_item.get(\"file_ext\")) %>',\n                \"</td>\",\n                \"<td>\",\n                '<%= _.escape(content_item.get(\"file_size\")) %>',\n                \"</td>\",\n                \"<td>\",\n                '<%= _.escape(content_item.get(\"update_time\")) %>',\n                \"</td>\",\n                \"<td>\",\n                '<% if ( content_item.get(\"state\") !== \"ok\" ) { %>',\n                '<%= _.escape(content_item.get(\"state\")) %>',\n                \"<% } %>\",\n                \"</td>\",\n                \"<td>\",\n                '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs undelete_dataset_btn\" type=\"button\" style=\"margin-left:1em;\">',\n                '<span class=\"fa fa-unlock\"/> Undelete',\n                \"</button>\",\n                \"</td>\",\n                \"</tr>\"\n            ].join(\"\")\n        );\n    },\n\n    templateRowDeletedFolder: function() {\n        return _.template(\n            [\n                '<tr class=\"active deleted_folder light library-row\" data-id=\"<%- content_item.id %>\">',\n                \"<td>\",\n                '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n                \"</td>\",\n                \"<td></td>\",\n                '<td style=\"color:grey;\">',\n                '<%- content_item.get(\"name\") %>',\n                \"</td>\",\n                \"<td>\",\n                '<%- content_item.get(\"description\") %>',\n                \"</td>\",\n                \"<td>\",\n                \"folder\",\n                \"</td>\",\n                \"<td></td>\",\n                \"<td>\",\n                '<%= _.escape(content_item.get(\"update_time\")) %>',\n                \"</td>\",\n                \"<td></td>\",\n                \"<td>\",\n                '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs undelete_folder_btn\" type=\"button\" style=\"margin-left:1em;\">',\n                '<span class=\"fa fa-unlock\"/> Undelete',\n                \"</button>\",\n                \"</td>\",\n                \"</tr>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    FolderRowView: FolderRowView\n};\n"]}