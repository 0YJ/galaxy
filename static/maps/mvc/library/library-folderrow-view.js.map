{"version":3,"sources":["mvc/library/library-folderrow-view.js"],"names":["define","mod_toastr","mod_library_model","mod_library_dataset_view","FolderRowView","Backbone","View","extend","events","click .undelete_dataset_btn","click .undelete_folder_btn","click .edit_folder_btn","click .cancel_folder_btn","defaults","edit_folder_btn","save_folder_btn","cancel_folder_btn","permission_folder_btn","edit_mode","initialize","options","this","_","render","template","folder_item","get","model","vis_config","templateRowDeletedFolder","type","prepareButtons","templateRowFolder","Galaxy","error","content_item","button_config","templateRowFile","emit","folder","visibility_config","$el","show","showDatasetDetails","hide","that","dataset_id","closest","dataset","folderListView","success","libraries","LibraryDatasetView","onclick","undeleteDataset","event","collection","url","urlRoot","id","destroy","response","undeleteFolder","remove","folder_id","Item","add","updated_folder","FolderAsModel","responseJSON","root","err_msg","is_changed","warning","data","new_description","set","row_view","patch","repaint","sortByNameAsc","info","startModifications","old_element","replaceWith","new_name","find","val","length","templateRowDeletedFile","save","$","tooltip","join"],"mappings":"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OV,EAAEE,UAED,6EACA,OACA,gDACA,QACA,mFACA,yBACA,OACA,gFACA,QACA,OACA,yCACA,QACA,8BACA,oIACA,yJACA,UACA,kBACA,YACA,OACA,mDACA,QACA,OACA,wBACA,4NACA,iCACA,aACA,YACA,mOACA,8BACA,eACA,YACA,+BACA,0PACA,+BACA,YACA,0DACA,wPACA,8BACA,YACA,OACA,UACA,QACA,SACFqE,KAAK,MAIfxD,gBAAiB,WACb,OAAOf,EAAEE,UAED,8EACA,OACA,+CACA,QACA,oCACA,6CACA,QACA,OACA,mHACA,kCACA,MACA,QACA,8CACA,yDACA,0DACA,4DACA,OACA,mDACA,gIACA,UACA,8CACA,yHACA,UACA,6GACA,+HACA,UACA,8CACA,uGACA,uIACA,8BACA,YACA,OACA,UACA,QACA,SACFqE,KAAK,MAIfJ,uBAAwB,WACpB,OAAOnE,EAAEE,UAED,mFACA,OACA,+CACA,QACA,YACA,2BACA,kCACA,QACA,OACA,qCACA,QACA,OACA,gDACA,QACA,OACA,iDACA,QACA,OACA,mDACA,QACA,OACA,wHACA,iMACA,+BACA,iBACA,YACA,QACA,SACFqE,KAAK,MAIfhE,yBAA0B,WACtB,OAAOP,EAAEE,UAED,wFACA,OACA,gDACA,QACA,YACA,2BACA,kCACA,QACA,OACA,yCACA,QACA,OACA,SACA,QACA,YACA,OACA,mDACA,QACA,OACA,wHACA,gMACA,+BACA,iBACA,YACA,QACA,SACFqE,KAAK","file":"../../../scripts/mvc/library/library-folderrow-view.js","sourcesContent":["define(\n    [\n        \"libs/toastr\",\n        \"mvc/library/library-model\",\n        \"mvc/library/library-dataset-view\"\n    ],\n    function(mod_toastr, mod_library_model, mod_library_dataset_view) {\n        var FolderRowView = Backbone.View.extend({\n            events: {\n                \"click .undelete_dataset_btn\": \"undeleteDataset\",\n                \"click .undelete_folder_btn\": \"undeleteFolder\",\n                \"click .edit_folder_btn\": \"startModifications\",\n                \"click .cancel_folder_btn\": \"cancelModifications\",\n                \"click .save_folder_btn\": \"saveModifications\"\n            },\n\n            defaults: {\n                type: null,\n                visibility_config: {\n                    edit_folder_btn: true,\n                    save_folder_btn: false,\n                    cancel_folder_btn: false,\n                    permission_folder_btn: true\n                },\n                edit_mode: false\n            },\n\n            initialize: function(options) {\n                this.options = _.defaults(options || {}, this.defaults);\n                this.render(this.options);\n            },\n\n            render: function(options) {\n                this.options = _.extend(this.options, options);\n                var folder_item = this.options.model;\n                var template = null;\n\n                if (\n                    folder_item.get(\"type\") === \"folder\" ||\n                    folder_item.get(\"model_class\") === \"LibraryFolder\"\n                ) {\n                    this.options.type = \"folder\";\n                    this.prepareButtons(folder_item);\n                    if (folder_item.get(\"deleted\")) {\n                        template = this.templateRowDeletedFolder();\n                    } else {\n                        template = this.templateRowFolder();\n                    }\n                } else if (\n                    folder_item.get(\"type\") === \"file\" ||\n                    folder_item.get(\"model_class\") ===\n                        \"LibraryDatasetDatasetAssociation\" ||\n                    folder_item.get(\"model_class\") === \"LibraryDataset\"\n                ) {\n                    this.options.type = \"file\";\n                    if (folder_item.get(\"deleted\")) {\n                        template = this.templateRowDeletedFile();\n                    } else {\n                        template = this.templateRowFile();\n                    }\n                } else {\n                    Galaxy.emit.error(\"Unknown library item type found.\");\n                    Galaxy.emit.error(\n                        folder_item.get(\"type\") ||\n                            folder_item.get(\"model_class\")\n                    );\n                }\n                this.setElement(\n                    template({\n                        content_item: folder_item,\n                        edit_mode: this.options.edit_mode,\n                        button_config: this.options.visibility_config\n                    })\n                );\n                this.$el.show();\n                return this;\n            },\n\n            /**\n   * Modify the visibility of buttons for\n   * the filling of the row template of a given folder.\n   */\n            prepareButtons: function(folder) {\n                var vis_config = this.options.visibility_config;\n                if (this.options.edit_mode === false) {\n                    vis_config.save_folder_btn = false;\n                    vis_config.cancel_folder_btn = false;\n                    if (folder.get(\"deleted\") === true) {\n                        vis_config.edit_folder_btn = false;\n                        vis_config.permission_folder_btn = false;\n                    } else if (folder.get(\"deleted\") === false) {\n                        vis_config.save_folder_btn = false;\n                        vis_config.cancel_folder_btn = false;\n                        if (folder.get(\"can_modify\") === true) {\n                            vis_config.edit_folder_btn = true;\n                        }\n                        if (folder.get(\"can_manage\") === true) {\n                            vis_config.permission_folder_btn = true;\n                        }\n                    }\n                } else if (this.options.edit_mode === true) {\n                    vis_config.edit_folder_btn = false;\n                    vis_config.permission_folder_btn = false;\n                    vis_config.save_folder_btn = true;\n                    vis_config.cancel_folder_btn = true;\n                }\n                this.options.visibility_config = vis_config;\n            },\n\n            /* Show the page with dataset details. */\n            showDatasetDetails: function() {\n                Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView(\n                    { id: this.id }\n                );\n            },\n\n            /* Undelete the dataset on server and render the row again. */\n            undeleteDataset: function(event) {\n                $(\".tooltip\").hide();\n                var that = this;\n                var dataset_id = $(event.target)\n                    .closest(\"tr\")\n                    .data(\"id\");\n                var dataset = Galaxy.libraries.folderListView.collection.get(\n                    dataset_id\n                );\n                dataset.url = dataset.urlRoot + dataset.id + \"?undelete=true\";\n                dataset.destroy({\n                    success: function(model, response) {\n                        Galaxy.libraries.folderListView.collection.remove(\n                            dataset_id\n                        );\n                        var updated_dataset = new mod_library_model.Item(\n                            response\n                        );\n                        Galaxy.libraries.folderListView.collection.add(\n                            updated_dataset\n                        );\n                        Galaxy.libraries.folderListView.collection.sortByNameAsc();\n                        mod_toastr.success(\n                            \"Dataset undeleted. Click this to see it.\",\n                            \"\",\n                            {\n                                onclick: function() {\n                                    var folder_id = that.model.get(\"folder_id\");\n                                    window.location =\n                                        Galaxy.root +\n                                        \"library/list#folders/\" +\n                                        folder_id +\n                                        \"/datasets/\" +\n                                        that.id;\n                                }\n                            }\n                        );\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(\n                                \"Dataset was not undeleted. \" +\n                                    response.responseJSON.err_msg\n                            );\n                        } else {\n                            mod_toastr.error(\n                                \"An error occured! Dataset was not undeleted. Please try again.\"\n                            );\n                        }\n                    }\n                });\n            },\n\n            /* Undelete the folder on server and render the row again. */\n            undeleteFolder: function(event) {\n                $(\".tooltip\").hide();\n                var that = this;\n                var folder_id = $(event.target)\n                    .closest(\"tr\")\n                    .data(\"id\");\n                var folder = Galaxy.libraries.folderListView.collection.get(\n                    folder_id\n                );\n                folder.url = folder.urlRoot + folder.id + \"?undelete=true\";\n                folder.destroy({\n                    success: function(model, response) {\n                        Galaxy.libraries.folderListView.collection.remove(\n                            folder_id\n                        );\n                        var updated_folder = new mod_library_model.FolderAsModel(\n                            response\n                        );\n                        Galaxy.libraries.folderListView.collection.add(\n                            updated_folder\n                        );\n                        Galaxy.libraries.folderListView.collection.sortByNameAsc();\n                        mod_toastr.success(\"Folder undeleted.\");\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(\n                                \"Folder was not undeleted. \" +\n                                    response.responseJSON.err_msg\n                            );\n                        } else {\n                            mod_toastr.error(\n                                \"An error occured! Folder was not undeleted. Please try again.\"\n                            );\n                        }\n                    }\n                });\n            },\n\n            /* User clicked the 'edit' button on row so render the row as editable. */\n            startModifications: function() {\n                this.options.edit_mode = true;\n                this.repaint();\n            },\n\n            /* User clicked the 'cancel' button so render normal row */\n            cancelModifications: function() {\n                this.options.edit_mode = false;\n                this.repaint();\n            },\n\n            saveModifications: function() {\n                var folder = Galaxy.libraries.folderListView.collection.get(\n                    this.$el.data(\"id\")\n                );\n                var is_changed = false;\n                var new_name = this.$el.find(\".input_folder_name\").val();\n                if (\n                    typeof new_name !== \"undefined\" &&\n                    new_name !== folder.get(\"name\")\n                ) {\n                    if (new_name.length > 2) {\n                        folder.set(\"name\", new_name);\n                        is_changed = true;\n                    } else {\n                        mod_toastr.warning(\n                            \"Folder name has to be at least 3 characters long.\"\n                        );\n                        return;\n                    }\n                }\n                var new_description = this.$el\n                    .find(\".input_folder_description\")\n                    .val();\n                if (\n                    typeof new_description !== \"undefined\" &&\n                    new_description !== folder.get(\"description\")\n                ) {\n                    folder.set(\"description\", new_description);\n                    is_changed = true;\n                }\n                if (is_changed) {\n                    var row_view = this;\n                    folder.save(null, {\n                        patch: true,\n                        success: function(folder) {\n                            row_view.options.edit_mode = false;\n                            row_view.repaint(folder);\n                            mod_toastr.success(\"Changes to folder saved.\");\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(response.responseJSON.err_msg);\n                            } else {\n                                mod_toastr.error(\n                                    \"An error occured while attempting to update the folder.\"\n                                );\n                            }\n                        }\n                    });\n                } else {\n                    this.options.edit_mode = false;\n                    this.repaint(folder);\n                    mod_toastr.info(\"Nothing has changed.\");\n                }\n            },\n\n            repaint: function() {\n                /* need to hide manually because of the element removal in setElement\n    invoked in render() */\n                $(\".tooltip\").hide();\n                /* we need to store the old element to be able to replace it with\n    new one */\n                var old_element = this.$el;\n                /* if user canceled the folder param is undefined,\n      if user saved and succeeded the updated folder is rendered */\n                this.render();\n                old_element.replaceWith(this.$el);\n                /* now we attach new tooltips to the newly created row element */\n                this.$el.find(\"[data-toggle]\").tooltip();\n            },\n\n            templateRowFolder: function() {\n                return _.template(\n                    [\n                        '<tr class=\"folder_row light library-row\" data-id=\"<%- content_item.id %>\">',\n                        \"<td>\",\n                        '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n                        \"</td>\",\n                        '<td style=\"text-align: center; \"><input style=\"margin: 0;\" type=\"checkbox\"></td>',\n                        \"<% if(!edit_mode) { %>\",\n                        \"<td>\",\n                        '<a href=\"#folders/<%- content_item.id %>\"><%- content_item.get(\"name\") %></a>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<%- content_item.get(\"description\") %>',\n                        \"</td>\",\n                        \"<% } else if(edit_mode){ %>\",\n                        '<td><textarea rows=\"4\" class=\"form-control input_folder_name\" placeholder=\"name\" ><%- content_item.get(\"name\") %></textarea></td>',\n                        '<td><textarea rows=\"4\" class=\"form-control input_folder_description\" placeholder=\"description\" ><%- content_item.get(\"description\") %></textarea></td>',\n                        \"<% } %>\",\n                        \"<td>folder</td>\",\n                        \"<td></td>\",\n                        \"<td>\",\n                        '<%= _.escape(content_item.get(\"update_time\")) %>',\n                        \"</td>\",\n                        \"<td>\",\n                        \"<% if(edit_mode) { %>\", // start edit mode\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save changes\" class=\"primary-button btn-xs save_folder_btn\" type=\"button\" style=\"<% if(button_config.save_folder_btn === false) { print(\"display:none;\") } %>\">',\n                        '<span class=\"fa fa-floppy-o\"/>',\n                        \"&nbsp;Save\",\n                        \"</button>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Discard changes\" class=\"primary-button btn-xs cancel_folder_btn\" type=\"button\" style=\"<% if(button_config.cancel_folder_btn === false) { print(\"display:none;\") } %>\">',\n                        '<span class=\"fa fa-times\"/>',\n                        \"&nbsp;Cancel\",\n                        \"</button>\",\n                        \"<% } else if (!edit_mode){%>\", // start no edit mode\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs edit_folder_btn\" type=\"button\" style=\"<% if(button_config.edit_folder_btn === false) { print(\"display:none;\") } %>\">',\n                        '<span class=\"fa fa-pencil\"/>',\n                        \"</button>\",\n                        '<a href=\"#/folders/<%- content_item.id %>/permissions\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permission_folder_btn\" title=\"Manage \\'<%- content_item.get(\"name\") %>\\'\" style=\"<% if(button_config.permission_folder_btn === false) { print(\"display:none;\") } %>\">',\n                        '<span class=\"fa fa-group\"/>',\n                        \"</button>\",\n                        \"</a>\",\n                        \"<% } %>\", //end no edit mode\n                        \"</td>\",\n                        \"</tr>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateRowFile: function() {\n                return _.template(\n                    [\n                        '<tr class=\"dataset_row light library-row\" data-id=\"<%- content_item.id %>\">',\n                        \"<td>\",\n                        '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n                        \"</td>\",\n                        '<td style=\"text-align: center; \">',\n                        '<input style=\"margin: 0;\" type=\"checkbox\">',\n                        \"</td>\",\n                        \"<td>\",\n                        '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>\" class=\"library-dataset\">',\n                        '<%- content_item.get(\"name\") %>',\n                        \"<a>\",\n                        \"</td>\",\n                        '<td><%- content_item.get(\"message\") %></td>',\n                        '<td><%= _.escape(content_item.get(\"file_ext\")) %></td>',\n                        '<td><%= _.escape(content_item.get(\"file_size\")) %></td>',\n                        '<td><%= _.escape(content_item.get(\"update_time\")) %></td>',\n                        \"<td>\",\n                        '<% if (content_item.get(\"is_unrestricted\")) { %>',\n                        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Unrestricted dataset\" style=\"color:grey;\" class=\"fa fa-globe fa-lg\"/>',\n                        \"<% } %>\",\n                        '<% if (content_item.get(\"is_private\")) { %>',\n                        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Private dataset\" style=\"color:grey;\" class=\"fa fa-key fa-lg\"/>',\n                        \"<% } %>\",\n                        '<% if ((content_item.get(\"is_unrestricted\") === false) && (content_item.get(\"is_private\") === false)) { %>',\n                        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Restricted dataset\" style=\"color:grey;\" class=\"fa fa-shield fa-lg\"/>',\n                        \"<% } %>\",\n                        '<% if (content_item.get(\"can_manage\")) { %>',\n                        '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>/permissions\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permissions-dataset-btn\" title=\"Manage permissions\">',\n                        '<span class=\"fa fa-group\"/>',\n                        \"</button>\",\n                        \"</a>\",\n                        \"<% } %>\",\n                        \"</td>\",\n                        \"</tr>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateRowDeletedFile: function() {\n                return _.template(\n                    [\n                        '<tr class=\"active deleted_dataset library-row\" data-id=\"<%- content_item.id %>\">',\n                        \"<td>\",\n                        '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n                        \"</td>\",\n                        \"<td></td>\",\n                        '<td style=\"color:grey;\">',\n                        '<%- content_item.get(\"name\") %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<%- content_item.get(\"message\") %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<%= _.escape(content_item.get(\"file_ext\")) %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<%= _.escape(content_item.get(\"file_size\")) %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<%= _.escape(content_item.get(\"update_time\")) %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete <%- content_item.get(\"name\") %>\" class=\"primary-button btn-xs undelete_dataset_btn\" type=\"button\" style=\"margin-left:1em;\">',\n                        '<span class=\"fa fa-unlock\"/>',\n                        \"&nbsp;Undelete\",\n                        \"</button>\",\n                        \"</td>\",\n                        \"</tr>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateRowDeletedFolder: function() {\n                return _.template(\n                    [\n                        '<tr class=\"active deleted_folder light library-row\" data-id=\"<%- content_item.id %>\">',\n                        \"<td>\",\n                        '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n                        \"</td>\",\n                        \"<td></td>\",\n                        '<td style=\"color:grey;\">',\n                        '<%- content_item.get(\"name\") %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<%- content_item.get(\"description\") %>',\n                        \"</td>\",\n                        \"<td>\",\n                        \"folder\",\n                        \"</td>\",\n                        \"<td></td>\",\n                        \"<td>\",\n                        '<%= _.escape(content_item.get(\"update_time\")) %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete <%- content_item.get(\"name\") %>\" class=\"primary-button btn-xs undelete_folder_btn\" type=\"button\" style=\"margin-left:1em;\">',\n                        '<span class=\"fa fa-unlock\"/>',\n                        \"&nbsp;Undelete\",\n                        \"</button>\",\n                        \"</td>\",\n                        \"</tr>\"\n                    ].join(\"\")\n                );\n            }\n        });\n\n        return {\n            FolderRowView: FolderRowView\n        };\n    }\n);\n"]}