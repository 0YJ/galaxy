{"version":3,"sources":["mvc/library/library-folderrow-view.js"],"names":["define","FolderRowView","mod_library_model","events","Backbone","View","extend","click .undelete_dataset_btn","click .undelete_folder_btn","click .edit_folder_btn","defaults","type","save_folder_btn","cancel_folder_btn","permission_folder_btn","edit_folder_btn","edit_mode","options","initialize","render","_","this","folder_item","model","template","prepareButtons","templateRowDeletedFolder","get","templateRowFolder","templateRowFile","templateRowDeletedFile","error","Galaxy","$el","show","emit","setElement","content_item","button_config","visibility_config","vis_config","folder","showDatasetDetails","undeleteDataset","datasetView","mod_library_dataset_view","LibraryDatasetView","id","libraries","dataset","hide","destroy","success","$","event","target","response","data","folderListView","collection","dataset_id","url","updated_dataset","mod_toastr","remove","that","Item","window","location","root","add","sortByNameAsc","onclick","folder_id","responseJSON","err_msg","undeleteFolder","updated_folder","FolderAsModel","startModifications","cancelModifications","repaint","saveModifications","length","set","new_name","is_changed","find","val","new_description","row_view","save","patch","info","old_element","tooltip","join"],"mappings":"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2NjC,QAmFNC,mFACE,yBA/SqC,OA+N7B,gFAgHVJ,QACE,OA4BD,yCAzIO,QAnOV,8BAqOU,oIA2IH,yJACHzB,UADJ,kBAxXA,YAkPU,OACE,mDACF,QACA,OACE,wBACE,4NACE,iCACA,aACF,YACA,mOACE,8BACA,eACF,YACF,+BACE,0PACE,+BACF,YACA,0DACE,wPACE,8BACF,YACF,OACF,UACF,QACJ,SACI+F,KAAK,MAGbnE,gBAAiB,WACf,MAAOT,GAAEI,UACT,8EACE,OACE,+CACF,QACA,oCACE,6CACF,QACA,OACE,mHACE,kCACF,MACF,QACA,8CACA,yDACA,0DACA,4DACA,OACE,mDACE,gIACF,UACA,8CACE,yHACF,UACA,6GACE,+HACF,UACA,8CACE,uGACE,uIACE,8BACF,YACF,OACF,UACF,QACF,SACEwE,KAAK,MAGTlE,uBAAwB,WACtB,MAAOV,GAAEI,UACT,mFACE,OACE,+CACF,QACA,YACA,2BACE,kCACF,QACA,OACE,qCACF,QACA,OACE,gDACF,QACA,OACE,iDACF,QACA,OACE,mDACF,QACA,OACE,wHACA,iMACE,+BACA,iBACF,YACF,QACF,SACEwE,KAAK,MAGTtE,yBAA0B,WACxB,MAAON,GAAEI,UACT,wFACE,OACE,gDACF,QACA,YACA,2BACE,kCACF,QACA,OACE,yCACF,QACA,OACE,SACF,QACA,YACA,OACE,mDACF,QACA,OACE,wHACA,gMACE,+BACA,iBACF,YACF,QACF,SACEwE,KAAK","file":"../../../scripts/mvc/library/library-folderrow-view.js","sourcesContent":["define([\n    \"libs/toastr\",\n    \"mvc/library/library-model\",\n    \"mvc/library/library-dataset-view\"],\nfunction(mod_toastr,\n         mod_library_model,\n         mod_library_dataset_view) {\n\nvar FolderRowView = Backbone.View.extend({\n\n  events: {\n    'click .undelete_dataset_btn'    : 'undeleteDataset',\n    'click .undelete_folder_btn'     : 'undeleteFolder',\n    'click .edit_folder_btn'         : 'startModifications',\n    'click .cancel_folder_btn'       : 'cancelModifications',\n    'click .save_folder_btn'         : 'saveModifications',\n  },\n\n  defaults: {\n    type: null,\n    visibility_config: {\n      edit_folder_btn: true,\n      save_folder_btn: false,\n      cancel_folder_btn: false,\n      permission_folder_btn: true\n    },\n    edit_mode: false\n  },\n\n  initialize : function(options){\n    this.options = _.defaults( options || {}, this.defaults );\n    this.render(this.options);\n  },\n\n  render: function(options){\n    this.options = _.extend( this.options, options );\n    var folder_item = this.options.model;\n    var template = null;\n\n    if (folder_item.get('type') === 'folder' || folder_item.get('model_class') === 'LibraryFolder'){\n      this.options.type = 'folder';\n      this.prepareButtons(folder_item);\n      if (folder_item.get('deleted')){\n        template = this.templateRowDeletedFolder();\n      } else {\n        template = this.templateRowFolder();\n      }\n    } else if (folder_item.get('type') === 'file' || folder_item.get('model_class') === 'LibraryDatasetDatasetAssociation' || folder_item.get('model_class') === 'LibraryDataset'){\n      this.options.type = 'file';\n      if (folder_item.get('deleted')){\n        template = this.templateRowDeletedFile();\n      } else {\n        template = this.templateRowFile();\n      }\n    } else {\n      Galaxy.emit.error('Unknown library item type found.');\n      Galaxy.emit.error(folder_item.get('type') || folder_item.get('model_class'));\n    }\n    this.setElement(template({content_item: folder_item, edit_mode: this.options.edit_mode, button_config: this.options.visibility_config}));\n    this.$el.show();\n    return this;\n  },\n\n  /**\n   * Modify the visibility of buttons for\n   * the filling of the row template of a given folder.\n   */\n  prepareButtons: function(folder){\n    vis_config = this.options.visibility_config;\n    if (this.options.edit_mode === false){\n      vis_config.save_folder_btn = false;\n      vis_config.cancel_folder_btn = false;\n      if (folder.get('deleted') === true ){\n          vis_config.edit_folder_btn = false;\n          vis_config.permission_folder_btn = false;\n      } else if (folder.get('deleted') === false ) {\n        vis_config.save_folder_btn = false;\n        vis_config.cancel_folder_btn = false;\n        if (folder.get('can_modify') === true){\n          vis_config.edit_folder_btn = true;\n        }\n        if (folder.get('can_manage') === true){\n          vis_config.permission_folder_btn = true;\n        }\n      }\n    } else if (this.options.edit_mode === true){\n      vis_config.edit_folder_btn = false;\n      vis_config.permission_folder_btn = false;\n      vis_config.save_folder_btn = true;\n      vis_config.cancel_folder_btn = true;\n    }\n    this.options.visibility_config = vis_config;\n  },\n\n  /* Show the page with dataset details. */\n  showDatasetDetails : function(){\n    Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({id: this.id});\n  },\n\n  /* Undelete the dataset on server and render the row again. */\n  undeleteDataset : function(event){\n    $(\".tooltip\").hide();\n    var that = this;\n    var dataset_id = $(event.target).closest('tr').data('id');\n    var dataset = Galaxy.libraries.folderListView.collection.get(dataset_id);\n    dataset.url = dataset.urlRoot + dataset.id + '?undelete=true';\n    dataset.destroy({\n        success : function(model, response){\n          Galaxy.libraries.folderListView.collection.remove(dataset_id);\n          var updated_dataset = new mod_library_model.Item(response);\n          Galaxy.libraries.folderListView.collection.add(updated_dataset);\n          Galaxy.libraries.folderListView.collection.sortByNameAsc();\n          mod_toastr.success('Dataset undeleted. Click this to see it.', '', {onclick: function() {\n            var folder_id = that.model.get('folder_id');\n            window.location = Galaxy.root + 'library/list#folders/' + folder_id + '/datasets/' + that.id;\n          }});\n        },\n        error : function(model, response){\n          if (typeof response.responseJSON !== \"undefined\"){\n            mod_toastr.error('Dataset was not undeleted. ' + response.responseJSON.err_msg);\n          } else {\n            mod_toastr.error('An error occured! Dataset was not undeleted. Please try again.');\n          }\n        }\n  });\n  },\n\n  /* Undelete the folder on server and render the row again. */\n  undeleteFolder : function(event){\n    $(\".tooltip\").hide();\n    var that = this;\n    var folder_id = $(event.target).closest('tr').data('id');\n    var folder = Galaxy.libraries.folderListView.collection.get(folder_id);\n    folder.url = folder.urlRoot + folder.id + '?undelete=true';\n    folder.destroy({\n        success : function(model, response){\n          Galaxy.libraries.folderListView.collection.remove(folder_id);\n          var updated_folder = new mod_library_model.FolderAsModel(response);\n          Galaxy.libraries.folderListView.collection.add(updated_folder);\n          Galaxy.libraries.folderListView.collection.sortByNameAsc();\n          mod_toastr.success('Folder undeleted.');\n        },\n        error : function(model, response){\n          if (typeof response.responseJSON !== \"undefined\"){\n            mod_toastr.error('Folder was not undeleted. ' + response.responseJSON.err_msg);\n          } else {\n            mod_toastr.error('An error occured! Folder was not undeleted. Please try again.');\n          }\n        }\n  });\n  },\n\n\n  /* User clicked the 'edit' button on row so render the row as editable. */\n  startModifications: function(){\n    this.options.edit_mode = true;\n    this.repaint();\n  },\n\n  /* User clicked the 'cancel' button so render normal row */\n  cancelModifications: function(){\n    this.options.edit_mode = false;\n    this.repaint();\n  },\n\n  saveModifications: function(){\n    var folder = Galaxy.libraries.folderListView.collection.get(this.$el.data('id'));\n    var is_changed = false;\n    var new_name = this.$el.find('.input_folder_name').val();\n    if (typeof new_name !== 'undefined' && new_name !== folder.get('name') ){\n        if (new_name.length > 2){\n            folder.set(\"name\", new_name);\n            is_changed = true;\n        } else{\n            mod_toastr.warning('Folder name has to be at least 3 characters long.');\n            return;\n        }\n    }\n    var new_description = this.$el.find('.input_folder_description').val();\n    if (typeof new_description !== 'undefined' && new_description !== folder.get('description') ){\n        folder.set(\"description\", new_description);\n        is_changed = true;\n    }\n    if (is_changed){\n      var row_view = this;\n        folder.save(null, {\n          patch: true,\n          success: function(folder) {\n            row_view.options.edit_mode = false;\n            row_view.repaint(folder);\n            mod_toastr.success('Changes to folder saved.');\n          },\n          error: function(model, response){\n            if (typeof response.responseJSON !== \"undefined\"){\n              mod_toastr.error(response.responseJSON.err_msg);\n            } else {\n              mod_toastr.error('An error occured while attempting to update the folder.');\n            }\n          }\n        });\n    } else {\n      this.options.edit_mode = false;\n      this.repaint(folder);\n      mod_toastr.info('Nothing has changed.');\n    }\n  },\n\n  repaint: function(){\n    /* need to hide manually because of the element removal in setElement\n    invoked in render() */\n    $(\".tooltip\").hide();\n    /* we need to store the old element to be able to replace it with\n    new one */\n    var old_element = this.$el;\n    /* if user canceled the folder param is undefined,\n      if user saved and succeeded the updated folder is rendered */\n    this.render();\n    old_element.replaceWith(this.$el);\n    /* now we attach new tooltips to the newly created row element */\n    this.$el.find(\"[data-toggle]\").tooltip();\n  },\n\n  templateRowFolder: function() {\n    return _.template([\n      '<tr class=\"folder_row light library-row\" data-id=\"<%- content_item.id %>\">',\n        '<td>',\n          '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n        '</td>',\n        '<td style=\"text-align: center; \"><input style=\"margin: 0;\" type=\"checkbox\"></td>',\n        '<% if(!edit_mode) { %>',\n          '<td>',\n            '<a href=\"#folders/<%- content_item.id %>\"><%- content_item.get(\"name\") %></a>',\n          '</td>',\n          '<td>',\n            '<%- content_item.get(\"description\") %>',\n          '</td>',\n        '<% } else if(edit_mode){ %>',\n          '<td><textarea rows=\"4\" class=\"form-control input_folder_name\" placeholder=\"name\" ><%- content_item.get(\"name\") %></textarea></td>',\n          '<td><textarea rows=\"4\" class=\"form-control input_folder_description\" placeholder=\"description\" ><%- content_item.get(\"description\") %></textarea></td>',\n        '<% } %>',\n          '<td>folder</td>',\n          '<td></td>',\n          '<td>',\n            '<%= _.escape(content_item.get(\"update_time\")) %>',\n          '</td>',\n          '<td>',\n            '<% if(edit_mode) { %>',  // start edit mode\n              '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save changes\" class=\"primary-button btn-xs save_folder_btn\" type=\"button\" style=\"<% if(button_config.save_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-floppy-o\"/>',\n                '&nbsp;Save',\n              '</button>',\n              '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Discard changes\" class=\"primary-button btn-xs cancel_folder_btn\" type=\"button\" style=\"<% if(button_config.cancel_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-times\"/>',\n                '&nbsp;Cancel',\n              '</button>',\n            '<% } else if (!edit_mode){%>',  // start no edit mode\n              '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs edit_folder_btn\" type=\"button\" style=\"<% if(button_config.edit_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-pencil\"/>',\n              '</button>',\n              '<a href=\"#/folders/<%- content_item.id %>/permissions\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permission_folder_btn\" title=\"Manage \\'<%- content_item.get(\"name\") %>\\'\" style=\"<% if(button_config.permission_folder_btn === false) { print(\"display:none;\") } %>\">',\n                  '<span class=\"fa fa-group\"/>',\n                '</button>',\n              '</a>',\n            '<% } %>',  //end no edit mode\n          '</td>',\n      '</tr>'\n        ].join(''));\n  },\n\n  templateRowFile: function(){\n    return _.template([\n    '<tr class=\"dataset_row light library-row\" data-id=\"<%- content_item.id %>\">',\n      '<td>',\n        '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n      '</td>',\n      '<td style=\"text-align: center; \">',\n        '<input style=\"margin: 0;\" type=\"checkbox\">',\n      '</td>',\n      '<td>',\n        '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>\" class=\"library-dataset\">',\n          '<%- content_item.get(\"name\") %>',\n        '<a>',\n      '</td>',\n      '<td><%- content_item.get(\"message\") %></td>',\n      '<td><%= _.escape(content_item.get(\"file_ext\")) %></td>',\n      '<td><%= _.escape(content_item.get(\"file_size\")) %></td>',\n      '<td><%= _.escape(content_item.get(\"update_time\")) %></td>',\n      '<td>',\n        '<% if (content_item.get(\"is_unrestricted\")) { %>',\n          '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Unrestricted dataset\" style=\"color:grey;\" class=\"fa fa-globe fa-lg\"/>',\n        '<% } %>',\n        '<% if (content_item.get(\"is_private\")) { %>',\n          '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Private dataset\" style=\"color:grey;\" class=\"fa fa-key fa-lg\"/>',\n        '<% } %>',\n        '<% if ((content_item.get(\"is_unrestricted\") === false) && (content_item.get(\"is_private\") === false)) { %>',\n          '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Restricted dataset\" style=\"color:grey;\" class=\"fa fa-shield fa-lg\"/>',\n        '<% } %>',\n        '<% if (content_item.get(\"can_manage\")) { %>',\n          '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>/permissions\">',\n            '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permissions-dataset-btn\" title=\"Manage permissions\">',\n              '<span class=\"fa fa-group\"/>',\n            '</button>',\n          '</a>',\n        '<% } %>',\n      '</td>',\n    '</tr>'\n    ].join(''));\n  },\n\n  templateRowDeletedFile: function(){\n    return _.template([\n    '<tr class=\"active deleted_dataset library-row\" data-id=\"<%- content_item.id %>\">',\n      '<td>',\n        '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n      '</td>',\n      '<td></td>',\n      '<td style=\"color:grey;\">',\n        '<%- content_item.get(\"name\") %>',\n      '</td>',\n      '<td>',\n        '<%- content_item.get(\"message\") %>',\n      '</td>',\n      '<td>',\n        '<%= _.escape(content_item.get(\"file_ext\")) %>',\n      '</td>',\n      '<td>',\n        '<%= _.escape(content_item.get(\"file_size\")) %>',\n      '</td>',\n      '<td>',\n        '<%= _.escape(content_item.get(\"update_time\")) %>',\n      '</td>',\n      '<td>',\n        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete <%- content_item.get(\"name\") %>\" class=\"primary-button btn-xs undelete_dataset_btn\" type=\"button\" style=\"margin-left:1em;\">',\n          '<span class=\"fa fa-unlock\"/>',\n          '&nbsp;Undelete',\n        '</button>',\n      '</td>',\n    '</tr>'\n    ].join(''));\n  },\n\n  templateRowDeletedFolder: function(){\n    return _.template([\n    '<tr class=\"active deleted_folder light library-row\" data-id=\"<%- content_item.id %>\">',\n      '<td>',\n        '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n      '</td>',\n      '<td></td>',\n      '<td style=\"color:grey;\">',\n        '<%- content_item.get(\"name\") %>',\n      '</td>',\n      '<td>',\n        '<%- content_item.get(\"description\") %>',\n      '</td>',\n      '<td>',\n        'folder',\n      '</td>',\n      '<td></td>',\n      '<td>',\n        '<%= _.escape(content_item.get(\"update_time\")) %>',\n      '</td>',\n      '<td>',\n        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete <%- content_item.get(\"name\") %>\" class=\"primary-button btn-xs undelete_folder_btn\" type=\"button\" style=\"margin-left:1em;\">',\n          '<span class=\"fa fa-unlock\"/>',\n          '&nbsp;Undelete',\n        '</button>',\n      '</td>',\n    '</tr>'\n    ].join(''));\n  }\n\n});\n\nreturn {\n    FolderRowView: FolderRowView\n};\n\n});\n"]}