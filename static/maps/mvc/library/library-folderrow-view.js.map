{"version":3,"sources":["mvc/library/library-folderrow-view.js"],"names":["define","mod_toastr","mod_library_model","mod_library_dataset_view","FolderRowView","Backbone","View","extend","events","click .undelete_dataset_btn","click .undelete_folder_btn","click .edit_folder_btn","click .cancel_folder_btn","click .save_folder_btn","defaults","type","visibility_config","edit_folder_btn","save_folder_btn","cancel_folder_btn","permission_folder_btn","edit_mode","initialize","options","this","_","render","folder_item","model","template","get","prepareButtons","templateRowDeletedFolder","templateRowFolder","templateRowDeletedFile","templateRowFile","Galaxy","emit","error","setElement","content_item","button_config","$el","show","folder","vis_config","showDatasetDetails","libraries","datasetView","LibraryDatasetView","id","undeleteDataset","event","$","hide","that","dataset_id","target","closest","data","dataset","folderListView","collection","url","urlRoot","destroy","success","response","remove","updated_dataset","Item","add","sortByNameAsc","onclick","folder_id","window","location","root","responseJSON","err_msg","undeleteFolder","updated_folder","FolderAsModel","startModifications","repaint","cancelModifications","saveModifications","is_changed","new_name","find","val","length","warning","set","new_description","row_view","save","patch","info","old_element","replaceWith","tooltip","join"],"mappings":"AAAAA,QACI,cACA,4BACA,oCACJ,SAASC,EACAC,EACAC,GAkXT,OACIC,cAjXgBC,SAASC,KAAKC,QAEhCC,QACEC,8BAAmC,kBACnCC,6BAAmC,iBACnCC,yBAAmC,qBACnCC,2BAAmC,sBACnCC,yBAAmC,qBAGrCC,UACEC,KAAM,KACNC,mBACEC,iBAAiB,EACjBC,iBAAiB,EACjBC,mBAAmB,EACnBC,uBAAuB,GAEzBC,WAAW,GAGbC,WAAa,SAASC,GACpBC,KAAKD,QAAUE,EAAEX,SAAUS,MAAeC,KAAKV,UAC/CU,KAAKE,OAAOF,KAAKD,UAGnBG,OAAQ,SAASH,GACfC,KAAKD,QAAUE,EAAElB,OAAQiB,KAAKD,QAASA,EACvC,IAAII,GAAcH,KAAKD,QAAQK,MAC3BC,EAAW,IAuBf,OArBgC,WAA5BF,EAAYG,IAAI,SAA2D,kBAAnCH,EAAYG,IAAI,gBAC1DN,KAAKD,QAAQR,KAAO,SACpBS,KAAKO,eAAeJ,GAElBE,EADEF,EAAYG,IAAI,WACPN,KAAKQ,2BAELR,KAAKS,qBAEmB,SAA5BN,EAAYG,IAAI,SAAyD,qCAAnCH,EAAYG,IAAI,gBAA4F,mBAAnCH,EAAYG,IAAI,gBACxIN,KAAKD,QAAQR,KAAO,OAElBc,EADEF,EAAYG,IAAI,WACPN,KAAKU,yBAELV,KAAKW,oBAGlBC,OAAOC,KAAKC,MAAM,oCAClBF,OAAOC,KAAKC,MAAMX,EAAYG,IAAI,SAAWH,EAAYG,IAAI,iBAE/DN,KAAKe,WAAWV,GAAUW,aAAcb,EAAaN,UAAWG,KAAKD,QAAQF,UAAWoB,cAAejB,KAAKD,QAAQP,qBACpHQ,KAAKkB,IAAIC,OACFnB,MAOTO,eAAgB,SAASa,GACvBC,WAAarB,KAAKD,QAAQP,mBACK,IAA3BQ,KAAKD,QAAQF,WACfwB,WAAW3B,iBAAkB,EAC7B2B,WAAW1B,mBAAoB,GACD,IAA1ByB,EAAOd,IAAI,YACXe,WAAW5B,iBAAkB,EAC7B4B,WAAWzB,uBAAwB,IACF,IAA1BwB,EAAOd,IAAI,aACpBe,WAAW3B,iBAAkB,EAC7B2B,WAAW1B,mBAAoB,GACE,IAA7ByB,EAAOd,IAAI,gBACbe,WAAW5B,iBAAkB,IAEE,IAA7B2B,EAAOd,IAAI,gBACbe,WAAWzB,uBAAwB,MAGH,IAA3BI,KAAKD,QAAQF,YACtBwB,WAAW5B,iBAAkB,EAC7B4B,WAAWzB,uBAAwB,EACnCyB,WAAW3B,iBAAkB,EAC7B2B,WAAW1B,mBAAoB,GAEjCK,KAAKD,QAAQP,kBAAoB6B,YAInCC,mBAAqB,WACnBV,OAAOW,UAAUC,YAAc,GAAI7C,GAAyB8C,oBAAoBC,GAAI1B,KAAK0B,MAI3FC,gBAAkB,SAASC,GACzBC,EAAE,YAAYC,MACd,IAAIC,GAAO/B,KACPgC,EAAaH,EAAED,EAAMK,QAAQC,QAAQ,MAAMC,KAAK,MAChDC,EAAUxB,OAAOW,UAAUc,eAAeC,WAAWhC,IAAI0B,EAC7DI,GAAQG,IAAMH,EAAQI,QAAUJ,EAAQV,GAAK,iBAC7CU,EAAQK,SACJC,QAAU,SAAStC,EAAOuC,GACxB/B,OAAOW,UAAUc,eAAeC,WAAWM,OAAOZ,EAClD,IAAIa,GAAkB,GAAInE,GAAkBoE,KAAKH,EACjD/B,QAAOW,UAAUc,eAAeC,WAAWS,IAAIF,GAC/CjC,OAAOW,UAAUc,eAAeC,WAAWU,gBAC3CvE,EAAWiE,QAAQ,2CAA4C,IAAKO,QAAS,WAC3E,GAAIC,GAAYnB,EAAK3B,MAAME,IAAI,YAC/B6C,QAAOC,SAAWxC,OAAOyC,KAAO,wBAA0BH,EAAY,aAAenB,EAAKL,OAG9FZ,MAAQ,SAASV,EAAOuC,OACe,KAA1BA,EAASW,aAClB7E,EAAWqC,MAAM,8BAAgC6B,EAASW,aAAaC,SAEvE9E,EAAWqC,MAAM,sEAO3B0C,eAAiB,SAAS5B,GACxBC,EAAE,YAAYC,MACd,IACIoB,GAAYrB,EAAED,EAAMK,QAAQC,QAAQ,MAAMC,KAAK,MAC/Cf,EAASR,OAAOW,UAAUc,eAAeC,WAAWhC,IAAI4C,EAC5D9B,GAAOmB,IAAMnB,EAAOoB,QAAUpB,EAAOM,GAAK,iBAC1CN,EAAOqB,SACHC,QAAU,SAAStC,EAAOuC,GACxB/B,OAAOW,UAAUc,eAAeC,WAAWM,OAAOM,EAClD,IAAIO,GAAiB,GAAI/E,GAAkBgF,cAAcf,EACzD/B,QAAOW,UAAUc,eAAeC,WAAWS,IAAIU,GAC/C7C,OAAOW,UAAUc,eAAeC,WAAWU,gBAC3CvE,EAAWiE,QAAQ,sBAErB5B,MAAQ,SAASV,EAAOuC,OACe,KAA1BA,EAASW,aAClB7E,EAAWqC,MAAM,6BAA+B6B,EAASW,aAAaC,SAEtE9E,EAAWqC,MAAM,qEAQ3B6C,mBAAoB,WAClB3D,KAAKD,QAAQF,WAAY,EACzBG,KAAK4D,WAIPC,oBAAqB,WACnB7D,KAAKD,QAAQF,WAAY,EACzBG,KAAK4D,WAGPE,kBAAmB,WACjB,GAAI1C,GAASR,OAAOW,UAAUc,eAAeC,WAAWhC,IAAIN,KAAKkB,IAAIiB,KAAK,OACtE4B,GAAa,EACbC,EAAWhE,KAAKkB,IAAI+C,KAAK,sBAAsBC,KACnD,QAAwB,KAAbF,GAA4BA,IAAa5C,EAAOd,IAAI,QAAS,CACpE,KAAI0D,EAASG,OAAS,GAKlB,WADA1F,GAAW2F,QAAQ,oDAHnBhD,GAAOiD,IAAI,OAAQL,GACnBD,GAAa,EAMrB,GAAIO,GAAkBtE,KAAKkB,IAAI+C,KAAK,6BAA6BC,KAKjE,QAJ+B,KAApBI,GAAmCA,IAAoBlD,EAAOd,IAAI,iBACzEc,EAAOiD,IAAI,cAAeC,GAC1BP,GAAa,GAEbA,EAAW,CACb,GAAIQ,GAAWvE,IACboB,GAAOoD,KAAK,MACVC,OAAO,EACP/B,QAAS,SAAStB,GAChBmD,EAASxE,QAAQF,WAAY,EAC7B0E,EAASX,QAAQxC,GACjB3C,EAAWiE,QAAQ,6BAErB5B,MAAO,SAASV,EAAOuC,OACgB,KAA1BA,EAASW,aAClB7E,EAAWqC,MAAM6B,EAASW,aAAaC,SAEvC9E,EAAWqC,MAAM,kEAKzBd,MAAKD,QAAQF,WAAY,EACzBG,KAAK4D,QAAQxC,GACb3C,EAAWiG,KAAK,yBAIpBd,QAAS,WAGP/B,EAAE,YAAYC,MAGd,IAAI6C,GAAc3E,KAAKkB,GAGvBlB,MAAKE,SACLyE,EAAYC,YAAY5E,KAAKkB,KAE7BlB,KAAKkB,IAAI+C,KAAK,iBAAiBY,WAGjCpE,kBAAmB,WACjB,MAAOR,GAAEI,UACP,6EACE,OACE,gDACF,QACA,mFACA,yBACE,OACE,gFACF,QACA,OACE,yCACF,QACF,8BACE,oIACA,yJACF,UACE,kBACA,YACA,OACE,mDACF,QACA,OACE,wBACE,4NACE,iCACA,aACF,YACA,mOACE,8BACA,eACF,YACF,+BACE,0PACE,+BACF,YACA,0DACE,wPACE,8BACF,YACF,OACF,UACF,QACJ,SACIyE,KAAK,MAGbnE,gBAAiB,WACf,MAAOV,GAAEI,UACT,8EACE,OACE,+CACF,QACA,oCACE,6CACF,QACA,OACE,mHACE,kCACF,MACF,QACA,8CACA,yDACA,0DACA,4DACA,OACE,mDACE,gIACF,UACA,8CACE,yHACF,UACA,6GACE,+HACF,UACA,8CACE,uGACE,uIACE,8BACF,YACF,OACF,UACF,QACF,SACEyE,KAAK,MAGTpE,uBAAwB,WACtB,MAAOT,GAAEI,UACT,mFACE,OACE,+CACF,QACA,YACA,2BACE,kCACF,QACA,OACE,qCACF,QACA,OACE,gDACF,QACA,OACE,iDACF,QACA,OACE,mDACF,QACA,OACE,wHACA,iMACE,+BACA,iBACF,YACF,QACF,SACEyE,KAAK,MAGTtE,yBAA0B,WACxB,MAAOP,GAAEI,UACT,wFACE,OACE,gDACF,QACA,YACA,2BACE,kCACF,QACA,OACE,yCACF,QACA,OACE,SACF,QACA,YACA,OACE,mDACF,QACA,OACE,wHACA,gMACE,+BACA,iBACF,YACF,QACF,SACEyE,KAAK","file":"../../../scripts/mvc/library/library-folderrow-view.js","sourcesContent":["define([\n    \"libs/toastr\",\n    \"mvc/library/library-model\",\n    \"mvc/library/library-dataset-view\"],\nfunction(mod_toastr,\n         mod_library_model,\n         mod_library_dataset_view) {\n\nvar FolderRowView = Backbone.View.extend({\n\n  events: {\n    'click .undelete_dataset_btn'    : 'undeleteDataset',\n    'click .undelete_folder_btn'     : 'undeleteFolder',\n    'click .edit_folder_btn'         : 'startModifications',\n    'click .cancel_folder_btn'       : 'cancelModifications',\n    'click .save_folder_btn'         : 'saveModifications',\n  },\n\n  defaults: {\n    type: null,\n    visibility_config: {\n      edit_folder_btn: true,\n      save_folder_btn: false,\n      cancel_folder_btn: false,\n      permission_folder_btn: true\n    },\n    edit_mode: false\n  },\n\n  initialize : function(options){\n    this.options = _.defaults( options || {}, this.defaults );\n    this.render(this.options);\n  },\n\n  render: function(options){\n    this.options = _.extend( this.options, options );\n    var folder_item = this.options.model;\n    var template = null;\n\n    if (folder_item.get('type') === 'folder' || folder_item.get('model_class') === 'LibraryFolder'){\n      this.options.type = 'folder';\n      this.prepareButtons(folder_item);\n      if (folder_item.get('deleted')){\n        template = this.templateRowDeletedFolder();\n      } else {\n        template = this.templateRowFolder();\n      }\n    } else if (folder_item.get('type') === 'file' || folder_item.get('model_class') === 'LibraryDatasetDatasetAssociation' || folder_item.get('model_class') === 'LibraryDataset'){\n      this.options.type = 'file';\n      if (folder_item.get('deleted')){\n        template = this.templateRowDeletedFile();\n      } else {\n        template = this.templateRowFile();\n      }\n    } else {\n      Galaxy.emit.error('Unknown library item type found.');\n      Galaxy.emit.error(folder_item.get('type') || folder_item.get('model_class'));\n    }\n    this.setElement(template({content_item: folder_item, edit_mode: this.options.edit_mode, button_config: this.options.visibility_config}));\n    this.$el.show();\n    return this;\n  },\n\n  /**\n   * Modify the visibility of buttons for\n   * the filling of the row template of a given folder.\n   */\n  prepareButtons: function(folder){\n    vis_config = this.options.visibility_config;\n    if (this.options.edit_mode === false){\n      vis_config.save_folder_btn = false;\n      vis_config.cancel_folder_btn = false;\n      if (folder.get('deleted') === true ){\n          vis_config.edit_folder_btn = false;\n          vis_config.permission_folder_btn = false;\n      } else if (folder.get('deleted') === false ) {\n        vis_config.save_folder_btn = false;\n        vis_config.cancel_folder_btn = false;\n        if (folder.get('can_modify') === true){\n          vis_config.edit_folder_btn = true;\n        }\n        if (folder.get('can_manage') === true){\n          vis_config.permission_folder_btn = true;\n        }\n      }\n    } else if (this.options.edit_mode === true){\n      vis_config.edit_folder_btn = false;\n      vis_config.permission_folder_btn = false;\n      vis_config.save_folder_btn = true;\n      vis_config.cancel_folder_btn = true;\n    }\n    this.options.visibility_config = vis_config;\n  },\n\n  /* Show the page with dataset details. */\n  showDatasetDetails : function(){\n    Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({id: this.id});\n  },\n\n  /* Undelete the dataset on server and render the row again. */\n  undeleteDataset : function(event){\n    $(\".tooltip\").hide();\n    var that = this;\n    var dataset_id = $(event.target).closest('tr').data('id');\n    var dataset = Galaxy.libraries.folderListView.collection.get(dataset_id);\n    dataset.url = dataset.urlRoot + dataset.id + '?undelete=true';\n    dataset.destroy({\n        success : function(model, response){\n          Galaxy.libraries.folderListView.collection.remove(dataset_id);\n          var updated_dataset = new mod_library_model.Item(response);\n          Galaxy.libraries.folderListView.collection.add(updated_dataset);\n          Galaxy.libraries.folderListView.collection.sortByNameAsc();\n          mod_toastr.success('Dataset undeleted. Click this to see it.', '', {onclick: function() {\n            var folder_id = that.model.get('folder_id');\n            window.location = Galaxy.root + 'library/list#folders/' + folder_id + '/datasets/' + that.id;\n          }});\n        },\n        error : function(model, response){\n          if (typeof response.responseJSON !== \"undefined\"){\n            mod_toastr.error('Dataset was not undeleted. ' + response.responseJSON.err_msg);\n          } else {\n            mod_toastr.error('An error occured! Dataset was not undeleted. Please try again.');\n          }\n        }\n  });\n  },\n\n  /* Undelete the folder on server and render the row again. */\n  undeleteFolder : function(event){\n    $(\".tooltip\").hide();\n    var that = this;\n    var folder_id = $(event.target).closest('tr').data('id');\n    var folder = Galaxy.libraries.folderListView.collection.get(folder_id);\n    folder.url = folder.urlRoot + folder.id + '?undelete=true';\n    folder.destroy({\n        success : function(model, response){\n          Galaxy.libraries.folderListView.collection.remove(folder_id);\n          var updated_folder = new mod_library_model.FolderAsModel(response);\n          Galaxy.libraries.folderListView.collection.add(updated_folder);\n          Galaxy.libraries.folderListView.collection.sortByNameAsc();\n          mod_toastr.success('Folder undeleted.');\n        },\n        error : function(model, response){\n          if (typeof response.responseJSON !== \"undefined\"){\n            mod_toastr.error('Folder was not undeleted. ' + response.responseJSON.err_msg);\n          } else {\n            mod_toastr.error('An error occured! Folder was not undeleted. Please try again.');\n          }\n        }\n  });\n  },\n\n\n  /* User clicked the 'edit' button on row so render the row as editable. */\n  startModifications: function(){\n    this.options.edit_mode = true;\n    this.repaint();\n  },\n\n  /* User clicked the 'cancel' button so render normal row */\n  cancelModifications: function(){\n    this.options.edit_mode = false;\n    this.repaint();\n  },\n\n  saveModifications: function(){\n    var folder = Galaxy.libraries.folderListView.collection.get(this.$el.data('id'));\n    var is_changed = false;\n    var new_name = this.$el.find('.input_folder_name').val();\n    if (typeof new_name !== 'undefined' && new_name !== folder.get('name') ){\n        if (new_name.length > 2){\n            folder.set(\"name\", new_name);\n            is_changed = true;\n        } else{\n            mod_toastr.warning('Folder name has to be at least 3 characters long.');\n            return;\n        }\n    }\n    var new_description = this.$el.find('.input_folder_description').val();\n    if (typeof new_description !== 'undefined' && new_description !== folder.get('description') ){\n        folder.set(\"description\", new_description);\n        is_changed = true;\n    }\n    if (is_changed){\n      var row_view = this;\n        folder.save(null, {\n          patch: true,\n          success: function(folder) {\n            row_view.options.edit_mode = false;\n            row_view.repaint(folder);\n            mod_toastr.success('Changes to folder saved.');\n          },\n          error: function(model, response){\n            if (typeof response.responseJSON !== \"undefined\"){\n              mod_toastr.error(response.responseJSON.err_msg);\n            } else {\n              mod_toastr.error('An error occured while attempting to update the folder.');\n            }\n          }\n        });\n    } else {\n      this.options.edit_mode = false;\n      this.repaint(folder);\n      mod_toastr.info('Nothing has changed.');\n    }\n  },\n\n  repaint: function(){\n    /* need to hide manually because of the element removal in setElement\n    invoked in render() */\n    $(\".tooltip\").hide();\n    /* we need to store the old element to be able to replace it with\n    new one */\n    var old_element = this.$el;\n    /* if user canceled the folder param is undefined,\n      if user saved and succeeded the updated folder is rendered */\n    this.render();\n    old_element.replaceWith(this.$el);\n    /* now we attach new tooltips to the newly created row element */\n    this.$el.find(\"[data-toggle]\").tooltip();\n  },\n\n  templateRowFolder: function() {\n    return _.template([\n      '<tr class=\"folder_row light library-row\" data-id=\"<%- content_item.id %>\">',\n        '<td>',\n          '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n        '</td>',\n        '<td style=\"text-align: center; \"><input style=\"margin: 0;\" type=\"checkbox\"></td>',\n        '<% if(!edit_mode) { %>',\n          '<td>',\n            '<a href=\"#folders/<%- content_item.id %>\"><%- content_item.get(\"name\") %></a>',\n          '</td>',\n          '<td>',\n            '<%- content_item.get(\"description\") %>',\n          '</td>',\n        '<% } else if(edit_mode){ %>',\n          '<td><textarea rows=\"4\" class=\"form-control input_folder_name\" placeholder=\"name\" ><%- content_item.get(\"name\") %></textarea></td>',\n          '<td><textarea rows=\"4\" class=\"form-control input_folder_description\" placeholder=\"description\" ><%- content_item.get(\"description\") %></textarea></td>',\n        '<% } %>',\n          '<td>folder</td>',\n          '<td></td>',\n          '<td>',\n            '<%= _.escape(content_item.get(\"update_time\")) %>',\n          '</td>',\n          '<td>',\n            '<% if(edit_mode) { %>',  // start edit mode\n              '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save changes\" class=\"primary-button btn-xs save_folder_btn\" type=\"button\" style=\"<% if(button_config.save_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-floppy-o\"/>',\n                '&nbsp;Save',\n              '</button>',\n              '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Discard changes\" class=\"primary-button btn-xs cancel_folder_btn\" type=\"button\" style=\"<% if(button_config.cancel_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-times\"/>',\n                '&nbsp;Cancel',\n              '</button>',\n            '<% } else if (!edit_mode){%>',  // start no edit mode\n              '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs edit_folder_btn\" type=\"button\" style=\"<% if(button_config.edit_folder_btn === false) { print(\"display:none;\") } %>\">',\n                '<span class=\"fa fa-pencil\"/>',\n              '</button>',\n              '<a href=\"#/folders/<%- content_item.id %>/permissions\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permission_folder_btn\" title=\"Manage \\'<%- content_item.get(\"name\") %>\\'\" style=\"<% if(button_config.permission_folder_btn === false) { print(\"display:none;\") } %>\">',\n                  '<span class=\"fa fa-group\"/>',\n                '</button>',\n              '</a>',\n            '<% } %>',  //end no edit mode\n          '</td>',\n      '</tr>'\n        ].join(''));\n  },\n\n  templateRowFile: function(){\n    return _.template([\n    '<tr class=\"dataset_row light library-row\" data-id=\"<%- content_item.id %>\">',\n      '<td>',\n        '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n      '</td>',\n      '<td style=\"text-align: center; \">',\n        '<input style=\"margin: 0;\" type=\"checkbox\">',\n      '</td>',\n      '<td>',\n        '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>\" class=\"library-dataset\">',\n          '<%- content_item.get(\"name\") %>',\n        '<a>',\n      '</td>',\n      '<td><%- content_item.get(\"message\") %></td>',\n      '<td><%= _.escape(content_item.get(\"file_ext\")) %></td>',\n      '<td><%= _.escape(content_item.get(\"file_size\")) %></td>',\n      '<td><%= _.escape(content_item.get(\"update_time\")) %></td>',\n      '<td>',\n        '<% if (content_item.get(\"is_unrestricted\")) { %>',\n          '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Unrestricted dataset\" style=\"color:grey;\" class=\"fa fa-globe fa-lg\"/>',\n        '<% } %>',\n        '<% if (content_item.get(\"is_private\")) { %>',\n          '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Private dataset\" style=\"color:grey;\" class=\"fa fa-key fa-lg\"/>',\n        '<% } %>',\n        '<% if ((content_item.get(\"is_unrestricted\") === false) && (content_item.get(\"is_private\") === false)) { %>',\n          '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Restricted dataset\" style=\"color:grey;\" class=\"fa fa-shield fa-lg\"/>',\n        '<% } %>',\n        '<% if (content_item.get(\"can_manage\")) { %>',\n          '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>/permissions\">',\n            '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permissions-dataset-btn\" title=\"Manage permissions\">',\n              '<span class=\"fa fa-group\"/>',\n            '</button>',\n          '</a>',\n        '<% } %>',\n      '</td>',\n    '</tr>'\n    ].join(''));\n  },\n\n  templateRowDeletedFile: function(){\n    return _.template([\n    '<tr class=\"active deleted_dataset library-row\" data-id=\"<%- content_item.id %>\">',\n      '<td>',\n        '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n      '</td>',\n      '<td></td>',\n      '<td style=\"color:grey;\">',\n        '<%- content_item.get(\"name\") %>',\n      '</td>',\n      '<td>',\n        '<%- content_item.get(\"message\") %>',\n      '</td>',\n      '<td>',\n        '<%= _.escape(content_item.get(\"file_ext\")) %>',\n      '</td>',\n      '<td>',\n        '<%= _.escape(content_item.get(\"file_size\")) %>',\n      '</td>',\n      '<td>',\n        '<%= _.escape(content_item.get(\"update_time\")) %>',\n      '</td>',\n      '<td>',\n        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete <%- content_item.get(\"name\") %>\" class=\"primary-button btn-xs undelete_dataset_btn\" type=\"button\" style=\"margin-left:1em;\">',\n          '<span class=\"fa fa-unlock\"/>',\n          '&nbsp;Undelete',\n        '</button>',\n      '</td>',\n    '</tr>'\n    ].join(''));\n  },\n\n  templateRowDeletedFolder: function(){\n    return _.template([\n    '<tr class=\"active deleted_folder light library-row\" data-id=\"<%- content_item.id %>\">',\n      '<td>',\n        '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n      '</td>',\n      '<td></td>',\n      '<td style=\"color:grey;\">',\n        '<%- content_item.get(\"name\") %>',\n      '</td>',\n      '<td>',\n        '<%- content_item.get(\"description\") %>',\n      '</td>',\n      '<td>',\n        'folder',\n      '</td>',\n      '<td></td>',\n      '<td>',\n        '<%= _.escape(content_item.get(\"update_time\")) %>',\n      '</td>',\n      '<td>',\n        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete <%- content_item.get(\"name\") %>\" class=\"primary-button btn-xs undelete_folder_btn\" type=\"button\" style=\"margin-left:1em;\">',\n          '<span class=\"fa fa-unlock\"/>',\n          '&nbsp;Undelete',\n        '</button>',\n      '</td>',\n    '</tr>'\n    ].join(''));\n  }\n\n});\n\nreturn {\n    FolderRowView: FolderRowView\n};\n\n});\n"]}