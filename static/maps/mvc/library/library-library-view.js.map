{"version":3,"sources":["mvc/library/library-library-view.js"],"names":["define","el","mod_toastr","model","mod_select","LibraryView","Backbone","View","extend","options","events","click .toolbtn_save_permissions","initialize","mod_library_model","this","_","fetch","success","fetchLibrary","error","response","responseJSON","id","Galaxy","that","show_permissions","err_msg","onclick","libraries","library_router","back","showPermissions","fetched_permissions","set","is_unrestricted","$","remove","undefined","access_library_role_list","length","is_admin","user","isAdmin","self","prepareSelectBoxes","fail","html","template","library","get","root","done","css","_serializeRoles","tooltip","i","role_list","selected_roles","selected_access_library_roles","selected_add_item_roles","selected_manage_library_roles","selected_modify_library_roles","_createSelectOptions","add_library_item_role_list","manage_library_role_list","modify_library_role_list","accessSelectObject","init_data","is_library_access","modifySelectObject","multiple","placeholder","ajax","url","dataType","quietMillis","data","$el","find","term","page","q","page_limit","results","more","total","name","roles","role","type","formatSelection","roleFormatSelection","initSelection","element","callback","item","split","each","push","dropdownCssClass","initialData","select_options","post","removeDatasetRestrictions","ids_list","roles_list","_extractIds","savePermissions","add_ids","modify_ids","access_ids","select2","manageSelectObject","access_ids[]","add_ids[]","manage_ids[]","manage_ids","modify_ids[]","templateLibraryPermissions","join"],"mappings":"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","file":"../../../scripts/mvc/library/library-library-view.js","sourcesContent":["define([\n  \"libs/toastr\",\n  \"mvc/library/library-model\",\n  'mvc/ui/ui-select'\n  ],\nfunction(\n        mod_toastr,\n        mod_library_model,\n        mod_select\n        ) {\n\nvar LibraryView = Backbone.View.extend({\n  el: '#center',\n\n  model: null,\n\n  options: {\n\n  },\n\n  events: {\n    \"click .toolbtn_save_permissions\"     :   \"savePermissions\"\n  },\n\n  initialize: function(options){\n    this.options = _.extend(this.options, options);\n    if (this.options.id){\n      this.fetchLibrary();\n    }\n  },\n\n  fetchLibrary: function(options){\n    this.options = _.extend(this.options, options);\n    this.model = new mod_library_model.Library({id:this.options.id});\n    var that = this;\n    this.model.fetch({\n      success: function() {\n        if (that.options.show_permissions){\n            that.showPermissions();\n        }\n      },\n      error: function(model, response){\n        if (typeof response.responseJSON !== \"undefined\"){\n          mod_toastr.error(response.responseJSON.err_msg + ' Click this to go back.', '', {onclick: function() {Galaxy.libraries.library_router.back();}});\n        } else {\n          mod_toastr.error('An error occurred. Click this to go back.', '', {onclick: function() {Galaxy.libraries.library_router.back();}});\n        }\n      }\n    });\n  },\n\n  showPermissions: function(options){\n    this.options = _.extend(this.options, options);\n    $(\".tooltip\").remove();\n\n    if (this.options.fetched_permissions !== undefined){\n      if (this.options.fetched_permissions.access_library_role_list.length === 0){\n        this.model.set({is_unrestricted:true});\n      } else{\n        this.model.set({is_unrestricted:false});\n      }\n    }\n    var is_admin = false;\n    if (Galaxy.user){\n      is_admin = Galaxy.user.isAdmin();\n    }\n    var template = this.templateLibraryPermissions();\n    this.$el.html(template({library: this.model, is_admin:is_admin}));\n\n    var self = this;\n    $.get( Galaxy.root + \"api/libraries/\" + self.id + \"/permissions?scope=current\").done(function(fetched_permissions) {\n      self.prepareSelectBoxes({fetched_permissions:fetched_permissions});\n    }).fail(function(){\n        mod_toastr.error('An error occurred while attempting to fetch library permissions.');\n    });\n\n    $(\"#center [data-toggle]\").tooltip();\n    //hack to show scrollbars\n    $(\"#center\").css('overflow','auto');\n  },\n\n  _serializeRoles : function(role_list){\n    var selected_roles = [];\n    for (var i = 0; i < role_list.length; i++) {\n      selected_roles.push(role_list[i][1] + ':' + role_list[i][0]);\n    }\n    return selected_roles;\n  },\n\n  prepareSelectBoxes: function(options){\n    this.options = _.extend(this.options, options);\n    var fetched_permissions = this.options.fetched_permissions;\n    var self = this;\n\n    var selected_access_library_roles = this._serializeRoles(fetched_permissions.access_library_role_list);\n    var selected_add_item_roles = this._serializeRoles(fetched_permissions.add_library_item_role_list);\n    var selected_manage_library_roles = this._serializeRoles(fetched_permissions.manage_library_role_list);\n    var selected_modify_library_roles = this._serializeRoles(fetched_permissions.modify_library_role_list);\n\n    self.accessSelectObject = new mod_select.View(this._createSelectOptions(this, 'access_perm', selected_access_library_roles, true));\n    self.addSelectObject = new mod_select.View(this._createSelectOptions(this, 'add_perm', selected_add_item_roles, false));\n    self.manageSelectObject = new mod_select.View(this._createSelectOptions(this, 'manage_perm', selected_manage_library_roles, false));\n    self.modifySelectObject = new mod_select.View(this._createSelectOptions(this, 'modify_perm', selected_modify_library_roles, false));\n  },\n\n  _createSelectOptions: function(self, id, init_data, is_library_access){\n    is_library_access = is_library_access === true ? is_library_access : false;\n    var select_options = {\n      minimumInputLength: 0,\n      css: id,\n      multiple:true,\n      placeholder: 'Click to select a role',\n      container: self.$el.find('#' + id),\n      ajax: {\n          url: Galaxy.root + \"api/libraries/\" + self.id + \"/permissions?scope=available&is_library_access=\" + is_library_access,\n          dataType: 'json',\n          quietMillis: 100,\n          data: function (term, page) { // page is the one-based page number tracked by Select2\n              return {\n                  q: term, //search term\n                  page_limit: 10, // page size\n                  page: page // page number\n              };\n          },\n          results: function (data, page) {\n              var more = (page * 10) < data.total; // whether or not there are more results available\n              // notice we return the value of more so Select2 knows if more results can be loaded\n              return {results: data.roles, more: more};\n          }\n      },\n      formatResult : function roleFormatResult(role) {\n          return role.name + ' type: ' + role.type;\n      },\n\n      formatSelection: function roleFormatSelection(role) {\n          return role.name;\n      },\n      initSelection: function(element, callback) {\n      // the input tag has a value attribute preloaded that points to a preselected role's id\n      // this function resolves that id attribute to an object that select2 can render\n      // using its formatResult renderer - that way the role name is shown preselected\n          var data = [];\n          $(element.val().split(\",\")).each(function() {\n              var item = this.split(':');\n              data.push({\n                  id: item[0],\n                  name: item[1]\n              });\n          });\n          callback(data);\n      },\n      // initialData: init_data.join(','),\n      initialData: init_data,\n      dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n    };\n\n    return select_options;\n  },\n\n  makeDatasetPrivate: function(){\n    var self = this;\n    $.post( Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=make_private\").done(function(fetched_permissions) {\n      self.model.set({is_unrestricted:false});\n      self.showPermissions({fetched_permissions:fetched_permissions})\n      mod_toastr.success('The dataset is now private to you.');\n    }).fail(function(){\n      mod_toastr.error('An error occurred while attempting to make dataset private.');\n    });\n  },\n\n  removeDatasetRestrictions: function(){\n    var self = this;\n    $.post( Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=remove_restrictions\")\n    .done(function(fetched_permissions) {\n      self.model.set({is_unrestricted:true});\n      self.showPermissions({fetched_permissions:fetched_permissions})\n      mod_toastr.success('Access to this dataset is now unrestricted.');\n    })\n    .fail(function(){\n      mod_toastr.error('An error occurred while attempting to make dataset unrestricted.');\n    });\n  },\n\n  _extractIds: function(roles_list){\n    var ids_list = [];\n    for (var i = roles_list.length - 1; i >= 0; i--) {\n      ids_list.push(roles_list[i].id);\n    };\n    return ids_list;\n  },\n  savePermissions: function(event){\n    var self = this;\n\n    var access_ids = this._extractIds(this.accessSelectObject.$el.select2('data'));\n    var add_ids = this._extractIds(this.addSelectObject.$el.select2('data'));\n    var manage_ids = this._extractIds(this.manageSelectObject.$el.select2('data'));\n    var modify_ids = this._extractIds(this.modifySelectObject.$el.select2('data'));\n\n    $.post( Galaxy.root + \"api/libraries/\" + self.id + \"/permissions?action=set_permissions\", { 'access_ids[]': access_ids, 'add_ids[]': add_ids, 'manage_ids[]': manage_ids, 'modify_ids[]': modify_ids, } )\n    .done(function(fetched_permissions){\n      //fetch dataset again\n      self.showPermissions({fetched_permissions:fetched_permissions})\n      mod_toastr.success('Permissions saved.');\n    })\n    .fail(function(){\n      mod_toastr.error('An error occurred while attempting to set library permissions.');\n    })\n  },\n\n  templateLibraryPermissions : function(){\n    return _.template([\n    '<div class=\"library_style_container\">',\n      '<div id=\"library_toolbar\">',\n        '<a href=\"#\">',\n          '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to the list of Libraries\" class=\"btn btn-default primary-button\" type=\"button\">',\n            '<span class=\"fa fa-list\"/>',\n            '&nbsp;Libraries',\n          '</button>',\n        '</a>',\n      '</div>',\n      '<h1>',\n        'Library: <%= _.escape(library.get(\"name\")) %>',\n      '</h1>',\n      '<div class=\"alert alert-warning\">',\n        '<% if (is_admin) { %>',\n          'You are logged in as an <strong>administrator</strong> therefore you can manage any library on this Galaxy instance. Please make sure you understand the consequences.',\n        '<% } else { %>',\n          'You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.',\n        '<% }%>',\n      '</div>',\n      '<div class=\"dataset_table\">',\n        '<h2>Library permissions</h2>',\n        '<h4>Roles that can access the library</h4>',\n        '<div id=\"access_perm\" class=\"access_perm roles-selection\"/>',\n        '<div class=\"alert alert-info roles-selection\">',\n          'User with <strong>any</strong> of these roles can access this library. If there are no access roles set on the library it is considered <strong>unrestricted</strong>.',\n        '</div>',\n        '<h4>Roles that can manage permissions on this library</h4>',\n        '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"/>',\n        '<div class=\"alert alert-info roles-selection\">',\n          'User with <strong>any</strong> of these roles can manage permissions on this library (includes giving access).',\n        '</div>',\n        '<h4>Roles that can add items to this library</h4>',\n        '<div id=\"add_perm\" class=\"add_perm roles-selection\"/>',\n        '<div class=\"alert alert-info roles-selection\">',\n          'User with <strong>any</strong> of these roles can add items to this library (folders and datasets).',\n        '</div>',\n        '<h4>Roles that can modify this library</h4>',\n        '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"/>',\n        '<div class=\"alert alert-info roles-selection\">',\n          'User with <strong>any</strong> of these roles can modify this library (name, synopsis, etc.).',\n        '</div>',\n        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n          '<span class=\"fa fa-floppy-o\"/>',\n          '&nbsp;Save',\n        '</button>',\n      '</div>',\n    '</div>',\n    ].join(''));\n  }\n\n});\n\nreturn {\n    LibraryView: LibraryView\n};\n\n});\n"]}