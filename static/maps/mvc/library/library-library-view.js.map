{"version":3,"sources":["mvc/library/library-library-view.js"],"names":["define","mod_toastr","mod_library_model","mod_select","LibraryView","Backbone","View","extend","model","options","events","initialize","_","this","fetchLibrary","id","that","fetch","success","show_permissions","error","response","responseJSON","onclick","Galaxy","libraries","library_router","back","showPermissions","$","remove","undefined","fetched_permissions","template","templateLibraryPermissions","set","is_unrestricted","root","self","is_admin","fail","user","isAdmin","$el","html","library","_serializeRoles","selected_roles","done","prepareSelectBoxes","selected_access_library_roles","tooltip","addSelectObject","role_list","_createSelectOptions","length","i","is_library_access","select_options","multiple","ajax","url","dataType","quietMillis","access_library_role_list","page_limit","page","selected_manage_library_roles","results","manage_library_role_list","selected_modify_library_roles","formatResult","roleFormatResult","formatSelection","name","item","callback","modifySelectObject","makeDatasetPrivate","init_data","post","_extractIds","ids_list","data","roles_list","q","term","access_ids","add_ids","more","modify_ids","roles","role","type","element","val","split","each","push","initialData","dropdownCssClass","removeDatasetRestrictions","savePermissions","event","accessSelectObject","select2","manage_ids","manageSelectObject","access_ids[]","add_ids[]","manage_ids[]","modify_ids[]","join"],"mappings":"qEAAAA,QACK,cAAe,4BAA6B,oBAC7C,SAASC,EAAYC,EAAmBC,GAgYpC,OACIC,YAlYRC,SAAgBC,KAAAC,QAERH,GAAAA,UAGAI,MAAO,KAEPC,WAEAC,QAAAA,kCAAQ,mBAIRC,WAAY,SAASF,GAArBE,KAAAA,QAAYC,EAAAL,OAAAM,KAASJ,QAASA,GAC1BI,KAAKJ,QAAYF,IACbM,KAAKJ,gBAKbK,aAAc,SAASL,GAAvBK,KAAAA,QAAcF,EAAAL,OAAAM,KAAAJ,QAASA,GACnBI,KAAKJ,MAAL,IAAiBF,EAAYE,SAC7BM,GAAKP,KAAQC,QAAIP,KAA0B,IAA3Cc,EAAAH,KAGAA,KAAIG,MAAOC,OACXC,QAAWD,WACPC,EAAST,QAAAU,kBACDH,EAAKP,mBAGZW,MALY,SAAAZ,EAAAa,QAMoB,IAA1BA,EAASb,aACRP,EAAOoB,MACPpB,EAAWmB,aACEE,QAILC,0BACIC,IANZD,QAAA,WAUGC,OAAAC,UAAAC,eAAAC,UAIC1B,EAHJmB,MASH,4CACJ,IArD0BG,QAAA,WAgDPC,OAAOC,UAAUC,eAAeC,cAoBhDC,gBAAKpB,SAALC,GACHI,KAAAJ,QAAAG,EAAAL,OAAAM,KAAAJ,QAAAA,GACJoB,EAAA,YAAAC,cAEgBC,IAAbP,KAAAA,QAAaQ,sBAGjB,IADCnB,KAAAJ,QAAAuB,oBACGC,yBAAgBC,OATZrB,KAAKL,MAAM2B,KAAMC,iBAAiB,IAgBtCZ,KAAOa,MAAPF,KACIC,iBACAE,KAIwB,IAAAC,GAAxB,EAIHC,OAAKC,OACFxC,EAAWmB,OACPqB,KAAAC,WAnBZ,IAAIT,EAAWpB,KAAKqB,6BAuBpBL,KAAEc,IAAAC,KACFX,GAAAY,QAAAhC,KAAAL,MAAA+B,SAAAA,KAnBA,IAAID,EAAOzB,KAuBfiC,EAAAA,IACQC,OAAAA,KACC,iBACDA,EAAAA,GAGH,8BA7G8BC,KAAA,SAAAhB,GAwFvBM,EAAKW,oBAyBjBA,oBAAoBjB,MAGZM,KAAAA,WAvBIrC,EAAWmB,MAyBf8B,sEApBJrB,EAAE,yBAAyBsB,UAyC3Bb,EAAAA,WAAKc,IAAAA,WAAsBjD,SAwB9B2C,gBAnKkC,SAAAO,GAqKnCC,IAAAA,IA7DQP,KA6DRO,EAAAA,EAAAA,EAAsBD,EAAAE,OAAAC,IAMlBC,EAAAA,KAEIC,EAAAA,GAAiB,GAAA,IAAAL,EAAAG,GAAA,IAGjBG,OAAAA,GAGAC,mBAAM,SAAAnD,GACFoD,KAAAA,QACIrC,EAAAA,OAAAX,KACAJ,QAAAA,GAIJqD,IAAAA,EAPEjD,KAAAJ,QAAAuB,oBAQF+B,EAAAA,KAEIb,EAAArC,KAAAiC,gBACAd,EAAOgC,0BAEHC,EAFGpD,KAEaiC,gBAChBoB,EAAMA,4BAEbC,EAhBCtD,KAAAiC,gBAiBFsB,EAASC,0BAELC,EAAAzD,KAAAiC,gBACAd,EAASoC,0BAGjBG,EAAAA,mBAAc,IAASC,EAAAA,KACnB3D,KAAAyC,qBA9BazC,KAvCb,cAwEJ4D,GACI,IAGAnC,EAAAc,gBAAA,IAAAjD,EAAAG,KACAO,KAAAyC,qBACAzC,KACA,WACAgB,GACI,IAGI6C,EAAAA,mBAAMC,IAAAxE,EAAAG,KAFAO,KAAAyC,qBAIbzC,KACD+D,cAhDaT,GAkDjB,IAlDiB7B,EAArBuC,mBAAA,IAAA1E,EAAAG,KAjBIO,KAAKyC,qBAwEFI,KApOwB,cA+JvBY,GAwEZQ,KAWgB9C,qBAAAA,SADiBM,EAGrBrC,EAGH8E,EAEG9E,GArBR,OApO+BwD,GA4KL,IAAtBA,GAA6BA,GAoF7BnB,mBAAJ,EACE0C,IACExD,EAMIc,UAAA,EACAA,YAAKV,yBACDI,UAAAA,EAAAA,IAAAA,KAAqBA,IAAAA,GADJ4B,MAGrB3D,IAIEuB,OAAAa,KACFpC,iBAhBRqC,EAAAvB,GAjQ+B,kDAyLnB0C,EA8FhBwB,SAAa,OACLC,YAAJ,IACKC,KAAQC,SAAAA,EAAW7B,GAEvB,OACD8B,EAAAC,EA5R+BrB,WAAA,GA8RlBC,KAAAA,IAGTqB,QAAa,SAAKN,EAAAA,GAGlBO,IAAUC,EAAA,GAAKR,EACfE,EAAK/B,MAKLsC,OAAatB,QAAKa,EAClBU,MAAKd,KAAAA,KASDN,aAAA,SADJqB,GAEI,OAAAA,EAAaJ,KAFjB,UAAAI,EAAAC,MAOC7C,gBAAchB,SAAqB4D,GAChC,OAAAA,EAAAlB,MAEI1C,cAAAA,SAAAA,EAAqBA,GAKzB/B,IAAAA,KApBR4B,EAAAiE,EAAAC,MAAAC,MAAA,MAAAC,KAAA,WA9S+B,IAAAtB,EAAA9D,KAAAmF,MAAA,KAwNnBb,EAAKe,MAgHrBhE,GAAAA,EAA4B,GACfD,KAED0C,EAAA,OA9GAC,EAASO,IAkKzBgB,YAAApB,EAlYRqB,iBAAA,YA0OYtB,mBAAoB,WAChB,IAAIxC,EAAOzB,KACXgB,EAAEmD,KACExD,OAAOa,KACH,0BACAC,EAAKvB,GACL,oCAEHiC,KAAK,SAAShB,GACXM,EAAK9B,MAAM2B,KAAMC,iBAAiB,IAClCE,EAAKV,iBACDI,oBAAqBA,IAEzB/B,EAAWiB,QACP,wCAGPsB,KAAK,WACFvC,EAAWmB,MACP,kEAKhBiF,0BAA2B,WACvB,IAAI/D,EAAOzB,KACXgB,EAAEmD,KACExD,OAAOa,KACH,0BACAC,EAAKvB,GACL,2CAEHiC,KAAK,SAAShB,GACXM,EAAK9B,MAAM2B,KAAMC,iBAAiB,IAClCE,EAAKV,iBACDI,oBAAqBA,IAEzB/B,EAAWiB,QACP,iDAGPsB,KAAK,WACFvC,EAAWmB,MACP,uEAKhB6D,YAAa,SAASG,GAElB,IAAK,IADDF,KACK1B,EAAI4B,EAAW7B,OAAS,EAAGC,GAAK,EAAGA,IACxC0B,EAASgB,KAAKd,EAAW5B,GAAGzC,IAEhC,OAAOmE,GAEXoB,gBAAiB,SAASC,GACtB,IAAIjE,EAAOzB,KAEP0E,EAAa1E,KAAKoE,YAClBpE,KAAK2F,mBAAmB7D,IAAI8D,QAAQ,SAEpCjB,EAAU3E,KAAKoE,YACfpE,KAAKuC,gBAAgBT,IAAI8D,QAAQ,SAEjCC,EAAa7F,KAAKoE,YAClBpE,KAAK8F,mBAAmBhE,IAAI8D,QAAQ,SAEpCf,EAAa7E,KAAKoE,YAClBpE,KAAKgE,mBAAmBlC,IAAI8D,QAAQ,SAGxC5E,EAAEmD,KACExD,OAAOa,KACH,iBACAC,EAAKvB,GACL,uCAEA6F,eAAgBrB,EAChBsB,YAAarB,EACbsB,eAAgBJ,EAChBK,eAAgBrB,IAGnB1C,KAAK,SAAShB,GAEXM,EAAKV,iBACDI,oBAAqBA,IAEzB/B,EAAWiB,QAAQ,wBAEtBsB,KAAK,WACFvC,EAAWmB,MACP,qEAKhBc,2BAA4B,WACxB,OAAOtB,EAAEqB,UAED,wCACA,6BACA,eACA,oJACA,6BACA,kBACA,YACA,OACA,SACA,OACA,gDACA,QACA,oCACA,wBACA,yKACA,iBACA,+IACA,SACA,SACA,8BACA,+BACA,6CACA,8DACA,iDACA,yKACA,SACA,6DACA,8DACA,iDACA,iHACA,SACA,oDACA,wDACA,iDACA,sGACA,SACA,8CACA,8DACA,iDACA,gGACA,SACA,iLACA,iCACA,aACA,YACA,SACA,UACF+E,KAAK","file":"../../../scripts/mvc/library/library-library-view.js","sourcesContent":["define(\n    [\"libs/toastr\", \"mvc/library/library-model\", \"mvc/ui/ui-select\"],\n    function(mod_toastr, mod_library_model, mod_select) {\n        var LibraryView = Backbone.View.extend({\n            el: \"#center\",\n\n            model: null,\n\n            options: {},\n\n            events: {\n                \"click .toolbtn_save_permissions\": \"savePermissions\"\n            },\n\n            initialize: function(options) {\n                this.options = _.extend(this.options, options);\n                if (this.options.id) {\n                    this.fetchLibrary();\n                }\n            },\n\n            fetchLibrary: function(options) {\n                this.options = _.extend(this.options, options);\n                this.model = new mod_library_model.Library({\n                    id: this.options.id\n                });\n                var that = this;\n                this.model.fetch({\n                    success: function() {\n                        if (that.options.show_permissions) {\n                            that.showPermissions();\n                        }\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(\n                                response.responseJSON.err_msg +\n                                    \" Click this to go back.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        Galaxy.libraries.library_router.back();\n                                    }\n                                }\n                            );\n                        } else {\n                            mod_toastr.error(\n                                \"An error occurred. Click this to go back.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        Galaxy.libraries.library_router.back();\n                                    }\n                                }\n                            );\n                        }\n                    }\n                });\n            },\n\n            showPermissions: function(options) {\n                this.options = _.extend(this.options, options);\n                $(\".tooltip\").remove();\n\n                if (this.options.fetched_permissions !== undefined) {\n                    if (\n                        this.options.fetched_permissions\n                            .access_library_role_list.length === 0\n                    ) {\n                        this.model.set({ is_unrestricted: true });\n                    } else {\n                        this.model.set({ is_unrestricted: false });\n                    }\n                }\n                var is_admin = false;\n                if (Galaxy.user) {\n                    is_admin = Galaxy.user.isAdmin();\n                }\n                var template = this.templateLibraryPermissions();\n                this.$el.html(\n                    template({ library: this.model, is_admin: is_admin })\n                );\n\n                var self = this;\n                $.get(\n                    Galaxy.root +\n                        \"api/libraries/\" +\n                        self.id +\n                        \"/permissions?scope=current\"\n                )\n                    .done(function(fetched_permissions) {\n                        self.prepareSelectBoxes({\n                            fetched_permissions: fetched_permissions\n                        });\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to fetch library permissions.\"\n                        );\n                    });\n\n                $(\"#center [data-toggle]\").tooltip();\n                //hack to show scrollbars\n                $(\"#center\").css(\"overflow\", \"auto\");\n            },\n\n            _serializeRoles: function(role_list) {\n                var selected_roles = [];\n                for (var i = 0; i < role_list.length; i++) {\n                    selected_roles.push(\n                        role_list[i][1] + \":\" + role_list[i][0]\n                    );\n                }\n                return selected_roles;\n            },\n\n            prepareSelectBoxes: function(options) {\n                this.options = _.extend(this.options, options);\n                var fetched_permissions = this.options.fetched_permissions;\n                var self = this;\n\n                var selected_access_library_roles = this._serializeRoles(\n                    fetched_permissions.access_library_role_list\n                );\n                var selected_add_item_roles = this._serializeRoles(\n                    fetched_permissions.add_library_item_role_list\n                );\n                var selected_manage_library_roles = this._serializeRoles(\n                    fetched_permissions.manage_library_role_list\n                );\n                var selected_modify_library_roles = this._serializeRoles(\n                    fetched_permissions.modify_library_role_list\n                );\n\n                self.accessSelectObject = new mod_select.View(\n                    this._createSelectOptions(\n                        this,\n                        \"access_perm\",\n                        selected_access_library_roles,\n                        true\n                    )\n                );\n                self.addSelectObject = new mod_select.View(\n                    this._createSelectOptions(\n                        this,\n                        \"add_perm\",\n                        selected_add_item_roles,\n                        false\n                    )\n                );\n                self.manageSelectObject = new mod_select.View(\n                    this._createSelectOptions(\n                        this,\n                        \"manage_perm\",\n                        selected_manage_library_roles,\n                        false\n                    )\n                );\n                self.modifySelectObject = new mod_select.View(\n                    this._createSelectOptions(\n                        this,\n                        \"modify_perm\",\n                        selected_modify_library_roles,\n                        false\n                    )\n                );\n            },\n\n            _createSelectOptions: function(\n                self,\n                id,\n                init_data,\n                is_library_access\n            ) {\n                is_library_access =\n                    is_library_access === true ? is_library_access : false;\n                var select_options = {\n                    minimumInputLength: 0,\n                    css: id,\n                    multiple: true,\n                    placeholder: \"Click to select a role\",\n                    container: self.$el.find(\"#\" + id),\n                    ajax: {\n                        url:\n                            Galaxy.root +\n                            \"api/libraries/\" +\n                            self.id +\n                            \"/permissions?scope=available&is_library_access=\" +\n                            is_library_access,\n                        dataType: \"json\",\n                        quietMillis: 100,\n                        data: function(term, page) {\n                            // page is the one-based page number tracked by Select2\n                            return {\n                                q: term, //search term\n                                page_limit: 10, // page size\n                                page: page // page number\n                            };\n                        },\n                        results: function(data, page) {\n                            var more = page * 10 < data.total; // whether or not there are more results available\n                            // notice we return the value of more so Select2 knows if more results can be loaded\n                            return { results: data.roles, more: more };\n                        }\n                    },\n                    formatResult: function roleFormatResult(role) {\n                        return role.name + \" type: \" + role.type;\n                    },\n\n                    formatSelection: function roleFormatSelection(role) {\n                        return role.name;\n                    },\n                    initSelection: function(element, callback) {\n                        // the input tag has a value attribute preloaded that points to a preselected role's id\n                        // this function resolves that id attribute to an object that select2 can render\n                        // using its formatResult renderer - that way the role name is shown preselected\n                        var data = [];\n                        $(element.val().split(\",\")).each(function() {\n                            var item = this.split(\":\");\n                            data.push({\n                                id: item[0],\n                                name: item[1]\n                            });\n                        });\n                        callback(data);\n                    },\n                    // initialData: init_data.join(','),\n                    initialData: init_data,\n                    dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n                };\n\n                return select_options;\n            },\n\n            makeDatasetPrivate: function() {\n                var self = this;\n                $.post(\n                    Galaxy.root +\n                        \"api/libraries/datasets/\" +\n                        self.id +\n                        \"/permissions?action=make_private\"\n                )\n                    .done(function(fetched_permissions) {\n                        self.model.set({ is_unrestricted: false });\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\n                            \"The dataset is now private to you.\"\n                        );\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to make dataset private.\"\n                        );\n                    });\n            },\n\n            removeDatasetRestrictions: function() {\n                var self = this;\n                $.post(\n                    Galaxy.root +\n                        \"api/libraries/datasets/\" +\n                        self.id +\n                        \"/permissions?action=remove_restrictions\"\n                )\n                    .done(function(fetched_permissions) {\n                        self.model.set({ is_unrestricted: true });\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\n                            \"Access to this dataset is now unrestricted.\"\n                        );\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to make dataset unrestricted.\"\n                        );\n                    });\n            },\n\n            _extractIds: function(roles_list) {\n                var ids_list = [];\n                for (var i = roles_list.length - 1; i >= 0; i--) {\n                    ids_list.push(roles_list[i].id);\n                }\n                return ids_list;\n            },\n            savePermissions: function(event) {\n                var self = this;\n\n                var access_ids = this._extractIds(\n                    this.accessSelectObject.$el.select2(\"data\")\n                );\n                var add_ids = this._extractIds(\n                    this.addSelectObject.$el.select2(\"data\")\n                );\n                var manage_ids = this._extractIds(\n                    this.manageSelectObject.$el.select2(\"data\")\n                );\n                var modify_ids = this._extractIds(\n                    this.modifySelectObject.$el.select2(\"data\")\n                );\n\n                $.post(\n                    Galaxy.root +\n                        \"api/libraries/\" +\n                        self.id +\n                        \"/permissions?action=set_permissions\",\n                    {\n                        \"access_ids[]\": access_ids,\n                        \"add_ids[]\": add_ids,\n                        \"manage_ids[]\": manage_ids,\n                        \"modify_ids[]\": modify_ids\n                    }\n                )\n                    .done(function(fetched_permissions) {\n                        //fetch dataset again\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\"Permissions saved.\");\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to set library permissions.\"\n                        );\n                    });\n            },\n\n            templateLibraryPermissions: function() {\n                return _.template(\n                    [\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<a href=\"#\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to the list of Libraries\" class=\"btn btn-default primary-button\" type=\"button\">',\n                        '<span class=\"fa fa-list\"/>',\n                        \"&nbsp;Libraries\",\n                        \"</button>\",\n                        \"</a>\",\n                        \"</div>\",\n                        \"<h1>\",\n                        'Library: <%= _.escape(library.get(\"name\")) %>',\n                        \"</h1>\",\n                        '<div class=\"alert alert-warning\">',\n                        \"<% if (is_admin) { %>\",\n                        \"You are logged in as an <strong>administrator</strong> therefore you can manage any library on this Galaxy instance. Please make sure you understand the consequences.\",\n                        \"<% } else { %>\",\n                        \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                        \"<% }%>\",\n                        \"</div>\",\n                        '<div class=\"dataset_table\">',\n                        \"<h2>Library permissions</h2>\",\n                        \"<h4>Roles that can access the library</h4>\",\n                        '<div id=\"access_perm\" class=\"access_perm roles-selection\"/>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can access this library. If there are no access roles set on the library it is considered <strong>unrestricted</strong>.\",\n                        \"</div>\",\n                        \"<h4>Roles that can manage permissions on this library</h4>\",\n                        '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"/>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can manage permissions on this library (includes giving access).\",\n                        \"</div>\",\n                        \"<h4>Roles that can add items to this library</h4>\",\n                        '<div id=\"add_perm\" class=\"add_perm roles-selection\"/>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can add items to this library (folders and datasets).\",\n                        \"</div>\",\n                        \"<h4>Roles that can modify this library</h4>\",\n                        '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"/>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can modify this library (name, synopsis, etc.).\",\n                        \"</div>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                        '<span class=\"fa fa-floppy-o\"/>',\n                        \"&nbsp;Save\",\n                        \"</button>\",\n                        \"</div>\",\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            }\n        });\n\n        return {\n            LibraryView: LibraryView\n        };\n    }\n);\n"]}