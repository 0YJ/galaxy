{"version":3,"sources":["mvc/library/library-model.js"],"names":["Library","Backbone","Model","extend","urlRoot","Galaxy","root","isVisible","show_deleted","this","get","model","options","search","search_term","toLowerCase","filter","data","indexOf","lowercase_term","getVisible","filters","Libraries","sortLibraries","sort_key","sort_order","comparator","_libraryUtil2","default","generateLibraryComparator","LibraryItem","FolderAsModel","Folder","Collection","sortFolder","generateFolderComparator","defaults","id","parse","obj","FolderContainer","folder_contents","length","i","type","folder_item","add","file_item","reset","Ldda","HistoryItem","HistoryContents","initialize","url","GalaxyHistories","GalaxyHistory","Jstree","Item"],"mappings":"iNAIIA,EAAUC,SAASC,MAAMC,QACzBC,QAASC,OAAOC,KAAO,iBAKvBC,UAAW,SAASC,GAChB,IAAID,GAAY,EAVxB,OAWaC,GAAgBC,KAAKC,IAAI,aAC1BH,GAAY,GAZxBA,KAIIH,EAAAA,SAAgBE,WAAOH,QAevBC,QAASC,OAAOC,KAAO,gBAEvBK,MAAOX,EAZPO,WAAAA,SAAWK,GACPA,EAAIL,OAGHM,OAAA,SAAAC,GAqBD,GAAmB,IAAfA,EAAmB,OAAOL,KAblCE,IAAAA,EAHuCG,EAAAC,cAkBnC,OAAON,KAAKO,OAAO,SAAAC,GAZnBL,OAAA,IADQK,EAAAP,IAASE,QAASG,cACLG,QAArBC,MAsBJC,WAAY,SAASZ,EAAca,GAR3B,OASJA,EAAUA,MAbS,IAAIC,EACvBb,KAAIU,OAAAA,SAAAA,GAAAA,OAAAA,EAAiBL,UAAYC,OAoBrCQ,cAAe,SAASC,EAAUC,GAblChB,KAAAiB,WAAAC,EAAAC,QAAAC,0BAeQL,EACAC,GAZRL,KAAAA,UAOCU,EAnCsC7B,SAAAC,MAAAC,WAqCvCoB,EAAAA,EAAepB,QACXC,QAAAC,OAAKqB,KAAL,4BAtCmCK,EAA3CD,EAAA3B,QAwDIC,QAASC,OAAOC,KAAO,iBAGvB0B,EAAS/B,SAASgC,WAAW9B,QAVjCQ,MAAImB,EAEJI,WAAWJ,SAAAA,EAAmBL,GAC1BrB,KAAAA,WAAgBE,EAAAA,QAAO6B,yBAD3BX,EAcYC,GATRrB,KAAAA,UAIAO,EAAOmB,SAD6B5B,MAAAC,QAapCiC,UAVAF,OAAAA,IAAYF,EACR5B,QAAKsB,OAAAA,KAAa,eAIlBW,GAAA,WARgCC,MAAxC,SAAAC,GAYIC,KAAAA,IAAAA,UAAkBvC,QAGdG,IAAAA,IAAAA,EAASC,EAAAA,EAAOC,EAAPmC,gBAAcC,OAFjBC,IAGNN,GAAI,WAAAE,EAAAE,gBAAAE,GAAAC,KAAA,CAJgC,IAAAC,EAAA,IAAAd,EAAAQ,EAAAE,gBAAAE,IAMjClC,KAAAC,IAAA,UAAcoC,IAAAD,QACjB,GAAA,SAAAN,EAAAE,gBAAAE,GAAAC,KAAA,CACA,IAAAG,EAAmBC,IAAnBC,EAAAV,EAAAE,gBAAAE,IACAlC,KAAAC,IAAA,UAAAoC,IAAAC,QAEA1C,OAASsC,KAAOA,MACRJ,gEAIA,OAAAA,KAhB4BW,EAA5CjD,SAAAC,MAAAC,QAiCIC,QAASC,OAAOC,KAAO,mBAH3B6C,EAAAlD,SAAAgC,WAAA9B,QAOIC,QAASC,OAAOC,KAAO,iBAL3B8C,WAAIF,SAAcjD,GACdG,KAAAA,GAASC,EAAOC,IAQhB+C,IAAK,WALLF,OAAAA,KAAAA,QAAkBlD,KAASgC,GAAAA,aAE3BmB,MAAAA,IAGAC,EAAKpD,SAAWC,MAAAC,QACZC,QAAAC,OAAOC,KAAKF,mBAN6BkD,EAAjDrD,SAAAgC,WAAA9B,QAgBIkD,IAAKhD,OAAOC,KAAO,gBALvBK,MAAI4C,IASJC,EAAAvD,SAAAC,MAAAC,QACAC,QAAAC,OAAAC,KAAA,gCAUIN,QAASA,EALbsB,UAAIkC,EACApD,KAAAA,EAD+B6C,KAAnCA,EASIlB,cAAeA,EACfC,OAAQA,EALRhC,gBAASA,EACTsB,YAAAA,EACAmC,gBAHWN,EAIXF,cAJWM,EAKXxB,gBAAAA,EACAC,OAAAA","file":"../../../scripts/mvc/library/library-model.js","sourcesContent":["import mod_util from \"mvc/library/library-util\";\n// ============================================================================\n// LIBRARY RELATED MODELS\n\nvar Library = Backbone.Model.extend({\n    urlRoot: Galaxy.root + \"api/libraries/\",\n\n    /** based on show_deleted would this lib show in the list of lib's?\n       *  @param {Boolean} show_deleted are we including deleted libraries?\n       */\n    isVisible: function(show_deleted) {\n        var isVisible = true;\n        if (!show_deleted && this.get(\"deleted\")) {\n            isVisible = false;\n        }\n        return isVisible;\n    }\n});\n\nvar Libraries = Backbone.Collection.extend({\n    urlRoot: Galaxy.root + \"api/libraries\",\n\n    model: Library,\n\n    initialize: function(options) {\n        options = options || {};\n    },\n\n    search: function(search_term) {\n        /**\n         * Search the collection and return only the models that have\n         * the search term in their names.\n         * [the term to search]\n         * @type {string}\n         */\n        if (search_term == \"\") return this;\n        var lowercase_term = search_term.toLowerCase();\n        return this.filter(data => {\n            var lowercase_name = data.get(\"name\").toLowerCase();\n            return lowercase_name.indexOf(lowercase_term) !== -1;\n        });\n    },\n\n    /** Get every 'shown' library in this collection based on deleted filter\n       *  @param {Boolean} show_deleted are we including deleted libraries?\n       *  @returns array of library models\n       */\n    getVisible: function(show_deleted, filters) {\n        filters = filters || [];\n        var filteredLibraries = new Libraries(\n            this.filter(item => item.isVisible(show_deleted))\n        );\n\n        return filteredLibraries;\n    },\n\n    sortLibraries: function(sort_key, sort_order) {\n        this.comparator = mod_util.generateLibraryComparator(\n            sort_key,\n            sort_order\n        );\n        this.sort();\n    }\n});\n\n// ============================================================================\n// FOLDER RELATED MODELS\n\nvar LibraryItem = Backbone.Model.extend({});\n\nvar Ldda = LibraryItem.extend({\n    urlRoot: Galaxy.root + \"api/libraries/datasets/\"\n});\n\nvar FolderAsModel = LibraryItem.extend({\n    urlRoot: Galaxy.root + \"api/folders/\"\n});\n\nvar Folder = Backbone.Collection.extend({\n    model: LibraryItem,\n\n    sortFolder: function(sort_key, sort_order) {\n        this.comparator = mod_util.generateFolderComparator(\n            sort_key,\n            sort_order\n        );\n        this.sort();\n    }\n});\n\nvar FolderContainer = Backbone.Model.extend({\n    defaults: {\n        folder: new Folder(),\n        urlRoot: Galaxy.root + \"api/folders/\",\n        id: \"unknown\"\n    },\n    parse: function(obj) {\n        // empty the collection\n        this.get(\"folder\").reset();\n        // response is not a simple array, it contains metadata\n        // this will update the inner collection\n        for (var i = 0; i < obj.folder_contents.length; i++) {\n            if (obj.folder_contents[i].type === \"folder\") {\n                var folder_item = new FolderAsModel(obj.folder_contents[i]);\n                this.get(\"folder\").add(folder_item);\n            } else if (obj.folder_contents[i].type === \"file\") {\n                var file_item = new Ldda(obj.folder_contents[i]);\n                this.get(\"folder\").add(file_item);\n            } else {\n                Galaxy.emit.error(\n                    \"Unknown folder item type encountered while parsing response.\"\n                );\n            }\n        }\n        return obj;\n    }\n});\n\n// ============================================================================\n// HISTORY RELATED MODELS\n// TODO UNITE\n\nvar HistoryItem = Backbone.Model.extend({\n    urlRoot: Galaxy.root + \"api/histories/\"\n});\n\nvar HistoryContents = Backbone.Collection.extend({\n    urlRoot: Galaxy.root + \"api/histories/\",\n    initialize: function(options) {\n        this.id = options.id;\n    },\n    url: function() {\n        return this.urlRoot + this.id + \"/contents\";\n    },\n    model: HistoryItem\n});\n\nvar GalaxyHistory = Backbone.Model.extend({\n    urlRoot: Galaxy.root + \"api/histories/\"\n});\n\nvar GalaxyHistories = Backbone.Collection.extend({\n    url: Galaxy.root + \"api/histories\",\n    model: GalaxyHistory\n});\n\n// ============================================================================\n// JSTREE MODEL\n/** Represents folder structure parsable by the jstree component.\n     *\n     */\n\nvar Jstree = Backbone.Model.extend({\n    urlRoot: Galaxy.root + \"api/remote_files\"\n});\n\nexport default {\n    Library: Library,\n    Libraries: Libraries,\n    Item: Ldda,\n    Ldda: Ldda,\n    FolderAsModel: FolderAsModel,\n    Folder: Folder,\n    FolderContainer: FolderContainer,\n    HistoryItem: HistoryItem,\n    HistoryContents: HistoryContents,\n    GalaxyHistory: GalaxyHistory,\n    GalaxyHistories: GalaxyHistories,\n    Jstree: Jstree\n};\n"]}