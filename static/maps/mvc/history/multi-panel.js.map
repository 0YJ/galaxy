{"version":3,"sources":["mvc/history/multi-panel.js"],"names":["define","HISTORY_MODEL","HISTORY_VIEW_EDIT","historyCopyDialog","ERROR_MODAL","baseMVC","ajaxQueue","HistoryViewColumn","Backbone","View","extend","LoggableMixin","_logNamespace","tagName","className","id","this","model","get","initialize","options","purgeAllowed","_","isUndefined","panel","createPanel","setUpListeners","panelOptions","HistoryViewEdit","defaults","dragItems","$scrollContainer","$el","column","once","trigger","setUpPanelListeners","listenTo","rendered","view:expanded view:rendered","view","$","off","inView","viewLeft","viewRight","columnLeft","offset","left","width","$panel","render","speed","undefined","modelData","toJSON","html","template","renderPanel","css","setUpBehaviors","data","isCurrentHistory","currentHistory","controlsLeftTemplate","history","controlsRightTemplate","join","setElement","$list","before","_renderDropTargetHelp","events","click .switch-to.btn","setAsCurrent","click .delete-history","_delete","done","click .undelete-history","undelete","click .purge-history","confirm","_l","purge","click .copy-history","copy","variable","toString","MultiPanelColumns","log","addClass","columnWidth","borderWidth","columnGap","headerHeight","footerHeight","controlsHeight","perPage","hdaQueue","NamedAjaxQueue","collection","columnMap","columnOptions","historySearch","datasetSearch","setCollection","histories","multipanel","on","fetchMore","stopListening","HistoryCollection","setUpCollectionListeners","createColumns","clear","addModels","models","isArray","forEach","addColumn","error","errorHandler","add","all-fetched","_postFetchAll","new-current","addAsCurrentColumn","set-as-current","setCurrentHistory","change:deleted change:purged","handleDeletedHistory","sort","renderColumns","fetchData","remove","scrollLeft","oldCurrentColumn","findWhere","height","newCurrentColumn","currentHistoryId","_recalcFirstColumnHeight","includeDeleted","removeColumn","xhr","status","readyState","isString","message","title","errorModal","badGatewayErrorModal","ajaxErrorModal","_ajaxErrorHandler","apply","toArray","arguments","create","ev","current","each","i","createColumn","Galaxy","config","allow_user_dataset_purge","setUpColumnListeners","searchItems","queueHdaFetchDetails","newColumn","queueHdaFetch","widthToRemove","fadeOut","checkColumnsInView","in-view","view:draggable:dragstart","_dropData","JSON","parse","dataTransfer","getData","currentColumnDropTargetOn","view:draggable:dragend","currentColumnDropTargetOff","droptarget:drop","toCopy","filter","json","contents","isCopyable","queue","currentPage","name","fn","fetchPage","reverse","content","start","responses","fetch","columnMapLength","Object","keys","length","sortedFilteredColumns","filters","sortedColumns","index","every","map","call","fxSpeed","mainTemplate","isNumber","self","sortedAndFiltered","$middle","empty","_addColumns","allFetched","append","loadingIndicatorTemplate","columns","numExisting","children","_calcMiddleWidth","delegateEvents","appendTo","numColumns","contentsShown","fetchOptions","silent","ids","values","storage","allExpanded","details","fetchCurrentPage","renderItems","running","haveDetails","progressivelyFetchDetails","_renderEmptyMessage","renderInfo","msg","text","click .done.btn","click .create-new.btn","click #include-deleted","click .order .set-order","click #toggle-deleted","click #toggle-hidden","close","window","location","root","_clickToggleDeletedHistories","toggleDeletedHistories","currentTarget","is","toggleOptionsPopover","show","_clickToggleDeletedDatasets","toggleDeletedDatasets","delay","toggleShowDeleted","_clickToggleHiddenDatasets","toggleHiddenDatasets","toggleShowHidden","_chooseOrder","orderKey","orderDescriptions","setOrder","currentHistoryModel","slice","fetchFirst","unshift","_scrollLeft","val","_moreOptionsPopover","searchInput","placeholder","onfirstsearch","searchFor","fetchAll","onsearch","matchesAll","onclear","progress","curr","total","deferred","clearSearch","resize","debouncedInView","debounce","viewport","_viewport","checkForEndOfScroll","parent","scroll","popover","container","placement","optionsPopoverTemplate","$firstColumn","first","middleHeight","controlHeight","find","$outerMiddle","right","columnsInView","vp","currentColumn","dataDropped","dropTargetOn","prototype","dataDrop","dropTarget","update_time","update_time-asc","name-dsc","size","size-asc"],"mappings":"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","file":"../../../scripts/mvc/history/multi-panel.js","sourcesContent":["define([\n    \"mvc/history/history-model\",\n    \"mvc/history/history-view-edit\",\n    \"mvc/history/copy-dialog\",\n    \"mvc/ui/error-modal\",\n    \"mvc/base-mvc\",\n    \"utils/ajax-queue\",\n    \"ui/mode-button\",\n    \"ui/search-input\"\n], function( HISTORY_MODEL, HISTORY_VIEW_EDIT, historyCopyDialog, ERROR_MODAL, baseMVC, ajaxQueue ){\n'use strict';\n\nvar logNamespace = 'history';\n/* ==============================================================================\nTODO:\n\n============================================================================== */\n/** @class A container for a history panel that renders controls for that history (delete, copy, etc.) */\nvar HistoryViewColumn = Backbone.View.extend( baseMVC.LoggableMixin ).extend({\n\n    _logNamespace : logNamespace,\n\n    tagName     : 'div',\n    className   : 'history-column flex-column flex-row-container',\n    id : function id(){\n        if( !this.model ){ return ''; }\n        return 'history-column-' + this.model.get( 'id' );\n    },\n\n    // ------------------------------------------------------------------------ set up\n    /** set up passed-in panel (if any) and listeners */\n    initialize : function initialize( options ){\n        options = options || {};\n        this.purgeAllowed = !_.isUndefined( options.purgeAllowed )? options.purgeAllowed: false;\n        this.panel = options.panel || this.createPanel( options );\n\n        this.setUpListeners();\n    },\n\n    /** create a history panel for this column */\n    createPanel : function createPanel( panelOptions ){\n        return new HISTORY_VIEW_EDIT.HistoryViewEdit( _.defaults( panelOptions, {\n            model           : this.model,\n            // non-current panels should set their hdas to draggable\n            purgeAllowed    : this.purgeAllowed,\n            dragItems       : true,\n            $scrollContainer: function(){ return this.$el; },\n        }));\n    },\n\n    /** set up reflexive listeners */\n    setUpListeners : function setUpListeners(){\n        var column = this;\n        //this.log( 'setUpListeners', this );\n        this.once( 'rendered', function(){\n            column.trigger( 'rendered:initial', column );\n        });\n        this.setUpPanelListeners();\n    },\n\n    /** set listeners needed for panel */\n    setUpPanelListeners : function setUpPanelListeners(){\n        var column = this;\n        this.listenTo( this.panel, {\n            //'all': function(){ console.info( 'panel of ' + this, arguments ); },\n\n            // assumes panel will take the longest to render\n            'rendered': function(){\n                column.trigger( 'rendered', column );\n            },\n            // when a panel's view expands turn off the click handler on the rerun button so that it uses it's href\n            // this allows the button to open the tool rerun form in a new tab (instead of erroring)\n            // TODO: hack\n            'view:expanded view:rendered': function( view ){\n                view.$( '.rerun-btn' ).off();\n            }\n        }, this );\n    },\n\n    /** do the dimensions of this column overlap the given (horizontal) browser coords? */\n    inView : function( viewLeft, viewRight ){\n        var columnLeft = this.$el.offset().left,\n            columnRight = columnLeft + this.$el.width();\n        if( columnRight < viewLeft ){ return false; }\n        if( columnLeft > viewRight ){ return false; }\n        return true;\n    },\n\n    /** shortcut to the panel */\n    $panel : function $panel(){\n        return this.$( '.history-panel' );\n    },\n\n    // ------------------------------------------------------------------------ render\n    /** render ths column, its panel, and set up plugins */\n    render : function render( speed ){\n        speed = ( speed !== undefined )?( speed ):( 'fast' );\n        //this.log( this + '.render', this.$el, this.el );\n        //TODO: not needed\n        var modelData = this.model? this.model.toJSON(): {};\n        this.$el.html( this.template( modelData ) );\n        this.renderPanel( speed );\n        // jq 1.12 doesn't fade/show properly when display: flex, re-set here\n        this.panel.$el.css( 'display', 'flex' );\n        // if model and not children\n            // template\n            // render controls\n        this.setUpBehaviors();\n        // add panel\n        return this;\n    },\n\n    /** set up plugins */\n    setUpBehaviors : function setUpBehaviors(){\n        //this.log( 'setUpBehaviors:', this );\n        //var column = this;\n        // on panel size change, ...\n    },\n\n    /** column body template with inner div for panel based on data (model json) */\n    template : function template( data ){\n        data = _.extend( data || {}, {\n            isCurrentHistory : this.currentHistory\n        });\n        return $([\n            '<div class=\"panel-controls clear flex-row\">',\n                this.controlsLeftTemplate({ history: data, view: this }),\n                //'<button class=\"btn btn-default\">Herp</button>',\n                this.controlsRightTemplate({ history: data, view: this }),\n            '</div>',\n            '<div class=\"inner flex-row flex-column-container\">',\n                '<div id=\"history-', data.id, '\" class=\"history-column history-panel flex-column\"></div>',\n            '</div>'\n        ].join( '' ));\n    },\n\n    /** render the panel contained in the column using speed for fx speed */\n    renderPanel : function renderPanel( speed ){\n        speed = ( speed !== undefined )?( speed ):( 'fast' );\n        this.panel.setElement( this.$panel() ).render( speed );\n        if( this.currentHistory ){\n            this.panel.$list().before( this.panel._renderDropTargetHelp() );\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ behaviors and events\n    /** event map */\n    events : {\n        // will make this the current history\n        'click .switch-to.btn'      : function(){ this.model.setAsCurrent(); },\n        //TODO: remove boiler plate from next 3\n        'click .delete-history' : function(){\n            var column = this;\n            this.model._delete()\n                .done( function( data ){ column.render(); });\n        },\n        'click .undelete-history' : function(){\n            var column = this;\n            this.model.undelete()\n                .done( function( data ){ column.render(); });\n        },\n        'click .purge-history' : function(){\n            if( confirm( _l( 'This will permanently remove the data. Are you sure?' ) ) ){\n                var column = this;\n                this.model.purge()\n                    .done( function( data ){ column.render(); });\n            }\n        },\n        // will copy this history and make the copy the current history\n        'click .copy-history'       : 'copy'\n    },\n\n    // ------------------------------------------------------------------------ non-current controls\n    /** Open a modal to get a new history name, copy it (if not canceled), and makes the copy current */\n    copy : function copy(){\n        historyCopyDialog( this.model );\n    },\n\n    // ------------------------------------------------------------------------ templates\n    /** controls template displaying controls above the panel based on this.currentHistory */\n    controlsLeftTemplate : _.template([\n        '<div class=\"pull-left\">',\n            '<% if( data.history.isCurrentHistory ){ %>',\n                '<strong class=\"current-label\">', _l( 'Current History' ), '</strong>',\n            '<% } else { %>',\n                '<button class=\"switch-to btn btn-default\">', _l( 'Switch to' ), '</button>',\n            '<% } %>',\n        '</div>'\n    ].join( '' ), { variable : 'data' }),\n\n    /** controls template displaying controls above the panel based on this.currentHistory */\n    controlsRightTemplate : _.template([\n        '<div class=\"pull-right\">',\n            '<% if( !data.history.purged ){ %>',\n                '<div class=\"panel-menu btn-group\">',\n                    '<button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                        '<span class=\"caret\"></span>',\n                    '</button>',\n                    '<ul class=\"dropdown-menu pull-right\" role=\"menu\">',\n                        '<% if( !data.history.deleted ){ %>',\n                            '<li><a href=\"javascript:void(0);\" class=\"copy-history\">',\n                                _l( 'Copy' ),\n                            '</a></li>',\n                            //'<li><a href=\"javascript:void(0);\" class=\"publish-history\">',\n                            //    _l( 'Publish' ),\n                            //'</a></li>',\n                            '<li><a href=\"javascript:void(0);\" class=\"delete-history\">',\n                                _l( 'Delete' ),\n                            '</a></li>',\n                        '<% } else /* if is deleted */ { %>',\n                            '<li><a href=\"javascript:void(0);\" class=\"undelete-history\">',\n                                _l( 'Undelete' ),\n                            '</a></li>',\n                        '<% } %>',\n                        '<% if( data.view.purgeAllowed ){ %>',\n                            '<li><a href=\"javascript:void(0);\" class=\"purge-history\">',\n                                _l( 'Purge' ),\n                            '</a></li>',\n                        '<% } %>',\n                    '</ul>',\n                '</div>',\n            '<% } %>',\n        '</div>'\n    ].join( '' ), { variable: 'data' }),\n\n    // ------------------------------------------------------------------------ misc\n    /** String rep */\n    toString : function(){\n        return 'HistoryViewColumn(' + ( this.panel? this.panel : '' ) + ')';\n    }\n});\n\n\n//==============================================================================\n/** @class A view of a HistoryCollection and displays histories similarly to the current history panel.\n */\nvar MultiPanelColumns = Backbone.View.extend( baseMVC.LoggableMixin ).extend({\n    _logNamespace : logNamespace,\n\n    className : 'multi-panel-history',\n\n    // ------------------------------------------------------------------------ set up\n    /** Set up internals, history collection, and columns to display the history */\n    initialize : function initialize( options ){\n        options = options || {};\n        this.log( this + '.init', options );\n\n        // add the className here (since we gen. pass the el in options)\n        this.$el.addClass( this.className );\n\n        // --- instance vars\n        //TODO: move these to some defaults\n        this.options = {\n            columnWidth     : 312,\n            borderWidth     : 1,\n            columnGap       : 8,\n            headerHeight    : 29,\n            footerHeight    : 0,\n            controlsHeight  : 20\n        };\n\n        /** how many histories to get when fetching a new batch/page */\n        this.perPage = options.perPage || 10;\n\n        /** named ajax queue for loading hdas */\n        this.hdaQueue = new ajaxQueue.NamedAjaxQueue( [], false );\n\n        // --- set up models, sub-views, and listeners\n        /** the original unfiltered and unordered collection of histories */\n        this.collection = null;\n        /** model id to column map */\n        this.columnMap = {};\n        /** model id to column map */\n        this.columnOptions = options.columnOptions || {};\n\n        /** what to search for within all histories */\n        this.historySearch = null;\n        /** what to search for within all datasets */\n        this.datasetSearch = null;\n\n        this.setCollection( options.histories );\n        this.setUpListeners();\n    },\n\n    /** Set up reflexive listeners */\n    setUpListeners : function setUpListeners(){\n        var multipanel = this;\n        //multipanel.log( 'setUpListeners', multipanel );\n        this.on( 'end-of-scroll', function(){\n            multipanel.collection.fetchMore();\n        });\n    },\n\n    // ------------------------------------------------------------------------ collection\n    /** Set up a (new) history collection, sorting and adding listeners\n     *  @fires 'new-collection' when set with this view as the arg\n     */\n    setCollection : function setCollection( collection ){\n        // console.log( 'setCollection:', collection );\n        this.stopListening( this.collection );\n\n        this.collection = collection || new HISTORY_MODEL.HistoryCollection();\n        this.setUpCollectionListeners();\n\n        this.createColumns();\n        this.hdaQueue.clear();\n\n        this.trigger( 'new-collection', this );\n        return this;\n    },\n\n    /** Set up a (new) history collection, sorting and adding listeners\n     *  @fires 'new-collection' when set with this view as the arg\n     */\n    addModels : function addModels( models, collection, options ){\n        // console.log( 'addModels:', models, collection, options );\n        options = options || {};\n        var multipanel = this;\n        models = _.isArray( models )? models : [ models ];\n        models.forEach( function( model ){\n            multipanel.addColumn( model, false );\n            // if this is from a fetch, sort will be called and it will call render\n        });\n        return this;\n    },\n\n    /** Set up listeners for the collection - handling: added histories, change of current, deletion, and sorting */\n    setUpCollectionListeners : function(){\n        var multipanel = this;\n        multipanel.listenTo( multipanel.collection, {\n            // handle ajax errors from the collection\n            'error'                         : multipanel.errorHandler,\n            // add multiple models\n            'add'                           : multipanel.addModels,\n            // when all the histories a user has have been fetched\n            'all-fetched'                   : multipanel._postFetchAll,\n            // handle addition of histories, triggered by column copy and create new\n            'new-current'                   : multipanel.addAsCurrentColumn,\n            // handle setting a history as current, triggered by history.setAsCurrent\n            'set-as-current'                : multipanel.setCurrentHistory,\n            // handle deleting a history (depends on whether panels is including deleted or not)\n            'change:deleted change:purged'  : multipanel.handleDeletedHistory,\n            // re-render columns after a sort\n            'sort' : function(){\n                multipanel.renderColumns( 0 );\n            },\n        });\n    },\n\n    _postFetchAll : function( fetchData ){\n        // console.log( '_postFetchAll' );\n        this.$( '.histories-loading-indicator' ).remove();\n        // when new histories is fetched and the indicator is not required,\n        // the panel will jump slightly left - totally aesthetic but jarring\n        // TODO: this probably would be best handled elsewhere during a refinement cycle (if any)\n        if( !this.historySearch ){\n            var $scrollContainer = this.$( '.outer-middle' );\n            $scrollContainer.scrollLeft( $scrollContainer.scrollLeft() + 24 );\n        }\n    },\n\n    /** Re-render and set currentHistoryId to reflect a new current history */\n    setCurrentHistory : function setCurrentHistory( history ){\n        this.log( 'setCurrentHistory:', history );\n        var oldCurrentColumn = _.findWhere( this.columnMap, { currentHistory: true });\n        if( oldCurrentColumn ){\n            oldCurrentColumn.currentHistory = false;\n            oldCurrentColumn.$el.height( '' );\n        }\n\n        var newCurrentColumn = this.columnMap[ this.collection.currentHistoryId ];\n        newCurrentColumn.currentHistory = true;\n        this.collection.sort();\n        this._recalcFirstColumnHeight();\n        return newCurrentColumn;\n    },\n\n    /** Either remove a deleted history or re-render it to show the deleted message\n     *      based on collection.includeDeleted\n     */\n    handleDeletedHistory : function handleDeletedHistory( history ){\n        if( history.get( 'deleted' ) || history.get( 'purged' ) ){\n            this.log( 'handleDeletedHistory', this.collection.includeDeleted, history );\n            var multipanel = this,\n                column = multipanel.columnMap[ history.id ];\n            if( !column ){ return; }\n\n            // if it's the current column, create a new, empty history as the new current\n            if( column.model.id === this.collection.currentHistoryId ){\n                //TODO: figuring out the order of async here is tricky\n                //  - for now let the user handle the two step process\n                //multipanel.collection.create().done( function(){\n                //    if( !multipanel.collection.includeDeleted ){ multipanel.removeColumn( column, false ); }\n                //});\n            } else if( !multipanel.collection.includeDeleted ){\n                multipanel.removeColumn( column );\n            }\n       }\n    },\n\n    // ........................................................................ error handling\n    /** Event handler for errors (from the history collection mainly)\n     *  Alternately use two strings for model and xhr to use custom message and title (respectively)\n     *  (e.g. this.trigger( 'error', 'Heres a message', 'Heres a title' ))\n     *  @param {Model or View} model    the (Backbone) source of the error\n     *  @param {XMLHTTPRequest} xhr     any ajax obj. assoc. with the error\n     *  @param {Object} options         the options map commonly used with bbone ajax\n     */\n    errorHandler : function( model, xhr, options ){\n        // interrupted ajax or no connection\n        if( xhr && xhr.status === 0 && xhr.readyState === 0 ){\n            // return ERROR_MODAL.offlineErrorModal();\n            // fail silently\n            return;\n        }\n        // otherwise, leave something to report in the console\n        this.error( model, xhr, options );\n        // and feedback to a modal\n        // if sent two strings (and possibly details as 'options'), use those as message and title\n        if( _.isString( model ) && _.isString( xhr ) ){\n            var message = model;\n            var title = xhr;\n            return ERROR_MODAL.errorModal( message, title, options );\n        }\n        // bad gateway\n        // TODO: possibly to global handler\n        if( xhr && xhr.status === 502 ){\n            return ERROR_MODAL.badGatewayErrorModal();\n        }\n        return ERROR_MODAL.ajaxErrorModal( model, xhr, options );\n    },\n\n    /** If Galaxy object is available handle error there, otherwise, locally (and crudely) */\n    _ajaxErrorHandler : function(){\n        ERROR_MODAL.ajaxErrorModal.apply( null, _.toArray( arguments ) );\n    },\n\n    /** create a new history and set it to current */\n    create : function( ev ){\n        return this.collection.create({ current: true });\n    },\n\n    // ------------------------------------------------------------------------ columns\n    /** create columns from collection */\n    createColumns : function createColumns( models, columnOptions ){\n        columnOptions = columnOptions || this.options.columnOptions;\n        var multipanel = this;\n        // clear column map\n        // TODO: make cummulative\n        multipanel.columnMap = {};\n        multipanel.collection.each( function( model, i ){\n            var column = multipanel.createColumn( model, columnOptions );\n            multipanel.columnMap[ model.id ] = column;\n        });\n    },\n\n    /** create a column and its panel and set up any listeners to them */\n    createColumn : function createColumn( history, options ){\n        // options passed can be re-used, so extend them before adding the model to prevent pollution for the next\n        options = _.extend( {}, options, {\n            model       : history,\n            purgeAllowed: Galaxy.config.allow_user_dataset_purge\n        });\n        var column = new HistoryViewColumn( options );\n        if( history.id === this.collection.currentHistoryId ){ column.currentHistory = true; }\n        this.setUpColumnListeners( column );\n        if( this.datasetSearch ){\n            column.panel.searchItems( this.datasetSearch );\n            this.queueHdaFetchDetails( column );\n        }\n        return column;\n    },\n\n    /** add a new column for history and render all columns if render is true */\n    addColumn : function add( history, render ){\n        // console.debug( 'adding column for:', history, render );\n        render = render !== undefined? render : true;\n        var newColumn = this.createColumn( history );\n        this.columnMap[ history.id ] = newColumn;\n        if( render ){\n            this.renderColumns();\n        }\n        return newColumn;\n    },\n\n    /** add a new column for history and make it the current history/column */\n    addAsCurrentColumn : function add( history, collection, options ){\n        //this.log( 'adding current column for:', history );\n        var multipanel = this,\n            newColumn = this.addColumn( history, false );\n        this.setCurrentHistory( history );\n        newColumn.once( 'rendered', function(){\n            multipanel.queueHdaFetch( newColumn );\n        });\n        return newColumn;\n    },\n\n    /** remove the given column, it's listeners, and optionally render */\n    removeColumn : function remove( column, render ){\n        render = render !== undefined? render : true;\n        this.log( 'removeColumn', column );\n        if( !column ){ return; }\n        var multipanel = this,\n            widthToRemove = this.options.columnWidth + this.options.columnGap;\n        column.$el.fadeOut( 'fast', function(){\n            if( render ){\n                $( this ).remove();\n                multipanel.$( '.middle' ).width( multipanel.$( '.middle' ).width() - widthToRemove );\n                multipanel.checkColumnsInView();\n                multipanel._recalcFirstColumnHeight();\n            }\n\n            //TODO: to freeColumn (where Columns have freePanel)\n            multipanel.stopListening( column.panel );\n            multipanel.stopListening( column );\n            delete multipanel.columnMap[ column.model.id ];\n            column.remove();\n        });\n    },\n\n    /** set up listeners for a column and it's panel - handling: hda lazy-loading, drag and drop */\n    setUpColumnListeners : function setUpColumnListeners( column ){\n        var multipanel = this;\n        multipanel.listenTo( column, {\n            //'all': function(){ console.info( 'column ' + column + ':', arguments ) },\n            'in-view': multipanel.queueHdaFetch\n        });\n\n        multipanel.listenTo( column.panel, {\n            //'all': function(){ console.info( 'panel ' + column.panel + ':', arguments ) },\n\n            'view:draggable:dragstart': function( ev, view, panel, column ){\n                multipanel._dropData = JSON.parse( ev.dataTransfer.getData( 'text' ) );\n                multipanel.currentColumnDropTargetOn();\n            },\n            'view:draggable:dragend': function( ev, view, panel, column ){\n                multipanel._dropData = null;\n                multipanel.currentColumnDropTargetOff();\n            },\n            'droptarget:drop': function( ev, data, panel ){\n                //note: bad copy sources fail silently\n                var toCopy = multipanel._dropData.filter( function( json ){\n                    return panel.model.contents.isCopyable( json );\n                });\n                multipanel._dropData = null;\n\n                var queue = new ajaxQueue.NamedAjaxQueue();\n                if( panel.model.contents.currentPage !== 0 ){\n                    queue.add({\n                        name : 'fetch-front-page',\n                        fn : function(){\n                            return panel.model.contents.fetchPage( 0 );\n                        }\n                    });\n                }\n                // need to reverse to better match expected order\n                // TODO: reconsider order in list-view._setUpItemViewListeners, dragstart (instead of here)\n                toCopy.reverse().forEach( function( content ){\n                    queue.add({\n                        name : 'copy-' + content.id,\n                        fn : function(){\n                            return panel.model.contents.copy( content );\n                        }\n                    });\n                });\n                queue.start();\n                queue.done( function( responses ){\n                    panel.model.fetch();\n                });\n            }\n         });\n    },\n\n    /** conv. fn to count the columns in columnMap */\n    columnMapLength : function(){\n        return Object.keys( this.columnMap ).length;\n    },\n\n    /** return array of Columns filtered by filters and sorted to match the collection\n     *  @param: filters Function[] array of filter fns\n     */\n    sortedFilteredColumns : function( filters ){\n        filters = filters || this.filters;\n        if( !filters || !filters.length ){\n            return this.sortedColumns();\n        }\n        var multipanel = this;\n        return multipanel.sortedColumns().filter( function( column, index ){\n            var filtered = column.currentHistory || _.every( filters.map( function( filter ){\n                return filter.call( column );\n            }));\n            return filtered;\n        });\n    },\n\n    /** return array of Columns sorted to match the collection */\n    sortedColumns : function(){\n        var multipanel = this;\n        var sorted = this.collection.map( function( history, index ){\n            return multipanel.columnMap[ history.id ];\n        });\n        return sorted;\n    },\n\n    // ------------------------------------------------------------------------ render\n    /** Render this view, columns, and set up view plugins */\n    render : function render( speed ){\n        speed = speed !== undefined? speed: this.fxSpeed;\n        var multipanel = this;\n\n        multipanel.log( multipanel + '.render' );\n        multipanel.$el.html( multipanel.mainTemplate( multipanel ) );\n        multipanel.renderColumns( speed );\n\n        // set the columns to full height allowed and set up behaviors for thie multipanel\n        multipanel.setUpBehaviors();\n        //TODO: wrong - has to wait for columns to render\n        //  - create a column listener that fires this when all columns are rendered\n        multipanel.trigger( 'rendered', multipanel );\n        return multipanel;\n    },\n\n    /** Render the columns and panels */\n    renderColumns : function renderColumns( speed ){\n        speed = _.isNumber( speed )? speed: this.fxSpeed;\n        // console.log( 'renderColumns:', speed );\n        // render columns and track the total number rendered, firing an event when all are rendered\n        var self = this;\n        var sortedAndFiltered = self.sortedFilteredColumns();\n        // console.log( '\\t sortedAndFiltered:', sortedAndFiltered );\n        var $middle = self.$( '.middle' ).empty();\n\n        self._addColumns( sortedAndFiltered, speed );\n        if( !self.collection.allFetched ){\n            $middle.append( self.loadingIndicatorTemplate( self ) );\n        }\n        //TODO: sorta - at least their fx queue has started the re-rendering\n        self.trigger( 'columns-rendered', sortedAndFiltered, self );\n\n        if( self.datasetSearch && sortedAndFiltered.length <= 1 ){\n\n        } else {\n            // check for in-view, hda lazy-loading if so\n            self.checkColumnsInView();\n            // the first, current column has position: fixed and flex css will not apply - adjust height manually\n            self._recalcFirstColumnHeight();\n        }\n        return sortedAndFiltered;\n    },\n\n    _addColumns : function( columns, speed ){\n        speed = _.isNumber( speed )? speed: this.fxSpeed;\n        var $middle = this.$( '.middle' );\n\n        var numExisting = $middle.children( '.history-column' ).length;\n        $middle.width( this._calcMiddleWidth( columns.length + numExisting ) );\n\n        columns.forEach( function( column, i ){\n            column.delegateEvents().render( speed ).$el.appendTo( $middle );\n        });\n    },\n\n    _calcMiddleWidth : function( numColumns ){\n        var preventStackWidthAdj = 16;\n        return (\n            numColumns * ( this.options.columnWidth + this.options.columnGap ) +\n            // last column gap\n            this.options.columnGap +\n            // the amount that safely prevents stacking of columns when adding a new one\n            preventStackWidthAdj\n        );\n    },\n\n    //TODO: combine the following two more sensibly\n    //TODO: could have HistoryContents.haveDetails return false\n    //      if column.model.contents.length === 0 && !column.model.get( 'empty' ) then just check that\n    /** Get the *summary* contents of a column's history (and details on any expanded contents),\n     *      queueing the ajax call and using a named queue to prevent the call being sent twice\n     */\n    queueHdaFetch : function queueHdaFetch( column ){\n        // console.log( column.model + '.contentsShown:', column.model.contentsShown() );\n        var contents = column.model.contents;\n        // console.log( 'queueHdaFetch:', column, column.model.get( 'contents_active' ) );\n        // if the history model says it has hdas but none are present, queue an ajax req for them\n        if( contents.length === 0 && column.model.contentsShown() ){\n            var fetchOptions = { silent: true };\n            var ids = _.values( contents.storage.allExpanded() ).join();\n            if( ids ){ fetchOptions.details = ids; }\n            // this uses a 'named' queue so that duplicate requests are ignored\n            this.hdaQueue.add({\n                name : column.model.id,\n                fn : function(){\n                    return contents.fetchCurrentPage( fetchOptions )\n                        .done( function(){ column.panel.renderItems(); });\n                }\n            });\n            // the queue is re-used, so if it's not processing requests - start it again\n            if( !this.hdaQueue.running ){ this.hdaQueue.start(); }\n        }\n    },\n\n    /** Get the *detailed* json for *all* of a column's history's contents - req'd for searching */\n    queueHdaFetchDetails : function( column ){\n        var contents = column.model.contents;\n        var needsContentsLoaded = contents.length === 0 && column.model.contentsShown();\n        if( needsContentsLoaded || !contents.haveDetails() ){\n            // this uses a 'named' queue so that duplicate requests are ignored\n            this.hdaQueue.add({\n                name : column.model.id,\n                fn : function(){\n                    return contents.progressivelyFetchDetails()\n                        .done( function(){ column.panel._renderEmptyMessage(); });\n                }\n            });\n            // the queue is re-used, so if it's not processing requests - start it again\n            if( !this.hdaQueue.running ){ this.hdaQueue.start(); }\n        }\n    },\n\n    /** put a text msg in the header */\n    renderInfo : function( msg ){\n        return this.$( '.header .header-info' ).text( msg );\n    },\n\n    // ------------------------------------------------------------------------ events/behaviors\n    events : {\n        // will move to the server root (gen. Analyze data)\n        'click .done.btn'           : 'close',\n        // creates a new empty history and makes it current\n        'click .create-new.btn'     : 'create',\n        'click #include-deleted'    : '_clickToggleDeletedHistories',\n        // these change the collection and column sort order\n        'click .order .set-order'   : '_chooseOrder',\n        'click #toggle-deleted'     : '_clickToggleDeletedDatasets',\n        'click #toggle-hidden'      : '_clickToggleHiddenDatasets',\n        //'dragstart .list-item .title-bar'                       : function( e ){ console.debug( 'ok' ); }\n    },\n\n    close : function( ev ){\n        //TODO: switch to pushState/router\n        window.location = Galaxy.root;\n    },\n\n    _clickToggleDeletedHistories : function( ev ){\n        this.toggleDeletedHistories( $( ev.currentTarget ).is( ':checked' ) );\n        this.toggleOptionsPopover();\n    },\n    /** Include deleted histories in the collection */\n    toggleDeletedHistories : function( show ){\n        if( show ){\n            window.location = Galaxy.root + 'history/view_multiple?include_deleted_histories=True';\n        } else {\n            window.location = Galaxy.root + 'history/view_multiple';\n        }\n    },\n\n    _clickToggleDeletedDatasets : function( ev ){\n        this.toggleDeletedDatasets( $( ev.currentTarget ).is( ':checked' ) );\n        this.toggleOptionsPopover();\n    },\n    toggleDeletedDatasets : function( show ){\n        show = show !== undefined? show : false;\n        var multipanel = this;\n        multipanel.sortedFilteredColumns().forEach( function( column, i ){\n            _.delay( function(){\n                column.panel.toggleShowDeleted( show, false );\n            }, i * 200 );\n        });\n    },\n\n    _clickToggleHiddenDatasets : function( ev ){\n        this.toggleHiddenDatasets( $( ev.currentTarget ).is( ':checked' ) );\n        this.toggleOptionsPopover();\n    },\n    toggleHiddenDatasets : function( show ){\n        show = show !== undefined? show : false;\n        var multipanel = this;\n        multipanel.sortedFilteredColumns().forEach( function( column, i ){\n            _.delay( function(){\n                column.panel.toggleShowHidden( show, false );\n            }, i * 200 );\n        });\n    },\n\n    /** change the collection order and re-fetch when the drop down in the options menu is changed */\n    _chooseOrder : function( ev ){\n        var multipanel = this,\n            collection = multipanel.collection,\n            orderKey = $( ev.currentTarget ).data( 'order' );\n        // set the sort order text also\n        multipanel.$( '.current-order' ).text( multipanel.orderDescriptions[ orderKey ] );\n        multipanel.toggleOptionsPopover();\n        // set the order and re-fetch using the new order, saving the current history as the first\n        collection.setOrder( orderKey );\n        var currentHistoryModel = collection.slice( 0, 1 );\n        collection.fetchFirst().done( function(){\n            collection.unshift( currentHistoryModel, { silent: true });\n            multipanel.createColumns();\n            // need to clear this or previously fetched contents won't refetch now (bc of named queue)\n            multipanel.hdaQueue.clear();\n            multipanel.render();\n        });\n        multipanel.once( 'columns-rendered', multipanel._scrollLeft );\n        //TODO: check allFetched and do not reset if so - just sort instead\n    },\n\n    /** scroll the column container right or left */\n    _scrollLeft : function( val ){\n        val = _.isNumber( val )? val : 0;\n        this.$( '.outer-middle' ).scrollLeft( val );\n    },\n\n    /** Set up any view plugins */\n    setUpBehaviors : function(){\n        var multipanel = this;\n        multipanel._moreOptionsPopover();\n\n        // input to search histories\n        multipanel.$( '#search-histories' ).searchInput({\n            name        : 'search-histories',\n            placeholder : _l( 'search histories' ),\n\n            onfirstsearch : function( searchFor ){\n                multipanel.$( '#search-histories' ).searchInput( 'toggle-loading' );\n                multipanel.renderInfo( _l( 'loading all histories for search' ) );\n                multipanel.collection.fetchAll()\n                    .done( function(){\n                        multipanel.$( '#search-histories' ).searchInput( 'toggle-loading' );\n                        multipanel.renderInfo( '' );\n                    });\n            },\n            onsearch : function( searchFor ){\n                multipanel.historySearch = searchFor;\n                multipanel.filters = [ function(){\n                    return this.model.matchesAll( multipanel.historySearch );\n                }];\n                multipanel.renderColumns( 0 );\n            },\n            onclear : function( searchFor ){\n                multipanel.historySearch = null;\n                //TODO: remove specifically not just reset\n                multipanel.filters = [];\n                multipanel.renderColumns( 0 );\n            }\n        });\n\n        // input to search datasets\n        multipanel.$( '#search-datasets' ).searchInput({\n            name        : 'search-datasets',\n            placeholder : _l( 'search all datasets' ),\n\n            onfirstsearch : function( searchFor ){\n                multipanel.hdaQueue.clear();\n                multipanel.$( '#search-datasets' ).searchInput( 'toggle-loading' );\n                multipanel.datasetSearch = searchFor;\n                multipanel.sortedFilteredColumns().forEach( function( column ){\n                    column.panel.searchItems( searchFor );\n                    // load details for them that need\n                    multipanel.queueHdaFetchDetails( column );\n                });\n                multipanel.hdaQueue.progress( function( progress ){\n                    multipanel.renderInfo([\n                        _l( 'searching' ), ( progress.curr + 1 ), _l( 'of' ), progress.total\n                    ].join( ' ' ));\n                });\n                multipanel.hdaQueue.deferred.done( function(){\n                    multipanel.renderInfo( '' );\n                    multipanel.$( '#search-datasets' ).searchInput( 'toggle-loading' );\n                });\n            },\n            onsearch : function( searchFor ){\n                multipanel.datasetSearch = searchFor;\n                multipanel.sortedFilteredColumns().forEach( function( column ){\n                    column.panel.searchItems( searchFor );\n                });\n            },\n            onclear : function( searchFor ){\n                multipanel.datasetSearch = null;\n                multipanel.sortedFilteredColumns().forEach( function( column ){\n                    column.panel.clearSearch();\n                });\n            }\n        });\n\n        // resize first (fixed position) column on page resize\n        $( window ).resize( function(){\n            multipanel._recalcFirstColumnHeight();\n        });\n\n        // when scrolling - check for histories now in view: they will fire 'in-view' and queueHdaLoading if necc.\n        //TODO:?? might be able to simplify and not use pub-sub\n        var debouncedInView = _.debounce( function _debouncedInner(){\n            var viewport = multipanel._viewport();\n            multipanel.checkColumnsInView( viewport );\n            multipanel.checkForEndOfScroll( viewport );\n        }, 100 );\n        this.$( '.middle' ).parent().scroll( debouncedInView );\n    },\n\n    /** create the options popover */\n    _moreOptionsPopover : function(){\n        return this.$( '.open-more-options.btn' ).popover({\n            container   : '.header',\n            placement   : 'bottom',\n            html        : true,\n            content     : $( this.optionsPopoverTemplate( this ) )\n        });\n    },\n\n    /** change the collection order and re-fetch when the drop down in the options menu is changed */\n    toggleOptionsPopover : function( ev ){\n        // hide seems broken in our version\n        this.$( '.open-more-options.btn' ).popover( 'toggle' );\n    },\n\n    /** Adjust the height of the first, current column since flex-boxes won't work with fixed postiion elements */\n    _recalcFirstColumnHeight : function(){\n        var $firstColumn = this.$( '.history-column' ).first(),\n            middleHeight = this.$( '.middle' ).height(),\n            controlHeight = $firstColumn.find( '.panel-controls' ).height();\n        $firstColumn.height( middleHeight )\n            .find( '.inner' ).height( middleHeight - controlHeight );\n    },\n\n    /** Get the left and right pixel coords of the middle element */\n    _viewport : function(){\n        var $outerMiddle = this.$( '.middle' ).parent(),\n            viewLeft = $outerMiddle.offset().left,\n            width = $outerMiddle.width();\n        return {\n            left    : viewLeft,\n            right   : viewLeft + width\n        };\n    },\n\n    /** returns the columns currently in the viewport */\n    columnsInView : function( viewport ){\n        //TODO: uses offset which is render intensive\n        //TODO: 2N - could use arg filter (sortedFilteredColumns( filter )) instead\n        var vp = viewport || this._viewport();\n        return this.sortedFilteredColumns().filter( function( column ){\n            return column.currentHistory || column.inView( vp.left, vp.right );\n        });\n    },\n\n    //TODO: sortByInView - return cols in view, then others\n    /** trigger in-view from columns in-view */\n    checkColumnsInView : function(){\n        //TODO: assbackward - don't fire from the column, fire from here and listen from here\n        this.columnsInView().forEach( function( column ){\n            column.trigger( 'in-view', column );\n        });\n    },\n\n    /** is the middle, horizontally scrolling section scrolled fully to the right? */\n    checkForEndOfScroll : function( viewport ){\n        viewport = viewport || this._viewport();\n        var END_PADDING = 16,\n            $middle = this.$( '.middle' ),\n            scrollRight = $middle.parent().scrollLeft() + viewport.right;\n        if( scrollRight >= ( $middle.width() - END_PADDING ) ){\n            this.trigger( 'end-of-scroll' );\n        }\n    },\n\n    /** Show and enable the current columns drop target */\n    currentColumnDropTargetOn : function(){\n        var currentColumn = this.columnMap[ this.collection.currentHistoryId ];\n        if( !currentColumn ){ return; }\n        //TODO: fix this - shouldn't need monkeypatch\n        currentColumn.panel.dataDropped = function( data ){};\n        currentColumn.panel.dropTargetOn();\n    },\n\n    /** Hide and disable the current columns drop target */\n    currentColumnDropTargetOff : function(){\n        var currentColumn = this.columnMap[ this.collection.currentHistoryId ];\n        if( !currentColumn ){ return; }\n        currentColumn.panel.dataDropped = HISTORY_VIEW_EDIT.HistoryViewEdit.prototype.dataDrop;\n        // slight override of dropTargetOff to not erase drop-target-help\n        currentColumn.panel.dropTarget = false;\n        currentColumn.panel.$( '.history-drop-target' ).remove();\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** String rep */\n    toString : function(){\n        return 'MultiPanelColumns(' + ( this.columns? this.columns.length : 0 ) + ')';\n    },\n\n    // ------------------------------------------------------------------------ templates\n    mainTemplate : _.template([\n        '<div class=\"header flex-column-container\">',\n            '<div class=\"control-column control-column-left flex-column\">',\n                '<button class=\"done btn btn-default\" tabindex=\"1\">', _l( 'Done' ), '</button>',\n                '<div id=\"search-histories\" class=\"search-control\"></div>',\n                '<div id=\"search-datasets\" class=\"search-control\"></div>',\n                '<a class=\"open-more-options btn btn-default\" tabindex=\"3\">',\n                    '<span class=\"fa fa-ellipsis-h\"></span>',\n                '</a>',\n            '</div>',\n            // feedback\n            '<div class=\"control-column control-column-center flex-column\">',\n                '<div class=\"header-info\">', '</div>',\n            '</div>',\n            '<div class=\"control-column control-column-right flex-column\">',\n                '<button class=\"create-new btn btn-default\" tabindex=\"4\">', _l( 'Create new' ), '</button> ',\n            '</div>',\n        '</div>',\n        // middle - where the columns go\n        '<div class=\"outer-middle flex-row flex-row-container\">',\n            '<div class=\"middle flex-column-container flex-row\"></div>',\n        '</div>',\n        // footer\n        '<div class=\"footer flex-column-container\"></div>'\n    ].join(''), { variable: 'view' }),\n\n    loadingIndicatorTemplate : _.template([\n        '<div class=\"histories-loading-indicator\">',\n            '<span class=\"fa fa-spin fa-spinner\"></span>', _l( 'Loading histories' ), '...',\n        '</div>'\n    ].join(''), { variable: 'view' }),\n\n    orderDescriptions : {\n        'update_time'       : _l( 'most recent first' ),\n        'update_time-asc'   : _l( 'least recent first' ),\n        'name'              : _l( 'name, a to z' ),\n        'name-dsc'          : _l( 'name, z to a' ),\n        'size'              : _l( 'size, large to small' ),\n        'size-asc'          : _l( 'size, small to large' )\n    },\n\n    optionsPopoverTemplate : _.template([\n        '<div class=\"more-options\">',\n            '<div class=\"order btn-group\">',\n                '<button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                    _l( 'Order histories by' ) + ' ',\n                    '<span class=\"current-order\"><%- view.orderDescriptions[ view.collection.order ] %></span> ',\n                    '<span class=\"caret\"></span>',\n                '</button>',\n                '<ul class=\"dropdown-menu\" role=\"menu\">',\n                    '<% _.each( view.orderDescriptions, function( text, order ){ %>',\n                        '<li><a href=\"javascript:void(0);\" class=\"set-order\" data-order=\"<%- order %>\">',\n                            '<%- text %>',\n                        '</a></li>',\n                    '<% }); %>',\n                '</ul>',\n            '</div>',\n\n            '<div class=\"checkbox\"><label><input id=\"include-deleted\" type=\"checkbox\"',\n                '<%= view.collection.includeDeleted? \" checked\" : \"\" %>>',\n                _l( 'Include deleted histories' ),\n            '</label></div>',\n\n            '<hr />',\n\n            '<div class=\"checkbox\"><label><input id=\"toggle-deleted\" type=\"checkbox\">',\n                _l( 'Include deleted datasets' ),\n            '</label></div>',\n            '<div class=\"checkbox\"><label><input id=\"toggle-hidden\" type=\"checkbox\">',\n                _l( 'Include hidden datasets' ),\n            '</label></div>',\n        '</div>'\n    ].join(''), { variable: 'view' })\n\n});\n\n\n//==============================================================================\n    return {\n        MultiPanelColumns : MultiPanelColumns\n    };\n});\n"]}