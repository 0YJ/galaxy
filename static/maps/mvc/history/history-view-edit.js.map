{"version":3,"sources":["mvc/history/history-view-edit.js"],"names":["define","HISTORY_VIEW","HISTORY_CONTENTS","STATES","HDA_MODEL","HDA_LI_EDIT","HDCA_LI_EDIT","TAGS","HDAViewClass","LIST_COLLECTION_CREATOR","HDCAViewClass","LIST_OF_PAIRS_COLLECTION_CREATOR","faIconButton","PopupMenu","BASE_MVC","_l","_super","annotationEditor","HistoryViewEdit","extend","HDAListItemEdit","HDCAListItemEdit","initialize","attributes","prototype","call","_renderSearchFindings","this","tagsEditor","_setUpModelListeners","purgeAllowed","_setUpCollectionListeners","annotationEditorShown","_setUpListeners","on","droptarget:drop","ev","data","dataDropped","dropTargetOff","view:attached view:removed","_renderCounts","search:loading-progress","_renderSearchProgress","search:searching","_buildNewRender","listenTo","$newRender","Galaxy","_renderTags","_renderAnnotation","change:deleted","_handleItemDeletedChange","change:visible","_handleItemVisibleChange","change:purged","model","fetch","fetching-deleted","collection","$","html","fetching-hidden","renderItems","searchFor","$whereTo","fetching-deleted-done fetching-hidden-done","panel","user","id","get","onshowFirstTime","onshow","toggleHDATagEditors","$activator","classes","title","jQuery","$el","counts","toJSON","find","TagsEditor","$where","toggleHDAAnnotationEditors","onhide","fxSpeed","faIcon","appendTo","_setUpBehaviors","el","render","isAnonymous","nameSelector","on_finish","previousName","newName","getSelectedModels","attr","tooltip","placement","func","action","HistoryDatasetAssociation","text","save","name","fail","undelete","multiselectActions","actions","hide","ajaxQueue","unhide","buildCollection","console","selection","hideSourceItems","createFunc","collectionType","purge","createListCollection","concat","_collectionActions","options","_getItemViewOptions","itemModel","_handleItemDeletion","PAIR_COLLECTION_CREATOR","createPairCollection","_handleItemUndeletion","createListOfPairsCollection","warn","done","refresh","removeItemView","contentsShown","_","tagsEditorShown","hidden","deleted","active","_handleItemHidden","includeDeleted","contents","_handleItemUnhidden","view","set","events","includeHidden","showOrHide","speed","each","views","toggle","clone","click .show-selectors-btn","click .toggle-deleted-link","toggleShowDeleted","click .toggle-hidden-link","toggleShowHidden","limit","dragleave","stop","bind","$dropTarget","_renderDropTarget","join","length","dropTargetOn","dropTarget","dropHandlers","dragenter","dragover","drop","$list","before","_renderDropTargetHelp","hasOwnProperty","evName","_dropHandlers","dropTargetToggle","remove","addClass","preventDefault","stopPropagation","off","self","css","model_class","dataTransfer","when","originalEvent","getData","dropEffect","toString","JSON","parse","err","trigger","isObject","currentPage","fetchPage","then","copy","templates","countsTemplate","wrapTemplate"],"mappings":"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","file":"../../../scripts/mvc/history/history-view-edit.js","sourcesContent":["define([\n    \"mvc/history/history-view\",\n    \"mvc/history/history-contents\",\n    \"mvc/dataset/states\",\n    \"mvc/history/hda-model\",\n    \"mvc/history/hda-li-edit\",\n    \"mvc/history/hdca-li-edit\",\n    \"mvc/tag\",\n    \"mvc/annotation\",\n    \"mvc/collection/list-collection-creator\",\n    \"mvc/collection/pair-collection-creator\",\n    \"mvc/collection/list-of-pairs-collection-creator\",\n    \"ui/fa-icon-button\",\n    \"mvc/ui/popup-menu\",\n    \"mvc/base-mvc\",\n    \"utils/localization\",\n    \"ui/editable-text\",\n], function(\n    HISTORY_VIEW,\n    HISTORY_CONTENTS,\n    STATES,\n    HDA_MODEL,\n    HDA_LI_EDIT,\n    HDCA_LI_EDIT,\n    TAGS,\n    ANNOTATIONS,\n    LIST_COLLECTION_CREATOR,\n    PAIR_COLLECTION_CREATOR,\n    LIST_OF_PAIRS_COLLECTION_CREATOR,\n    faIconButton,\n    PopupMenu,\n    BASE_MVC,\n    _l\n){\n\n'use strict';\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = HISTORY_VIEW.HistoryView;\n// base class for history-view-edit-current and used as-is in history/view.mako\n/** @class Editable View/Controller for the history model.\n *\n *  Allows:\n *      (everything HistoryView allows)\n *      changing the name\n *      displaying and editing tags and annotations\n *      multi-selection and operations on mulitple content items\n */\nvar HistoryViewEdit = _super.extend(\n/** @lends HistoryViewEdit.prototype */{\n\n    /** class to use for constructing the HistoryDatasetAssociation views */\n    HDAViewClass    : HDA_LI_EDIT.HDAListItemEdit,\n    /** class to use for constructing the HistoryDatasetCollectionAssociation views */\n    HDCAViewClass   : HDCA_LI_EDIT.HDCAListItemEdit,\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes\n     */\n    initialize : function( attributes ){\n        attributes = attributes || {};\n        _super.prototype.initialize.call( this, attributes );\n\n        // ---- set up instance vars\n        /** editor for tags - sub-view */\n        this.tagsEditor = null;\n        /** editor for annotations - sub-view */\n        this.annotationEditor = null;\n\n        /** allow user purge of dataset files? */\n        this.purgeAllowed = attributes.purgeAllowed || false;\n\n        // states/modes the panel can be in\n        /** is the panel currently showing the dataset selection controls? */\n        this.annotationEditorShown  = attributes.annotationEditorShown || false;\n        this.tagsEditorShown  = attributes.tagsEditorShown || false;\n    },\n\n    /** Override to handle history as drag-drop target */\n    _setUpListeners : function(){\n        _super.prototype._setUpListeners.call( this );\n        return this.on({\n            'droptarget:drop': function( ev, data ){\n                // process whatever was dropped and re-hide the drop target\n                this.dataDropped( data );\n                this.dropTargetOff();\n            },\n            'view:attached view:removed': function(){\n                this._renderCounts();\n            },\n            'search:loading-progress': this._renderSearchProgress,\n            'search:searching': this._renderSearchFindings,\n        });\n    },\n\n    // ------------------------------------------------------------------------ listeners\n    /** listening for history and HDA events */\n    _setUpModelListeners : function(){\n        _super.prototype._setUpModelListeners.call( this );\n        this.listenTo( this.model, 'change:size', this.updateHistoryDiskSize );\n        return this;\n    },\n\n    /** listening for collection events */\n    _setUpCollectionListeners : function(){\n        _super.prototype._setUpCollectionListeners.call( this );\n        this.listenTo( this.collection, {\n            'change:deleted': this._handleItemDeletedChange,\n            'change:visible': this._handleItemVisibleChange,\n            'change:purged' : function( model ){\n                // hafta get the new nice-size w/o the purged model\n                this.model.fetch();\n            },\n            // loading indicators for deleted/hidden\n            'fetching-deleted'      : function( collection ){\n                this.$( '> .controls .deleted-count' )\n                    .html( '<i>' + _l( 'loading...' ) + '</i>' );\n            },\n            'fetching-hidden'       : function( collection ){\n                this.$( '> .controls .hidden-count' )\n                    .html( '<i>' + _l( 'loading...' ) + '</i>' );\n            },\n            'fetching-deleted-done fetching-hidden-done'  : this._renderCounts,\n        });\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ panel rendering\n    /** In this override, add tag and annotation editors and a btn to toggle the selectors */\n    _buildNewRender : function(){\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = _super.prototype._buildNewRender.call( this );\n        if( !this.model ){ return $newRender; }\n\n        if( Galaxy && Galaxy.user && Galaxy.user.id && Galaxy.user.id === this.model.get( 'user_id' ) ){\n            this._renderTags( $newRender );\n            this._renderAnnotation( $newRender );\n        }\n        return $newRender;\n    },\n\n    /** Update the history size display (curr. upper right of panel). */\n    updateHistoryDiskSize : function(){\n        this.$( '.history-size' ).text( this.model.get( 'nice_size' ) );\n    },\n\n    /** override to render counts when the items are rendered */\n    renderItems : function( $whereTo ){\n        var views = _super.prototype.renderItems.call( this, $whereTo );\n        if( !this.searchFor ){ this._renderCounts( $whereTo ); }\n        return views;\n    },\n\n    /** override to show counts, what's deleted/hidden, and links to toggle those */\n    _renderCounts : function( $whereTo ){\n        $whereTo = $whereTo instanceof jQuery? $whereTo : this.$el;\n        var html = this.templates.counts( this.model.toJSON(), this );\n        return $whereTo.find( '> .controls .subtitle' ).html( html );\n    },\n\n    /** render the tags sub-view controller */\n    _renderTags : function( $where ){\n        var panel = this;\n        this.tagsEditor = new TAGS.TagsEditor({\n            model           : this.model,\n            el              : $where.find( '.controls .tags-display' ),\n            onshowFirstTime : function(){ this.render(); },\n            // show hide sub-view tag editors when this is shown/hidden\n            onshow          : function(){\n                panel.toggleHDATagEditors( true,  panel.fxSpeed );\n            },\n            onhide          : function(){\n                panel.toggleHDATagEditors( false, panel.fxSpeed );\n            },\n            $activator      : faIconButton({\n                title   : _l( 'Edit history tags' ),\n                classes : 'history-tag-btn',\n                faIcon  : 'fa-tags'\n            }).appendTo( $where.find( '.controls .actions' ) )\n        });\n    },\n    /** render the annotation sub-view controller */\n    _renderAnnotation : function( $where ){\n        var panel = this;\n        this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n            model           : this.model,\n            el              : $where.find( '.controls .annotation-display' ),\n            onshowFirstTime : function(){ this.render(); },\n            // show hide sub-view view annotation editors when this is shown/hidden\n            onshow          : function(){\n                panel.toggleHDAAnnotationEditors( true,  panel.fxSpeed );\n            },\n            onhide          : function(){\n                panel.toggleHDAAnnotationEditors( false, panel.fxSpeed );\n            },\n            $activator      : faIconButton({\n                title   : _l( 'Edit history annotation' ),\n                classes : 'history-annotate-btn',\n                faIcon  : 'fa-comment'\n            }).appendTo( $where.find( '.controls .actions' ) )\n        });\n    },\n\n    /** Set up HistoryViewEdit js/widget behaviours\n     *  In this override, make the name editable\n     */\n    _setUpBehaviors : function( $where ){\n        $where = $where || this.$el;\n        _super.prototype._setUpBehaviors.call( this, $where );\n        if( !this.model ){ return; }\n\n        // anon users shouldn't have access to any of the following\n        if( ( !Galaxy.user || Galaxy.user.isAnonymous() )\n        ||  ( Galaxy.user.id !== this.model.get( 'user_id' ) ) ){\n            return;\n        }\n\n        var panel = this,\n            nameSelector = '> .controls .name';\n        $where.find( nameSelector )\n            .attr( 'title', _l( 'Click to rename history' ) )\n            .tooltip({ placement: 'bottom' })\n            .make_text_editable({\n                on_finish: function( newName ){\n                    var previousName = panel.model.get( 'name' );\n                    if( newName && newName !== previousName ){\n                        panel.$el.find( nameSelector ).text( newName );\n                        panel.model.save({ name: newName })\n                            .fail( function(){\n                                panel.$el.find( nameSelector ).text( panel.model.previous( 'name' ) );\n                            });\n                    } else {\n                        panel.$el.find( nameSelector ).text( previousName );\n                    }\n                }\n            });\n    },\n\n    /** return a new popup menu for choosing a multi selection action\n     *  ajax calls made for multiple datasets are queued\n     */\n    multiselectActions : function(){\n        var panel = this,\n            actions = [\n                {   html: _l( 'Hide datasets' ), func: function(){\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.hide;\n                        panel.getSelectedModels().ajaxQueue( action );\n                    }\n                },\n                {   html: _l( 'Unhide datasets' ), func: function(){\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.unhide;\n                        panel.getSelectedModels().ajaxQueue( action );\n                    }\n                },\n                {   html: _l( 'Delete datasets' ), func: function(){\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype['delete'];\n                        panel.getSelectedModels().ajaxQueue( action );\n                    }\n                },\n                {   html: _l( 'Undelete datasets' ), func: function(){\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.undelete;\n                        panel.getSelectedModels().ajaxQueue( action );\n                    }\n                }\n            ];\n        if( panel.purgeAllowed ){\n            actions.push({\n                html: _l( 'Permanently delete datasets' ), func: function(){\n                    if( confirm( _l( 'This will permanently remove the data in your datasets. Are you sure?' ) ) ){\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.purge;\n                        panel.getSelectedModels().ajaxQueue( action );\n                    }\n                }\n            });\n        }\n        actions = actions.concat( panel._collectionActions() );\n        return actions;\n    },\n\n    /**   */\n    _collectionActions : function(){\n        var panel = this;\n        return [\n            {   html: _l( 'Build Dataset List' ), func: function() { panel.buildCollection( \"list\") }\n            },\n            // TODO: Only show quick pair if two things selected.\n            {   html: _l( 'Build Dataset Pair' ), func: function() { panel.buildCollection( \"paired\") }\n            },\n            {   html: _l( 'Build List of Dataset Pairs' ), func: function() { panel.buildCollection( \"list:paired\" ) }\n            },\n        ];\n    },\n\n    buildCollection : function( collectionType, selection, hideSourceItems ) {\n        var panel = this;\n        var selection = selection || panel.getSelectedModels();\n        var hideSourceItems = hideSourceItems || false;\n        var createFunc;\n        if( collectionType == \"list\" ) {\n            createFunc = LIST_COLLECTION_CREATOR.createListCollection;\n        } else if( collectionType == \"paired\" ) {\n            createFunc = PAIR_COLLECTION_CREATOR.createPairCollection;\n        } else if( collectionType == \"list:paired\" ) {\n            createFunc = LIST_OF_PAIRS_COLLECTION_CREATOR.createListOfPairsCollection;\n        } else {\n            console.warn( \"Unknown collectionType encountered \" + collectionType );\n        }\n        createFunc( selection, hideSourceItems ).done( function() { panel.model.refresh() } );\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** In this override, add purgeAllowed and whether tags/annotation editors should be shown */\n    _getItemViewOptions : function( model ){\n        var options = _super.prototype._getItemViewOptions.call( this, model );\n        _.extend( options, {\n            purgeAllowed            : this.purgeAllowed,\n            tagsEditorShown         : ( this.tagsEditor && !this.tagsEditor.hidden ),\n            annotationEditorShown   : ( this.annotationEditor && !this.annotationEditor.hidden )\n        });\n        return options;\n    },\n\n    /** If this item is deleted and we're not showing deleted items, remove the view\n     *  @param {Model} the item model to check\n     */\n    _handleItemDeletedChange : function( itemModel ){\n        if( itemModel.get( 'deleted' ) ){\n            this._handleItemDeletion( itemModel );\n        } else {\n            this._handleItemUndeletion( itemModel );\n        }\n        this._renderCounts();\n    },\n\n    _handleItemDeletion : function( itemModel ){\n        var contentsShown = this.model.get( 'contents_active' );\n        contentsShown.deleted += 1;\n        contentsShown.active -= 1;\n        if( !this.model.contents.includeDeleted ){\n            this.removeItemView( itemModel );\n        }\n        this.model.set( 'contents_active', contentsShown );\n    },\n\n    _handleItemUndeletion : function( itemModel ){\n        var contentsShown = this.model.get( 'contents_active' );\n        contentsShown.deleted -= 1;\n        if( !this.model.contents.includeDeleted ){\n            contentsShown.active -= 1;\n        }\n        this.model.set( 'contents_active', contentsShown );\n    },\n\n    /** If this item is hidden and we're not showing hidden items, remove the view\n     *  @param {Model} the item model to check\n     */\n    _handleItemVisibleChange : function( itemModel ){\n        if( itemModel.hidden() ){\n            this._handleItemHidden( itemModel );\n        } else {\n            this._handleItemUnhidden( itemModel );\n        }\n        this._renderCounts();\n    },\n\n    _handleItemHidden : function( itemModel ){\n        var contentsShown = this.model.get( 'contents_active' );\n        contentsShown.hidden += 1;\n        contentsShown.active -= 1;\n        if( !this.model.contents.includeHidden ){\n            this.removeItemView( itemModel );\n        }\n        this.model.set( 'contents_active', contentsShown );\n    },\n\n    _handleItemUnhidden : function( itemModel ){\n        var contentsShown = this.model.get( 'contents_active' );\n        contentsShown.hidden -= 1;\n        if( !this.model.contents.includeHidden ){\n            contentsShown.active -= 1;\n        }\n        this.model.set( 'contents_active', contentsShown );\n    },\n\n    /** toggle the visibility of each content's tagsEditor applying all the args sent to this function */\n    toggleHDATagEditors : function( showOrHide, speed ){\n        _.each( this.views, function( view ){\n            if( view.tagsEditor ){\n                view.tagsEditor.toggle( showOrHide, speed );\n            }\n        });\n    },\n\n    /** toggle the visibility of each content's annotationEditor applying all the args sent to this function */\n    toggleHDAAnnotationEditors : function( showOrHide, speed ){\n        _.each( this.views, function( view ){\n            if( view.annotationEditor ){\n                view.annotationEditor.toggle( showOrHide, speed );\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events : _.extend( _.clone( _super.prototype.events ), {\n        'click .show-selectors-btn'                 : 'toggleSelectors',\n        'click .toggle-deleted-link'                : function( ev ){ this.toggleShowDeleted(); },\n        'click .toggle-hidden-link'                 : function( ev ){ this.toggleShowHidden(); }\n    }),\n\n    // ------------------------------------------------------------------------ search\n    _renderSearchProgress : function( limit, offset ){\n        var stop = limit + offset;\n        return this.$( '> .controls .subtitle' ).html([\n            '<i>',\n                _l( 'Searching ' ), stop, '/', this.model.contentsShown(),\n            '</i>'\n        ].join(''));\n    },\n\n    /** override to display number found in subtitle */\n    _renderSearchFindings : function(){\n        this.$( '> .controls .subtitle' ).html([\n            _l( 'Found' ), this.views.length\n        ].join(' '));\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ as drop target\n    /** turn all the drag and drop handlers on and add some help text above the drop area */\n    dropTargetOn : function(){\n        if( this.dropTarget ){ return this; }\n        this.dropTarget = true;\n\n        //TODO: to init\n        var dropHandlers = {\n            'dragenter' : _.bind( this.dragenter, this ),\n            'dragover'  : _.bind( this.dragover,  this ),\n            'dragleave' : _.bind( this.dragleave, this ),\n            'drop'      : _.bind( this.drop, this )\n        };\n\n        var $dropTarget = this._renderDropTarget();\n        this.$list().before([ this._renderDropTargetHelp(), $dropTarget ]);\n        for( var evName in dropHandlers ){\n            if( dropHandlers.hasOwnProperty( evName ) ){\n                //console.debug( evName, dropHandlers[ evName ] );\n                $dropTarget.on( evName, dropHandlers[ evName ] );\n            }\n        }\n        return this;\n    },\n\n    /** render a box to serve as a 'drop here' area on the history */\n    _renderDropTarget : function(){\n        this.$( '.history-drop-target' ).remove();\n        return $( '<div/>' ).addClass( 'history-drop-target' );\n    },\n\n    /** tell the user how it works  */\n    _renderDropTargetHelp : function(){\n        this.$( '.history-drop-target-help' ).remove();\n        return $( '<div/>' ).addClass( 'history-drop-target-help' )\n            .text( _l( 'Drag datasets here to copy them to the current history' ) );\n    },\n\n    /** shut down drag and drop event handlers and remove drop target */\n    dropTargetOff : function(){\n        if( !this.dropTarget ){ return this; }\n        //this.log( 'dropTargetOff' );\n        this.dropTarget = false;\n        var dropTarget = this.$( '.history-drop-target' ).get(0);\n        for( var evName in this._dropHandlers ){\n            if( this._dropHandlers.hasOwnProperty( evName ) ){\n                dropTarget.off( evName, this._dropHandlers[ evName ] );\n            }\n        }\n        this.$( '.history-drop-target' ).remove();\n        this.$( '.history-drop-target-help' ).remove();\n        return this;\n    },\n    /** toggle the target on/off */\n    dropTargetToggle : function(){\n        if( this.dropTarget ){\n            this.dropTargetOff();\n        } else {\n            this.dropTargetOn();\n        }\n        return this;\n    },\n\n    dragenter : function( ev ){\n        //console.debug( 'dragenter:', this, ev );\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.$( '.history-drop-target' ).css( 'border', '2px solid black' );\n    },\n    dragover : function( ev ){\n        ev.preventDefault();\n        ev.stopPropagation();\n    },\n    dragleave : function( ev ){\n        //console.debug( 'dragleave:', this, ev );\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.$( '.history-drop-target' ).css( 'border', '1px dashed black' );\n    },\n    /** when (text) is dropped try to parse as json and trigger an event */\n    drop : function( ev ){\n        ev.preventDefault();\n        //ev.stopPropagation();\n\n        var self = this;\n        var dataTransfer = ev.originalEvent.dataTransfer;\n        var data = dataTransfer.getData( \"text\" );\n\n        dataTransfer.dropEffect = 'move';\n        try {\n            data = JSON.parse( data );\n        } catch( err ){\n            self.warn( 'error parsing JSON from drop:', data );\n        }\n\n        self.trigger( 'droptarget:drop', ev, data, self );\n        return false;\n    },\n\n    /** handler that copies data into the contents */\n    dataDropped : function( data ){\n        var self = this;\n        // HDA: dropping will copy it to the history\n        if( _.isObject( data ) && data.model_class === 'HistoryDatasetAssociation' && data.id ){\n            if( self.contents.currentPage !== 0 ){\n                return self.contents.fetchPage( 0 )\n                    .then( function(){\n                        return self.model.contents.copy( data.id );\n                    });\n            }\n            return self.model.contents.copy( data.id );\n        }\n        return jQuery.when();\n    },\n\n    // ........................................................................ misc\n    /** Return a string rep of the history */\n    toString    : function(){\n        return 'HistoryViewEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryViewEdit.prototype.templates = (function(){\n\n    var countsTemplate = BASE_MVC.wrapTemplate([\n        '<% var shown = Math.max( view.views.length, history.contents_active.active ) %>',\n        '<% if( shown ){ %>',\n            '<span class=\"shown-count\">',\n                '<%- shown %> ', _l( 'shown' ),\n            '</span>',\n        '<% } %>',\n\n        '<% if( history.contents_active.deleted ){ %>',\n            '<span class=\"deleted-count\">',\n            '<% if( view.model.contents.includeDeleted ){ %>',\n                '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n                    _l( 'hide deleted' ),\n                '</a>',\n            '<% } else { %>',\n                '<%- history.contents_active.deleted %> ',\n                '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n                    _l( 'deleted' ),\n                '</a>',\n            '<% } %>',\n            '</span>',\n        '<% } %>',\n\n        '<% if( history.contents_active.hidden ){ %>',\n            '<span class=\"hidden-count\">',\n            '<% if( view.model.contents.includeHidden ){ %>',\n                '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n                    _l( 'hide hidden' ),\n                '</a>',\n            '<% } else { %>',\n                '<%- history.contents_active.hidden %> ',\n                '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n                    _l( 'hidden' ),\n                '</a>',\n            '<% } %>',\n            '</span>',\n        '<% } %>',\n    ], 'history' );\n\n    return _.extend( _.clone( _super.prototype.templates ), {\n        counts : countsTemplate\n    });\n}());\n\n\n//==============================================================================\n    return {\n        HistoryViewEdit : HistoryViewEdit\n    };\n});\n"]}