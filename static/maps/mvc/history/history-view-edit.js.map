{"version":3,"sources":["mvc/history/history-view-edit.js"],"names":["_historyView","require","_historyContents","_states","_hdaModel","_hdaLiEdit","_hdcaLiEdit","_tag","_annotation","_listCollectionCreator","_pairCollectionCreator","_listOfPairsCollectionCreator","_faIconButton","_popupMenu","_baseMvc","_localization","_super","_historyView2","default","HistoryView","HistoryViewEdit","extend","HDAViewClass","_hdaLiEdit2","HDAListItemEdit","HDCAViewClass","_hdcaLiEdit2","HDCAListItemEdit","initialize","attributes","prototype","call","this","tagsEditor","dragItems","annotationEditor","purgeAllowed","annotationEditorShown","tagsEditorShown","_setUpListeners","on","droptarget:drop","ev","data","dataDropped","dropTargetOff","view:attached view:removed","_renderCounts","search:loading-progress","_renderSearchProgress","search:searching","_renderSearchFindings","_setUpModelListeners","model","updateHistoryDiskSize","listenTo","collection","change:deleted","_handleItemDeletedChange","change:visible","_handleItemVisibleChange","fetch","fetching-deleted","html","_localization2","fetching-hidden","$","fetching-deleted-done fetching-hidden-done","_buildNewRender","$newRender","Galaxy","user","id","get","_renderTags","_setUpCollectionListeners","text","renderItems","$whereTo","views","searchFor","jQuery","templates","counts","toJSON","find","$where","_tag2","TagsEditor","el","onshowFirstTime","render","onshow","_renderAnnotation","panel","fxSpeed","toggleHDATagEditors","$activator","_faIconButton2","classes","faIcon","appendTo","_annotation2","AnnotationEditor","$el","toggleHDAAnnotationEditors","title","onhide","_setUpBehaviors","isAnonymous","attr","tooltip","placement","previousName","newName","save","name","fail","previous","multiselectActions","actions","func","action","_hdaModel2","HistoryDatasetAssociation","hide","nameSelector","ajaxQueue","unhide","getSelectedModels","undelete","push","confirm","purge","concat","_collectionActions","buildCollection","collectionType","selection","hideSourceItems","createFunc","_listCollectionCreator2","createListCollection","_pairCollectionCreator2","createPairCollection","createListOfPairsCollection","console","warn","done","refresh","_getItemViewOptions","options","_","hidden","itemModel","_handleItemDeletion","contentsShown","removeItemView","deleted","active","contents","includeDeleted","_handleItemUndeletion","set","_handleItemHidden","includeHidden","_handleItemUnhidden","each","showOrHide","speed","view","toggle","events","clone","click .show-selectors-btn","click .toggle-deleted-link","toggleShowDeleted","click .toggle-hidden-link","limit","offset","stop","join","dropHandlers","found","dragover","dragenter","bind","dropTargetOn","$dropTarget","$list","before","dropTarget","dragleave","drop","addClass","_renderDropTarget","_renderDropTargetHelp","evName","hasOwnProperty","remove","_dropHandlers","off","dropTargetToggle","stopPropagation","preventDefault","self","dataTransfer","css","err","trigger","isObject","currentPage","dropEffect","JSON","parse","countsTemplate","then","copy","when","toString","_baseMvc2","wrapTemplate","foundTemplate"],"mappings":"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","file":"../../../scripts/mvc/history/history-view-edit.js","sourcesContent":["import HISTORY_VIEW from \"mvc/history/history-view\";\nimport HISTORY_CONTENTS from \"mvc/history/history-contents\";\nimport STATES from \"mvc/dataset/states\";\nimport HDA_MODEL from \"mvc/history/hda-model\";\nimport HDA_LI_EDIT from \"mvc/history/hda-li-edit\";\nimport HDCA_LI_EDIT from \"mvc/history/hdca-li-edit\";\nimport TAGS from \"mvc/tag\";\nimport ANNOTATIONS from \"mvc/annotation\";\nimport LIST_COLLECTION_CREATOR from \"mvc/collection/list-collection-creator\";\nimport PAIR_COLLECTION_CREATOR from \"mvc/collection/pair-collection-creator\";\nimport LIST_OF_PAIRS_COLLECTION_CREATOR from \"mvc/collection/list-of-pairs-collection-creator\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport PopupMenu from \"mvc/ui/popup-menu\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/editable-text\";\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = HISTORY_VIEW.HistoryView;\n// base class for history-view-edit-current and used as-is in history/view.mako\n/** @class Editable View/Controller for the history model.\n *\n *  Allows:\n *      (everything HistoryView allows)\n *      changing the name\n *      displaying and editing tags and annotations\n *      multi-selection and operations on mulitple content items\n */\nvar HistoryViewEdit = _super.extend(\n    /** @lends HistoryViewEdit.prototype */ {\n        /** class to use for constructing the HistoryDatasetAssociation views */\n        HDAViewClass: HDA_LI_EDIT.HDAListItemEdit,\n        /** class to use for constructing the HistoryDatasetCollectionAssociation views */\n        HDCAViewClass: HDCA_LI_EDIT.HDCAListItemEdit,\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes\n     */\n        initialize: function(attributes) {\n            attributes = attributes || {};\n            _super.prototype.initialize.call(this, attributes);\n\n            // ---- set up instance vars\n            /** editor for tags - sub-view */\n            this.tagsEditor = null;\n\n            /** enable drag and drop - sub-view */\n            this.dragItems = true;\n\n            /** editor for annotations - sub-view */\n            this.annotationEditor = null;\n\n            /** allow user purge of dataset files? */\n            this.purgeAllowed = attributes.purgeAllowed || false;\n\n            // states/modes the panel can be in\n            /** is the panel currently showing the dataset selection controls? */\n            this.annotationEditorShown =\n                attributes.annotationEditorShown || false;\n            this.tagsEditorShown = attributes.tagsEditorShown || false;\n        },\n\n        /** Override to handle history as drag-drop target */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            return this.on({\n                \"droptarget:drop\": function(ev, data) {\n                    // process whatever was dropped and re-hide the drop target\n                    this.dataDropped(data);\n                    this.dropTargetOff();\n                },\n                \"view:attached view:removed\": function() {\n                    this._renderCounts();\n                },\n                \"search:loading-progress\": this._renderSearchProgress,\n                \"search:searching\": this._renderSearchFindings\n            });\n        },\n\n        // ------------------------------------------------------------------------ listeners\n        /** listening for history and HDA events */\n        _setUpModelListeners: function() {\n            _super.prototype._setUpModelListeners.call(this);\n            this.listenTo(\n                this.model,\n                \"change:size\",\n                this.updateHistoryDiskSize\n            );\n            return this;\n        },\n\n        /** listening for collection events */\n        _setUpCollectionListeners: function() {\n            _super.prototype._setUpCollectionListeners.call(this);\n            this.listenTo(this.collection, {\n                \"change:deleted\": this._handleItemDeletedChange,\n                \"change:visible\": this._handleItemVisibleChange,\n                \"change:purged\": function(model) {\n                    // hafta get the new nice-size w/o the purged model\n                    this.model.fetch();\n                },\n                // loading indicators for deleted/hidden\n                \"fetching-deleted\": function(collection) {\n                    this.$(\"> .controls .deleted-count\").html(\n                        \"<i>\" + _l(\"loading...\") + \"</i>\"\n                    );\n                },\n                \"fetching-hidden\": function(collection) {\n                    this.$(\"> .controls .hidden-count\").html(\n                        \"<i>\" + _l(\"loading...\") + \"</i>\"\n                    );\n                },\n                \"fetching-deleted-done fetching-hidden-done\": this._renderCounts\n            });\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ panel rendering\n        /** In this override, add tag and annotation editors and a btn to toggle the selectors */\n        _buildNewRender: function() {\n            // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n            var $newRender = _super.prototype._buildNewRender.call(this);\n            if (!this.model) {\n                return $newRender;\n            }\n\n            if (\n                Galaxy &&\n                Galaxy.user &&\n                Galaxy.user.id &&\n                Galaxy.user.id === this.model.get(\"user_id\")\n            ) {\n                this._renderTags($newRender);\n                this._renderAnnotation($newRender);\n            }\n            return $newRender;\n        },\n\n        /** Update the history size display (curr. upper right of panel). */\n        updateHistoryDiskSize: function() {\n            this.$(\".history-size\").text(this.model.get(\"nice_size\"));\n        },\n\n        /** override to render counts when the items are rendered */\n        renderItems: function($whereTo) {\n            var views = _super.prototype.renderItems.call(this, $whereTo);\n            if (!this.searchFor) {\n                this._renderCounts($whereTo);\n            } else {\n                this._renderSearchFindings($whereTo);\n            }\n            return views;\n        },\n\n        /** override to show counts, what's deleted/hidden, and links to toggle those */\n        _renderCounts: function($whereTo) {\n            $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n            var html = this.templates.counts(this.model.toJSON(), this);\n            return $whereTo.find(\"> .controls .subtitle\").html(html);\n        },\n\n        /** render the tags sub-view controller */\n        _renderTags: function($where) {\n            var panel = this;\n            this.tagsEditor = new TAGS.TagsEditor({\n                model: this.model,\n                el: $where.find(\".controls .tags-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                // show hide sub-view tag editors when this is shown/hidden\n                onshow: function() {\n                    panel.toggleHDATagEditors(true, panel.fxSpeed);\n                },\n                onhide: function() {\n                    panel.toggleHDATagEditors(false, panel.fxSpeed);\n                },\n                $activator: faIconButton({\n                    title: _l(\"Edit history tags\"),\n                    classes: \"history-tag-btn\",\n                    faIcon: \"fa-tags\"\n                }).appendTo($where.find(\".controls .actions\"))\n            });\n        },\n        /** render the annotation sub-view controller */\n        _renderAnnotation: function($where) {\n            var panel = this;\n            this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n                model: this.model,\n                el: $where.find(\".controls .annotation-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                // show hide sub-view view annotation editors when this is shown/hidden\n                onshow: function() {\n                    panel.toggleHDAAnnotationEditors(true, panel.fxSpeed);\n                },\n                onhide: function() {\n                    panel.toggleHDAAnnotationEditors(false, panel.fxSpeed);\n                },\n                $activator: faIconButton({\n                    title: _l(\"Edit history annotation\"),\n                    classes: \"history-annotate-btn\",\n                    faIcon: \"fa-comment\"\n                }).appendTo($where.find(\".controls .actions\"))\n            });\n        },\n\n        /** Set up HistoryViewEdit js/widget behaviours\n     *  In this override, make the name editable\n     */\n        _setUpBehaviors: function($where) {\n            $where = $where || this.$el;\n            _super.prototype._setUpBehaviors.call(this, $where);\n            if (!this.model) {\n                return;\n            }\n\n            // anon users shouldn't have access to any of the following\n            if (\n                !Galaxy.user ||\n                Galaxy.user.isAnonymous() ||\n                Galaxy.user.id !== this.model.get(\"user_id\")\n            ) {\n                return;\n            }\n\n            var panel = this,\n                nameSelector = \"> .controls .name\";\n            $where\n                .find(nameSelector)\n                .attr(\"title\", _l(\"Click to rename history\"))\n                .tooltip({ placement: \"bottom\" })\n                .make_text_editable({\n                    on_finish: function(newName) {\n                        var previousName = panel.model.get(\"name\");\n                        if (newName && newName !== previousName) {\n                            panel.$el.find(nameSelector).text(newName);\n                            panel.model\n                                .save({ name: newName })\n                                .fail(function() {\n                                    panel.$el\n                                        .find(nameSelector)\n                                        .text(panel.model.previous(\"name\"));\n                                });\n                        } else {\n                            panel.$el.find(nameSelector).text(previousName);\n                        }\n                    }\n                });\n        },\n\n        /** return a new popup menu for choosing a multi selection action\n     *  ajax calls made for multiple datasets are queued\n     */\n        multiselectActions: function() {\n            var panel = this,\n                actions = [\n                    {\n                        html: _l(\"Hide datasets\"),\n                        func: function() {\n                            var action =\n                                HDA_MODEL.HistoryDatasetAssociation.prototype\n                                    .hide;\n                            panel.getSelectedModels().ajaxQueue(action);\n                        }\n                    },\n                    {\n                        html: _l(\"Unhide datasets\"),\n                        func: function() {\n                            var action =\n                                HDA_MODEL.HistoryDatasetAssociation.prototype\n                                    .unhide;\n                            panel.getSelectedModels().ajaxQueue(action);\n                        }\n                    },\n                    {\n                        html: _l(\"Delete datasets\"),\n                        func: function() {\n                            var action =\n                                HDA_MODEL.HistoryDatasetAssociation.prototype[\n                                    \"delete\"\n                                ];\n                            panel.getSelectedModels().ajaxQueue(action);\n                        }\n                    },\n                    {\n                        html: _l(\"Undelete datasets\"),\n                        func: function() {\n                            var action =\n                                HDA_MODEL.HistoryDatasetAssociation.prototype\n                                    .undelete;\n                            panel.getSelectedModels().ajaxQueue(action);\n                        }\n                    }\n                ];\n            if (panel.purgeAllowed) {\n                actions.push({\n                    html: _l(\"Permanently delete datasets\"),\n                    func: function() {\n                        if (\n                            confirm(\n                                _l(\n                                    \"This will permanently remove the data in your datasets. Are you sure?\"\n                                )\n                            )\n                        ) {\n                            var action =\n                                HDA_MODEL.HistoryDatasetAssociation.prototype\n                                    .purge;\n                            panel.getSelectedModels().ajaxQueue(action);\n                        }\n                    }\n                });\n            }\n            actions = actions.concat(panel._collectionActions());\n            return actions;\n        },\n\n        /**   */\n        _collectionActions: function() {\n            var panel = this;\n            return [\n                {\n                    html: _l(\"Build Dataset List\"),\n                    func: function() {\n                        panel.buildCollection(\"list\");\n                    }\n                },\n                // TODO: Only show quick pair if two things selected.\n                {\n                    html: _l(\"Build Dataset Pair\"),\n                    func: function() {\n                        panel.buildCollection(\"paired\");\n                    }\n                },\n                {\n                    html: _l(\"Build List of Dataset Pairs\"),\n                    func: function() {\n                        panel.buildCollection(\"list:paired\");\n                    }\n                }\n            ];\n        },\n\n        buildCollection: function(collectionType, selection, hideSourceItems) {\n            var panel = this;\n            var selection = selection || panel.getSelectedModels();\n            var hideSourceItems = hideSourceItems || false;\n            var createFunc;\n            if (collectionType == \"list\") {\n                createFunc = LIST_COLLECTION_CREATOR.createListCollection;\n            } else if (collectionType == \"paired\") {\n                createFunc = PAIR_COLLECTION_CREATOR.createPairCollection;\n            } else if (collectionType == \"list:paired\") {\n                createFunc =\n                    LIST_OF_PAIRS_COLLECTION_CREATOR.createListOfPairsCollection;\n            } else {\n                console.warn(\n                    \"Unknown collectionType encountered \" + collectionType\n                );\n            }\n            createFunc(selection, hideSourceItems).done(function() {\n                panel.model.refresh();\n            });\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** In this override, add purgeAllowed and whether tags/annotation editors should be shown */\n        _getItemViewOptions: function(model) {\n            var options = _super.prototype._getItemViewOptions.call(\n                this,\n                model\n            );\n            _.extend(options, {\n                purgeAllowed: this.purgeAllowed,\n                tagsEditorShown: this.tagsEditor && !this.tagsEditor.hidden,\n                annotationEditorShown:\n                    this.annotationEditor && !this.annotationEditor.hidden\n            });\n            return options;\n        },\n\n        /** If this item is deleted and we're not showing deleted items, remove the view\n     *  @param {Model} the item model to check\n     */\n        _handleItemDeletedChange: function(itemModel) {\n            if (itemModel.get(\"deleted\")) {\n                this._handleItemDeletion(itemModel);\n            } else {\n                this._handleItemUndeletion(itemModel);\n            }\n            this._renderCounts();\n        },\n\n        _handleItemDeletion: function(itemModel) {\n            var contentsShown = this.model.get(\"contents_active\");\n            contentsShown.deleted += 1;\n            contentsShown.active -= 1;\n            if (!this.model.contents.includeDeleted) {\n                this.removeItemView(itemModel);\n            }\n            this.model.set(\"contents_active\", contentsShown);\n        },\n\n        _handleItemUndeletion: function(itemModel) {\n            var contentsShown = this.model.get(\"contents_active\");\n            contentsShown.deleted -= 1;\n            if (!this.model.contents.includeDeleted) {\n                contentsShown.active -= 1;\n            }\n            this.model.set(\"contents_active\", contentsShown);\n        },\n\n        /** If this item is hidden and we're not showing hidden items, remove the view\n     *  @param {Model} the item model to check\n     */\n        _handleItemVisibleChange: function(itemModel) {\n            if (itemModel.hidden()) {\n                this._handleItemHidden(itemModel);\n            } else {\n                this._handleItemUnhidden(itemModel);\n            }\n            this._renderCounts();\n        },\n\n        _handleItemHidden: function(itemModel) {\n            var contentsShown = this.model.get(\"contents_active\");\n            contentsShown.hidden += 1;\n            contentsShown.active -= 1;\n            if (!this.model.contents.includeHidden) {\n                this.removeItemView(itemModel);\n            }\n            this.model.set(\"contents_active\", contentsShown);\n        },\n\n        _handleItemUnhidden: function(itemModel) {\n            var contentsShown = this.model.get(\"contents_active\");\n            contentsShown.hidden -= 1;\n            if (!this.model.contents.includeHidden) {\n                contentsShown.active -= 1;\n            }\n            this.model.set(\"contents_active\", contentsShown);\n        },\n\n        /** toggle the visibility of each content's tagsEditor applying all the args sent to this function */\n        toggleHDATagEditors: function(showOrHide, speed) {\n            _.each(this.views, function(view) {\n                if (view.tagsEditor) {\n                    view.tagsEditor.toggle(showOrHide, speed);\n                }\n            });\n        },\n\n        /** toggle the visibility of each content's annotationEditor applying all the args sent to this function */\n        toggleHDAAnnotationEditors: function(showOrHide, speed) {\n            _.each(this.views, function(view) {\n                if (view.annotationEditor) {\n                    view.annotationEditor.toggle(showOrHide, speed);\n                }\n            });\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .show-selectors-btn\": \"toggleSelectors\",\n            \"click .toggle-deleted-link\": function(ev) {\n                this.toggleShowDeleted();\n            },\n            \"click .toggle-hidden-link\": function(ev) {\n                this.toggleShowHidden();\n            }\n        }),\n\n        // ------------------------------------------------------------------------ search\n        _renderSearchProgress: function(limit, offset) {\n            var stop = limit + offset;\n            return this.$(\"> .controls .subtitle\").html(\n                [\n                    \"<i>\",\n                    _l(\"Searching \"),\n                    stop,\n                    \"/\",\n                    this.model.contentsShown(),\n                    \"</i>\"\n                ].join(\"\")\n            );\n        },\n\n        /** override to display number found in subtitle */\n        _renderSearchFindings: function($whereTo) {\n            $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n            var html = this.templates.found(this.model.toJSON(), this);\n            $whereTo.find(\"> .controls .subtitle\").html(html);\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ as drop target\n        /** turn all the drag and drop handlers on and add some help text above the drop area */\n        dropTargetOn: function() {\n            if (this.dropTarget) {\n                return this;\n            }\n            this.dropTarget = true;\n\n            //TODO: to init\n            var dropHandlers = {\n                dragenter: _.bind(this.dragenter, this),\n                dragover: _.bind(this.dragover, this),\n                dragleave: _.bind(this.dragleave, this),\n                drop: _.bind(this.drop, this)\n            };\n\n            var $dropTarget = this._renderDropTarget();\n            this.$list().before([this._renderDropTargetHelp(), $dropTarget]);\n            for (var evName in dropHandlers) {\n                if (dropHandlers.hasOwnProperty(evName)) {\n                    //console.debug( evName, dropHandlers[ evName ] );\n                    $dropTarget.on(evName, dropHandlers[evName]);\n                }\n            }\n            return this;\n        },\n\n        /** render a box to serve as a 'drop here' area on the history */\n        _renderDropTarget: function() {\n            this.$(\".history-drop-target\").remove();\n            return $(\"<div/>\").addClass(\"history-drop-target\");\n        },\n\n        /** tell the user how it works  */\n        _renderDropTargetHelp: function() {\n            this.$(\".history-drop-target-help\").remove();\n            return $(\"<div/>\")\n                .addClass(\"history-drop-target-help\")\n                .text(\n                    _l(\"Drag datasets here to copy them to the current history\")\n                );\n        },\n\n        /** shut down drag and drop event handlers and remove drop target */\n        dropTargetOff: function() {\n            if (!this.dropTarget) {\n                return this;\n            }\n            //this.log( 'dropTargetOff' );\n            this.dropTarget = false;\n            var dropTarget = this.$(\".history-drop-target\").get(0);\n            for (var evName in this._dropHandlers) {\n                if (this._dropHandlers.hasOwnProperty(evName)) {\n                    dropTarget.off(evName, this._dropHandlers[evName]);\n                }\n            }\n            this.$(\".history-drop-target\").remove();\n            this.$(\".history-drop-target-help\").remove();\n            return this;\n        },\n        /** toggle the target on/off */\n        dropTargetToggle: function() {\n            if (this.dropTarget) {\n                this.dropTargetOff();\n            } else {\n                this.dropTargetOn();\n            }\n            return this;\n        },\n\n        dragenter: function(ev) {\n            //console.debug( 'dragenter:', this, ev );\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.$(\".history-drop-target\").css(\"border\", \"2px solid black\");\n        },\n        dragover: function(ev) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        },\n        dragleave: function(ev) {\n            //console.debug( 'dragleave:', this, ev );\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.$(\".history-drop-target\").css(\"border\", \"1px dashed black\");\n        },\n        /** when (text) is dropped try to parse as json and trigger an event */\n        drop: function(ev) {\n            ev.preventDefault();\n            //ev.stopPropagation();\n\n            var self = this;\n            var dataTransfer = ev.originalEvent.dataTransfer;\n            var data = dataTransfer.getData(\"text\");\n\n            dataTransfer.dropEffect = \"move\";\n            try {\n                data = JSON.parse(data);\n            } catch (err) {\n                self.warn(\"error parsing JSON from drop:\", data);\n            }\n\n            self.trigger(\"droptarget:drop\", ev, data, self);\n            return false;\n        },\n\n        /** handler that copies data into the contents */\n        dataDropped: function(data) {\n            var self = this;\n            // HDA: dropping will copy it to the history\n            if (\n                _.isObject(data) &&\n                data.model_class === \"HistoryDatasetAssociation\" &&\n                data.id\n            ) {\n                if (self.contents.currentPage !== 0) {\n                    return self.contents.fetchPage(0).then(function() {\n                        return self.model.contents.copy(data.id);\n                    });\n                }\n                return self.model.contents.copy(data.id);\n            }\n            return jQuery.when();\n        },\n\n        // ........................................................................ misc\n        /** Return a string rep of the history */\n        toString: function() {\n            return (\n                \"HistoryViewEdit(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryViewEdit.prototype.templates = (function() {\n    var countsTemplate = BASE_MVC.wrapTemplate(\n        [\n            \"<% var shown = Math.max( view.views.length, history.contents_active.active ) %>\",\n            \"<% if( shown ){ %>\",\n            '<span class=\"shown-count\">',\n            \"<%- shown %> \",\n            _l(\"shown\"),\n            \"</span>\",\n            \"<% } %>\",\n\n            \"<% if( history.contents_active.deleted ){ %>\",\n            '<span class=\"deleted-count\">',\n            \"<% if( view.model.contents.includeDeleted ){ %>\",\n            '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n            _l(\"hide deleted\"),\n            \"</a>\",\n            \"<% } else { %>\",\n            \"<%- history.contents_active.deleted %> \",\n            '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n            _l(\"deleted\"),\n            \"</a>\",\n            \"<% } %>\",\n            \"</span>\",\n            \"<% } %>\",\n\n            \"<% if( history.contents_active.hidden ){ %>\",\n            '<span class=\"hidden-count\">',\n            \"<% if( view.model.contents.includeHidden ){ %>\",\n            '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n            _l(\"hide hidden\"),\n            \"</a>\",\n            \"<% } else { %>\",\n            \"<%- history.contents_active.hidden %> \",\n            '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n            _l(\"hidden\"),\n            \"</a>\",\n            \"<% } %>\",\n            \"</span>\",\n            \"<% } %>\"\n        ],\n        \"history\"\n    );\n\n    var foundTemplate = BASE_MVC.wrapTemplate(\n        [\n            _l(\"Found\"),\n            \" <%- view.views.length %>, \",\n\n            \"<% if( history.contents_active.deleted ){ %>\",\n            \"<% if( view.model.contents.includeDeleted ){ %>\",\n            '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n            _l(\"hide deleted\"),\n            \"</a>, \",\n            \"<% } else { %>\",\n            '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n            _l(\"show deleted\"),\n            \"</a>, \",\n            \"<% } %>\",\n            \"<% } %>\",\n\n            \"<% if( history.contents_active.hidden ){ %>\",\n            \"<% if( view.model.contents.includeHidden ){ %>\",\n            '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n            _l(\"hide hidden\"),\n            \"</a>\",\n            \"<% } else { %>\",\n            '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n            _l(\"show hidden\"),\n            \"</a>\",\n            \"<% } %>\",\n            \"<% } %>\"\n        ],\n        \"history\"\n    );\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        counts: countsTemplate,\n        found: foundTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    HistoryViewEdit: HistoryViewEdit\n};\n"]}