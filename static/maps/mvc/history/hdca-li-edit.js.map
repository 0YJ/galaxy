{"version":3,"sources":["mvc/history/hdca-li-edit.js"],"names":["_hdcaLi","require","_collectionViewEdit","_faIconButton","_localization","_super","_hdcaLi2","default","HDCAListItemView","HDCAListItemEdit","extend","_getFoldoutPanelClass","this","model","get","_collectionViewEdit2","ListCollectionViewEdit","PairCollectionViewEdit","ListOfPairsCollectionViewEdit","ListOfListsCollectionViewEdit","TypeError","_renderPrimaryActions","prototype","call","concat","_renderDeleteButton","self","deleted","title","_localization2","classes","disabled","onclick","$el","find","trigger"],"mappings":"4IAAA,IAAAA,QAAAC,QAAA,gEACAC,oBAAAD,QAAA,wGACAE,cAAAF,QAAA,0EACAG,cAAAH,QAAA,2EAHAI,OAAAC,SAAAC,QAAAC,iBASIC,iBAAmBJ,OAAOK,QAMtBC,sBAAuB,WACnB,OAAQC,KAAKC,MAAMC,IAAI,oBACnB,IAAK,OAdrB,OAAAC,qBAAAR,QAAAS,uBAgBgB,IAAK,SACD,OAAOD,qBAAAR,QAAaU,uBACxB,IAAK,cACD,OAAOF,qBAAAR,QAAaW,8BACxB,IAAK,YAlBrB,OAAAH,qBAAAR,QAAAY,8BAEA,MAAA,IAAAC,UAoBgB,2BAA6BR,KAAKC,MAAMC,IAAI,qBAbpDO,sBAAA,WAGQ,OAFRV,KAAAA,IAAAA,KAAuB,0BAEVN,OAALiB,UAAAD,sBACIE,KAAAX,MACCY,QAALZ,KAAAa,yBAIAA,oBAAA,WACI,IAAAC,EAAOd,KARfe,EAAAf,KAAAC,MAAAC,IAAA,WAUA,OAAUM,EAAAA,eAAAA,UAhBuBQ,MAAAD,GAqCvB,EAAAE,eAAAtB,SAAG,0CAhBjB,EAAAsB,eAAAtB,SAAA,UACAuB,QAAA,aACAT,OAAAA,WACIU,SAAgBJ,EAChBK,QAAA,WAzBiCN,EAAAO,IAAAC,KAAA,wBAAAC,QAAA,YA6CzBT,EAAKb,MAAL,aANJiB,SAAAA,WAEAC,MAAAA,qBANgBnB,KAAAC,MAAAD,KAAAC,MAAA,GAAA,cAAA,wBAavBJ,iBAhDoCA","file":"../../../scripts/mvc/history/hdca-li-edit.js","sourcesContent":["import HDCA_LI from \"mvc/history/hdca-li\";\nimport DC_VIEW_EDIT from \"mvc/collection/collection-view-edit\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = HDCA_LI.HDCAListItemView;\n/** @class Editing view for HistoryDatasetCollectionAssociation.\n */\nvar HDCAListItemEdit = _super.extend(\n    /** @lends HDCAListItemEdit.prototype */ {\n        /** logger used to record this.log messages, commonly set to console */\n        //logger              : console,\n\n        /** Override to return editable versions of the collection panels */\n        _getFoldoutPanelClass: function() {\n            switch (this.model.get(\"collection_type\")) {\n                case \"list\":\n                    return DC_VIEW_EDIT.ListCollectionViewEdit;\n                case \"paired\":\n                    return DC_VIEW_EDIT.PairCollectionViewEdit;\n                case \"list:paired\":\n                    return DC_VIEW_EDIT.ListOfPairsCollectionViewEdit;\n                case \"list:list\":\n                    return DC_VIEW_EDIT.ListOfListsCollectionViewEdit;\n            }\n            throw new TypeError(\n                \"Uknown collection_type: \" + this.model.get(\"collection_type\")\n            );\n        },\n\n        // ......................................................................... delete\n        /** In this override, add the delete button. */\n        _renderPrimaryActions: function() {\n            this.log(this + \"._renderPrimaryActions\");\n            // render the display, edit attr and delete icon-buttons\n            return _super.prototype._renderPrimaryActions\n                .call(this)\n                .concat([this._renderDeleteButton()]);\n        },\n\n        /** Render icon-button to delete this collection. */\n        _renderDeleteButton: function() {\n            var self = this,\n                deleted = this.model.get(\"deleted\");\n            return faIconButton({\n                title: deleted\n                    ? _l(\"Dataset collection is already deleted\")\n                    : _l(\"Delete\"),\n                classes: \"delete-btn\",\n                faIcon: \"fa-times\",\n                disabled: deleted,\n                onclick: function() {\n                    // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                    self.$el.find(\".icon-btn.delete-btn\").trigger(\"mouseout\");\n                    self.model[\"delete\"]();\n                }\n            });\n        },\n\n        // ......................................................................... misc\n        /** string rep */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"HDCAListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    HDCAListItemEdit: HDCAListItemEdit\n};\n"]}