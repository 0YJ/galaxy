{"version":3,"sources":["mvc/history/history-view-edit-current.js"],"names":["define","HISTORY_MODEL","HISTORY_VIEW_EDIT","BASE_MVC","_l","HistoryViewPrefs","SessionStorageModel","extend","defaults","tagsEditorShown","annotationEditorShown","scrollPosition","toString","JSON","stringify","this","toJSON","storageKey","_super","HistoryViewEdit","CurrentHistoryView","className","prototype","HDCAViewClass","foldoutStyle","emptyMsg","join","initialize","attributes","preferences","_","id","pick","keys","call","panelStack","currentContentId","_setUpListeners","panel","on","set","loadCurrentHistory","loadHistory","url","Galaxy","root","switchToHistory","historyId","user","isAnonymous","trigger","$","when","createNewHistory","setModel","model","render","log","checkForUpdates","_setUpModelListeners","listenTo","change:nice_size change:size","arguments","change:id","once","_setUpCollectionListeners","collection","newState","oldState","get","storage","includeHidden","removeItemView","_setUpBehaviors","$where","$el","_debouncedScrollCaptureHandler","debounce","is","scrollTop","$scrollContainer","off","_buildNewRender","$newRender","find","prependTo","_renderQuotaMessage","$whereTo","templates","quotaMsg","_renderTags","tagsEditor","toggle","hidden","_renderAnnotation","annotationEditor","_swapNewRender","delay","pos","scrollTo","_attachItems","_setCurrentContentById","addItemView","options","view","length","_collapseDrilldownPanel","_setUpItemViewListeners","expanded:drilldown","v","drilldown","_expandDrilldownPanel","collapsed:drilldown","setCurrentContent","removeClass","addClass","viewFromModelId","push","$controls","add","$list","hide","parentName","delegateEvents","appendTo","pop","show","events","clone","click .uploader-link","ev","upload","click .get-data-link","$toolMenu","parent","click","listenToGalaxy","galaxy","galaxy_main:load","data","pathToMatch","fullpath","hdaId","useToURLRegexMap","display","edit","report_error","rerun","show_params","regex","use","result","match","center-panel:load","connectToQuotaMeter","quotaMeter","showQuotaMessage","hideQuotaMessage","isOverQuota","clearMessages","$target","isUndefined","$messages","children","currentTarget","not","fadeOut","fxSpeed","remove","$msg","slideDown","slideUp","unhideHidden","self","confirm","contents","_filterAndUpdate","visible","deleted","purged","done","renderItems","jQuery","deleteHidden","quotaMsgTemplate","wrapTemplate"],"mappings":"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","file":"../../../scripts/mvc/history/history-view-edit-current.js","sourcesContent":["define([\n    \"mvc/history/history-model\",\n    \"mvc/history/history-view-edit\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( HISTORY_MODEL, HISTORY_VIEW_EDIT, BASE_MVC, _l ){\n\n'use strict';\n\n// ============================================================================\n/** session storage for history panel preferences (and to maintain state)\n */\nvar HistoryViewPrefs = BASE_MVC.SessionStorageModel.extend(\n/** @lends HistoryViewPrefs.prototype */{\n    defaults : {\n        /** should the tags editor be shown or hidden initially? */\n        tagsEditorShown : false,\n        /** should the annotation editor be shown or hidden initially? */\n        annotationEditorShown : false,\n        ///** what is the currently focused content (dataset or collection) in the current history?\n        // *      (the history panel will highlight and scroll to the focused content view)\n        // */\n        //focusedContentId : null\n        /** Current scroll position */\n        scrollPosition : 0\n    },\n    toString : function(){\n        return 'HistoryViewPrefs(' + JSON.stringify( this.toJSON() ) + ')';\n    }\n});\n\n/** key string to store panel prefs (made accessible on class so you can access sessionStorage directly) */\nHistoryViewPrefs.storageKey = function storageKey(){\n    return ( 'history-panel' );\n};\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = HISTORY_VIEW_EDIT.HistoryViewEdit;\n// used in root/index.mako\n/** @class View/Controller for the user's current history model as used in the history\n *      panel (current right hand panel) of the analysis page.\n *\n *  The only history panel that:\n *      will poll for updates.\n *      displays datasets in reverse hid order.\n */\nvar CurrentHistoryView = _super.extend(/** @lends CurrentHistoryView.prototype */{\n\n    className           : _super.prototype.className + ' current-history-panel',\n\n    /** override to use drilldown (and not foldout) for how collections are displayed */\n    HDCAViewClass       : _super.prototype.HDCAViewClass.extend({\n        foldoutStyle : 'drilldown'\n    }),\n\n    emptyMsg : [\n        _l( 'This history is empty' ), '. ',\n        _l( 'You can ' ),\n        '<a class=\"uploader-link\" href=\"javascript:void(0)\">',\n            _l( 'load your own data' ),\n        '</a>',\n        _l( ' or ' ),\n        '<a class=\"get-data-link\" href=\"javascript:void(0)\">',\n            _l( 'get data from an external source' ),\n        '</a>'\n    ].join(''),\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events */\n    initialize : function( attributes ){\n        attributes = attributes || {};\n\n        // ---- persistent preferences\n        /** maintain state / preferences over page loads */\n        this.preferences = new HistoryViewPrefs( _.extend({\n            id : HistoryViewPrefs.storageKey()\n        }, _.pick( attributes, _.keys( HistoryViewPrefs.prototype.defaults ) )));\n\n        _super.prototype.initialize.call( this, attributes );\n\n        /** sub-views that will overlay this panel (collections) */\n        this.panelStack = [];\n\n        /** id of currently focused content */\n        this.currentContentId = attributes.currentContentId || null;\n        //NOTE: purposely not sent to localstorage since panel recreation roughly lines up with a reset of this value\n    },\n\n    /** Override to cache the current scroll position with a listener */\n    _setUpListeners : function(){\n        _super.prototype._setUpListeners.call( this );\n\n        var panel = this;\n        // reset scroll position when there's a new history\n        this.on( 'new-model', function(){\n            panel.preferences.set( 'scrollPosition', 0 );\n        });\n    },\n\n    // ------------------------------------------------------------------------ loading history/item models\n    // TODO: next three more appropriate moved to the app level\n    /** (re-)loads the user's current history & contents w/ details */\n    loadCurrentHistory : function(){\n        return this.loadHistory( null, { url : Galaxy.root + 'history/current_history_json' });\n    },\n\n    /** loads a history & contents w/ details and makes them the current history */\n    switchToHistory : function( historyId, attributes ){\n        if( Galaxy.user.isAnonymous() ){\n            this.trigger( 'error', _l( 'You must be logged in to switch histories' ), _l( 'Anonymous user' ) );\n            return $.when();\n        }\n        return this.loadHistory( historyId, { url : Galaxy.root + 'history/set_as_current?id=' + historyId });\n    },\n\n    /** creates a new history on the server and sets it as the user's current history */\n    createNewHistory : function( attributes ){\n        if( Galaxy.user.isAnonymous() ){\n            this.trigger( 'error', _l( 'You must be logged in to create histories' ), _l( 'Anonymous user' )  );\n            return $.when();\n        }\n        return this.loadHistory( null, { url : Galaxy.root + 'history/create_new_current' });\n    },\n\n    /** release/free/shutdown old models and set up panel for new models */\n    setModel : function( model, attributes, render ){\n        _super.prototype.setModel.call( this, model, attributes, render );\n        if( this.model && this.model.id ){\n            this.log( 'checking for updates' );\n            this.model.checkForUpdates();\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ history/content event listening\n    /** listening for history events */\n    _setUpModelListeners : function(){\n        _super.prototype._setUpModelListeners.call( this );\n        // re-broadcast any model change events so that listeners don't have to re-bind to each history\n        return this.listenTo( this.model, {\n            'change:nice_size change:size' : function(){\n                this.trigger( 'history-size-change', this, this.model, arguments );\n            },\n            'change:id' : function(){\n                this.once( 'loading-done', function(){ this.model.checkForUpdates(); });\n            }\n        });\n    },\n\n    /** listening for collection events */\n    _setUpCollectionListeners : function(){\n        _super.prototype._setUpCollectionListeners.call( this );\n        // if a hidden item is created (gen. by a workflow), moves thru the updater to the ready state,\n        //  then: remove it from the collection if the panel is set to NOT show hidden datasets\n        this.listenTo( this.collection, 'state:ready', function( model, newState, oldState ){\n            if( ( !model.get( 'visible' ) )\n            &&  ( !this.collection.storage.includeHidden() ) ){\n                this.removeItemView( model );\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ panel rendering\n    /** override to add a handler to capture the scroll position when the parent scrolls */\n    _setUpBehaviors : function( $where ){\n        $where = $where || this.$el;\n        // console.log( '_setUpBehaviors', this.$scrollContainer( $where ).get(0), this.$list( $where ) );\n        // we need to call this in _setUpBehaviors which is called after render since the $el\n        // may not be attached to $el.parent and $scrollContainer() may not work\n        var panel = this;\n        _super.prototype._setUpBehaviors.call( panel, $where );\n\n        // cache the handler to remove and re-add so we don't pile up the handlers\n        if( !this._debouncedScrollCaptureHandler ){\n            this._debouncedScrollCaptureHandler = _.debounce( function scrollCapture(){\n                // cache the scroll position (only if visible)\n                if( panel.$el.is( ':visible' ) ){\n                    panel.preferences.set( 'scrollPosition', $( this ).scrollTop() );\n                }\n            }, 40 );\n        }\n\n        panel.$scrollContainer( $where )\n            .off( 'scroll', this._debouncedScrollCaptureHandler )\n            .on( 'scroll', this._debouncedScrollCaptureHandler );\n        return panel;\n    },\n\n    /** In this override, handle null models and move the search input to the top */\n    _buildNewRender : function(){\n        if( !this.model ){ return $(); }\n        var $newRender = _super.prototype._buildNewRender.call( this );\n        $newRender.find( '.search' ).prependTo( $newRender.find( '> .controls' ) );\n        this._renderQuotaMessage( $newRender );\n        return $newRender;\n    },\n\n    /** render the message displayed when a user is over quota and can't run jobs */\n    _renderQuotaMessage : function( $whereTo ){\n        $whereTo = $whereTo || this.$el;\n        return $( this.templates.quotaMsg( {}, this ) ).prependTo( $whereTo.find( '.messages' ) );\n    },\n\n    /** In this override, get and set current panel preferences when editor is used */\n    _renderTags : function( $where ){\n        var panel = this;\n        // render tags and show/hide based on preferences\n        _super.prototype._renderTags.call( panel, $where );\n        if( panel.preferences.get( 'tagsEditorShown' ) ){\n            panel.tagsEditor.toggle( true );\n        }\n        // store preference when shown or hidden\n        panel.listenTo( panel.tagsEditor, 'hiddenUntilActivated:shown hiddenUntilActivated:hidden',\n            function( tagsEditor ){\n                panel.preferences.set( 'tagsEditorShown', tagsEditor.hidden );\n            }\n        );\n    },\n\n    /** In this override, get and set current panel preferences when editor is used */\n    _renderAnnotation : function( $where ){\n        var panel = this;\n        // render annotation and show/hide based on preferences\n        _super.prototype._renderAnnotation.call( panel, $where );\n        if( panel.preferences.get( 'annotationEditorShown' ) ){\n            panel.annotationEditor.toggle( true );\n        }\n        // store preference when shown or hidden\n        panel.listenTo( panel.annotationEditor, 'hiddenUntilActivated:shown hiddenUntilActivated:hidden',\n            function( annotationEditor ){\n                panel.preferences.set( 'annotationEditorShown', annotationEditor.hidden );\n            }\n        );\n    },\n\n    /** Override to scroll to cached position (in prefs) after swapping */\n    _swapNewRender : function( $newRender ){\n        _super.prototype._swapNewRender.call( this, $newRender );\n        var panel = this;\n        _.delay( function(){\n            var pos = panel.preferences.get( 'scrollPosition' );\n            if( pos ){\n                panel.scrollTo( pos, 0 );\n            }\n        }, 10 );\n        //TODO: is this enough of a delay on larger histories?\n\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** Override to add the current-content highlight class to currentContentId's view */\n    _attachItems : function( $whereTo ){\n        _super.prototype._attachItems.call( this, $whereTo );\n        var panel = this;\n        if( panel.currentContentId ){\n            panel._setCurrentContentById( panel.currentContentId );\n        }\n        return this;\n    },\n\n    /** Override to remove any drill down panels */\n    addItemView : function( model, collection, options ){\n        var view = _super.prototype.addItemView.call( this, model, collection, options );\n        if( !view ){ return view; }\n        if( this.panelStack.length ){ return this._collapseDrilldownPanel(); }\n        return view;\n    },\n\n    // ------------------------------------------------------------------------ collection sub-views\n    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n    _setUpItemViewListeners : function( view ){\n        var panel = this;\n        _super.prototype._setUpItemViewListeners.call( panel, view );\n        // use pub-sub to: handle drilldown expansion and collapse\n        return panel.listenTo( view, {\n            'expanded:drilldown' : function( v, drilldown ){\n                this._expandDrilldownPanel( drilldown );\n            },\n            'collapsed:drilldown' : function( v, drilldown ){\n                this._collapseDrilldownPanel( drilldown );\n            },\n        });\n    },\n\n    /** display 'current content': add a visible highlight and store the id of a content item */\n    setCurrentContent : function( view ){\n        this.$( '.history-content.current-content' ).removeClass( 'current-content' );\n        if( view ){\n            view.$el.addClass( 'current-content' );\n            this.currentContentId = view.model.id;\n        } else {\n            this.currentContentId = null;\n        }\n    },\n\n    /** find the view with the id and then call setCurrentContent on it */\n    _setCurrentContentById : function( id ){\n        var view = this.viewFromModelId( id ) || null;\n        this.setCurrentContent( view );\n    },\n\n    /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n    _expandDrilldownPanel : function( drilldown ){\n        this.panelStack.push( drilldown );\n        // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n        this.$controls().add( this.$list() ).hide();\n        drilldown.parentName = this.model.get( 'name' );\n        drilldown.delegateEvents().render().$el.appendTo( this.$el );\n    },\n\n    /** Handle drilldown close by freeing the panel and re-rendering this panel */\n    _collapseDrilldownPanel : function( drilldown ){\n        this.panelStack.pop();\n        //TODO: MEM: free the panel\n        this.$controls().add( this.$list() ).show();\n    },\n\n    // ........................................................................ panel events\n    /** event map */\n    events : _.extend( _.clone( _super.prototype.events ), {\n        // the two links in the empty message\n        'click .uploader-link' : function( ev ){ Galaxy.upload.show( ev ); },\n        'click .get-data-link' : function( ev ){\n            var $toolMenu = $( '.toolMenuContainer' );\n            $toolMenu.parent().scrollTop( 0 );\n            $toolMenu.find( 'span:contains(\"Get Data\")' ).click();\n        }\n    }),\n\n    // ........................................................................ external objects/MVC\n    listenToGalaxy : function( galaxy ){\n        this.listenTo( galaxy, {\n            // when the galaxy_main iframe is loaded with a new page,\n            // compare the url to the following list and if there's a match\n            // pull the id from url and indicate in the history view that\n            // the dataset with that id is the 'current'ly active dataset\n            'galaxy_main:load': function( data ){\n                var pathToMatch = data.fullpath;\n                var hdaId = null;\n                var useToURLRegexMap = {\n                    'display'       : /datasets\\/([a-f0-9]+)\\/display/,\n                    'edit'          : /datasets\\/([a-f0-9]+)\\/edit/,\n                    'report_error'  : /dataset\\/errors\\?id=([a-f0-9]+)/,\n                    'rerun'         : /tool_runner\\/rerun\\?id=([a-f0-9]+)/,\n                    'show_params'   : /datasets\\/([a-f0-9]+)\\/show_params/,\n                    // no great way to do this here? (leave it in the dataset event handlers above?)\n                    // 'visualization' : 'visualization',\n                };\n                _.find( useToURLRegexMap, function( regex, use ){\n                    // grab the more specific match result (1), save, and use it as the find flag\n                    hdaId = _.result( pathToMatch.match( regex ), 1 );\n                    return hdaId;\n                });\n                // need to type mangle to go from web route to history contents\n                this._setCurrentContentById( hdaId? ( 'dataset-' + hdaId ) : null );\n            },\n            // when the center panel is given a new view, clear the current indicator\n            'center-panel:load': function( view ){\n                this._setCurrentContentById();\n            }\n        });\n    },\n\n    //TODO: remove quota meter from panel and remove this\n    /** add listeners to an external quota meter (mvc/user/user-quotameter.js) */\n    connectToQuotaMeter : function( quotaMeter ){\n        if( !quotaMeter ){\n            return this;\n        }\n        // show/hide the 'over quota message' in the history when the meter tells it to\n        this.listenTo( quotaMeter, 'quota:over',  this.showQuotaMessage );\n        this.listenTo( quotaMeter, 'quota:under', this.hideQuotaMessage );\n\n        // having to add this to handle re-render of hview while overquota (the above do not fire)\n        this.on( 'rendered rendered:initial', function(){\n            if( quotaMeter && quotaMeter.isOverQuota() ){\n                this.showQuotaMessage();\n            }\n        });\n        return this;\n    },\n\n    /** Override to preserve the quota message */\n    clearMessages : function( ev ){\n        var $target = !_.isUndefined( ev )?\n            $( ev.currentTarget )\n            :this.$messages().children( '[class$=\"message\"]' );\n        $target = $target.not( '.quota-message' );\n        $target.fadeOut( this.fxSpeed, function(){\n            $( this ).remove();\n        });\n        return this;\n    },\n\n    /** Show the over quota message (which happens to be in the history panel).\n     */\n    showQuotaMessage : function(){\n        var $msg = this.$( '.quota-message' );\n        if( $msg.is( ':hidden' ) ){ $msg.slideDown( this.fxSpeed ); }\n    },\n\n    /** Hide the over quota message (which happens to be in the history panel).\n     */\n    hideQuotaMessage : function(){\n        var $msg = this.$( '.quota-message' );\n        if( !$msg.is( ':hidden' ) ){ $msg.slideUp( this.fxSpeed ); }\n    },\n\n    // ........................................................................ options menu\n    //TODO: remove to batch\n    /** unhide any hidden datasets */\n    unhideHidden : function() {\n        var self = this;\n        if( confirm( _l( 'Really unhide all hidden datasets?' ) ) ){\n            // get all hidden, regardless of deleted/purged\n            return self.model.contents._filterAndUpdate(\n                { visible: false, deleted: '', purged: '' },\n                { visible : true }\n            ).done( function(){\n                // TODO: would be better to render these as they're unhidden instead of all at once\n                if( !self.model.contents.includeHidden ){\n                    self.renderItems();\n                }\n            });\n        }\n        return jQuery.when();\n    },\n\n    /** delete any hidden datasets */\n    deleteHidden : function() {\n        var self = this;\n        if( confirm( _l( 'Really delete all hidden datasets?' ) ) ){\n            return self.model.contents._filterAndUpdate(\n                // get all hidden, regardless of deleted/purged\n                { visible: false, deleted: '', purged: '' },\n                // both delete *and* unhide them\n                { deleted : true, visible: true }\n            );\n        }\n        return jQuery.when();\n    },\n\n    /** Return a string rep of the history */\n    toString : function(){\n        return 'CurrentHistoryView(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n//------------------------------------------------------------------------------ TEMPLATES\nCurrentHistoryView.prototype.templates = (function(){\n\n    var quotaMsgTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"quota-message errormessage\">',\n            _l( 'You are over your disk quota' ), '. ',\n            _l( 'Tool execution is on hold until your disk usage drops below your allocated quota' ), '.',\n        '</div>'\n    ], 'history' );\n    return _.extend( _.clone( _super.prototype.templates ), {\n        quotaMsg : quotaMsgTemplate\n    });\n\n}());\n\n\n//==============================================================================\n    return {\n        CurrentHistoryView        : CurrentHistoryView\n    };\n});\n"]}