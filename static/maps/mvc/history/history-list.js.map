{"version":3,"sources":["mvc/history/history-list.js"],"names":["_utils","require","_gridView","_historyModel","_copyDialog","View","Backbone","extend","title","initialize","options","self","this","setElement","$","model","Model","_utils2","default","get","url","Galaxy","root","action_id","param","params","success","response","_","each","operation","label","onclick","id","_showCopyDialog","set","render","attributes","grid","$el","history","_historyModel2","History","fetch","done","_copyDialog2","window","parent","currHistoryPanel","location","reload"],"mappings":"4IACA,IAAAA,OAAAC,QAAA,sDACAC,UAAAD,QAAA,mEACAE,cAAAF,QAAA,kFACAG,YAAAH,QAAA,4EACII,KAAOC,SAASD,KAAKE,QAJzBC,MAAA,YAMIC,WAAY,SAASC,GACjB,IAAIC,EAAOC,KACXA,KAAKC,WAAWC,EAAE,WAP1BF,KAAAG,MAAA,IAAAT,SAAAU,MASQC,QAAAC,QAAMC,KACFC,IACIC,OAAOC,KAVvB,WAYgBZ,EAAQa,UACR,IACAT,EAAEU,MAAMH,OAAOI,QAb/BC,QAAA,SAAAC,GAegBA,EAAA,aAA0B,EAC1BC,EAAEC,KAAKF,EAAA,WAAwB,SAASG,GACb,QAAnBA,EAAUC,QACVD,EAAUE,QAAU,SAASC,GACzBtB,EAAKuB,gBAAgBD,OAhBjCtB,EAAAI,MAAAoB,IAAAR,GACJhB,EAAOyB,aAUPV,OAAAA,WACIC,IAAAA,EAAAA,IAAAA,WAAAA,QAASf,KAAAG,MAAiBsB,YAC1BT,KAAAA,IAAAA,QAAOD,OAASW,EAAAC,MAGJ5B,gBAAAA,SAAAA,GACH,IAAA6B,EAAA,IAFDC,eAAAvB,QAAAwB,SAAAT,GAAAA,IAGHO,EACJG,QACDhC,KAAAA,WACAA,MACH,mEAkBAiC,KAAK,YAdN,EAAAC,aAAA3B,SAAWsB,MAAAI,KAAA,WAEfE,OAAAC,QA9BwBD,OAAAC,OAAA1B,QA+CRyB,OAAOC,OAAO1B,OAAO2B,kBAbvBF,OAAIC,OAAA1B,OAAA2B,iBAAuBf,qBAK7Ba,OAAAG,SAAAC,QAAA,2BAaH7C,KAAAA","file":"../../../scripts/mvc/history/history-list.js","sourcesContent":["/** This class renders the grid list. */\nimport Utils from \"utils/utils\";\nimport GridView from \"mvc/grid/grid-view\";\nimport HistoryModel from \"mvc/history/history-model\";\nimport historyCopyDialog from \"mvc/history/copy-dialog\";\nvar View = Backbone.View.extend({\n    title: \"Histories\",\n    initialize: function(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model();\n        Utils.get({\n            url:\n                Galaxy.root +\n                \"history/\" +\n                options.action_id +\n                \"?\" +\n                $.param(Galaxy.params),\n            success: function(response) {\n                response[\"dict_format\"] = true;\n                _.each(response[\"operations\"], function(operation) {\n                    if (operation.label == \"Copy\") {\n                        operation.onclick = function(id) {\n                            self._showCopyDialog(id);\n                        };\n                    }\n                });\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function() {\n        var grid = new GridView(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n    },\n\n    _showCopyDialog: function(id) {\n        var history = new HistoryModel.History({ id: id });\n        history\n            .fetch()\n            .fail(function() {\n                alert(\n                    \"History could not be fetched. Please contact an administrator\"\n                );\n            })\n            .done(function() {\n                historyCopyDialog(history, {}).done(function() {\n                    if (\n                        window.parent &&\n                        window.parent.Galaxy &&\n                        window.parent.Galaxy.currHistoryPanel\n                    ) {\n                        window.parent.Galaxy.currHistoryPanel.loadCurrentHistory();\n                    }\n                    window.location.reload(true);\n                });\n            });\n    }\n});\n\nexport default {\n    View: View\n};\n"]}