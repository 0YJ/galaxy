{"version":3,"sources":["mvc/history/history-list.js"],"names":["View","Backbone","extend","title","initialize","options","self","this","setElement","$","model","Model","_utils2","default","get","url","Galaxy","root","action_id","param","params","success","response","_","each","operation","label","onclick","id","_showCopyDialog","set","attributes","$el","history","_historyModel2","History","fetch","done","_copyDialog2","empty","append","window","parent","currHistoryPanel","loadCurrentHistory","alert","location","reload"],"mappings":"4SAKIA,EAAOC,SAASD,KAAKE,QACrBC,MAAO,YACPC,WAAY,SAASC,GACjB,IAAIC,EAAOC,KACXA,KAAKC,WAAWC,EAAE,WAClBF,KAAKG,MAAQ,IAAIT,SAASU,MAC1BC,EAAAC,QAAMC,KACFC,IAAQC,OAAOC,KAAf,WAA8BZ,EAAQa,UAAtC,IAAmDT,EAAEU,MACjDH,OAAOI,QAEXC,QAAS,SAASC,GACdA,EAAA,aAA0B,EAC1BC,EAAEC,KAAKF,EAAA,WAAwB,SAAAG,GACJ,QAAnBA,EAAUC,QACVD,EAAUE,QAAU,SAAAC,GAChBtB,EAAKuB,gBAAgBD,OAb7CxB,EAAYM,MAAAoB,IAAAR,GACJhB,EAAAA,aAOAe,OAAAA,WACIC,IAAAA,EAAAA,IAAAA,EAAAA,QAASf,KAAAG,MAATqB,YACAR,KAAAA,IAAAA,QAAEC,OAAKF,EAASU,MAGJ1B,gBAAAA,SAAAA,GACH,IAAA2B,EAAA,IAAAC,EAAArB,QAFDsB,SAAAP,GAAAA,IAGHK,EACJG,QACD9B,KAAAA,WACAA,MACH,mEAkBA+B,KAAK,YAdN,EAAAC,EAAAzB,SAAWoB,MAAAI,KAAA,WAENE,OAAQC,QA3BOC,OAAAC,OAAA1B,QA4CRyB,OAAOC,OAAO1B,OAAO2B,kBAbjCV,OAAcS,OAAA1B,OAAA2B,iBAAqBC,qBAI/BC,OACIC,SAAAC,QAAA,qBAaH/C,KAAAA","file":"../../../scripts/mvc/history/history-list.js","sourcesContent":["/** This class renders the grid list. */\nimport Utils from \"utils/utils\";\nimport GridView from \"mvc/grid/grid-view\";\nimport HistoryModel from \"mvc/history/history-model\";\nimport historyCopyDialog from \"mvc/history/copy-dialog\";\nvar View = Backbone.View.extend({\n    title: \"Histories\",\n    initialize: function(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model();\n        Utils.get({\n            url: `${Galaxy.root}history/${options.action_id}?${$.param(\n                Galaxy.params\n            )}`,\n            success: function(response) {\n                response[\"dict_format\"] = true;\n                _.each(response[\"operations\"], operation => {\n                    if (operation.label == \"Copy\") {\n                        operation.onclick = id => {\n                            self._showCopyDialog(id);\n                        };\n                    }\n                });\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function() {\n        var grid = new GridView(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n    },\n\n    _showCopyDialog: function(id) {\n        var history = new HistoryModel.History({ id: id });\n        history\n            .fetch()\n            .fail(() => {\n                alert(\n                    \"History could not be fetched. Please contact an administrator\"\n                );\n            })\n            .done(() => {\n                historyCopyDialog(history, {}).done(() => {\n                    if (\n                        window.parent &&\n                        window.parent.Galaxy &&\n                        window.parent.Galaxy.currHistoryPanel\n                    ) {\n                        window.parent.Galaxy.currHistoryPanel.loadCurrentHistory();\n                    }\n                    window.location.reload(true);\n                });\n            });\n    }\n});\n\nexport default {\n    View: View\n};\n"]}