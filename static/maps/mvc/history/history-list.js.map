{"version":3,"sources":["mvc/history/history-list.js"],"names":["define","Utils","GridView","HistoryModel","historyCopyDialog","View","Backbone","extend","title","self","this","initialize","$","Model","setElement","url","Galaxy","options","action_id","param","params","response","success","operation","label","onclick","id","_showCopyDialog","render","grid","model","attributes","$el","empty","append","history","fetch","fail","done","window","parent","currHistoryPanel","loadCurrentHistory"],"mappings":"aACAA,QAAU,cAAe,qBAAsB,4BAA6B,2BAA6B,SAAUC,EAAOC,EAAUC,EAAcC,GAE9G,OA4C5BC,KA9CEC,SAAeD,KAAAE,QAGjBC,MAAO,YADPH,WAAOC,SAAcC,GACrBC,IAAOC,EAAAC,KACPC,KAAAA,WAAYC,EAAA,WACRF,KAAID,MAAO,IAAXH,SAAAO,MACAZ,EAAKa,KACLC,IAAaC,OAAIV,KAASO,WAA1BI,EAAAC,UAAA,IAAAN,EAAAO,MAAAH,OAAAI,QACAnB,QAAU,SAAAoB,GACNN,EAAAA,aAAqCE,EACrCK,EAAAA,KAAUD,EAAA,WAAqB,SAAAE,GACC,QAAlBA,EAAAC,QACFH,EAAUI,QAAV,SAA0BC,GAAUH,EAAVI,gBAAsBD,OAEXjB,EAAAA,MAAAA,IAAAA,GAA4BA,EAAAmB,aAK5EA,OAAA,WAXK,IAAVC,EAAA,IAAA3B,EAAAQ,KAAAoB,MAAAC,YANwBrB,KAAAsB,IAAAC,QAAAC,OAAAL,EAAAG,MAsBxBL,gBAAW,SAAAD,GACX,IAAAS,EAAA,IAAiBD,EAAaF,SAA9BN,GAAAA,IAvBwBS,EAAAC,QA6BhBC,KAAM,WAHlBV,MAAiB,mEAELS,KAAR,WAEkBhC,EAAA+B,MAAAG,KAAA,WAEJC,OAAUC,QAAAD,OAAAC,OAAAxB,QAAAuB,OAAAC,OAAAxB,OAAAyB,kBACbrC,OAAmB+B,OAAnBnB,OAAuCyB,iBAAWC,qBAE1CH,OAAOC,SAAOxB,QAAOyB","file":"../../../scripts/mvc/history/history-list.js","sourcesContent":["/** This class renders the grid list. */\ndefine( [ 'utils/utils', 'mvc/grid/grid-view', 'mvc/history/history-model', 'mvc/history/copy-dialog' ], function( Utils, GridView, HistoryModel, historyCopyDialog ) {\n\n    var View = Backbone.View.extend({\n        title: \"Histories\",\n        initialize: function( options ) {\n            var self = this;\n            this.setElement( $( '<div/>' ) );\n            this.model = new Backbone.Model();\n            Utils.get({\n                url     : Galaxy.root + 'history/' + options.action_id + '?' +  $.param( Galaxy.params ),\n                success : function( response ) {\n                    response[ 'dict_format' ] = true;\n                    _.each( response[ 'operations' ], function( operation ) {\n                        if ( operation.label == 'Copy' ) {\n                            operation.onclick = function( id ) { self._showCopyDialog( id ) };\n                        }\n                    });\n                    self.model.set( response );\n                    self.render();\n                }\n            });\n        },\n\n        render: function() {\n            var grid = new GridView( this.model.attributes );\n            this.$el.empty().append( grid.$el );\n        },\n\n        _showCopyDialog: function( id ) {\n            var history = new HistoryModel.History( { id : id } );\n            history.fetch()\n                   .fail( function() {\n                       alert( 'History could not be fetched. Please contact an administrator' );\n                   })\n                   .done( function(){\n                       historyCopyDialog( history, {} ).done( function() {\n                           if( window.parent && window.parent.Galaxy && window.parent.Galaxy.currHistoryPanel ) {\n                               window.parent.Galaxy.currHistoryPanel.loadCurrentHistory();\n                           }\n                           window.location.reload( true );\n                       } );\n                   });\n        }\n    });\n\n    return {\n        View: View\n    }\n});\n"]}