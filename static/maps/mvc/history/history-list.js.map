{"version":3,"sources":["mvc/history/history-list.js"],"names":["View","Backbone","extend","title","initialize","options","self","this","setElement","$","model","Model","_utils2","default","get","url","Galaxy","root","action_id","param","params","success","response","_","each","operation","label","id","_showCopyDialog","set","render","onclick","fetch","fail","alert","done","$el","_copyDialog2","history","parent","currHistoryPanel","window","loadCurrentHistory"],"mappings":"iRAKIA,EAAOC,SAASD,KAAKE,QACrBC,MAAO,YACPC,WAAY,SAASC,GACjB,IAAIC,EAAOC,KACXA,KAAKC,WAAWC,EAAE,WAClBF,KAAKG,MAAQ,IAAIT,SAASU,MAC1BC,EAAAC,QAAMC,KACFC,IACIC,OAAOC,KACP,WACAZ,EAAQa,UACR,IACAT,EAAEU,MAAMH,OAAOI,QACnBC,QAAS,SAASC,GACdA,EAAA,aAA0B,EAC1BC,EAAEC,KAAKF,EAAA,WAAwB,SAASG,GApBxD,QAAAA,EAAAC,QAKoB1B,EAAKE,QAAO,SAAAyB,GAAArB,EAAAsB,gBAAAD,OAKxBrB,EAAKI,MAAQmB,IAAI5B,GACjBK,EAAAwB,aAUYA,OAAA,WACIL,IAAAA,EAAAA,IAAAA,EAAAA,QAAAA,KAAAA,MAAUM,YACNzB,KAAAA,IAAAA,QAAAA,OAAAA,EAAKsB,MAGhBA,gBAND,SAAAD,GAOArB,IAAAA,EAAAA,IAAKI,EAAAA,QAAUY,SAAfK,GAAAA,IACArB,EACH0B,QAlBLC,KAAA,WANwBC,MAuCZ,mEATZC,KAAKC,YA9BmB,EAAAC,EAAAxB,SAAAyB,MAAAH,KAAA,WAiC5BP,OAAiBW,QACTD,OAAcC,OAAAvB,QAEbgB,OACAC,OAAKjB,OAAWwB,kBAKXC,OAAAF,OAAWvB,OAAAwB,iBAAAE,qBAETD,OACIA,SAAOF,QACPE,qBA9CQzC,KAAhCA","file":"../../../scripts/mvc/history/history-list.js","sourcesContent":["/** This class renders the grid list. */\nimport Utils from \"utils/utils\";\nimport GridView from \"mvc/grid/grid-view\";\nimport HistoryModel from \"mvc/history/history-model\";\nimport historyCopyDialog from \"mvc/history/copy-dialog\";\nvar View = Backbone.View.extend({\n    title: \"Histories\",\n    initialize: function(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model();\n        Utils.get({\n            url:\n                Galaxy.root +\n                \"history/\" +\n                options.action_id +\n                \"?\" +\n                $.param(Galaxy.params),\n            success: function(response) {\n                response[\"dict_format\"] = true;\n                _.each(response[\"operations\"], function(operation) {\n                    if (operation.label == \"Copy\") {\n                        operation.onclick = function(id) {\n                            self._showCopyDialog(id);\n                        };\n                    }\n                });\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function() {\n        var grid = new GridView(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n    },\n\n    _showCopyDialog: function(id) {\n        var history = new HistoryModel.History({ id: id });\n        history\n            .fetch()\n            .fail(function() {\n                alert(\n                    \"History could not be fetched. Please contact an administrator\"\n                );\n            })\n            .done(function() {\n                historyCopyDialog(history, {}).done(function() {\n                    if (\n                        window.parent &&\n                        window.parent.Galaxy &&\n                        window.parent.Galaxy.currHistoryPanel\n                    ) {\n                        window.parent.Galaxy.currHistoryPanel.loadCurrentHistory();\n                    }\n                    window.location.reload(true);\n                });\n            });\n    }\n});\n\nexport default {\n    View: View\n};\n"]}