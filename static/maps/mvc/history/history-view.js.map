{"version":3,"sources":["mvc/history/history-view.js"],"names":["define","LIST_VIEW","HISTORY_MODEL","HISTORY_CONTENTS","HISTORY_PREFS","HDA_LI","HDCA_LI","USER","ERROR_MODAL","faIconButton","BASE_MVC","_l","_super","ModelListPanel","HistoryView","extend","_logNamespace","HDAViewClass","HDAListItemView","HDCAViewClass","HDCAListItemView","collectionClass","HistoryContents","modelCollectionKey","tagName","className","prototype","emptyMsg","noneFoundMsg","searchPlaceholder","FETCH_COLLECTION_COUNTS_DELAY","initialize","attributes","call","this","linkTarget","_createDefaultCollection","history","model","freeModel","clearUpdateTimeout","_setUpListeners","on","error","xhr","options","msg","details","errorHandler","loading-done","self","_","delay","contents","fetchCollectionCounts","views:ready view:attached view:removed","view","_renderSelectButton","view:attached","scrollTo","loadHistory","historyId","contentsOptions","silent","info","setModel","History","id","trigger","fetchWithContents","always","render","refreshContents","refresh","$","when","_setUpCollectionListeners","listenTo","collection","fetching-more","_toggleContentsLoadingIndicator","$emptyMessage","hide","fetching-more-done","_showLoadingIndicator","speed","callback","$indicator","$el","html","text","slideDown","isUndefined","fxSpeed","_hideLoadingIndicator","slideUp","remove","_buildNewRender","$newRender","$where","multiselectActions","length","views","hideSelectors","find","$existing","title","classes","faIcon","prependTo","_renderEmptyMessage","$whereTo","$emptyMsg","get","active","empty","append","show","searchFor","haveSearchDetails","$scrollContainer","$list","renderItems","models","_filterCollection","_renderPagination","_renderSomeItems","toggle","$paginationControls","shouldPaginate","templates","pagination","current","currentPage","last","getLastPage","tooltip","map","m","_createItemView","push","_renderItemView$el","_filterItem","includeHidden","hidden","includeDeleted","isDeletedOrPurged","_getItemViewClass","contentType","TypeError","_getItemViewOptions","expanded","storage","isExpanded","hasUser","ownedByCurrUser","_setUpItemViewListeners","panel","v","addExpanded","collapsed","removeExpanded","collapseAll","clearExpanded","getSelectedModels","events","clone","click .show-selectors-btn","click > .controls .prev","click > .controls .next","change > .controls .pages","click .messages [class$=message]","_clickPrevPage","ev","fetchPrevPage","_clickNextPage","fetchNextPage","_changePageSelect","page","currentTarget","val","fetchPage","toggleShowDeleted","undefined","setIncludeDeleted","fetchCurrentPage","renderAll","toggleShowHidden","store","setIncludeHidden","_firstSearch","log","searchItems","searchInput","progressivelyFetchDetails","progress","response","limit","offset","done","clearSearch","status","readyState","isString","message","errorModal","badGatewayErrorModal","ajaxErrorModal","clearMessages","$messages","children","fadeOut","scrollToHid","hid","scrollToItem","first","viewsWhereModel","ordinalIndicator","number","numStr","charAt","toString","mainTemplate","wrapTemplate","controlsTemplate","paginationTemplate","el","controls"],"mappings":"AAAAA,QACI,qBACA,4BACA,+BACA,kCACA,qBACA,sBACA,sBACA,qBACA,oBACA,eACA,qBACA,mBACD,SACCC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEJ,YAcA,IAAIC,GAASX,EAAUY,eACnBC,EAAcF,EAAOG,QAErBC,cAAgB,UAGhBC,aAAsBZ,EAAOa,gBAE7BC,cAAsBb,EAAQc,iBAE9BC,gBAAsBlB,EAAiBmB,gBAEvCC,mBAAsB,WAEtBC,QAAsB,MACtBC,UAAsBb,EAAOc,UAAUD,UAAY,iBAGnDE,SAAsBhB,EAAI,yBAE1BiB,aAAsBjB,EAAI,8BAE1BkB,kBAAsBlB,EAAI,mBAG1BmB,8BAAgC,IAMhCC,WAAa,SAAUC,GACnBpB,EAAOc,UAAUK,WAAWE,KAAMC,KAAMF,GAIxCE,KAAKC,WAAaH,EAAWG,YAAc,UAI/CC,yBAA2B,WAEvB,MAAO,IAAIF,MAAKb,oBAAsBgB,QAASH,KAAKI,SAIxDC,UAAY,WAKR,MAJA3B,GAAOc,UAAUa,UAAUN,KAAMC,MAC7BA,KAAKI,OACLJ,KAAKI,MAAME,qBAERN,MAOXO,gBAAkB,WACd7B,EAAOc,UAAUe,gBAAgBR,KAAMC,MACvCA,KAAKQ,IACDC,MAAQ,SAAUL,EAAOM,EAAKC,EAASC,EAAKC,GACxCb,KAAKc,aAAcV,EAAOM,EAAKC,EAASC,EAAKC,IAEjDE,eAAiB,WACb,GAAIC,GAAOhB,IAEXiB,GAAEC,MAAO,WACLF,EAAKZ,MAAMe,SAASC,yBACrBJ,EAAKpB,gCAEZyB,yCAA2C,SAAUC,GACjDtB,KAAKuB,uBAETC,gBAAkB,SAAUF,GACxBtB,KAAKyB,SAAS,OAQ1BC,YAAc,SAAUC,EAAWhB,EAASiB,GACxCA,EAAkBX,EAAEpC,OAAQ+C,IAAqBC,QAAQ,IACzD7B,KAAK8B,KAAM,eAAgBH,EAAWhB,EAASiB,EAC/C,IAAIZ,GAAOhB,IAKX,OAJAgB,GAAKe,SAAU,GAAI/D,GAAcgE,SAAUC,GAAKN,KAEhDC,EAAgBC,QAAS,EACzBb,EAAKkB,QAAS,WACPlB,EAAKZ,MACP+B,kBAAmBxB,EAASiB,GAC5BQ,OAAQ,WACLpB,EAAKqB,SACLrB,EAAKkB,QAAS,mBAK1BI,gBAAkB,SAAU3B,GACxB,MAAIX,MAAKI,MACEJ,KAAKI,MAAMmC,QAAS5B,GAGxB6B,EAAEC,QAIbC,0BAA4B,WAExB,MADAhE,GAAOc,UAAUkD,0BAA0B3C,KAAMC,MAC1CA,KAAK2C,SAAU3C,KAAK4C,YAEvBC,gBAAsB,WAClB7C,KAAK8C,iCAAiC,GACtC9C,KAAK+C,gBAAgBC,QAEzBC,qBAAsB,WAAYjD,KAAK8C,iCAAiC,OAMhFI,sBAAwB,SAAUtC,EAAKuC,EAAOC,GAC1C,GAAIC,GAAab,EAAG,mCACpBxC,MAAKsD,IAAIC,KAAMF,EAAWG,KAAM5C,GAAM6C,UAAYxC,EAAEyC,YAAaP,GAAiBnD,KAAK2D,QAAbR,KAI9ES,sBAAwB,SAAUT,GAE9BnD,KAAKwC,EAAG,sBAAuBqB,QAAU5C,EAAEyC,YAAaP,GAAmBnD,KAAK2D,QAAU,IAAzBR,EAAgC,WAC7FX,EAAGxC,MAAO8D,YAKlBC,gBAAkB,WACd,GAAIC,GAAatF,EAAOc,UAAUuE,gBAAgBhE,KAAMC,KAExD,OADAA,MAAKuB,oBAAqByC,GACnBA,GAIXzC,oBAAsB,SAAU0C,GAG5B,GAFAA,EAASA,GAAUjE,KAAKsD,KAEnBtD,KAAKkE,qBAAqBC,OAC3B,MAAO,KAGX,KAAKnE,KAAKoE,MAAMD,OAGZ,MAFAnE,MAAKqE,gBACLJ,EAAOK,KAAM,0CAA2CR,SACjD,IAGX,IAAIS,GAAYN,EAAOK,KAAM,yCAC7B,OAAIC,GAAUJ,OACHI,EAGJhG,GACHiG,MAAU/F,EAAI,mCACdgG,QAAU,qBACVC,OAAU,sBACXC,UAAWV,EAAOK,KAAM,wBAI/BM,oBAAsB,SAAUC,GAC5B,GAAI7D,GAAOhB,KACP8E,EAAY9D,EAAK+B,cAAe8B,EAGpC,OADY7D,GAAKZ,MAAM2E,IAAK,mBAAoBC,QAAU,EAE/CF,EAAUG,QAAQC,OAAQlE,EAAKvB,UAAW0F,OAE1CnE,EAAKoE,WAAapE,EAAKZ,MAAMe,SAASkE,sBAAwBrE,EAAKoD,MAAMD,OACzEW,EAAUG,QAAQC,OAAQlE,EAAKtB,cAAeyF,QAEzDL,EAAU9B,OACHR,MAIX8C,iBAAmB,SAAUrB,GAEzB,MAAOjE,MAAKuF,MAAOtB,IAIvBnB,gCAAkC,SAAUqC,GACnCA,EAGDnF,KAAKuF,QAAQhC,KAAM,6FAFnBvD,KAAKuF,QAAQjB,KAAM,+BAAgCR,UAQ3D0B,YAAa,SAAUX,GAEnBA,EAAWA,GAAY7E,KAAKsD,GAC5B,IAAItC,GAAOhB,KACPuF,EAAQvE,EAAKuE,MAAOV,EAGxBrC,GAAG,YAAasB,SAEhByB,EAAMN,QACNjE,EAAKoD,QAEL,IAAIqB,GAASzE,EAAK0E,mBAWlB,OAVID,GAAOtB,QACPnD,EAAK2E,kBAAmBd,GACxB7D,EAAKoD,MAAQpD,EAAK4E,iBAAkBH,EAAQF,IAG5CV,EAASP,KAAM,gCAAiCW,QAEpDjE,EAAK4D,oBAAqBC,GAAWgB,QAASJ,EAAOtB,QAErDnD,EAAKkB,QAAS,cAAelB,EAAKoD,OAC3BpD,EAAKoD,OAIhBuB,kBAAmB,SAAUd,GACzB,GAAIiB,GAAsBjB,EAASP,KAAM,+BACzC,OAAItE,MAAKoF,YAAcpF,KAAKI,MAAMe,SAAS4E,iBAA0BD,EAAoBb,SAEzFa,EAAoBvC,KAAMvD,KAAKgG,UAAUC,YAErCC,QAAUlG,KAAKI,MAAMe,SAASgF,YAAc,EAC5CC,KAAUpG,KAAKI,MAAMe,SAASkF,cAAgB,GAC/CrG,OACH8F,EAAoBxB,KAAM,gBAAiBgC,UACpCR,IAIXF,iBAAkB,SAAUH,EAAQF,GAChC,GAAIvE,GAAOhB,KACPoE,IAMJ,OALAmB,GAAML,OAAQO,EAAOc,IAAK,SAAUC,GAChC,GAAIlF,GAAON,EAAKyF,gBAAiBD,EAEjC,OADApC,GAAMsC,KAAMpF,GACLN,EAAK2F,mBAAoBrF,MAE7B8C,GAKXwC,YAAc,SAAUxG,GACpB,GAAIY,GAAOhB,KACPmB,EAAWH,EAAKZ,MAAMe,QAC1B,QAASA,EAAS0F,gBAAmBzG,EAAM0G,YAClC3F,EAAS4F,iBAAmB3G,EAAM4G,sBAClCtI,EAAOc,UAAUoH,YAAY7G,KAAMiB,EAAMZ,IAMtD6G,kBAAoB,SAAU7G,GAC1B,GAAI8G,GAAc9G,EAAM2E,IAAK,uBAC7B,QAAQmC,GACJ,IAAK,UACD,MAAOlH,MAAKjB,YAChB,KAAK,qBACD,MAAOiB,MAAKf,cAEpB,KAAM,IAAIkI,WAAW,iCAAmCD,IAI5DE,oBAAsB,SAAUhH,GAC5B,GAAIO,GAAUjC,EAAOc,UAAU4H,oBAAoBrH,KAAMC,KAAMI,EAC/D,OAAOa,GAAEpC,OAAQ8B,GACbV,WAAkBD,KAAKC,WACvBoH,SAAkBrH,KAAKI,MAAMe,SAASmG,QAAQC,WAAYnH,EAAM6B,IAChEuF,QAAkBxH,KAAKI,MAAMqH,qBAKrCC,wBAA0B,SAAUpG,GAChC,GAAIqG,GAAQ3H,IAIZ,OAHAtB,GAAOc,UAAUkI,wBAAwB3H,KAAM4H,EAAOrG,GAG/CqG,EAAMhF,SAAUrB,GACnB+F,SAAY,SAAUO,GAClBD,EAAMvH,MAAMe,SAASmG,QAAQO,YAAaD,EAAExH,QAEhD0H,UAAa,SAAUF,GACnBD,EAAMvH,MAAMe,SAASmG,QAAQS,eAAgBH,EAAExH,WAM3D4H,YAAc,WACVhI,KAAKI,MAAMe,SAASmG,QAAQW,gBAC5BvJ,EAAOc,UAAUwI,YAAYjI,KAAMC,OAKvCkI,kBAAoB,WAChB,GAAItF,GAAalE,EAAOc,UAAU0I,kBAAkBnI,KAAMC,KAE1D,OADA4C,GAAWjB,UAAY3B,KAAK4C,WAAWjB,UAChCiB,GAMXuF,OAASlH,EAAEpC,OAAQoC,EAAEmH,MAAO1J,EAAOc,UAAU2I,SACzCE,4BAAsC,kBACtCC,0BAAsC,iBACtCC,0BAAsC,iBACtCC,4BAAsC,oBAEtCC,mCAAsC,kBAG1CC,eAAiB,SAAUC,GACvB3I,KAAKI,MAAME,qBACXN,KAAKI,MAAMe,SAASyH,iBAGxBC,eAAiB,SAAUF,GACvB3I,KAAKI,MAAME,qBACXN,KAAKI,MAAMe,SAAS2H,iBAGxBC,kBAAoB,SAAUJ,GAC1B3I,KAAKI,MAAME,oBACX,IAAI0I,GAAOxG,EAAGmG,EAAGM,eAAgBC,KACjClJ,MAAKI,MAAMe,SAASgI,UAAWH,IAMnCI,kBAAoB,SAAUjE,EAAMxE,GAChCwE,MAAkBkE,KAATlE,EAAqB,GAAYnF,KAAKI,MAAMe,SAAS4F,cAC9D,IAAI/F,GAAOhB,KACPmB,EAAWH,EAAKZ,MAAMe,QAK1B,OAJAA,GAASmI,kBAAmBnE,EAAMxE,GAClCK,EAAKkB,QAAS,eAAgBiD,GAE9BhE,EAASoI,kBAAmBC,WAAW,IAChCrE,GAMXsE,iBAAmB,SAAUtE,EAAMuE,EAAO/I,GAEtCwE,MAAkBkE,KAATlE,EAAqB,GAAYnF,KAAKI,MAAMe,SAAS0F,aAC9D,IAAI7F,GAAOhB,KACPmB,EAAWH,EAAKZ,MAAMe,QAK1B,OAJAA,GAASwI,iBAAkBxE,EAAMxE,GACjCK,EAAKkB,QAAS,cAAeiD,GAE7BhE,EAASoI,kBAAmBC,WAAW,IAChCrE,GAIXyE,aAAe,SAAUxE,GACrB,GAAIpE,GAAOhB,IAKX,IAHAA,KAAK6J,IAAK,gBAAiBzE,GAGvBpE,EAAKZ,MAAMe,SAASkE,oBAEpB,WADArE,GAAK8I,YAAa1E,EAKtBpE,GAAKwB,EAVe,6BAUIuH,YAAa,kBAErC/I,EAAKoE,UAAYA,CACPpE,GAAKZ,MAAMe,SAAS6I,2BAA4BnI,QAAQ,IAC7DoI,SAAU,SAAUC,EAAUC,EAAOC,GAClCpJ,EAAKwE,cACLxE,EAAKkB,QAAS,0BAA2BiI,EAAOC,KAEnDhI,OAAQ,WACLpB,EAAKsC,IAAIgB,KAnBG,6BAmBmByF,YAAa,oBAE/CM,KAAM,WACHrJ,EAAK8I,YAAa1E,EAAW,YAKzCkF,YAAc,SAAUlF,GACpB,GAAIpE,GAAOhB,IACX,OAAKgB,GAAKoE,WAEVpE,EAAKoE,UAAY,GACjBpE,EAAKkB,QAAS,eAAgBlB,GAC9BA,EAAKwB,EAAG,6BAA8B0G,IAAK,IAG3ClI,EAAKZ,MAAMe,SAASoI,kBAAmB1H,QAAQ,IAC1CwI,KAAM,WACHrJ,EAAKwE,gBAENxE,GAXsBA,GAqBjCF,aAAe,SAAUV,EAAOM,EAAKC,GAGjC,IAAID,GAAsB,IAAfA,EAAI6J,QAAmC,IAAnB7J,EAAI8J,WAAnC,CASA,GAHAxK,KAAKS,MAAOL,EAAOM,EAAKC,GAGpBM,EAAEwJ,SAAUrK,IAAWa,EAAEwJ,SAAU/J,GAAO,CAC1C,GAAIgK,GAAUtK,EACVoE,EAAQ9D,CACZ,OAAOpC,GAAYqM,WAAYD,EAASlG,EAAO7D,GAInD,MAAID,IAAsB,MAAfA,EAAI6J,OACJjM,EAAYsM,uBAEhBtM,EAAYuM,eAAgBzK,EAAOM,EAAKC,KAInDmK,cAAgB,SAAUnC,GAOtB,OANe1H,EAAEyC,YAAaiF,GAEzB3I,KAAK+K,YAAYC,SAAU,sBAD5BxI,EAAGmG,EAAGM,gBAEFgC,QAASjL,KAAK2D,QAAS,WAC3BnB,EAAGxC,MAAO8D,WAEP9D,MAQXkL,YAAc,SAAUC,GACpB,MAAOnL,MAAKoL,aAAcnK,EAAEoK,MAAOrL,KAAKsL,iBAAkBH,IAAKA,OAKnEI,iBAAmB,SAAUC,GACzB,GAAIC,GAASD,EAAS,EACtB,QAAQC,EAAOC,OAAQD,EAAOtH,OAAS,IACnC,IAAK,IAAK,MAAOsH,GAAS,IAC1B,KAAK,IAAK,MAAOA,GAAS,IAC1B,KAAK,IAAK,MAAOA,GAAS,IAC1B,SAAU,MAAOA,GAAS,OAKlCE,SAAW,WACP,MAAO,gBAAoB3L,KAAW,MAAIA,KAAKI,MAAM2E,IAAK,QAAU,IAAU,MA8FlF,OAxFJnG,GAAYY,UAAUwG,UAAa,WAE/B,GAAI4F,GAAepN,EAASqN,cAExB,QACI,+BACA,+BACA,qDACJ,WAGAC,EAAmBtN,EAASqN,cAC5B,yBACI,sBACI,8CACJ,SACA,+BACA,2DAEA,8BAEA,yBACI,iDACI,gDACIpN,EAAI,4CACR,SACJ,sCACI,gDACIA,EAAI,iCACR,SACJ,qCACI,gDACIA,EAAI,gCACR,SACJ,UAEA,+BAEI,mEACI,8BACJ,SACJ,UACJ,SAGA,mCACA,yCAEA,uBACI,mCACJ,SAEA,6BACI,0BACI,6CACQ,sBAAuBA,EAAI,OAAS,YAC5C,+CACQ,sBAAuBA,EAAI,QAAU,YACjD,SACA,2CACA,SACJ,SACA,kDACJ,UACD,WAECsN,EAAqBvN,EAASqN,cAC9B,sFACA,sCACQ,UAAWpN,EAAI,4EAA8E,KACjG,6DACI,6EACI,+DACJ,YACJ,YACJ,YACA,4FACD,QAEH,OAAOwC,GAAEpC,OAAQoC,EAAEmH,MAAO1J,EAAOc,UAAUwG,YACvCgG,GAA0BJ,EAC1BK,SAA0BH,EAC1B7F,WAA0B8F,QAO1BnN,YAAaA","file":"../../../scripts/mvc/history/history-view.js","sourcesContent":["define([\n    \"mvc/list/list-view\",\n    \"mvc/history/history-model\",\n    \"mvc/history/history-contents\",\n    \"mvc/history/history-preferences\",\n    \"mvc/history/hda-li\",\n    \"mvc/history/hdca-li\",\n    \"mvc/user/user-model\",\n    \"mvc/ui/error-modal\",\n    \"ui/fa-icon-button\",\n    \"mvc/base-mvc\",\n    \"utils/localization\",\n    \"ui/search-input\"\n], function(\n    LIST_VIEW,\n    HISTORY_MODEL,\n    HISTORY_CONTENTS,\n    HISTORY_PREFS,\n    HDA_LI,\n    HDCA_LI,\n    USER,\n    ERROR_MODAL,\n    faIconButton,\n    BASE_MVC,\n    _l\n){\n'use strict';\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class  non-editable, read-only View/Controller for a history model.\n *  Allows:\n *      changing the loaded history\n *      displaying data, info, and download\n *      tracking history attrs: size, tags, annotations, name, etc.\n *  Does not allow:\n *      changing the name\n */\nvar _super = LIST_VIEW.ModelListPanel;\nvar HistoryView = _super.extend(\n/** @lends HistoryView.prototype */{\n    _logNamespace : 'history',\n\n    /** class to use for constructing the HDA views */\n    HDAViewClass        : HDA_LI.HDAListItemView,\n    /** class to use for constructing the HDCA views */\n    HDCAViewClass       : HDCA_LI.HDCAListItemView,\n    /** class to used for constructing collection of sub-view models */\n    collectionClass     : HISTORY_CONTENTS.HistoryContents,\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey  : 'contents',\n\n    tagName             : 'div',\n    className           : _super.prototype.className + ' history-panel',\n\n    /** string to display when the collection is empty */\n    emptyMsg            : _l( 'This history is empty' ),\n    /** displayed when no items match the search terms */\n    noneFoundMsg        : _l( 'No matching datasets found' ),\n    /** string used for search placeholder */\n    searchPlaceholder   : _l( 'search datasets' ),\n\n    /** @type {Number} ms to wait after history load to fetch/decorate hdcas with element_count */\n    FETCH_COLLECTION_COUNTS_DELAY : 2000,\n\n    // ......................................................................... SET UP\n    /** Set up the view, bind listeners.\n     *  @param {Object} attributes optional settings for the panel\n     */\n    initialize : function( attributes ){\n        _super.prototype.initialize.call( this, attributes );\n        // ---- instance vars\n        // control contents/behavior based on where (and in what context) the panel is being used\n        /** where should pages from links be displayed? (default to new tab/window) */\n        this.linkTarget = attributes.linkTarget || '_blank';\n    },\n\n    /** create and return a collection for when none is initially passed */\n    _createDefaultCollection : function(){\n        // override\n        return new this.collectionClass([], { history: this.model });\n    },\n\n    /** In this override, clear the update timer on the model */\n    freeModel : function(){\n        _super.prototype.freeModel.call( this );\n        if( this.model ){\n            this.model.clearUpdateTimeout();\n        }\n        return this;\n    },\n\n    /** create any event listeners for the panel\n     *  @fires: rendered:initial    on the first render\n     *  @fires: empty-history       when switching to a history with no contents or creating a new history\n     */\n    _setUpListeners : function(){\n        _super.prototype._setUpListeners.call( this );\n        this.on({\n            error : function( model, xhr, options, msg, details ){\n                this.errorHandler( model, xhr, options, msg, details );\n            },\n            'loading-done' : function(){\n                var self = this;\n                // after the initial load, decorate with more time consuming fields (like HDCA element_counts)\n                _.delay( function(){\n                    self.model.contents.fetchCollectionCounts();\n                }, self.FETCH_COLLECTION_COUNTS_DELAY );\n            },\n            'views:ready view:attached view:removed' : function( view ){\n                this._renderSelectButton();\n            },\n            'view:attached' : function( view ){\n                this.scrollTo(0);\n            },\n        });\n        // this.on( 'all', function(){ console.debug( arguments ); });\n    },\n\n    // ------------------------------------------------------------------------ loading history/hda models\n    /** load the history with the given id then it's contents, sending ajax options to both */\n    loadHistory : function( historyId, options, contentsOptions ){\n        contentsOptions = _.extend( contentsOptions || { silent: true });\n        this.info( 'loadHistory:', historyId, options, contentsOptions );\n        var self = this;\n        self.setModel( new HISTORY_MODEL.History({ id : historyId }) );\n\n        contentsOptions.silent = true;\n        self.trigger( 'loading' );\n        return self.model\n            .fetchWithContents( options, contentsOptions )\n            .always( function(){\n                self.render();\n                self.trigger( 'loading-done' );\n            });\n    },\n\n    /** convenience alias to the model. Updates the item list only (not the history) */\n    refreshContents : function( options ){\n        if( this.model ){\n            return this.model.refresh( options );\n        }\n        // may have callbacks - so return an empty promise\n        return $.when();\n    },\n\n    /** Override to reset web storage when the id changes (since it needs the id) */\n    _setUpCollectionListeners : function(){\n        _super.prototype._setUpCollectionListeners.call( this );\n        return this.listenTo( this.collection, {\n            // 'all' : function(){ console.log( this.collection + ':', arguments ); },\n            'fetching-more'     : function(){\n                this._toggleContentsLoadingIndicator( true );\n                this.$emptyMessage().hide();\n            },\n            'fetching-more-done': function(){ this._toggleContentsLoadingIndicator( false ); },\n        });\n    },\n\n    // ------------------------------------------------------------------------ panel rendering\n    /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n    _showLoadingIndicator : function( msg, speed, callback ){\n        var $indicator = $( '<div class=\"loading-indicator\"/>' );\n        this.$el.html( $indicator.text( msg ).slideDown( !_.isUndefined( speed )? speed : this.fxSpeed ) );\n    },\n\n    /** hide the loading indicator */\n    _hideLoadingIndicator : function( speed ){\n        // make speed a bit slower to compensate for slow rendering of up to 500 contents\n        this.$( '.loading-indicator' ).slideUp( !_.isUndefined( speed )? speed : ( this.fxSpeed + 200 ), function(){\n            $( this ).remove();\n        });\n    },\n\n    /** In this override, add a btn to toggle the selectors */\n    _buildNewRender : function(){\n        var $newRender = _super.prototype._buildNewRender.call( this );\n        this._renderSelectButton( $newRender );\n        return $newRender;\n    },\n\n    /** button for starting select mode */\n    _renderSelectButton : function( $where ){\n        $where = $where || this.$el;\n        // do not render selector option if no actions\n        if( !this.multiselectActions().length ){\n            return null;\n        }\n        // do not render (and remove even) if nothing to select\n        if( !this.views.length ){\n            this.hideSelectors();\n            $where.find( '.controls .actions .show-selectors-btn' ).remove();\n            return null;\n        }\n        // don't bother rendering if there's one already\n        var $existing = $where.find( '.controls .actions .show-selectors-btn' );\n        if( $existing.length ){\n            return $existing;\n        }\n\n        return faIconButton({\n            title   : _l( 'Operations on multiple datasets' ),\n            classes : 'show-selectors-btn',\n            faIcon  : 'fa-check-square-o'\n        }).prependTo( $where.find( '.controls .actions' ) );\n    },\n\n    /** override to avoid showing intial empty message using contents_active */\n    _renderEmptyMessage : function( $whereTo ){\n        var self = this;\n        var $emptyMsg = self.$emptyMessage( $whereTo );\n\n        var empty = self.model.get( 'contents_active' ).active <= 0;\n        if( empty ){\n            return $emptyMsg.empty().append( self.emptyMsg ).show();\n\n        } else if( self.searchFor && self.model.contents.haveSearchDetails() && !self.views.length ){\n            return $emptyMsg.empty().append( self.noneFoundMsg ).show();\n        }\n        $emptyMsg.hide();\n        return $();\n    },\n\n    /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n    $scrollContainer : function( $where ){\n        // override or set via attributes.$scrollContainer\n        return this.$list( $where );\n    },\n\n    // ------------------------------------------------------------------------ subviews\n    _toggleContentsLoadingIndicator : function( show ){\n        if( !show ){\n            this.$list().find( '.contents-loading-indicator' ).remove();\n        } else {\n            this.$list().html( '<div class=\"contents-loading-indicator\">'\n                + '<span class=\"fa fa-2x fa-spinner fa-spin\"/></div>' );\n        }\n    },\n\n    /** override to render pagination also */\n    renderItems: function( $whereTo ){\n        // console.log( this + '.renderItems-----------------', new Date() );\n        $whereTo = $whereTo || this.$el;\n        var self = this;\n        var $list = self.$list( $whereTo );\n\n        // TODO: bootstrap hack to remove orphaned tooltips\n        $( '.tooltip' ).remove();\n\n        $list.empty();\n        self.views = [];\n\n        var models = self._filterCollection();\n        if( models.length ){\n            self._renderPagination( $whereTo );\n            self.views = self._renderSomeItems( models, $list );\n        } else {\n            // TODO: consolidate with _renderPagination above by (???) passing in models/length?\n            $whereTo.find( '> .controls .list-pagination' ).empty();\n        }\n        self._renderEmptyMessage( $whereTo ).toggle( !models.length );\n\n        self.trigger( 'views:ready', self.views );\n        return self.views;\n    },\n\n    /** render pagination controls if not searching and contents says we're paginating */\n    _renderPagination: function( $whereTo ){\n        var $paginationControls = $whereTo.find( '> .controls .list-pagination' );\n        if( this.searchFor || !this.model.contents.shouldPaginate() ) return $paginationControls.empty();\n\n        $paginationControls.html( this.templates.pagination({\n            // pagination is 1-based for the user\n            current : this.model.contents.currentPage + 1,\n            last    : this.model.contents.getLastPage() + 1,\n        }, this ));\n        $paginationControls.find( 'select.pages' ).tooltip();\n        return $paginationControls;\n    },\n\n    /** render a subset of the entire collection (client-side pagination) */\n    _renderSomeItems: function( models, $list ){\n        var self = this;\n        var views = [];\n        $list.append( models.map( function( m ){\n            var view = self._createItemView( m );\n            views.push( view );\n            return self._renderItemView$el( view );\n        }));\n        return views;\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** in this override, check if the contents would also display based on includeDeleted/hidden */\n    _filterItem : function( model ){\n        var self = this;\n        var contents = self.model.contents;\n        return ( contents.includeHidden  || !model.hidden() )\n            && ( contents.includeDeleted || !model.isDeletedOrPurged() )\n            && ( _super.prototype._filterItem.call( self, model ) );\n    },\n\n    /** In this override, since history contents are mixed,\n     *      get the appropo view class based on history_content_type\n     */\n    _getItemViewClass : function( model ){\n        var contentType = model.get( \"history_content_type\" );\n        switch( contentType ){\n            case 'dataset':\n                return this.HDAViewClass;\n            case 'dataset_collection':\n                return this.HDCAViewClass;\n        }\n        throw new TypeError( 'Unknown history_content_type: ' + contentType );\n    },\n\n    /** in this override, add a linktarget, and expand if id is in web storage */\n    _getItemViewOptions : function( model ){\n        var options = _super.prototype._getItemViewOptions.call( this, model );\n        return _.extend( options, {\n            linkTarget      : this.linkTarget,\n            expanded        : this.model.contents.storage.isExpanded( model.id ),\n            hasUser         : this.model.ownedByCurrUser()\n        });\n    },\n\n    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n    _setUpItemViewListeners : function( view ){\n        var panel = this;\n        _super.prototype._setUpItemViewListeners.call( panel, view );\n        //TODO: send from content view: this.model.collection.storage.addExpanded\n        // maintain a list of items whose bodies are expanded\n        return panel.listenTo( view, {\n            'expanded': function( v ){\n                panel.model.contents.storage.addExpanded( v.model );\n            },\n            'collapsed': function( v ){\n                panel.model.contents.storage.removeExpanded( v.model );\n            }\n        });\n    },\n\n    /** override to remove expandedIds from webstorage */\n    collapseAll : function(){\n        this.model.contents.storage.clearExpanded();\n        _super.prototype.collapseAll.call( this );\n    },\n\n    // ------------------------------------------------------------------------ selection\n    /** Override to correctly set the historyId of the new collection */\n    getSelectedModels : function(){\n        var collection = _super.prototype.getSelectedModels.call( this );\n        collection.historyId = this.collection.historyId;\n        return collection;\n    },\n\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events : _.extend( _.clone( _super.prototype.events ), {\n        'click .show-selectors-btn'         : 'toggleSelectors',\n        'click > .controls .prev'           : '_clickPrevPage',\n        'click > .controls .next'           : '_clickNextPage',\n        'change > .controls .pages'         : '_changePageSelect',\n        // allow (error) messages to be clicked away\n        'click .messages [class$=message]'  : 'clearMessages',\n    }),\n\n    _clickPrevPage : function( ev ){\n        this.model.clearUpdateTimeout();\n        this.model.contents.fetchPrevPage();\n    },\n\n    _clickNextPage : function( ev ){\n        this.model.clearUpdateTimeout();\n        this.model.contents.fetchNextPage();\n    },\n\n    _changePageSelect : function( ev ){\n        this.model.clearUpdateTimeout();\n        var page = $( ev.currentTarget ).val();\n        this.model.contents.fetchPage( page );\n    },\n\n    /** Toggle and store the deleted visibility and re-render items\n     * @returns {Boolean} new setting\n     */\n    toggleShowDeleted : function( show, options ){\n        show = ( show !== undefined )?( show ):( !this.model.contents.includeDeleted );\n        var self = this;\n        var contents = self.model.contents;\n        contents.setIncludeDeleted( show, options );\n        self.trigger( 'show-deleted', show );\n\n        contents.fetchCurrentPage({ renderAll: true });\n        return show;\n    },\n\n    /** Toggle and store whether to render explicity hidden contents\n     * @returns {Boolean} new setting\n     */\n    toggleShowHidden : function( show, store, options ){\n        // console.log( 'toggleShowHidden', show, store );\n        show = ( show !== undefined )?( show ):( !this.model.contents.includeHidden );\n        var self = this;\n        var contents = self.model.contents;\n        contents.setIncludeHidden( show, options );\n        self.trigger( 'show-hidden', show );\n\n        contents.fetchCurrentPage({ renderAll: true });\n        return show;\n    },\n\n    /** On the first search, if there are no details - load them, then search */\n    _firstSearch : function( searchFor ){\n        var self = this;\n        var inputSelector = '> .controls .search-input';\n        this.log( 'onFirstSearch', searchFor );\n\n        // if the contents already have enough details to search, search and return now\n        if( self.model.contents.haveSearchDetails() ){\n            self.searchItems( searchFor );\n            return;\n        }\n\n        // otherwise, load the details progressively here\n        self.$( inputSelector ).searchInput( 'toggle-loading' );\n        // set this now so that only results will show during progress\n        self.searchFor = searchFor;\n        var xhr = self.model.contents.progressivelyFetchDetails({ silent: true })\n            .progress( function( response, limit, offset ){\n                self.renderItems();\n                self.trigger( 'search:loading-progress', limit, offset );\n            })\n            .always( function(){\n                self.$el.find( inputSelector ).searchInput( 'toggle-loading' );\n            })\n            .done( function(){\n                self.searchItems( searchFor, 'force' );\n           });\n    },\n\n    /** clear the search filters and show all views that are normally shown */\n    clearSearch : function( searchFor ){\n        var self = this;\n        if( !self.searchFor ) return self;\n        //self.log( 'onSearchClear', self );\n        self.searchFor = '';\n        self.trigger( 'search:clear', self );\n        self.$( '> .controls .search-query' ).val( '' );\n        // NOTE: silent + render prevents collection update event with merge only\n        // - which causes an empty page due to event handler above\n        self.model.contents.fetchCurrentPage({ silent: true })\n            .done( function(){\n                self.renderItems();\n            });\n        return self;\n    },\n\n    // ........................................................................ error handling\n    /** Event handler for errors (from the panel, the history, or the history's contents)\n     *  Alternately use two strings for model and xhr to use custom message and title (respectively)\n     *  @param {Model or View} model    the (Backbone) source of the error\n     *  @param {XMLHTTPRequest} xhr     any ajax obj. assoc. with the error\n     *  @param {Object} options         the options map commonly used with bbone ajax\n     */\n    errorHandler : function( model, xhr, options ){\n        //TODO: to mixin or base model\n        // interrupted ajax or no connection\n        if( xhr && xhr.status === 0 && xhr.readyState === 0 ){\n            // return ERROR_MODAL.offlineErrorModal();\n            // fail silently\n            return;\n        }\n        // otherwise, leave something to report in the console\n        this.error( model, xhr, options );\n        // and feedback to a modal\n        // if sent two strings (and possibly details as 'options'), use those as message and title\n        if( _.isString( model ) && _.isString( xhr ) ){\n            var message = model;\n            var title = xhr;\n            return ERROR_MODAL.errorModal( message, title, options );\n        }\n        // bad gateway\n        // TODO: possibly to global handler\n        if( xhr && xhr.status === 502 ){\n            return ERROR_MODAL.badGatewayErrorModal();\n        }\n        return ERROR_MODAL.ajaxErrorModal( model, xhr, options );\n    },\n\n    /** Remove all messages from the panel. */\n    clearMessages : function( ev ){\n        var $target = !_.isUndefined( ev )?\n            $( ev.currentTarget )\n            :this.$messages().children( '[class$=\"message\"]' );\n        $target.fadeOut( this.fxSpeed, function(){\n            $( this ).remove();\n        });\n        return this;\n    },\n\n    // ........................................................................ scrolling\n    /** Scrolls the panel to show the content sub-view with the given hid.\n     *  @param {Integer} hid    the hid of item to scroll into view\n     *  @returns {HistoryView} the panel\n     */\n    scrollToHid : function( hid ){\n        return this.scrollToItem( _.first( this.viewsWhereModel({ hid: hid }) ) );\n    },\n\n    // ........................................................................ misc\n    /** utility for adding -st, -nd, -rd, -th to numbers */\n    ordinalIndicator : function( number ){\n        var numStr = number + '';\n        switch( numStr.charAt( numStr.length - 1 )){\n            case '1': return numStr + 'st';\n            case '2': return numStr + 'nd';\n            case '3': return numStr + 'rd';\n            default : return numStr + 'th';\n        }\n    },\n\n    /** Return a string rep of the history */\n    toString : function(){\n        return 'HistoryView(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryView.prototype.templates = (function(){\n\n    var mainTemplate = BASE_MVC.wrapTemplate([\n        // temp container\n        '<div>',\n            '<div class=\"controls\"></div>',\n            '<ul class=\"list-items\"></ul>',\n            '<div class=\"empty-message infomessagesmall\"></div>',\n        '</div>'\n    ]);\n\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n            '<div class=\"title\">',\n                '<div class=\"name\"><%- history.name %></div>',\n            '</div>',\n            '<div class=\"subtitle\"></div>',\n            '<div class=\"history-size\"><%- history.nice_size %></div>',\n\n            '<div class=\"actions\"></div>',\n\n            '<div class=\"messages\">',\n                '<% if( history.deleted && history.purged ){ %>',\n                    '<div class=\"deleted-msg warningmessagesmall\">',\n                        _l( 'This history has been purged and deleted' ),\n                    '</div>',\n                '<% } else if( history.deleted ){ %>',\n                    '<div class=\"deleted-msg warningmessagesmall\">',\n                        _l( 'This history has been deleted' ),\n                    '</div>',\n                '<% } else if( history.purged ){ %>',\n                    '<div class=\"deleted-msg warningmessagesmall\">',\n                        _l( 'This history has been purged' ),\n                    '</div>',\n                '<% } %>',\n\n                '<% if( history.message ){ %>',\n                    // should already be localized\n                    '<div class=\"<%= history.message.level || \"info\" %>messagesmall\">',\n                        '<%= history.message.text %>',\n                    '</div>',\n                '<% } %>',\n            '</div>',\n\n            // add tags and annotations\n            '<div class=\"tags-display\"></div>',\n            '<div class=\"annotation-display\"></div>',\n\n            '<div class=\"search\">',\n                '<div class=\"search-input\"></div>',\n            '</div>',\n\n            '<div class=\"list-actions\">',\n                '<div class=\"btn-group\">',\n                    '<button class=\"select-all btn btn-default\"',\n                            'data-mode=\"select\">', _l( 'All' ), '</button>',\n                    '<button class=\"deselect-all btn btn-default\"',\n                            'data-mode=\"select\">', _l( 'None' ), '</button>',\n                '</div>',\n                '<div class=\"list-action-menu btn-group\">',\n                '</div>',\n            '</div>',\n            '<div class=\"list-pagination form-inline\"></div>',\n        '</div>'\n    ], 'history' );\n\n    var paginationTemplate = BASE_MVC.wrapTemplate([\n        '<button class=\"prev\" <%- pages.current === 1 ? \"disabled\" : \"\" %>>previous</button>',\n        '<select class=\"pages form-control\" ',\n                'title=\"', _l( 'Click to open and select a page. Begin typing a page number to select it' ), '\">',\n            '<% _.range( 1, pages.last + 1 ).forEach( function( i ){ %>',\n                '<option value=\"<%- i - 1 %>\" <%- i === pages.current ? \"selected\" : \"\" %>>',\n                    '<%- view.ordinalIndicator( i ) %> of <%- pages.last %> pages',\n                '</option>',\n            '<% }); %>',\n        '</select>',\n        '<button class=\"next\" <%- pages.current === pages.last ? \"disabled\" : \"\" %>>next</button>',\n    ], 'pages' );\n\n    return _.extend( _.clone( _super.prototype.templates ), {\n        el                      : mainTemplate,\n        controls                : controlsTemplate,\n        pagination              : paginationTemplate,\n    });\n}());\n\n\n//==============================================================================\n    return {\n        HistoryView: HistoryView\n    };\n});\n"]}