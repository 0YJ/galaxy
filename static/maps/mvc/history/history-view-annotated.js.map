{"version":3,"sources":["mvc/history/history-view-annotated.js"],"names":["_historyView","require","_hdaLi","_hdcaLi","_baseMvc","_localization","_super","_historyView2","default","HistoryView","AnnotatedHistoryView","extend","className","prototype","_buildNewRender","$newRender","call","this","renderHistoryAnnotation","annotation","model","get","find","text","renderItems","$whereTo","$controls","remove","_localization2","$","appendTo","views","$el","append","view","render","events","_","clone","click .contents-container","ev","_renderItemView$el","currentTarget","click","click .icon-btn","stopPropagation","$currTarget","length","attr","dropdown","_clickSectionLink","sectionNumber","parent","openSection","toString"],"mappings":"4IAAA,IAAAA,aAAAC,QAAA,+EACAC,OAAAD,QAAA,6DACAE,QAAAF,QAAA,gEACAG,SAAAH,QAAA,2DACAI,cAAAJ,QAAA,2EAHAK,OAAAC,cAAAC,QAAAC,YAkBIC,qBAAuBJ,OAAOK,QAE1BC,UAAWN,OAAOO,UAAUD,UAAY,2BAIxCE,gBAAiB,WAEb,IAAIC,EAAaT,OAAOO,UAAUC,gBAAgBE,KAAKC,MAEvD,OAvBZA,KAAAC,wBAAAH,GAuBmBA,GAlBnBG,wBAAA,SAAAH,GACA,IAAAI,EAAAF,KAAAG,MAAAC,IAAA,cAuBiBF,GAGLJ,EAAWO,KAAK,yBAAyBC,KAAKJ,IAlBtDK,YAAA,SAAAC,GACIb,EAAkBC,GAAUD,KAAAA,IAuBxBN,OAAOO,UAAUW,YAAYR,KAAKC,KAAMQ,GApB5C,IAAAC,EAAAD,EAAAH,KAAA,eACAR,EAAiBQ,KAAA,+BAAWK,SAEPrB,EAAAA,6CACZY,QACEH,EAAAA,yCAAPQ,MATqC,EAAAK,eAAApB,SAAA,YAYzCqB,EAAA,yCAAAN,MACAL,EAAAA,eAAAA,SAAAA,iBAGQY,SAAAJ,GAEJX,OAAWO,KAAKS,OAKhBN,mBAAWA,SAAiBO,GAC5B1B,OAAOO,EAAAA,qCAAPoB,QAuBIC,EAAKC,OAAO,GAAGH,IArBfN,EAAAA,kCAAJH,KACUD,EAAKF,MAAAC,IAAA,eAAf,OA4BJe,OAAQC,EAAE1B,OAAO0B,EAAEC,MAAMhC,OAAOO,UAAUuB,SAX1CG,4BAAA,SAAAC,GACAC,EAAAA,kBACWZ,EAAEW,EAAAE,eA9C4BpB,KAAA,yBA6D5BqB,SALTC,kBAAA,SAAAJ,GACAA,EAAAK,kBAF+C,IAAAC,EAAAjB,EAAAW,EAAAE,eAS/CI,EAAmBC,QACf,aAAGF,EAAHG,KAAA,gBAEAF,EAAAG,SAAA,aAQHC,kBAAA,SAAAV,GA3EoC,IAAAW,EAAAtB,EAAAW,EAAAE,eAgFhCU,SAFTF,SACQC,KAAAA,WAIJlC,KAAKoC,YAAYF,IAKrBG,SAAU,WACN,MAKH,yBA/FTrC,KAAAG,MAAAH,KAAAG,MAAAC,IAAA,QAAA,IA6FgB,wBAQZX,qBAAsBA","file":"../../../scripts/mvc/history/history-view-annotated.js","sourcesContent":["import HISTORY_VIEW from \"mvc/history/history-view\";\nimport HDA_LI from \"mvc/history/hda-li\";\nimport HDCA_LI from \"mvc/history/hdca-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = HISTORY_VIEW.HistoryView;\n// used in history/display.mako and history/embed.mako\n/** @class View/Controller for a tabular view of the history model.\n *\n *  As ReadOnlyHistoryView, but with:\n *      history annotation always shown\n *      datasets displayed in a table:\n *          datasets in left cells, dataset annotations in the right\n */\nvar AnnotatedHistoryView = _super.extend(\n    /** @lends AnnotatedHistoryView.prototype */ {\n        className: _super.prototype.className + \" annotated-history-panel\",\n\n        // ------------------------------------------------------------------------ panel rendering\n        /** In this override, add the history annotation */\n        _buildNewRender: function() {\n            //TODO: shouldn't this display regardless (on all non-current panels)?\n            var $newRender = _super.prototype._buildNewRender.call(this);\n            this.renderHistoryAnnotation($newRender);\n            return $newRender;\n        },\n\n        /** render the history's annotation as its own field */\n        renderHistoryAnnotation: function($newRender) {\n            var annotation = this.model.get(\"annotation\");\n            if (!annotation) {\n                return;\n            }\n            $newRender.find(\"> .controls .subtitle\").text(annotation);\n        },\n\n        /** override to add headers to indicate the dataset, annotation columns */\n        renderItems: function($whereTo) {\n            $whereTo = $whereTo || this.$el;\n            _super.prototype.renderItems.call(this, $whereTo);\n\n            var $controls = $whereTo.find(\"> .controls\");\n            $controls.find(\".contents-container.headers\").remove();\n\n            var $headers = $('<div class=\"contents-container headers\"/>')\n                .append([\n                    $('<div class=\"history-content header\"/>').text(\n                        _l(\"Dataset\")\n                    ),\n                    $('<div class=\"additional-info header\"/>').text(\n                        _l(\"Annotation\")\n                    )\n                ])\n                .appendTo($controls);\n\n            return self.views;\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** override to wrap each subview */\n        _renderItemView$el: function(view) {\n            return $('<div class=\"contents-container\"/>').append([\n                view.render(0).$el,\n                $('<div class=\"additional-info\"/>').text(\n                    view.model.get(\"annotation\") || \"\"\n                )\n            ]);\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        events: _.extend(_.clone(_super.prototype.events), {\n            // clicking on any part of the row will expand the items\n            \"click .contents-container\": function(ev) {\n                ev.stopPropagation();\n                $(ev.currentTarget)\n                    .find(\".list-item .title-bar\")\n                    .click();\n            },\n            // prevent propagation on icon btns so they won't bubble up to tr and toggleBodyVisibility\n            \"click .icon-btn\": function(ev) {\n                ev.stopPropagation();\n                // stopProp will prevent bootstrap from getting the click needed to open a dropdown\n                //  in the case of metafile download buttons - workaround here\n                var $currTarget = $(ev.currentTarget);\n                if (\n                    $currTarget.length &&\n                    $currTarget.attr(\"data-toggle\") === \"dropdown\"\n                ) {\n                    $currTarget.dropdown(\"toggle\");\n                }\n            }\n        }),\n\n        _clickSectionLink: function(ev) {\n            var sectionNumber = $(ev.currentTarget)\n                .parent()\n                .parent()\n                .data(\"section\");\n            this.openSection(sectionNumber);\n        },\n\n        // ........................................................................ misc\n        /** Return a string rep of the history */\n        toString: function() {\n            return (\n                \"AnnotatedHistoryView(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    AnnotatedHistoryView: AnnotatedHistoryView\n};\n"]}