{"version":3,"sources":["mvc/history/hda-li-edit.js"],"names":["_datasetLiEdit","require","_hdaLi","_baseMvc","_localization","_super","_datasetLiEdit2","default","DatasetListItemEdit","HDAListItemEdit","extend","className","prototype","_fetchModelDetails","view","this","model","inReadyState","hasDetails","fetch","silent","has","jQuery","when","data","join","events","_","clone","templates","warnings","_localization2","modelString","hidden","_hdaLi2","HDAListItemView","wrapTemplate","titleBar"],"mappings":"4IAAA,IAAAA,eAAAC,QAAA,sFACAC,OAAAD,QAAA,6DACAE,SAAAF,QAAA,2DACAG,cAAAH,QAAA,2EAHAI,OAAAC,gBAAAC,QAAAC,oBASIC,gBAAkBJ,OAAOK,QAErBC,UAAWN,OAAOO,UAAUD,UAAY,mBAKxCE,mBAAoB,WAChB,IAAIC,EAAOC,KAdvB,OAAAD,EAAAE,MAAAC,iBAAAH,EAAAE,MAAAE,aAgBuBJ,EAAKE,MAAMG,OAAQC,QAAQ,IAI1BN,EAAKE,MAAMK,IAAI,cAV/BC,OAAAC,OARRT,EAAAE,MAAAG,OACaC,QAAA,EACbI,MAEsBnB,MAAOK,aAAP,gBAAAe,KAAA,SAQVC,OAAIZ,EAAAA,OAAJa,EAAAC,MAAAvB,OAAAO,UAAAc,SACIZ,qBAAWG,SAAmBH,GAqB9B,OApBAC,KAAOD,MAAKE,UAoBL,KAdHI,SAAAA,WAEI,MAAA,oBADEL,KAAAC,MAAAD,KAAAC,MAAA,GAAA,cACF,OA0BxBP,gBAAgBG,UAAUiB,UAAa,WAlB/B,IAAAC,EAAAH,EAAAjB,UAAAL,OAAAO,UAAAiB,UAAAC,UACAJ,OAAUhB,UAAAA,QAASkB,cAEX,gCAEH,gDA9B+B,EAAAG,eAAAxB,SAAA,gCAmD5B,8DAlBR,EAAAwB,eAAAxB,SAAA,aACU,OACFyB,SACG,WArCnB,aA4CAvB,OAAAA,EAAAA,UAAgBG,OAAUiB,UAAaA,WAE/BI,SAAQC,QAAA3B,QAAA4B,gBAASC,UAETP,UAAAQ,SACAP,SAAAA,IALuB,oBAoB/BO,gBAAU5B","file":"../../../scripts/mvc/history/hda-li-edit.js","sourcesContent":["import DATASET_LI_EDIT from \"mvc/dataset/dataset-li-edit\";\nimport HDA_LI from \"mvc/history/hda-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DATASET_LI_EDIT.DatasetListItemEdit;\n/** @class Editing view for HistoryDatasetAssociation.\n */\nvar HDAListItemEdit = _super.extend(\n    /** @lends HDAListItemEdit.prototype */ {\n        className: _super.prototype.className + \" history-content\",\n\n        /** In this override, only get details if in the ready state, get rerunnable if in other states.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n\n                // special case the need for the rerunnable and creating_job attributes\n                // needed for rendering re-run button on queued, running datasets\n            } else if (!view.model.has(\"rerunnable\")) {\n                return view.model.fetch({\n                    silent: true,\n                    data: {\n                        // only fetch rerunnable and creating_job to keep overhead down\n                        keys: [\"rerunnable\", \"creating_job\"].join(\",\")\n                    }\n                });\n            }\n            return jQuery.when();\n        },\n\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .unhide-link\": function(ev) {\n                this.model.unhide();\n                return false;\n            }\n        }),\n\n        /** string rep */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"HDAListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nHDAListItemEdit.prototype.templates = (function() {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: BASE_MVC.wrapTemplate(\n            [\n                \"<% if( !dataset.visible ){ %>\",\n                // add a link to unhide a dataset\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                _l(\"This dataset has been hidden\"),\n                '<br /><a class=\"unhide-link\" a href=\"javascript:void(0);\">',\n                _l(\"Unhide it\"),\n                \"</a>\",\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"dataset\"\n        )\n    });\n\n    return _.extend({}, _super.prototype.templates, {\n        //NOTE: *steal* the HDAListItemView titleBar\n        titleBar: HDA_LI.HDAListItemView.prototype.templates.titleBar,\n        warnings: warnings\n    });\n})();\n\n//==============================================================================\nexport default {\n    HDAListItemEdit: HDAListItemEdit\n};\n"]}