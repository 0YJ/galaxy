{"version":3,"sources":["mvc/history/options-menu.js"],"names":["define","PopupMenu","historyCopyDialog","BASE_MVC","_l","Webhooks","buildMenu","isAnon","purgeAllowed","urlRoot","_","clone","menu","filter","menuOption","anon","purge","href","target","confirm","func","galaxy_main","location","header","html","Galaxy","currHistoryPanel","createNewHistory","model","done","loadCurrentHistory","window","id","$","post","collapseAll","root","user_action","async","callback","webhooks_menu","merge","add","url","each","webhooks","index","toJSON","webhook","config","title","create","$button","options","anonymous","undefined"],"mappings":"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","file":"../../../scripts/mvc/history/options-menu.js","sourcesContent":["define([\n    \"mvc/ui/popup-menu\",\n    \"mvc/history/copy-dialog\",\n    \"mvc/base-mvc\",\n    \"utils/localization\",\n    \"mvc/webhooks\"\n], function( PopupMenu, historyCopyDialog, BASE_MVC, _l, Webhooks ){\n\n'use strict';\n\n// ============================================================================\nvar menu = [\n    {\n        html    : _l( 'History Lists' ),\n        header  : true\n    },\n    {\n        html    : _l( 'Saved Histories' ),\n        href    : 'history/list',\n    },\n    {\n        html    : _l( 'Histories Shared with Me' ),\n        href    : 'history/list_shared'\n    },\n\n    {\n        html    : _l( 'Current History' ),\n        header  : true,\n        anon    : true\n    },\n    {\n        html    : _l( 'Create New' ),\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel ){\n                Galaxy.currHistoryPanel.createNewHistory();\n            }\n        },\n    },\n    {\n        html    : _l( 'Copy History' ),\n        func    : function() {\n            historyCopyDialog( Galaxy.currHistoryPanel.model )\n                .done( function(){\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n        },\n    },\n    {\n        html    : _l( 'Share or Publish' ),\n        href    : 'history/sharing',\n    },\n    {\n        html    : _l( 'Show Structure' ),\n        href    : 'history/display_structured',\n        anon    : true,\n    },\n    {\n        html    : _l( 'Extract Workflow' ),\n        href    : 'workflow/build_from_current_history',\n    },\n    {\n        html    : _l( 'Delete' ),\n        anon    : true,\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really delete the current history?' ) ) ){\n                galaxy_main.window.location.href = 'history/delete?id=' + Galaxy.currHistoryPanel.model.id;\n            }\n        },\n    },\n    {\n        html    : _l( 'Delete Permanently' ),\n        purge   : true,\n        anon    : true,\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel\n            &&  confirm( _l( 'Really delete the current history permanently? This cannot be undone.' ) ) ){\n                galaxy_main.window.location.href = 'history/delete?purge=True&id=' + Galaxy.currHistoryPanel.model.id;\n            }\n        },\n    },\n\n\n    {\n        html    : _l( 'Dataset Actions' ),\n        header  : true,\n        anon    : true\n    },\n    {\n        html    : _l( 'Copy Datasets' ),\n        href    : 'dataset/copy_datasets',\n    },\n    {\n        html    : _l( 'Dataset Security' ),\n        href    : 'root/history_set_default_permissions',\n    },\n    {\n        html    : _l( 'Resume Paused Jobs' ),\n        href    : 'history/resume_paused_jobs?current=True',\n        anon    : true,\n    },\n    {\n        html    : _l( 'Collapse Expanded Datasets' ),\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel ){\n                Galaxy.currHistoryPanel.collapseAll();\n            }\n        },\n    },\n    {\n        html    : _l( 'Unhide Hidden Datasets' ),\n        anon    : true,\n        func    : function() {\n            // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really unhide all hidden datasets?' ) ) ){\n                $.post(Galaxy.root + \"history/adjust_hidden\",\n                       { 'user_action' : 'unhide' },\n                       function(){Galaxy.currHistoryPanel.loadCurrentHistory();});\n            }\n        },\n    },\n    {\n        html    : _l( 'Delete Hidden Datasets' ),\n        anon    : true,\n        func    : function() {\n            // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really delete all hidden datasets?' ) ) ){\n                $.post(Galaxy.root + \"history/adjust_hidden\",\n                       { 'user_action' : 'delete' },\n                       function(){Galaxy.currHistoryPanel.loadCurrentHistory();});\n            }\n        },\n    },\n    {\n        html    : _l( 'Purge Deleted Datasets' ),\n        confirm : _l( 'Really delete all deleted datasets permanently? This cannot be undone.' ),\n        href    : 'history/purge_deleted_datasets',\n        purge   : true,\n        anon    : true,\n    },\n\n\n    {\n        html    : _l( 'Downloads' ),\n        header  : true\n    },\n    {\n        html    : _l( 'Export Tool Citations' ),\n        href    : 'history/citations',\n        anon    : true,\n    },\n    {\n        html    : _l( 'Export History to File' ),\n        href    : 'history/export_archive?preview=True',\n        anon    : true,\n    },\n\n    {\n        html    : _l( 'Other Actions' ),\n        header  : true\n    },\n    {\n        html    : _l( 'Import from File' ),\n        href    : 'history/import_archive',\n    }\n];\n\n// Webhooks\nWebhooks.add({\n    url: 'api/webhooks/history-menu/all',\n    async: false,   // (hypothetically) slows down the performance\n    callback: function(webhooks) {\n        var webhooks_menu = [];\n\n        $.each(webhooks.models, function(index, model) {\n            var webhook = model.toJSON();\n            if (webhook.activate) {\n                webhooks_menu.push({\n                    html : _l( webhook.config.title ),\n                    // func: function() {},\n                    anon : true\n                });\n            }\n        });\n\n        if (webhooks_menu.length > 0) {\n            webhooks_menu.unshift({\n                html   : _l( 'Webhooks' ),\n                header : true\n            });\n            $.merge(menu, webhooks_menu);\n        }\n    }\n});\n\n\nfunction buildMenu( isAnon, purgeAllowed, urlRoot ){\n    return _.clone( menu ).filter( function( menuOption ){\n        if( isAnon && !menuOption.anon ){\n            return false;\n        }\n        if( !purgeAllowed && menuOption.purge ){\n            return false;\n        }\n\n        //TODO:?? hard-coded galaxy_main\n        if( menuOption.href ){\n            menuOption.href = urlRoot + menuOption.href;\n            menuOption.target = 'galaxy_main';\n        }\n\n        if( menuOption.confirm ){\n            menuOption.func = function(){\n                if( confirm( menuOption.confirm ) ){\n                    galaxy_main.location = menuOption.href;\n                }\n            };\n        }\n        return true;\n    });\n}\n\nvar create = function( $button, options ){\n    options = options || {};\n    var isAnon = options.anonymous === undefined? true : options.anonymous,\n        purgeAllowed = options.purgeAllowed || false,\n        menu = buildMenu( isAnon, purgeAllowed, Galaxy.root );\n    //console.debug( 'menu:', menu );\n    return new PopupMenu( $button, menu );\n};\n\n\n// ============================================================================\n    return create;\n});\n"]}