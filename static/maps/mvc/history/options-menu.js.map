{"version":3,"sources":["mvc/history/options-menu.js"],"names":["define","PopupMenu","historyCopyDialog","BASE_MVC","_l","Webhooks","buildMenu","isAnon","purgeAllowed","urlRoot","_","clone","menu","filter","menuOption","anon","purge","href","target","confirm","func","galaxy_main","location","html","Galaxy","header","currHistoryPanel","createNewHistory","model","done","loadCurrentHistory","window","id","$","post","collapseAll","root","user_action","url","async","callback","webhooks_menu","add","each","webhooks","models","index","title","length","create","options","$button","undefined","anonymous"],"mappings":"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","file":"../../../scripts/mvc/history/options-menu.js","sourcesContent":["define([\n    \"mvc/ui/popup-menu\",\n    \"mvc/history/copy-dialog\",\n    \"mvc/base-mvc\",\n    \"utils/localization\",\n    \"mvc/webhooks\"\n], function( PopupMenu, historyCopyDialog, BASE_MVC, _l, Webhooks ){\n\n'use strict';\n\n// ============================================================================\nvar menu = [\n    {\n        html    : _l( 'History Lists' ),\n        header  : true\n    },\n    {\n        html    : _l( 'Saved Histories' ),\n        href    : 'histories/list',\n        target  : '_top'\n\n    },\n    {\n        html    : _l( 'Histories Shared with Me' ),\n        href    : 'histories/list_shared',\n        target  : '_top'\n    },\n    {\n        html    : _l( 'Current History' ),\n        header  : true,\n        anon    : true\n    },\n    {\n        html    : _l( 'Create New' ),\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel ){\n                Galaxy.currHistoryPanel.createNewHistory();\n            }\n        },\n    },\n    {\n        html    : _l( 'Copy History' ),\n        func    : function() {\n            historyCopyDialog( Galaxy.currHistoryPanel.model )\n                .done( function(){\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n        },\n    },\n    {\n        html    : _l( 'Share or Publish' ),\n        href    : 'history/sharing',\n    },\n    {\n        html    : _l( 'Show Structure' ),\n        href    : 'history/display_structured',\n        anon    : true,\n    },\n    {\n        html    : _l( 'Extract Workflow' ),\n        href    : 'workflow/build_from_current_history',\n    },\n    {\n        html    : _l( 'Delete' ),\n        anon    : true,\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really delete the current history?' ) ) ){\n                galaxy_main.window.location.href = 'history/delete?id=' + Galaxy.currHistoryPanel.model.id;\n            }\n        },\n    },\n    {\n        html    : _l( 'Delete Permanently' ),\n        purge   : true,\n        anon    : true,\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel\n            &&  confirm( _l( 'Really delete the current history permanently? This cannot be undone.' ) ) ){\n                galaxy_main.window.location.href = 'history/delete?purge=True&id=' + Galaxy.currHistoryPanel.model.id;\n            }\n        },\n    },\n\n\n    {\n        html    : _l( 'Dataset Actions' ),\n        header  : true,\n        anon    : true\n    },\n    {\n        html    : _l( 'Copy Datasets' ),\n        href    : 'dataset/copy_datasets',\n    },\n    {\n        html    : _l( 'Dataset Security' ),\n        href    : 'root/history_set_default_permissions',\n    },\n    {\n        html    : _l( 'Resume Paused Jobs' ),\n        href    : 'history/resume_paused_jobs?current=True',\n        anon    : true,\n    },\n    {\n        html    : _l( 'Collapse Expanded Datasets' ),\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel ){\n                Galaxy.currHistoryPanel.collapseAll();\n            }\n        },\n    },\n    {\n        html    : _l( 'Unhide Hidden Datasets' ),\n        anon    : true,\n        func    : function() {\n            // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really unhide all hidden datasets?' ) ) ){\n                $.post(Galaxy.root + \"history/adjust_hidden\",\n                       { 'user_action' : 'unhide' },\n                       function(){Galaxy.currHistoryPanel.loadCurrentHistory();});\n            }\n        },\n    },\n    {\n        html    : _l( 'Delete Hidden Datasets' ),\n        anon    : true,\n        func    : function() {\n            // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really delete all hidden datasets?' ) ) ){\n                $.post(Galaxy.root + \"history/adjust_hidden\",\n                       { 'user_action' : 'delete' },\n                       function(){Galaxy.currHistoryPanel.loadCurrentHistory();});\n            }\n        },\n    },\n    {\n        html    : _l( 'Purge Deleted Datasets' ),\n        confirm : _l( 'Really delete all deleted datasets permanently? This cannot be undone.' ),\n        href    : 'history/purge_deleted_datasets',\n        purge   : true,\n        anon    : true,\n    },\n\n\n    {\n        html    : _l( 'Downloads' ),\n        header  : true\n    },\n    {\n        html    : _l( 'Export Tool Citations' ),\n        href    : 'history/citations',\n        anon    : true,\n    },\n    {\n        html    : _l( 'Export History to File' ),\n        href    : 'history/export_archive?preview=True',\n        anon    : true,\n    },\n\n    {\n        html    : _l( 'Other Actions' ),\n        header  : true\n    },\n    {\n        html    : _l( 'Import from File' ),\n        href    : 'history/import_archive',\n    }\n];\n\n// Webhooks\nWebhooks.add({\n    url: 'api/webhooks/history-menu/all',\n    async: false,   // (hypothetically) slows down the performance\n    callback: function(webhooks) {\n        var webhooks_menu = [];\n\n        $.each(webhooks.models, function(index, model) {\n            var webhook = model.toJSON();\n            if (webhook.activate) {\n                webhooks_menu.push({\n                    html : _l( webhook.config.title ),\n                    // func: function() {},\n                    anon : true\n                });\n            }\n        });\n\n        if (webhooks_menu.length > 0) {\n            webhooks_menu.unshift({\n                html   : _l( 'Webhooks' ),\n                header : true\n            });\n            $.merge(menu, webhooks_menu);\n        }\n    }\n});\n\n\nfunction buildMenu( isAnon, purgeAllowed, urlRoot ){\n    return _.clone( menu ).filter( function( menuOption ){\n        if( isAnon && !menuOption.anon ){\n            return false;\n        }\n        if( !purgeAllowed && menuOption.purge ){\n            return false;\n        }\n\n        //TODO:?? hard-coded galaxy_main\n        if( menuOption.href ){\n            menuOption.href = urlRoot + menuOption.href;\n            menuOption.target = menuOption.target || 'galaxy_main';\n        }\n\n        if( menuOption.confirm ){\n            menuOption.func = function(){\n                if( confirm( menuOption.confirm ) ){\n                    galaxy_main.location = menuOption.href;\n                }\n            };\n        }\n        return true;\n    });\n}\n\nvar create = function( $button, options ){\n    options = options || {};\n    var isAnon = options.anonymous === undefined? true : options.anonymous,\n        purgeAllowed = options.purgeAllowed || false,\n        menu = buildMenu( isAnon, purgeAllowed, Galaxy.root );\n    //console.debug( 'menu:', menu );\n    return new PopupMenu( $button, menu );\n};\n\n\n// ============================================================================\n    return create;\n});\n"]}