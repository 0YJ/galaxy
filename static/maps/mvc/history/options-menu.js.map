{"version":3,"sources":["mvc/history/options-menu.js"],"names":["define","PopupMenu","historyCopyDialog","BASE_MVC","_l","Webhooks","buildMenu","isAnon","purgeAllowed","urlRoot","_","clone","menu","filter","menuOption","anon","purge","href","target","confirm","func","galaxy_main","location","html","header","Galaxy","currHistoryPanel","createNewHistory","model","done","loadCurrentHistory","window","id","collapseAll","$","post","root","user_action","add","url","async","callback","webhooks","webhooks_menu","each","models","index","webhook","toJSON","activate","push","config","title","length","unshift","merge","$button","options","undefined","anonymous"],"mappings":"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","file":"../../../scripts/mvc/history/options-menu.js","sourcesContent":["define([\n    \"mvc/ui/popup-menu\",\n    \"mvc/history/copy-dialog\",\n    \"mvc/base-mvc\",\n    \"utils/localization\",\n    \"mvc/webhooks\"\n], function( PopupMenu, historyCopyDialog, BASE_MVC, _l, Webhooks ){\n\n'use strict';\n\n// ============================================================================\nvar menu = [\n    {\n        html    : _l( 'History Lists' ),\n        header  : true\n    },\n    {\n        html    : _l( 'Saved Histories' ),\n        href    : 'history/list',\n    },\n    {\n        html    : _l( 'Histories Shared with Me' ),\n        href    : 'history/list_shared'\n    },\n\n    {\n        html    : _l( 'Current History' ),\n        header  : true,\n        anon    : true\n    },\n    {\n        html    : _l( 'Create New' ),\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel ){\n                Galaxy.currHistoryPanel.createNewHistory();\n            }\n        },\n    },\n    {\n        html    : _l( 'Copy History' ),\n        func    : function() {\n            historyCopyDialog( Galaxy.currHistoryPanel.model )\n                .done( function(){\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n        },\n    },\n    {\n        html    : _l( 'Share or Publish' ),\n        href    : 'history/sharing',\n    },\n    {\n        html    : _l( 'Show Structure' ),\n        href    : 'history/display_structured',\n        anon    : true,\n    },\n    {\n        html    : _l( 'Extract Workflow' ),\n        href    : 'workflow/build_from_current_history',\n    },\n    {\n        html    : _l( 'Delete' ),\n        anon    : true,\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really delete the current history?' ) ) ){\n                galaxy_main.window.location.href = 'history/delete?id=' + Galaxy.currHistoryPanel.model.id;\n            }\n        },\n    },\n    {\n        html    : _l( 'Delete Permanently' ),\n        purge   : true,\n        anon    : true,\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel\n            &&  confirm( _l( 'Really delete the current history permanently? This cannot be undone.' ) ) ){\n                galaxy_main.window.location.href = 'history/delete?purge=True&id=' + Galaxy.currHistoryPanel.model.id;\n            }\n        },\n    },\n\n\n    {\n        html    : _l( 'Dataset Actions' ),\n        header  : true,\n        anon    : true\n    },\n    {\n        html    : _l( 'Copy Datasets' ),\n        href    : 'dataset/copy_datasets',\n    },\n    {\n        html    : _l( 'Dataset Security' ),\n        href    : 'root/history_set_default_permissions',\n    },\n    {\n        html    : _l( 'Resume Paused Jobs' ),\n        href    : 'history/resume_paused_jobs?current=True',\n        anon    : true,\n    },\n    {\n        html    : _l( 'Collapse Expanded Datasets' ),\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel ){\n                Galaxy.currHistoryPanel.collapseAll();\n            }\n        },\n    },\n    {\n        html    : _l( 'Unhide Hidden Datasets' ),\n        anon    : true,\n        func    : function() {\n            // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really unhide all hidden datasets?' ) ) ){\n                $.post(Galaxy.root + \"history/adjust_hidden\",\n                       { 'user_action' : 'unhide' },\n                       function(){Galaxy.currHistoryPanel.loadCurrentHistory();});\n            }\n        },\n    },\n    {\n        html    : _l( 'Delete Hidden Datasets' ),\n        anon    : true,\n        func    : function() {\n            // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really delete all hidden datasets?' ) ) ){\n                $.post(Galaxy.root + \"history/adjust_hidden\",\n                       { 'user_action' : 'delete' },\n                       function(){Galaxy.currHistoryPanel.loadCurrentHistory();});\n            }\n        },\n    },\n    {\n        html    : _l( 'Purge Deleted Datasets' ),\n        confirm : _l( 'Really delete all deleted datasets permanently? This cannot be undone.' ),\n        href    : 'history/purge_deleted_datasets',\n        purge   : true,\n        anon    : true,\n    },\n\n\n    {\n        html    : _l( 'Downloads' ),\n        header  : true\n    },\n    {\n        html    : _l( 'Export Tool Citations' ),\n        href    : 'history/citations',\n        anon    : true,\n    },\n    {\n        html    : _l( 'Export History to File' ),\n        href    : 'history/export_archive?preview=True',\n        anon    : true,\n    },\n\n    {\n        html    : _l( 'Other Actions' ),\n        header  : true\n    },\n    {\n        html    : _l( 'Import from File' ),\n        href    : 'history/import_archive',\n    }\n];\n\n// Webhooks\nWebhooks.add({\n    url: 'api/webhooks/history-menu/all',\n    async: false,   // (hypothetically) slows down the performance\n    callback: function(webhooks) {\n        var webhooks_menu = [];\n\n        $.each(webhooks.models, function(index, model) {\n            var webhook = model.toJSON();\n            if (webhook.activate) {\n                webhooks_menu.push({\n                    html : _l( webhook.config.title ),\n                    // func: function() {},\n                    anon : true\n                });\n            }\n        });\n\n        if (webhooks_menu.length > 0) {\n            webhooks_menu.unshift({\n                html   : _l( 'Webhooks' ),\n                header : true\n            });\n            $.merge(menu, webhooks_menu);\n        }\n    }\n});\n\n\nfunction buildMenu( isAnon, purgeAllowed, urlRoot ){\n    return _.clone( menu ).filter( function( menuOption ){\n        if( isAnon && !menuOption.anon ){\n            return false;\n        }\n        if( !purgeAllowed && menuOption.purge ){\n            return false;\n        }\n\n        //TODO:?? hard-coded galaxy_main\n        if( menuOption.href ){\n            menuOption.href = urlRoot + menuOption.href;\n            menuOption.target = 'galaxy_main';\n        }\n\n        if( menuOption.confirm ){\n            menuOption.func = function(){\n                if( confirm( menuOption.confirm ) ){\n                    galaxy_main.location = menuOption.href;\n                }\n            };\n        }\n        return true;\n    });\n}\n\nvar create = function( $button, options ){\n    options = options || {};\n    var isAnon = options.anonymous === undefined? true : options.anonymous,\n        purgeAllowed = options.purgeAllowed || false,\n        menu = buildMenu( isAnon, purgeAllowed, Galaxy.root );\n    //console.debug( 'menu:', menu );\n    return new PopupMenu( $button, menu );\n};\n\n\n// ============================================================================\n    return create;\n});\n"]}