{"version":3,"sources":["mvc/history/hdca-li.js"],"names":["_states","require","_collectionLi","_collectionView","_baseMvc","_localization","_super","_collectionLi2","default","DCListItemView","HDCAListItemView","extend","className","prototype","_setUpListeners","call","this","listenTo","model","change:tags change:populated change:visible","options","render","_getFoldoutPanelClass","get","_collectionView2","ListCollectionView","PairCollectionView","ListOfPairsCollectionView","ListOfListsCollectionView","TypeError","_swapNewRender","$newRender","state","_states2","OK","RUNNING","$el","addClass","toString","templates","warnings","_","hidden","_baseMvc2","wrapTemplate","_localization2","modelString","titleBar","titleBarTemplate"],"mappings":"4IAAA,IAAAA,QAAAC,QAAA,+DACAC,cAAAD,QAAA,qFACAE,gBAAAF,QAAA,2FACAG,SAAAH,QAAA,2DACAI,cAAAJ,QAAA,2EAGIK,OAASC,eAAAC,QAAMC,eANnBC,iBAAAJ,OAAAK,QAWQC,UAAWN,OAAOO,UAAUD,UAAY,mBAGxCE,gBAAiB,WACbR,OAAOO,UAAUC,gBAAgBC,KAAKC,MACtCA,KAAKC,SAASD,KAAKE,OAd/BC,8CAAA,SAgBoBD,EACAE,GAhBpBJ,KAAAK,aAEAC,sBAAA,WACIhB,OAASU,KAAAE,MAAAK,IAAA,oBACb,IAAA,OAuBoB,OAAOC,iBAAAhB,QAAQiB,mBArB/Bf,IAAAA,SACA,OAAAc,iBAAAhB,QAAAkB,mBACepB,IAAAA,cAuBC,OAAOkB,iBAAAhB,QAAQmB,0BArB3B,IAAA,YACAb,OAAiBU,iBAAAhB,QAAAoB,0BAEb,MAAKX,IAASY,UACV,2BAAAb,KAAAE,MAAAK,IAA+C,qBA2BvDO,eAAgB,SAASC,GAlBzBzB,OAAAO,UAAAiB,eAAAf,KAAAC,KAAAe,GAEI,IAAQC,EAAKd,KAALA,MAAeK,IAAA,aAEfU,SAAAzB,QAAO0B,GADND,SAAAzB,QAAL2B,QAKI,OAFAnB,KAAAoB,IAAAC,SAAO,SAAAL,GAEPhB,KAAOoB,KAxBkBE,SAAA,WAiCrC,MAAA,qBAgBsBtB,KAAKE,MAAQF,KAAKE,MAAQ,GAAK,cAhBrD,OAQIR,iBAAS2B,UAASE,UAAWP,WAC7B,IAAAQ,EAAAC,EAAA9B,UAAAL,OAAAO,UAAA0B,UAAAC,UACAE,OAAOC,UAAAnC,QAAPoC,cAGJ,mCACA,gDACU,EAAAC,eAAArC,SAAA,mCACFsC,SACG,WAnDnB,gBA2DQJ,EAAQC,UAAAnC,QAASoC,cADrB,6CAmBQ,mCALR,sBAGQ,kDACA,mDAGA,SACA,+BAIA,0BAYDH,2FACHD,wCACAO,4DAFJ,UAvCJ,YAiCY,UAYZ,UAEIrC,cARA,OAAO+B,EAAE9B,UAAWL,OAAOO,UAAU0B,WACjCC,SAAUA,EACVO,SAAUC,IAxDuBhB,oBA8DrCtB,iBAAkBA","file":"../../../scripts/mvc/history/hdca-li.js","sourcesContent":["import STATES from \"mvc/dataset/states\";\nimport DC_LI from \"mvc/collection/collection-li\";\nimport DC_VIEW from \"mvc/collection/collection-view\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DC_LI.DCListItemView;\n/** @class Read only view for HistoryDatasetCollectionAssociation (a dataset collection inside a history).\n */\nvar HDCAListItemView = _super.extend(\n    /** @lends HDCAListItemView.prototype */ {\n        className: _super.prototype.className + \" history-content\",\n\n        /** event listeners */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            this.listenTo(this.model, {\n                \"change:tags change:populated change:visible\": function(\n                    model,\n                    options\n                ) {\n                    this.render();\n                }\n            });\n        },\n\n        /** Override to provide the proper collections panels as the foldout */\n        _getFoldoutPanelClass: function() {\n            switch (this.model.get(\"collection_type\")) {\n                case \"list\":\n                    return DC_VIEW.ListCollectionView;\n                case \"paired\":\n                    return DC_VIEW.PairCollectionView;\n                case \"list:paired\":\n                    return DC_VIEW.ListOfPairsCollectionView;\n                case \"list:list\":\n                    return DC_VIEW.ListOfListsCollectionView;\n            }\n            throw new TypeError(\n                \"Uknown collection_type: \" + this.model.get(\"collection_type\")\n            );\n        },\n\n        /** In this override, add the state as a class for use with state-based CSS */\n        _swapNewRender: function($newRender) {\n            _super.prototype._swapNewRender.call(this, $newRender);\n            //TODO: model currently has no state\n            var state = !this.model.get(\"populated\")\n                ? STATES.RUNNING\n                : STATES.OK;\n            //if( this.model.has( 'state' ) ){\n            this.$el.addClass(\"state-\" + state);\n            //}\n            return this.$el;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"HDCAListItemView(\" + modelString + \")\";\n        }\n    }\n);\n\n/** underscore templates */\nHDCAListItemView.prototype.templates = (function() {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: BASE_MVC.wrapTemplate(\n            [\n                // add a warning when hidden\n                \"<% if( !collection.visible ){ %>\",\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                _l(\"This collection has been hidden\"),\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"collection\"\n        )\n    });\n\n    // could steal this from hda-base (or use mixed content)\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            // adding the hid display to the title\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            //TODO: remove whitespace and use margin-right\n            '<span class=\"hid\"><%- collection.hid %></span> ',\n            '<span class=\"name\"><%- collection.name %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            '<span class=\"nametags\">',\n            \"<% _.each(_.sortBy(_.uniq(collection.tags), function(x) { return x }), function(tag){ %>\",\n            '<% if (tag.indexOf(\"name:\") == 0){ %>',\n            '<span class=\"label label-info\"><%- tag.slice(5) %></span>',\n            \"<% } %>\",\n            \"<% }); %>\",\n            \"</span>\",\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    HDCAListItemView: HDCAListItemView\n};\n"]}