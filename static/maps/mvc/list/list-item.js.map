{"version":3,"sources":["mvc/list/list-item.js"],"names":["define","BASE_MVC","_l","ExpandableView","Backbone","View","extend","LoggableMixin","_logNamespace","initialize","attributes","this","expanded","log","fxSpeed","undefined","render","speed","$newRender","_buildNewRender","_setUpBehaviors","_queueNewRender","$","templates","el","model","toJSON","$details","replaceWith","_renderDetails","show","view","_swapNewRender","trigger","queue","next","$el","fadeOut","fadeIn","empty","attr","_","isFunction","className","append","children","$where","find","tooltip","placement","$newDetails","details","toggleExpanded","expand","collapse","_fetchModelDetails","always","_expand","hasDetails","jQuery","when","fetch","slideDown","debug","slideUp","ListItemView","mixin","SelectableViewMixin","DraggableViewMixin","tagName","prototype","call","_setUpListeners","on","isSelectable","hide","_renderWarnings","_renderTitleBar","_renderPrimaryActions","_renderSubtitle","selectable","showSelector","draggable","draggableOn","$warnings","json","each","warnings","templateFn","titleBar","subtitle","events","click .title-bar","keydown .title-bar","click .selector","_clickTitleBar","event","stopPropagation","altKey","toggleSelect","_keyDownTitleBar","type","keyCode","toString","wrapTemplate","FoldoutListItemView","foldoutStyle","foldoutPanelClass","foldout","_createFoldoutPanel","_attachFoldout","FoldoutClass","_getFoldoutPanelClass","options","_getFoldoutPanelOptions","$whereTo","_expandByDrilldown","listenTo","detailsTemplate"],"mappings":"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","file":"../../../scripts/mvc/list/list-item.js","sourcesContent":["define([\n    'mvc/base-mvc',\n    'utils/localization'\n], function( BASE_MVC, _l ){\n\n'use strict';\n\nvar logNamespace = 'list';\n//==============================================================================\n/** A view which, when first rendered, shows only summary data/attributes, but\n *      can be expanded to show further details (and optionally fetch those\n *      details from the server).\n */\nvar ExpandableView = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n    _logNamespace : logNamespace,\n\n    //TODO: Although the reasoning behind them is different, this shares a lot with HiddenUntilActivated above: combine them\n    //PRECONDITION: model must have method hasDetails\n    //PRECONDITION: subclasses must have templates.el and templates.details\n\n    initialize : function( attributes ){\n        /** are the details of this view expanded/shown or not? */\n        this.expanded   = attributes.expanded || false;\n        this.log( '\\t expanded:', this.expanded );\n        this.fxSpeed = attributes.fxSpeed !== undefined? attributes.fxSpeed : this.fxSpeed;\n    },\n\n    // ........................................................................ render main\n    /** jq fx speed */\n    fxSpeed : 'fast',\n\n    /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n    render : function( speed ){\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors( $newRender );\n        this._queueNewRender( $newRender, speed );\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     *      If the view is already expanded, build the details as well.\n     */\n    _buildNewRender : function(){\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = $( this.templates.el( this.model.toJSON(), this ) );\n        if( this.expanded ){\n            this.$details( $newRender ).replaceWith( this._renderDetails().show() );\n        }\n        return $newRender;\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n    _queueNewRender : function( $newRender, speed ) {\n        speed = ( speed === undefined )?( this.fxSpeed ):( speed );\n        var view = this;\n\n        if( speed === 0 ){\n            view._swapNewRender( $newRender );\n            view.trigger( 'rendered', view );\n\n        } else {\n            $( view ).queue( 'fx', [\n                function( next ){\n                    view.$el.fadeOut( speed, next );\n                },\n                function( next ){\n                    view._swapNewRender( $newRender );\n                    next();\n                },\n                function( next ){\n                    view.$el.fadeIn( speed, next );\n                },\n                function( next ){\n                    view.trigger( 'rendered', view );\n                    next();\n                }\n            ]);\n        }\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender : function( $newRender ){\n        return this.$el.empty()\n            .attr( 'class', _.isFunction( this.className )? this.className(): this.className )\n            .append( $newRender.children() );\n    },\n\n    /** set up js behaviors, event handlers for elements within the given container\n     *  @param {jQuery} $container jq object that contains the elements to process (defaults to this.$el)\n     */\n    _setUpBehaviors : function( $where ){\n        $where = $where || this.$el;\n        // set up canned behavior on children (bootstrap, popupmenus, editable_text, etc.)\n        //make_popup_menus( $where );\n        $where.find( '[title]' ).tooltip({ placement : 'bottom' });\n    },\n\n    // ......................................................................... details\n    /** shortcut to details DOM (as jQ) */\n    $details : function( $where ){\n        $where = $where || this.$el;\n        return $where.find( '> .details' );\n    },\n\n    /** build the DOM for the details and set up behaviors on it */\n    _renderDetails : function(){\n        var $newDetails = $( this.templates.details( this.model.toJSON(), this ) );\n        this._setUpBehaviors( $newDetails );\n        return $newDetails;\n    },\n\n    // ......................................................................... expansion/details\n    /** Show or hide the details\n     *  @param {Boolean} expand if true, expand; if false, collapse\n     */\n    toggleExpanded : function( expand ){\n        expand = ( expand === undefined )?( !this.expanded ):( expand );\n        if( expand ){\n            this.expand();\n        } else {\n            this.collapse();\n        }\n        return this;\n    },\n\n    /** Render and show the full, detailed body of this view including extra data and controls.\n     *      note: if the model does not have detailed data, fetch that data before showing the body\n     *  @fires expanded when a body has been expanded\n     */\n    expand : function(){\n        var view = this;\n        return view._fetchModelDetails().always( function(){\n                view._expand();\n            });\n    },\n\n    /** Check for model details and, if none, fetch them.\n     *  @returns {jQuery.promise} the model.fetch.xhr if details are being fetched, an empty promise if not\n     */\n    _fetchModelDetails : function(){\n        if( !this.model.hasDetails() ){\n            return this.model.fetch();\n        }\n        return jQuery.when();\n    },\n\n    /** Inner fn called when expand (public) has fetched the details */\n    _expand : function(){\n        var view = this,\n            $newDetails = view._renderDetails();\n        view.$details().replaceWith( $newDetails );\n        // needs to be set after the above or the slide will not show\n        view.expanded = true;\n        view.$details().slideDown( view.fxSpeed, function(){\n            view.trigger( 'expanded', view );\n        });\n    },\n\n    /** Hide the body/details of an HDA.\n     *  @fires collapsed when a body has been collapsed\n     */\n    collapse : function(){\n        this.debug( this + '(ExpandableView).collapse' );\n        var view = this;\n        view.expanded = false;\n        this.$details().slideUp( view.fxSpeed, function(){\n            view.trigger( 'collapsed', view );\n        });\n    }\n\n});\n\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *      Inherits from Expandable, Selectable, Draggable.\n *  The DOM contains warnings, a title bar, and a series of primary action controls.\n *      Primary actions are meant to be easily accessible item functions (such as delete)\n *      that are rendered in the title bar.\n *\n *  Details are rendered when the user clicks the title bar or presses enter/space when\n *      the title bar is in focus.\n *\n *  Designed as a base class for history panel contents - but usable elsewhere (I hope).\n */\nvar ListItemView = ExpandableView.extend(\n        BASE_MVC.mixin( BASE_MVC.SelectableViewMixin, BASE_MVC.DraggableViewMixin, {\n\n    tagName     : 'div',\n    className   : 'list-item',\n\n    /** Set up the base class and all mixins */\n    initialize : function( attributes ){\n        ExpandableView.prototype.initialize.call( this, attributes );\n        BASE_MVC.SelectableViewMixin.initialize.call( this, attributes );\n        BASE_MVC.DraggableViewMixin.initialize.call( this, attributes );\n        this._setUpListeners();\n    },\n\n    /** event listeners */\n    _setUpListeners : function(){\n        // hide the primary actions in the title bar when selectable and narrow\n        this.on( 'selectable', function( isSelectable ){\n            if( isSelectable ){\n                this.$( '.primary-actions' ).hide();\n            } else {\n                this.$( '.primary-actions' ).show();\n            }\n        }, this );\n        return this;\n    },\n\n    // ........................................................................ rendering\n    /** In this override, call methods to build warnings, titlebar and primary actions */\n    _buildNewRender : function(){\n        var $newRender = ExpandableView.prototype._buildNewRender.call( this );\n        $newRender.children( '.warnings' ).replaceWith( this._renderWarnings() );\n        $newRender.children( '.title-bar' ).replaceWith( this._renderTitleBar() );\n        $newRender.children( '.primary-actions' ).append( this._renderPrimaryActions() );\n        $newRender.find( '> .title-bar .subtitle' ).replaceWith( this._renderSubtitle() );\n        return $newRender;\n    },\n\n    /** In this override, render the selector controls and set up dragging before the swap */\n    _swapNewRender : function( $newRender ){\n        ExpandableView.prototype._swapNewRender.call( this, $newRender );\n        if( this.selectable ){ this.showSelector( 0 ); }\n        if( this.draggable ){ this.draggableOn(); }\n        return this.$el;\n    },\n\n    /** Render any warnings the item may need to show (e.g. \"I'm deleted\") */\n    _renderWarnings : function(){\n        var view = this,\n            $warnings = $( '<div class=\"warnings\"></div>' ),\n            json = view.model.toJSON();\n        //TODO:! unordered (map)\n        _.each( view.templates.warnings, function( templateFn ){\n            $warnings.append( $( templateFn( json, view ) ) );\n        });\n        return $warnings;\n    },\n\n    /** Render the title bar (the main/exposed SUMMARY dom element) */\n    _renderTitleBar : function(){\n        return $( this.templates.titleBar( this.model.toJSON(), this ) );\n    },\n\n    /** Return an array of jQ objects containing common/easily-accessible item controls */\n    _renderPrimaryActions : function(){\n        // override this\n        return [];\n    },\n\n    /** Render the title bar (the main/exposed SUMMARY dom element) */\n    _renderSubtitle : function(){\n        return $( this.templates.subtitle( this.model.toJSON(), this ) );\n    },\n\n    // ......................................................................... events\n    /** event map */\n    events : {\n        // expand the body when the title is clicked or when in focus and space or enter is pressed\n        'click .title-bar'      : '_clickTitleBar',\n        'keydown .title-bar'    : '_keyDownTitleBar',\n        'click .selector'       : 'toggleSelect'\n    },\n\n    /** expand when the title bar is clicked */\n    _clickTitleBar : function( event ){\n        event.stopPropagation();\n        if( event.altKey ){\n            this.toggleSelect( event );\n            if( !this.selectable ){\n                this.showSelector();\n            }\n        } else {\n            this.toggleExpanded();\n        }\n    },\n\n    /** expand when the title bar is in focus and enter or space is pressed */\n    _keyDownTitleBar : function( event ){\n        // bail (with propagation) if keydown and not space or enter\n        var KEYCODE_SPACE = 32, KEYCODE_RETURN = 13;\n        if( event && ( event.type === 'keydown' )\n        &&( event.keyCode === KEYCODE_SPACE || event.keyCode === KEYCODE_RETURN ) ){\n            this.toggleExpanded();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'ListItemView(' + modelString + ')';\n    }\n}));\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListItemView.prototype.templates = (function(){\n\n    var elTemplato = BASE_MVC.wrapTemplate([\n        '<div class=\"list-element\">',\n            // errors, messages, etc.\n            '<div class=\"warnings\"></div>',\n\n            // multi-select checkbox\n            '<div class=\"selector\">',\n                '<span class=\"fa fa-2x fa-square-o\"></span>',\n            '</div>',\n            // space for title bar buttons - gen. floated to the right\n            '<div class=\"primary-actions\"></div>',\n            '<div class=\"title-bar\"></div>',\n\n            // expandable area for more details\n            '<div class=\"details\"></div>',\n        '</div>'\n    ]);\n\n    var warnings = {};\n\n    var titleBarTemplate = BASE_MVC.wrapTemplate([\n        // adding a tabindex here allows focusing the title bar and the use of keydown to expand the dataset display\n        '<div class=\"title-bar clear\" tabindex=\"0\">',\n            //TODO: prob. belongs in dataset-list-item\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n                '<span class=\"name\"><%- element.name %></span>',\n            '</div>',\n            '<div class=\"subtitle\"></div>',\n        '</div>'\n    ], 'element' );\n\n    var subtitleTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"subtitle\"></div>'\n    ]);\n\n    var detailsTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"details\"></div>'\n    ]);\n\n    return {\n        el          : elTemplato,\n        warnings    : warnings,\n        titleBar    : titleBarTemplate,\n        subtitle    : subtitleTemplate,\n        details     : detailsTemplate\n    };\n}());\n\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *  *AND* can display some sub-list of it's own when expanded (e.g. dataset collections).\n *  This list will 'foldout' when the item is expanded depending on this.foldoutStyle:\n *      If 'foldout': will expand vertically to show the nested list\n *      If 'drilldown': will overlay the parent list\n *\n *  Inherits from ListItemView.\n *\n *  _renderDetails does the work of creating this.details: a sub-view that shows the nested list\n */\nvar FoldoutListItemView = ListItemView.extend({\n\n    /** If 'foldout': show the sub-panel inside the expanded item\n     *  If 'drilldown': only fire events and handle by pub-sub\n     *      (allow the panel containing this item to attach it, hide itself, etc.)\n     */\n    foldoutStyle        : 'foldout',\n    /** Panel view class to instantiate for the sub-panel */\n    foldoutPanelClass   : null,\n\n    /** override to:\n     *      add attributes foldoutStyle and foldoutPanelClass for config poly\n     *      disrespect attributes.expanded if drilldown\n     */\n    initialize : function( attributes ){\n        if( this.foldoutStyle === 'drilldown' ){ this.expanded = false; }\n        this.foldoutStyle = attributes.foldoutStyle || this.foldoutStyle;\n        this.foldoutPanelClass = attributes.foldoutPanelClass || this.foldoutPanelClass;\n\n        ListItemView.prototype.initialize.call( this, attributes );\n        this.foldout = this._createFoldoutPanel();\n    },\n\n    /** in this override, attach the foldout panel when rendering details */\n    _renderDetails : function(){\n        if( this.foldoutStyle === 'drilldown' ){ return $(); }\n        var $newDetails = ListItemView.prototype._renderDetails.call( this );\n        return this._attachFoldout( this.foldout, $newDetails );\n    },\n\n    /** In this override, handle collection expansion. */\n    _createFoldoutPanel : function(){\n        var model = this.model;\n        var FoldoutClass = this._getFoldoutPanelClass( model ),\n            options = this._getFoldoutPanelOptions( model ),\n            foldout = new FoldoutClass( _.extend( options, {\n                model           : model\n            }));\n        return foldout;\n    },\n\n    /** Stub to return proper foldout panel class */\n    _getFoldoutPanelClass : function(){\n        // override\n        return this.foldoutPanelClass;\n    },\n\n    /** Stub to return proper foldout panel options */\n    _getFoldoutPanelOptions : function(){\n        return {\n            // propagate foldout style down\n            foldoutStyle : this.foldoutStyle,\n            fxSpeed      : this.fxSpeed\n        };\n    },\n\n    /** Render the foldout panel inside the view, hiding controls */\n    _attachFoldout : function( foldout, $whereTo ){\n        $whereTo = $whereTo || this.$( '> .details' );\n        this.foldout = foldout.render( 0 );\n        foldout.$( '> .controls' ).hide();\n        return $whereTo.append( foldout.$el );\n    },\n\n    /** In this override, branch on foldoutStyle to show expanded */\n    expand : function(){\n        var view = this;\n        return view._fetchModelDetails()\n            .always(function(){\n                if( view.foldoutStyle === 'foldout' ){\n                    view._expand();\n                } else if( view.foldoutStyle === 'drilldown' ){\n                    view._expandByDrilldown();\n                }\n            });\n    },\n\n    /** For drilldown, set up close handler and fire expanded:drilldown\n     *      containing views can listen to this and handle other things\n     *      (like hiding themselves) by listening for expanded/collapsed:drilldown\n     */\n    _expandByDrilldown : function(){\n        var view = this;\n        // attachment and rendering done by listener\n        view.listenTo( view.foldout, 'close', function(){\n            view.trigger( 'collapsed:drilldown', view, view.foldout );\n        });\n        view.trigger( 'expanded:drilldown', view, view.foldout );\n    }\n\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nFoldoutListItemView.prototype.templates = (function(){\n\n    var detailsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"details\">',\n            // override with more info (that goes above the panel)\n        '</div>'\n    ], 'collection' );\n\n    return _.extend( {}, ListItemView.prototype.templates, {\n        details : detailsTemplate\n    });\n}());\n\n\n//==============================================================================\n    return {\n        ExpandableView                  : ExpandableView,\n        ListItemView                    : ListItemView,\n        FoldoutListItemView             : FoldoutListItemView\n    };\n});\n"]}