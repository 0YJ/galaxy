{"version":3,"sources":["mvc/list/list-item.js"],"names":["define","BASE_MVC","_l","_logNamespace","logNamespace","extend","LoggableMixin","initialize","attributes","this","expanded","log","fxSpeed","undefined","render","$newRender","_setUpBehaviors","_queueNewRender","speed","_buildNewRender","templates","el","model","toJSON","$details","replaceWith","_renderDetails","show","view","_swapNewRender","trigger","$","queue","next","$el","fadeIn","$where","attr","_","isFunction","className","append","children","find","tooltip","placement","$newDetails","toggleExpanded","details","expand","collapse","_fetchModelDetails","always","_expand","slideDown","debug","slideUp","ListItemView","_setUpListeners","mixin","SelectableViewMixin","DraggableViewMixin","tagName","isSelectable","ExpandableView","prototype","call","hide","on","selectable","showSelector","_renderWarnings","_renderTitleBar","draggable","_renderPrimaryActions","draggableOn","_renderSubtitle","$warnings","json","warnings","templateFn","titleBar","subtitle","events","event","keydown .title-bar","click .selector","_clickTitleBar","stopPropagation","altKey","toggleSelect","KEYCODE_SPACE","_keyDownTitleBar","type","keyCode","toString","wrapTemplate","titleBarTemplate","foldoutStyle","FoldoutListItemView","_createFoldoutPanel","foldoutPanelClass","FoldoutClass","_getFoldoutPanelClass","_getFoldoutPanelOptions","foldout","_attachFoldout","options","$whereTo","_expandByDrilldown","listenTo","detailsTemplate"],"mappings":"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","file":"../../../scripts/mvc/list/list-item.js","sourcesContent":["define([\n    'mvc/base-mvc',\n    'utils/localization'\n], function( BASE_MVC, _l ){\n\n'use strict';\n\nvar logNamespace = 'list';\n//==============================================================================\n/** A view which, when first rendered, shows only summary data/attributes, but\n *      can be expanded to show further details (and optionally fetch those\n *      details from the server).\n */\nvar ExpandableView = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n    _logNamespace : logNamespace,\n\n    //TODO: Although the reasoning behind them is different, this shares a lot with HiddenUntilActivated above: combine them\n    //PRECONDITION: model must have method hasDetails\n    //PRECONDITION: subclasses must have templates.el and templates.details\n\n    initialize : function( attributes ){\n        /** are the details of this view expanded/shown or not? */\n        this.expanded   = attributes.expanded || false;\n        this.log( '\\t expanded:', this.expanded );\n        this.fxSpeed = attributes.fxSpeed !== undefined? attributes.fxSpeed : this.fxSpeed;\n    },\n\n    // ........................................................................ render main\n    /** jq fx speed */\n    fxSpeed : 'fast',\n\n    /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n    render : function( speed ){\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors( $newRender );\n        this._queueNewRender( $newRender, speed );\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     *      If the view is already expanded, build the details as well.\n     */\n    _buildNewRender : function(){\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = $( this.templates.el( this.model.toJSON(), this ) );\n        if( this.expanded ){\n            this.$details( $newRender ).replaceWith( this._renderDetails().show() );\n        }\n        return $newRender;\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n    _queueNewRender : function( $newRender, speed ) {\n        speed = ( speed === undefined )?( this.fxSpeed ):( speed );\n        var view = this;\n\n        if( speed === 0 ){\n            view._swapNewRender( $newRender );\n            view.trigger( 'rendered', view );\n\n        } else {\n            $( view ).queue( 'fx', [\n                function( next ){\n                    view.$el.fadeOut( speed, next );\n                },\n                function( next ){\n                    view._swapNewRender( $newRender );\n                    next();\n                },\n                function( next ){\n                    view.$el.fadeIn( speed, next );\n                },\n                function( next ){\n                    view.trigger( 'rendered', view );\n                    next();\n                }\n            ]);\n        }\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender : function( $newRender ){\n        return this.$el.empty()\n            .attr( 'class', _.isFunction( this.className )? this.className(): this.className )\n            .append( $newRender.children() );\n    },\n\n    /** set up js behaviors, event handlers for elements within the given container\n     *  @param {jQuery} $container jq object that contains the elements to process (defaults to this.$el)\n     */\n    _setUpBehaviors : function( $where ){\n        $where = $where || this.$el;\n        // set up canned behavior on children (bootstrap, popupmenus, editable_text, etc.)\n        //make_popup_menus( $where );\n        $where.find( '[title]' ).tooltip({ placement : 'bottom' });\n    },\n\n    // ......................................................................... details\n    /** shortcut to details DOM (as jQ) */\n    $details : function( $where ){\n        $where = $where || this.$el;\n        return $where.find( '> .details' );\n    },\n\n    /** build the DOM for the details and set up behaviors on it */\n    _renderDetails : function(){\n        var $newDetails = $( this.templates.details( this.model.toJSON(), this ) );\n        this._setUpBehaviors( $newDetails );\n        return $newDetails;\n    },\n\n    // ......................................................................... expansion/details\n    /** Show or hide the details\n     *  @param {Boolean} expand if true, expand; if false, collapse\n     */\n    toggleExpanded : function( expand ){\n        expand = ( expand === undefined )?( !this.expanded ):( expand );\n        if( expand ){\n            this.expand();\n        } else {\n            this.collapse();\n        }\n        return this;\n    },\n\n    /** Render and show the full, detailed body of this view including extra data and controls.\n     *      note: if the model does not have detailed data, fetch that data before showing the body\n     *  @fires expanded when a body has been expanded\n     */\n    expand : function(){\n        var view = this;\n        return view._fetchModelDetails().always( function(){\n                view._expand();\n            });\n    },\n\n    /** Check for model details and, if none, fetch them.\n     *  @returns {jQuery.promise} the model.fetch.xhr if details are being fetched, an empty promise if not\n     */\n    _fetchModelDetails : function(){\n        if( !this.model.hasDetails() ){\n            return this.model.fetch();\n        }\n        return jQuery.when();\n    },\n\n    /** Inner fn called when expand (public) has fetched the details */\n    _expand : function(){\n        var view = this,\n            $newDetails = view._renderDetails();\n        view.$details().replaceWith( $newDetails );\n        // needs to be set after the above or the slide will not show\n        view.expanded = true;\n        view.$details().slideDown( view.fxSpeed, function(){\n            view.trigger( 'expanded', view );\n        });\n    },\n\n    /** Hide the body/details of an HDA.\n     *  @fires collapsed when a body has been collapsed\n     */\n    collapse : function(){\n        this.debug( this + '(ExpandableView).collapse' );\n        var view = this;\n        view.expanded = false;\n        this.$details().slideUp( view.fxSpeed, function(){\n            view.trigger( 'collapsed', view );\n        });\n    }\n\n});\n\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *      Inherits from Expandable, Selectable, Draggable.\n *  The DOM contains warnings, a title bar, and a series of primary action controls.\n *      Primary actions are meant to be easily accessible item functions (such as delete)\n *      that are rendered in the title bar.\n *\n *  Details are rendered when the user clicks the title bar or presses enter/space when\n *      the title bar is in focus.\n *\n *  Designed as a base class for history panel contents - but usable elsewhere (I hope).\n */\nvar ListItemView = ExpandableView.extend(\n        BASE_MVC.mixin( BASE_MVC.SelectableViewMixin, BASE_MVC.DraggableViewMixin, {\n\n    tagName     : 'div',\n    className   : 'list-item',\n\n    /** Set up the base class and all mixins */\n    initialize : function( attributes ){\n        ExpandableView.prototype.initialize.call( this, attributes );\n        BASE_MVC.SelectableViewMixin.initialize.call( this, attributes );\n        BASE_MVC.DraggableViewMixin.initialize.call( this, attributes );\n        this._setUpListeners();\n    },\n\n    /** event listeners */\n    _setUpListeners : function(){\n        // hide the primary actions in the title bar when selectable and narrow\n        this.on( 'selectable', function( isSelectable ){\n            if( isSelectable ){\n                this.$( '.primary-actions' ).hide();\n            } else {\n                this.$( '.primary-actions' ).show();\n            }\n        }, this );\n        return this;\n    },\n\n    // ........................................................................ rendering\n    /** In this override, call methods to build warnings, titlebar and primary actions */\n    _buildNewRender : function(){\n        var $newRender = ExpandableView.prototype._buildNewRender.call( this );\n        $newRender.children( '.warnings' ).replaceWith( this._renderWarnings() );\n        $newRender.children( '.title-bar' ).replaceWith( this._renderTitleBar() );\n        $newRender.children( '.primary-actions' ).append( this._renderPrimaryActions() );\n        $newRender.find( '> .title-bar .subtitle' ).replaceWith( this._renderSubtitle() );\n        return $newRender;\n    },\n\n    /** In this override, render the selector controls and set up dragging before the swap */\n    _swapNewRender : function( $newRender ){\n        ExpandableView.prototype._swapNewRender.call( this, $newRender );\n        if( this.selectable ){ this.showSelector( 0 ); }\n        if( this.draggable ){ this.draggableOn(); }\n        return this.$el;\n    },\n\n    /** Render any warnings the item may need to show (e.g. \"I'm deleted\") */\n    _renderWarnings : function(){\n        var view = this,\n            $warnings = $( '<div class=\"warnings\"></div>' ),\n            json = view.model.toJSON();\n        //TODO:! unordered (map)\n        _.each( view.templates.warnings, function( templateFn ){\n            $warnings.append( $( templateFn( json, view ) ) );\n        });\n        return $warnings;\n    },\n\n    /** Render the title bar (the main/exposed SUMMARY dom element) */\n    _renderTitleBar : function(){\n        return $( this.templates.titleBar( this.model.toJSON(), this ) );\n    },\n\n    /** Return an array of jQ objects containing common/easily-accessible item controls */\n    _renderPrimaryActions : function(){\n        // override this\n        return [];\n    },\n\n    /** Render the title bar (the main/exposed SUMMARY dom element) */\n    _renderSubtitle : function(){\n        return $( this.templates.subtitle( this.model.toJSON(), this ) );\n    },\n\n    // ......................................................................... events\n    /** event map */\n    events : {\n        // expand the body when the title is clicked or when in focus and space or enter is pressed\n        'click .title-bar'      : '_clickTitleBar',\n        'keydown .title-bar'    : '_keyDownTitleBar',\n        'click .selector'       : 'toggleSelect'\n    },\n\n    /** expand when the title bar is clicked */\n    _clickTitleBar : function( event ){\n        event.stopPropagation();\n        if( event.altKey ){\n            this.toggleSelect( event );\n            if( !this.selectable ){\n                this.showSelector();\n            }\n        } else {\n            this.toggleExpanded();\n        }\n    },\n\n    /** expand when the title bar is in focus and enter or space is pressed */\n    _keyDownTitleBar : function( event ){\n        // bail (with propagation) if keydown and not space or enter\n        var KEYCODE_SPACE = 32, KEYCODE_RETURN = 13;\n        if( event && ( event.type === 'keydown' )\n        &&( event.keyCode === KEYCODE_SPACE || event.keyCode === KEYCODE_RETURN ) ){\n            this.toggleExpanded();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'ListItemView(' + modelString + ')';\n    }\n}));\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListItemView.prototype.templates = (function(){\n\n    var elTemplato = BASE_MVC.wrapTemplate([\n        '<div class=\"list-element\">',\n            // errors, messages, etc.\n            '<div class=\"warnings\"></div>',\n\n            // multi-select checkbox\n            '<div class=\"selector\">',\n                '<span class=\"fa fa-2x fa-square-o\"></span>',\n            '</div>',\n            // space for title bar buttons - gen. floated to the right\n            '<div class=\"primary-actions\"></div>',\n            '<div class=\"title-bar\"></div>',\n\n            // expandable area for more details\n            '<div class=\"details\"></div>',\n        '</div>'\n    ]);\n\n    var warnings = {};\n\n    var titleBarTemplate = BASE_MVC.wrapTemplate([\n        // adding a tabindex here allows focusing the title bar and the use of keydown to expand the dataset display\n        '<div class=\"title-bar clear\" tabindex=\"0\">',\n            //TODO: prob. belongs in dataset-list-item\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n                '<span class=\"name\"><%- element.name %></span>',\n            '</div>',\n            '<div class=\"subtitle\"></div>',\n        '</div>'\n    ], 'element' );\n\n    var subtitleTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"subtitle\"></div>'\n    ]);\n\n    var detailsTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"details\"></div>'\n    ]);\n\n    return {\n        el          : elTemplato,\n        warnings    : warnings,\n        titleBar    : titleBarTemplate,\n        subtitle    : subtitleTemplate,\n        details     : detailsTemplate\n    };\n}());\n\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *  *AND* can display some sub-list of it's own when expanded (e.g. dataset collections).\n *  This list will 'foldout' when the item is expanded depending on this.foldoutStyle:\n *      If 'foldout': will expand vertically to show the nested list\n *      If 'drilldown': will overlay the parent list\n *\n *  Inherits from ListItemView.\n *\n *  _renderDetails does the work of creating this.details: a sub-view that shows the nested list\n */\nvar FoldoutListItemView = ListItemView.extend({\n\n    /** If 'foldout': show the sub-panel inside the expanded item\n     *  If 'drilldown': only fire events and handle by pub-sub\n     *      (allow the panel containing this item to attach it, hide itself, etc.)\n     */\n    foldoutStyle        : 'foldout',\n    /** Panel view class to instantiate for the sub-panel */\n    foldoutPanelClass   : null,\n\n    /** override to:\n     *      add attributes foldoutStyle and foldoutPanelClass for config poly\n     *      disrespect attributes.expanded if drilldown\n     */\n    initialize : function( attributes ){\n        if( this.foldoutStyle === 'drilldown' ){ this.expanded = false; }\n        this.foldoutStyle = attributes.foldoutStyle || this.foldoutStyle;\n        this.foldoutPanelClass = attributes.foldoutPanelClass || this.foldoutPanelClass;\n\n        ListItemView.prototype.initialize.call( this, attributes );\n        this.foldout = this._createFoldoutPanel();\n    },\n\n    /** in this override, attach the foldout panel when rendering details */\n    _renderDetails : function(){\n        if( this.foldoutStyle === 'drilldown' ){ return $(); }\n        var $newDetails = ListItemView.prototype._renderDetails.call( this );\n        return this._attachFoldout( this.foldout, $newDetails );\n    },\n\n    /** In this override, handle collection expansion. */\n    _createFoldoutPanel : function(){\n        var model = this.model;\n        var FoldoutClass = this._getFoldoutPanelClass( model ),\n            options = this._getFoldoutPanelOptions( model ),\n            foldout = new FoldoutClass( _.extend( options, {\n                model           : model\n            }));\n        return foldout;\n    },\n\n    /** Stub to return proper foldout panel class */\n    _getFoldoutPanelClass : function(){\n        // override\n        return this.foldoutPanelClass;\n    },\n\n    /** Stub to return proper foldout panel options */\n    _getFoldoutPanelOptions : function(){\n        return {\n            // propagate foldout style down\n            foldoutStyle : this.foldoutStyle,\n            fxSpeed      : this.fxSpeed\n        };\n    },\n\n    /** Render the foldout panel inside the view, hiding controls */\n    _attachFoldout : function( foldout, $whereTo ){\n        $whereTo = $whereTo || this.$( '> .details' );\n        this.foldout = foldout.render( 0 );\n        foldout.$( '> .controls' ).hide();\n        return $whereTo.append( foldout.$el );\n    },\n\n    /** In this override, branch on foldoutStyle to show expanded */\n    expand : function(){\n        var view = this;\n        return view._fetchModelDetails()\n            .always(function(){\n                if( view.foldoutStyle === 'foldout' ){\n                    view._expand();\n                } else if( view.foldoutStyle === 'drilldown' ){\n                    view._expandByDrilldown();\n                }\n            });\n    },\n\n    /** For drilldown, set up close handler and fire expanded:drilldown\n     *      containing views can listen to this and handle other things\n     *      (like hiding themselves) by listening for expanded/collapsed:drilldown\n     */\n    _expandByDrilldown : function(){\n        var view = this;\n        // attachment and rendering done by listener\n        view.listenTo( view.foldout, 'close', function(){\n            view.trigger( 'collapsed:drilldown', view, view.foldout );\n        });\n        view.trigger( 'expanded:drilldown', view, view.foldout );\n    }\n\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nFoldoutListItemView.prototype.templates = (function(){\n\n    var detailsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"details\">',\n            // override with more info (that goes above the panel)\n        '</div>'\n    ], 'collection' );\n\n    return _.extend( {}, ListItemView.prototype.templates, {\n        details : detailsTemplate\n    });\n}());\n\n\n//==============================================================================\n    return {\n        ExpandableView                  : ExpandableView,\n        ListItemView                    : ListItemView,\n        FoldoutListItemView             : FoldoutListItemView\n    };\n});\n"]}