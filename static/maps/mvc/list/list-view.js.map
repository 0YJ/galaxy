{"version":3,"sources":["mvc/list/list-view.js"],"names":["define","LIST_ITEM","LoadingIndicator","BASE_MVC","_l","ListPanel","Backbone","View","extend","LoggableMixin","_logNamespace","viewClass","ListItemView","collectionClass","Collection","tagName","className","fxSpeed","emptyMsg","noneFoundMsg","searchPlaceholder","initialize","attributes","options","logger","this","log","_","has","filters","searchFor","selecting","undefined","selected","lastSelected","dragItems","views","collection","_createDefaultCollection","$scrollContainer","title","subtitle","_setUpListeners","off","on","error","model","xhr","msg","details","console","loading","_showLoadingIndicator","loading-done","_hideLoadingIndicator","once","trigger","_setUpCollectionListeners","_setUpViewListeners","stopListening","listenTo","update","changes","renderAll","added","length","removed","renderItems","addItemView","first","removeItemView","view:selected","view","ev","shiftKey","lastSelectedView","viewFromModelId","selectRange","altKey","showSelectors","push","id","view:de-selected","without","render","speed","$newRender","_buildNewRender","_setUpBehaviors","_queueNewRender","debug","$","templates","el","_renderControls","_renderTitle","_renderSubtitle","_renderSearch","$controls","controls","find","replaceWith","$where","panel","queue","next","$el","fadeOut","_swapNewRender","fadeIn","empty","attr","append","children","tooltip","_renderMultiselectActionMenu","$menu","actions","multiselectActions","$newMenu","join","$actions","map","action","html","click","preventDefault","func","parent","$list","$messages","$emptyMessage","$whereTo","freeViews","shownModels","_filterCollection","itemModel","_createItemView","_attachItems","_renderEmptyMessage","toggle","filter","bind","_filterItem","every","fn","call","matchesAll","ViewClass","_getItemViewClass","_getItemViewOptions","_setUpItemViewListeners","_destroyItemView","_destroyItemViews","self","forEach","v","expanded","selectable","contains","draggable","args","Array","prototype","slice","arguments","apply","json","getSelectedModels","toJSON","dataTransfer","setData","JSON","stringify","_renderItemView$el","text","expandAll","each","expand","collapseAll","collapse","modelIndex","indexOf","is","_attachView","useFx","isUndefined","splice","_insertIntoListAt","hide","slideDown","show","index","$what","prepend","eq","after","remove","viewFromModel","viewsWhereModel","properties","isMatch","viewRange","viewA","viewB","indexA","indexB","searchInput","placeholder","initialVal","onfirstsearch","_firstSearch","onsearch","searchItems","onclear","clearSearch","force","$search","val","THROTTLE_SELECTOR_FX_AT","showSelector","hideSelectors","slideUp","hideSelector","toggleSelectors","selectAll","event","select","deselectAll","deselect","range","getSelectedViews","constructor","callback","indicator","scrollPosition","scrollTop","scrollTo","pos","animate","scrollToTop","scrollToItem","scrollToId","events","click .select-all","click .deselect-all","toString","wrapTemplate","ModelListPanel","modelCollectionKey","setModel","freeModel","oldModelId","get","_setUpModelListeners","unshift","info","controlsTemplate","clone"],"mappings":"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","file":"../../../scripts/mvc/list/list-view.js","sourcesContent":["define([\n    \"mvc/list/list-item\",\n    \"ui/loading-indicator\",\n    \"mvc/base-mvc\",\n    \"utils/localization\",\n    \"ui/search-input\"\n], function( LIST_ITEM, LoadingIndicator, BASE_MVC, _l ){\n\n'use strict';\n\nvar logNamespace = 'list';\n/* ============================================================================\nTODO:\n\n============================================================================ */\n/** @class View for a list/collection of models and the sub-views of those models.\n *      Sub-views must (at least have the interface if not) inherit from ListItemView.\n *      (For a list panel that also includes some 'container' model (History->HistoryContents)\n *      use ModelWithListPanel)\n *\n *  Allows for:\n *      searching collection/sub-views\n *      selecting/multi-selecting sub-views\n *\n *  Currently used:\n *      for dataset/dataset-choice\n *      as superclass of ModelListPanel\n */\nvar ListPanel = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend(/** @lends ListPanel.prototype */{\n    _logNamespace : logNamespace,\n\n    /** class to use for constructing the sub-views */\n    viewClass           : LIST_ITEM.ListItemView,\n    /** class to used for constructing collection of sub-view models */\n    collectionClass     : Backbone.Collection,\n\n    tagName             : 'div',\n    className           : 'list-panel',\n\n    /** (in ms) that jquery effects will use */\n    fxSpeed             : 'fast',\n\n    /** string to display when the collection has no contents */\n    emptyMsg            : _l( 'This list is empty' ),\n    /** displayed when no items match the search terms */\n    noneFoundMsg        : _l( 'No matching items found' ),\n    /** string used for search placeholder */\n    searchPlaceholder   : _l( 'search' ),\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes optional settings for the list\n     */\n    initialize : function( attributes, options ){\n        attributes = attributes || {};\n        // set the logger if requested\n        if( attributes.logger ){\n            this.logger = attributes.logger;\n        }\n        this.log( this + '.initialize:', attributes );\n\n        // ---- instance vars\n        /** how quickly should jquery fx run? */\n        this.fxSpeed = _.has( attributes, 'fxSpeed' )?( attributes.fxSpeed ):( this.fxSpeed );\n\n        /** filters for displaying subviews */\n        this.filters = [];\n        /** current search terms */\n        this.searchFor = attributes.searchFor || '';\n\n        /** loading indicator */\n        // this.indicator = new LoadingIndicator( this.$el );\n\n        /** currently showing selectors on items? */\n        this.selecting = ( attributes.selecting !== undefined )? attributes.selecting : true;\n        //this.selecting = false;\n\n        /** cached selected item.model.ids to persist btwn renders */\n        this.selected = attributes.selected || [];\n        /** the last selected item.model.id */\n        this.lastSelected = null;\n\n        /** are sub-views draggable */\n        this.dragItems = attributes.dragItems || false;\n\n        /** list item view class (when passed models) */\n        this.viewClass = attributes.viewClass || this.viewClass;\n\n        /** list item views */\n        this.views = [];\n        /** list item models */\n        this.collection = attributes.collection || this._createDefaultCollection();\n\n        /** filter fns run over collection items to see if they should show in the list */\n        this.filters = attributes.filters || [];\n\n        /** override $scrollContainer fn via attributes - fn should return jq for elem to call scrollTo on */\n        this.$scrollContainer = attributes.$scrollContainer || this.$scrollContainer;\n\n        /** @type {String} generic title */\n        this.title = attributes.title || '';\n        /** @type {String} generic subtitle */\n        this.subtitle = attributes.subtitle || '';\n\n        this._setUpListeners();\n    },\n\n    // ------------------------------------------------------------------------ listeners\n    /** create any event listeners for the list */\n    _setUpListeners : function(){\n        this.off();\n\n        //TODO: move errorHandler down into list-view from history-view or\n        //  pass to global error handler (Galaxy)\n        this.on({\n            error: function( model, xhr, options, msg, details ){\n                //this.errorHandler( model, xhr, options, msg, details );\n                console.error( model, xhr, options, msg, details );\n            },\n            // show hide the loading indicator\n            loading: function(){\n                this._showLoadingIndicator( 'loading...', 40 );\n            },\n            'loading-done': function(){\n                this._hideLoadingIndicator( 40 );\n            },\n        });\n\n        // throw the first render up as a diff namespace using once (for outside consumption)\n        this.once( 'rendered', function(){\n            this.trigger( 'rendered:initial', this );\n        });\n\n        this._setUpCollectionListeners();\n        this._setUpViewListeners();\n        return this;\n    },\n\n    /** create and return a collection for when none is initially passed */\n    _createDefaultCollection : function(){\n        // override\n        return new this.collectionClass([]);\n    },\n\n    /** listening for collection events */\n    _setUpCollectionListeners : function(){\n        this.log( this + '._setUpCollectionListeners', this.collection );\n        this.stopListening( this.collection );\n\n        // bubble up error events\n        this.listenTo( this.collection, {\n            error   : function( model, xhr, options, msg, details ){\n                this.trigger( 'error', model, xhr, options, msg, details );\n            },\n            update  : function( collection, options ){\n                var changes = options.changes;\n                // console.info( collection + ', update:', changes, '\\noptions:', options );\n                // more than one: render everything\n                if( options.renderAll || ( changes.added.length + changes.removed.length > 1 ) ){\n                    return this.renderItems();\n                }\n                // otherwise, let the single add/remove handlers do it\n                if( changes.added.length === 1 ){\n                    return this.addItemView( _.first( changes.added ), collection, options );\n                }\n                if( changes.removed.length === 1 ){\n                    return this.removeItemView( _.first( changes.removed ), collection, options );\n                }\n            }\n        });\n        return this;\n    },\n\n    /** listening for sub-view events that bubble up with the 'view:' prefix */\n    _setUpViewListeners : function(){\n        this.log( this + '._setUpViewListeners' );\n\n        // shift to select a range\n        this.on({\n            'view:selected': function( view, ev ){\n                if( ev && ev.shiftKey && this.lastSelected ){\n                    var lastSelectedView = this.viewFromModelId( this.lastSelected );\n                    if( lastSelectedView ){\n                        this.selectRange( view, lastSelectedView );\n                    }\n                } else if( ev && ev.altKey && !this.selecting ){\n                    this.showSelectors();\n                }\n                this.selected.push( view.model.id );\n                this.lastSelected = view.model.id;\n            },\n\n            'view:de-selected': function( view, ev ){\n                this.selected = _.without( this.selected, view.model.id );\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ rendering\n    /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n    render : function( speed ){\n        this.log( this + '.render', speed );\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors( $newRender );\n        this._queueNewRender( $newRender, speed );\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el. */\n    _buildNewRender : function(){\n        this.debug( this + '(ListPanel)._buildNewRender' );\n        var $newRender = $( this.templates.el( {}, this ) );\n        this._renderControls( $newRender );\n        this._renderTitle( $newRender );\n        this._renderSubtitle( $newRender );\n        this._renderSearch( $newRender );\n        this.renderItems( $newRender );\n        return $newRender;\n    },\n\n    /** Build a temp div containing the new children for the view's $el. */\n    _renderControls : function( $newRender ){\n        this.debug( this + '(ListPanel)._renderControls' );\n        var $controls = $( this.templates.controls( {}, this ) );\n        $newRender.find( '.controls' ).replaceWith( $controls );\n        return $controls;\n    },\n\n    /** return a jQuery object containing the title DOM */\n    _renderTitle : function( $where ){\n        //$where = $where || this.$el;\n        //$where.find( '.title' ).replaceWith( ... )\n    },\n\n    /** return a jQuery object containing the subtitle DOM (if any) */\n    _renderSubtitle : function( $where ){\n        //$where = $where || this.$el;\n        //$where.find( '.title' ).replaceWith( ... )\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n    _queueNewRender : function( $newRender, speed ) {\n        speed = ( speed === undefined )?( this.fxSpeed ):( speed );\n        var panel = this;\n        panel.log( '_queueNewRender:', $newRender, speed );\n\n        $( panel ).queue( 'fx', [\n            function( next ){\n                panel.$el.fadeOut( speed, next );\n            },\n            function( next ){\n                panel._swapNewRender( $newRender );\n                next();\n            },\n            function( next ){\n                panel.$el.fadeIn( speed, next );\n            },\n            function( next ){\n                panel.trigger( 'rendered', panel );\n                next();\n            }\n        ]);\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender : function( $newRender ){\n        this.$el.empty().attr( 'class', this.className ).append( $newRender.children() );\n        if( this.selecting ){ this.showSelectors( 0 ); }\n        return this;\n    },\n\n    /** Set up any behaviors, handlers (ep. plugins) that need to be called when the entire view has been built but\n     *  not attached to the page yet.\n     */\n    _setUpBehaviors : function( $where ){\n        $where = $where || this.$el;\n        this.$controls( $where ).find('[title]').tooltip();\n        // set up the pupup for actions available when multi selecting\n        this._renderMultiselectActionMenu( $where );\n        return this;\n    },\n\n    /** render a menu containing the actions available to sets of selected items */\n    _renderMultiselectActionMenu : function( $where ){\n        $where = $where || this.$el;\n        var $menu = $where.find( '.list-action-menu' ),\n            actions = this.multiselectActions();\n        if( !actions.length ){\n            return $menu.empty();\n        }\n\n        var $newMenu = $([\n            '<div class=\"list-action-menu btn-group\">',\n                '<button class=\"list-action-menu-btn btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                    _l( 'For all selected' ), '...',\n                '</button>',\n                '<ul class=\"dropdown-menu pull-right\" role=\"menu\">', '</ul>',\n            '</div>'\n        ].join(''));\n        var $actions = actions.map( function( action ){\n            var html = [ '<li><a href=\"javascript:void(0);\">', action.html, '</a></li>' ].join( '' );\n            return $( html ).click( function( ev ){\n                ev.preventDefault();\n                return action.func( ev );\n            });\n        });\n        $newMenu.find( 'ul' ).append( $actions );\n        $menu.replaceWith( $newMenu );\n        return $newMenu;\n    },\n\n    /** return a list of plain objects used to render multiselect actions menu. Each object should have:\n     *      html: an html string used as the anchor contents\n     *      func: a function called when the anchor is clicked (passed the click event)\n     */\n    multiselectActions : function(){\n        return [];\n    },\n\n    // ------------------------------------------------------------------------ sub-$element shortcuts\n    /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n    $scrollContainer : function( $where ){\n        // override or set via attributes.$scrollContainer\n        return ( $where || this.$el ).parent().parent();\n    },\n    /** convenience selector for the section that displays the list controls */\n    $controls : function( $where ){\n        return ( $where || this.$el ).find( '> .controls' );\n    },\n    /** list-items: where the subviews are contained in the view's dom */\n    $list : function( $where ){\n        return ( $where || this.$el ).find( '> .list-items' );\n    },\n    /** container where list messages are attached */\n    $messages : function( $where ){\n        //TODO: controls isn't really correct here (only for ModelListPanel)\n        return ( $where || this.$el ).find( '> .controls .messages' );\n    },\n    /** the message displayed when no views can be shown (no views, none matching search) */\n    $emptyMessage : function( $where ){\n        return ( $where || this.$el ).find( '> .empty-message' );\n    },\n\n    // ------------------------------------------------------------------------ hda sub-views\n    /** render the subviews for the list's collection */\n    renderItems : function( $whereTo ){\n        $whereTo = $whereTo || this.$el;\n        var panel = this;\n        panel.log( this + '.renderItems', $whereTo );\n\n        var $list = panel.$list( $whereTo );\n        panel.freeViews();\n        // console.log( 'views freed' );\n        //TODO:? cache and re-use views?\n        var shownModels = panel._filterCollection();\n        // console.log( 'models filtered:', shownModels );\n\n        panel.views = shownModels.map( function( itemModel ){\n            var view = panel._createItemView( itemModel );\n            return view;\n        });\n\n        $list.empty();\n        // console.log( 'list emptied' );\n        if( panel.views.length ){\n            panel._attachItems( $whereTo );\n            // console.log( 'items attached' );\n        }\n        panel._renderEmptyMessage( $whereTo ).toggle( !panel.views.length );\n        panel.trigger( 'views:ready', panel.views );\n\n        // console.log( '------------------------------------------- rendering items' );\n        return panel.views;\n    },\n\n    /** Filter the collection to only those models that should be currently viewed */\n    _filterCollection : function(){\n        // override this\n        var panel = this;\n        return panel.collection.filter( _.bind( panel._filterItem, panel ) );\n    },\n\n    /** Should the model be viewable in the current state?\n     *     Checks against this.filters and this.searchFor\n     */\n    _filterItem : function( model ){\n        // override this\n        var panel = this;\n        return ( _.every( panel.filters.map( function( fn ){ return fn.call( model ); }) ) )\n            && ( !panel.searchFor || model.matchesAll( panel.searchFor ) );\n    },\n\n    /** Create a view for a model and set up it's listeners */\n    _createItemView : function( model ){\n        var ViewClass = this._getItemViewClass( model );\n        var options = _.extend( this._getItemViewOptions( model ), {\n            model : model\n        });\n        var view = new ViewClass( options );\n        this._setUpItemViewListeners( view );\n        return view;\n    },\n\n    /** Free a view for a model. Note: does not remove it from the DOM */\n    _destroyItemView : function( view ){\n        this.stopListening( view );\n        this.views = _.without( this.views, view );\n    },\n\n    _destroyItemViews : function( view ){\n        var self = this;\n        self.views.forEach( function( v ){\n            self.stopListening( v );\n        });\n        self.views = [];\n        return self;\n    },\n\n    /** free any sub-views the list has */\n    freeViews : function(){\n        return this._destroyItemViews();\n    },\n\n    /** Get the bbone view class based on the model */\n    _getItemViewClass : function( model ){\n        // override this\n        return this.viewClass;\n    },\n\n    /** Get the options passed to the new view based on the model */\n    _getItemViewOptions : function( model ){\n        // override this\n        return {\n            //logger      : this.logger,\n            fxSpeed     : this.fxSpeed,\n            expanded    : false,\n            selectable  : this.selecting,\n            selected    : _.contains( this.selected, model.id ),\n            draggable   : this.dragItems\n        };\n    },\n\n    /** Set up listeners for new models */\n    _setUpItemViewListeners : function( view ){\n        var panel = this;\n        // send all events to the panel, re-namspaceing them with the view prefix\n        this.listenTo( view, 'all', function(){\n            var args = Array.prototype.slice.call( arguments, 0 );\n            args[0] = 'view:' + args[0];\n            panel.trigger.apply( panel, args );\n        });\n\n        // drag multiple - hijack ev.setData to add all selected items\n        this.listenTo( view, 'draggable:dragstart', function( ev, v ){\n            //TODO: set multiple drag data here\n            var json = {},\n                selected = this.getSelectedModels();\n            if( selected.length ){\n                json = selected.toJSON();\n            } else {\n                json = [ v.model.toJSON() ];\n            }\n            ev.dataTransfer.setData( 'text', JSON.stringify( json ) );\n            //ev.dataTransfer.setDragImage( v.el, 60, 60 );\n        }, this );\n\n        return panel;\n    },\n\n    /** Attach views in this.views to the model based on $whereTo */\n    _attachItems : function( $whereTo ){\n        var self = this;\n        // console.log( '_attachItems:', $whereTo, this.$list( $whereTo ) );\n        //ASSUMES: $list has been emptied\n        this.$list( $whereTo ).append( this.views.map( function( view ){\n            return self._renderItemView$el( view );\n        }));\n        return this;\n    },\n\n    /** get a given subview's $el (or whatever may wrap it) and return it */\n    _renderItemView$el : function( view ){\n        // useful to wrap and override\n        return view.render(0).$el;\n    },\n\n    /** render the empty/none-found message */\n    _renderEmptyMessage : function( $whereTo ){\n        this.debug( '_renderEmptyMessage', $whereTo, this.searchFor );\n        var text = this.searchFor? this.noneFoundMsg : this.emptyMsg;\n        return this.$emptyMessage( $whereTo ).text( text );\n    },\n\n    /** expand all item views */\n    expandAll : function(){\n        _.each( this.views, function( view ){\n            view.expand();\n        });\n    },\n\n    /** collapse all item views */\n    collapseAll : function(){\n        _.each( this.views, function( view ){\n            view.collapse();\n        });\n    },\n\n    // ------------------------------------------------------------------------ collection/views syncing\n    /** Add a view (if the model should be viewable) to the panel */\n    addItemView : function( model, collection, options ){\n        // console.log( this + '.addItemView:', model );\n        var panel = this;\n        // get the index of the model in the list of filtered models shown by this list\n        // in order to insert the view in the proper place\n        //TODO:? potentially expensive\n        var modelIndex = panel._filterCollection().indexOf( model );\n        if( modelIndex === -1 ){ return undefined; }\n        var view = panel._createItemView( model );\n        // console.log( 'adding and rendering:', modelIndex, view.toString() );\n\n        $( view ).queue( 'fx', [\n            function( next ){\n                // hide the empty message first if only view\n                if( panel.$emptyMessage().is( ':visible' ) ){\n                    panel.$emptyMessage().fadeOut( panel.fxSpeed, next );\n                } else {\n                    next();\n                }\n            },\n            function( next ){\n                panel._attachView( view, modelIndex );\n                next();\n            }\n        ]);\n        return view;\n    },\n\n    /** internal fn to add view (to both panel.views and panel.$list) */\n    _attachView : function( view, modelIndex, useFx ){\n        // console.log( this + '._attachView:', view, modelIndex, useFx );\n        useFx = _.isUndefined( useFx )? true : useFx;\n        modelIndex = modelIndex || 0;\n        var panel = this;\n\n        // use the modelIndex to splice into views and insert at the proper index in the DOM\n        panel.views.splice( modelIndex, 0, view );\n        panel._insertIntoListAt( modelIndex, panel._renderItemView$el( view ).hide() );\n\n        panel.trigger( 'view:attached', view );\n        if( useFx ){\n            view.$el.slideDown( panel.fxSpeed, function(){\n                panel.trigger( 'view:attached:rendered' );\n            });\n        } else {\n            view.$el.show();\n            panel.trigger( 'view:attached:rendered' );\n        }\n        return view;\n    },\n\n    /** insert a jq object as a child of list-items at the specified *DOM index* */\n    _insertIntoListAt : function( index, $what ){\n        // console.log( this + '._insertIntoListAt:', index, $what );\n        var $list = this.$list();\n        if( index === 0 ){\n            $list.prepend( $what );\n        } else {\n            $list.children().eq( index - 1 ).after( $what );\n        }\n        return $what;\n    },\n\n    /** Remove a view from the panel (if found) */\n    removeItemView : function( model, collection, options ){\n        var panel = this;\n        var view = _.find( panel.views, function( v ){ return v.model === model; });\n        if( !view ){ return undefined; }\n        panel.views = _.without( panel.views, view );\n        panel.trigger( 'view:removed', view );\n\n        // potentially show the empty message if no views left\n        // use anonymous queue here - since remove can happen multiple times\n        $({}).queue( 'fx', [\n            function( next ){\n                view.$el.fadeOut( panel.fxSpeed, next );\n            },\n            function( next ){\n                view.remove();\n                panel.trigger( 'view:removed:rendered' );\n                if( !panel.views.length ){\n                    panel._renderEmptyMessage().fadeIn( panel.fxSpeed, next );\n                } else {\n                    next();\n                }\n            }\n        ]);\n        return view;\n    },\n\n    /** get views based on model.id */\n    viewFromModelId : function( id ){\n        return _.find( this.views, function( v ){ return v.model.id === id; });\n    },\n\n    /** get views based on model */\n    viewFromModel : function( model ){\n        return model ? this.viewFromModelId( model.id ) : undefined;\n    },\n\n    /** get views based on model properties */\n    viewsWhereModel : function( properties ){\n        return this.views.filter( function( view ){\n            return _.isMatch( view.model.attributes, properties );\n        });\n    },\n\n    /** A range of views between (and including) viewA and viewB */\n    viewRange : function( viewA, viewB ){\n        if( viewA === viewB ){ return ( viewA )?( [ viewA ] ):( [] ); }\n\n        var indexA = this.views.indexOf( viewA ),\n            indexB = this.views.indexOf( viewB );\n\n        // handle not found\n        if( indexA === -1 || indexB === -1 ){\n            if( indexA === indexB ){ return []; }\n            return ( indexA === -1 )?( [ viewB ] ):( [ viewA ] );\n        }\n        // reverse if indeces are\n        //note: end inclusive\n        return ( indexA < indexB )?\n            this.views.slice( indexA, indexB + 1 ) :\n            this.views.slice( indexB, indexA + 1 );\n    },\n\n    // ------------------------------------------------------------------------ searching\n    /** render a search input for filtering datasets shown\n     *      (see SearchableMixin in base-mvc for implementation of the actual searching)\n     *      return will start the search\n     *      esc will clear the search\n     *      clicking the clear button will clear the search\n     *      uses searchInput in ui.js\n     */\n    _renderSearch : function( $where ){\n        $where.find( '.controls .search-input' ).searchInput({\n            placeholder     : this.searchPlaceholder,\n            initialVal      : this.searchFor,\n            onfirstsearch   : _.bind( this._firstSearch, this ),\n            onsearch        : _.bind( this.searchItems, this ),\n            onclear         : _.bind( this.clearSearch, this )\n        });\n        return $where;\n    },\n\n    /** What to do on the first search entered */\n    _firstSearch : function( searchFor ){\n        // override to load model details if necc.\n        this.log( 'onFirstSearch', searchFor );\n        return this.searchItems( searchFor );\n    },\n\n    /** filter view list to those that contain the searchFor terms */\n    searchItems : function( searchFor, force ){\n        this.log( 'searchItems', searchFor, this.searchFor, force );\n        if( !force && this.searchFor === searchFor ){ return this; }\n        this.searchFor = searchFor;\n        this.renderItems();\n        this.trigger( 'search:searching', searchFor, this );\n        var $search = this.$( '> .controls .search-query' );\n        if( $search.val() !== searchFor ){\n            $search.val( searchFor );\n        }\n        return this;\n    },\n\n    /** clear the search filters and show all views that are normally shown */\n    clearSearch : function( searchFor ){\n        //this.log( 'onSearchClear', this );\n        this.searchFor = '';\n        this.trigger( 'search:clear', this );\n        this.$( '> .controls .search-query' ).val( '' );\n        this.renderItems();\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ selection\n    /** @type Integer when the number of list item views is >= to this, don't animate selectors */\n    THROTTLE_SELECTOR_FX_AT : 20,\n\n    /** show selectors on all visible itemViews and associated controls */\n    showSelectors : function( speed ){\n        speed = ( speed !== undefined )?( speed ):( this.fxSpeed );\n        this.selecting = true;\n        this.$( '.list-actions' ).slideDown( speed );\n        speed = this.views.length >= this.THROTTLE_SELECTOR_FX_AT? 0 : speed;\n        _.each( this.views, function( view ){\n            view.showSelector( speed );\n        });\n        //this.selected = [];\n        //this.lastSelected = null;\n    },\n\n    /** hide selectors on all visible itemViews and associated controls */\n    hideSelectors : function( speed ){\n        speed = ( speed !== undefined )?( speed ):( this.fxSpeed );\n        this.selecting = false;\n        this.$( '.list-actions' ).slideUp( speed );\n        speed = this.views.length >= this.THROTTLE_SELECTOR_FX_AT? 0 : speed;\n        _.each( this.views, function( view ){\n            view.hideSelector( speed );\n        });\n        this.selected = [];\n        this.lastSelected = null;\n    },\n\n    /** show or hide selectors on all visible itemViews and associated controls */\n    toggleSelectors : function(){\n        if( !this.selecting ){\n            this.showSelectors();\n        } else {\n            this.hideSelectors();\n        }\n    },\n\n    /** select all visible items */\n    selectAll : function( event ){\n        _.each( this.views, function( view ){\n            view.select( event );\n        });\n    },\n\n    /** deselect all visible items */\n    deselectAll : function( event ){\n        this.lastSelected = null;\n        _.each( this.views, function( view ){\n            view.deselect( event );\n        });\n    },\n\n    /** select a range of datasets between A and B */\n    selectRange : function( viewA, viewB ){\n        var range = this.viewRange( viewA, viewB );\n        _.each( range, function( view ){\n            view.select();\n        });\n        return range;\n    },\n\n    /** return an array of all currently selected itemViews */\n    getSelectedViews : function(){\n        return _.filter( this.views, function( v ){\n            return v.selected;\n        });\n    },\n\n    /** return a collection of the models of all currenly selected items */\n    getSelectedModels : function(){\n        // console.log( '(getSelectedModels)' );\n        return new this.collection.constructor( _.map( this.getSelectedViews(), function( view ){\n            return view.model;\n        }));\n    },\n\n    // ------------------------------------------------------------------------ loading indicator\n    /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n    _showLoadingIndicator : function( msg, speed, callback ){\n        this.debug( '_showLoadingIndicator', this.indicator, msg, speed, callback );\n        speed = ( speed !== undefined )?( speed ):( this.fxSpeed );\n        if( !this.indicator ){\n            this.indicator = new LoadingIndicator( this.$el );\n            this.debug( '\\t created', this.indicator );\n        }\n        if( !this.$el.is( ':visible' ) ){\n            this.indicator.show( 0, callback );\n        } else {\n            this.$el.fadeOut( speed );\n            this.indicator.show( msg, speed, callback );\n        }\n    },\n\n    /** hide the loading indicator */\n    _hideLoadingIndicator : function( speed, callback ){\n        this.debug( '_hideLoadingIndicator', this.indicator, speed, callback );\n        speed = ( speed !== undefined )?( speed ):( this.fxSpeed );\n        if( this.indicator ){\n            this.indicator.hide( speed, callback );\n        }\n    },\n\n    // ------------------------------------------------------------------------ scrolling\n    /** get the current scroll position of the panel in its parent */\n    scrollPosition : function(){\n        return this.$scrollContainer().scrollTop();\n    },\n\n    /** set the current scroll position of the panel in its parent */\n    scrollTo : function( pos, speed ){\n        speed = speed || 0;\n        this.$scrollContainer().animate({ scrollTop: pos }, speed );\n        return this;\n    },\n\n    /** Scrolls the panel to the top. */\n    scrollToTop : function( speed ){\n        return this.scrollTo( 0, speed );\n    },\n\n    /** scroll to the given view in list-items */\n    scrollToItem : function( view, speed ){\n        if( !view ){ return this; }\n        return this;\n    },\n\n    /** Scrolls the panel to show the content with the given id. */\n    scrollToId : function( id, speed ){\n        return this.scrollToItem( this.viewFromModelId( id ), speed );\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events : {\n        'click .select-all'     : 'selectAll',\n        'click .deselect-all'   : 'deselectAll'\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** Return a string rep of the panel */\n    toString : function(){\n        return 'ListPanel(' + this.collection + ')';\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListPanel.prototype.templates = (function(){\n\n    var elTemplate = BASE_MVC.wrapTemplate([\n        // temp container\n        '<div>',\n            '<div class=\"controls\"></div>',\n            '<div class=\"list-items\"></div>',\n            '<div class=\"empty-message infomessagesmall\"></div>',\n        '</div>'\n    ]);\n\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n            '<div class=\"title\">',\n                '<div class=\"name\"><%- view.title %></div>',\n            '</div>',\n            '<div class=\"subtitle\"><%- view.subtitle %></div>',\n            // buttons, controls go here\n            '<div class=\"actions\"></div>',\n            // deleted msg, etc.\n            '<div class=\"messages\"></div>',\n\n            '<div class=\"search\">',\n                '<div class=\"search-input\"></div>',\n            '</div>',\n\n            // show when selectors are shown\n            '<div class=\"list-actions\">',\n                '<div class=\"btn-group\">',\n                    '<button class=\"select-all btn btn-default\"',\n                            'data-mode=\"select\">', _l( 'All' ), '</button>',\n                    '<button class=\"deselect-all btn btn-default\"',\n                            'data-mode=\"select\">', _l( 'None' ), '</button>',\n                '</div>',\n                '<div class=\"list-action-menu btn-group\">',\n                '</div>',\n            '</div>',\n        '</div>'\n    ]);\n\n    return {\n        el          : elTemplate,\n        controls    : controlsTemplate\n    };\n}());\n\n\n//=============================================================================\n/** View for a model that has a sub-collection (e.g. History, DatasetCollection)\n *  Allows:\n *      the model to be reset\n *      auto assign panel.collection to panel.model[ panel.modelCollectionKey ]\n *\n */\nvar ModelListPanel = ListPanel.extend({\n\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey : 'contents',\n\n    initialize : function( attributes ){\n        ListPanel.prototype.initialize.call( this, attributes );\n        this.selecting = ( attributes.selecting !== undefined )? attributes.selecting : false;\n\n        this.setModel( this.model, attributes );\n    },\n\n    /** release/free/shutdown old models and set up panel for new models\n     *  @fires new-model with the panel as parameter\n     */\n    setModel : function( model, attributes ){\n        attributes = attributes || {};\n        this.debug( this + '.setModel:', model, attributes );\n\n        this.freeModel();\n        this.freeViews();\n\n        if( model ){\n            var oldModelId = this.model? this.model.get( 'id' ): null;\n\n            // set up the new model with user, logger, storage, events\n            this.model = model;\n            if( this.logger ){\n                this.model.logger = this.logger;\n            }\n            this._setUpModelListeners();\n\n            //TODO: relation btwn model, collection becoming tangled here\n            // free the collection, and assign the new collection to either\n            //  the model[ modelCollectionKey ], attributes.collection, or an empty vanilla collection\n            this.stopListening( this.collection );\n            this.collection = this.model[ this.modelCollectionKey ]\n                || attributes.collection\n                || this._createDefaultCollection();\n            this._setUpCollectionListeners();\n\n            if( oldModelId && model.get( 'id' ) !== oldModelId  ){\n                this.trigger( 'new-model', this );\n            }\n        }\n        return this;\n    },\n\n    /** free the current model and all listeners for it, free any views for the model */\n    freeModel : function(){\n        // stop/release the previous model, and clear cache to sub-views\n        if( this.model ){\n            this.stopListening( this.model );\n            //TODO: see base-mvc\n            //this.model.free();\n            //this.model = null;\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ listening\n    /** listening for model events */\n    _setUpModelListeners : function(){\n        // override\n        this.log( this + '._setUpModelListeners', this.model );\n        // bounce model errors up to the panel\n        this.listenTo( this.model, 'error', function(){\n            var args = Array.prototype.slice.call( arguments, 0 );\n            //args.unshift( 'model:error' );\n            args.unshift( 'error' );\n            this.trigger.apply( this, args );\n        }, this );\n\n        // debugging\n        if( this.logger ){\n            this.listenTo( this.model, 'all', function( event ){\n                this.info( this + '(model)', event, arguments );\n            });\n        }\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     */\n    _renderControls : function( $newRender ){\n        this.debug( this + '(ModelListPanel)._renderControls' );\n        var json = this.model? this.model.toJSON() : {},\n            $controls = $( this.templates.controls( json, this ) );\n        $newRender.find( '.controls' ).replaceWith( $controls );\n        return $controls;\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** Return a string rep of the panel */\n    toString : function(){\n        return 'ModelListPanel(' + this.model + ')';\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nModelListPanel.prototype.templates = (function(){\n\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n            '<div class=\"title\">',\n                //TODO: this is really the only difference - consider factoring titlebar out\n                '<div class=\"name\"><%- model.name %></div>',\n            '</div>',\n            '<div class=\"subtitle\"><%- view.subtitle %></div>',\n            '<div class=\"actions\"></div>',\n            '<div class=\"messages\"></div>',\n\n            '<div class=\"search\">',\n                '<div class=\"search-input\"></div>',\n            '</div>',\n\n            '<div class=\"list-actions\">',\n                '<div class=\"btn-group\">',\n                    '<button class=\"select-all btn btn-default\"',\n                            'data-mode=\"select\">', _l( 'All' ), '</button>',\n                    '<button class=\"deselect-all btn btn-default\"',\n                            'data-mode=\"select\">', _l( 'None' ), '</button>',\n                '</div>',\n                '<div class=\"list-action-menu btn-group\">',\n                '</div>',\n            '</div>',\n        '</div>'\n    ]);\n\n    return _.extend( _.clone( ListPanel.prototype.templates ), {\n        controls : controlsTemplate\n    });\n}());\n\n\n//=============================================================================\n    return {\n        ListPanel      : ListPanel,\n        ModelListPanel : ModelListPanel\n    };\n});\n"]}