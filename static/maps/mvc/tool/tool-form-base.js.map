{"version":3,"sources":["mvc/tool/tool-form-base.js"],"names":["_formView2","default","extend","initialize","options","self","this","deferred","_deferred2","prototype","call","_update","model","get","parent","Galaxy","currHistoryPanel","listenTo","collection","$el","on","_destroy","callback","reset","execute","process","then","_render","off","hide","remove","emit","debug","attributes","title","fixed_title","name","description","version","operations","hide_operations","_operations","set","$","addClass","append","_footer","show_message","message","update","status","id","versions_button","_uiMisc2","ButtonMenu","icon","narrow","versions","addMenu","onclick","replace","biostar_url","window","tooltip","citation_list_view","open","prompt","menu_button","origin","root","persistent","location","href","_utils2","url","success","response","requirements_visible","portlet","collapsed","sharable_url","expand","_templateRequirements","func","getJSON","webhooks","menu","webhook","config","Function","_templateHelp","$citations","citations","$tmpl","find","attr","_citationModel2","ToolCitationCollection","tool_id","_citationView2","CitationListView","nreq","requirements","requirements_message","help","length","_","each","req","i","requirements_link","text"],"mappings":"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","file":"../../../scripts/mvc/tool/tool-form-base.js","sourcesContent":["/**\n    This is the base class of the tool form plugin. This class is e.g. inherited by the regular and the workflow tool form.\n*/\nimport Utils from \"utils/utils\";\nimport Deferred from \"utils/deferred\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport FormBase from \"mvc/form/form-view\";\nimport CitationModel from \"mvc/citation/citation-model\";\nimport CitationView from \"mvc/citation/citation-view\";\nexport default FormBase.extend({\n    initialize: function(options) {\n        var self = this;\n        this.deferred = new Deferred();\n        FormBase.prototype.initialize.call(this, options);\n\n        // optional model update\n        this._update(this.model.get(\"initialmodel\"));\n\n        // listen to history panel\n        if (\n            this.model.get(\"listen_to_history\") &&\n            parent.Galaxy &&\n            parent.Galaxy.currHistoryPanel\n        ) {\n            this.listenTo(\n                parent.Galaxy.currHistoryPanel.collection,\n                \"change\",\n                () => {\n                    self.model.get(\"onchange\")();\n                }\n            );\n        }\n        // destroy dom elements\n        this.$el.on(\"remove\", () => {\n            self._destroy();\n        });\n    },\n\n    /** Allows tool form variation to update tool model */\n    _update: function(callback) {\n        var self = this;\n        callback = callback || this.model.get(\"buildmodel\");\n        if (callback) {\n            this.deferred.reset();\n            this.deferred.execute(process => {\n                callback(process, self);\n                process.then(() => {\n                    self._render();\n                });\n            });\n        } else {\n            this._render();\n        }\n    },\n\n    /** Wait for deferred build processes before removal */\n    _destroy: function() {\n        var self = this;\n        this.$el.off().hide();\n        this.deferred.execute(() => {\n            FormBase.prototype.remove.call(self);\n            Galaxy.emit.debug(\"tool-form-base::_destroy()\", \"Destroy view.\");\n        });\n    },\n\n    /** Build form */\n    _render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.model.set({\n            title:\n                options.fixed_title ||\n                `<b>${options.name}</b> ${options.description} (Galaxy Version ${options.version})`,\n            operations: !options.hide_operations && this._operations(),\n            onchange: function() {\n                self.deferred.reset();\n                self.deferred.execute(process => {\n                    self.model.get(\"postchange\")(process, self);\n                });\n            }\n        });\n        this.render();\n        if (!this.model.get(\"collapsible\")) {\n            this.$el.append(\n                $(\"<div/>\")\n                    .addClass(\"ui-margin-top-large\")\n                    .append(this._footer())\n            );\n        }\n        this.show_message &&\n            this.message.update({\n                status: \"success\",\n                message: `Now you are using '${options.name}' version ${options.version}, id '${options.id}'.`,\n                persistent: false\n            });\n        this.show_message = true;\n    },\n\n    /** Create tool operation menu */\n    _operations: function() {\n        var self = this;\n        var options = this.model.attributes;\n\n        // button for version selection\n        var versions_button = new Ui.ButtonMenu({\n            icon: \"fa-cubes\",\n            title: (!options.narrow && \"Versions\") || null,\n            tooltip: \"Select another tool version\"\n        });\n        if (\n            !options.sustain_version &&\n            options.versions &&\n            options.versions.length > 1\n        ) {\n            for (var i in options.versions) {\n                var version = options.versions[i];\n                if (version != options.version) {\n                    versions_button.addMenu({\n                        title: `Switch to ${version}`,\n                        version: version,\n                        icon: \"fa-cube\",\n                        onclick: function() {\n                            // here we update the tool version (some tools encode the version also in the id)\n                            self.model.set(\n                                \"id\",\n                                options.id.replace(\n                                    options.version,\n                                    this.version\n                                )\n                            );\n                            self.model.set(\"version\", this.version);\n                            self._update();\n                        }\n                    });\n                }\n            }\n        } else {\n            versions_button.$el.hide();\n        }\n\n        // button for options e.g. search, help\n        var menu_button = new Ui.ButtonMenu({\n            icon: \"fa-caret-down\",\n            title: (!options.narrow && \"Options\") || null,\n            tooltip: \"View available options\"\n        });\n        if (options.biostar_url) {\n            menu_button.addMenu({\n                icon: \"fa-question-circle\",\n                title: \"Question?\",\n                onclick: function() {\n                    window.open(`${options.biostar_url}/p/new/post/`);\n                }\n            });\n            menu_button.addMenu({\n                icon: \"fa-search\",\n                title: \"Search\",\n                onclick: function() {\n                    window.open(\n                        `${options.biostar_url}/local/search/page/?q=${options.name}`\n                    );\n                }\n            });\n        }\n        menu_button.addMenu({\n            icon: \"fa-share\",\n            title: \"Share\",\n            onclick: function() {\n                prompt(\n                    \"Copy to clipboard: Ctrl+C, Enter\",\n                    `${window.location.origin +\n                        Galaxy.root}root?tool_id=${options.id}`\n                );\n            }\n        });\n\n        // add admin operations\n        if (Galaxy.user && Galaxy.user.get(\"is_admin\")) {\n            menu_button.addMenu({\n                icon: \"fa-download\",\n                title: \"Download\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}api/tools/${options.id}/download`;\n                }\n            });\n            menu_button.addMenu({\n                icon: \"fa-refresh\",\n                title: \"Reload XML\",\n                onclick: function() {\n                    Utils.get({\n                        url: `${Galaxy.root}api/tools/${options.id}/reload`,\n                        success: function(response) {\n                            self.message.update({\n                                persistent: false,\n                                message: \"Tool XML has been reloaded.\",\n                                status: \"success\"\n                            });\n                        },\n                        error: function(response) {\n                            self.message.update({\n                                persistent: false,\n                                message: response.err_msg,\n                                status: \"danger\"\n                            });\n                        }\n                    });\n                }\n            });\n        }\n\n        // button for version selection\n        if (options.requirements && options.requirements.length > 0) {\n            menu_button.addMenu({\n                icon: \"fa-info-circle\",\n                title: \"Requirements\",\n                onclick: function() {\n                    if (!this.requirements_visible || self.portlet.collapsed) {\n                        this.requirements_visible = true;\n                        self.portlet.expand();\n                        self.message.update({\n                            persistent: true,\n                            message: self._templateRequirements(options),\n                            status: \"info\"\n                        });\n                    } else {\n                        this.requirements_visible = false;\n                        self.message.update({ message: \"\" });\n                    }\n                }\n            });\n        }\n\n        // add toolshed url\n        if (options.sharable_url) {\n            menu_button.addMenu({\n                icon: \"fa-external-link\",\n                title: \"See in Tool Shed\",\n                onclick: function() {\n                    window.open(options.sharable_url);\n                }\n            });\n        }\n\n        // add tool menu webhooks\n        $.getJSON(\"/api/webhooks/tool-menu/all\", webhooks => {\n            _.each(webhooks, webhook => {\n                if (webhook.activate && webhook.config.function) {\n                    menu_button.addMenu({\n                        icon: webhook.config.icon,\n                        title: webhook.config.title,\n                        onclick: function() {\n                            var func = new Function(\n                                \"options\",\n                                webhook.config.function\n                            );\n                            func(options);\n                        }\n                    });\n                }\n            });\n        });\n\n        return {\n            menu: menu_button,\n            versions: versions_button\n        };\n    },\n\n    /** Create footer */\n    _footer: function() {\n        var options = this.model.attributes;\n        var $el = $(\"<div/>\").append(this._templateHelp(options));\n        if (options.citations) {\n            var $citations = $(\"<div/>\");\n            var citations = new CitationModel.ToolCitationCollection();\n            citations.tool_id = options.id;\n            var citation_list_view = new CitationView.CitationListView({\n                el: $citations,\n                collection: citations\n            });\n            citation_list_view.render();\n            citations.fetch();\n            $el.append($citations);\n        }\n        return $el;\n    },\n\n    /** Templates */\n    _templateHelp: function(options) {\n        var $tmpl = $(\"<div/>\")\n            .addClass(\"ui-form-help\")\n            .append(options.help);\n        $tmpl.find(\"a\").attr(\"target\", \"_blank\");\n        return $tmpl;\n    },\n\n    _templateRequirements: function(options) {\n        var nreq = options.requirements.length;\n        if (nreq > 0) {\n            var requirements_message = \"This tool requires \";\n            _.each(options.requirements, (req, i) => {\n                requirements_message +=\n                    req.name +\n                    (req.version ? ` (Version ${req.version})` : \"\") +\n                    (i < nreq - 2 ? \", \" : i == nreq - 2 ? \" and \" : \"\");\n            });\n            var requirements_link = $(\"<a/>\")\n                .attr(\"target\", \"_blank\")\n                .attr(\"href\", \"https://galaxyproject.org/tools/requirements/\")\n                .text(\"here\");\n            return $(\"<span/>\")\n                .append(`${requirements_message}. Click `)\n                .append(requirements_link)\n                .append(\" for more information.\");\n        }\n        return \"No requirements found.\";\n    }\n});\n"]}