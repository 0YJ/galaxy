{"version":3,"sources":["mvc/tool/tool-form-base.js"],"names":["define","Utils","Deferred","Ui","FormBase","CitationModel","CitationView","extend","initialize","options","self","this","deferred","prototype","call","model","get","_buildForm","attributes","execute","process","_buildModel","parent","Galaxy","currHistoryPanel","listenTo","collection","$el","on","remove","hide","emit","debug","set","title","name","description","version","operations","_operations","onchange","reset","render","append","$","addClass","_footer","new_options","hide_message","id","build_url","build_data","job_id","root","params","tool_id","url","data","success","display","window","location","message","update","status","persistent","resolve","error","response","error_message","err_msg","param","redirect","is","prepend","Message","large","modal","show","body","buttons","Close","reject","versions_button","ButtonMenu","icon","narrow","tooltip","sustain_version","versions","length","i","addMenu","onclick","replace","menu_button","biostar_url","open","prompt","origin","user","href","requirements","requirements_visible","portlet","collapsed","expand","_templateRequirements","sharable_url","menu","_templateHelp","citations","$citations","ToolCitationCollection","CitationListView","el","fetch","$tmpl","help","find","attr","nreq","requirements_message","_","each","req","requirements_link","text"],"mappings":"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","file":"../../../scripts/mvc/tool/tool-form-base.js","sourcesContent":["/**\n    This is the base class of the tool form plugin. This class is e.g. inherited by the regular and the workflow tool form.\n*/\ndefine( [ 'utils/utils', 'utils/deferred', 'mvc/ui/ui-misc', 'mvc/form/form-view', 'mvc/citation/citation-model', 'mvc/citation/citation-view' ],\n    function( Utils, Deferred, Ui, FormBase, CitationModel, CitationView ) {\n    return FormBase.extend({\n        initialize: function( options ) {\n            var self = this;\n            this.deferred = new Deferred();\n            FormBase.prototype.initialize.call( this, options );\n            if ( this.model.get( 'inputs' ) ) {\n                this._buildForm( this.model.attributes );\n            } else {\n                this.deferred.execute( function( process ) {\n                    self._buildModel( process, self.model.attributes, true );\n                });\n            }\n            // listen to history panel\n            if ( this.model.get( 'listen_to_history' ) && parent.Galaxy && parent.Galaxy.currHistoryPanel ) {\n                this.listenTo( parent.Galaxy.currHistoryPanel.collection, 'change', function() {\n                    self.model.get( 'onchange' )();\n                });\n            }\n            // destroy dom elements\n            this.$el.on( 'remove', function() { self.remove() } );\n        },\n\n        /** Wait for deferred build processes before removal */\n        remove: function() {\n            var self = this;\n            this.$el.hide();\n            this.deferred.execute( function() {\n                FormBase.prototype.remove.call( self );\n                Galaxy.emit.debug( 'tool-form-base::remove()', 'Destroy view.' );\n            });\n        },\n\n        /** Build form */\n        _buildForm: function( options ) {\n            var self = this;\n            this.model.set( options );\n            this.model.set({\n                title       : options.title || '<b>' + options.name + '</b> ' + options.description + ' (Galaxy Version ' + options.version + ')',\n                operations  : !this.model.get( 'hide_operations' ) && this._operations(),\n                onchange    : function() {\n                    self.deferred.reset();\n                    self.deferred.execute( function ( process ) {\n                        self.model.get( 'postchange' )( process, self );\n                    });\n                }\n            });\n            this.model.get( 'customize' ) && this.model.get( 'customize' )( this );\n            this.render();\n            if ( !this.model.get( 'collapsible' ) ) {\n                this.$el.append( $( '<div/>' ).addClass( 'ui-margin-top-large' ).append( this._footer() ) );\n            }\n        },\n\n        /** Builds a new model through api call and recreates the entire form */\n        _buildModel: function( process, new_options, hide_message ) {\n            var self = this;\n            var options = this.model.attributes;\n            options.version = new_options.version;\n            options.id = new_options.id;\n\n            // build request url\n            var build_url = '';\n            var build_data = {};\n            if ( options.job_id ) {\n                build_url = Galaxy.root + 'api/jobs/' + options.job_id + '/build_for_rerun';\n            } else {\n                build_url = Galaxy.root + 'api/tools/' + options.id + '/build';\n                if ( Galaxy.params && Galaxy.params.tool_id == options.id ) {\n                    build_data = $.extend( {}, Galaxy.params );\n                    options.version && ( build_data[ 'tool_version' ] = options.version );\n                }\n            }\n\n            // get initial model\n            Utils.get({\n                url     : build_url,\n                data    : build_data,\n                success : function( data ) {\n                    if( !data.display ) {\n                        window.location = Galaxy.root;\n                        return;\n                    }\n                    self._buildForm( data );\n                    !hide_message && self.message.update({\n                        status      : 'success',\n                        message     : 'Now you are using \\'' + options.name + '\\' version ' + options.version + ', id \\'' + options.id + '\\'.',\n                        persistent  : false\n                    });\n                    Galaxy.emit.debug('tool-form-base::_buildModel()', 'Initial tool model ready.', data);\n                    process.resolve();\n                },\n                error   : function( response, status ) {\n                    var error_message = ( response && response.err_msg ) || 'Uncaught error.';\n                    if ( status == 401 ) {\n                        window.location = Galaxy.root + 'user/login?' + $.param({ redirect : Galaxy.root + '?tool_id=' + options.id });\n                    } else if ( self.$el.is( ':empty' ) ) {\n                        self.$el.prepend( ( new Ui.Message({\n                            message     : error_message,\n                            status      : 'danger',\n                            persistent  : true,\n                            large       : true\n                        }) ).$el );\n                    } else {\n                        Galaxy.modal && Galaxy.modal.show({\n                            title   : 'Tool request failed',\n                            body    : error_message,\n                            buttons : {\n                                'Close' : function() {\n                                    Galaxy.modal.hide();\n                                }\n                            }\n                        });\n                    }\n                    Galaxy.emit.debug( 'tool-form-base::_buildModel()', 'Initial tool model request failed.', response );\n                    process.reject();\n                }\n            });\n        },\n\n        /** Create tool operation menu */\n        _operations: function() {\n            var self = this;\n            var options = this.model.attributes;\n\n            // button for version selection\n            var versions_button = new Ui.ButtonMenu({\n                icon    : 'fa-cubes',\n                title   : ( !options.narrow && 'Versions' ) || null,\n                tooltip : 'Select another tool version'\n            });\n            if ( !options.sustain_version && options.versions && options.versions.length > 1 ) {\n                for ( var i in options.versions ) {\n                    var version = options.versions[ i ];\n                    if ( version != options.version ) {\n                        versions_button.addMenu({\n                            title   : 'Switch to ' + version,\n                            version : version,\n                            icon    : 'fa-cube',\n                            onclick : function() {\n                                // here we update the tool version (some tools encode the version also in the id)\n                                var id = options.id.replace( options.version, this.version );\n                                var version = this.version;\n                                // queue model request\n                                self.deferred.reset();\n                                self.deferred.execute( function( process ) {\n                                    self._buildModel( process, { id : id, version : version } )\n                                });\n                            }\n                        });\n                    }\n                }\n            } else {\n                versions_button.$el.hide();\n            }\n\n            // button for options e.g. search, help\n            var menu_button = new Ui.ButtonMenu({\n                icon    : 'fa-caret-down',\n                title   : ( !options.narrow && 'Options' ) || null,\n                tooltip : 'View available options'\n            });\n            if ( options.biostar_url ) {\n                menu_button.addMenu({\n                    icon    : 'fa-question-circle',\n                    title   : 'Question?',\n                    onclick : function() {\n                        window.open( options.biostar_url + '/p/new/post/' );\n                    }\n                });\n                menu_button.addMenu({\n                    icon    : 'fa-search',\n                    title   : 'Search',\n                    onclick : function() {\n                        window.open( options.biostar_url + '/local/search/page/?q=' + options.name );\n                    }\n                });\n            };\n            menu_button.addMenu({\n                icon    : 'fa-share',\n                title   : 'Share',\n                onclick : function() {\n                    prompt( 'Copy to clipboard: Ctrl+C, Enter', window.location.origin + Galaxy.root + 'root?tool_id=' + options.id );\n                }\n            });\n\n            // add admin operations\n            if ( Galaxy.user && Galaxy.user.get( 'is_admin' ) ) {\n                menu_button.addMenu({\n                    icon    : 'fa-download',\n                    title   : 'Download',\n                    onclick : function() {\n                        window.location.href = Galaxy.root + 'api/tools/' + options.id + '/download';\n                    }\n                });\n                menu_button.addMenu({\n                    icon    : 'fa-refresh',\n                    title   : 'Reload XML',\n                    onclick : function() {\n                        Utils.get({\n                            url     : Galaxy.root + 'api/tools/' + options.id + '/reload',\n                            success : function( response ) {\n                                self.message.update( { persistent : false, message : 'Tool XML has been reloaded.', status : 'success' } );\n                            },\n                            error   : function( response ) {\n                                self.message.update( { persistent : false, message : response.err_msg, status : 'danger' } );\n                            }\n                        });\n                    }\n                });\n            }\n\n            // button for version selection\n            if ( options.requirements && options.requirements.length > 0 ) {\n                menu_button.addMenu({\n                    icon    : 'fa-info-circle',\n                    title   : 'Requirements',\n                    onclick : function() {\n                        if ( !this.requirements_visible || self.portlet.collapsed ) {\n                            this.requirements_visible = true;\n                            self.portlet.expand();\n                            self.message.update( { persistent : true, message : self._templateRequirements( options ), status : 'info' } );\n                        } else {\n                            this.requirements_visible = false;\n                            self.message.update( { message : '' } );\n                        }\n                    }\n                });\n            }\n\n            // add toolshed url\n            if ( options.sharable_url ) {\n                menu_button.addMenu({\n                    icon    : 'fa-external-link',\n                    title   : 'See in Tool Shed',\n                    onclick : function() {\n                        window.open( options.sharable_url );\n                    }\n                });\n            }\n\n            return {\n                menu        : menu_button,\n                versions    : versions_button\n            }\n        },\n\n        /** Create footer */\n        _footer: function() {\n            var options = this.model.attributes;\n            var $el = $( '<div/>' ).append( this._templateHelp( options ) );\n            if ( options.citations ) {\n                var $citations = $( '<div/>' );\n                var citations = new CitationModel.ToolCitationCollection();\n                citations.tool_id = options.id;\n                var citation_list_view = new CitationView.CitationListView({ el: $citations, collection: citations });\n                citation_list_view.render();\n                citations.fetch();\n                $el.append( $citations );\n            }\n            return $el;\n        },\n\n        /** Templates */\n        _templateHelp: function( options ) {\n            var $tmpl = $( '<div/>' ).addClass( 'ui-form-help' ).append( options.help );\n            $tmpl.find( 'a' ).attr( 'target', '_blank' );\n            return $tmpl;\n        },\n\n        _templateRequirements: function( options ) {\n            var nreq = options.requirements.length;\n            if ( nreq > 0 ) {\n                var requirements_message = 'This tool requires ';\n                _.each( options.requirements, function( req, i ) {\n                    requirements_message += req.name + ( req.version ? ' (Version ' + req.version + ')' : '' ) + ( i < nreq - 2 ? ', ' : ( i == nreq - 2 ? ' and ' : '' ) );\n                });\n                var requirements_link = $( '<a/>' ).attr( 'target', '_blank' ).attr( 'href', 'https://wiki.galaxyproject.org/Tools/Requirements' ).text( 'here' );\n                return $( '<span/>' ).append( requirements_message + '. Click ' ).append( requirements_link ).append( ' for more information.' );\n            }\n            return 'No requirements found.';\n        }\n    });\n});\n"]}