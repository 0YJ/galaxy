{"version":3,"sources":["mvc/tool/tool-form-base.js"],"names":["_utils","require","_deferred","_uiMisc","_formView","_citationModel","_citationView","_formView2","default","extend","initialize","options","self","this","deferred","_deferred2","prototype","call","_update","model","get","parent","Galaxy","currHistoryPanel","listenTo","collection","$el","on","_destroy","callback","reset","execute","process","hide","remove","_render","attributes","title","fixed_title","name","description","debug","hide_operations","_operations","onchange","operations","show_message","message","update","render","version","persistent","id","narrow","_uiMisc2","ButtonMenu","tooltip","sustain_version","versions_button","icon","versions","onclick","i","set","replace","menu_button","window","addMenu","open","biostar_url","prompt","url","root","success","status","location","href","requirements","response","requirements_visible","portlet","expand","err_msg","length","collapsed","webhook","activate","sharable_url","menu","$","getJSON","_templateHelp","$citations","config","function","citations","tool_id","citation_list_view","$tmpl","_footer","nreq","requirements_message","_","requirements_link","attr","append","_citationView2","CitationListView","el","fetch","addClass","help","find","_templateRequirements","each","req","text"],"mappings":"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","file":"../../../scripts/mvc/tool/tool-form-base.js","sourcesContent":["/**\n    This is the base class of the tool form plugin. This class is e.g. inherited by the regular and the workflow tool form.\n*/\nimport Utils from \"utils/utils\";\nimport Deferred from \"utils/deferred\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport FormBase from \"mvc/form/form-view\";\nimport CitationModel from \"mvc/citation/citation-model\";\nimport CitationView from \"mvc/citation/citation-view\";\nexport default FormBase.extend({\n    initialize: function(options) {\n        var self = this;\n        this.deferred = new Deferred();\n        FormBase.prototype.initialize.call(this, options);\n\n        // optional model update\n        this._update(this.model.get(\"initialmodel\"));\n\n        // listen to history panel\n        if (\n            this.model.get(\"listen_to_history\") &&\n            parent.Galaxy &&\n            parent.Galaxy.currHistoryPanel\n        ) {\n            this.listenTo(\n                parent.Galaxy.currHistoryPanel.collection,\n                \"change\",\n                function() {\n                    self.model.get(\"onchange\")();\n                }\n            );\n        }\n        // destroy dom elements\n        this.$el.on(\"remove\", function() {\n            self._destroy();\n        });\n    },\n\n    /** Allows tool form variation to update tool model */\n    _update: function(callback) {\n        var self = this;\n        callback = callback || this.model.get(\"buildmodel\");\n        if (callback) {\n            this.deferred.reset();\n            this.deferred.execute(function(process) {\n                callback(process, self);\n                process.then(function() {\n                    self._render();\n                });\n            });\n        } else {\n            this._render();\n        }\n    },\n\n    /** Wait for deferred build processes before removal */\n    _destroy: function() {\n        var self = this;\n        this.$el.off().hide();\n        this.deferred.execute(function() {\n            FormBase.prototype.remove.call(self);\n            Galaxy.emit.debug(\"tool-form-base::_destroy()\", \"Destroy view.\");\n        });\n    },\n\n    /** Build form */\n    _render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.model.set({\n            title:\n                options.fixed_title ||\n                \"<b>\" +\n                    options.name +\n                    \"</b> \" +\n                    options.description +\n                    \" (Galaxy Version \" +\n                    options.version +\n                    \")\",\n            operations: !options.hide_operations && this._operations(),\n            onchange: function() {\n                self.deferred.reset();\n                self.deferred.execute(function(process) {\n                    self.model.get(\"postchange\")(process, self);\n                });\n            }\n        });\n        this.render();\n        if (!this.model.get(\"collapsible\")) {\n            this.$el.append(\n                $(\"<div/>\")\n                    .addClass(\"ui-margin-top-large\")\n                    .append(this._footer())\n            );\n        }\n        this.show_message &&\n            this.message.update({\n                status: \"success\",\n                message:\n                    \"Now you are using '\" +\n                    options.name +\n                    \"' version \" +\n                    options.version +\n                    \", id '\" +\n                    options.id +\n                    \"'.\",\n                persistent: false\n            });\n        this.show_message = true;\n    },\n\n    /** Create tool operation menu */\n    _operations: function() {\n        var self = this;\n        var options = this.model.attributes;\n\n        // button for version selection\n        var versions_button = new Ui.ButtonMenu({\n            icon: \"fa-cubes\",\n            title: (!options.narrow && \"Versions\") || null,\n            tooltip: \"Select another tool version\"\n        });\n        if (\n            !options.sustain_version &&\n            options.versions &&\n            options.versions.length > 1\n        ) {\n            for (var i in options.versions) {\n                var version = options.versions[i];\n                if (version != options.version) {\n                    versions_button.addMenu({\n                        title: \"Switch to \" + version,\n                        version: version,\n                        icon: \"fa-cube\",\n                        onclick: function() {\n                            // here we update the tool version (some tools encode the version also in the id)\n                            self.model.set(\n                                \"id\",\n                                options.id.replace(\n                                    options.version,\n                                    this.version\n                                )\n                            );\n                            self.model.set(\"version\", this.version);\n                            self._update();\n                        }\n                    });\n                }\n            }\n        } else {\n            versions_button.$el.hide();\n        }\n\n        // button for options e.g. search, help\n        var menu_button = new Ui.ButtonMenu({\n            icon: \"fa-caret-down\",\n            title: (!options.narrow && \"Options\") || null,\n            tooltip: \"View available options\"\n        });\n        if (options.biostar_url) {\n            menu_button.addMenu({\n                icon: \"fa-question-circle\",\n                title: \"Question?\",\n                onclick: function() {\n                    window.open(options.biostar_url + \"/p/new/post/\");\n                }\n            });\n            menu_button.addMenu({\n                icon: \"fa-search\",\n                title: \"Search\",\n                onclick: function() {\n                    window.open(\n                        options.biostar_url +\n                            \"/local/search/page/?q=\" +\n                            options.name\n                    );\n                }\n            });\n        }\n        menu_button.addMenu({\n            icon: \"fa-share\",\n            title: \"Share\",\n            onclick: function() {\n                prompt(\n                    \"Copy to clipboard: Ctrl+C, Enter\",\n                    window.location.origin +\n                        Galaxy.root +\n                        \"root?tool_id=\" +\n                        options.id\n                );\n            }\n        });\n\n        // add admin operations\n        if (Galaxy.user && Galaxy.user.get(\"is_admin\")) {\n            menu_button.addMenu({\n                icon: \"fa-download\",\n                title: \"Download\",\n                onclick: function() {\n                    window.location.href =\n                        Galaxy.root + \"api/tools/\" + options.id + \"/download\";\n                }\n            });\n            menu_button.addMenu({\n                icon: \"fa-refresh\",\n                title: \"Reload XML\",\n                onclick: function() {\n                    Utils.get({\n                        url:\n                            Galaxy.root + \"api/tools/\" + options.id + \"/reload\",\n                        success: function(response) {\n                            self.message.update({\n                                persistent: false,\n                                message: \"Tool XML has been reloaded.\",\n                                status: \"success\"\n                            });\n                        },\n                        error: function(response) {\n                            self.message.update({\n                                persistent: false,\n                                message: response.err_msg,\n                                status: \"danger\"\n                            });\n                        }\n                    });\n                }\n            });\n        }\n\n        // button for version selection\n        if (options.requirements && options.requirements.length > 0) {\n            menu_button.addMenu({\n                icon: \"fa-info-circle\",\n                title: \"Requirements\",\n                onclick: function() {\n                    if (!this.requirements_visible || self.portlet.collapsed) {\n                        this.requirements_visible = true;\n                        self.portlet.expand();\n                        self.message.update({\n                            persistent: true,\n                            message: self._templateRequirements(options),\n                            status: \"info\"\n                        });\n                    } else {\n                        this.requirements_visible = false;\n                        self.message.update({ message: \"\" });\n                    }\n                }\n            });\n        }\n\n        // add toolshed url\n        if (options.sharable_url) {\n            menu_button.addMenu({\n                icon: \"fa-external-link\",\n                title: \"See in Tool Shed\",\n                onclick: function() {\n                    window.open(options.sharable_url);\n                }\n            });\n        }\n\n        // add tool menu webhooks\n        $.getJSON(\"/api/webhooks/tool-menu/all\", function(webhooks) {\n            _.each(webhooks, function(webhook) {\n                if (webhook.activate && webhook.config.function) {\n                    menu_button.addMenu({\n                        icon: webhook.config.icon,\n                        title: webhook.config.title,\n                        onclick: function() {\n                            var func = new Function(\n                                \"options\",\n                                webhook.config.function\n                            );\n                            func(options);\n                        }\n                    });\n                }\n            });\n        });\n\n        return {\n            menu: menu_button,\n            versions: versions_button\n        };\n    },\n\n    /** Create footer */\n    _footer: function() {\n        var options = this.model.attributes;\n        var $el = $(\"<div/>\").append(this._templateHelp(options));\n        if (options.citations) {\n            var $citations = $(\"<div/>\");\n            var citations = new CitationModel.ToolCitationCollection();\n            citations.tool_id = options.id;\n            var citation_list_view = new CitationView.CitationListView({\n                el: $citations,\n                collection: citations\n            });\n            citation_list_view.render();\n            citations.fetch();\n            $el.append($citations);\n        }\n        return $el;\n    },\n\n    /** Templates */\n    _templateHelp: function(options) {\n        var $tmpl = $(\"<div/>\")\n            .addClass(\"ui-form-help\")\n            .append(options.help);\n        $tmpl.find(\"a\").attr(\"target\", \"_blank\");\n        return $tmpl;\n    },\n\n    _templateRequirements: function(options) {\n        var nreq = options.requirements.length;\n        if (nreq > 0) {\n            var requirements_message = \"This tool requires \";\n            _.each(options.requirements, function(req, i) {\n                requirements_message +=\n                    req.name +\n                    (req.version ? \" (Version \" + req.version + \")\" : \"\") +\n                    (i < nreq - 2 ? \", \" : i == nreq - 2 ? \" and \" : \"\");\n            });\n            var requirements_link = $(\"<a/>\")\n                .attr(\"target\", \"_blank\")\n                .attr(\"href\", \"https://galaxyproject.org/tools/requirements/\")\n                .text(\"here\");\n            return $(\"<span/>\")\n                .append(requirements_message + \". Click \")\n                .append(requirements_link)\n                .append(\" for more information.\");\n        }\n        return \"No requirements found.\";\n    }\n});\n"]}