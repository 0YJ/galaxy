{"version":3,"sources":["mvc/tool/tool-form-base.js"],"names":["define","Utils","Deferred","Ui","FormBase","CitationModel","CitationView","extend","initialize","options","this","self","deferred","call","_update","model","get","parent","Galaxy","currHistoryPanel","listenTo","$el","on","_destroy","callback","reset","process","_render","off","hide","execute","prototype","remove","emit","debug","attributes","set","title","fixed_title","name","description","version","hide_operations","_operations","append","$","addClass","_footer","show_message","message","update","status","id","persistent","ButtonMenu","tooltip","versions_button","versions","length","icon","i","narrow","addMenu","sustain_version","replace","menu_button","onclick","biostar_url","window","open","prompt","location","origin","root","user","success","response","url","err_msg","requirements","collapsed","portlet","expand","_templateRequirements","requirements_visible","sharable_url","getJSON","webhooks","_","each","webhook","activate","config","function","menu","_templateHelp","citations","$citations","ToolCitationCollection","tool_id","el","collection","render","$tmpl","help","find","attr","nreq","requirements_message","req","text","requirements_link"],"mappings":"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","file":"../../../scripts/mvc/tool/tool-form-base.js","sourcesContent":["/**\n    This is the base class of the tool form plugin. This class is e.g. inherited by the regular and the workflow tool form.\n*/\ndefine( [ 'utils/utils', 'utils/deferred', 'mvc/ui/ui-misc', 'mvc/form/form-view', 'mvc/citation/citation-model', 'mvc/citation/citation-view' ],\n    function( Utils, Deferred, Ui, FormBase, CitationModel, CitationView ) {\n    return FormBase.extend({\n        initialize: function( options ) {\n            var self = this;\n            this.deferred = new Deferred();\n            FormBase.prototype.initialize.call( this, options );\n\n            // optional model update\n            this._update( this.model.get( 'initialmodel' ) );\n\n            // listen to history panel\n            if ( this.model.get( 'listen_to_history' ) && parent.Galaxy && parent.Galaxy.currHistoryPanel ) {\n                this.listenTo( parent.Galaxy.currHistoryPanel.collection, 'change', function() {\n                    self.model.get( 'onchange' )();\n                });\n            }\n            // destroy dom elements\n            this.$el.on( 'remove', function() { self._destroy() } );\n        },\n\n        /** Allows tool form variation to update tool model */\n        _update: function( callback ) {\n            var self = this;\n            callback = callback || this.model.get( 'buildmodel' );\n            if ( callback ) {\n                this.deferred.reset();\n                this.deferred.execute( function( process ) {\n                    callback( process, self );\n                    process.then( function() { self._render() } );\n                });\n            } else {\n                this._render();\n            }\n        },\n\n        /** Wait for deferred build processes before removal */\n        _destroy: function() {\n            var self = this;\n            this.$el.off().hide();\n            this.deferred.execute( function() {\n                FormBase.prototype.remove.call( self );\n                Galaxy.emit.debug( 'tool-form-base::_destroy()', 'Destroy view.' );\n            });\n        },\n\n        /** Build form */\n        _render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.model.set({\n                title       : options.fixed_title || '<b>' + options.name + '</b> ' + options.description + ' (Galaxy Version ' + options.version + ')',\n                operations  : !options.hide_operations && this._operations(),\n                onchange    : function() {\n                    self.deferred.reset();\n                    self.deferred.execute( function ( process ) {\n                        self.model.get( 'postchange' )( process, self );\n                    });\n                }\n            });\n            this.render();\n            if ( !this.model.get( 'collapsible' ) ) {\n                this.$el.append( $( '<div/>' ).addClass( 'ui-margin-top-large' ).append( this._footer() ) );\n            }\n            this.show_message && this.message.update({\n                status      : 'success',\n                message     : 'Now you are using \\'' + options.name + '\\' version ' + options.version + ', id \\'' + options.id + '\\'.',\n                persistent  : false\n            });\n            this.show_message = true;\n        },\n\n        /** Create tool operation menu */\n        _operations: function() {\n            var self = this;\n            var options = this.model.attributes;\n\n            // button for version selection\n            var versions_button = new Ui.ButtonMenu({\n                icon    : 'fa-cubes',\n                title   : ( !options.narrow && 'Versions' ) || null,\n                tooltip : 'Select another tool version'\n            });\n            if ( !options.sustain_version && options.versions && options.versions.length > 1 ) {\n                for ( var i in options.versions ) {\n                    var version = options.versions[ i ];\n                    if ( version != options.version ) {\n                        versions_button.addMenu({\n                            title   : 'Switch to ' + version,\n                            version : version,\n                            icon    : 'fa-cube',\n                            onclick : function() {\n                                // here we update the tool version (some tools encode the version also in the id)\n                                self.model.set( 'id', options.id.replace( options.version, this.version ) );\n                                self.model.set( 'version', this.version );\n                                self._update();\n                            }\n                        });\n                    }\n                }\n            } else {\n                versions_button.$el.hide();\n            }\n\n            // button for options e.g. search, help\n            var menu_button = new Ui.ButtonMenu({\n                icon    : 'fa-caret-down',\n                title   : ( !options.narrow && 'Options' ) || null,\n                tooltip : 'View available options'\n            });\n            if ( options.biostar_url ) {\n                menu_button.addMenu({\n                    icon    : 'fa-question-circle',\n                    title   : 'Question?',\n                    onclick : function() {\n                        window.open( options.biostar_url + '/p/new/post/' );\n                    }\n                });\n                menu_button.addMenu({\n                    icon    : 'fa-search',\n                    title   : 'Search',\n                    onclick : function() {\n                        window.open( options.biostar_url + '/local/search/page/?q=' + options.name );\n                    }\n                });\n            };\n            menu_button.addMenu({\n                icon    : 'fa-share',\n                title   : 'Share',\n                onclick : function() {\n                    prompt( 'Copy to clipboard: Ctrl+C, Enter', window.location.origin + Galaxy.root + 'root?tool_id=' + options.id );\n                }\n            });\n\n            // add admin operations\n            if ( Galaxy.user && Galaxy.user.get( 'is_admin' ) ) {\n                menu_button.addMenu({\n                    icon    : 'fa-download',\n                    title   : 'Download',\n                    onclick : function() {\n                        window.location.href = Galaxy.root + 'api/tools/' + options.id + '/download';\n                    }\n                });\n                menu_button.addMenu({\n                    icon    : 'fa-refresh',\n                    title   : 'Reload XML',\n                    onclick : function() {\n                        Utils.get({\n                            url     : Galaxy.root + 'api/tools/' + options.id + '/reload',\n                            success : function( response ) {\n                                self.message.update( { persistent : false, message : 'Tool XML has been reloaded.', status : 'success' } );\n                            },\n                            error   : function( response ) {\n                                self.message.update( { persistent : false, message : response.err_msg, status : 'danger' } );\n                            }\n                        });\n                    }\n                });\n            }\n\n            // button for version selection\n            if ( options.requirements && options.requirements.length > 0 ) {\n                menu_button.addMenu({\n                    icon    : 'fa-info-circle',\n                    title   : 'Requirements',\n                    onclick : function() {\n                        if ( !this.requirements_visible || self.portlet.collapsed ) {\n                            this.requirements_visible = true;\n                            self.portlet.expand();\n                            self.message.update( { persistent : true, message : self._templateRequirements( options ), status : 'info' } );\n                        } else {\n                            this.requirements_visible = false;\n                            self.message.update( { message : '' } );\n                        }\n                    }\n                });\n            }\n\n            // add toolshed url\n            if ( options.sharable_url ) {\n                menu_button.addMenu({\n                    icon    : 'fa-external-link',\n                    title   : 'See in Tool Shed',\n                    onclick : function() {\n                        window.open( options.sharable_url );\n                    }\n                });\n            }\n\n            // add tool menu webhooks\n            $.getJSON('/api/webhooks/tool-menu/all', function(webhooks) {\n                _.each(webhooks, function(webhook) {\n                    if (webhook.activate && webhook.config.function) {\n                        menu_button.addMenu({\n                            icon    : webhook.config.icon,\n                            title   : webhook.config.title,\n                            onclick : function() {\n                                var func = new Function('options', webhook.config.function);\n                                func(options);\n                            }\n                        });\n                    }\n                });\n            });\n\n            return {\n                menu        : menu_button,\n                versions    : versions_button\n            }\n        },\n\n        /** Create footer */\n        _footer: function() {\n            var options = this.model.attributes;\n            var $el = $( '<div/>' ).append( this._templateHelp( options ) );\n            if ( options.citations ) {\n                var $citations = $( '<div/>' );\n                var citations = new CitationModel.ToolCitationCollection();\n                citations.tool_id = options.id;\n                var citation_list_view = new CitationView.CitationListView({ el: $citations, collection: citations });\n                citation_list_view.render();\n                citations.fetch();\n                $el.append( $citations );\n            }\n            return $el;\n        },\n\n        /** Templates */\n        _templateHelp: function( options ) {\n            var $tmpl = $( '<div/>' ).addClass( 'ui-form-help' ).append( options.help );\n            $tmpl.find( 'a' ).attr( 'target', '_blank' );\n            return $tmpl;\n        },\n\n        _templateRequirements: function( options ) {\n            var nreq = options.requirements.length;\n            if ( nreq > 0 ) {\n                var requirements_message = 'This tool requires ';\n                _.each( options.requirements, function( req, i ) {\n                    requirements_message += req.name + ( req.version ? ' (Version ' + req.version + ')' : '' ) + ( i < nreq - 2 ? ', ' : ( i == nreq - 2 ? ' and ' : '' ) );\n                });\n                var requirements_link = $( '<a/>' ).attr( 'target', '_blank' ).attr( 'href', 'https://galaxyproject.org/tools/requirements/' ).text( 'here' );\n                return $( '<span/>' ).append( requirements_message + '. Click ' ).append( requirements_link ).append( ' for more information.' );\n            }\n            return 'No requirements found.';\n        }\n    });\n});\n"]}