{"version":3,"sources":["mvc/form/form-repeat.js"],"names":["define","Utils","Portlet","Ui","portlet","Backbone","View","extend","initialize","this","list","merge","options","title","empty_text","max","button_new","ButtonIcon","icon","tooltip","cls","onnew","$list","$","append","$el","size","_","add","id","Galaxy","emit","button_delete","ondel","onclick","hide","operations","fadeIn","disable","del","_refresh","debug","remove","enable","delAll","hideOptions","each","hideOperation","isEmpty","addClass","html","index","min"],"mappings":"YACAA,SAAU,cAAe,oBAAqB,kBAD9C,SAAAC,EAAAC,EAAAC,GAqFgBC,OACAA,KArFNC,SAAeC,KAAAC,QAEjBD,WAAOD,SAAcE,GACrBC,KAAAA,QACIC,KAAKC,QAALT,EAAAU,MAAAC,GACAC,MAAeZ,SACXY,WAAc,iBACdC,IAAc,KACdC,IAHiC,OAAAN,KAArCO,WAAA,GAAAb,GAAAc,YAMAC,KAAKF,UACDE,MAAU,UADsBT,KAAAG,QAAAC,MAEhCA,QAAU,WAAYJ,KAAKG,QAAQC,MAFH,SAGhCM,IAAU,gDACVC,QAAU,WAAAR,EAAAS,OAAAT,EAAAS,WACaT,KAAAA,WAAQS,EAAAA,UAAST,OAAAH,KAAjBa,MAAAC,EAAA,WAAkCC,OAAAD,EAAA,UAAAC,OAAAf,KAAAO,WAAAS,QAOjEC,KAAM,WADN,MAAAC,GAAAD,KAAAjB,KAAAC,OAMAkB,IAAK,SAAUhB,GADf,IAAAA,EAAAiB,IAAApB,KAAAC,KAAAE,EAAAiB,IAES,WADJC,QAAAC,KAAUnB,MAAU,qBAAA,wCAGjB,IAAAoB,GAAA,GAAA7B,GAAAc,YACHC,KAAA,aACGc,QAAAA,2BACAd,IAAU,0CACVC,QAAU,WAAAP,EAAAqB,OAFwBrB,EAAAqB,WAIlCC,EAAU,GAAAhC,GAAAI,MAAaM,GAAAA,EAAiBA,GAAiBC,MAAA,cAJ7DO,IAAAR,EAAAQ,KAAA,oBAMIhB,YAAcF,cAAa8B,IAE3BnB,GAAAA,OAAkBD,EAFSa,KAG3BL,EAAAA,IAAkBR,SAAA,eAAeuB,OACjCC,KAAAA,KAAAA,EAAoBJ,IAAAA,EAJOvB,KAA/Ba,MAAAE,OAAApB,EAAAqB,IAAAY,OAAA,SAMAjC,KAAAA,QAAQoB,IAAQZ,GAAQa,KAAxBC,QAAAjB,KAAAG,QAAAG,KAAAN,KAAAO,WAAAsB,UACAlC,KAAAA,YAIAmC,IAAA,SAAKC,GAhDmB,IAAA/B,KAAAC,KAAAmB,GAmD5B,WAGQC,QAAOC,KAAKU,MAAO,qBAAsB,2BAD7ChC,MAAMa,MAAKZ,KAAL,IAAkBmB,GAAAa,eACpBZ,MAAOC,KAAKU,GACZhC,KAAAO,WAAA2B,SACHlC,KAAA+B,YAIDI,OAAA,WA5DwB,IAAA,GAAAf,KAAApB,MAAAC,KAkEpBD,KAAK8B,IAAKV,IACbgB,YAAA,WAnEuBpC,KAAAO,WAAAS,IAAAU,OAyExBR,EAAEmB,KAAMrC,KAAKC,KAAM,SAAUN,GAAYA,EAAQ2C,cAAe,mBAHpEpB,EAAAqB,QAAAvC,KAAAC,OAAAD,KAAAgB,IAAAD,OAAAD,EAAA,UAAA0B,SAAA,gBAAAC,KAAAzC,KAAAG,QAAAE,cAG6CV,SAAAA,WAA0C,GAAnF+C,GAAA,CACAxB,KAAEqB,GAASnB,KAAKnB,MAAhBA,KAA0B,CA1EF,GAAAN,GAAAK,KAAAC,KAAAmB,EAkFpBzB,GAAQS,QAASsC,EAAQ,KAAO1C,KAAKG,QAAQC,OALrDT,EAAAK,KAAAiB,OAAAjB,KAAAG,QAAAwC,IAAA,gBAAA,iBAAA","file":"../../../scripts/mvc/form/form-repeat.js","sourcesContent":["/** This class creates a ui component which enables the dynamic creation of portlets */\ndefine( [ 'utils/utils', 'mvc/ui/ui-portlet', 'mvc/ui/ui-misc' ],\nfunction( Utils, Portlet, Ui ) {\n    var View = Backbone.View.extend({\n        initialize: function( options ) {\n            this.list = {};\n            this.options = Utils.merge( options, {\n                title       : 'Repeat',\n                empty_text  : 'Not available.',\n                max         : null,\n                min         : null\n            });\n            this.button_new = new Ui.ButtonIcon({\n                icon    : 'fa-plus',\n                title   : 'Insert ' + this.options.title,\n                tooltip : 'Add new ' + this.options.title + ' block',\n                cls     : 'ui-button-icon ui-clear-float form-repeat-add',\n                onclick : function() { options.onnew && options.onnew() }\n            });\n            this.setElement( $( '<div/>' ).append( this.$list = $( '<div/>' ) )\n                                          .append( $( '<div/>' ).append( this.button_new.$el ) ) );\n        },\n\n        /** Number of repeat blocks */\n        size: function() {\n            return _.size( this.list );\n        },\n\n        /** Add new repeat block */\n        add: function( options ) {\n            if ( !options.id || this.list[ options.id ] ) {\n                Galaxy.emit.debug( 'form-repeat::add()', 'Duplicate or invalid repeat block id.' );\n                return;\n            }\n            var button_delete = new Ui.ButtonIcon({\n                icon    : 'fa-trash-o',\n                tooltip : 'Delete this repeat block',\n                cls     : 'ui-button-icon-plain form-repeat-delete',\n                onclick : function() { options.ondel && options.ondel() }\n            });\n            var portlet = new Portlet.View({\n                id              : options.id,\n                title           : 'placeholder',\n                cls             : options.cls || 'ui-portlet-repeat',\n                operations      : { button_delete: button_delete }\n            });\n            portlet.append( options.$el );\n            portlet.$el.addClass( 'section-row' ).hide();\n            this.list[ options.id ] = portlet;\n            this.$list.append( portlet.$el.fadeIn( 'fast' ) );\n            this.options.max > 0 && this.size() >= this.options.max && this.button_new.disable();\n            this._refresh();\n        },\n\n        /** Delete repeat block */\n        del: function( id ) {\n            if ( !this.list[ id ] ) {\n                Galaxy.emit.debug( 'form-repeat::del()', 'Invalid repeat block id.' );\n                return;\n            }\n            this.$list.find( '#' + id ).remove();\n            delete this.list[ id ];\n            this.button_new.enable();\n            this._refresh();\n        },\n\n        /** Remove all */\n        delAll: function() {\n            for( var id in this.list ) {\n                this.del( id );\n            }\n        },\n\n        /** Hides add/del options */\n        hideOptions: function() {\n            this.button_new.$el.hide();\n            _.each( this.list, function( portlet ) { portlet.hideOperation( 'button_delete' ) } );\n            _.isEmpty( this.list ) && this.$el.append( $( '<div/>' ).addClass( 'ui-form-info' ).html( this.options.empty_text ) );\n        },\n\n        /** Refresh view */\n        _refresh: function() {\n            var index = 0;\n            for ( var id in this.list ) {\n                var portlet = this.list[ id ];\n                portlet.title( ++index + ': ' + this.options.title );\n                portlet[ this.size() > this.options.min ? 'showOperation' : 'hideOperation' ]( 'button_delete' );\n            }\n        }\n    });\n\n    return {\n        View : View\n    }\n});\n"]}