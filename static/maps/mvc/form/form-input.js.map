{"version":3,"sources":["mvc/form/form-input.js"],"names":["Backbone","View","extend","initialize","app","options","this","app_options","model","attributes","field","Model","text_disable","text_enable","cls_enable","cls_disable","always_refresh","setElement","_template","$","$field","$info","$preview","$collapsible","$collapsible_text","$collapsible_icon","$title","$title_text","$error_text","$error","prepend","$el","collapsible_value","get","JSON","listenTo","render","stringify","self","on","collapsed","trigger","reset","backdrop","set","error","text","help_argument","help_text","indexOf","html","error_text","$backdrop","style","escape","collapsible_state","hide","color","addClass","undefined","show","removeClass","attr","tooltip","placement","append"],"mappings":"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","file":"../../../scripts/mvc/form/form-input.js","sourcesContent":["/**\n    This class creates a form input element wrapper\n*/\n\nexport default Backbone.View.extend({\n    initialize: function(app, options) {\n        this.app = app;\n        this.app_options = app.model ? app.model.attributes : {};\n        this.field = (options && options.field) || new Backbone.View();\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                text_enable: this.app_options.text_enable || \"Enable\",\n                text_disable: this.app_options.text_disable || \"Disable\",\n                cls_enable:\n                    this.app_options.cls_enable || \"fa fa-caret-square-o-down\",\n                cls_disable:\n                    this.app_options.cls_disable || \"fa fa-caret-square-o-up\",\n                always_refresh: this.app_options.always_refresh\n            }).set(options);\n\n        // set element and link components\n        this.setElement(this._template());\n        this.$field = this.$(\".ui-form-field\");\n        this.$info = this.$(\".ui-form-info\");\n        this.$preview = this.$(\".ui-form-preview\");\n        this.$collapsible = this.$(\".ui-form-collapsible\");\n        this.$collapsible_text = this.$(\".ui-form-collapsible-text\");\n        this.$collapsible_icon = this.$(\".ui-form-collapsible-icon\");\n        this.$title = this.$(\".ui-form-title\");\n        this.$title_text = this.$(\".ui-form-title-text\");\n        this.$error_text = this.$(\".ui-form-error-text\");\n        this.$error = this.$(\".ui-form-error\");\n        this.$backdrop = this.$(\".ui-form-backdrop\");\n\n        // add field element\n        this.$field.prepend(this.field.$el);\n\n        // decide wether to expand or collapse fields\n        var collapsible_value = this.model.get(\"collapsible_value\");\n        this.field.collapsed =\n            collapsible_value !== undefined &&\n            JSON.stringify(this.model.get(\"value\")) ==\n                JSON.stringify(collapsible_value);\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n\n        // add click handler\n        var self = this;\n        this.$collapsible.on(\"click\", function() {\n            self.field.collapsed = !self.field.collapsed;\n            app.trigger && app.trigger(\"change\");\n            self.render();\n        });\n\n        // hide error on value change\n        if (this.field.model && !this.model.get(\"always_refresh\")) {\n            this.listenTo(this.field.model, \"change:value\", function() {\n                self.reset();\n            });\n        }\n    },\n\n    /** Set backdrop for input element */\n    backdrop: function() {\n        this.model.set(\"backdrop\", true);\n    },\n\n    /** Set error text */\n    error: function(text) {\n        this.model.set(\"error_text\", text);\n    },\n\n    /** Reset this view */\n    reset: function() {\n        !this.model.get(\"fixed\") && this.model.set(\"error_text\", null);\n    },\n\n    render: function() {\n        // render help\n        $(\".tooltip\").hide();\n        var help_text = this.model.get(\"help\", \"\");\n        var help_argument = this.model.get(\"argument\");\n        if (\n            help_argument &&\n            help_text.indexOf(\"(\" + help_argument + \")\") == -1\n        ) {\n            help_text += \" (\" + help_argument + \")\";\n        }\n        this.$info.html(help_text);\n        // render visibility\n        this.$el[this.model.get(\"hidden\") ? \"hide\" : \"show\"]();\n        // render preview view for collapsed fields\n        this.$preview\n            [\n                (this.field.collapsed &&\n                    this.model.get(\"collapsible_preview\")) ||\n                this.model.get(\"disabled\")\n                    ? \"show\"\n                    : \"hide\"\n            ]()\n            .html(_.escape(this.model.get(\"text_value\")));\n        // render error messages\n        var error_text = this.model.get(\"error_text\");\n        this.$error[error_text ? \"show\" : \"hide\"]();\n        this.$el[error_text ? \"addClass\" : \"removeClass\"](\"ui-error\");\n        this.$error_text.html(error_text);\n        // render backdrop\n        this.$backdrop[this.model.get(\"backdrop\") ? \"show\" : \"hide\"]();\n        // render input field\n        this.field.collapsed || this.model.get(\"disabled\")\n            ? this.$field.hide()\n            : this.$field.show();\n        // render input field color and style\n        this.field.model &&\n            this.field.model.set({\n                color: this.model.get(\"color\"),\n                style: this.model.get(\"style\")\n            });\n        // render collapsible options\n        if (\n            !this.model.get(\"disabled\") &&\n            this.model.get(\"collapsible_value\") !== undefined\n        ) {\n            var collapsible_state = this.field.collapsed ? \"enable\" : \"disable\";\n            this.$title_text.hide();\n            this.$collapsible.show();\n            this.$collapsible_text.text(this.model.get(\"label\"));\n            this.$collapsible_icon\n                .removeClass()\n                .addClass(\"icon\")\n                .addClass(this.model.get(\"cls_\" + collapsible_state))\n                .attr(\n                    \"data-original-title\",\n                    this.model.get(\"text_\" + collapsible_state)\n                )\n                .tooltip({ placement: \"bottom\" });\n        } else {\n            this.$title_text.show().text(this.model.get(\"label\"));\n            this.$collapsible.hide();\n        }\n    },\n\n    _template: function() {\n        return $(\"<div/>\")\n            .addClass(\"ui-form-element\")\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-error ui-error\")\n                    .append($(\"<span/>\").addClass(\"fa fa-arrow-down\"))\n                    .append($(\"<span/>\").addClass(\"ui-form-error-text\"))\n            )\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-title\")\n                    .append(\n                        $(\"<div/>\")\n                            .addClass(\"ui-form-collapsible\")\n                            .append(\n                                $(\"<i/>\").addClass(\"ui-form-collapsible-icon\")\n                            )\n                            .append(\n                                $(\"<span/>\").addClass(\n                                    \"ui-form-collapsible-text\"\n                                )\n                            )\n                    )\n                    .append($(\"<span/>\").addClass(\"ui-form-title-text\"))\n            )\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-field\")\n                    .append($(\"<span/>\").addClass(\"ui-form-info\"))\n                    .append($(\"<div/>\").addClass(\"ui-form-backdrop\"))\n            )\n            .append($(\"<div/>\").addClass(\"ui-form-preview\"));\n    }\n});\n"]}