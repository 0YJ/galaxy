{"version":3,"sources":["mvc/upload/collection/collection-row.js"],"names":["define","Utils","UploadModel","UploadSettings","Popover","Select","Backbone","View","extend","status_classes","init","queued","running","success","error","initialize","app","options","self","this","model","setElement","_template","$mode","$","$title","$text","$size","$info_text","$info_progress","$text_content","$symbol","$progress_bar","$percentage","settings","title","container","placement","select_genome","value","select_extension","on","_removeRow","e","set","url_paste","target","val","file_size","length","listenTo","_refreshPercentage","_refreshStatus","_refreshInfo","_refreshFileSize","remove","collection","render","attributes","html","_","escape","file_name","bytesToString","removeClass","addClass","file_mode","css","width","$el","top","height","show","info","get","hide","percentage","parseInt","status","enabled","attr","indexOf","_showSettings","visible","empty","append","id"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-row.js","sourcesContent":["/** Renders the collection uploader rows */\ndefine( [ 'utils/utils', 'mvc/upload/upload-model', 'mvc/upload/upload-settings', 'mvc/ui/ui-popover', 'mvc/ui/ui-select' ],\nfunction( Utils, UploadModel, UploadSettings, Popover, Select ) {\n    return Backbone.View.extend({\n        /** Dictionary of upload states and associated icons */\n        status_classes : {\n            init    : 'upload-icon-button fa fa-trash-o',\n            queued  : 'upload-icon fa fa-spinner fa-spin',\n            running : 'upload-icon fa fa-spinner fa-spin',\n            success : 'upload-icon-button fa fa-check',\n            error   : 'upload-icon-button fa fa-exclamation-triangle'\n        },\n\n        initialize: function( app, options ) {\n            var self = this;\n            this.app = app;\n            this.model = options.model;\n            this.setElement( this._template( options.model ) );\n            this.$mode          = this.$( '.upload-mode' );\n            this.$title         = this.$( '.upload-title-extended' );\n            this.$text          = this.$( '.upload-text' );\n            this.$size          = this.$( '.upload-size' );\n            this.$info_text     = this.$( '.upload-info-text' );\n            this.$info_progress = this.$( '.upload-info-progress' );\n            this.$text_content  = this.$( '.upload-text-content' );\n            this.$symbol        = this.$( '.upload-symbol' );\n            this.$progress_bar  = this.$( '.upload-progress-bar' );\n            this.$percentage    = this.$( '.upload-percentage' );\n\n            // append popup to settings icon\n            this.settings = new Popover.View({\n                title       : 'Upload configuration',\n                container   : this.$( '.upload-settings' ),\n                placement   : 'bottom'\n            });\n\n            // identify default genome and extension values\n            var default_genome      = this.app.select_genome.value();\n            var default_extension   = this.app.select_extension.value();\n\n            // handle click event\n            this.$symbol.on('click', function() { self._removeRow(); });\n\n            // handle text editing event\n            this.$text_content.on( 'change input', function( e ) {\n                self.model.set( { 'url_paste': $( e.target ).val(),\n                                  'file_size': $( e.target ).val().length } );\n            });\n\n            // model events\n            this.listenTo( this.model, 'change:percentage',  function() { self._refreshPercentage() } );\n            this.listenTo( this.model, 'change:status',      function() { self._refreshStatus() } );\n            this.listenTo( this.model, 'change:info',        function() { self._refreshInfo() } );\n            this.listenTo( this.model, 'change:file_size',   function() { self._refreshFileSize() } );\n            this.listenTo( this.model, 'remove',             function() { self.remove() } );\n            this.app.collection.on('reset', function() { self.remove() } );\n        },\n\n        render: function() {\n            var options = this.model.attributes;\n            this.$title.html( _.escape( options.file_name ) );\n            this.$size.html( Utils.bytesToString ( options.file_size ) );\n            this.$mode.removeClass().addClass( 'upload-mode' ).addClass( 'text-primary' );\n            if ( options.file_mode == 'new' ) {\n                this.$text.css( { 'width' : this.$el.width() - 16 + 'px', 'top'  : this.$el.height() - 8 + 'px' } ).show();\n                this.$el.height( this.$el.height() - 8 + this.$text.height() + 16 );\n                this.$mode.addClass( 'fa fa-edit' );\n            } else if ( options.file_mode == 'local' ) {\n                this.$mode.addClass( 'fa fa-laptop' );\n            } else if ( options.file_mode == 'ftp' ) {\n                this.$mode.addClass( 'fa fa-folder-open-o' );\n            }\n        },\n\n        /** Refresh info text */\n        _refreshInfo: function() {\n            var info = this.model.get( 'info' );\n            if ( info ) {\n                this.$info_text.html( '<strong>Failed: </strong>' + info ).show();\n            } else {\n                this.$info_text.hide();\n            }\n        },\n\n        /** Refresh percentage status */\n        _refreshPercentage : function() {\n            var percentage = parseInt( this.model.get( 'percentage' ) );\n            this.$progress_bar.css( { width : percentage + '%' } );\n            this.$percentage.html( percentage != 100 ? percentage + '%' : 'Adding to history...' );\n        },\n\n        /** Refresh status */\n        _refreshStatus : function() {\n            var status = this.model.get( 'status' );\n            this.$symbol.removeClass().addClass( 'upload-symbol' ).addClass( this.status_classes[ status ] );\n            this.model.set( 'enabled', status == 'init' );\n            var enabled = this.model.get( 'enabled' );\n            this.$text_content.attr( 'disabled', !enabled );\n            if ( status == 'success' ) {\n                this.$el.addClass( 'success' );\n                this.$percentage.html( '100%' );\n            }\n            if ( status == 'error' ) {\n                this.$el.addClass( 'danger' );\n                this.$info_progress.hide();\n            }\n        },\n\n        /** Refresh file size */\n        _refreshFileSize: function() {\n            this.$size.html( Utils.bytesToString ( this.model.get( 'file_size' ) ) );\n        },\n\n        /** Remove row */\n        _removeRow: function() {\n            if ( [ 'init', 'success', 'error' ].indexOf( this.model.get( 'status' ) ) !== -1 ) {\n                this.app.collection.remove( this.model );\n            }\n        },\n\n        /** Attach file info popup */\n        _showSettings : function() {\n            if ( !this.settings.visible ) {\n                this.settings.empty();\n                this.settings.append( ( new UploadSettings( this ) ).$el );\n                this.settings.show();\n            } else {\n                this.settings.hide();\n            }\n        },\n\n        /** View template */\n        _template: function( options ) {\n            return  '<tr id=\"upload-row-' + options.id + '\" class=\"upload-row\">' +\n                        '<td>' +\n                            '<div class=\"upload-text-column\">' +\n                                '<div class=\"upload-mode\"/>' +\n                                '<div class=\"upload-title-extended\"/>' +\n                                '<div class=\"upload-text\">' +\n                                    '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n                                    '<textarea class=\"upload-text-content form-control\"/>' +\n                                '</div>' +\n                            '</div>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-size\"/>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-info\">' +\n                                '<div class=\"upload-info-text\"/>' +\n                                '<div class=\"upload-info-progress progress\">' +\n                                    '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n                                    '<div class=\"upload-percentage\">0%</div>' +\n                                '</div>' +\n                            '</div>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-symbol ' + this.status_classes.init + '\"/>' +\n                        '</td>' +\n                    '</tr>';\n        }\n    });\n});\n"]}