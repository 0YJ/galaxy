{"version":3,"sources":["mvc/upload/collection/collection-row.js"],"names":["define","Utils","UploadModel","UploadSettings","Popover","Select","Backbone","View","extend","status_classes","init","queued","running","success","initialize","app","options","this","self","model","setElement","_template","$mode","$","$title","$text","$size","$info_text","$info_progress","$text_content","$symbol","$progress_bar","settings","title","container","select_genome","value","on","_removeRow","e","set","url_paste","target","val","file_size","length","listenTo","_refreshPercentage","_refreshStatus","_refreshInfo","_refreshFileSize","remove","collection","render","attributes","file_name","html","bytesToString","addClass","css","width","$el","top","height","show","file_mode","info","hide","percentage","parseInt","get","$percentage","status","removeClass","enabled","attr","indexOf","_showSettings","visible","empty","append","id"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-row.js","sourcesContent":["/** Renders the collection uploader rows */\ndefine( [ 'utils/utils', 'mvc/upload/upload-model', 'mvc/upload/upload-settings', 'mvc/ui/ui-popover', 'mvc/ui/ui-select' ],\nfunction( Utils, UploadModel, UploadSettings, Popover, Select ) {\n    return Backbone.View.extend({\n        /** Dictionary of upload states and associated icons */\n        status_classes : {\n            init    : 'upload-icon-button fa fa-trash-o',\n            queued  : 'upload-icon fa fa-spinner fa-spin',\n            running : 'upload-icon fa fa-spinner fa-spin',\n            success : 'upload-icon-button fa fa-check',\n            error   : 'upload-icon-button fa fa-exclamation-triangle'\n        },\n\n        initialize: function( app, options ) {\n            var self = this;\n            this.app = app;\n            this.model = options.model;\n            this.setElement( this._template( options.model ) );\n            this.$mode          = this.$( '.upload-mode' );\n            this.$title         = this.$( '.upload-title-extended' );\n            this.$text          = this.$( '.upload-text' );\n            this.$size          = this.$( '.upload-size' );\n            this.$info_text     = this.$( '.upload-info-text' );\n            this.$info_progress = this.$( '.upload-info-progress' );\n            this.$text_content  = this.$( '.upload-text-content' );\n            this.$symbol        = this.$( '.upload-symbol' );\n            this.$progress_bar  = this.$( '.upload-progress-bar' );\n            this.$percentage    = this.$( '.upload-percentage' );\n\n            // append popup to settings icon\n            this.settings = new Popover.View({\n                title       : 'Upload configuration',\n                container   : this.$( '.upload-settings' ),\n                placement   : 'bottom'\n            });\n\n            // identify default genome and extension values\n            var default_genome      = this.app.select_genome.value();\n            var default_extension   = this.app.select_extension.value();\n\n            // handle click event\n            this.$symbol.on('click', function() { self._removeRow(); });\n\n            // handle text editing event\n            this.$text_content.on( 'change input', function( e ) {\n                self.model.set( { 'url_paste': $( e.target ).val(),\n                                  'file_size': $( e.target ).val().length } );\n            });\n\n            // model events\n            this.listenTo( this.model, 'change:percentage',  function() { self._refreshPercentage() } );\n            this.listenTo( this.model, 'change:status',      function() { self._refreshStatus() } );\n            this.listenTo( this.model, 'change:info',        function() { self._refreshInfo() } );\n            this.listenTo( this.model, 'change:file_size',   function() { self._refreshFileSize() } );\n            this.listenTo( this.model, 'remove',             function() { self.remove() } );\n            this.app.collection.on('reset', function() { self.remove() } );\n        },\n\n        render: function() {\n            var options = this.model.attributes;\n            this.$title.html( _.escape( options.file_name ) );\n            this.$size.html( Utils.bytesToString ( options.file_size ) );\n            this.$mode.removeClass().addClass( 'upload-mode' ).addClass( 'text-primary' );\n            if ( options.file_mode == 'new' ) {\n                this.$text.css( { 'width' : this.$el.width() - 16 + 'px', 'top'  : this.$el.height() - 8 + 'px' } ).show();\n                this.$el.height( this.$el.height() - 8 + this.$text.height() + 16 );\n                this.$mode.addClass( 'fa fa-edit' );\n            } else if ( options.file_mode == 'local' ) {\n                this.$mode.addClass( 'fa fa-laptop' );\n            } else if ( options.file_mode == 'ftp' ) {\n                this.$mode.addClass( 'fa fa-folder-open-o' );\n            }\n        },\n\n        /** Refresh info text */\n        _refreshInfo: function() {\n            var info = this.model.get( 'info' );\n            if ( info ) {\n                this.$info_text.html( '<strong>Failed: </strong>' + info ).show();\n            } else {\n                this.$info_text.hide();\n            }\n        },\n\n        /** Refresh percentage status */\n        _refreshPercentage : function() {\n            var percentage = parseInt( this.model.get( 'percentage' ) );\n            this.$progress_bar.css( { width : percentage + '%' } );\n            this.$percentage.html( percentage != 100 ? percentage + '%' : 'Adding to history...' );\n        },\n\n        /** Refresh status */\n        _refreshStatus : function() {\n            var status = this.model.get( 'status' );\n            this.$symbol.removeClass().addClass( 'upload-symbol' ).addClass( this.status_classes[ status ] );\n            this.model.set( 'enabled', status == 'init' );\n            var enabled = this.model.get( 'enabled' );\n            this.$text_content.attr( 'disabled', !enabled );\n            if ( status == 'success' ) {\n                this.$el.addClass( 'success' );\n                this.$percentage.html( '100%' );\n            }\n            if ( status == 'error' ) {\n                this.$el.addClass( 'danger' );\n                this.$info_progress.hide();\n            }\n        },\n\n        /** Refresh file size */\n        _refreshFileSize: function() {\n            this.$size.html( Utils.bytesToString ( this.model.get( 'file_size' ) ) );\n        },\n\n        /** Remove row */\n        _removeRow: function() {\n            if ( [ 'init', 'success', 'error' ].indexOf( this.model.get( 'status' ) ) !== -1 ) {\n                this.app.collection.remove( this.model );\n            }\n        },\n\n        /** Attach file info popup */\n        _showSettings : function() {\n            if ( !this.settings.visible ) {\n                this.settings.empty();\n                this.settings.append( ( new UploadSettings( this ) ).$el );\n                this.settings.show();\n            } else {\n                this.settings.hide();\n            }\n        },\n\n        /** View template */\n        _template: function( options ) {\n            return  '<tr id=\"upload-row-' + options.id + '\" class=\"upload-row\">' +\n                        '<td>' +\n                            '<div class=\"upload-text-column\">' +\n                                '<div class=\"upload-mode\"/>' +\n                                '<div class=\"upload-title-extended\"/>' +\n                                '<div class=\"upload-text\">' +\n                                    '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n                                    '<textarea class=\"upload-text-content form-control\"/>' +\n                                '</div>' +\n                            '</div>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-size\"/>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-info\">' +\n                                '<div class=\"upload-info-text\"/>' +\n                                '<div class=\"upload-info-progress progress\">' +\n                                    '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n                                    '<div class=\"upload-percentage\">0%</div>' +\n                                '</div>' +\n                            '</div>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-symbol ' + this.status_classes.init + '\"/>' +\n                        '</td>' +\n                    '</tr>';\n        }\n    });\n});\n"]}