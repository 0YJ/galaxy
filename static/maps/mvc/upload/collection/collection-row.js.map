{"version":3,"sources":["mvc/upload/collection/collection-row.js"],"names":["_utils","require","_uploadModel","_uploadSettings","_uiPopover","_uiSelect","Backbone","View","extend","status_classes","init","queued","running","success","error","initialize","app","options","self","this","model","setElement","_template","$mode","$","$title","$text","$size","$info_text","$info_progress","$text_content","$symbol","$progress_bar","_uiPopover2","default","placement","select_genome","value","select_extension","on","e","set","target","val","$percentage","length","container","listenTo","_refreshStatus","default_extension","_refreshInfo","_removeRow","remove","url_paste","render","attributes","_","file_name","_refreshPercentage","file_size","addClass","css","$el","width","_refreshFileSize","height","collection","file_mode","info","removeClass","get","html","show","top","percentage","status","enabled","attr","hide","_utils2","bytesToString","indexOf","_showSettings","settings","visible","empty","append","_uploadSettings2","id"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-row.js","sourcesContent":["/** Renders the collection uploader rows */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-icon-button fa fa-trash-o\",\n        queued: \"upload-icon fa fa-spinner fa-spin\",\n        running: \"upload-icon fa fa-spinner fa-spin\",\n        success: \"upload-icon-button fa fa-check\",\n        error: \"upload-icon-button fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template(options.model));\n        this.$mode = this.$(\".upload-mode\");\n        this.$title = this.$(\".upload-title-extended\");\n        this.$text = this.$(\".upload-text\");\n        this.$size = this.$(\".upload-size\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$symbol = this.$(\".upload-symbol\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: \"Upload configuration\",\n            container: this.$(\".upload-settings\"),\n            placement: \"bottom\"\n        });\n\n        // identify default genome and extension values\n        var default_genome = this.app.select_genome.value();\n        var default_extension = this.app.select_extension.value();\n\n        // handle click event\n        this.$symbol.on(\"click\", function() {\n            self._removeRow();\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", function(e) {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", function() {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", function() {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", function() {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_size\", function() {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", function() {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", function() {\n            self.remove();\n        });\n    },\n\n    render: function() {\n        var options = this.model.attributes;\n        this.$title.html(_.escape(options.file_name));\n        this.$size.html(Utils.bytesToString(options.file_size));\n        this.$mode\n            .removeClass()\n            .addClass(\"upload-mode\")\n            .addClass(\"text-primary\");\n        if (options.file_mode == \"new\") {\n            this.$text\n                .css({\n                    width: this.$el.width() - 16 + \"px\",\n                    top: this.$el.height() - 8 + \"px\"\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$mode.addClass(\"fa fa-edit\");\n        } else if (options.file_mode == \"local\") {\n            this.$mode.addClass(\"fa fa-laptop\");\n        } else if (options.file_mode == \"ftp\") {\n            this.$mode.addClass(\"fa fa-folder-open-o\");\n        }\n    },\n\n    /** Refresh info text */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(\"<strong>Failed: </strong>\" + info).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage status */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        this.$progress_bar.css({ width: percentage + \"%\" });\n        this.$percentage.html(\n            percentage != 100 ? percentage + \"%\" : \"Adding to history...\"\n        );\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$symbol\n            .removeClass()\n            .addClass(\"upload-symbol\")\n            .addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status == \"init\");\n        var enabled = this.model.get(\"enabled\");\n        this.$text_content.attr(\"disabled\", !enabled);\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.$info_progress.hide();\n        }\n    },\n\n    /** Refresh file size */\n    _refreshFileSize: function() {\n        this.$size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Remove row */\n    _removeRow: function() {\n        if (\n            [\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !==\n            -1\n        ) {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    /** Attach file info popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** View template */\n    _template: function(options) {\n        return (\n            '<tr id=\"upload-row-' +\n            options.id +\n            '\" class=\"upload-row\">' +\n            \"<td>\" +\n            '<div class=\"upload-text-column\">' +\n            '<div class=\"upload-mode\"/>' +\n            '<div class=\"upload-title-extended\"/>' +\n            '<div class=\"upload-text\">' +\n            '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n            '<textarea class=\"upload-text-content form-control\"/>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-size\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-info\">' +\n            '<div class=\"upload-info-text\"/>' +\n            '<div class=\"upload-info-progress progress\">' +\n            '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n            '<div class=\"upload-percentage\">0%</div>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-symbol ' +\n            this.status_classes.init +\n            '\"/>' +\n            \"</td>\" +\n            \"</tr>\"\n        );\n    }\n});\n"]}