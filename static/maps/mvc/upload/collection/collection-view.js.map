{"version":3,"sources":["mvc/upload/collection/collection-view.js"],"names":["_utils","require","_uploadModel","_collectionRow","_uploadFtp","_uploadExtension","_uiPopover","_uiSelect","_uiMisc","_listCollectionCreator","Backbone","View","extend","upload_size","collection","_uploadModel2","default","Collection","counter","announce","success","error","running","reset","this","initialize","app","self","options","list_extensions","list_genomes","ui_button","ftp_upload_site","currentFtp","setElement","_template","btnLocal","_uiMisc2","Button","id","title","onclick","uploadbox","select","icon","btnFtp","_eventFtp","_eventCreate","btnStart","_eventStart","_eventBuild","_eventStop","_eventReset","btnCreate","_","each","btnReset","btnBuild","btnClose","button","prepend","$el","$","nginx_upload_path","index","file","_eventAnnounce","toData","get","history_id","progress","percentage","_eventProgress","message","_eventSuccess","_eventError","_eventComplete","ondragover","addClass","_uiPopover2","container","complete","ext","default_extension","extension","updateExtension","collectionType","select_collection","_uiSelect2","css","text","value","select_extension","onchange","_uploadExtension2","e","target","placement","select_genome","data","default_genome","preventDefault","model","_eventRemove","_updateScreen","genome","file_name","name","file_size","size","file_mode","mode","file_path","path","file_data","add","new_model","upload_row","_collectionRow2","append","set","it","hids","pluck","status","_uploadPercentage","upload_completed","Galaxy","currHistoryPanel","refreshContents","info","forEach","models","upload","apply","allHids","hid","getByHid","selection","constructor","historyId","buildCollection","remove","ftp","visible","hide","empty","_uploadFtp2","ftp_file","onremove","model_index","show","currentHistory","start","html","stop","defaults_only","updateCollectionType","updateGenome","compatible","enable_build","enable_reset","enable_sources","show_table","enable_start","btnStop"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-view.js","sourcesContent":["/** Renders contents of the collection uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/collection/collection-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LIST_COLLECTION_CREATOR from \"mvc/collection/list-collection-creator\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: \"Choose local files\",\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP files\",\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnBuild = new Ui.Button({\n            id: \"btn-build\",\n            title: \"Build\",\n            onclick: function() {\n                self._eventBuild();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [\n                this.btnLocal,\n                this.btnFtp,\n                this.btnCreate,\n                this.btnStop,\n                this.btnReset,\n                this.btnStart,\n                this.btnBuild,\n                this.btnClose\n            ],\n            function(button) {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$(\".upload-box\").uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData(\n                    [self.collection.get(index)],\n                    self.history_id\n                );\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$(\".upload-box\").addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$(\".upload-box\").removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function(ext) {\n                return !ext.composite_files;\n            }),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self.updateExtension(extension);\n            }\n        });\n\n        this.collectionType = \"list\";\n        this.select_collection = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-collection-type\"),\n            data: [\n                { id: \"list\", text: \"List\" },\n                { id: \"paired\", text: \"Paired\" },\n                { id: \"list:paired\", text: \"List of Pairs\" }\n            ],\n            value: \"list\",\n            onchange: function(collectionType) {\n                self.updateCollectionType(collectionType);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", function(e) {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", function(e) {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self.updateGenome(genome);\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", function(model) {\n            self._eventRemove(model);\n        });\n        this._updateScreen();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file,\n            extension: this.select_extension.value(),\n            genome: this.select_genome.value()\n        });\n        this.collection.add(new_model);\n        var upload_row = new UploadRow(this, { model: new_model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this._updateScreen();\n        upload_row.render();\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(percentage, it.get(\"file_size\"))\n        );\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        // var hdaId = message[\"outputs\"][0][\"id\"];\n        var hids = _.pluck(message[\"outputs\"], \"hid\");\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\", hids: hids });\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(100, it.get(\"file_size\"))\n        );\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this._updateScreen();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this._updateScreen();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(function(model) {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this._updateScreen();\n    },\n\n    _eventBuild: function() {\n        var allHids = [];\n        _.forEach(this.collection.models, function(upload) {\n            allHids.push.apply(allHids, upload.get(\"hids\"));\n        });\n        var models = _.map(allHids, function(hid) {\n            return Galaxy.currHistoryPanel.collection.getByHid(hid);\n        });\n        var selection = new Galaxy.currHistoryPanel.collection.constructor(\n            models\n        );\n        // I'm building the selection wrong because I need to set this historyId directly.\n        selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n        Galaxy.currHistoryPanel.buildCollection(\n            this.collectionType,\n            selection,\n            true\n        );\n        this.counter.running = 0;\n        this._updateScreen();\n        this._eventReset();\n        this.app.modal.hide();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce == 0 || this.counter.running > 0) {\n            return;\n        }\n        var self = this;\n        this.upload_size = 0;\n        this.upload_completed = 0;\n        this.collection.each(function(model) {\n            if (model.get(\"status\") == \"init\") {\n                model.set(\"status\", \"queued\");\n                self.upload_size += model.get(\"file_size\");\n            }\n        });\n        this.ui_button.model.set({ percentage: 0, status: \"success\" });\n        this.counter.running = this.counter.announce;\n        this.history_id = this.app.currentHistory();\n        this.uploadbox.start();\n        this._updateScreen();\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\n                \"Queue will pause after completing the current file...\"\n            );\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this._updateScreen();\n        }\n    },\n\n    /** Update extension for all models */\n    updateExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension ||\n                    !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update collection type */\n    updateCollectionType: function(collectionType) {\n        var self = this;\n        this.collectionType = collectionType;\n    },\n\n    /** Update genome for all models */\n    updateGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome ||\n                    !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Set screen */\n    _updateScreen: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message =\n                    \"You added \" +\n                    this.counter.announce +\n                    \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n            } else {\n                message =\n                    \"Please wait...\" +\n                    this.counter.announce +\n                    \" out of \" +\n                    this.counter.running +\n                    \" remaining.\";\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 &&\n            this.counter.announce + this.counter.success + this.counter.error >\n                0;\n        var enable_start =\n            this.counter.running == 0 && this.counter.announce > 0;\n        var enable_build =\n            this.counter.running == 0 &&\n            this.counter.announce == 0 &&\n            this.counter.success > 0 &&\n            this.counter.error == 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table =\n            this.counter.announce + this.counter.success + this.counter.error >\n            0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\n            \"btn-primary\"\n        );\n        this.btnBuild[enable_build ? \"enable\" : \"disable\"]();\n        this.btnBuild.$el[enable_build ? \"addClass\" : \"removeClass\"](\n            \"btn-primary\"\n        );\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n            '<span class=\"upload-footer-collection-type\"/>' +\n            '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n"]}