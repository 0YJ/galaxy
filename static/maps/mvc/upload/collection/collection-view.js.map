{"version":3,"sources":["mvc/upload/collection/collection-view.js"],"names":["define","Utils","UploadModel","UploadRow","UploadFtp","Popover","Select","Ui","LIST_COLLECTION_CREATOR","Backbone","View","extend","upload_size","collection","Collection","counter","announce","success","error","running","this","initialize","app","self","list_extensions","list_genomes","options","ui_button","setElement","_template","id","title","onclick","uploadbox","select","icon","btnFtp","Button","_eventFtp","btnCreate","_eventCreate","btnLocal","_eventStart","_eventBuild","btnStop","_eventStop","_eventReset","modal","hide","_","each","btnReset","btnStart","btnBuild","btnClose","button","prepend","url","nginx_upload_path","file","_eventAnnounce","index","toData","get","history_id","progress","percentage","_eventProgress","message","_eventSuccess","_eventError","complete","_eventComplete","ondragover","$","addClass","removeClass","container","$el","select_extension","css","filter","ext","composite_files","onchange","extension","updateExtension","collectionType","text","updateCollectionType","on","e","target","value","placement","select_genome","console","data","genome","updateGenome","model","_eventRemove","new_model","Model","file_name","name","file_size","size","file_mode","select_collection","mode","path","upload_row","append","_updateScreen","render","set","_uploadPercentage","it","hids","status","default_genome","Galaxy","currHistoryPanel","refreshContents","info","upload_completed","file_path","file_data","allHids","forEach","push","apply","upload","models","map","getByHid","hid","selection","constructor","historyId","buildCollection","pluck","showExtensionInfo","description","findWhere","extension_popup","remove","empty","_templateDescription","show","ftp","visible","ftp_upload_site","onadd","add","ftp_file","model_index","html","stop","default_extension","onremove","defaults_only","compatible","enable_reset","reset","enable_start","enable_build","enable_sources","show_table","description_url"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-view.js","sourcesContent":["/** Renders contents of the collection uploader */\ndefine([ 'utils/utils', 'mvc/upload/upload-model', 'mvc/upload/collection/collection-row', 'mvc/upload/upload-ftp', 'mvc/ui/ui-popover', 'mvc/ui/ui-select',  'mvc/ui/ui-misc', 'mvc/collection/list-collection-creator', 'utils/uploadbox' ],\nfunction( Utils, UploadModel, UploadRow, UploadFtp, Popover, Select, Ui, LIST_COLLECTION_CREATOR ) {\n    return Backbone.View.extend({\n        // current upload size in bytes\n        upload_size: 0,\n\n        // contains upload row models\n        collection : new UploadModel.Collection(),\n\n        // keeps track of the current uploader state\n        counter : {\n            announce    : 0,\n            success     : 0,\n            error       : 0,\n            running     : 0,\n            reset : function() { this.announce = this.success = this.error = this.running = 0 }\n        },\n\n        initialize : function( app ) {\n            var self = this;\n            this.app                = app;\n            this.options            = app.options;\n            this.list_extensions    = app.list_extensions;\n            this.list_genomes       = app.list_genomes;\n            this.ui_button          = app.ui_button;\n            this.ftp_upload_site    = app.currentFtp();\n            this.setElement( this._template() );\n\n            // append buttons to dom\n            this.btnLocal    = new Ui.Button( { id: 'btn-local', title: 'Choose local files',  onclick: function() { self.uploadbox.select() }, icon: 'fa fa-laptop' } );\n            this.btnFtp      = new Ui.Button( { id: 'btn-ftp',   title: 'Choose FTP files',    onclick: function() { self._eventFtp() }, icon: 'fa fa-folder-open-o' } );\n            this.btnCreate   = new Ui.Button( { id: 'btn-new',   title: 'Paste/Fetch data',    onclick: function() { self._eventCreate() }, icon: 'fa fa-edit' } );\n            this.btnStart    = new Ui.Button( { id: 'btn-start', title: 'Start',               onclick: function() { self._eventStart() } } );\n            this.btnBuild    = new Ui.Button( { id: 'btn-build', title: 'Build',               onclick: function() { self._eventBuild() } } );\n            this.btnStop     = new Ui.Button( { id: 'btn-stop',  title: 'Pause',               onclick: function() { self._eventStop() } } );\n            this.btnReset    = new Ui.Button( { id: 'btn-reset', title: 'Reset',               onclick: function() { self._eventReset() } } );\n            this.btnClose    = new Ui.Button( { id: 'btn-close', title: 'Close',               onclick: function() { self.app.modal.hide() } } );\n            _.each( [ this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnBuild, this.btnClose ], function( button ) {\n                self.$( '.upload-buttons' ).prepend( button.$el );\n            });\n\n            // file upload\n            this.uploadbox = this.$( '.upload-box' ).uploadbox({\n                url             : this.app.options.nginx_upload_path,\n                announce        : function( index, file )       { self._eventAnnounce( index, file ) },\n                initialize      : function( index )             { return self.app.toData( [ self.collection.get( index ) ], self.history_id ) },\n                progress        : function( index, percentage ) { self._eventProgress( index, percentage ) },\n                success         : function( index, message )    { self._eventSuccess( index, message ) },\n                error           : function( index, message )    { self._eventError( index, message ) },\n                complete        : function()                    { self._eventComplete() },\n                ondragover      : function()                    { self.$( '.upload-box' ).addClass( 'highlight' ) },\n                ondragleave     : function()                    { self.$( '.upload-box' ).removeClass( 'highlight' ) }\n            });\n\n            console.log(this.list_extensions);\n\n            // add ftp file viewer\n            this.ftp = new Popover.View( { title: 'FTP files', container: this.btnFtp.$el } );\n\n            // select extension\n            this.select_extension = new Select.View({\n                css         : 'upload-footer-selection-compressed',\n                container   : this.$( '.upload-footer-extension' ),\n                data        : _.filter( this.list_extensions, function( ext ) { return !ext.composite_files } ),\n                value       : this.options.default_extension,\n                onchange    : function( extension ) { self.updateExtension( extension ) }\n            });\n\n            this.collectionType = \"list\";\n            this.select_collection = new Select.View({\n                css         : 'upload-footer-selection-compressed',\n                container   : this.$( '.upload-footer-collection-type' ),\n                data        : [{\"id\": \"list\", \"text\": \"List\"}, {\"id\": \"paired\", \"text\": \"Paired\"}, {\"id\": \"list:paired\", \"text\": \"List of Pairs\"}],\n                value       : \"list\",\n                onchange    : function( collectionType ) { self.updateCollectionType( collectionType ) }\n            })\n\n            // handle extension info popover\n            this.$( '.upload-footer-extension-info' ).on( 'click', function( e ) {\n                self.showExtensionInfo({\n                    $el         : $( e.target ),\n                    title       : self.select_extension.text(),\n                    extension   : self.select_extension.value(),\n                    placement   : 'top'\n                });\n            }).on( 'mousedown', function( e ) { e.preventDefault() } );\n\n            // genome extension\n            this.select_genome = new Select.View({\n                css         : 'upload-footer-selection',\n                container   : this.$( '.upload-footer-genome' ),\n                data        : this.list_genomes,\n                value       : this.options.default_genome,\n                onchange    : function( genome ) { self.updateGenome(genome) }\n            });\n\n            // events\n            this.collection.on( 'remove', function( model ) { self._eventRemove( model ) } );\n            this._updateScreen();\n        },\n\n        /** A new file has been dropped/selected through the uploadbox plugin */\n        _eventAnnounce: function( index, file ) {\n            this.counter.announce++;\n            var new_model = new UploadModel.Model({\n                id          : index,\n                file_name   : file.name,\n                file_size   : file.size,\n                file_mode   : file.mode || 'local',\n                file_path   : file.path,\n                file_data   : file,\n                extension   : this.select_extension.value(),\n                genome      : this.select_genome.value()\n            });\n            this.collection.add( new_model );\n            var upload_row = new UploadRow( this, { model: new_model } );\n            this.$( '.upload-table > tbody:first' ).append( upload_row.$el );\n            this._updateScreen();\n            upload_row.render();\n        },\n\n        /** Progress */\n        _eventProgress: function( index, percentage ) {\n            var it = this.collection.get( index );\n            it.set( 'percentage', percentage );\n            this.ui_button.model.set( 'percentage', this._uploadPercentage( percentage, it.get( 'file_size' ) ) );\n        },\n\n        /** Success */\n        _eventSuccess: function( index, message ) {\n            // var hdaId = message[\"outputs\"][0][\"id\"];\n            var hids = _.pluck(message[\"outputs\"], \"hid\");\n            var it = this.collection.get( index );\n            it.set( { 'percentage': 100, 'status': 'success', 'hids': hids } );\n            this.ui_button.model.set( 'percentage', this._uploadPercentage( 100, it.get( 'file_size' ) ) );\n            this.upload_completed += it.get( 'file_size' ) * 100;\n            this.counter.announce--;\n            this.counter.success++;\n            this._updateScreen();\n            Galaxy.currHistoryPanel.refreshContents();\n        },\n\n        /** Error */\n        _eventError: function( index, message ) {\n            var it = this.collection.get( index );\n            it.set( { 'percentage': 100, 'status': 'error', 'info': message } );\n            this.ui_button.model.set( { 'percentage': this._uploadPercentage( 100, it.get( 'file_size' ) ), 'status': 'danger' } );\n            this.upload_completed += it.get( 'file_size' ) * 100;\n            this.counter.announce--;\n            this.counter.error++;\n            this._updateScreen();\n        },\n\n        /** Queue is done */\n        _eventComplete: function() {\n            this.collection.each( function( model ) { model.get( 'status' ) == 'queued' && model.set( 'status', 'init' ) } );\n            this.counter.running = 0;\n            this._updateScreen();\n        },\n\n        _eventBuild: function() {\n            var allHids = [];\n            _.forEach( this.collection.models, function( upload ) { allHids.push.apply(allHids, upload.get( 'hids' )); } );\n            var models = _.map( allHids, function( hid ) { return Galaxy.currHistoryPanel.collection.getByHid( hid ) } );\n            var selection = new Galaxy.currHistoryPanel.collection.constructor( models );\n            // I'm building the selection wrong because I need to set this historyId directly.\n            selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n            Galaxy.currHistoryPanel.buildCollection( this.collectionType, selection, true );\n            this.counter.running = 0;\n            this._updateScreen();\n            this._eventReset();\n            this.app.modal.hide();\n        },\n\n        /** Remove model from upload list */\n        _eventRemove: function( model ) {\n            var status = model.get( 'status' );\n            if ( status == 'success' ) {\n                this.counter.success--;\n            } else if ( status == 'error' ) {\n                this.counter.error--;\n            } else {\n                this.counter.announce--;\n            }\n            this.uploadbox.remove( model.id );\n            this._updateScreen();\n        },\n\n        //\n        // events triggered by this view\n        //\n\n        /** [public] display extension info popup */\n        showExtensionInfo: function( options ) {\n            var self = this;\n            var $el = options.$el;\n            var extension = options.extension;\n            var title = options.title;\n            var description = _.findWhere( self.list_extensions, { 'id': extension } );\n            this.extension_popup && this.extension_popup.remove();\n            this.extension_popup = new Popover.View({ placement: options.placement || 'bottom', container: $el } );\n            this.extension_popup.title( title );\n            this.extension_popup.empty();\n            this.extension_popup.append( this._templateDescription( description ) );\n            this.extension_popup.show();\n        },\n\n        /** Show/hide ftp popup */\n        _eventFtp: function() {\n            if ( !this.ftp.visible ) {\n                this.ftp.empty();\n                var self = this;\n                this.ftp.append( ( new UploadFtp({\n                    collection      : this.collection,\n                    ftp_upload_site : this.ftp_upload_site,\n                    onadd           : function( ftp_file ) {\n                        self.uploadbox.add([{\n                            mode: 'ftp',\n                            name: ftp_file.path,\n                            size: ftp_file.size,\n                            path: ftp_file.path\n                        }]);\n                    },\n                    onremove: function( model_index ) {\n                        self.collection.remove( model_index );\n                    }\n                } ) ).$el );\n                this.ftp.show();\n            } else {\n                this.ftp.hide();\n            }\n        },\n\n        /** Create a new file */\n        _eventCreate: function (){\n            this.uploadbox.add( [ { name: 'New File', size: 0, mode: 'new' } ] );\n        },\n\n        /** Start upload process */\n        _eventStart: function() {\n            if ( this.counter.announce == 0 || this.counter.running > 0 ) {\n                return;\n            }\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each( function( model ) {\n                if( model.get( 'status' ) == 'init' ) {\n                    model.set( 'status', 'queued' );\n                    self.upload_size += model.get( 'file_size' );\n                }\n            });\n            this.ui_button.model.set( { 'percentage': 0, 'status': 'success' } );\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n            this.uploadbox.start();\n            this._updateScreen();\n        },\n\n        /** Pause upload process */\n        _eventStop: function() {\n            if ( this.counter.running > 0 ) {\n                this.ui_button.model.set( 'status', 'info' );\n                $( '.upload-top-info' ).html( 'Queue will pause after completing the current file...' );\n                this.uploadbox.stop();\n            }\n        },\n\n        /** Remove all */\n        _eventReset: function() {\n            if ( this.counter.running == 0 ){\n                this.collection.reset();\n                this.counter.reset();\n                this.uploadbox.reset();\n                this.select_extension.value( this.options.default_extension );\n                this.select_genome.value( this.options.default_genome );\n                this.ui_button.model.set( 'percentage', 0 );\n                this._updateScreen();\n            }\n        },\n\n        /** Update extension for all models */\n        updateExtension: function( extension, defaults_only ) {\n            var self = this;\n            this.collection.each( function( model ) {\n                if ( model.get( 'status' ) == 'init' && ( model.get( 'extension' ) == self.options.default_extension || !defaults_only ) ) {\n                    model.set( 'extension', extension );\n                }\n            });\n        },\n\n        /** Update collection type */\n        updateCollectionType: function( collectionType ) {\n            var self = this;\n            this.collectionType = collectionType;\n        },\n\n        /** Update genome for all models */\n        updateGenome: function( genome, defaults_only ) {\n            var self = this;\n            this.collection.each( function( model ) {\n                if ( model.get( 'status' ) == 'init' && ( model.get( 'genome' ) == self.options.default_genome || !defaults_only ) ) {\n                    model.set( 'genome', genome );\n                }\n            });\n        },\n\n        /** Set screen */\n        _updateScreen: function () {\n            var message = '';\n            if( this.counter.announce == 0 ) {\n                if (this.uploadbox.compatible()) {\n                    message = '&nbsp;';\n                } else {\n                    message = 'Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.';\n                }\n            } else {\n                if ( this.counter.running == 0 ) {\n                    message = 'You added ' + this.counter.announce + ' file(s) to the queue. Add more files or click \\'Start\\' to proceed.';\n                } else {\n                    message = 'Please wait...' + this.counter.announce + ' out of ' + this.counter.running + ' remaining.';\n                }\n            }\n            this.$( '.upload-top-info' ).html( message );\n            var enable_reset = this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n            var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n            var enable_build = this.counter.running == 0 && this.counter.announce == 0 && this.counter.success > 0 && this.counter.error == 0\n            var enable_sources = this.counter.running == 0;\n            var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n            this.btnReset[ enable_reset ? 'enable' : 'disable' ]();\n            this.btnStart[ enable_start ? 'enable' : 'disable' ]();\n            this.btnStart.$el[ enable_start ? 'addClass' : 'removeClass' ]( 'btn-primary' );\n            this.btnBuild[ enable_build ? 'enable' : 'disable' ]();\n            this.btnBuild.$el[ enable_build ? 'addClass' : 'removeClass' ]( 'btn-primary' );\n            this.btnStop[ this.counter.running > 0 ? 'enable' : 'disable' ]();\n            this.btnLocal[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnFtp[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnCreate[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnFtp.$el[ this.ftp_upload_site ? 'show' : 'hide' ]();\n            this.$( '.upload-table' )[ show_table ? 'show' : 'hide' ]();\n            this.$( '.upload-helper' )[ show_table ? 'hide' : 'show' ]();\n        },\n\n        /** Calculate percentage of all queued uploads */\n        _uploadPercentage: function( percentage, size ) {\n            return ( this.upload_completed + ( percentage * size ) ) / this.upload_size;\n        },\n\n        /** Template for extensions description */\n        _templateDescription: function( options ) {\n            if ( options.description ) {\n                var tmpl = options.description;\n                if ( options.description_url ) {\n                    tmpl += '&nbsp;(<a href=\"' + options.description_url + '\" target=\"_blank\">read more</a>)';\n                }\n                return tmpl;\n            } else {\n                return 'There is no description available for this file extension.';\n            }\n        },\n\n        /** Template */\n        _template: function() {\n            return  '<div class=\"upload-view-default\">' +\n                        '<div class=\"upload-top\">' +\n                            '<h6 class=\"upload-top-info\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-box\">' +\n                            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n                            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n                                '<thead>' +\n                                    '<tr>' +\n                                        '<th>Name</th>' +\n                                        '<th>Size</th>' +\n                                        '<th>Status</th>' +\n                                        '<th/>' +\n                                    '</tr>' +\n                                '</thead>' +\n                                '<tbody/>' +\n                            '</table>' +\n                        '</div>' +\n                        '<div class=\"upload-footer\">' +\n                            '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n                            '<span class=\"upload-footer-collection-type\"/>' +\n                            '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n                            '<span class=\"upload-footer-extension\"/>' +\n                            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n                            '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n                            '<span class=\"upload-footer-genome\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-buttons\"/>' +\n                    '</div>';\n        }\n    });\n});\n"]}