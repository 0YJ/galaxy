{"version":3,"sources":["mvc/upload/collection/collection-view.js"],"names":["define","Utils","UploadModel","UploadRow","UploadFtp","Popover","Select","Ui","LIST_COLLECTION_CREATOR","Backbone","View","extend","upload_size","collection","Collection","counter","announce","success","error","running","reset","this","initialize","app","self","options","list_extensions","list_genomes","ui_button","ftp_upload_site","currentFtp","setElement","_template","btnLocal","Button","id","title","onclick","uploadbox","select","icon","btnFtp","_eventFtp","btnCreate","_eventCreate","btnStart","_eventStart","btnBuild","_eventBuild","btnStop","_eventStop","btnReset","_eventReset","btnClose","modal","hide","_","each","button","$","prepend","$el","url","nginx_upload_path","index","file","_eventAnnounce","toData","get","history_id","progress","percentage","_eventProgress","message","_eventSuccess","_eventError","complete","_eventComplete","ondragover","addClass","ondragleave","removeClass","console","log","ftp","container","select_extension","css","data","filter","ext","composite_files","value","default_extension","onchange","extension","updateExtension","collectionType","select_collection","text","updateCollectionType","on","e","showExtensionInfo","target","placement","preventDefault","select_genome","default_genome","genome","updateGenome","model","_eventRemove","_updateScreen","new_model","Model","file_name","name","file_size","size","file_mode","mode","file_path","path","file_data","add","upload_row","append","render","it","set","_uploadPercentage","hid","status","upload_completed","Galaxy","currHistoryPanel","refreshContents","info","models","map","upload","getByHid","selection","constructor","historyId","buildCollection","remove","description","findWhere","extension_popup","empty","_templateDescription","show","visible","onadd","ftp_file","onremove","model_index","currentHistory","start","html","stop","defaults_only","compatible","enable_reset","enable_start","enable_build","enable_sources","show_table","tmpl","description_url"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-view.js","sourcesContent":["/** Renders contents of the collection uploader */\ndefine([ 'utils/utils', 'mvc/upload/upload-model', 'mvc/upload/collection/collection-row', 'mvc/upload/upload-ftp', 'mvc/ui/ui-popover', 'mvc/ui/ui-select',  'mvc/ui/ui-misc', 'mvc/collection/list-collection-creator', 'utils/uploadbox' ],\nfunction( Utils, UploadModel, UploadRow, UploadFtp, Popover, Select, Ui, LIST_COLLECTION_CREATOR ) {\n    return Backbone.View.extend({\n        // current upload size in bytes\n        upload_size: 0,\n\n        // contains upload row models\n        collection : new UploadModel.Collection(),\n\n        // keeps track of the current uploader state\n        counter : {\n            announce    : 0,\n            success     : 0,\n            error       : 0,\n            running     : 0,\n            reset : function() { this.announce = this.success = this.error = this.running = 0 }\n        },\n\n        initialize : function( app ) {\n            var self = this;\n            this.app                = app;\n            this.options            = app.options;\n            this.list_extensions    = app.list_extensions;\n            this.list_genomes       = app.list_genomes;\n            this.ui_button          = app.ui_button;\n            this.ftp_upload_site    = app.currentFtp();\n            this.setElement( this._template() );\n\n            // append buttons to dom\n            this.btnLocal    = new Ui.Button( { id: 'btn-local', title: 'Choose local files',  onclick: function() { self.uploadbox.select() }, icon: 'fa fa-laptop' } );\n            this.btnFtp      = new Ui.Button( { id: 'btn-ftp',   title: 'Choose FTP files',    onclick: function() { self._eventFtp() }, icon: 'fa fa-folder-open-o' } );\n            this.btnCreate   = new Ui.Button( { id: 'btn-new',   title: 'Paste/Fetch data',    onclick: function() { self._eventCreate() }, icon: 'fa fa-edit' } );\n            this.btnStart    = new Ui.Button( { id: 'btn-start', title: 'Start',               onclick: function() { self._eventStart() } } );\n            this.btnBuild    = new Ui.Button( { id: 'btn-build', title: 'Build',               onclick: function() { self._eventBuild() } } );\n            this.btnStop     = new Ui.Button( { id: 'btn-stop',  title: 'Pause',               onclick: function() { self._eventStop() } } );\n            this.btnReset    = new Ui.Button( { id: 'btn-reset', title: 'Reset',               onclick: function() { self._eventReset() } } );\n            this.btnClose    = new Ui.Button( { id: 'btn-close', title: 'Close',               onclick: function() { self.app.modal.hide() } } );\n            _.each( [ this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnBuild, this.btnClose ], function( button ) {\n                self.$( '.upload-buttons' ).prepend( button.$el );\n            });\n\n            // file upload\n            this.uploadbox = this.$( '.upload-box' ).uploadbox({\n                url             : this.app.options.nginx_upload_path,\n                announce        : function( index, file )       { self._eventAnnounce( index, file ) },\n                initialize      : function( index )             { return self.app.toData( [ self.collection.get( index ) ], self.history_id ) },\n                progress        : function( index, percentage ) { self._eventProgress( index, percentage ) },\n                success         : function( index, message )    { self._eventSuccess( index, message ) },\n                error           : function( index, message )    { self._eventError( index, message ) },\n                complete        : function()                    { self._eventComplete() },\n                ondragover      : function()                    { self.$( '.upload-box' ).addClass( 'highlight' ) },\n                ondragleave     : function()                    { self.$( '.upload-box' ).removeClass( 'highlight' ) }\n            });\n\n            console.log(this.list_extensions);\n\n            // add ftp file viewer\n            this.ftp = new Popover.View( { title: 'FTP files', container: this.btnFtp.$el } );\n\n            // select extension\n            this.select_extension = new Select.View({\n                css         : 'upload-footer-selection-compressed',\n                container   : this.$( '.upload-footer-extension' ),\n                data        : _.filter( this.list_extensions, function( ext ) { return !ext.composite_files } ),\n                value       : this.options.default_extension,\n                onchange    : function( extension ) { self.updateExtension( extension ) }\n            });\n\n            this.collectionType = \"list\";\n            this.select_collection = new Select.View({\n                css         : 'upload-footer-selection-compressed',\n                container   : this.$( '.upload-footer-collection-type' ),\n                data        : [{\"id\": \"list\", \"text\": \"List\"}, {\"id\": \"paired\", \"text\": \"Paired\"}, {\"id\": \"list:paired\", \"text\": \"List of Pairs\"}],\n                value       : \"list\",\n                onchange    : function( collectionType ) { self.updateCollectionType( collectionType ) }\n            })\n\n            // handle extension info popover\n            this.$( '.upload-footer-extension-info' ).on( 'click', function( e ) {\n                self.showExtensionInfo({\n                    $el         : $( e.target ),\n                    title       : self.select_extension.text(),\n                    extension   : self.select_extension.value(),\n                    placement   : 'top'\n                });\n            }).on( 'mousedown', function( e ) { e.preventDefault() } );\n\n            // genome extension\n            this.select_genome = new Select.View({\n                css         : 'upload-footer-selection',\n                container   : this.$( '.upload-footer-genome' ),\n                data        : this.list_genomes,\n                value       : this.options.default_genome,\n                onchange    : function( genome ) { self.updateGenome(genome) }\n            });\n\n            // events\n            this.collection.on( 'remove', function( model ) { self._eventRemove( model ) } );\n            this._updateScreen();\n        },\n\n        /** A new file has been dropped/selected through the uploadbox plugin */\n        _eventAnnounce: function( index, file ) {\n            this.counter.announce++;\n            var new_model = new UploadModel.Model({\n                id          : index,\n                file_name   : file.name,\n                file_size   : file.size,\n                file_mode   : file.mode || 'local',\n                file_path   : file.path,\n                file_data   : file,\n                extension   : this.select_extension.value(),\n                genome      : this.select_genome.value()\n            });\n            this.collection.add( new_model );\n            var upload_row = new UploadRow( this, { model: new_model } );\n            this.$( '.upload-table > tbody:first' ).append( upload_row.$el );\n            this._updateScreen();\n            upload_row.render();\n        },\n\n        /** Progress */\n        _eventProgress: function( index, percentage ) {\n            var it = this.collection.get( index );\n            it.set( 'percentage', percentage );\n            this.ui_button.model.set( 'percentage', this._uploadPercentage( percentage, it.get( 'file_size' ) ) );\n        },\n\n        /** Success */\n        _eventSuccess: function( index, message ) {\n            // var hdaId = message[\"outputs\"][0][\"id\"];\n            var hid = message[\"outputs\"][0][\"hid\"];\n            console.log(message[\"outputs\"][0]);       \n            var it = this.collection.get( index );\n            it.set( { 'percentage': 100, 'status': 'success', 'hid': hid } );\n            this.ui_button.model.set( 'percentage', this._uploadPercentage( 100, it.get( 'file_size' ) ) );\n            this.upload_completed += it.get( 'file_size' ) * 100;\n            this.counter.announce--;\n            this.counter.success++;\n            this._updateScreen();\n            Galaxy.currHistoryPanel.refreshContents();\n        },\n\n        /** Error */\n        _eventError: function( index, message ) {\n            var it = this.collection.get( index );\n            it.set( { 'percentage': 100, 'status': 'error', 'info': message } );\n            this.ui_button.model.set( { 'percentage': this._uploadPercentage( 100, it.get( 'file_size' ) ), 'status': 'danger' } );\n            this.upload_completed += it.get( 'file_size' ) * 100;\n            this.counter.announce--;\n            this.counter.error++;\n            this._updateScreen();\n        },\n\n        /** Queue is done */\n        _eventComplete: function() {\n            this.collection.each( function( model ) { model.get( 'status' ) == 'queued' && model.set( 'status', 'init' ) } );\n            this.counter.running = 0;\n            this._updateScreen();\n        },\n\n        _eventBuild: function() {\n            var models = this.collection.map( function( upload ) { return Galaxy.currHistoryPanel.collection.getByHid( upload.get( 'hid' ) ) } );\n            var selection = new Galaxy.currHistoryPanel.collection.constructor( models );\n            // I'm building the selection wrong because I need to set this historyId directly.\n            selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n            Galaxy.currHistoryPanel.buildCollection( this.collectionType, selection, true );\n            this.counter.running = 0;\n            this._updateScreen();\n            this._eventReset();\n            this.app.modal.hide();\n        },\n\n        /** Remove model from upload list */\n        _eventRemove: function( model ) {\n            var status = model.get( 'status' );\n            if ( status == 'success' ) {\n                this.counter.success--;\n            } else if ( status == 'error' ) {\n                this.counter.error--;\n            } else {\n                this.counter.announce--;\n            }\n            this.uploadbox.remove( model.id );\n            this._updateScreen();\n        },\n\n        //\n        // events triggered by this view\n        //\n\n        /** [public] display extension info popup */\n        showExtensionInfo: function( options ) {\n            var self = this;\n            var $el = options.$el;\n            var extension = options.extension;\n            var title = options.title;\n            var description = _.findWhere( self.list_extensions, { 'id': extension } );\n            this.extension_popup && this.extension_popup.remove();\n            this.extension_popup = new Popover.View({ placement: options.placement || 'bottom', container: $el } );\n            this.extension_popup.title( title );\n            this.extension_popup.empty();\n            this.extension_popup.append( this._templateDescription( description ) );\n            this.extension_popup.show();\n        },\n\n        /** Show/hide ftp popup */\n        _eventFtp: function() {\n            if ( !this.ftp.visible ) {\n                this.ftp.empty();\n                var self = this;\n                this.ftp.append( ( new UploadFtp({\n                    collection      : this.collection,\n                    ftp_upload_site : this.ftp_upload_site,\n                    onadd           : function( ftp_file ) {\n                        self.uploadbox.add([{\n                            mode: 'ftp',\n                            name: ftp_file.path,\n                            size: ftp_file.size,\n                            path: ftp_file.path\n                        }]);\n                    },\n                    onremove: function( model_index ) {\n                        self.collection.remove( model_index );\n                    }\n                } ) ).$el );\n                this.ftp.show();\n            } else {\n                this.ftp.hide();\n            }\n        },\n\n        /** Create a new file */\n        _eventCreate: function (){\n            this.uploadbox.add( [ { name: 'New File', size: 0, mode: 'new' } ] );\n        },\n\n        /** Start upload process */\n        _eventStart: function() {\n            if ( this.counter.announce == 0 || this.counter.running > 0 ) {\n                return;\n            }\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each( function( model ) {\n                if( model.get( 'status' ) == 'init' ) {\n                    model.set( 'status', 'queued' );\n                    self.upload_size += model.get( 'file_size' );\n                }\n            });\n            this.ui_button.model.set( { 'percentage': 0, 'status': 'success' } );\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n            this.uploadbox.start();\n            this._updateScreen();\n        },\n\n        /** Pause upload process */\n        _eventStop: function() {\n            if ( this.counter.running > 0 ) {\n                this.ui_button.model.set( 'status', 'info' );\n                $( '.upload-top-info' ).html( 'Queue will pause after completing the current file...' );\n                this.uploadbox.stop();\n            }\n        },\n\n        /** Remove all */\n        _eventReset: function() {\n            if ( this.counter.running == 0 ){\n                this.collection.reset();\n                this.counter.reset();\n                this.uploadbox.reset();\n                this.select_extension.value( this.options.default_extension );\n                this.select_genome.value( this.options.default_genome );\n                this.ui_button.model.set( 'percentage', 0 );\n                this._updateScreen();\n            }\n        },\n\n        /** Update extension for all models */\n        updateExtension: function( extension, defaults_only ) {\n            var self = this;\n            this.collection.each( function( model ) {\n                if ( model.get( 'status' ) == 'init' && ( model.get( 'extension' ) == self.options.default_extension || !defaults_only ) ) {\n                    model.set( 'extension', extension );\n                }\n            });\n        },\n\n        /** Update collection type */\n        updateCollectionType: function( collectionType ) {\n            var self = this;\n            this.collectionType = collectionType;\n        },\n\n        /** Update genome for all models */\n        updateGenome: function( genome, defaults_only ) {\n            var self = this;\n            this.collection.each( function( model ) {\n                if ( model.get( 'status' ) == 'init' && ( model.get( 'genome' ) == self.options.default_genome || !defaults_only ) ) {\n                    model.set( 'genome', genome );\n                }\n            });\n        },\n\n        /** Set screen */\n        _updateScreen: function () {\n            var message = '';\n            if( this.counter.announce == 0 ) {\n                if (this.uploadbox.compatible()) {\n                    message = '&nbsp;';\n                } else {\n                    message = 'Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.';\n                }\n            } else {\n                if ( this.counter.running == 0 ) {\n                    message = 'You added ' + this.counter.announce + ' file(s) to the queue. Add more files or click \\'Start\\' to proceed.';\n                } else {\n                    message = 'Please wait...' + this.counter.announce + ' out of ' + this.counter.running + ' remaining.';\n                }\n            }\n            this.$( '.upload-top-info' ).html( message );\n            var enable_reset = this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n            var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n            var enable_build = this.counter.running == 0 && this.counter.announce == 0 && this.counter.success > 0 && this.counter.error == 0\n            var enable_sources = this.counter.running == 0;\n            var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n            this.btnReset[ enable_reset ? 'enable' : 'disable' ]();\n            this.btnStart[ enable_start ? 'enable' : 'disable' ]();\n            this.btnStart.$el[ enable_start ? 'addClass' : 'removeClass' ]( 'btn-primary' );\n            this.btnBuild[ enable_build ? 'enable' : 'disable' ]();\n            this.btnBuild.$el[ enable_build ? 'addClass' : 'removeClass' ]( 'btn-primary' );\n            this.btnStop[ this.counter.running > 0 ? 'enable' : 'disable' ]();\n            this.btnLocal[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnFtp[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnCreate[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnFtp.$el[ this.ftp_upload_site ? 'show' : 'hide' ]();\n            this.$( '.upload-table' )[ show_table ? 'show' : 'hide' ]();\n            this.$( '.upload-helper' )[ show_table ? 'hide' : 'show' ]();\n        },\n\n        /** Calculate percentage of all queued uploads */\n        _uploadPercentage: function( percentage, size ) {\n            return ( this.upload_completed + ( percentage * size ) ) / this.upload_size;\n        },\n\n        /** Template for extensions description */\n        _templateDescription: function( options ) {\n            if ( options.description ) {\n                var tmpl = options.description;\n                if ( options.description_url ) {\n                    tmpl += '&nbsp;(<a href=\"' + options.description_url + '\" target=\"_blank\">read more</a>)';\n                }\n                return tmpl;\n            } else {\n                return 'There is no description available for this file extension.';\n            }\n        },\n\n        /** Template */\n        _template: function() {\n            return  '<div class=\"upload-view-default\">' +\n                        '<div class=\"upload-top\">' +\n                            '<h6 class=\"upload-top-info\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-box\">' +\n                            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n                            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n                                '<thead>' +\n                                    '<tr>' +\n                                        '<th>Name</th>' +\n                                        '<th>Size</th>' +\n                                        '<th>Status</th>' +\n                                        '<th/>' +\n                                    '</tr>' +\n                                '</thead>' +\n                                '<tbody/>' +\n                            '</table>' +\n                        '</div>' +\n                        '<div class=\"upload-footer\">' +\n                            '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n                            '<span class=\"upload-footer-collection-type\"/>' +\n                            '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n                            '<span class=\"upload-footer-extension\"/>' +\n                            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n                            '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n                            '<span class=\"upload-footer-genome\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-buttons\"/>' +\n                    '</div>';\n        }\n    });\n});\n"]}