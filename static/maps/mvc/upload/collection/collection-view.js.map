{"version":3,"sources":["mvc/upload/collection/collection-view.js"],"names":["define","Utils","UploadModel","UploadRow","UploadFtp","Popover","Select","Ui","LIST_COLLECTION_CREATOR","Backbone","View","extend","upload_size","collection","Collection","counter","announce","success","error","running","this","initialize","app","self","list_extensions","list_genomes","options","ui_button","setElement","_template","id","title","onclick","uploadbox","select","icon","btnFtp","Button","_eventFtp","btnCreate","_eventCreate","btnLocal","_eventStart","_eventBuild","btnStop","_eventStop","_eventReset","modal","hide","_","each","btnReset","btnStart","btnBuild","btnClose","button","prepend","url","nginx_upload_path","file","_eventAnnounce","index","toData","get","history_id","progress","percentage","_eventProgress","message","_eventSuccess","_eventError","complete","_eventComplete","ondragover","$","addClass","removeClass","container","$el","select_extension","css","filter","ext","composite_files","onchange","extension","updateExtension","collectionType","text","updateCollectionType","on","e","target","value","placement","select_genome","console","data","genome","updateGenome","model","_eventRemove","new_model","Model","file_name","name","file_size","size","file_mode","select_collection","mode","path","upload_row","append","_updateScreen","render","set","_uploadPercentage","it","hid","status","default_genome","Galaxy","currHistoryPanel","refreshContents","info","upload_completed","file_path","file_data","getByHid","upload","selection","models","historyId","buildCollection","log","showExtensionInfo","description","findWhere","extension_popup","remove","empty","_templateDescription","show","ftp","visible","ftp_upload_site","add","ftp_file","onremove","model_index","currentHistory","reset","defaults_only","default_extension","compatible","html","enable_reset","enable_start","enable_build","enable_sources","show_table","description_url","tmpl"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-view.js","sourcesContent":["/** Renders contents of the collection uploader */\ndefine([ 'utils/utils', 'mvc/upload/upload-model', 'mvc/upload/collection/collection-row', 'mvc/upload/upload-ftp', 'mvc/ui/ui-popover', 'mvc/ui/ui-select',  'mvc/ui/ui-misc', 'mvc/collection/list-collection-creator', 'utils/uploadbox' ],\nfunction( Utils, UploadModel, UploadRow, UploadFtp, Popover, Select, Ui, LIST_COLLECTION_CREATOR ) {\n    return Backbone.View.extend({\n        // current upload size in bytes\n        upload_size: 0,\n\n        // contains upload row models\n        collection : new UploadModel.Collection(),\n\n        // keeps track of the current uploader state\n        counter : {\n            announce    : 0,\n            success     : 0,\n            error       : 0,\n            running     : 0,\n            reset : function() { this.announce = this.success = this.error = this.running = 0 }\n        },\n\n        initialize : function( app ) {\n            var self = this;\n            this.app                = app;\n            this.options            = app.options;\n            this.list_extensions    = app.list_extensions;\n            this.list_genomes       = app.list_genomes;\n            this.ui_button          = app.ui_button;\n            this.ftp_upload_site    = app.currentFtp();\n            this.setElement( this._template() );\n\n            // append buttons to dom\n            this.btnLocal    = new Ui.Button( { id: 'btn-local', title: 'Choose local files',  onclick: function() { self.uploadbox.select() }, icon: 'fa fa-laptop' } );\n            this.btnFtp      = new Ui.Button( { id: 'btn-ftp',   title: 'Choose FTP files',    onclick: function() { self._eventFtp() }, icon: 'fa fa-folder-open-o' } );\n            this.btnCreate   = new Ui.Button( { id: 'btn-new',   title: 'Paste/Fetch data',    onclick: function() { self._eventCreate() }, icon: 'fa fa-edit' } );\n            this.btnStart    = new Ui.Button( { id: 'btn-start', title: 'Start',               onclick: function() { self._eventStart() } } );\n            this.btnBuild    = new Ui.Button( { id: 'btn-build', title: 'Build',               onclick: function() { self._eventBuild() } } );\n            this.btnStop     = new Ui.Button( { id: 'btn-stop',  title: 'Pause',               onclick: function() { self._eventStop() } } );\n            this.btnReset    = new Ui.Button( { id: 'btn-reset', title: 'Reset',               onclick: function() { self._eventReset() } } );\n            this.btnClose    = new Ui.Button( { id: 'btn-close', title: 'Close',               onclick: function() { self.app.modal.hide() } } );\n            _.each( [ this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnBuild, this.btnClose ], function( button ) {\n                self.$( '.upload-buttons' ).prepend( button.$el );\n            });\n\n            // file upload\n            this.uploadbox = this.$( '.upload-box' ).uploadbox({\n                url             : this.app.options.nginx_upload_path,\n                announce        : function( index, file )       { self._eventAnnounce( index, file ) },\n                initialize      : function( index )             { return self.app.toData( [ self.collection.get( index ) ], self.history_id ) },\n                progress        : function( index, percentage ) { self._eventProgress( index, percentage ) },\n                success         : function( index, message )    { self._eventSuccess( index, message ) },\n                error           : function( index, message )    { self._eventError( index, message ) },\n                complete        : function()                    { self._eventComplete() },\n                ondragover      : function()                    { self.$( '.upload-box' ).addClass( 'highlight' ) },\n                ondragleave     : function()                    { self.$( '.upload-box' ).removeClass( 'highlight' ) }\n            });\n\n            console.log(this.list_extensions);\n\n            // add ftp file viewer\n            this.ftp = new Popover.View( { title: 'FTP files', container: this.btnFtp.$el } );\n\n            // select extension\n            this.select_extension = new Select.View({\n                css         : 'upload-footer-selection-compressed',\n                container   : this.$( '.upload-footer-extension' ),\n                data        : _.filter( this.list_extensions, function( ext ) { return !ext.composite_files } ),\n                value       : this.options.default_extension,\n                onchange    : function( extension ) { self.updateExtension( extension ) }\n            });\n\n            this.collectionType = \"list\";\n            this.select_collection = new Select.View({\n                css         : 'upload-footer-selection-compressed',\n                container   : this.$( '.upload-footer-collection-type' ),\n                data        : [{\"id\": \"list\", \"text\": \"List\"}, {\"id\": \"paired\", \"text\": \"Paired\"}, {\"id\": \"list:paired\", \"text\": \"List of Pairs\"}],\n                value       : \"list\",\n                onchange    : function( collectionType ) { self.updateCollectionType( collectionType ) }\n            })\n\n            // handle extension info popover\n            this.$( '.upload-footer-extension-info' ).on( 'click', function( e ) {\n                self.showExtensionInfo({\n                    $el         : $( e.target ),\n                    title       : self.select_extension.text(),\n                    extension   : self.select_extension.value(),\n                    placement   : 'top'\n                });\n            }).on( 'mousedown', function( e ) { e.preventDefault() } );\n\n            // genome extension\n            this.select_genome = new Select.View({\n                css         : 'upload-footer-selection',\n                container   : this.$( '.upload-footer-genome' ),\n                data        : this.list_genomes,\n                value       : this.options.default_genome,\n                onchange    : function( genome ) { self.updateGenome(genome) }\n            });\n\n            // events\n            this.collection.on( 'remove', function( model ) { self._eventRemove( model ) } );\n            this._updateScreen();\n        },\n\n        /** A new file has been dropped/selected through the uploadbox plugin */\n        _eventAnnounce: function( index, file ) {\n            this.counter.announce++;\n            var new_model = new UploadModel.Model({\n                id          : index,\n                file_name   : file.name,\n                file_size   : file.size,\n                file_mode   : file.mode || 'local',\n                file_path   : file.path,\n                file_data   : file,\n                extension   : this.select_extension.value(),\n                genome      : this.select_genome.value()\n            });\n            this.collection.add( new_model );\n            var upload_row = new UploadRow( this, { model: new_model } );\n            this.$( '.upload-table > tbody:first' ).append( upload_row.$el );\n            this._updateScreen();\n            upload_row.render();\n        },\n\n        /** Progress */\n        _eventProgress: function( index, percentage ) {\n            var it = this.collection.get( index );\n            it.set( 'percentage', percentage );\n            this.ui_button.model.set( 'percentage', this._uploadPercentage( percentage, it.get( 'file_size' ) ) );\n        },\n\n        /** Success */\n        _eventSuccess: function( index, message ) {\n            // var hdaId = message[\"outputs\"][0][\"id\"];\n            var hid = message[\"outputs\"][0][\"hid\"];\n            console.log(message[\"outputs\"][0]);       \n            var it = this.collection.get( index );\n            it.set( { 'percentage': 100, 'status': 'success', 'hid': hid } );\n            this.ui_button.model.set( 'percentage', this._uploadPercentage( 100, it.get( 'file_size' ) ) );\n            this.upload_completed += it.get( 'file_size' ) * 100;\n            this.counter.announce--;\n            this.counter.success++;\n            this._updateScreen();\n            Galaxy.currHistoryPanel.refreshContents();\n        },\n\n        /** Error */\n        _eventError: function( index, message ) {\n            var it = this.collection.get( index );\n            it.set( { 'percentage': 100, 'status': 'error', 'info': message } );\n            this.ui_button.model.set( { 'percentage': this._uploadPercentage( 100, it.get( 'file_size' ) ), 'status': 'danger' } );\n            this.upload_completed += it.get( 'file_size' ) * 100;\n            this.counter.announce--;\n            this.counter.error++;\n            this._updateScreen();\n        },\n\n        /** Queue is done */\n        _eventComplete: function() {\n            this.collection.each( function( model ) { model.get( 'status' ) == 'queued' && model.set( 'status', 'init' ) } );\n            this.counter.running = 0;\n            this._updateScreen();\n        },\n\n        _eventBuild: function() {\n            var models = this.collection.map( function( upload ) { return Galaxy.currHistoryPanel.collection.getByHid( upload.get( 'hid' ) ) } );\n            var selection = new Galaxy.currHistoryPanel.collection.constructor( models );\n            // I'm building the selection wrong because I need to set this historyId directly.\n            selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n            Galaxy.currHistoryPanel.buildCollection( this.collectionType, selection, true );\n            this.counter.running = 0;\n            this._updateScreen();\n            this._eventReset();\n            this.app.modal.hide();\n        },\n\n        /** Remove model from upload list */\n        _eventRemove: function( model ) {\n            var status = model.get( 'status' );\n            if ( status == 'success' ) {\n                this.counter.success--;\n            } else if ( status == 'error' ) {\n                this.counter.error--;\n            } else {\n                this.counter.announce--;\n            }\n            this.uploadbox.remove( model.id );\n            this._updateScreen();\n        },\n\n        //\n        // events triggered by this view\n        //\n\n        /** [public] display extension info popup */\n        showExtensionInfo: function( options ) {\n            var self = this;\n            var $el = options.$el;\n            var extension = options.extension;\n            var title = options.title;\n            var description = _.findWhere( self.list_extensions, { 'id': extension } );\n            this.extension_popup && this.extension_popup.remove();\n            this.extension_popup = new Popover.View({ placement: options.placement || 'bottom', container: $el } );\n            this.extension_popup.title( title );\n            this.extension_popup.empty();\n            this.extension_popup.append( this._templateDescription( description ) );\n            this.extension_popup.show();\n        },\n\n        /** Show/hide ftp popup */\n        _eventFtp: function() {\n            if ( !this.ftp.visible ) {\n                this.ftp.empty();\n                var self = this;\n                this.ftp.append( ( new UploadFtp({\n                    collection      : this.collection,\n                    ftp_upload_site : this.ftp_upload_site,\n                    onadd           : function( ftp_file ) {\n                        self.uploadbox.add([{\n                            mode: 'ftp',\n                            name: ftp_file.path,\n                            size: ftp_file.size,\n                            path: ftp_file.path\n                        }]);\n                    },\n                    onremove: function( model_index ) {\n                        self.collection.remove( model_index );\n                    }\n                } ) ).$el );\n                this.ftp.show();\n            } else {\n                this.ftp.hide();\n            }\n        },\n\n        /** Create a new file */\n        _eventCreate: function (){\n            this.uploadbox.add( [ { name: 'New File', size: 0, mode: 'new' } ] );\n        },\n\n        /** Start upload process */\n        _eventStart: function() {\n            if ( this.counter.announce == 0 || this.counter.running > 0 ) {\n                return;\n            }\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each( function( model ) {\n                if( model.get( 'status' ) == 'init' ) {\n                    model.set( 'status', 'queued' );\n                    self.upload_size += model.get( 'file_size' );\n                }\n            });\n            this.ui_button.model.set( { 'percentage': 0, 'status': 'success' } );\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n            this.uploadbox.start();\n            this._updateScreen();\n        },\n\n        /** Pause upload process */\n        _eventStop: function() {\n            if ( this.counter.running > 0 ) {\n                this.ui_button.model.set( 'status', 'info' );\n                $( '.upload-top-info' ).html( 'Queue will pause after completing the current file...' );\n                this.uploadbox.stop();\n            }\n        },\n\n        /** Remove all */\n        _eventReset: function() {\n            if ( this.counter.running == 0 ){\n                this.collection.reset();\n                this.counter.reset();\n                this.uploadbox.reset();\n                this.select_extension.value( this.options.default_extension );\n                this.select_genome.value( this.options.default_genome );\n                this.ui_button.model.set( 'percentage', 0 );\n                this._updateScreen();\n            }\n        },\n\n        /** Update extension for all models */\n        updateExtension: function( extension, defaults_only ) {\n            var self = this;\n            this.collection.each( function( model ) {\n                if ( model.get( 'status' ) == 'init' && ( model.get( 'extension' ) == self.options.default_extension || !defaults_only ) ) {\n                    model.set( 'extension', extension );\n                }\n            });\n        },\n\n        /** Update collection type */\n        updateCollectionType: function( collectionType ) {\n            var self = this;\n            this.collectionType = collectionType;\n        },\n\n        /** Update genome for all models */\n        updateGenome: function( genome, defaults_only ) {\n            var self = this;\n            this.collection.each( function( model ) {\n                if ( model.get( 'status' ) == 'init' && ( model.get( 'genome' ) == self.options.default_genome || !defaults_only ) ) {\n                    model.set( 'genome', genome );\n                }\n            });\n        },\n\n        /** Set screen */\n        _updateScreen: function () {\n            var message = '';\n            if( this.counter.announce == 0 ) {\n                if (this.uploadbox.compatible()) {\n                    message = '&nbsp;';\n                } else {\n                    message = 'Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.';\n                }\n            } else {\n                if ( this.counter.running == 0 ) {\n                    message = 'You added ' + this.counter.announce + ' file(s) to the queue. Add more files or click \\'Start\\' to proceed.';\n                } else {\n                    message = 'Please wait...' + this.counter.announce + ' out of ' + this.counter.running + ' remaining.';\n                }\n            }\n            this.$( '.upload-top-info' ).html( message );\n            var enable_reset = this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n            var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n            var enable_build = this.counter.running == 0 && this.counter.announce == 0 && this.counter.success > 0 && this.counter.error == 0\n            var enable_sources = this.counter.running == 0;\n            var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n            this.btnReset[ enable_reset ? 'enable' : 'disable' ]();\n            this.btnStart[ enable_start ? 'enable' : 'disable' ]();\n            this.btnStart.$el[ enable_start ? 'addClass' : 'removeClass' ]( 'btn-primary' );\n            this.btnBuild[ enable_build ? 'enable' : 'disable' ]();\n            this.btnBuild.$el[ enable_build ? 'addClass' : 'removeClass' ]( 'btn-primary' );\n            this.btnStop[ this.counter.running > 0 ? 'enable' : 'disable' ]();\n            this.btnLocal[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnFtp[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnCreate[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnFtp.$el[ this.ftp_upload_site ? 'show' : 'hide' ]();\n            this.$( '.upload-table' )[ show_table ? 'show' : 'hide' ]();\n            this.$( '.upload-helper' )[ show_table ? 'hide' : 'show' ]();\n        },\n\n        /** Calculate percentage of all queued uploads */\n        _uploadPercentage: function( percentage, size ) {\n            return ( this.upload_completed + ( percentage * size ) ) / this.upload_size;\n        },\n\n        /** Template for extensions description */\n        _templateDescription: function( options ) {\n            if ( options.description ) {\n                var tmpl = options.description;\n                if ( options.description_url ) {\n                    tmpl += '&nbsp;(<a href=\"' + options.description_url + '\" target=\"_blank\">read more</a>)';\n                }\n                return tmpl;\n            } else {\n                return 'There is no description available for this file extension.';\n            }\n        },\n\n        /** Template */\n        _template: function() {\n            return  '<div class=\"upload-view-default\">' +\n                        '<div class=\"upload-top\">' +\n                            '<h6 class=\"upload-top-info\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-box\">' +\n                            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n                            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n                                '<thead>' +\n                                    '<tr>' +\n                                        '<th>Name</th>' +\n                                        '<th>Size</th>' +\n                                        '<th>Status</th>' +\n                                        '<th/>' +\n                                    '</tr>' +\n                                '</thead>' +\n                                '<tbody/>' +\n                            '</table>' +\n                        '</div>' +\n                        '<div class=\"upload-footer\">' +\n                            '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n                            '<span class=\"upload-footer-collection-type\"/>' +\n                            '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n                            '<span class=\"upload-footer-extension\"/>' +\n                            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n                            '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n                            '<span class=\"upload-footer-genome\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-buttons\"/>' +\n                    '</div>';\n        }\n    });\n});\n"]}