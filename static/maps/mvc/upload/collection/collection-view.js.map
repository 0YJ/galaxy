{"version":3,"sources":["mvc/upload/collection/collection-view.js"],"names":["Backbone","View","extend","upload_size","collection","_uploadModel2","default","Collection","counter","announce","success","error","running","reset","this","initialize","app","self","options","list_extensions","list_genomes","ui_button","currentFtp","setElement","_template","_uiMisc2","Button","uploadbox","select","icon","btnFtp","title","onclick","btnCreate","ftp_upload_site","id","btnLocal","_eventBuild","_eventReset","modal","hide","btnStop","btnReset","btnStart","button","$","prepend","$el","url","nginx_upload_path","index","file","each","_eventAnnounce","toData","get","_eventProgress","percentage","_eventSuccess","message","_eventError","_eventComplete","addClass","removeClass","container","_uiSelect2","data","_","filter","ext","composite_files","css","default_extension","extension","onchange","updateExtension","collectionType","select_collection","text","value","on","e","_uploadExtension2","target","select_extension","list","placement","preventDefault","default_genome","updateGenome","genome","_eventRemove","model","_updateScreen","new_model","Model","file_name","file_size","file_mode","file_path","file_data","select_genome","upload_row","_collectionRow2","append","render","it","set","_uploadPercentage","hids","upload_completed","status","Galaxy","currHistoryPanel","refreshContents","info","allHids","apply","forEach","models","upload","selection","historyId","hid","getByHid","constructor","_eventFtp","empty","ftp","visible","onremove","_uploadFtp2","onadd","ftp_file","add","mode","name","path","size","_eventStart","model_index","remove","_eventCreate","_eventStop","html","history_id","stop","updateCollectionType","defaults_only","enable_start","enable_build","enable_sources","enable_reset","compatible","show_table","btnBuild"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-view.js","sourcesContent":["/** Renders contents of the collection uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/collection/collection-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LIST_COLLECTION_CREATOR from \"mvc/collection/list-collection-creator\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: \"Choose local files\",\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP files\",\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnBuild = new Ui.Button({\n            id: \"btn-build\",\n            title: \"Build\",\n            onclick: function() {\n                self._eventBuild();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [\n                this.btnLocal,\n                this.btnFtp,\n                this.btnCreate,\n                this.btnStop,\n                this.btnReset,\n                this.btnStart,\n                this.btnBuild,\n                this.btnClose\n            ],\n            function(button) {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$(\".upload-box\").uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData(\n                    [self.collection.get(index)],\n                    self.history_id\n                );\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$(\".upload-box\").addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$(\".upload-box\").removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function(ext) {\n                return !ext.composite_files;\n            }),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self.updateExtension(extension);\n            }\n        });\n\n        this.collectionType = \"list\";\n        this.select_collection = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-collection-type\"),\n            data: [\n                { id: \"list\", text: \"List\" },\n                { id: \"paired\", text: \"Paired\" },\n                { id: \"list:paired\", text: \"List of Pairs\" }\n            ],\n            value: \"list\",\n            onchange: function(collectionType) {\n                self.updateCollectionType(collectionType);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", function(e) {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", function(e) {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self.updateGenome(genome);\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", function(model) {\n            self._eventRemove(model);\n        });\n        this._updateScreen();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file,\n            extension: this.select_extension.value(),\n            genome: this.select_genome.value()\n        });\n        this.collection.add(new_model);\n        var upload_row = new UploadRow(this, { model: new_model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this._updateScreen();\n        upload_row.render();\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(percentage, it.get(\"file_size\"))\n        );\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        // var hdaId = message[\"outputs\"][0][\"id\"];\n        var hids = _.pluck(message[\"outputs\"], \"hid\");\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\", hids: hids });\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(100, it.get(\"file_size\"))\n        );\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this._updateScreen();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this._updateScreen();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(function(model) {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this._updateScreen();\n    },\n\n    _eventBuild: function() {\n        var allHids = [];\n        _.forEach(this.collection.models, function(upload) {\n            allHids.push.apply(allHids, upload.get(\"hids\"));\n        });\n        var models = _.map(allHids, function(hid) {\n            return Galaxy.currHistoryPanel.collection.getByHid(hid);\n        });\n        var selection = new Galaxy.currHistoryPanel.collection.constructor(\n            models\n        );\n        // I'm building the selection wrong because I need to set this historyId directly.\n        selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n        Galaxy.currHistoryPanel.buildCollection(\n            this.collectionType,\n            selection,\n            true\n        );\n        this.counter.running = 0;\n        this._updateScreen();\n        this._eventReset();\n        this.app.modal.hide();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce == 0 || this.counter.running > 0) {\n            return;\n        }\n        var self = this;\n        this.upload_size = 0;\n        this.upload_completed = 0;\n        this.collection.each(function(model) {\n            if (model.get(\"status\") == \"init\") {\n                model.set(\"status\", \"queued\");\n                self.upload_size += model.get(\"file_size\");\n            }\n        });\n        this.ui_button.model.set({ percentage: 0, status: \"success\" });\n        this.counter.running = this.counter.announce;\n        this.history_id = this.app.currentHistory();\n        this.uploadbox.start();\n        this._updateScreen();\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\n                \"Queue will pause after completing the current file...\"\n            );\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this._updateScreen();\n        }\n    },\n\n    /** Update extension for all models */\n    updateExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension ||\n                    !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update collection type */\n    updateCollectionType: function(collectionType) {\n        var self = this;\n        this.collectionType = collectionType;\n    },\n\n    /** Update genome for all models */\n    updateGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome ||\n                    !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Set screen */\n    _updateScreen: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message =\n                    \"You added \" +\n                    this.counter.announce +\n                    \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n            } else {\n                message =\n                    \"Please wait...\" +\n                    this.counter.announce +\n                    \" out of \" +\n                    this.counter.running +\n                    \" remaining.\";\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 &&\n            this.counter.announce + this.counter.success + this.counter.error >\n                0;\n        var enable_start =\n            this.counter.running == 0 && this.counter.announce > 0;\n        var enable_build =\n            this.counter.running == 0 &&\n            this.counter.announce == 0 &&\n            this.counter.success > 0 &&\n            this.counter.error == 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table =\n            this.counter.announce + this.counter.success + this.counter.error >\n            0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\n            \"btn-primary\"\n        );\n        this.btnBuild[enable_build ? \"enable\" : \"disable\"]();\n        this.btnBuild.$el[enable_build ? \"addClass\" : \"removeClass\"](\n            \"btn-primary\"\n        );\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n            '<span class=\"upload-footer-collection-type\"/>' +\n            '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n"]}