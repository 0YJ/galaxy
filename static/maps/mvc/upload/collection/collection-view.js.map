{"version":3,"sources":["mvc/upload/collection/collection-view.js"],"names":["Backbone","View","extend","upload_size","collection","_uploadModel2","default","Collection","counter","announce","success","error","running","reset","this","initialize","app","self","options","list_extensions","list_genomes","ui_button","currentFtp","setElement","_template","_uiMisc2","Button","uploadbox","select","icon","btnFtp","title","onclick","btnCreate","ftp_upload_site","id","btnLocal","_eventBuild","_eventReset","modal","hide","btnStop","btnReset","btnStart","button","$","prepend","$el","url","nginx_upload_path","index","file","each","_eventAnnounce","toData","get","_eventProgress","percentage","_eventSuccess","message","_eventError","_eventComplete","addClass","removeClass","container","_uiSelect2","data","_","filter","ext","composite_files","value","default_extension","onchange","select_extension","css","updateExtension","extension","collectionType","text","on","e","_uploadExtension2","target","preventDefault","select_genome","genome","model","_updateScreen","new_model","Model","name","file_name","file_size","file_mode","file_path","file_data","add","upload_row","append","it","set","_uploadPercentage","hids","pluck","upload_completed","status","Galaxy","currHistoryPanel","info","allHids","models","forEach","upload","selection","historyId","buildCollection","hid","constructor","_eventRemove","_eventFtp","ftp","size","path","empty","onremove","onadd","show","ftp_file","mode","model_index","remove","_eventStart","history_id","_eventStop","currentHistory","html","stop","updateCollectionType","default_genome","defaults_only","updateGenome","enable_reset","enable_start","enable_sources","btnBuild","enable_build","show_table"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-view.js","sourcesContent":["/** Renders contents of the collection uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/collection/collection-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LIST_COLLECTION_CREATOR from \"mvc/collection/list-collection-creator\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: \"Choose local files\",\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP files\",\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnBuild = new Ui.Button({\n            id: \"btn-build\",\n            title: \"Build\",\n            onclick: function() {\n                self._eventBuild();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [\n                this.btnLocal,\n                this.btnFtp,\n                this.btnCreate,\n                this.btnStop,\n                this.btnReset,\n                this.btnStart,\n                this.btnBuild,\n                this.btnClose\n            ],\n            button => {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$(\".upload-box\").uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData(\n                    [self.collection.get(index)],\n                    self.history_id\n                );\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$(\".upload-box\").addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$(\".upload-box\").removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, ext => !ext.composite_files),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self.updateExtension(extension);\n            }\n        });\n\n        this.collectionType = \"list\";\n        this.select_collection = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-collection-type\"),\n            data: [\n                { id: \"list\", text: \"List\" },\n                { id: \"paired\", text: \"Paired\" },\n                { id: \"list:paired\", text: \"List of Pairs\" }\n            ],\n            value: \"list\",\n            onchange: function(collectionType) {\n                self.updateCollectionType(collectionType);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", e => {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self.updateGenome(genome);\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", model => {\n            self._eventRemove(model);\n        });\n        this._updateScreen();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file,\n            extension: this.select_extension.value(),\n            genome: this.select_genome.value()\n        });\n        this.collection.add(new_model);\n        var upload_row = new UploadRow(this, { model: new_model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this._updateScreen();\n        upload_row.render();\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(percentage, it.get(\"file_size\"))\n        );\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        // var hdaId = message[\"outputs\"][0][\"id\"];\n        var hids = _.pluck(message[\"outputs\"], \"hid\");\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\", hids: hids });\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(100, it.get(\"file_size\"))\n        );\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this._updateScreen();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this._updateScreen();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(model => {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this._updateScreen();\n    },\n\n    _eventBuild: function() {\n        var allHids = [];\n        _.forEach(this.collection.models, upload => {\n            allHids.push.apply(allHids, upload.get(\"hids\"));\n        });\n        var models = _.map(allHids, hid =>\n            Galaxy.currHistoryPanel.collection.getByHid(hid)\n        );\n        var selection = new Galaxy.currHistoryPanel.collection.constructor(\n            models\n        );\n        // I'm building the selection wrong because I need to set this historyId directly.\n        selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n        Galaxy.currHistoryPanel.buildCollection(\n            this.collectionType,\n            selection,\n            true\n        );\n        this.counter.running = 0;\n        this._updateScreen();\n        this._eventReset();\n        this.app.modal.hide();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce == 0 || this.counter.running > 0) {\n            return;\n        }\n        var self = this;\n        this.upload_size = 0;\n        this.upload_completed = 0;\n        this.collection.each(model => {\n            if (model.get(\"status\") == \"init\") {\n                model.set(\"status\", \"queued\");\n                self.upload_size += model.get(\"file_size\");\n            }\n        });\n        this.ui_button.model.set({ percentage: 0, status: \"success\" });\n        this.counter.running = this.counter.announce;\n        this.history_id = this.app.currentHistory();\n        this.uploadbox.start();\n        this._updateScreen();\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\n                \"Queue will pause after completing the current file...\"\n            );\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this._updateScreen();\n        }\n    },\n\n    /** Update extension for all models */\n    updateExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension ||\n                    !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update collection type */\n    updateCollectionType: function(collectionType) {\n        var self = this;\n        this.collectionType = collectionType;\n    },\n\n    /** Update genome for all models */\n    updateGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome ||\n                    !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Set screen */\n    _updateScreen: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message = `You added ${this.counter\n                    .announce} file(s) to the queue. Add more files or click 'Start' to proceed.`;\n            } else {\n                message = `Please wait...${this.counter.announce} out of ${this\n                    .counter.running} remaining.`;\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 &&\n            this.counter.announce + this.counter.success + this.counter.error >\n                0;\n        var enable_start =\n            this.counter.running == 0 && this.counter.announce > 0;\n        var enable_build =\n            this.counter.running == 0 &&\n            this.counter.announce == 0 &&\n            this.counter.success > 0 &&\n            this.counter.error == 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table =\n            this.counter.announce + this.counter.success + this.counter.error >\n            0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\n            \"btn-primary\"\n        );\n        this.btnBuild[enable_build ? \"enable\" : \"disable\"]();\n        this.btnBuild.$el[enable_build ? \"addClass\" : \"removeClass\"](\n            \"btn-primary\"\n        );\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n            '<span class=\"upload-footer-collection-type\"/>' +\n            '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n"]}