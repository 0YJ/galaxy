{"version":3,"sources":["mvc/upload/upload-ftp.js"],"names":["define","Utils","Backbone","View","extend","initialize","options","Model","self","class_add","cls","class_remove","class_partial","ftp_upload_site","help_enabled","help_text","collection","onchange","onadd","onremove","this","model","get","set","_template","$","setElement","$content","$wait","$help","$number","$disk","$body","$warning","render","show","hide","ajax","url","root","Galaxy","ftp_files","method","success","_index","_renderTable","rows","length","empty","_","ftp_file","size","each","push","addClass","bytesToString","_all","$select","_renderRow","attributes","$it","_templateRow","$icon","find","append","path","on","ftp_index","id","add","hasClass","index","model_index","undefined","_refresh","_switch","removeClass","new_index","memo","element","counts","escape","ctime"],"mappings":"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","file":"../../../scripts/mvc/upload/upload-ftp.js","sourcesContent":["/** This renders the content of the ftp popup **/\ndefine( [ 'utils/utils' ], function( Utils ) {\n    return Backbone.View.extend({\n        initialize: function( options ) {\n            var self = this;\n            this.model = new Backbone.Model( {\n                cls             : 'upload-ftp',\n                class_add       : 'upload-icon-button fa fa-square-o',\n                class_remove    : 'upload-icon-button fa fa-check-square-o',\n                class_partial   : 'upload-icon-button fa fa-minus-square-o',\n                help_enabled    : true,\n                help_text       : 'This Galaxy server allows you to upload files via FTP. To upload some files, log in to the FTP server at <strong>' + options.ftp_upload_site + '</strong> using your Galaxy credentials.',\n                collection      : null,\n                onchange        : function() {},\n                onadd           : function() {},\n                onremove        : function() {}\n            } ).set( options );\n            this.collection = this.model.get( 'collection' );\n            this.setElement( this._template() );\n            this.$content = this.$( '.upload-ftp-content' );\n            this.$wait    = this.$( '.upload-ftp-wait' );\n            this.$help    = this.$( '.upload-ftp-help' );\n            this.$number  = this.$( '.upload-ftp-number' );\n            this.$disk    = this.$( '.upload-ftp-disk' );\n            this.$body    = this.$( '.upload-ftp-body' );\n            this.$warning = this.$( '.upload-ftp-warning' );\n            this.$select  = this.$( '.upload-ftp-select-all' );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            this.$wait.show();\n            this.$content.hide();\n            this.$warning.hide();\n            this.$help.hide();\n            $.ajax({\n                url     : Galaxy.root + 'api/remote_files',\n                method  : 'GET',\n                success : function( ftp_files ) {\n                    self.model.set( 'ftp_files', ftp_files );\n                    self._index();\n                    self._renderTable();\n                },\n                error   : function() { self._renderTable() }\n            });\n        },\n\n        /** Fill table with ftp entries */\n        _renderTable: function() {\n            var self = this;\n            var ftp_files = this.model.get( 'ftp_files' );\n            this.rows = [];\n            if ( ftp_files && ftp_files.length > 0 ) {\n                this.$body.empty();\n                var size = 0;\n                _.each( ftp_files, function( ftp_file ) {\n                    self.rows.push( self._renderRow( ftp_file ) );\n                    size += ftp_file.size;\n                } );\n                this.$number.html( ftp_files.length + ' files' );\n                this.$disk.html( Utils.bytesToString ( size, true ) );\n                if ( this.collection ) {\n                    this.$( '._has_collection' ).show();\n                    this.$select.addClass( this.model.get( 'class_add' ) )\n                                .off().on( 'click', function() { self._all() } );\n                    this._refresh();\n                }\n                this.$content.show();\n            } else {\n                this.$warning.show();\n            }\n            this.model.get( 'help_enabled' ) && this.$help.show();\n            this.$wait.hide();\n        },\n\n        /** Add row */\n        _renderRow: function( ftp_file ) {\n            var self = this;\n            var options = this.model.attributes;\n            var $it = $( this._templateRow( ftp_file ) );\n            var $icon = $it.find( '.icon' );\n            this.$body.append( $it );\n            if ( this.collection ) {\n                var model_index = this.ftp_index[ ftp_file.path ];\n                $icon.addClass( model_index === undefined ? options.class_add : options.class_remove );\n                $it.on('click', function() {\n                    self._switch( $icon, ftp_file );\n                    self._refresh();\n                });\n            } else {\n                $it.on('click', function() { options.onchange( ftp_file ) } );\n            }\n            return $icon;\n        },\n\n        /** Create ftp index */\n        _index: function() {\n            var self = this;\n            this.ftp_index = {};\n            this.collection && this.collection.each( function( model ) {\n                if ( model.get( 'file_mode' ) == 'ftp' ) {\n                    self.ftp_index[ model.get( 'file_path' ) ] = model.id;\n                }\n            } );\n        },\n\n        /** Select all event handler */\n        _all: function() {\n            var options = this.model.attributes;\n            var ftp_files = this.model.get( 'ftp_files' );\n            var add = this.$select.hasClass( options.class_add );\n            for (var index in ftp_files ) {\n                var ftp_file = ftp_files[ index ];\n                var model_index = this.ftp_index[ ftp_file.path ];\n                if( model_index === undefined && add || model_index !== undefined  && !add ) {\n                    this._switch( this.rows[ index ], ftp_file );\n                }\n            }\n            this._refresh();\n        },\n\n        /** Handle collection changes */\n        _switch: function( $icon, ftp_file ) {\n            $icon.removeClass();\n            var options = this.model.attributes;\n            var model_index = this.ftp_index[ ftp_file.path ];\n            if ( model_index === undefined ) {\n                var new_index = options.onadd( ftp_file );\n                $icon.addClass( options.class_remove );\n                this.ftp_index[ ftp_file.path ] = new_index;\n            } else {\n                options.onremove( model_index );\n                $icon.addClass( options.class_add );\n                this.ftp_index[ ftp_file.path ] = undefined;\n            }\n        },\n\n        /** Refresh select all button state */\n        _refresh: function() {\n            var counts = _.reduce( this.ftp_index, function( memo, element ) {\n                ( element !== undefined ) && memo++;\n                return memo;\n            }, 0 );\n            this.$select.removeClass();\n            if ( counts == 0 ) {\n                this.$select.addClass( this.model.get( 'class_add' ) );\n            } else {\n                this.$select.addClass( counts == this.rows.length ? this.model.get( 'class_remove' ) : this.model.get( 'class_partial' ) );\n            }\n        },\n\n        /** Template of row */\n        _templateRow: function( options ) {\n            return  '<tr class=\"upload-ftp-row\">' +\n                        '<td class=\"_has_collection\" style=\"display: none;\"><div class=\"icon\"/></td>' +\n                        '<td class=\"ftp-name\">' + _.escape(options.path) + '</td>' +\n                        '<td class=\"ftp-size\">' + Utils.bytesToString( options.size ) + '</td>' +\n                        '<td class=\"ftp-time\">' + options.ctime + '</td>' +\n                    '</tr>';\n        },\n\n        /** Template of main view */\n        _template: function() {\n            return  '<div class=\"' + this.model.get( 'cls' ) + '\">' +\n                        '<div class=\"upload-ftp-wait fa fa-spinner fa-spin\"/>' +\n                        '<div class=\"upload-ftp-help\">' + this.model.get( 'help_text' ) + '</div>' +\n                        '<div class=\"upload-ftp-content\">' +\n                            '<span style=\"whitespace: nowrap; float: left;\">Available files: </span>' +\n                            '<span style=\"whitespace: nowrap; float: right;\">' +\n                                '<span class=\"upload-icon fa fa-file-text-o\"/>' +\n                                '<span class=\"upload-ftp-number\"/>&nbsp;&nbsp;' +\n                                '<span class=\"upload-icon fa fa-hdd-o\"/>' +\n                                '<span class=\"upload-ftp-disk\"/>' +\n                            '</span>' +\n                            '<table class=\"grid\" style=\"float: left;\">' +\n                                '<thead>' +\n                                    '<tr>' +\n                                        '<th class=\"_has_collection\" style=\"display: none;\"><div class=\"upload-ftp-select-all\"></th>' +\n                                        '<th>Name</th>' +\n                                        '<th>Size</th>' +\n                                        '<th>Created</th>' +\n                                    '</tr>' +\n                                '</thead>' +\n                                '<tbody class=\"upload-ftp-body\"/>' +\n                            '</table>' +\n                        '</div>' +\n                        '<div class=\"upload-ftp-warning warningmessage\">' +\n                            'Your FTP directory does not contain any files.' +\n                        '</div>'\n                    '<div>';\n        }\n    });\n});\n"]}