{"version":3,"sources":["mvc/upload/upload-ftp.js"],"names":["Backbone","View","extend","initialize","options","this","model","Model","cls","class_add","class_remove","class_partial","help_enabled","help_text","ftp_upload_site","collection","onadd","self","onremove","get","$","onchange","$select","render","$help","$wait","$number","$content","hide","$warning","ajax","url","root","method","success","ftp_files","set","error","_renderTable","$body","empty","size","_","each","ftp_file","rows","push","_renderRow","html","length","_utils2","default","show","attributes","$it","$icon","find","append","ftp_index","path","_templateRow","on","model_index","_refresh","_index","id","_all","add","hasClass","_switch","index","removeClass","new_index","addClass","undefined","element","memo","counts","escape","bytesToString","ctime","_template"],"mappings":"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","file":"../../../scripts/mvc/upload/upload-ftp.js","sourcesContent":["/** This renders the content of the ftp popup **/\nimport Utils from \"utils/utils\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model = new Backbone.Model({\n            cls: \"upload-ftp\",\n            class_add: \"upload-icon-button fa fa-square-o\",\n            class_remove: \"upload-icon-button fa fa-check-square-o\",\n            class_partial: \"upload-icon-button fa fa-minus-square-o\",\n            help_enabled: true,\n            help_text:\n                \"This Galaxy server allows you to upload files via FTP. To upload some files, log in to the FTP server at <strong>\" +\n                options.ftp_upload_site +\n                \"</strong> using your Galaxy credentials.\",\n            collection: null,\n            onchange: function() {},\n            onadd: function() {},\n            onremove: function() {}\n        }).set(options);\n        this.collection = this.model.get(\"collection\");\n        this.setElement(this._template());\n        this.$content = this.$(\".upload-ftp-content\");\n        this.$wait = this.$(\".upload-ftp-wait\");\n        this.$help = this.$(\".upload-ftp-help\");\n        this.$number = this.$(\".upload-ftp-number\");\n        this.$disk = this.$(\".upload-ftp-disk\");\n        this.$body = this.$(\".upload-ftp-body\");\n        this.$warning = this.$(\".upload-ftp-warning\");\n        this.$select = this.$(\".upload-ftp-select-all\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        this.$wait.show();\n        this.$content.hide();\n        this.$warning.hide();\n        this.$help.hide();\n        $.ajax({\n            url: Galaxy.root + \"api/remote_files\",\n            method: \"GET\",\n            success: function(ftp_files) {\n                self.model.set(\"ftp_files\", ftp_files);\n                self._index();\n                self._renderTable();\n            },\n            error: function() {\n                self._renderTable();\n            }\n        });\n    },\n\n    /** Fill table with ftp entries */\n    _renderTable: function() {\n        var self = this;\n        var ftp_files = this.model.get(\"ftp_files\");\n        this.rows = [];\n        if (ftp_files && ftp_files.length > 0) {\n            this.$body.empty();\n            var size = 0;\n            _.each(ftp_files, function(ftp_file) {\n                self.rows.push(self._renderRow(ftp_file));\n                size += ftp_file.size;\n            });\n            this.$number.html(ftp_files.length + \" files\");\n            this.$disk.html(Utils.bytesToString(size, true));\n            if (this.collection) {\n                this.$(\"._has_collection\").show();\n                this.$select\n                    .addClass(this.model.get(\"class_add\"))\n                    .off()\n                    .on(\"click\", function() {\n                        self._all();\n                    });\n                this._refresh();\n            }\n            this.$content.show();\n        } else {\n            this.$warning.show();\n        }\n        this.model.get(\"help_enabled\") && this.$help.show();\n        this.$wait.hide();\n    },\n\n    /** Add row */\n    _renderRow: function(ftp_file) {\n        var self = this;\n        var options = this.model.attributes;\n        var $it = $(this._templateRow(ftp_file));\n        var $icon = $it.find(\".icon\");\n        this.$body.append($it);\n        if (this.collection) {\n            var model_index = this.ftp_index[ftp_file.path];\n            $icon.addClass(\n                model_index === undefined\n                    ? options.class_add\n                    : options.class_remove\n            );\n            $it.on(\"click\", function() {\n                self._switch($icon, ftp_file);\n                self._refresh();\n            });\n        } else {\n            $it.on(\"click\", function() {\n                options.onchange(ftp_file);\n            });\n        }\n        return $icon;\n    },\n\n    /** Create ftp index */\n    _index: function() {\n        var self = this;\n        this.ftp_index = {};\n        this.collection &&\n            this.collection.each(function(model) {\n                if (model.get(\"file_mode\") == \"ftp\") {\n                    self.ftp_index[model.get(\"file_path\")] = model.id;\n                }\n            });\n    },\n\n    /** Select all event handler */\n    _all: function() {\n        var options = this.model.attributes;\n        var ftp_files = this.model.get(\"ftp_files\");\n        var add = this.$select.hasClass(options.class_add);\n        for (var index in ftp_files) {\n            var ftp_file = ftp_files[index];\n            var model_index = this.ftp_index[ftp_file.path];\n            if (\n                (model_index === undefined && add) ||\n                (model_index !== undefined && !add)\n            ) {\n                this._switch(this.rows[index], ftp_file);\n            }\n        }\n        this._refresh();\n    },\n\n    /** Handle collection changes */\n    _switch: function($icon, ftp_file) {\n        $icon.removeClass();\n        var options = this.model.attributes;\n        var model_index = this.ftp_index[ftp_file.path];\n        if (model_index === undefined) {\n            var new_index = options.onadd(ftp_file);\n            $icon.addClass(options.class_remove);\n            this.ftp_index[ftp_file.path] = new_index;\n        } else {\n            options.onremove(model_index);\n            $icon.addClass(options.class_add);\n            this.ftp_index[ftp_file.path] = undefined;\n        }\n    },\n\n    /** Refresh select all button state */\n    _refresh: function() {\n        var counts = _.reduce(\n            this.ftp_index,\n            function(memo, element) {\n                element !== undefined && memo++;\n                return memo;\n            },\n            0\n        );\n        this.$select.removeClass();\n        if (counts == 0) {\n            this.$select.addClass(this.model.get(\"class_add\"));\n        } else {\n            this.$select.addClass(\n                counts == this.rows.length\n                    ? this.model.get(\"class_remove\")\n                    : this.model.get(\"class_partial\")\n            );\n        }\n    },\n\n    /** Template of row */\n    _templateRow: function(options) {\n        return (\n            '<tr class=\"upload-ftp-row\">' +\n            '<td class=\"_has_collection\" style=\"display: none;\"><div class=\"icon\"/></td>' +\n            '<td class=\"ftp-name\">' +\n            _.escape(options.path) +\n            \"</td>\" +\n            '<td class=\"ftp-size\">' +\n            Utils.bytesToString(options.size) +\n            \"</td>\" +\n            '<td class=\"ftp-time\">' +\n            options.ctime +\n            \"</td>\" +\n            \"</tr>\"\n        );\n    },\n\n    /** Template of main view */\n    _template: function() {\n        return (\n            '<div class=\"' +\n            this.model.get(\"cls\") +\n            '\">' +\n            '<div class=\"upload-ftp-wait fa fa-spinner fa-spin\"/>' +\n            '<div class=\"upload-ftp-help\">' +\n            this.model.get(\"help_text\") +\n            \"</div>\" +\n            '<div class=\"upload-ftp-content\">' +\n            '<span style=\"whitespace: nowrap; float: left;\">Available files: </span>' +\n            '<span style=\"whitespace: nowrap; float: right;\">' +\n            '<span class=\"upload-icon fa fa-file-text-o\"/>' +\n            '<span class=\"upload-ftp-number\"/>&nbsp;&nbsp;' +\n            '<span class=\"upload-icon fa fa-hdd-o\"/>' +\n            '<span class=\"upload-ftp-disk\"/>' +\n            \"</span>\" +\n            '<table class=\"grid\" style=\"float: left;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            '<th class=\"_has_collection\" style=\"display: none;\"><div class=\"upload-ftp-select-all\"></th>' +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Created</th>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            '<tbody class=\"upload-ftp-body\"/>' +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-ftp-warning warningmessage\">' +\n            \"Your FTP directory does not contain any files.\" +\n            \"</div>\"\n        );\n        (\"<div>\");\n    }\n});\n"]}