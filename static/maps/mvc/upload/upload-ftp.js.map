{"version":3,"sources":["mvc/upload/upload-ftp.js"],"names":["_utils","require","Backbone","View","extend","initialize","options","this","model","Model","cls","class_add","class_remove","class_partial","help_enabled","help_text","ftp_upload_site","self","collection","get","_template","$","onchange","onadd","onremove","set","setElement","$content","$wait","render","$warning","$select","hide","$help","ajax","url","Galaxy","root","success","show","ftp_files","_index","method","_renderTable","error","rows","length","$body","empty","size","ftp_file","push","_renderRow","_utils2","default","bytesToString","each","off","$number","html","_all","_refresh","attributes","$it","_templateRow","find","append","path","$icon","undefined","model_index","on","_switch","ftp_index","id","add","hasClass","index","removeClass","addClass","new_index","counts","element","memo","_","escape","ctime"],"mappings":"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","file":"../../../scripts/mvc/upload/upload-ftp.js","sourcesContent":["/** This renders the content of the ftp popup **/\nimport Utils from \"utils/utils\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model = new Backbone.Model({\n            cls: \"upload-ftp\",\n            class_add: \"upload-icon-button fa fa-square-o\",\n            class_remove: \"upload-icon-button fa fa-check-square-o\",\n            class_partial: \"upload-icon-button fa fa-minus-square-o\",\n            help_enabled: true,\n            help_text:\n                \"This Galaxy server allows you to upload files via FTP. To upload some files, log in to the FTP server at <strong>\" +\n                options.ftp_upload_site +\n                \"</strong> using your Galaxy credentials.\",\n            collection: null,\n            onchange: function() {},\n            onadd: function() {},\n            onremove: function() {}\n        }).set(options);\n        this.collection = this.model.get(\"collection\");\n        this.setElement(this._template());\n        this.$content = this.$(\".upload-ftp-content\");\n        this.$wait = this.$(\".upload-ftp-wait\");\n        this.$help = this.$(\".upload-ftp-help\");\n        this.$number = this.$(\".upload-ftp-number\");\n        this.$disk = this.$(\".upload-ftp-disk\");\n        this.$body = this.$(\".upload-ftp-body\");\n        this.$warning = this.$(\".upload-ftp-warning\");\n        this.$select = this.$(\".upload-ftp-select-all\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        this.$wait.show();\n        this.$content.hide();\n        this.$warning.hide();\n        this.$help.hide();\n        $.ajax({\n            url: Galaxy.root + \"api/remote_files\",\n            method: \"GET\",\n            success: function(ftp_files) {\n                self.model.set(\"ftp_files\", ftp_files);\n                self._index();\n                self._renderTable();\n            },\n            error: function() {\n                self._renderTable();\n            }\n        });\n    },\n\n    /** Fill table with ftp entries */\n    _renderTable: function() {\n        var self = this;\n        var ftp_files = this.model.get(\"ftp_files\");\n        this.rows = [];\n        if (ftp_files && ftp_files.length > 0) {\n            this.$body.empty();\n            var size = 0;\n            _.each(ftp_files, function(ftp_file) {\n                self.rows.push(self._renderRow(ftp_file));\n                size += ftp_file.size;\n            });\n            this.$number.html(ftp_files.length + \" files\");\n            this.$disk.html(Utils.bytesToString(size, true));\n            if (this.collection) {\n                this.$(\"._has_collection\").show();\n                this.$select\n                    .addClass(this.model.get(\"class_add\"))\n                    .off()\n                    .on(\"click\", function() {\n                        self._all();\n                    });\n                this._refresh();\n            }\n            this.$content.show();\n        } else {\n            this.$warning.show();\n        }\n        this.model.get(\"help_enabled\") && this.$help.show();\n        this.$wait.hide();\n    },\n\n    /** Add row */\n    _renderRow: function(ftp_file) {\n        var self = this;\n        var options = this.model.attributes;\n        var $it = $(this._templateRow(ftp_file));\n        var $icon = $it.find(\".icon\");\n        this.$body.append($it);\n        if (this.collection) {\n            var model_index = this.ftp_index[ftp_file.path];\n            $icon.addClass(\n                model_index === undefined\n                    ? options.class_add\n                    : options.class_remove\n            );\n            $it.on(\"click\", function() {\n                self._switch($icon, ftp_file);\n                self._refresh();\n            });\n        } else {\n            $it.on(\"click\", function() {\n                options.onchange(ftp_file);\n            });\n        }\n        return $icon;\n    },\n\n    /** Create ftp index */\n    _index: function() {\n        var self = this;\n        this.ftp_index = {};\n        this.collection &&\n            this.collection.each(function(model) {\n                if (model.get(\"file_mode\") == \"ftp\") {\n                    self.ftp_index[model.get(\"file_path\")] = model.id;\n                }\n            });\n    },\n\n    /** Select all event handler */\n    _all: function() {\n        var options = this.model.attributes;\n        var ftp_files = this.model.get(\"ftp_files\");\n        var add = this.$select.hasClass(options.class_add);\n        for (var index in ftp_files) {\n            var ftp_file = ftp_files[index];\n            var model_index = this.ftp_index[ftp_file.path];\n            if (\n                (model_index === undefined && add) ||\n                (model_index !== undefined && !add)\n            ) {\n                this._switch(this.rows[index], ftp_file);\n            }\n        }\n        this._refresh();\n    },\n\n    /** Handle collection changes */\n    _switch: function($icon, ftp_file) {\n        $icon.removeClass();\n        var options = this.model.attributes;\n        var model_index = this.ftp_index[ftp_file.path];\n        if (model_index === undefined) {\n            var new_index = options.onadd(ftp_file);\n            $icon.addClass(options.class_remove);\n            this.ftp_index[ftp_file.path] = new_index;\n        } else {\n            options.onremove(model_index);\n            $icon.addClass(options.class_add);\n            this.ftp_index[ftp_file.path] = undefined;\n        }\n    },\n\n    /** Refresh select all button state */\n    _refresh: function() {\n        var counts = _.reduce(\n            this.ftp_index,\n            function(memo, element) {\n                element !== undefined && memo++;\n                return memo;\n            },\n            0\n        );\n        this.$select.removeClass();\n        if (counts == 0) {\n            this.$select.addClass(this.model.get(\"class_add\"));\n        } else {\n            this.$select.addClass(\n                counts == this.rows.length\n                    ? this.model.get(\"class_remove\")\n                    : this.model.get(\"class_partial\")\n            );\n        }\n    },\n\n    /** Template of row */\n    _templateRow: function(options) {\n        return (\n            '<tr class=\"upload-ftp-row\">' +\n            '<td class=\"_has_collection\" style=\"display: none;\"><div class=\"icon\"/></td>' +\n            '<td class=\"ftp-name\">' +\n            _.escape(options.path) +\n            \"</td>\" +\n            '<td class=\"ftp-size\">' +\n            Utils.bytesToString(options.size) +\n            \"</td>\" +\n            '<td class=\"ftp-time\">' +\n            options.ctime +\n            \"</td>\" +\n            \"</tr>\"\n        );\n    },\n\n    /** Template of main view */\n    _template: function() {\n        return (\n            '<div class=\"' +\n            this.model.get(\"cls\") +\n            '\">' +\n            '<div class=\"upload-ftp-wait fa fa-spinner fa-spin\"/>' +\n            '<div class=\"upload-ftp-help\">' +\n            this.model.get(\"help_text\") +\n            \"</div>\" +\n            '<div class=\"upload-ftp-content\">' +\n            '<span style=\"whitespace: nowrap; float: left;\">Available files: </span>' +\n            '<span style=\"whitespace: nowrap; float: right;\">' +\n            '<span class=\"upload-icon fa fa-file-text-o\"/>' +\n            '<span class=\"upload-ftp-number\"/>&nbsp;&nbsp;' +\n            '<span class=\"upload-icon fa fa-hdd-o\"/>' +\n            '<span class=\"upload-ftp-disk\"/>' +\n            \"</span>\" +\n            '<table class=\"grid\" style=\"float: left;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            '<th class=\"_has_collection\" style=\"display: none;\"><div class=\"upload-ftp-select-all\"></th>' +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Created</th>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            '<tbody class=\"upload-ftp-body\"/>' +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-ftp-warning warningmessage\">' +\n            \"Your FTP directory does not contain any files.\" +\n            \"</div>\"\n        );\n        (\"<div>\");\n    }\n});\n"]}