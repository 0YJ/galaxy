{"version":3,"sources":["mvc/upload/composite/composite-view.js"],"names":["define","Utils","UploadModel","UploadRow","Popover","Select","Ui","Backbone","View","extend","collection","Collection","initialize","this","self","app","options","list_extensions","list_genomes","ftp_upload_site","_template","btnStart","Button","title","onclick","_eventStart","modal","hide","_","each","btnClose","prepend","button","$el","container","$","data","filter","ext","composite_files","onchange","extension","select_extension","reset","css","details","findWhere","id","item","size","file_desc","description","name","e","_showExtensionInfo","target","text","value","placement","on","preventDefault","default_genome","listenTo","model","_eventAnnounce","select_genome","render","first","get","enable","where","length","addClass","disable","upload_row","append","removeClass","set","genome","uploadpost","url","nginx_upload_path","toData","message","_eventSuccess","error","_eventError","progress","percentage","_eventProgress","success","it","status","info","extension_popup","remove","empty","Galaxy","currHistoryPanel","refreshContents","show","_templateDescription","tmpl","description_url"],"mappings":"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","file":"../../../../scripts/mvc/upload/composite/composite-view.js","sourcesContent":["/** Renders contents of the composite uploader */\ndefine([ 'utils/utils', 'mvc/upload/upload-model', 'mvc/upload/composite/composite-row', 'mvc/ui/ui-popover', 'mvc/ui/ui-select', 'mvc/ui/ui-misc'],\nfunction( Utils, UploadModel, UploadRow, Popover, Select, Ui ) {\n    return Backbone.View.extend({\n        collection: new UploadModel.Collection(),\n        initialize: function(app) {\n            var self = this;\n            this.app                = app;\n            this.options            = app.options;\n            this.list_extensions    = app.list_extensions;\n            this.list_genomes       = app.list_genomes;\n            this.ftp_upload_site    = app.currentFtp();\n            this.setElement( this._template() );\n\n            // create button section\n            this.btnStart = new Ui.Button( { title: 'Start', onclick: function() { self._eventStart() } } );\n            this.btnClose = new Ui.Button( { title: 'Close', onclick: function() { self.app.modal.hide() } } );\n\n            // append buttons to dom\n            _.each( [ this.btnStart, this.btnClose ], function( button ) {\n                self.$( '.upload-buttons' ).prepend( button.$el );\n            });\n\n            // select extension\n            this.select_extension = new Select.View({\n                css         : 'upload-footer-selection',\n                container   : this.$( '.upload-footer-extension' ),\n                data        : _.filter( this.list_extensions, function( ext ) { return ext.composite_files } ),\n                onchange    : function( extension ) {\n                    self.collection.reset();\n                    var details = _.findWhere( self.list_extensions, { id : extension } );\n                    if ( details && details.composite_files ) {\n                        _.each( details.composite_files, function( item ) {\n                            self.collection.add( { id          : self.collection.size(),\n                                                   file_desc   : item.description || item.name } );\n                        } );\n                    }\n                }\n            });\n\n            // handle extension info popover\n            this.$( '.upload-footer-extension-info' ).on( 'click', function( e ) {\n                self._showExtensionInfo({\n                    $el         : $( e.target ),\n                    title       : self.select_extension.text(),\n                    extension   : self.select_extension.value(),\n                    placement   : 'top'\n                });\n            }).on( 'mousedown', function( e ) { e.preventDefault() } );\n\n            // genome extension\n            this.select_genome = new Select.View({\n                css         : 'upload-footer-selection',\n                container   : this.$( '.upload-footer-genome' ),\n                data        : this.list_genomes,\n                value       : this.options.default_genome\n            });\n\n            // listener for collection triggers on change in composite datatype and extension selection\n            this.listenTo( this.collection, 'add', function ( model ) { self._eventAnnounce( model ) } );\n            this.listenTo( this.collection, 'change add', function() { self.render() } );\n            this.select_extension.options.onchange( this.select_extension.value() );\n            this.render();\n        },\n\n        render: function () {\n            var model = this.collection.first();\n            if ( model && model.get( 'status' ) == 'running' ) {\n                this.select_genome.disable();\n                this.select_extension.disable();\n            } else {\n                this.select_genome.enable();\n                this.select_extension.enable();\n            }\n            if ( this.collection.where( { status : 'ready' } ).length == this.collection.length && this.collection.length > 0 ) {\n                this.btnStart.enable();\n                this.btnStart.$el.addClass( 'btn-primary' );\n            } else {\n                this.btnStart.disable();\n                this.btnStart.$el.removeClass( 'btn-primary' );\n            }\n            this.$( '.upload-table' )[ this.collection.length > 0 ? 'show' : 'hide' ]();\n        },\n\n        //\n        // upload events / process pipeline\n        //\n\n        /** Builds the basic ui with placeholder rows for each composite data type file */\n        _eventAnnounce: function( model ) {\n            var upload_row = new UploadRow( this, { model : model } );\n            this.$( '.upload-table > tbody:first' ).append( upload_row.$el );\n            this.$( '.upload-table' )[ this.collection.length > 0 ? 'show' : 'hide' ]();\n            upload_row.render();\n        },\n\n        /** Start upload process */\n        _eventStart: function() {\n            var self = this;\n            this.collection.each( function( model ) {\n                model.set( { 'genome'   : self.select_genome.value(),\n                             'extension': self.select_extension.value() } );\n            });\n            $.uploadpost({\n                url      : this.app.options.nginx_upload_path,\n                data     : this.app.toData( this.collection.filter() ),\n                success  : function( message )      { self._eventSuccess( message ) },\n                error    : function( message )      { self._eventError( message ) },\n                progress : function( percentage )   { self._eventProgress( percentage ) }\n            });\n        },\n\n        /** Refresh progress state */\n        _eventProgress: function( percentage ) {\n            this.collection.each( function( it ) { it.set( 'percentage', percentage ) } );\n        },\n\n        /** Refresh success state */\n        _eventSuccess: function( message ) {\n            this.collection.each( function( it ) { it.set('status', 'success') } );\n            Galaxy.currHistoryPanel.refreshContents();\n        },\n\n        /** Refresh error state */\n        _eventError: function( message ) {\n            this.collection.each( function( it ) { it.set( { 'status': 'error', 'info': message } ) } );\n        },\n\n        /** Display extension info popup */\n        _showExtensionInfo: function(options) {\n            var self = this;\n            var $el         = options.$el;\n            var extension   = options.extension;\n            var title       = options.title;\n            var description = _.findWhere(this.list_extensions, { id : extension });\n            this.extension_popup && this.extension_popup.remove();\n            this.extension_popup = new Popover.View({\n                placement: options.placement || 'bottom',\n                container: $el,\n                destroy: true\n            });\n            this.extension_popup.title( title );\n            this.extension_popup.empty();\n            this.extension_popup.append( this._templateDescription( description ) );\n            this.extension_popup.show();\n        },\n\n        /* Template for extensions description */\n        _templateDescription: function( options ) {\n            if ( options.description ) {\n                var tmpl = options.description;\n                if ( options.description_url ) {\n                    tmpl += '&nbsp;(<a href=\"' + options.description_url + '\" target=\"_blank\">read more</a>)';\n                }\n                return tmpl;\n            } else {\n                return 'There is no description available for this file extension.';\n            }\n        },\n\n        /** Load html template */\n        _template: function() {\n            return  '<div class=\"upload-view-composite\">' +\n                        '<div class=\"upload-footer\">' +\n                            '<span class=\"upload-footer-title\">Composite Type:</span>' +\n                            '<span class=\"upload-footer-extension\"/>' +\n                            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n                            '<span class=\"upload-footer-title\">Genome/Build:</span>' +\n                            '<span class=\"upload-footer-genome\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-box\">' +\n                            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n                                '<thead>' +\n                                    '<tr>' +\n                                        '<th/>' +\n                                        '<th/>' +\n                                        '<th>Description</th>' +\n                                        '<th>Name</th>' +\n                                        '<th>Size</th>' +\n                                        '<th>Settings</th>' +\n                                        '<th>Status</th>' +\n                                    '</tr>' +\n                                '</thead>' +\n                                '<tbody/>' +\n                            '</table>' +\n                        '</div>' +\n                        '<div class=\"upload-buttons\"/>' +\n                    '</div>';\n        }\n    });\n});\n"]}