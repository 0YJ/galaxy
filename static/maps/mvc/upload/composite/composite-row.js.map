{"version":3,"sources":["mvc/upload/composite/composite-row.js"],"names":["Backbone","View","extend","status_classes","init","ready","running","success","error","initialize","app","options","self","this","model","setElement","_template","$source","$","$settings","$status","$text","$progress_bar","$percentage","uploadinput","$el","ondragover","get","addClass","ondragleave","removeClass","onchange","$text_content","files","$info_progress","$file_name","$file_desc","reset","file_name","name","file_size","size","button_menu","ButtonMenu","file_data","file_mode","addMenu","title","onclick","dialog","icon","pull","append","ftp_upload_site","ftp","_uiPopover2","default","find","container","placement","on","e","target","val","length","_refreshReady","_showSettings","_refreshPercentage","listenTo","_refreshFileName","_refreshMode","_refreshStatus","_refreshFileSize","_refreshInfo","remove","render","id","html","_","escape","_utils2","bytesToString","prototype","apply","collection","each","set","height","css","width","top","info","hide","$info_text","show","percentage","parseInt","status","attr","$file_size","_showFtp","visible","empty","_uploadFtp2","ftp_file","path","settings"],"mappings":"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","file":"../../../../scripts/mvc/upload/composite/composite-row.js","sourcesContent":["/** Renders the composite upload row view */\nimport Utils from \"utils/utils\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Select from \"mvc/ui/ui-select\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-mode fa fa-exclamation text-primary\",\n        ready: \"upload-mode fa fa-check text-success\",\n        running: \"upload-mode fa fa-spinner fa-spin\",\n        success: \"upload-mode fa fa-check\",\n        error: \"upload-mode fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template());\n        this.$source = this.$(\".upload-source\");\n        this.$settings = this.$(\".upload-settings\");\n        this.$status = this.$(\".upload-status\");\n        this.$text = this.$(\".upload-text\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$file_name = this.$(\".upload-file-name\");\n        this.$file_desc = this.$(\".upload-file-desc\");\n        this.$file_size = this.$(\".upload-file-size\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // build upload functions\n        this.uploadinput = this.$el.uploadinput({\n            ondragover: function() {\n                self.model.get(\"enabled\") && self.$el.addClass(\"warning\");\n            },\n            ondragleave: function() {\n                self.$el.removeClass(\"warning\");\n            },\n            onchange: function(files) {\n                if (\n                    self.model.get(\"status\") != \"running\" &&\n                    files &&\n                    files.length > 0\n                ) {\n                    self.model.reset({\n                        file_data: files[0],\n                        file_name: files[0].name,\n                        file_size: files[0].size,\n                        file_mode: files[0].mode || \"local\"\n                    });\n                    self._refreshReady();\n                }\n            }\n        });\n\n        // source selection popup\n        this.button_menu = new Ui.ButtonMenu({\n            icon: \"fa-caret-down\",\n            title: \"Select\",\n            pull: \"left\"\n        });\n        this.$source.append(this.button_menu.$el);\n        this.button_menu.addMenu({\n            icon: \"fa-laptop\",\n            title: \"Choose local file\",\n            onclick: function() {\n                self.uploadinput.dialog();\n            }\n        });\n        if (this.app.ftp_upload_site) {\n            this.button_menu.addMenu({\n                icon: \"fa-folder-open-o\",\n                title: \"Choose FTP file\",\n                onclick: function() {\n                    self._showFtp();\n                }\n            });\n        }\n        this.button_menu.addMenu({\n            icon: \"fa-edit\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self.model.reset({\n                    file_mode: \"new\",\n                    file_name: \"New File\"\n                });\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"Choose FTP file:\",\n            container: this.$source.find(\".ui-button-menu\"),\n            placement: \"right\"\n        });\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: \"Upload configuration\",\n            container: this.$settings,\n            placement: \"bottom\"\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", e => {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n            self._refreshReady();\n        });\n\n        // handle settings popover\n        this.$settings\n            .on(\"click\", e => {\n                self._showSettings();\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", () => {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", () => {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", () => {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_name\", () => {\n            self._refreshFileName();\n        });\n        this.listenTo(this.model, \"change:file_mode\", () => {\n            self._refreshMode();\n        });\n        this.listenTo(this.model, \"change:file_size\", () => {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", () => {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", () => {\n            self.remove();\n        });\n    },\n\n    render: function() {\n        this.$el.attr(\"id\", `upload-row-${this.model.id}`);\n        this.$file_name.html(_.escape(this.model.get(\"file_name\") || \"-\"));\n        this.$file_desc.html(this.model.get(\"file_desc\") || \"Unavailable\");\n        this.$file_size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n        this.$status.removeClass().addClass(this.status_classes.init);\n    },\n\n    /** Remove view */\n    remove: function() {\n        // call the base class remove method\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    //\n    // handle model events\n    //\n\n    /** Refresh ready or not states */\n    _refreshReady: function() {\n        this.app.collection.each(model => {\n            model.set(\n                \"status\",\n                (model.get(\"file_size\") > 0 && \"ready\") || \"init\"\n            );\n        });\n    },\n\n    /** Refresh mode and e.g. show/hide textarea field */\n    _refreshMode: function() {\n        var file_mode = this.model.get(\"file_mode\");\n        if (file_mode == \"new\") {\n            this.height = this.$el.height();\n            this.$text\n                .css({\n                    width: `${this.$el.width() - 16}px`,\n                    top: `${this.$el.height() - 8}px`\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$text_content.val(\"\").trigger(\"keyup\");\n        } else {\n            this.$el.height(this.height);\n            this.$text.hide();\n        }\n    },\n\n    /** Refresh information */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(`<strong>Failed: </strong>${info}`).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        if (percentage != 0) {\n            this.$progress_bar.css({ width: `${percentage}%` });\n        } else {\n            this.$progress_bar.addClass(\"no-transition\");\n            this.$progress_bar.css({ width: \"0%\" });\n            this.$progress_bar[0].offsetHeight;\n            this.$progress_bar.removeClass(\"no-transition\");\n        }\n        this.$percentage.html(\n            percentage != 100 ? `${percentage}%` : \"Adding to history...\"\n        );\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$status.removeClass().addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status != \"running\");\n        this.$text_content.attr(\"disabled\", !this.model.get(\"enabled\"));\n        this.$el.removeClass(\"success danger warning\");\n        if (status == \"running\" || status == \"ready\") {\n            this.model.set(\"percentage\", 0);\n        }\n        this.$source\n            .find(\".button\")\n            [status == \"running\" ? \"addClass\" : \"removeClass\"](\"disabled\");\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.model.set(\"percentage\", 100);\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.model.set(\"percentage\", 0);\n            this.$info_progress.hide();\n            this.$info_text.show();\n        } else {\n            this.$info_progress.show();\n            this.$info_text.hide();\n        }\n    },\n\n    /** File name */\n    _refreshFileName: function() {\n        this.$file_name.html(this.model.get(\"file_name\") || \"-\");\n    },\n\n    /** File size */\n    _refreshFileSize: function() {\n        this.$file_size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Show/hide ftp popup */\n    _showFtp: function() {\n        if (!this.ftp.visible) {\n            var self = this;\n            this.ftp.empty();\n            this.ftp.append(\n                new UploadFtp({\n                    ftp_upload_site: this.app.ftp_upload_site,\n                    onchange: function(ftp_file) {\n                        self.ftp.hide();\n                        if (self.model.get(\"status\") != \"running\" && ftp_file) {\n                            self.model.reset({\n                                file_mode: \"ftp\",\n                                file_name: ftp_file.path,\n                                file_size: ftp_file.size,\n                                file_path: ftp_file.path\n                            });\n                            self._refreshReady();\n                        }\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Show/hide settings popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<tr class=\"upload-row\">' +\n            \"<td>\" +\n            '<div class=\"upload-source\"/>' +\n            '<div class=\"upload-text-column\">' +\n            '<div class=\"upload-text\">' +\n            '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n            '<textarea class=\"upload-text-content form-control\"/>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-status\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-desc upload-title\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-name upload-title\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-size upload-size\"/>' +\n            \"</td>\" +\n            '<td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td>' +\n            \"<td>\" +\n            '<div class=\"upload-info\">' +\n            '<div class=\"upload-info-text\"/>' +\n            '<div class=\"upload-info-progress progress\">' +\n            '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n            '<div class=\"upload-percentage\">0%</div>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"</tr>\"\n        );\n    }\n});\n"]}