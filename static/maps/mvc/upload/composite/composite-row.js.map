{"version":3,"sources":["mvc/upload/composite/composite-row.js"],"names":["define","Utils","UploadSettings","UploadFtp","Popover","Ui","Select","Backbone","View","extend","status_classes","init","ready","running","success","initialize","app","options","this","self","model","setElement","_template","$source","$","$settings","$status","$text","$text_content","$info_text","$info_progress","$file_name","$file_desc","$file_size","$progress_bar","uploadinput","$el","ondragover","get","addClass","ondragleave","removeClass","onchange","files","length","file_name","name","file_size","file_mode","size","_refreshReady","button_menu","ButtonMenu","icon","title","append","addMenu","dialog","ftp_upload_site","onclick","_showFtp","reset","container","find","placement","on","e","set","url_paste","target","val","_showSettings","preventDefault","listenTo","_refreshPercentage","_refreshStatus","_refreshInfo","_refreshFileName","_refreshMode","_refreshFileSize","remove","collection","render","id","escape","html","bytesToString","apply","each","css","width","top","height","show","trigger","prototype","hide","info","parseInt","percentage","offsetHeight","$percentage","status","attr","ftp","visible","ftp_file","path","file_path","settings"],"mappings":"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","file":"../../../../scripts/mvc/upload/composite/composite-row.js","sourcesContent":["/** Renders the composite upload row view */\ndefine([ 'utils/utils', 'mvc/upload/upload-settings', 'mvc/upload/upload-ftp', 'mvc/ui/ui-popover', 'mvc/ui/ui-misc', 'mvc/ui/ui-select', 'utils/uploadbox' ],\nfunction( Utils, UploadSettings, UploadFtp, Popover, Ui, Select ) {\n    return Backbone.View.extend({\n        /** Dictionary of upload states and associated icons */\n        status_classes : {\n            init    : 'upload-mode fa fa-exclamation text-primary',\n            ready   : 'upload-mode fa fa-check text-success',\n            running : 'upload-mode fa fa-spinner fa-spin',\n            success : 'upload-mode fa fa-check',\n            error   : 'upload-mode fa fa-exclamation-triangle'\n        },\n\n        initialize: function( app, options ) {\n            var self = this;\n            this.app = app;\n            this.model = options.model;\n            this.setElement( this._template() );\n            this.$source        = this.$( '.upload-source' );\n            this.$settings      = this.$( '.upload-settings' );\n            this.$status        = this.$( '.upload-status' );\n            this.$text          = this.$( '.upload-text' );\n            this.$text_content  = this.$( '.upload-text-content' );\n            this.$info_text     = this.$( '.upload-info-text' );\n            this.$info_progress = this.$( '.upload-info-progress' );\n            this.$file_name     = this.$( '.upload-file-name' );\n            this.$file_desc     = this.$( '.upload-file-desc' );\n            this.$file_size     = this.$( '.upload-file-size' );\n            this.$progress_bar  = this.$( '.upload-progress-bar' );\n            this.$percentage    = this.$( '.upload-percentage' );\n\n            // build upload functions\n            this.uploadinput = this.$el.uploadinput({\n                ondragover: function() {\n                    self.model.get( 'enabled' ) && self.$el.addClass( 'warning' );\n                },\n                ondragleave: function() {\n                    self.$el.removeClass( 'warning' );\n                },\n                onchange: function( files ) {\n                    if ( self.model.get( 'status' ) != 'running' && files && files.length > 0 ) {\n                        self.model.reset({\n                            'file_data': files[ 0 ],\n                            'file_name': files[ 0 ].name,\n                            'file_size': files[ 0 ].size,\n                            'file_mode': files[ 0 ].mode || 'local'\n                        });\n                        self._refreshReady();\n                    }\n                }\n            });\n\n            // source selection popup\n            this.button_menu = new Ui.ButtonMenu({\n                icon        : 'fa-caret-down',\n                title       : 'Select',\n                pull        : 'left'\n            });\n            this.$source.append( this.button_menu.$el );\n            this.button_menu.addMenu({\n                icon        : 'fa-laptop',\n                title       : 'Choose local file',\n                onclick     : function() { self.uploadinput.dialog() }\n            });\n            if ( this.app.ftp_upload_site ) {\n                this.button_menu.addMenu({\n                    icon        : 'fa-folder-open-o',\n                    title       : 'Choose FTP file',\n                    onclick     : function() { self._showFtp() }\n                });\n            }\n            this.button_menu.addMenu({\n                icon        : 'fa-edit',\n                title       : 'Paste/Fetch data',\n                onclick     : function() {\n                    self.model.reset( { 'file_mode': 'new', 'file_name': 'New File' } );\n                }\n            });\n\n            // add ftp file viewer\n            this.ftp = new Popover.View({\n                title       : 'Choose FTP file:',\n                container   : this.$source.find( '.ui-button-menu' ),\n                placement   : 'right'\n            });\n\n            // append popup to settings icon\n            this.settings = new Popover.View({\n                title       : 'Upload configuration',\n                container   : this.$settings,\n                placement   : 'bottom'\n            });\n\n            // handle text editing event\n            this.$text_content.on( 'change input', function( e ) {\n                self.model.set( { 'url_paste': $( e.target ).val(),\n                                  'file_size': $( e.target ).val().length } );\n                self._refreshReady();\n            });\n\n            // handle settings popover\n            this.$settings.on( 'click',     function( e ) { self._showSettings() } )\n                          .on( 'mousedown', function( e ) { e.preventDefault() } );\n\n            // model events\n            this.listenTo( this.model, 'change:percentage', function() { self._refreshPercentage() } );\n            this.listenTo( this.model, 'change:status',     function() { self._refreshStatus() } );\n            this.listenTo( this.model, 'change:info',       function() { self._refreshInfo() } );\n            this.listenTo( this.model, 'change:file_name',  function() { self._refreshFileName() } );\n            this.listenTo( this.model, 'change:file_mode',  function() { self._refreshMode() } );\n            this.listenTo( this.model, 'change:file_size',  function() { self._refreshFileSize() } );\n            this.listenTo( this.model, 'remove', function() { self.remove() } );\n            this.app.collection.on( 'reset', function() { self.remove() } );\n        },\n\n        render: function() {\n            this.$el.attr( 'id', 'upload-row-' + this.model.id );\n            this.$file_name.html( _.escape( this.model.get( 'file_name' ) || '-' ) );\n            this.$file_desc.html( this.model.get( 'file_desc' ) || 'Unavailable' );\n            this.$file_size.html( Utils.bytesToString ( this.model.get( 'file_size' ) ) );\n            this.$status.removeClass().addClass( this.status_classes.init );\n        },\n\n        /** Remove view */\n        remove: function() {\n            // call the base class remove method\n            Backbone.View.prototype.remove.apply( this );\n        },\n\n        //\n        // handle model events\n        //\n\n        /** Refresh ready or not states */\n        _refreshReady: function() {\n            this.app.collection.each( function( model ) {\n                model.set( 'status', ( model.get( 'file_size' ) > 0 ) && 'ready' || 'init' );\n            });\n        },\n\n        /** Refresh mode and e.g. show/hide textarea field */\n        _refreshMode: function() {\n            var file_mode = this.model.get( 'file_mode' );\n            if ( file_mode == 'new' ) {\n                this.height = this.$el.height();\n                this.$text.css( { 'width' : this.$el.width() - 16 + 'px',\n                                  'top'   : this.$el.height() - 8 + 'px' } ).show();\n                this.$el.height( this.$el.height() - 8 + this.$text.height() + 16 );\n                this.$text_content.val( '' ).trigger( 'keyup' );\n            } else {\n                this.$el.height( this.height );\n                this.$text.hide();\n            }\n        },\n\n        /** Refresh information */\n        _refreshInfo: function() {\n            var info = this.model.get( 'info' );\n            if ( info ) {\n                this.$info_text.html( '<strong>Failed: </strong>' + info ).show();\n            } else {\n                this.$info_text.hide();\n            }\n        },\n\n        /** Refresh percentage */\n        _refreshPercentage : function() {\n            var percentage = parseInt( this.model.get( 'percentage' ) );\n            if ( percentage != 0 ) {\n                this.$progress_bar.css( { width : percentage + '%' } );\n            } else {\n                this.$progress_bar.addClass( 'no-transition' );\n                this.$progress_bar.css( { width : '0%' } );\n                this.$progress_bar[ 0 ].offsetHeight;\n                this.$progress_bar.removeClass( 'no-transition' );\n            }\n            this.$percentage.html( percentage != 100 ? percentage + '%' : 'Adding to history...' );\n        },\n\n        /** Refresh status */\n        _refreshStatus : function() {\n            var status = this.model.get( 'status' );\n            this.$status.removeClass().addClass( this.status_classes[ status ] );\n            this.model.set( 'enabled', status != 'running' );\n            this.$text_content.attr( 'disabled', !this.model.get( 'enabled' ) );\n            this.$el.removeClass( 'success danger warning' );\n            if ( status == 'running' || status == 'ready' ) {\n                this.model.set( 'percentage', 0 );\n            }\n            this.$source.find( '.button' )[ status == 'running' ? 'addClass' : 'removeClass' ]( 'disabled' );\n            if ( status == 'success' ) {\n                this.$el.addClass( 'success' );\n                this.model.set( 'percentage', 100 );\n                this.$percentage.html( '100%' );\n            }\n            if ( status == 'error' ) {\n                this.$el.addClass( 'danger' );\n                this.model.set( 'percentage', 0 );\n                this.$info_progress.hide();\n                this.$info_text.show();\n            } else {\n                this.$info_progress.show();\n                this.$info_text.hide();\n            }\n        },\n\n        /** File name */\n        _refreshFileName: function() {\n            this.$file_name.html( this.model.get( 'file_name' ) || '-' );\n        },\n\n        /** File size */\n        _refreshFileSize: function() {\n            this.$file_size.html( Utils.bytesToString ( this.model.get( 'file_size' ) ) );\n        },\n\n        /** Show/hide ftp popup */\n        _showFtp: function() {\n            if ( !this.ftp.visible ) {\n                var self = this;\n                this.ftp.empty();\n                this.ftp.append( ( new UploadFtp( {\n                    ftp_upload_site : this.app.ftp_upload_site,\n                    onchange        : function( ftp_file ) {\n                        self.ftp.hide();\n                        if ( self.model.get( 'status' ) != 'running' && ftp_file ) {\n                             self.model.reset({\n                                'file_mode': 'ftp',\n                                'file_name': ftp_file.path,\n                                'file_size': ftp_file.size,\n                                'file_path': ftp_file.path\n                            });\n                            self._refreshReady();\n                        }\n                    }\n                } ) ).$el );\n                this.ftp.show();\n            } else {\n                this.ftp.hide();\n            }\n        },\n\n        /** Show/hide settings popup */\n        _showSettings : function() {\n            if ( !this.settings.visible ) {\n                this.settings.empty();\n                this.settings.append( ( new UploadSettings( this ) ).$el );\n                this.settings.show();\n            } else {\n                this.settings.hide();\n            }\n        },\n\n        /** Template */\n        _template: function() {\n            return  '<tr class=\"upload-row\">' +\n                        '<td>' +\n                            '<div class=\"upload-source\"/>' +\n                            '<div class=\"upload-text-column\">' +\n                                '<div class=\"upload-text\">' +\n                                    '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n                                    '<textarea class=\"upload-text-content form-control\"/>' +\n                                '</div>' +\n                            '</div>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-status\"/>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-file-desc upload-title\"/>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-file-name upload-title\"/>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-file-size upload-size\"/>' +\n                        '</td>' +\n                        '<td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td>' +\n                        '<td>' +\n                            '<div class=\"upload-info\">' +\n                                '<div class=\"upload-info-text\"/>' +\n                                '<div class=\"upload-info-progress progress\">' +\n                                    '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n                                    '<div class=\"upload-percentage\">0%</div>' +\n                                '</div>' +\n                            '</div>' +\n                        '</td>' +\n                    '</tr>';\n        }\n    });\n});\n"]}