{"version":3,"sources":["mvc/upload/composite/composite-row.js"],"names":["define","Utils","UploadSettings","UploadFtp","Popover","Ui","Select","Backbone","View","extend","status_classes","init","ready","running","success","error","initialize","app","options","self","this","model","setElement","_template","$source","$","$settings","$status","$text","$text_content","$info_text","$info_progress","$file_name","$file_desc","$file_size","$progress_bar","$percentage","uploadinput","$el","ondragover","get","addClass","ondragleave","removeClass","onchange","files","length","reset","file_data","file_name","name","file_size","size","file_mode","mode","_refreshReady","button_menu","ButtonMenu","icon","title","pull","append","addMenu","onclick","dialog","ftp_upload_site","_showFtp","ftp","container","find","placement","settings","on","e","set","url_paste","target","val","_showSettings","preventDefault","listenTo","_refreshPercentage","_refreshStatus","_refreshInfo","_refreshFileName","_refreshMode","_refreshFileSize","remove","collection","render","attr","id","html","_","escape","bytesToString","prototype","apply","each","height","css","width","top","show","trigger","hide","info","percentage","parseInt","offsetHeight","status","visible","empty","ftp_file","path","file_path"],"mappings":"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","file":"../../../../scripts/mvc/upload/composite/composite-row.js","sourcesContent":["/** Renders the composite upload row view */\ndefine([ 'utils/utils', 'mvc/upload/upload-settings', 'mvc/upload/upload-ftp', 'mvc/ui/ui-popover', 'mvc/ui/ui-misc', 'mvc/ui/ui-select', 'utils/uploadbox' ],\nfunction( Utils, UploadSettings, UploadFtp, Popover, Ui, Select ) {\n    return Backbone.View.extend({\n        /** Dictionary of upload states and associated icons */\n        status_classes : {\n            init    : 'upload-mode fa fa-exclamation text-primary',\n            ready   : 'upload-mode fa fa-check text-success',\n            running : 'upload-mode fa fa-spinner fa-spin',\n            success : 'upload-mode fa fa-check',\n            error   : 'upload-mode fa fa-exclamation-triangle'\n        },\n\n        initialize: function( app, options ) {\n            var self = this;\n            this.app = app;\n            this.model = options.model;\n            this.setElement( this._template() );\n            this.$source        = this.$( '.upload-source' );\n            this.$settings      = this.$( '.upload-settings' );\n            this.$status        = this.$( '.upload-status' );\n            this.$text          = this.$( '.upload-text' );\n            this.$text_content  = this.$( '.upload-text-content' );\n            this.$info_text     = this.$( '.upload-info-text' );\n            this.$info_progress = this.$( '.upload-info-progress' );\n            this.$file_name     = this.$( '.upload-file-name' );\n            this.$file_desc     = this.$( '.upload-file-desc' );\n            this.$file_size     = this.$( '.upload-file-size' );\n            this.$progress_bar  = this.$( '.upload-progress-bar' );\n            this.$percentage    = this.$( '.upload-percentage' );\n\n            // build upload functions\n            this.uploadinput = this.$el.uploadinput({\n                ondragover: function() {\n                    self.model.get( 'enabled' ) && self.$el.addClass( 'warning' );\n                },\n                ondragleave: function() {\n                    self.$el.removeClass( 'warning' );\n                },\n                onchange: function( files ) {\n                    if ( self.model.get( 'status' ) != 'running' && files && files.length > 0 ) {\n                        self.model.reset({\n                            'file_data': files[ 0 ],\n                            'file_name': files[ 0 ].name,\n                            'file_size': files[ 0 ].size,\n                            'file_mode': files[ 0 ].mode || 'local'\n                        });\n                        self._refreshReady();\n                    }\n                }\n            });\n\n            // source selection popup\n            this.button_menu = new Ui.ButtonMenu({\n                icon        : 'fa-caret-down',\n                title       : 'Select',\n                pull        : 'left'\n            });\n            this.$source.append( this.button_menu.$el );\n            this.button_menu.addMenu({\n                icon        : 'fa-laptop',\n                title       : 'Choose local file',\n                onclick     : function() { self.uploadinput.dialog() }\n            });\n            if ( this.app.ftp_upload_site ) {\n                this.button_menu.addMenu({\n                    icon        : 'fa-folder-open-o',\n                    title       : 'Choose FTP file',\n                    onclick     : function() { self._showFtp() }\n                });\n            }\n            this.button_menu.addMenu({\n                icon        : 'fa-edit',\n                title       : 'Paste/Fetch data',\n                onclick     : function() {\n                    self.model.reset( { 'file_mode': 'new', 'file_name': 'New File' } );\n                }\n            });\n\n            // add ftp file viewer\n            this.ftp = new Popover.View({\n                title       : 'Choose FTP file:',\n                container   : this.$source.find( '.ui-button-menu' ),\n                placement   : 'right'\n            });\n\n            // append popup to settings icon\n            this.settings = new Popover.View({\n                title       : 'Upload configuration',\n                container   : this.$settings,\n                placement   : 'bottom'\n            });\n\n            // handle text editing event\n            this.$text_content.on( 'change input', function( e ) {\n                self.model.set( { 'url_paste': $( e.target ).val(),\n                                  'file_size': $( e.target ).val().length } );\n                self._refreshReady();\n            });\n\n            // handle settings popover\n            this.$settings.on( 'click',     function( e ) { self._showSettings() } )\n                          .on( 'mousedown', function( e ) { e.preventDefault() } );\n\n            // model events\n            this.listenTo( this.model, 'change:percentage', function() { self._refreshPercentage() } );\n            this.listenTo( this.model, 'change:status',     function() { self._refreshStatus() } );\n            this.listenTo( this.model, 'change:info',       function() { self._refreshInfo() } );\n            this.listenTo( this.model, 'change:file_name',  function() { self._refreshFileName() } );\n            this.listenTo( this.model, 'change:file_mode',  function() { self._refreshMode() } );\n            this.listenTo( this.model, 'change:file_size',  function() { self._refreshFileSize() } );\n            this.listenTo( this.model, 'remove', function() { self.remove() } );\n            this.app.collection.on( 'reset', function() { self.remove() } );\n        },\n\n        render: function() {\n            this.$el.attr( 'id', 'upload-row-' + this.model.id );\n            this.$file_name.html( _.escape( this.model.get( 'file_name' ) || '-' ) );\n            this.$file_desc.html( this.model.get( 'file_desc' ) || 'Unavailable' );\n            this.$file_size.html( Utils.bytesToString ( this.model.get( 'file_size' ) ) );\n            this.$status.removeClass().addClass( this.status_classes.init );\n        },\n\n        /** Remove view */\n        remove: function() {\n            // call the base class remove method\n            Backbone.View.prototype.remove.apply( this );\n        },\n\n        //\n        // handle model events\n        //\n\n        /** Refresh ready or not states */\n        _refreshReady: function() {\n            this.app.collection.each( function( model ) {\n                model.set( 'status', ( model.get( 'file_size' ) > 0 ) && 'ready' || 'init' );\n            });\n        },\n\n        /** Refresh mode and e.g. show/hide textarea field */\n        _refreshMode: function() {\n            var file_mode = this.model.get( 'file_mode' );\n            if ( file_mode == 'new' ) {\n                this.height = this.$el.height();\n                this.$text.css( { 'width' : this.$el.width() - 16 + 'px',\n                                  'top'   : this.$el.height() - 8 + 'px' } ).show();\n                this.$el.height( this.$el.height() - 8 + this.$text.height() + 16 );\n                this.$text_content.val( '' ).trigger( 'keyup' );\n            } else {\n                this.$el.height( this.height );\n                this.$text.hide();\n            }\n        },\n\n        /** Refresh information */\n        _refreshInfo: function() {\n            var info = this.model.get( 'info' );\n            if ( info ) {\n                this.$info_text.html( '<strong>Failed: </strong>' + info ).show();\n            } else {\n                this.$info_text.hide();\n            }\n        },\n\n        /** Refresh percentage */\n        _refreshPercentage : function() {\n            var percentage = parseInt( this.model.get( 'percentage' ) );\n            if ( percentage != 0 ) {\n                this.$progress_bar.css( { width : percentage + '%' } );\n            } else {\n                this.$progress_bar.addClass( 'no-transition' );\n                this.$progress_bar.css( { width : '0%' } );\n                this.$progress_bar[ 0 ].offsetHeight;\n                this.$progress_bar.removeClass( 'no-transition' );\n            }\n            this.$percentage.html( percentage != 100 ? percentage + '%' : 'Adding to history...' );\n        },\n\n        /** Refresh status */\n        _refreshStatus : function() {\n            var status = this.model.get( 'status' );\n            this.$status.removeClass().addClass( this.status_classes[ status ] );\n            this.model.set( 'enabled', status != 'running' );\n            this.$text_content.attr( 'disabled', !this.model.get( 'enabled' ) );\n            this.$el.removeClass( 'success danger warning' );\n            if ( status == 'running' || status == 'ready' ) {\n                this.model.set( 'percentage', 0 );\n            }\n            this.$source.find( '.button' )[ status == 'running' ? 'addClass' : 'removeClass' ]( 'disabled' );\n            if ( status == 'success' ) {\n                this.$el.addClass( 'success' );\n                this.model.set( 'percentage', 100 );\n                this.$percentage.html( '100%' );\n            }\n            if ( status == 'error' ) {\n                this.$el.addClass( 'danger' );\n                this.model.set( 'percentage', 0 );\n                this.$info_progress.hide();\n                this.$info_text.show();\n            } else {\n                this.$info_progress.show();\n                this.$info_text.hide();\n            }\n        },\n\n        /** File name */\n        _refreshFileName: function() {\n            this.$file_name.html( this.model.get( 'file_name' ) || '-' );\n        },\n\n        /** File size */\n        _refreshFileSize: function() {\n            this.$file_size.html( Utils.bytesToString ( this.model.get( 'file_size' ) ) );\n        },\n\n        /** Show/hide ftp popup */\n        _showFtp: function() {\n            if ( !this.ftp.visible ) {\n                var self = this;\n                this.ftp.empty();\n                this.ftp.append( ( new UploadFtp( {\n                    ftp_upload_site : this.app.ftp_upload_site,\n                    onchange        : function( ftp_file ) {\n                        self.ftp.hide();\n                        if ( self.model.get( 'status' ) != 'running' && ftp_file ) {\n                             self.model.reset({\n                                'file_mode': 'ftp',\n                                'file_name': ftp_file.path,\n                                'file_size': ftp_file.size,\n                                'file_path': ftp_file.path\n                            });\n                            self._refreshReady();\n                        }\n                    }\n                } ) ).$el );\n                this.ftp.show();\n            } else {\n                this.ftp.hide();\n            }\n        },\n\n        /** Show/hide settings popup */\n        _showSettings : function() {\n            if ( !this.settings.visible ) {\n                this.settings.empty();\n                this.settings.append( ( new UploadSettings( this ) ).$el );\n                this.settings.show();\n            } else {\n                this.settings.hide();\n            }\n        },\n\n        /** Template */\n        _template: function() {\n            return  '<tr class=\"upload-row\">' +\n                        '<td>' +\n                            '<div class=\"upload-source\"/>' +\n                            '<div class=\"upload-text-column\">' +\n                                '<div class=\"upload-text\">' +\n                                    '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n                                    '<textarea class=\"upload-text-content form-control\"/>' +\n                                '</div>' +\n                            '</div>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-status\"/>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-file-desc upload-title\"/>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-file-name upload-title\"/>' +\n                        '</td>' +\n                        '<td>' +\n                            '<div class=\"upload-file-size upload-size\"/>' +\n                        '</td>' +\n                        '<td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td>' +\n                        '<td>' +\n                            '<div class=\"upload-info\">' +\n                                '<div class=\"upload-info-text\"/>' +\n                                '<div class=\"upload-info-progress progress\">' +\n                                    '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n                                    '<div class=\"upload-percentage\">0%</div>' +\n                                '</div>' +\n                            '</div>' +\n                        '</td>' +\n                    '</tr>';\n        }\n    });\n});\n"]}