{"version":3,"sources":["mvc/upload/upload-settings.js"],"names":["define","Utils","Backbone","View","extend","options","class_check","class_uncheck","parameters","id","title","initialize","this","model","setElement","$","addClass","$el","append","$cover","$table","listenTo","render","trigger","self","empty","_","each","parameter","$checkbox","get","on","set"],"mappings":"AACAA,QAAU,eAAiB,SAAUC,GACjC,MAAOC,UAASC,KAAKC,QACjBC,SACIC,YAAkB,oBAClBC,cAAkB,cAClBC,aACIC,GAAc,eACdC,MAAc,2BAEdD,GAAc,iBACdC,MAAc,wBAItBC,WAAY,SAAUN,GAElBO,KAAKC,MAAQR,EAAQQ,MACrBD,KAAKE,WAAYC,EAAG,UAAWC,SAAU,oBACzCJ,KAAKK,IAAIC,OAAQH,EAAG,UAAWC,SAAU,0BACzCJ,KAAKK,IAAIC,OAAQH,EAAG,YAAaC,SAAU,0CAA2CE,OAAQ,aAC9FN,KAAKO,OAASP,KAAKG,EAAG,0BACtBH,KAAKQ,OAASR,KAAKG,EAAG,kCACtBH,KAAKS,SAAWT,KAAKC,MAAO,SAAUD,KAAKU,OAAQV,MACnDA,KAAKC,MAAMU,QAAS,WAGxBD,OAAQ,WACJ,GAAIE,GAAOZ,IACXA,MAAKQ,OAAOK,QACZC,EAAEC,KAAMf,KAAKP,QAAQG,WAAY,SAAUoB,GACvC,GAAIC,GAAYd,EAAG,UAAWC,SAAU,UAAYY,EAAUnB,GAAK,0BACrCO,SAAUQ,EAAKX,MAAMiB,IAAKF,EAAUnB,KAAQe,EAAKnB,QAAQC,aAAekB,EAAKnB,QAAQE,eACrFwB,GAAI,QAAS,WACXP,EAAKX,MAAMiB,IAAK,YAAeN,EAAKX,MAAMmB,IAAKJ,EAAUnB,IAAKe,EAAKX,MAAMiB,IAAKF,EAAUnB,MAExHe,GAAKJ,OAAOF,OAAQH,EAAG,SAAUG,OAAQH,EAAG,SAAUG,OAAQW,IAC7BX,OAAQH,EAAG,SAAUG,OAAQU,EAAUlB,WAE5EE,KAAKO,OAAQP,KAAKC,MAAMiB,IAAK,YAAe,QAAU","file":"../../../scripts/mvc/upload/upload-settings.js","sourcesContent":["/** This renders the content of the settings popup, allowing users to specify flags i.e. for space-to-tab conversion **/\ndefine( [ 'utils/utils' ], function( Utils ) {\n    return Backbone.View.extend({\n        options: {\n            class_check     : 'fa-check-square-o',\n            class_uncheck   : 'fa-square-o',\n            parameters      : [{\n                id          : 'space_to_tab',\n                title       : 'Convert spaces to tabs',\n            },{\n                id          : 'to_posix_lines',\n                title       : 'Use POSIX standard'\n            }]\n        },\n\n        initialize: function( options ) {\n            var self = this;\n            this.model = options.model;\n            this.setElement( $( '<div/>' ).addClass( 'upload-settings' ) );\n            this.$el.append( $( '<div/>' ).addClass( 'upload-settings-cover' ) );\n            this.$el.append( $( '<table/>' ).addClass( 'upload-settings-table ui-table-striped' ).append( '<tbody/>' ) );\n            this.$cover = this.$( '.upload-settings-cover' );\n            this.$table = this.$( '.upload-settings-table > tbody' );\n            this.listenTo ( this.model, 'change', this.render, this );\n            this.model.trigger( 'change' );\n        },\n\n        render: function() {\n            var self = this;\n            this.$table.empty();\n            _.each( this.options.parameters, function( parameter ) {\n                var $checkbox = $( '<div/>' ).addClass( 'upload-' + parameter.id + ' upload-icon-button fa' )\n                                             .addClass( self.model.get( parameter.id ) && self.options.class_check || self.options.class_uncheck )\n                                             .on( 'click', function() {\n                                                self.model.get( 'enabled' ) && self.model.set( parameter.id, !self.model.get( parameter.id ) )\n                                             });\n                self.$table.append( $( '<tr/>' ).append( $( '<td/>' ).append( $checkbox ) )\n                                                .append( $( '<td/>' ).append( parameter.title ) ) )\n            });\n            this.$cover[ this.model.get( 'enabled' ) && 'hide' || 'show' ]();\n        }\n    });\n});"]}