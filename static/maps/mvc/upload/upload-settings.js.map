{"version":3,"sources":["mvc/upload/upload-settings.js"],"names":["define","Utils","Backbone","View","extend","options","class_check","class_uncheck","parameters","title","initialize","model","this","self","$","addClass","setElement","append","$el","$cover","render","$table","trigger","empty","_","each","parameter","id","get","$checkbox"],"mappings":"aACAA,QAAU,eAAiB,SAAUC,GADrC,OAAAC,SAAAC,KAAAC,QACUC,SACCH,YAAcE,oBACjBC,cAAS,cACLC,aACAC,GAAkB,eAClBC,MAAmB,2BAEfC,GAAc,iBAChBA,MAAA,wBANGC,WADe,SAAAL,GAaxBK,KAAAA,MAAYL,EAAAM,MACRC,KAAIC,WAAJC,EAAA,UAAAC,SAAA,oBACAH,KAAKD,IAAAA,OAAQN,EAAAA,UAAbU,SAAA,0BACAH,KAAKI,IAAAA,OAAYF,EAAG,YAAWC,SAAU,0CAAzCE,OAAA,aACAL,KAAKM,OAAID,KAAWH,EAAA,0BACpBF,KAAKM,OAAID,KAAWH,EAAA,kCACpBF,KAAKO,SAASP,KAAQD,MAAA,SAAAC,KAAAQ,OAAtBR,MACAA,KAAKS,MAALC,QAAc,WAGjBF,OAvBuB,WA0BpB,IAAIP,EAAOD,KADfQ,KAAQC,OAAAE,QACJC,EAAAC,KAAIZ,KAAOR,QAAXG,WAAA,SAAAkB,GACA,IAAKL,EAALP,EAAA,UAAAC,SAAA,UAAAW,EAAAC,GAAA,0BACiCZ,SAAUW,EAAAA,MAAYE,IAAAF,EAAAC,KAAAd,EAAAR,QAAAC,aAAAO,EAAAR,QAAAE,eACrBQ,GAAAA,QAAU,WAGRF,EAA+BA,MAAAe,IAAgBF,YAAeb,EAAKF,MAAMiB,IAAKF,EAAUC,IAAxFd,EAAAF,MAAAiB,IAAAF,EAAAC,OAEhCd,EAAKQ,OAAOJ,OAAQH,EAAG,SAAUG,OAAWH,EAAA,SAAHG,OAAqBY,IANlEZ,OAAAH,EAAA,SAAAG,OAAAS,EAAAjB,WAUHG,KAAAO,OAAAP,KAAAD,MAAAiB,IAAA,YAAA,QAAA","file":"../../../scripts/mvc/upload/upload-settings.js","sourcesContent":["/** This renders the content of the settings popup, allowing users to specify flags i.e. for space-to-tab conversion **/\ndefine( [ 'utils/utils' ], function( Utils ) {\n    return Backbone.View.extend({\n        options: {\n            class_check     : 'fa-check-square-o',\n            class_uncheck   : 'fa-square-o',\n            parameters      : [{\n                id          : 'space_to_tab',\n                title       : 'Convert spaces to tabs',\n            },{\n                id          : 'to_posix_lines',\n                title       : 'Use POSIX standard'\n            }]\n        },\n\n        initialize: function( options ) {\n            var self = this;\n            this.model = options.model;\n            this.setElement( $( '<div/>' ).addClass( 'upload-settings' ) );\n            this.$el.append( $( '<div/>' ).addClass( 'upload-settings-cover' ) );\n            this.$el.append( $( '<table/>' ).addClass( 'upload-settings-table ui-table-striped' ).append( '<tbody/>' ) );\n            this.$cover = this.$( '.upload-settings-cover' );\n            this.$table = this.$( '.upload-settings-table > tbody' );\n            this.listenTo ( this.model, 'change', this.render, this );\n            this.model.trigger( 'change' );\n        },\n\n        render: function() {\n            var self = this;\n            this.$table.empty();\n            _.each( this.options.parameters, function( parameter ) {\n                var $checkbox = $( '<div/>' ).addClass( 'upload-' + parameter.id + ' upload-icon-button fa' )\n                                             .addClass( self.model.get( parameter.id ) && self.options.class_check || self.options.class_uncheck )\n                                             .on( 'click', function() {\n                                                self.model.get( 'enabled' ) && self.model.set( parameter.id, !self.model.get( parameter.id ) )\n                                             });\n                self.$table.append( $( '<tr/>' ).append( $( '<td/>' ).append( $checkbox ) )\n                                                .append( $( '<td/>' ).append( parameter.title ) ) )\n            });\n            this.$cover[ this.model.get( 'enabled' ) && 'hide' || 'show' ]();\n        }\n    });\n});"]}