{"version":3,"sources":["mvc/upload/default/default-view.js"],"names":["define","Utils","UploadModel","UploadRow","UploadFtp","Popover","Select","Ui","Backbone","View","extend","upload_size","collection","Collection","counter","announce","success","error","running","this","initialize","app","self","list_extensions","list_genomes","options","ui_button","setElement","_template","id","title","onclick","uploadbox","select","icon","btnFtp","Button","_eventFtp","btnCreate","_eventCreate","btnLocal","_eventStart","_eventStop","btnReset","_eventReset","modal","hide","btnStop","btnStart","btnClose","button","prepend","$el","nginx_upload_path","index","file","_eventAnnounce","get","history_id","percentage","_eventProgress","message","_eventSuccess","_eventError","_eventComplete","ondragover","$","addClass","ondragleave","removeClass","container","select_extension","css","url","_","filter","ext","composite_files","onchange","extension","updateExtension","progress","e","target","text","value","placement","default_genome","genome","updateGenome","on","model","_eventRemove","_updateScreen","Model","data","file_name","file_size","size","mode","default_extension","path","add","new_model","upload_row","append","showExtensionInfo","it","preventDefault","set","_uploadPercentage","select_genome","status","Galaxy","currHistoryPanel","refreshContents","info","upload_completed","file_mode","file_path","file_data","render","description","findWhere","extension_popup","remove","empty","_templateDescription","show","ftp","visible","ftp_upload_site","ftp_file","name","onremove","model_index","currentHistory","onadd","reset","defaults_only","each","compatible","html","enable_reset","enable_start","enable_sources","show_table","tmpl","description_url"],"mappings":"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","file":"../../../../scripts/mvc/upload/default/default-view.js","sourcesContent":["/** Renders contents of the default uploader */\ndefine([ 'utils/utils', 'mvc/upload/upload-model', 'mvc/upload/default/default-row', 'mvc/upload/upload-ftp', 'mvc/ui/ui-popover', 'mvc/ui/ui-select', 'mvc/ui/ui-misc', 'utils/uploadbox'],\nfunction( Utils, UploadModel, UploadRow, UploadFtp, Popover, Select, Ui ) {\n    return Backbone.View.extend({\n        // current upload size in bytes\n        upload_size: 0,\n\n        // contains upload row models\n        collection : new UploadModel.Collection(),\n\n        // keeps track of the current uploader state\n        counter : {\n            announce    : 0,\n            success     : 0,\n            error       : 0,\n            running     : 0,\n            reset : function() { this.announce = this.success = this.error = this.running = 0 }\n        },\n\n        initialize : function( app ) {\n            var self = this;\n            this.app                = app;\n            this.options            = app.options;\n            this.list_extensions    = app.list_extensions;\n            this.list_genomes       = app.list_genomes;\n            this.ui_button          = app.ui_button;\n            this.ftp_upload_site    = app.currentFtp();\n            this.setElement( this._template() );\n\n            // append buttons to dom\n            this.btnLocal    = new Ui.Button( { id: 'btn-local', title: 'Choose local file',   onclick: function() { self.uploadbox.select() }, icon: 'fa fa-laptop' } );\n            this.btnFtp      = new Ui.Button( { id: 'btn-ftp',   title: 'Choose FTP file',     onclick: function() { self._eventFtp() }, icon: 'fa fa-folder-open-o' } );\n            this.btnCreate   = new Ui.Button( { id: 'btn-new',   title: 'Paste/Fetch data',    onclick: function() { self._eventCreate() }, icon: 'fa fa-edit' } );\n            this.btnStart    = new Ui.Button( { id: 'btn-start', title: 'Start',               onclick: function() { self._eventStart() } } );\n            this.btnStop     = new Ui.Button( { id: 'btn-stop',  title: 'Pause',               onclick: function() { self._eventStop() } } );\n            this.btnReset    = new Ui.Button( { id: 'btn-reset', title: 'Reset',               onclick: function() { self._eventReset() } } );\n            this.btnClose    = new Ui.Button( { id: 'btn-close', title: 'Close',               onclick: function() { self.app.modal.hide() } } );\n            _.each( [ this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnClose ], function( button ) {\n                self.$( '.upload-buttons' ).prepend( button.$el );\n            });\n\n            // file upload\n            this.uploadbox = this.$( '.upload-box' ).uploadbox({\n                url             : this.app.options.nginx_upload_path,\n                announce        : function( index, file )       { self._eventAnnounce( index, file ) },\n                initialize      : function( index )             { return self.app.toData( [ self.collection.get( index ) ], self.history_id ) },\n                progress        : function( index, percentage ) { self._eventProgress( index, percentage ) },\n                success         : function( index, message )    { self._eventSuccess( index, message ) },\n                error           : function( index, message )    { self._eventError( index, message ) },\n                complete        : function()                    { self._eventComplete() },\n                ondragover      : function()                    { self.$( '.upload-box' ).addClass( 'highlight' ) },\n                ondragleave     : function()                    { self.$( '.upload-box' ).removeClass( 'highlight' ) }\n            });\n\n            // add ftp file viewer\n            this.ftp = new Popover.View( { title: 'FTP files', container: this.btnFtp.$el } );\n\n            // select extension\n            this.select_extension = new Select.View({\n                css         : 'upload-footer-selection',\n                container   : this.$( '.upload-footer-extension' ),\n                data        : _.filter( this.list_extensions, function( ext ) { return !ext.composite_files } ),\n                value       : this.options.default_extension,\n                onchange    : function( extension ) { self.updateExtension( extension ) }\n            });\n\n            // handle extension info popover\n            this.$( '.upload-footer-extension-info' ).on( 'click', function( e ) {\n                self.showExtensionInfo({\n                    $el         : $( e.target ),\n                    title       : self.select_extension.text(),\n                    extension   : self.select_extension.value(),\n                    placement   : 'top'\n                });\n            }).on( 'mousedown', function( e ) { e.preventDefault() } );\n\n            // genome extension\n            this.select_genome = new Select.View({\n                css         : 'upload-footer-selection',\n                container   : this.$( '.upload-footer-genome' ),\n                data        : this.list_genomes,\n                value       : this.options.default_genome,\n                onchange    : function( genome ) { self.updateGenome(genome) }\n            });\n\n            // events\n            this.collection.on( 'remove', function( model ) { self._eventRemove( model ) } );\n            this._updateScreen();\n        },\n\n        /** A new file has been dropped/selected through the uploadbox plugin */\n        _eventAnnounce: function( index, file ) {\n            this.counter.announce++;\n            var new_model = new UploadModel.Model({\n                id          : index,\n                file_name   : file.name,\n                file_size   : file.size,\n                file_mode   : file.mode || 'local',\n                file_path   : file.path,\n                file_data   : file\n            });\n            this.collection.add( new_model );\n            var upload_row = new UploadRow( this, { model: new_model } );\n            this.$( '.upload-table > tbody:first' ).append( upload_row.$el );\n            this._updateScreen();\n            upload_row.render();\n        },\n\n        /** Progress */\n        _eventProgress: function( index, percentage ) {\n            var it = this.collection.get( index );\n            it.set( 'percentage', percentage );\n            this.ui_button.model.set( 'percentage', this._uploadPercentage( percentage, it.get( 'file_size' ) ) );\n        },\n\n        /** Success */\n        _eventSuccess: function( index, message ) {\n            var it = this.collection.get( index );\n            it.set( { 'percentage': 100, 'status': 'success' } );\n            this.ui_button.model.set( 'percentage', this._uploadPercentage( 100, it.get( 'file_size' ) ) );\n            this.upload_completed += it.get( 'file_size' ) * 100;\n            this.counter.announce--;\n            this.counter.success++;\n            this._updateScreen();\n            Galaxy.currHistoryPanel.refreshContents();\n        },\n\n        /** Error */\n        _eventError: function( index, message ) {\n            var it = this.collection.get( index );\n            it.set( { 'percentage': 100, 'status': 'error', 'info': message } );\n            this.ui_button.model.set( { 'percentage': this._uploadPercentage( 100, it.get( 'file_size' ) ), 'status': 'danger' } );\n            this.upload_completed += it.get( 'file_size' ) * 100;\n            this.counter.announce--;\n            this.counter.error++;\n            this._updateScreen();\n        },\n\n        /** Queue is done */\n        _eventComplete: function() {\n            this.collection.each( function( model ) { model.get( 'status' ) == 'queued' && model.set( 'status', 'init' ) } );\n            this.counter.running = 0;\n            this._updateScreen();\n        },\n\n        /** Remove model from upload list */\n        _eventRemove: function( model ) {\n            var status = model.get( 'status' );\n            if ( status == 'success' ) {\n                this.counter.success--;\n            } else if ( status == 'error' ) {\n                this.counter.error--;\n            } else {\n                this.counter.announce--;\n            }\n            this.uploadbox.remove( model.id );\n            this._updateScreen();\n        },\n\n        //\n        // events triggered by this view\n        //\n\n        /** [public] display extension info popup */\n        showExtensionInfo: function( options ) {\n            var self = this;\n            var $el = options.$el;\n            var extension = options.extension;\n            var title = options.title;\n            var description = _.findWhere( self.list_extensions, { 'id': extension } );\n            this.extension_popup && this.extension_popup.remove();\n            this.extension_popup = new Popover.View({ placement: options.placement || 'bottom', container: $el } );\n            this.extension_popup.title( title );\n            this.extension_popup.empty();\n            this.extension_popup.append( this._templateDescription( description ) );\n            this.extension_popup.show();\n        },\n\n        /** Show/hide ftp popup */\n        _eventFtp: function() {\n            if ( !this.ftp.visible ) {\n                this.ftp.empty();\n                var self = this;\n                this.ftp.append( ( new UploadFtp({\n                    collection      : this.collection,\n                    ftp_upload_site : this.ftp_upload_site,\n                    onadd           : function( ftp_file ) {\n                        self.uploadbox.add([{\n                            mode: 'ftp',\n                            name: ftp_file.path,\n                            size: ftp_file.size,\n                            path: ftp_file.path\n                        }]);\n                    },\n                    onremove: function( model_index ) {\n                        self.collection.remove( model_index );\n                    }\n                } ) ).$el );\n                this.ftp.show();\n            } else {\n                this.ftp.hide();\n            }\n        },\n\n        /** Create a new file */\n        _eventCreate: function (){\n            this.uploadbox.add( [ { name: 'New File', size: 0, mode: 'new' } ] );\n        },\n\n        /** Start upload process */\n        _eventStart: function() {\n            if ( this.counter.announce == 0 || this.counter.running > 0 ) {\n                return;\n            }\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each( function( model ) {\n                if( model.get( 'status' ) == 'init' ) {\n                    model.set( 'status', 'queued' );\n                    self.upload_size += model.get( 'file_size' );\n                }\n            });\n            this.ui_button.model.set( { 'percentage': 0, 'status': 'success' } );\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n            this.uploadbox.start();\n            this._updateScreen();\n        },\n\n        /** Pause upload process */\n        _eventStop: function() {\n            if ( this.counter.running > 0 ) {\n                this.ui_button.model.set( 'status', 'info' );\n                $( '.upload-top-info' ).html( 'Queue will pause after completing the current file...' );\n                this.uploadbox.stop();\n            }\n        },\n\n        /** Remove all */\n        _eventReset: function() {\n            if ( this.counter.running == 0 ){\n                this.collection.reset();\n                this.counter.reset();\n                this.uploadbox.reset();\n                this.select_extension.value( this.options.default_extension );\n                this.select_genome.value( this.options.default_genome );\n                this.ui_button.model.set( 'percentage', 0 );\n                this._updateScreen();\n            }\n        },\n\n        /** Update extension for all models */\n        updateExtension: function( extension, defaults_only ) {\n            var self = this;\n            this.collection.each( function( model ) {\n                if ( model.get( 'status' ) == 'init' && ( model.get( 'extension' ) == self.options.default_extension || !defaults_only ) ) {\n                    model.set( 'extension', extension );\n                }\n            });\n        },\n\n        /** Update genome for all models */\n        updateGenome: function( genome, defaults_only ) {\n            var self = this;\n            this.collection.each( function( model ) {\n                if ( model.get( 'status' ) == 'init' && ( model.get( 'genome' ) == self.options.default_genome || !defaults_only ) ) {\n                    model.set( 'genome', genome );\n                }\n            });\n        },\n\n        /** Set screen */\n        _updateScreen: function () {\n            var message = '';\n            if( this.counter.announce == 0 ) {\n                if (this.uploadbox.compatible()) {\n                    message = '&nbsp;';\n                } else {\n                    message = 'Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.';\n                }\n            } else {\n                if ( this.counter.running == 0 ) {\n                    message = 'You added ' + this.counter.announce + ' file(s) to the queue. Add more files or click \\'Start\\' to proceed.';\n                } else {\n                    message = 'Please wait...' + this.counter.announce + ' out of ' + this.counter.running + ' remaining.';\n                }\n            }\n            this.$( '.upload-top-info' ).html( message );\n            var enable_reset = this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n            var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n            var enable_sources = this.counter.running == 0;\n            var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n            this.btnReset[ enable_reset ? 'enable' : 'disable' ]();\n            this.btnStart[ enable_start ? 'enable' : 'disable' ]();\n            this.btnStart.$el[ enable_start ? 'addClass' : 'removeClass' ]( 'btn-primary' );\n            this.btnStop[ this.counter.running > 0 ? 'enable' : 'disable' ]();\n            this.btnLocal[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnFtp[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnCreate[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnFtp.$el[ this.ftp_upload_site ? 'show' : 'hide' ]();\n            this.$( '.upload-table' )[ show_table ? 'show' : 'hide' ]();\n            this.$( '.upload-helper' )[ show_table ? 'hide' : 'show' ]();\n        },\n\n        /** Calculate percentage of all queued uploads */\n        _uploadPercentage: function( percentage, size ) {\n            return ( this.upload_completed + ( percentage * size ) ) / this.upload_size;\n        },\n\n        /** Template for extensions description */\n        _templateDescription: function( options ) {\n            if ( options.description ) {\n                var tmpl = options.description;\n                if ( options.description_url ) {\n                    tmpl += '&nbsp;(<a href=\"' + options.description_url + '\" target=\"_blank\">read more</a>)';\n                }\n                return tmpl;\n            } else {\n                return 'There is no description available for this file extension.';\n            }\n        },\n\n        /** Template */\n        _template: function() {\n            return  '<div class=\"upload-view-default\">' +\n                        '<div class=\"upload-top\">' +\n                            '<h6 class=\"upload-top-info\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-box\">' +\n                            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n                            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n                                '<thead>' +\n                                    '<tr>' +\n                                        '<th>Name</th>' +\n                                        '<th>Size</th>' +\n                                        '<th>Type</th>' +\n                                        '<th>Genome</th>' +\n                                        '<th>Settings</th>' +\n                                        '<th>Status</th>' +\n                                        '<th/>' +\n                                    '</tr>' +\n                                '</thead>' +\n                                '<tbody/>' +\n                            '</table>' +\n                        '</div>' +\n                        '<div class=\"upload-footer\">' +\n                            '<span class=\"upload-footer-title\">Type (set all):</span>' +\n                            '<span class=\"upload-footer-extension\"/>' +\n                            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n                            '<span class=\"upload-footer-title\">Genome (set all):</span>' +\n                            '<span class=\"upload-footer-genome\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-buttons\"/>' +\n                    '</div>';\n        }\n    });\n});\n"]}