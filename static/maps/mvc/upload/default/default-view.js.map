{"version":3,"sources":["mvc/upload/default/default-view.js"],"names":["Backbone","View","extend","upload_size","collection","_uploadModel2","default","Collection","counter","announce","success","error","running","reset","this","initialize","app","self","options","list_extensions","list_genomes","ui_button","currentFtp","_template","$","_uiMisc2","Button","id","title","onclick","uploadbox","select","icon","btnFtp","ftp_upload_site","btnCreate","$uploadbox","btnLocal","_eventStop","modal","hide","btnStop","btnReset","btnStart","prepend","button","$el","nginx_upload_path","index","file","_eventAnnounce","toData","get","history_id","percentage","message","_eventSuccess","progress","_eventProgress","_eventError","complete","_eventComplete","ondragleave","container","select_extension","_uiSelect2","data","_","filter","ext","composite_files","value","css","extension","onchange","_changeExtension","_uploadExtension2","e","target","text","list","placement","preventDefault","select_genome","default_genome","genome","loader","_lazyLimited2","$container","new_content","model","_defaultRow2","append","upload_row","on","_eventRemove","render","compatible","enable_reset","enable_start","enable_sources","show_table","file_name","file_size","file_mode","file_path","file_data","Model","it","name","mode","path","Galaxy","currHistoryPanel","set","_uploadPercentage","status","upload_completed","refreshContents","info","each","visible","ftp","empty","ftp_file","size","_eventFtp","_uploadFtp3","_eventCreate","add","onremove","model_index","remove","show","_eventStart","html","currentHistory","_uploadFtp","stop","_eventReset","default_extension","length","uploadpost","defaults_only","push","url"],"mappings":"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","file":"../../../../scripts/mvc/upload/default/default-view.js","sourcesContent":["/** Renders contents of the default uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/default/default-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LazyLimited from \"mvc/lazy/lazy-limited\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n\n        // build template\n        this.setElement(this._template());\n        this.$uploadbox = this.$(\".upload-box\");\n        this.$uploadtable = this.$(\".upload-table\");\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: \"Choose local file\",\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP file\",\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [\n                this.btnLocal,\n                this.btnFtp,\n                this.btnCreate,\n                this.btnStop,\n                this.btnReset,\n                this.btnStart,\n                this.btnClose\n            ],\n            function(button) {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$uploadbox.uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData(\n                    [self.collection.get(index)],\n                    self.history_id\n                );\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$uploadbox.addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$uploadbox.removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function(ext) {\n                return !ext.composite_files;\n            }),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self._changeExtension(extension);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", function(e) {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", function(e) {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self._changeGenome(genome);\n            }\n        });\n\n        // Lazy load helper\n        this.loader = new LazyLimited({\n            $container: this.$uploadbox,\n            collection: this.collection,\n            new_content: function(model) {\n                var upload_row = new UploadRow(self, { model: model });\n                self.$uploadtable.find(\"> tbody:first\").append(upload_row.$el);\n                upload_row.render();\n                return upload_row;\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", function(model) {\n            self._eventRemove(model);\n        });\n        this.render();\n    },\n\n    render: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message =\n                    \"You added \" +\n                    this.counter.announce +\n                    \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n            } else {\n                message =\n                    \"Please wait...\" +\n                    this.counter.announce +\n                    \" out of \" +\n                    this.counter.running +\n                    \" remaining.\";\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 &&\n            this.counter.announce + this.counter.success + this.counter.error >\n                0;\n        var enable_start =\n            this.counter.running == 0 && this.counter.announce > 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table =\n            this.counter.announce + this.counter.success + this.counter.error >\n            0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\n            \"btn-primary\"\n        );\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file\n        });\n        this.render();\n        this.collection.add(new_model);\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(percentage, it.get(\"file_size\"))\n        );\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\" });\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(100, it.get(\"file_size\"))\n        );\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this.render();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this.render();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(function(model) {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this.render();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this.render();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce != 0 && this.counter.running == 0) {\n            // prepare upload process\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each(function(model) {\n                if (model.get(\"status\") == \"init\") {\n                    model.set(\"status\", \"queued\");\n                    self.upload_size += model.get(\"file_size\");\n                }\n            });\n            this.ui_button.model.set({\n                percentage: 0,\n                status: \"success\"\n            });\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n\n            // package ftp files separately, and remove them from queue\n            this._uploadFtp();\n\n            // queue remaining files\n            this.uploadbox.start();\n            this.render();\n        }\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\n                \"Queue will pause after completing the current file...\"\n            );\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            var self = this;\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this.render();\n        }\n    },\n\n    /** Update extension for all models */\n    _changeExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension ||\n                    !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update genome for all models */\n    _changeGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome ||\n                    !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Package and upload ftp files in a single request */\n    _uploadFtp: function() {\n        var self = this;\n        var list = [];\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"queued\" &&\n                model.get(\"file_mode\") == \"ftp\"\n            ) {\n                self.uploadbox.remove(model.id);\n                list.push(model);\n            }\n        });\n        if (list.length > 0) {\n            $.uploadpost({\n                data: this.app.toData(list),\n                url: this.app.options.nginx_upload_path,\n                success: function(message) {\n                    _.each(list, function(model) {\n                        self._eventSuccess(model.id);\n                    });\n                },\n                error: function(message) {\n                    _.each(list, function(model) {\n                        self._eventError(model.id, message);\n                    });\n                }\n            });\n        }\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Type</th>\" +\n            \"<th>Genome</th>\" +\n            \"<th>Settings</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title\">Type (set all):</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n"]}