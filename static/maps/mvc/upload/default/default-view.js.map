{"version":3,"sources":["mvc/upload/default/default-view.js"],"names":["_utils","require","_uploadModel","_defaultRow","_uploadFtp2","_uploadExtension","_uiPopover","_uiSelect","_uiMisc","_lazyLimited","Backbone","View","extend","upload_size","collection","_uploadModel2","default","Collection","counter","announce","success","error","running","reset","this","initialize","app","self","options","list_extensions","list_genomes","ui_button","ftp_upload_site","currentFtp","setElement","_template","$uploadbox","$","$uploadtable","btnLocal","_uiMisc2","Button","id","title","onclick","uploadbox","select","icon","_eventFtp","_eventCreate","_eventStop","_eventReset","modal","hide","_","each","btnFtp","btnStop","btnReset","btnStart","btnClose","button","prepend","$el","nginx_upload_path","index","file","toData","get","history_id","progress","percentage","_eventProgress","message","_eventSuccess","_eventError","_eventComplete","ondragover","addClass","url","removeClass","ftp","_uiPopover2","select_extension","_uiSelect2","data","filter","ext","complete","composite_files","value","default_extension","extension","on","e","_uploadExtension2","target","text","container","list","placement","css","onchange","_changeExtension","default_genome","genome","_changeGenome","new_content","model","upload_row","_defaultRow2","preventDefault","find","append","render","loader","$container","html","enable_reset","enable_start","enable_sources","btnCreate","_eventAnnounce","new_model","Model","file_name","size","mode","name","file_size","file_path","file_data","it","set","_uploadPercentage","status","Galaxy","currHistoryPanel","refreshContents","info","upload_completed","_eventRemove","remove","onadd","_uploadFtp3","ftp_file","path","model_index","onremove","show","add","_eventStart","currentHistory","_uploadFtp","defaults_only","length","push","uploadpost"],"mappings":"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","file":"../../../../scripts/mvc/upload/default/default-view.js","sourcesContent":["/** Renders contents of the default uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/default/default-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LazyLimited from \"mvc/lazy/lazy-limited\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n\n        // build template\n        this.setElement(this._template());\n        this.$uploadbox = this.$(\".upload-box\");\n        this.$uploadtable = this.$(\".upload-table\");\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: \"Choose local file\",\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP file\",\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [\n                this.btnLocal,\n                this.btnFtp,\n                this.btnCreate,\n                this.btnStop,\n                this.btnReset,\n                this.btnStart,\n                this.btnClose\n            ],\n            function(button) {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$uploadbox.uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData(\n                    [self.collection.get(index)],\n                    self.history_id\n                );\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$uploadbox.addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$uploadbox.removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function(ext) {\n                return !ext.composite_files;\n            }),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self._changeExtension(extension);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", function(e) {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", function(e) {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self._changeGenome(genome);\n            }\n        });\n\n        // Lazy load helper\n        this.loader = new LazyLimited({\n            $container: this.$uploadbox,\n            collection: this.collection,\n            new_content: function(model) {\n                var upload_row = new UploadRow(self, { model: model });\n                self.$uploadtable.find(\"> tbody:first\").append(upload_row.$el);\n                upload_row.render();\n                return upload_row;\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", function(model) {\n            self._eventRemove(model);\n        });\n        this.render();\n    },\n\n    render: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message =\n                    \"You added \" +\n                    this.counter.announce +\n                    \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n            } else {\n                message =\n                    \"Please wait...\" +\n                    this.counter.announce +\n                    \" out of \" +\n                    this.counter.running +\n                    \" remaining.\";\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 &&\n            this.counter.announce + this.counter.success + this.counter.error >\n                0;\n        var enable_start =\n            this.counter.running == 0 && this.counter.announce > 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table =\n            this.counter.announce + this.counter.success + this.counter.error >\n            0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\n            \"btn-primary\"\n        );\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file\n        });\n        this.render();\n        this.collection.add(new_model);\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(percentage, it.get(\"file_size\"))\n        );\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\" });\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(100, it.get(\"file_size\"))\n        );\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this.render();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this.render();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(function(model) {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this.render();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this.render();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce != 0 && this.counter.running == 0) {\n            // prepare upload process\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each(function(model) {\n                if (model.get(\"status\") == \"init\") {\n                    model.set(\"status\", \"queued\");\n                    self.upload_size += model.get(\"file_size\");\n                }\n            });\n            this.ui_button.model.set({\n                percentage: 0,\n                status: \"success\"\n            });\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n\n            // package ftp files separately, and remove them from queue\n            this._uploadFtp();\n\n            // queue remaining files\n            this.uploadbox.start();\n            this.render();\n        }\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\n                \"Queue will pause after completing the current file...\"\n            );\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            var self = this;\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this.render();\n        }\n    },\n\n    /** Update extension for all models */\n    _changeExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension ||\n                    !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update genome for all models */\n    _changeGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome ||\n                    !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Package and upload ftp files in a single request */\n    _uploadFtp: function() {\n        var self = this;\n        var list = [];\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"queued\" &&\n                model.get(\"file_mode\") == \"ftp\"\n            ) {\n                self.uploadbox.remove(model.id);\n                list.push(model);\n            }\n        });\n        if (list.length > 0) {\n            $.uploadpost({\n                data: this.app.toData(list),\n                url: this.app.options.nginx_upload_path,\n                success: function(message) {\n                    _.each(list, function(model) {\n                        self._eventSuccess(model.id);\n                    });\n                },\n                error: function(message) {\n                    _.each(list, function(model) {\n                        self._eventError(model.id, message);\n                    });\n                }\n            });\n        }\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Type</th>\" +\n            \"<th>Genome</th>\" +\n            \"<th>Settings</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title\">Type (set all):</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n"]}