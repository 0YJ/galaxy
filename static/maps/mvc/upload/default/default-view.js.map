{"version":3,"sources":["mvc/upload/default/default-view.js"],"names":["define","Utils","UploadModel","UploadRow","UploadFtp","Popover","Select","Ui","Backbone","View","extend","upload_size","collection","Collection","counter","announce","success","error","running","reset","this","initialize","app","self","options","list_extensions","list_genomes","ui_button","ftp_upload_site","currentFtp","setElement","_template","btnLocal","Button","id","title","onclick","uploadbox","select","icon","btnFtp","_eventFtp","btnCreate","_eventCreate","btnStart","_eventStart","btnStop","_eventStop","btnReset","_eventReset","btnClose","modal","hide","_","each","button","$","prepend","$el","url","nginx_upload_path","index","file","_eventAnnounce","toData","get","history_id","progress","percentage","_eventProgress","message","_eventSuccess","_eventError","complete","_eventComplete","ondragover","addClass","ondragleave","removeClass","ftp","container","select_extension","css","data","filter","ext","composite_files","value","default_extension","onchange","extension","updateExtension","on","e","showExtensionInfo","target","text","placement","preventDefault","select_genome","default_genome","genome","updateGenome","model","_eventRemove","_updateScreen","new_model","Model","file_name","name","file_size","size","file_mode","mode","file_path","path","file_data","add","upload_row","append","render","it","set","_uploadPercentage","status","upload_completed","Galaxy","currHistoryPanel","refreshContents","info","remove","description","findWhere","extension_popup","empty","_templateDescription","show","visible","onadd","ftp_file","onremove","model_index","currentHistory","start","html","stop","defaults_only","compatible","enable_reset","enable_start","enable_sources","show_table","tmpl","description_url"],"mappings":"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","file":"../../../../scripts/mvc/upload/default/default-view.js","sourcesContent":["/** Renders contents of the default uploader */\ndefine([ 'utils/utils', 'mvc/upload/upload-model', 'mvc/upload/default/default-row', 'mvc/upload/upload-ftp', 'mvc/ui/ui-popover', 'mvc/ui/ui-select', 'mvc/ui/ui-misc', 'utils/uploadbox'],\nfunction( Utils, UploadModel, UploadRow, UploadFtp, Popover, Select, Ui ) {\n    return Backbone.View.extend({\n        // current upload size in bytes\n        upload_size: 0,\n\n        // contains upload row models\n        collection : new UploadModel.Collection(),\n\n        // keeps track of the current uploader state\n        counter : {\n            announce    : 0,\n            success     : 0,\n            error       : 0,\n            running     : 0,\n            reset : function() { this.announce = this.success = this.error = this.running = 0 }\n        },\n\n        initialize : function( app ) {\n            var self = this;\n            this.app                = app;\n            this.options            = app.options;\n            this.list_extensions    = app.list_extensions;\n            this.list_genomes       = app.list_genomes;\n            this.ui_button          = app.ui_button;\n            this.ftp_upload_site    = app.currentFtp();\n            this.setElement( this._template() );\n\n            // append buttons to dom\n            this.btnLocal    = new Ui.Button( { id: 'btn-local', title: 'Choose local file',   onclick: function() { self.uploadbox.select() }, icon: 'fa fa-laptop' } );\n            this.btnFtp      = new Ui.Button( { id: 'btn-ftp',   title: 'Choose FTP file',     onclick: function() { self._eventFtp() }, icon: 'fa fa-folder-open-o' } );\n            this.btnCreate   = new Ui.Button( { id: 'btn-new',   title: 'Paste/Fetch data',    onclick: function() { self._eventCreate() }, icon: 'fa fa-edit' } );\n            this.btnStart    = new Ui.Button( { id: 'btn-start', title: 'Start',               onclick: function() { self._eventStart() } } );\n            this.btnStop     = new Ui.Button( { id: 'btn-stop',  title: 'Pause',               onclick: function() { self._eventStop() } } );\n            this.btnReset    = new Ui.Button( { id: 'btn-reset', title: 'Reset',               onclick: function() { self._eventReset() } } );\n            this.btnClose    = new Ui.Button( { id: 'btn-close', title: 'Close',               onclick: function() { self.app.modal.hide() } } );\n            _.each( [ this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnClose ], function( button ) {\n                self.$( '.upload-buttons' ).prepend( button.$el );\n            });\n\n            // file upload\n            this.uploadbox = this.$( '.upload-box' ).uploadbox({\n                url             : this.app.options.nginx_upload_path,\n                announce        : function( index, file )       { self._eventAnnounce( index, file ) },\n                initialize      : function( index )             { return self.app.toData( [ self.collection.get( index ) ], self.history_id ) },\n                progress        : function( index, percentage ) { self._eventProgress( index, percentage ) },\n                success         : function( index, message )    { self._eventSuccess( index, message ) },\n                error           : function( index, message )    { self._eventError( index, message ) },\n                complete        : function()                    { self._eventComplete() },\n                ondragover      : function()                    { self.$( '.upload-box' ).addClass( 'highlight' ) },\n                ondragleave     : function()                    { self.$( '.upload-box' ).removeClass( 'highlight' ) }\n            });\n\n            // add ftp file viewer\n            this.ftp = new Popover.View( { title: 'FTP files', container: this.btnFtp.$el } );\n\n            // select extension\n            this.select_extension = new Select.View({\n                css         : 'upload-footer-selection',\n                container   : this.$( '.upload-footer-extension' ),\n                data        : _.filter( this.list_extensions, function( ext ) { return !ext.composite_files } ),\n                value       : this.options.default_extension,\n                onchange    : function( extension ) { self.updateExtension( extension ) }\n            });\n\n            // handle extension info popover\n            this.$( '.upload-footer-extension-info' ).on( 'click', function( e ) {\n                self.showExtensionInfo({\n                    $el         : $( e.target ),\n                    title       : self.select_extension.text(),\n                    extension   : self.select_extension.value(),\n                    placement   : 'top'\n                });\n            }).on( 'mousedown', function( e ) { e.preventDefault() } );\n\n            // genome extension\n            this.select_genome = new Select.View({\n                css         : 'upload-footer-selection',\n                container   : this.$( '.upload-footer-genome' ),\n                data        : this.list_genomes,\n                value       : this.options.default_genome,\n                onchange    : function( genome ) { self.updateGenome(genome) }\n            });\n\n            // events\n            this.collection.on( 'remove', function( model ) { self._eventRemove( model ) } );\n            this._updateScreen();\n        },\n\n        /** A new file has been dropped/selected through the uploadbox plugin */\n        _eventAnnounce: function( index, file ) {\n            this.counter.announce++;\n            var new_model = new UploadModel.Model({\n                id          : index,\n                file_name   : file.name,\n                file_size   : file.size,\n                file_mode   : file.mode || 'local',\n                file_path   : file.path,\n                file_data   : file\n            });\n            this.collection.add( new_model );\n            var upload_row = new UploadRow( this, { model: new_model } );\n            this.$( '.upload-table > tbody:first' ).append( upload_row.$el );\n            this._updateScreen();\n            upload_row.render();\n        },\n\n        /** Progress */\n        _eventProgress: function( index, percentage ) {\n            var it = this.collection.get( index );\n            it.set( 'percentage', percentage );\n            this.ui_button.model.set( 'percentage', this._uploadPercentage( percentage, it.get( 'file_size' ) ) );\n        },\n\n        /** Success */\n        _eventSuccess: function( index, message ) {\n            var it = this.collection.get( index );\n            it.set( { 'percentage': 100, 'status': 'success' } );\n            this.ui_button.model.set( 'percentage', this._uploadPercentage( 100, it.get( 'file_size' ) ) );\n            this.upload_completed += it.get( 'file_size' ) * 100;\n            this.counter.announce--;\n            this.counter.success++;\n            this._updateScreen();\n            Galaxy.currHistoryPanel.refreshContents();\n        },\n\n        /** Error */\n        _eventError: function( index, message ) {\n            var it = this.collection.get( index );\n            it.set( { 'percentage': 100, 'status': 'error', 'info': message } );\n            this.ui_button.model.set( { 'percentage': this._uploadPercentage( 100, it.get( 'file_size' ) ), 'status': 'danger' } );\n            this.upload_completed += it.get( 'file_size' ) * 100;\n            this.counter.announce--;\n            this.counter.error++;\n            this._updateScreen();\n        },\n\n        /** Queue is done */\n        _eventComplete: function() {\n            this.collection.each( function( model ) { model.get( 'status' ) == 'queued' && model.set( 'status', 'init' ) } );\n            this.counter.running = 0;\n            this._updateScreen();\n        },\n\n        /** Remove model from upload list */\n        _eventRemove: function( model ) {\n            var status = model.get( 'status' );\n            if ( status == 'success' ) {\n                this.counter.success--;\n            } else if ( status == 'error' ) {\n                this.counter.error--;\n            } else {\n                this.counter.announce--;\n            }\n            this.uploadbox.remove( model.id );\n            this._updateScreen();\n        },\n\n        //\n        // events triggered by this view\n        //\n\n        /** [public] display extension info popup */\n        showExtensionInfo: function( options ) {\n            var self = this;\n            var $el = options.$el;\n            var extension = options.extension;\n            var title = options.title;\n            var description = _.findWhere( self.list_extensions, { 'id': extension } );\n            this.extension_popup && this.extension_popup.remove();\n            this.extension_popup = new Popover.View({ placement: options.placement || 'bottom', container: $el } );\n            this.extension_popup.title( title );\n            this.extension_popup.empty();\n            this.extension_popup.append( this._templateDescription( description ) );\n            this.extension_popup.show();\n        },\n\n        /** Show/hide ftp popup */\n        _eventFtp: function() {\n            if ( !this.ftp.visible ) {\n                this.ftp.empty();\n                var self = this;\n                this.ftp.append( ( new UploadFtp({\n                    collection      : this.collection,\n                    ftp_upload_site : this.ftp_upload_site,\n                    onadd           : function( ftp_file ) {\n                        self.uploadbox.add([{\n                            mode: 'ftp',\n                            name: ftp_file.path,\n                            size: ftp_file.size,\n                            path: ftp_file.path\n                        }]);\n                    },\n                    onremove: function( model_index ) {\n                        self.collection.remove( model_index );\n                    }\n                } ) ).$el );\n                this.ftp.show();\n            } else {\n                this.ftp.hide();\n            }\n        },\n\n        /** Create a new file */\n        _eventCreate: function (){\n            this.uploadbox.add( [ { name: 'New File', size: 0, mode: 'new' } ] );\n        },\n\n        /** Start upload process */\n        _eventStart: function() {\n            if ( this.counter.announce == 0 || this.counter.running > 0 ) {\n                return;\n            }\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each( function( model ) {\n                if( model.get( 'status' ) == 'init' ) {\n                    model.set( 'status', 'queued' );\n                    self.upload_size += model.get( 'file_size' );\n                }\n            });\n            this.ui_button.model.set( { 'percentage': 0, 'status': 'success' } );\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n            this.uploadbox.start();\n            this._updateScreen();\n        },\n\n        /** Pause upload process */\n        _eventStop: function() {\n            if ( this.counter.running > 0 ) {\n                this.ui_button.model.set( 'status', 'info' );\n                $( '.upload-top-info' ).html( 'Queue will pause after completing the current file...' );\n                this.uploadbox.stop();\n            }\n        },\n\n        /** Remove all */\n        _eventReset: function() {\n            if ( this.counter.running == 0 ){\n                this.collection.reset();\n                this.counter.reset();\n                this.uploadbox.reset();\n                this.select_extension.value( this.options.default_extension );\n                this.select_genome.value( this.options.default_genome );\n                this.ui_button.model.set( 'percentage', 0 );\n                this._updateScreen();\n            }\n        },\n\n        /** Update extension for all models */\n        updateExtension: function( extension, defaults_only ) {\n            var self = this;\n            this.collection.each( function( model ) {\n                if ( model.get( 'status' ) == 'init' && ( model.get( 'extension' ) == self.options.default_extension || !defaults_only ) ) {\n                    model.set( 'extension', extension );\n                }\n            });\n        },\n\n        /** Update genome for all models */\n        updateGenome: function( genome, defaults_only ) {\n            var self = this;\n            this.collection.each( function( model ) {\n                if ( model.get( 'status' ) == 'init' && ( model.get( 'genome' ) == self.options.default_genome || !defaults_only ) ) {\n                    model.set( 'genome', genome );\n                }\n            });\n        },\n\n        /** Set screen */\n        _updateScreen: function () {\n            var message = '';\n            if( this.counter.announce == 0 ) {\n                if (this.uploadbox.compatible()) {\n                    message = '&nbsp;';\n                } else {\n                    message = 'Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.';\n                }\n            } else {\n                if ( this.counter.running == 0 ) {\n                    message = 'You added ' + this.counter.announce + ' file(s) to the queue. Add more files or click \\'Start\\' to proceed.';\n                } else {\n                    message = 'Please wait...' + this.counter.announce + ' out of ' + this.counter.running + ' remaining.';\n                }\n            }\n            this.$( '.upload-top-info' ).html( message );\n            var enable_reset = this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n            var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n            var enable_sources = this.counter.running == 0;\n            var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n            this.btnReset[ enable_reset ? 'enable' : 'disable' ]();\n            this.btnStart[ enable_start ? 'enable' : 'disable' ]();\n            this.btnStart.$el[ enable_start ? 'addClass' : 'removeClass' ]( 'btn-primary' );\n            this.btnStop[ this.counter.running > 0 ? 'enable' : 'disable' ]();\n            this.btnLocal[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnFtp[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnCreate[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnFtp.$el[ this.ftp_upload_site ? 'show' : 'hide' ]();\n            this.$( '.upload-table' )[ show_table ? 'show' : 'hide' ]();\n            this.$( '.upload-helper' )[ show_table ? 'hide' : 'show' ]();\n        },\n\n        /** Calculate percentage of all queued uploads */\n        _uploadPercentage: function( percentage, size ) {\n            return ( this.upload_completed + ( percentage * size ) ) / this.upload_size;\n        },\n\n        /** Template for extensions description */\n        _templateDescription: function( options ) {\n            if ( options.description ) {\n                var tmpl = options.description;\n                if ( options.description_url ) {\n                    tmpl += '&nbsp;(<a href=\"' + options.description_url + '\" target=\"_blank\">read more</a>)';\n                }\n                return tmpl;\n            } else {\n                return 'There is no description available for this file extension.';\n            }\n        },\n\n        /** Template */\n        _template: function() {\n            return  '<div class=\"upload-view-default\">' +\n                        '<div class=\"upload-top\">' +\n                            '<h6 class=\"upload-top-info\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-box\">' +\n                            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n                            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n                                '<thead>' +\n                                    '<tr>' +\n                                        '<th>Name</th>' +\n                                        '<th>Size</th>' +\n                                        '<th>Type</th>' +\n                                        '<th>Genome</th>' +\n                                        '<th>Settings</th>' +\n                                        '<th>Status</th>' +\n                                        '<th/>' +\n                                    '</tr>' +\n                                '</thead>' +\n                                '<tbody/>' +\n                            '</table>' +\n                        '</div>' +\n                        '<div class=\"upload-footer\">' +\n                            '<span class=\"upload-footer-title\">Type (set all):</span>' +\n                            '<span class=\"upload-footer-extension\"/>' +\n                            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n                            '<span class=\"upload-footer-title\">Genome (set all):</span>' +\n                            '<span class=\"upload-footer-genome\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-buttons\"/>' +\n                    '</div>';\n        }\n    });\n});\n"]}