{"version":3,"sources":["mvc/upload/default/default-view.js"],"names":["Backbone","View","extend","upload_size","collection","_uploadModel2","default","Collection","counter","announce","success","error","running","reset","this","initialize","app","self","options","list_extensions","list_genomes","ui_button","currentFtp","_template","$","_uiMisc2","Button","id","title","onclick","uploadbox","select","icon","btnFtp","ftp_upload_site","btnCreate","$uploadbox","btnLocal","_eventStop","modal","hide","btnStop","btnReset","btnStart","prepend","button","$el","nginx_upload_path","index","file","_eventAnnounce","toData","get","history_id","percentage","message","_eventSuccess","progress","_eventProgress","_eventError","complete","_eventComplete","ondragleave","container","select_extension","_uiSelect2","data","_","filter","ext","composite_files","value","default_extension","onchange","extension","e","_changeExtension","text","list","placement","target","select_genome","css","preventDefault","default_genome","genome","_changeGenome","new_content","model","upload_row","_defaultRow2","$container","$uploadtable","find","append","render","_eventRemove","compatible","enable_reset","html","enable_start","enable_sources","show_table","file_size","file_mode","file_path","Model","file_data","file_name","name","size","add","new_model","path","it","set","Galaxy","currHistoryPanel","status","upload_completed","info","each","_eventFtp","ftp","empty","onremove","onadd","show","ftp_file","mode","model_index","remove","_eventCreate","_eventStart","_uploadFtp","_eventReset","start","stop","defaults_only","url","_uploadPercentage","push","length","uploadpost"],"mappings":"gfAWeA,SAASC,KAAKC,QAEzBC,YAAa,EAGbC,WAAY,IAAIC,EAAAC,QAAYC,WAG5BC,SACIC,SAAU,EACVC,QAAS,EACTC,MAAO,EACPC,QAAS,EACTC,MAAO,WACHC,KAAKL,SAAWK,KAAKJ,QAAUI,KAAKH,MAAQG,KAAKF,QAAU,IAInEG,WAAY,SAASC,GACjB,IAAIC,EAAOH,KACXA,KAAKE,IAAMA,EAnBfF,KAAAI,QAAAF,EAAAE,QACAf,KAAAA,gBAFgCa,EAAAG,gBAuB5BL,KAAKM,aAAeJ,EAAII,aAnB5BN,KAAAO,UAAAL,EAAAK,UACAjB,KAAAA,gBAAgBY,EAAAM,aAGhBd,KAAAA,WAASM,KAAAS,aACLd,KAAAA,WADKK,KAAAU,EAAA,eAELd,KAAAA,aAFKI,KAAAU,EAAA,iBAKLX,KAAAA,SAAO,IAAAY,EAAAnB,QAAAoB,QACHC,GAAA,YACHC,MAAA,oBAf2BC,QAAA,WAqCpBZ,EAAKa,UAAUC,UAlBvBC,KAAIf,iBAEJH,KAAAmB,OAAKf,IAALO,EAAAnB,QAAeU,QACfW,GAAA,UACAC,MAAKR,kBACLS,QAAKR,WACLJ,EAAKiB,aAELF,KAAA,wBAEAlB,KAAAqB,UAAKC,IAALX,EAAAnB,QAAkBoB,QAClBC,GAAA,UAqBIC,MAAO,mBAnBXC,QAAA,WACAZ,EAAKoB,gBAEDT,KAAAA,eAEIX,KAAAA,SAAAA,IAAKa,EAAAA,QAAAA,QACRH,GAAA,YACDK,MAAAA,QAN0BH,QAA9B,WAQAZ,EAAKgB,iBAGDJ,KAAAA,QAAAA,IAASJ,EAAAnB,QAAAoB,QACLT,GAAAA,WACHW,MALuB,QAMxBI,QAAAA,WANJf,EAAAqB,gBAUIV,KAAAA,SAAO,IAAAH,EAAAnB,QAAAoB,QACPG,GAAAA,YACIZ,MAAAA,QACHY,QAL0B,WAM3BG,EAAAA,iBAGAL,KAAAA,SAAI,IAAAF,EAAAnB,QADsBoB,QAE1BE,GAAAA,YACAC,MAAAA,QACIZ,QAAAA,WACHA,EAAAD,IAAAuB,MAAAC,UAGDb,EAAAA,MAEAE,KAAAA,SACIZ,KAAAA,OACHH,KAAAqB,UALLrB,KAAA2B,QAOA3B,KAAK4B,SACDf,KAAIgB,SACJf,KAAAA,UAEIX,SAAAA,GACHA,EAAAO,EAAA,mBAAAoB,QAAAC,EAAAC,OAKDjB,KAAAA,UAASf,KAAAsB,WAAAN,WACLb,IAAAA,KAAAA,IAAKD,QAAL+B,kBACHtC,SAAA,SAAAuC,EAAAC,GALLhC,EAAAiC,eAAAF,EAAAC,IAkBQhC,WAAO,SAAA+B,GAXf,OAAA/B,EAAAD,IAAAmC,QAuBalC,EAAKb,WAAWgD,IAAIJ,IARjC/B,EAAAoC,aAGI5C,SAAAA,SAAUuC,EAAAM,GACNrC,EAAAA,eAAKiC,EAAeF,IAExBjC,QAAAA,SAAYiC,EAAAO,GACRtC,EAAAuC,cAAOR,EAAAO,IAKXE,MAAAA,SAAUT,EAAAO,GACNtC,EAAAA,YAAKyC,EAAeV,IAExBtC,SAAAA,WACIO,EAAAA,kBAEJN,WAAO,WACHM,EAAAA,WAAK0C,SAAYX,cAErBY,YAAAA,WACI3C,EAAAA,WAAK4C,YAAL,gBAKJC,KAAAA,IAAAA,IAAAA,EAAAA,QAAa7D,MACTgB,MAAAA,YACH8C,UAAAjD,KAAAmB,OAAAa,MAILhC,KAAAkD,iBAAe,IAAAC,EAAA3D,QAAAL,MACX2B,IAAAA,0BACAmC,UAAAA,KAAWvC,EAAA,4BAFa0C,KAA5BC,EAAAC,OAAAtD,KAAAK,gBAAA,SAAAkD,GAAA,OAAAA,EAAAC,kBAUIC,MAAOzD,KAAKI,QAAQsD,kBALxBC,SAAA,SAAAC,GACAzD,EAAK+C,iBAAmBU,MAGiB5D,KAAAU,EAAA,iCACrC+C,GAAAA,QAAO,SAAAI,GACPF,IAAAA,EAAAA,SACIxD,IAAK2D,EAAAA,EAAAA,QACRhD,MAAAX,EAAA+C,iBAAAa,OAPLH,UAAAzD,EAAA+C,iBAAAO,QAiBYO,KAAM7D,EAAKE,gBAPvB4D,UAAA,UAIYjC,GAAAA,YAASkC,SAAAA,GACTpD,EAAAA,mBAFgBd,KAAAmE,cAApB,IAAAhB,EAAA3D,QAAAL,MAOHiF,IATL,0BAWQP,UAAEQ,KAAAA,EAAAA,yBACLjB,KAZLpD,KAAAM,aAmBImD,MAAOzD,KAAKI,QAAQkE,eALxBX,SAAA,SAAAY,GACApE,EAAKgE,cAAgBI,MAKjBZ,KAAAA,OAAAA,IAAAA,EAAAA,SACIxD,WAAAA,KAAKqE,WACRlF,WAAAU,KAAAV,WAPgCmF,YAArC,SAAAC,GAeQ,IAAIC,EAAa,IAAAC,EAAApF,QAAcW,GAAQuE,MAAOA,IAHlDG,OAFJ1E,EAAA2E,aAAAC,KAAA,iBAAAC,OAAAL,EAAA3C,KACA2C,EAAcM,SACVJ,KAKIF,KAAAA,WAAAA,GAAAA,SAAA,SAAAD,GACAvE,EAAA+E,aAAOP,KAPe3E,KAAhBiF,UAYdA,OAAA,WACI9E,IAAAA,EAAK+E,GA7LmBzC,EA4L5B,GAECzC,KAFDN,QAAAC,SAGAK,KAAKiF,UAALE,aA/L4B,SAmMxB1C,mGAGI,GAAAA,KAAAA,QAAAA,QACHA,aAAMzC,KAAAN,QACH+C,SADH,qEAHLA,iBAOOzC,KAAAN,QAAAC,SAPP,WAOOK,KACCN,QAAKA,QARb,cAYQ+C,KAAAA,EAAAA,oBAAAA,KAAAA,GAEH,IAAA2C,EACJ,GAAApF,KAAAN,QAAAI,SACDE,KAAKU,QAAEf,SAAAK,KAAoBqF,QAAK5C,QAAhCzC,KAAAN,QAAAG,MACIuF,EAIJE,EAEqB,GAArBtF,KAAIuF,QAAAA,SAAsB7F,KAAQI,QAAbH,SAArB,EACA4F,EAC4B,GAAxBvF,KAAKN,QAAQC,QAEjB6F,EACAxF,KAAK6B,QAALlC,SAAc2F,KAAe5F,QAAfE,QAA0BI,KAAxCN,QAAAG,MACA,EAGAG,KAAA4B,SAAKD,EAAQ,SAAuB,aACpC3B,KAAA6B,SAAKN,EAASgE,SAAiB,aAC/BvF,KAAA6B,SAAKV,IAAOoE,EAAiB,WAAW,eACxC,eAEAvF,KAAA2B,QAAO3B,KAAAN,QAAPI,QAAwB0F,EAAAA,SAAsB,aAC9CxF,KAAAuB,SAAOgE,EAAkBC,SAAa,aACzCxF,KA3O+BmB,OAAAoE,EAAA,SAAA,aAuO5BvF,KAAKqB,UAAUkE,EAAiB,SAAW,aAM/CvF,KAAAmB,OAAAa,IAAAhC,KAAAoB,gBAAA,OAAA,UACAgB,KAAAA,EAAAA,iBAAgBoD,EAAA,OAAA,UACZxF,KAAAU,EAAA,kBAAA8E,EAAA,OAAA,WAIIC,eAAAA,SAAWtD,EAHuBA,GAIlCuD,KAAAA,QAAAA,WACAC,IAAAA,EAAAA,IAAWxD,EAAAA,QALuByD,OAMlCC,GAAAA,EANkCC,UAAtC3D,EAAA4D,KAQAN,UAAAtD,EAAA6D,KACAN,UAAKpG,EAAW2G,MAAIC,QAzPQP,UAAAxD,EAAAgE,KAsPxBN,UAAW1D,IAOnBS,KAAAA,SACI5C,KAAAV,WAAS2G,IAAK3G,IADlBsD,eAAgB,SAASV,EAAOM,GAShC,IAAA4D,EAAApG,KAAAV,WAAAgD,IAAAJ,GACAQ,EAAAA,IAAAA,aAAeF,GACXxC,KAAAO,UAASmE,MAAKpF,IACd8G,aACApG,KAAKO,kBAAgB8F,EACjBD,EADJ9D,IAEI,gBAMJgE,cAAOC,SAAAA,EAAP9D,GACH,IAnR+B2D,EAAApG,KAAAV,WAAAgD,IAAAJ,GAyQ5BkE,EAAGC,KAAM7D,WAAY,IAAKgE,OAAQ,YAYtCxG,KAAAO,UAAAmE,MAAA2B,IACAxD,aACI7C,KAAIoG,kBAAU9G,IAAL8G,EAAoBlE,IAA7B,eAEAlC,KAAAyG,kBAAyB,IAAJJ,EAArB/D,IAAyB,aACrBE,KAAAA,QAAAA,WACAgE,KAAAA,QAAAA,UAFqBxG,KAAzBiF,SAIAqB,OAAAC,iBAAKE,mBAIR5D,YAjS+B,SAAAX,EAAAO,GAuR5B,IAAI2D,EAAKpG,KAAKV,WAAWgD,IAAIJ,GAYjCkE,EAAAC,KAAA7D,WAAA,IAAAgE,OAAA,QAAAE,KAAAjE,IACAM,KAAAA,UAAAA,MAAgBsD,KACZ7D,WAAKlD,KAAWqH,kBAAK,IAASP,EAAA9D,IAAA,cAC1BoC,OAAAA,WAEJ1E,KAAAyG,kBAAA,IAAAL,EAAA9D,IAAA,aACAtC,KAAAN,QAAKuF,WACRjF,KA1S+BN,QAAAG,QAgS5BG,KAAKiF,UAeLlC,eAAIyD,WACAxG,KAAAV,WAAKI,KAAQE,SAAAA,GACI,UAApB8E,EAFDpC,IAEO,WAAuBoC,EAAA2B,IAAA,SAAA,UAE7BrG,KAFMN,QAEAI,QAAA,EACHE,KAAAiF,UAIPC,aAxT+B,SAAAR,GA8S5B,IAAI8B,EAAS9B,EAAMpC,IAAI,UAY3B,WAAAkE,EACAxG,KAAAN,QAAAE,UACA,SAAA4G,EAVQxG,KAAKN,QAAQG,QAarB+G,KAAAA,QAAWjH,WAEHK,KAAAgB,UAAK6F,OAALnC,EAAA7D,IACAb,KAAAiF,UAUoBe,UAAAA,WACAG,GAAAA,KAAAA,IAAAA,QA0BpBnG,KAAA6G,IAAKJ,WA1BeN,CAJJnG,KAAA6G,IAAAC,QAOP,IAAA3G,EAZSH,KAaV+G,KAAAA,IAAAA,OACI5G,IAAAA,EAAAA,SACHb,WAAAU,KAAAV,WACF0C,gBAjBPhC,KAAAoB,gBAmBA4F,MAASC,SAATC,GACG,OAAA/G,EAAAa,UAAAiF,MAENkB,KAAA,MAzV2BpB,KAAAmB,EAAAf,KA4UJH,KAAMkB,EAASlB,KAgB3CG,KAAAe,EAAAf,SAXgBY,SAAU,SAASK,GAgBnCjH,EAAAb,WAAA+H,OAAAD,MAEQpF,KAEAhC,KAAA6G,IAAI1G,SAOCmH,aAAA,WACJtH,KAAAgB,UALDiF,MAAAF,KAAA,WAAAC,KAAA,EAAAmB,KAAA,UAMyBI,YAAzB,WAIA,GAAA,GAAAvH,KAAAN,QAAKA,UAAL,GAAuBM,KAAKN,QAAQC,QAApC,CAbA,IAAIQ,EAAOH,KAgBXA,KAAAX,YAAA,EACAW,KAAAyG,iBAAA,EAdAzG,KAAKV,WAAWqH,KAAK,SAAAjC,GAgBrB,QAAAA,EAAApC,IAAA,YACAoC,EAAK1D,IAAL,SAAA,UACAb,EAAK8E,aAALP,EAAApC,IAAA,gBAZAtC,KAAKO,UAAUmE,MAAM2B,KAgB7B7D,WAAA,EACAhB,OAAY,YAEJxB,KAAAN,QAAKa,QAAUmE,KAAfhF,QAAyBC,SACzBe,KAAAA,WAAEV,KAAAE,IAAoBmF,iBAlYErF,KAAAwH,aA0YhCC,KAAAA,UAAaC,QACT1H,KAAIiF,WAKAzD,WAAA,WACAxB,KAAAN,QAAKyE,QAAcV,IACnBzD,KAAAO,UAAKA,MAAUmE,IAAM2B,SAAI,QACzB3F,EAAA,oBAAA2E,KACH,yDAfGrF,KAAKgB,UAAU2G,SAsBfF,YAAA,WAKI/C,GAAU,GAAVA,KAAAA,QAAAA,QAAU,CAEjB1E,KARDV,WAAAS,QA1Z4BC,KAAAN,QAAAK,QA+YxBC,KAAKgB,UAAUjB,QAsBvBC,KAAAkD,iBAAAO,MAAAzD,KAAAI,QAAAsD,mBACAc,KAAAA,cAAef,MAAAzD,KAAAI,QAASmE,gBACpBvE,KAAIG,UAAJuE,MAAA2B,IAAA,aAAA,GACArG,KAAKV,WASRwE,iBAjb+B,SAAAF,EAAAgE,GAyZ5B,IAAIzH,EAAOH,KA0BfA,KAAAV,WAAAqH,KAAA,SAAAjC,GAEI,QAAIvE,EAAAA,IAAO,WACP6D,EAAO1B,IAAX,cAAAnC,EAAAC,QAAAsD,mBACKpE,GAKGa,EAAAA,IAAKa,YAAUqG,MAMfjE,cAAAA,SAAMmB,EAASlC,GACfwF,IAAAA,EAAAA,KACAjI,KAAAA,WAAAA,KAAS,SAAA8E,GAEIhC,QAALvC,EAAAA,IAAAA,WACHuE,EAAApC,IAFD,WAAAnC,EAAAC,QAAAkE,gBAJKsD,GASLvE,EAAAA,IAAEsD,SAAFpC,MAMfiD,WAhd+B,WAqb5B,IAAIrH,EAAOH,KA6BfgE,KACA8D,KAAAA,WAAAA,KAAmB,SAAApD,GAnda,UAAAA,EAAApC,IAAA,WA0bM,OAA1BoC,EAAMpC,IAAI,eA8BtB7B,EAAWO,UAAAqG,OAAA3C,EAAW7D,IAClBmD,EACI+D,KAAArD,MA1BAV,EAAKgE,OAAS,GACdtH,EAAEuH,YACE7E,KAAMpD,KAAKE,IAAImC,OAAO2B,GACtB6D,IAAK7H,KAAKE,IAAIE,QAAQ6B,kBACtBrC,QAAS,SAAS6C,GACdY,EAAEsD,KAAK3C,EAAM,SAAAU,GACTvE,EAAKuC,cAAcgC,EAAM7D,OAGjChB,MAAO,SAAS4C,GACZY,EAAEsD,KAAK3C,EAAM,SAAAU,GACTvE,EAAK0C,YAAY6B,EAAM7D,GAAI4B,SAQ/CqF,kBAAmB,SAAStF,EAAYwD,GACpC,OAAQhG,KAAKyG,iBAAmBjE,EAAawD,GAAQhG,KAAKX,aAI9DoB,UAAW,WACP,MACI","file":"../../../../scripts/mvc/upload/default/default-view.js","sourcesContent":["/** Renders contents of the default uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/default/default-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LazyLimited from \"mvc/lazy/lazy-limited\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n\n        // build template\n        this.setElement(this._template());\n        this.$uploadbox = this.$(\".upload-box\");\n        this.$uploadtable = this.$(\".upload-table\");\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: \"Choose local file\",\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP file\",\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [\n                this.btnLocal,\n                this.btnFtp,\n                this.btnCreate,\n                this.btnStop,\n                this.btnReset,\n                this.btnStart,\n                this.btnClose\n            ],\n            button => {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$uploadbox.uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData(\n                    [self.collection.get(index)],\n                    self.history_id\n                );\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$uploadbox.addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$uploadbox.removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, ext => !ext.composite_files),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self._changeExtension(extension);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", e => {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self._changeGenome(genome);\n            }\n        });\n\n        // Lazy load helper\n        this.loader = new LazyLimited({\n            $container: this.$uploadbox,\n            collection: this.collection,\n            new_content: function(model) {\n                var upload_row = new UploadRow(self, { model: model });\n                self.$uploadtable.find(\"> tbody:first\").append(upload_row.$el);\n                upload_row.render();\n                return upload_row;\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", model => {\n            self._eventRemove(model);\n        });\n        this.render();\n    },\n\n    render: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message = `You added ${this.counter\n                    .announce} file(s) to the queue. Add more files or click 'Start' to proceed.`;\n            } else {\n                message = `Please wait...${this.counter.announce} out of ${this\n                    .counter.running} remaining.`;\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 &&\n            this.counter.announce + this.counter.success + this.counter.error >\n                0;\n        var enable_start =\n            this.counter.running == 0 && this.counter.announce > 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table =\n            this.counter.announce + this.counter.success + this.counter.error >\n            0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\n            \"btn-primary\"\n        );\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file\n        });\n        this.render();\n        this.collection.add(new_model);\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(percentage, it.get(\"file_size\"))\n        );\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\" });\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(100, it.get(\"file_size\"))\n        );\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this.render();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this.render();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(model => {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this.render();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this.render();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce != 0 && this.counter.running == 0) {\n            // prepare upload process\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each(model => {\n                if (model.get(\"status\") == \"init\") {\n                    model.set(\"status\", \"queued\");\n                    self.upload_size += model.get(\"file_size\");\n                }\n            });\n            this.ui_button.model.set({\n                percentage: 0,\n                status: \"success\"\n            });\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n\n            // package ftp files separately, and remove them from queue\n            this._uploadFtp();\n\n            // queue remaining files\n            this.uploadbox.start();\n            this.render();\n        }\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\n                \"Queue will pause after completing the current file...\"\n            );\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            var self = this;\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this.render();\n        }\n    },\n\n    /** Update extension for all models */\n    _changeExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension ||\n                    !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update genome for all models */\n    _changeGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome ||\n                    !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Package and upload ftp files in a single request */\n    _uploadFtp: function() {\n        var self = this;\n        var list = [];\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"queued\" &&\n                model.get(\"file_mode\") == \"ftp\"\n            ) {\n                self.uploadbox.remove(model.id);\n                list.push(model);\n            }\n        });\n        if (list.length > 0) {\n            $.uploadpost({\n                data: this.app.toData(list),\n                url: this.app.options.nginx_upload_path,\n                success: function(message) {\n                    _.each(list, model => {\n                        self._eventSuccess(model.id);\n                    });\n                },\n                error: function(message) {\n                    _.each(list, model => {\n                        self._eventError(model.id, message);\n                    });\n                }\n            });\n        }\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Type</th>\" +\n            \"<th>Genome</th>\" +\n            \"<th>Settings</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title\">Type (set all):</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n"]}