{"version":3,"sources":["mvc/upload/default/default-view.js"],"names":["define","Utils","UploadModel","UploadRow","UploadFtp","UploadExtension","Popover","Select","Ui","LazyLimited","Backbone","View","extend","upload_size","collection","Collection","counter","announce","success","error","running","this","initialize","app","self","list_extensions","list_genomes","options","ui_button","ftp_upload_site","_template","$uploadbox","$","$uploadtable","Button","id","title","onclick","uploadbox","select","icon","btnFtp","_eventFtp","btnCreate","_eventCreate","btnLocal","_eventStart","_eventStop","btnReset","_eventReset","modal","hide","btnStop","btnStart","btnClose","button","prepend","$el","nginx_upload_path","index","file","_eventAnnounce","get","history_id","percentage","_eventProgress","message","_eventSuccess","_eventError","_eventComplete","ondragover","addClass","ondragleave","container","select_extension","css","url","_","filter","ext","composite_files","onchange","extension","_changeExtension","progress","e","target","text","value","list","on","preventDefault","select_genome","data","default_genome","removeClass","_changeGenome","genome","loader","$container","new_content","model","find","append","upload_row","render","_eventRemove","compatible","html","enable_start","enable_sources","show_table","new_model","Model","file_name","name","file_mode","mode","file_path","path","file_data","add","it","set","_uploadPercentage","status","enable_reset","Galaxy","info","each","file_size","ftp","empty","currHistoryPanel","ftp_file","upload_completed","size","onremove","model_index","remove","currentHistory","onadd","reset","default_extension","defaults_only","_uploadFtp","stop","length","uploadpost","toData"],"mappings":"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","file":"../../../../scripts/mvc/upload/default/default-view.js","sourcesContent":["/** Renders contents of the default uploader */\ndefine([ 'utils/utils', 'mvc/upload/upload-model', 'mvc/upload/default/default-row', 'mvc/upload/upload-ftp', 'mvc/upload/upload-extension', 'mvc/ui/ui-popover', 'mvc/ui/ui-select', 'mvc/ui/ui-misc', 'mvc/lazy/lazy-limited', 'utils/uploadbox'],\nfunction( Utils, UploadModel, UploadRow, UploadFtp, UploadExtension, Popover, Select, Ui, LazyLimited ) {\n\n    return Backbone.View.extend({\n        // current upload size in bytes\n        upload_size: 0,\n\n        // contains upload row models\n        collection : new UploadModel.Collection(),\n\n        // keeps track of the current uploader state\n        counter : {\n            announce    : 0,\n            success     : 0,\n            error       : 0,\n            running     : 0,\n            reset       : function() { this.announce = this.success = this.error = this.running = 0 }\n        },\n\n        initialize : function( app ) {\n            var self = this;\n            this.app                = app;\n            this.options            = app.options;\n            this.list_extensions    = app.list_extensions;\n            this.list_genomes       = app.list_genomes;\n            this.ui_button          = app.ui_button;\n            this.ftp_upload_site    = app.currentFtp();\n\n            // build template\n            this.setElement( this._template() );\n            this.$uploadbox         = this.$( '.upload-box' );\n            this.$uploadtable       = this.$( '.upload-table' );\n\n            // append buttons to dom\n            this.btnLocal    = new Ui.Button( { id: 'btn-local', title: 'Choose local file',   onclick: function() { self.uploadbox.select() }, icon: 'fa fa-laptop' } );\n            this.btnFtp      = new Ui.Button( { id: 'btn-ftp',   title: 'Choose FTP file',     onclick: function() { self._eventFtp() }, icon: 'fa fa-folder-open-o' } );\n            this.btnCreate   = new Ui.Button( { id: 'btn-new',   title: 'Paste/Fetch data',    onclick: function() { self._eventCreate() }, icon: 'fa fa-edit' } );\n            this.btnStart    = new Ui.Button( { id: 'btn-start', title: 'Start',               onclick: function() { self._eventStart() } } );\n            this.btnStop     = new Ui.Button( { id: 'btn-stop',  title: 'Pause',               onclick: function() { self._eventStop() } } );\n            this.btnReset    = new Ui.Button( { id: 'btn-reset', title: 'Reset',               onclick: function() { self._eventReset() } } );\n            this.btnClose    = new Ui.Button( { id: 'btn-close', title: 'Close',               onclick: function() { self.app.modal.hide() } } );\n            _.each( [ this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnClose ], function( button ) {\n                self.$( '.upload-buttons' ).prepend( button.$el );\n            });\n\n            // file upload\n            this.uploadbox = this.$uploadbox.uploadbox({\n                url             : this.app.options.nginx_upload_path,\n                announce        : function( index, file )       { self._eventAnnounce( index, file ) },\n                initialize      : function( index )             { return self.app.toData( [ self.collection.get( index ) ], self.history_id ) },\n                progress        : function( index, percentage ) { self._eventProgress( index, percentage ) },\n                success         : function( index, message )    { self._eventSuccess( index, message ) },\n                error           : function( index, message )    { self._eventError( index, message ) },\n                complete        : function()                    { self._eventComplete() },\n                ondragover      : function()                    { self.$uploadbox.addClass( 'highlight' ) },\n                ondragleave     : function()                    { self.$uploadbox.removeClass( 'highlight' ) }\n            });\n\n            // add ftp file viewer\n            this.ftp = new Popover.View( { title: 'FTP files', container: this.btnFtp.$el } );\n\n            // select extension\n            this.select_extension = new Select.View({\n                css         : 'upload-footer-selection',\n                container   : this.$( '.upload-footer-extension' ),\n                data        : _.filter( this.list_extensions, function( ext ) { return !ext.composite_files } ),\n                value       : this.options.default_extension,\n                onchange    : function( extension ) { self._changeExtension( extension ) }\n            });\n\n            // handle extension info popover\n            this.$( '.upload-footer-extension-info' ).on( 'click', function( e ) {\n                new UploadExtension({\n                    $el         : $( e.target ),\n                    title       : self.select_extension.text(),\n                    extension   : self.select_extension.value(),\n                    list        : self.list_extensions,\n                    placement   : 'top'\n                });\n            }).on( 'mousedown', function( e ) { e.preventDefault() } );\n\n            // genome extension\n            this.select_genome = new Select.View({\n                css         : 'upload-footer-selection',\n                container   : this.$( '.upload-footer-genome' ),\n                data        : this.list_genomes,\n                value       : this.options.default_genome,\n                onchange    : function( genome ) { self._changeGenome(genome) }\n            });\n\n            // Lazy load helper\n            this.loader = new LazyLimited({\n                $container  : this.$uploadbox,\n                collection  : this.collection,\n                new_content : function( model ) {\n                    var upload_row = new UploadRow( self, { model: model } )\n                    self.$uploadtable.find( '> tbody:first' ).append( upload_row.$el );\n                    upload_row.render();\n                    return upload_row;\n                }\n            });\n\n            // events\n            this.collection.on( 'remove', function( model ) { self._eventRemove( model ) } );\n            this.render();\n        },\n\n        render: function () {\n            var message = '';\n            if( this.counter.announce == 0 ) {\n                if (this.uploadbox.compatible()) {\n                    message = '&nbsp;';\n                } else {\n                    message = 'Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.';\n                }\n            } else {\n                if ( this.counter.running == 0 ) {\n                    message = 'You added ' + this.counter.announce + ' file(s) to the queue. Add more files or click \\'Start\\' to proceed.';\n                } else {\n                    message = 'Please wait...' + this.counter.announce + ' out of ' + this.counter.running + ' remaining.';\n                }\n            }\n            this.$( '.upload-top-info' ).html( message );\n            var enable_reset = this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n            var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n            var enable_sources = this.counter.running == 0;\n            var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n            this.btnReset[ enable_reset ? 'enable' : 'disable' ]();\n            this.btnStart[ enable_start ? 'enable' : 'disable' ]();\n            this.btnStart.$el[ enable_start ? 'addClass' : 'removeClass' ]( 'btn-primary' );\n            this.btnStop[ this.counter.running > 0 ? 'enable' : 'disable' ]();\n            this.btnLocal[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnFtp[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnCreate[ enable_sources ? 'enable' : 'disable' ]();\n            this.btnFtp.$el[ this.ftp_upload_site ? 'show' : 'hide' ]();\n            this.$( '.upload-table' )[ show_table ? 'show' : 'hide' ]();\n            this.$( '.upload-helper' )[ show_table ? 'hide' : 'show' ]();\n        },\n\n        /** A new file has been dropped/selected through the uploadbox plugin */\n        _eventAnnounce: function( index, file ) {\n            this.counter.announce++;\n            var new_model = new UploadModel.Model({\n                id          : index,\n                file_name   : file.name,\n                file_size   : file.size,\n                file_mode   : file.mode || 'local',\n                file_path   : file.path,\n                file_data   : file\n            });\n            this.render();\n            this.collection.add( new_model );\n        },\n\n        /** Progress */\n        _eventProgress: function( index, percentage ) {\n            var it = this.collection.get( index );\n            it.set( 'percentage', percentage );\n            this.ui_button.model.set( 'percentage', this._uploadPercentage( percentage, it.get( 'file_size' ) ) );\n        },\n\n        /** Success */\n        _eventSuccess: function( index, message ) {\n            var it = this.collection.get( index );\n            it.set( { 'percentage': 100, 'status': 'success' } );\n            this.ui_button.model.set( 'percentage', this._uploadPercentage( 100, it.get( 'file_size' ) ) );\n            this.upload_completed += it.get( 'file_size' ) * 100;\n            this.counter.announce--;\n            this.counter.success++;\n            this.render();\n            Galaxy.currHistoryPanel.refreshContents();\n        },\n\n        /** Error */\n        _eventError: function( index, message ) {\n            var it = this.collection.get( index );\n            it.set( { 'percentage': 100, 'status': 'error', 'info': message } );\n            this.ui_button.model.set( { 'percentage': this._uploadPercentage( 100, it.get( 'file_size' ) ), 'status': 'danger' } );\n            this.upload_completed += it.get( 'file_size' ) * 100;\n            this.counter.announce--;\n            this.counter.error++;\n            this.render();\n        },\n\n        /** Queue is done */\n        _eventComplete: function() {\n            this.collection.each( function( model ) { model.get( 'status' ) == 'queued' && model.set( 'status', 'init' ) } );\n            this.counter.running = 0;\n            this.render();\n        },\n\n        /** Remove model from upload list */\n        _eventRemove: function( model ) {\n            var status = model.get( 'status' );\n            if ( status == 'success' ) {\n                this.counter.success--;\n            } else if ( status == 'error' ) {\n                this.counter.error--;\n            } else {\n                this.counter.announce--;\n            }\n            this.uploadbox.remove( model.id );\n            this.render();\n        },\n\n        //\n        // events triggered by this view\n        //\n\n        /** Show/hide ftp popup */\n        _eventFtp: function() {\n            if ( !this.ftp.visible ) {\n                this.ftp.empty();\n                var self = this;\n                this.ftp.append( ( new UploadFtp({\n                    collection      : this.collection,\n                    ftp_upload_site : this.ftp_upload_site,\n                    onadd           : function( ftp_file ) {\n                        return self.uploadbox.add([{\n                            mode: 'ftp',\n                            name: ftp_file.path,\n                            size: ftp_file.size,\n                            path: ftp_file.path\n                        }]);\n                    },\n                    onremove: function( model_index ) {\n                        self.collection.remove( model_index );\n                    }\n                } ) ).$el );\n                this.ftp.show();\n            } else {\n                this.ftp.hide();\n            }\n        },\n\n        /** Create a new file */\n        _eventCreate: function (){\n            this.uploadbox.add( [ { name: 'New File', size: 0, mode: 'new' } ] );\n        },\n\n        /** Start upload process */\n        _eventStart: function() {\n            if ( this.counter.announce != 0 && this.counter.running == 0 ) {\n                // prepare upload process\n                var self = this;\n                this.upload_size = 0;\n                this.upload_completed = 0;\n                this.collection.each( function( model ) {\n                    if( model.get( 'status' ) == 'init' ) {\n                        model.set( 'status', 'queued' );\n                        self.upload_size += model.get( 'file_size' );\n                    }\n                });\n                this.ui_button.model.set( { 'percentage': 0, 'status': 'success' } );\n                this.counter.running = this.counter.announce;\n                this.history_id = this.app.currentHistory();\n\n                // package ftp files separately, and remove them from queue\n                this._uploadFtp();\n\n                // queue remaining files\n                this.uploadbox.start();\n                this.render();\n            }\n        },\n\n        /** Pause upload process */\n        _eventStop: function() {\n            if ( this.counter.running > 0 ) {\n                this.ui_button.model.set( 'status', 'info' );\n                $( '.upload-top-info' ).html( 'Queue will pause after completing the current file...' );\n                this.uploadbox.stop();\n            }\n        },\n\n        /** Remove all */\n        _eventReset: function() {\n            if ( this.counter.running == 0 ){\n                var self = this;\n                this.collection.reset();\n                this.counter.reset();\n                this.uploadbox.reset();\n                this.select_extension.value( this.options.default_extension );\n                this.select_genome.value( this.options.default_genome );\n                this.ui_button.model.set( 'percentage', 0 );\n                this.render();\n            }\n        },\n\n        /** Update extension for all models */\n        _changeExtension: function( extension, defaults_only ) {\n            var self = this;\n            this.collection.each( function( model ) {\n                if ( model.get( 'status' ) == 'init' && ( model.get( 'extension' ) == self.options.default_extension || !defaults_only ) ) {\n                    model.set( 'extension', extension );\n                }\n            });\n        },\n\n        /** Update genome for all models */\n        _changeGenome: function( genome, defaults_only ) {\n            var self = this;\n            this.collection.each( function( model ) {\n                if ( model.get( 'status' ) == 'init' && ( model.get( 'genome' ) == self.options.default_genome || !defaults_only ) ) {\n                    model.set( 'genome', genome );\n                }\n            });\n        },\n\n        /** Package and upload ftp files in a single request */\n        _uploadFtp: function() {\n            var self = this;\n            var list = [];\n            this.collection.each( function( model ) {\n                if( model.get( 'status' ) == 'queued' && model.get( 'file_mode' ) == 'ftp' ) {\n                    self.uploadbox.remove( model.id );\n                    list.push( model );\n                }\n            });\n            if(list.length > 0) {\n                $.uploadpost({\n                    data     : this.app.toData( list ),\n                    url      : this.app.options.nginx_upload_path,\n                    success  : function( message ) { _.each( list, function( model ) { self._eventSuccess( model.id ) } ) },\n                    error    : function( message ) { _.each( list, function( model ) { self._eventError( model.id, message ) } ) }\n                });\n            }\n        },\n\n        /** Calculate percentage of all queued uploads */\n        _uploadPercentage: function( percentage, size ) {\n            return ( this.upload_completed + ( percentage * size ) ) / this.upload_size;\n        },\n\n        /** Template */\n        _template: function() {\n            return  '<div class=\"upload-view-default\">' +\n                        '<div class=\"upload-top\">' +\n                            '<h6 class=\"upload-top-info\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-box\">' +\n                            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n                            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n                                '<thead>' +\n                                    '<tr>' +\n                                        '<th>Name</th>' +\n                                        '<th>Size</th>' +\n                                        '<th>Type</th>' +\n                                        '<th>Genome</th>' +\n                                        '<th>Settings</th>' +\n                                        '<th>Status</th>' +\n                                        '<th/>' +\n                                    '</tr>' +\n                                '</thead>' +\n                                '<tbody/>' +\n                            '</table>' +\n                        '</div>' +\n                        '<div class=\"upload-footer\">' +\n                            '<span class=\"upload-footer-title\">Type (set all):</span>' +\n                            '<span class=\"upload-footer-extension\"/>' +\n                            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n                            '<span class=\"upload-footer-title\">Genome (set all):</span>' +\n                            '<span class=\"upload-footer-genome\"/>' +\n                        '</div>' +\n                        '<div class=\"upload-buttons\"/>' +\n                    '</div>';\n        }\n    });\n});\n"]}