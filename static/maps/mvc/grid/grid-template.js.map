{"version":3,"sources":["mvc/grid/grid-template.js"],"names":["define","Utils","grid","options","tmpl","embedded","grid_header","this","grid_table","info_text","show_popup","title","global_actions","length","i","action","target","url_args","label","insert","grid_filters","show_item_checkboxes","items","columns","num_rows_rendered","items_length","column","key","href","extra","item","nowrap","encoded_id","encode_id","current_item_id","column_settings","value","id","cls","j","visible","link","column_config","operations","replace","attach_popup","use_paging","num_pages","cur_page_num","min_page","page_link_range","label_id_prefix","min_offset","footer","max_offset","max_range","max_page","num_page_links","page_index","operation","allow_multiple","found_global","default_filter_dict","filters","show_advanced_search_link","filterable","global_operation","d_key","legend","message","status","advanced_search_display","column_key","f_key","grid_column_filter","standard_search_display","column_label","filter_element","toLowerCase","size","is_text","url","temp_column","filter_value","seperator","JSON","stringify","cf_arg","column_filter","type","jQuery","filter","params","slice","cf_label","categorical_filters","cf","cf_key","filter_key","sanitize"],"mappings":"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","file":"../../../scripts/mvc/grid/grid-template.js","sourcesContent":["// dependencies\ndefine(['utils/utils'], function(Utils) {\n\n// grid view templates\nreturn {\n    // template\n    grid: function(options) {\n        var tmpl = '';\n        if (options.embedded) {\n            tmpl = this.grid_header(options) + this.grid_table(options);\n        } else {\n            tmpl = '<div class=\"loading-elt-overlay\"></div>' +\n                    '<table>' +\n                        '<tr>' +\n                            '<td width=\"75%\">' +\n                                this.grid_header(options) +\n                            '</td>' +\n                            '<td></td>' +\n                            '<td></td>' +\n                        '</tr>' +\n                        '<tr>' +\n                            '<td width=\"100%\" id=\"grid-message\" valign=\"top\"></td>' +\n                            '<td></td>' +\n                            '<td></td>' +\n                        '</tr>' +\n                    '</table>' +\n                    this.grid_table(options);\n        }\n       \n        // add info text\n        if (options.info_text) {\n            tmpl += '<br><div class=\"toolParamHelp\" style=\"clear: both;\">' + options.info_text + '</div>';\n        }\n       \n        // return\n        return tmpl;\n    },\n    \n    // template\n    grid_table: function(options) {\n        return  '<form method=\"post\" onsubmit=\"return false;\">' +\n                    '<table id=\"grid-table\" class=\"grid\">' +\n                        '<thead id=\"grid-table-header\"></thead>' +\n                        '<tbody id=\"grid-table-body\"></tbody>' +\n                        '<tfoot id=\"grid-table-footer\"></tfoot>' +\n                    '</table>' +\n                '</form>';\n    },\n    \n    // template\n    grid_header: function(options) {\n        var tmpl =  '<div class=\"grid-header\">';\n        if (!options.embedded) {\n            tmpl +=     '<h2>' + options.title + '</h2>';\n        }\n        if (options.global_actions) {\n            tmpl +=     '<ul class=\"manage-table-actions\">';\n            var show_popup = (options.global_actions.length >= 3);\n            if (show_popup) {\n                tmpl +=     '<li><a class=\"action-button\" id=\"popup-global-actions\" class=\"menubutton\">Actions</a></li>' +\n                            '<div popupmenu=\"popup-global-actions\">';\n            }\n            for (i in options.global_actions) {\n                var action = options.global_actions[i];\n                tmpl +=         '<li>' +\n                                    '<a class=\"action-button use-target\" target=\"' + action.target + '\" href=\"' + action.url_args + '\" onclick=\"return false;\" >' + action.label + '</a>' +\n                                '</li>';\n            }\n            if (show_popup) {\n                tmpl +=     '</div>';\n            }\n            tmpl +=     '</ul>';\n        }\n        if (options.insert) {\n            tmpl +=     options.insert;\n        }\n       \n        // add grid filters\n        tmpl +=     this.grid_filters(options);\n        tmpl += '</div>'\n        \n        // return template\n        return tmpl;\n    },\n\n    // template\n    header: function(options) {\n        \n        // start\n        var tmpl =      '<tr>';\n        \n        // add checkbox\n        if (options.show_item_checkboxes) {\n            tmpl +=         '<th>';\n            if (options.items.length > 0) {\n                tmpl +=         '<input type=\"checkbox\" id=\"check_all\" name=select_all_checkbox value=\"true\">' +\n                                '<input type=\"hidden\" name=select_all_checkbox value=\"true\">';\n            }\n            tmpl +=         '</th>';\n        }\n        \n        // create header elements\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.visible) {\n                tmpl +=     '<th id=\"' + column.key + '-header\">';\n                if (column.href) {\n                    tmpl +=     '<a href=\"' + column.href + '\" class=\"sort-link\" sort_key=\"' + column.key + '\">' + column.label + '</a>';\n                } else {\n                    tmpl +=     column.label;\n                }\n                tmpl +=         '<span class=\"sort-arrow\">' + column.extra + '</span>' +\n                            '</th>';\n            }\n        }\n        \n        // finalize\n        tmpl +=        '</tr>';\n        \n        // return template\n        return tmpl;\n    },\n    \n    // template\n    body: function(options) {\n        // initialize\n        var tmpl = '';\n        var num_rows_rendered = 0;\n        var items_length = options.items.length;\n        \n        // empty grid?\n        if (items_length == 0) {\n            // No results.\n            tmpl += '<tr><td colspan=\"100\"><em>No Items</em></td></tr>';\n            num_rows_rendered = 1;\n        }\n        \n        // create rows\n        for (var i in options.items) {\n        \n            // encode ids\n            var item = options.items[i];\n            var encoded_id = item.encode_id;\n            var popupmenu_id = 'grid-' + i + '-popup';\n            \n            // Tag current\n            tmpl += '<tr ';\n            if (options.current_item_id == item.id) {\n                tmpl += 'class=\"current\"';\n            }\n            tmpl += '>';\n            \n            // Item selection column\n            if (options.show_item_checkboxes) {\n                tmpl += '<td style=\"width: 1.5em;\">' +\n                            '<input type=\"checkbox\" name=\"id\" value=\"' + encoded_id + '\" id=\"' + encoded_id + '\" class=\"grid-row-select-checkbox\" />' +\n                        '</td>';\n            }\n            \n            // Data columns\n            for (j in options.columns) {\n                var column = options.columns[j];\n                if (column.visible) {\n                    // Nowrap\n                    var nowrap = '';\n                    if (column.nowrap) {\n                        nowrap = 'style=\"white-space:nowrap;\"';\n                    }\n                    \n                    // get column settings\n                    var column_settings = item.column_config[column.label];\n                    \n                    // load attributes\n                    var link = column_settings.link;\n                    var value = column_settings.value;\n                    var target = column_settings.target;\n                        \n                    // unescape value\n                    if (jQuery.type( value ) === 'string') {\n                        value = value.replace(/\\/\\//g, '/');\n                    }\n                    \n                    // Attach popup menu?\n                    var id = '';\n                    var cls = '';\n                    if (column.attach_popup) {\n                        id = 'grid-' + i + '-popup';\n                        cls = 'menubutton';\n                        if (link != '') {\n                            cls += ' split';\n                        }\n                        cls += ' popup';\n                    }\n                    \n                    // Check for row wrapping\n                    tmpl += '<td ' + nowrap + '>';\n                \n                    // Link\n                    if (link) {\n                        if (options.operations.length != 0) {\n                            tmpl += '<div id=\"' + id + '\" class=\"' + cls + '\" style=\"float: left;\">';\n                        }\n                        tmpl += '<a class=\"menubutton-label use-target\" target=\"' + target + '\" href=\"' + link + '\" onclick=\"return false;\">' + value + '</a>';\n                        if (options.operations.length != 0) {\n                            tmpl += '</div>';\n                        }\n                    } else {\n                        tmpl += '<div id=\"' + id + '\" class=\"' + cls + '\"><label id=\"' + column.label_id_prefix + encoded_id + '\" for=\"' + encoded_id + '\">' + (value || '') + '</label></div>';\n                    }\n                    tmpl += '</td>';\n                }\n            }\n            tmpl += '</tr>';\n            num_rows_rendered++;\n        }\n        return tmpl;\n    },\n\n    // template\n    footer: function(options) {\n    \n        // create template string\n        var tmpl = '';\n        \n        // paging\n        if (options.use_paging && options.num_pages > 1) {\n            // get configuration\n            var num_page_links      = options.num_page_links;\n            var cur_page_num        = options.cur_page_num;\n            var num_pages           = options.num_pages;\n            \n            // First pass on min page.\n            var page_link_range     = num_page_links / 2;\n            var min_page            = cur_page_num - page_link_range\n            var min_offset          = 0;\n            if (min_page <= 0) {\n                // Min page is too low.\n                min_page = 1;\n                min_offset = page_link_range - ( cur_page_num - min_page );\n            }\n            \n            // Set max page.\n            var max_range = page_link_range + min_offset;\n            var max_page = cur_page_num + max_range;\n            if (max_page <= num_pages) {\n                // Max page is fine.\n                max_offset = 0;\n            } else {\n                // Max page is too high.\n                max_page = num_pages;\n                // +1 to account for the +1 in the loop below.\n                max_offset = max_range - ( max_page + 1 - cur_page_num );\n            }\n            \n            // Second and final pass on min page to add any unused\n            // offset from max to min.\n            if (max_offset != 0) {\n                min_page -= max_offset\n                if (min_page < 1) {\n                    min_page = 1\n                }\n            }\n            \n            // template header\n            tmpl += '<tr id=\"page-links-row\">';\n            if (options.show_item_checkboxes) {\n                tmpl += '<td></td>';\n            }\n            tmpl +=     '<td colspan=\"100\">' +\n                            '<span id=\"page-link-container\">' +\n                                'Page:';\n            \n            if (min_page > 1) {\n                tmpl +=         '<span class=\"page-link\" id=\"page-link-1\"><a href=\"javascript:void(0);\" page_num=\"1\" onclick=\"return false;\">1</a></span> ...';\n            }\n            \n            // create page urls\n            for (var page_index = min_page; page_index < max_page + 1; page_index++) {\n                \n                if (page_index == options.cur_page_num) {\n                    tmpl +=     '<span class=\"page-link inactive-link\" id=\"page-link-' + page_index + '\">' + page_index + '</span>';\n                } else {\n                    tmpl +=     '<span class=\"page-link\" id=\"page-link-' + page_index + '\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"' + page_index + '\">' + page_index + '</a></span>';\n                }\n            }\n            \n            // show last page\n            if (max_page < num_pages) {\n                    tmpl +=     '...' +\n                                '<span class=\"page-link\" id=\"page-link-' + num_pages + '\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"' + num_pages + '\">' + num_pages + '</a></span>';\n            }\n            tmpl +=         '</span>';\n            \n            // Show all link\n            tmpl +=         '<span class=\"page-link\" id=\"show-all-link-span\"> | <a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"all\">Show All</a></span>' +\n                        '</td>' +\n                    '</tr>';\n        }\n        \n        // Grid operations for multiple items.\n        if (options.show_item_checkboxes) {\n            // start template\n            tmpl += '<tr>' +\n                        '<input type=\"hidden\" id=\"operation\" name=\"operation\" value=\"\">' +\n                        '<td></td>' +\n                        '<td colspan=\"100\">' +\n                            'For <span class=\"grid-selected-count\"></span> selected items: ';\n            \n            // configure buttons for operations\n            for (i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.allow_multiple) {\n                    tmpl += '<input type=\"button\" value=\"' + operation.label + '\" class=\"operation-button action-button\">&nbsp;';\n                }\n            }\n            \n            // finalize template\n            tmpl +=     '</td>' +\n                    '</tr>';\n        }\n    \n        // count global operations\n        var found_global = false;\n        for (i in options.operations) {\n            if (options.operations[i].global_operation) {\n                found_global = true;\n                break;\n            }\n        }\n    \n        // add global operations\n        if (found_global) {\n            tmpl += '<tr>' +\n                        '<td colspan=\"100\">';\n            for (i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.global_operation) {\n                    tmpl += '<a class=\"action-button\" href=\"' + operation.global_operation + '\">' + operation.label + '</a>';\n                }\n            }\n            tmpl +=     '</td>' +\n                    '</tr>';\n        }\n        \n        // add legend\n        if (options.legend) {\n            tmpl += '<tr>' +\n                        '<td colspan=\"100\">' + options.legend + '</td>' +\n                    '</tr>';\n        }\n        \n        // return\n        return tmpl;\n    },\n        \n    // template\n    message: function(options) {\n        return  '<p>' +\n                    '<div class=\"' + options.status + 'message transient-message\">' + options.message + '</div>' +\n                    '<div style=\"clear: both\"></div>' +\n                '</p>';\n    },\n    \n    // template\n    grid_filters: function (options) {\n    \n        // get filters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n\n        // show advanced search if flag set or if there are filters for advanced search fields\n        var advanced_search_display = 'none';\n        if (options.advanced_search) {\n            advanced_search_display = 'block';\n        }\n        \n        // identify columns with advanced filtering\n        var show_advanced_search_link = false;\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == 'advanced') {\n                var column_key = column.key;\n                var f_key = filters[column_key];\n                var d_key = default_filter_dict[column_key];\n                if (f_key && d_key && f_key != d_key) {\n                    advanced_search_display = 'block';\n                }\n                show_advanced_search_link = true;\n            }\n        }\n        \n        // hide standard search if advanced is shown\n        var standard_search_display = 'block';\n        if (advanced_search_display == 'block') {\n            standard_search_display = 'none';\n        }\n\n        //\n        // standard search\n        //\n        var tmpl =  '<div id=\"standard-search\" style=\"display: ' + standard_search_display + ';\">' +\n                        '<table>' +\n                            '<tr>' +\n                                '<td style=\"padding: 0;\">' +\n                                    '<table>';\n        \n        // add standard filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == 'standard') {\n                tmpl +=             this.grid_column_filter(options, column);\n            }\n        }\n        \n        // finalize standard search\n        tmpl +=                     '</table>' +\n                                '</td>' +\n                            '</tr>' +\n                            '<tr>' +\n                                '<td>';\n                \n        // show advanced search link in standard display\n        if (show_advanced_search_link) {\n            tmpl +=                 '<a href=\"\" class=\"advanced-search-toggle\">Advanced Search</a>';\n        }\n        \n        // finalize standard search display\n        tmpl +=                 '</td>' +\n                            '</tr>' +\n                        '</table>' +\n                    '</div>';\n    \n        //\n        // advanced search\n        //\n        tmpl +=     '<div id=\"advanced-search\" style=\"display: ' + advanced_search_display + '; margin-top: 5px; border: 1px solid #ccc;\">' +\n                        '<table>' +\n                            '<tr>' +\n                                '<td style=\"text-align: left\" colspan=\"100\">' +\n                                    '<a href=\"\" class=\"advanced-search-toggle\">Close Advanced Search</a>' +\n                                '</td>' +\n                            '</tr>';\n        \n        // add advanced filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == 'advanced') {\n                tmpl +=             this.grid_column_filter(options, column);\n            }\n        }\n        \n        // finalize advanced search template\n        tmpl +=         '</table>' +\n                    '</div>';\n\n        // return template\n        return tmpl;\n    },\n    \n    // template\n    grid_column_filter: function(options, column) {\n        \n        // collect parameters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n        var column_label = column.label;\n        var column_key = column.key;\n        if (column.filterable == 'advanced') {\n            column_label = column_label.toLowerCase();\n        }\n        \n        // start\n        var tmpl =      '<tr>';\n        \n        if (column.filterable == 'advanced') {\n            tmpl +=         '<td align=\"left\" style=\"padding-left: 10px\">' + column_label + ':</td>';\n        }\n        tmpl +=             '<td style=\"padding-bottom: 1px;\">';\n        if (column.is_text) {\n            tmpl +=             '<form class=\"text-filter-form\" column_key=\"' + column_key + '\" action=\"' + options.url + '\" method=\"get\" >';\n            // Carry forward filtering criteria with hidden inputs.\n            for (i in options.columns) {\n                var temp_column = options.columns[i];\n                var filter_value = filters[temp_column.key];\n                if (filter_value) {\n                    if (filter_value != 'All') {\n                        if (temp_column.is_text) {\n                            filter_value = JSON.stringify( filter_value )\n                        }\n                        tmpl +=     '<input type=\"hidden\" id=\"' + temp_column.key + '\" name=\"f-' + temp_column.key + '\" value=\"' + filter_value + '\"/>';\n                    }\n                }\n            }\n            // Print current filtering criteria and links to delete.\n            tmpl +=                 '<span id=\"' + column_key + '-filtering-criteria\">';\n            \n            // add filters\n            var column_filter = filters[column_key];\n            if (column_filter) {\n                // identify type\n                var type = jQuery.type(column_filter);\n                \n                // single filter value\n                if (type == 'string') {\n                    if (column_filter != 'All') {\n                        // append template\n                        tmpl +=         this.filter_element(column_key, column_filter);\n                    }\n                }\n                \n                // multiple filter values\n                if (type == 'array') {\n                    for (var i in column_filter ) {\n                        // get filter\n                        var filter = column_filter[i];\n                        \n                        // copy filters and remove entry\n                        var params = column_filter;\n                        params = params.slice(i);\n\n                        // append template\n                        tmpl +=         this.filter_element(column_key, filter);\n                    }\n                }\n            }\n            \n            // close span\n            tmpl +=                 '</span>';\n            \n            // Set value, size of search input field. Minimum size is 20 characters.\n            var value = '';\n            if (column.filterable == 'standard') {\n                value = column.label.toLowerCase();\n                var size = value.length;\n                if (size < 20) {\n                    size = 20;\n                }\n                // +4 to account for space after placeholder\n                size = size + 4;\n            }\n            \n            // print input field for column\n            tmpl +=                 '<span class=\"search-box\">' +\n                                        '<input class=\"search-box-input\" id=\"input-' + column_key + '-filter\" name=\"f-' + column_key + '\" type=\"text\" placeholder=\"' + value + '\" size=\"' + size + '\"/>' +\n                                        '<button type=\"submit\" style=\"background: transparent; border: none; padding: 4px; margin: 0px;\">' +\n                                            '<i class=\"fa fa-search\"></i>' +\n                                        '</button>' +\n                                    '</span>' +\n                                '</form>';\n        } else {\n            // filter criteria\n            tmpl +=             '<span id=\"' + column_key + '-filtering-criteria\">';\n            \n            // add category filters\n            var seperator = false;\n            for (cf_label in options.categorical_filters[column_key]) {\n                // get category filter\n                var cf = options.categorical_filters[column_key][cf_label];\n                \n                // each filter will have only a single argument, so get that single argument\n                var cf_key = '';\n                var cf_arg = '';\n                for (key in cf) {\n                    cf_key = key;\n                    cf_arg = cf[key];\n                }\n                \n                // add seperator\n                if (seperator) {\n                    tmpl += ' | ';\n                }\n                seperator = true;\n                \n                // add category\n                var filter = filters[column_key];\n                if (filter && cf[column_key] && filter == cf_arg) {\n                    tmpl +=         '<span class=\"categorical-filter ' + column_key + '-filter current-filter\">' + cf_label + '</span>';\n                } else {\n                    tmpl +=         '<span class=\"categorical-filter ' + column_key + '-filter\">' +\n                                        '<a href=\"javascript:void(0);\" filter_key=\"' + cf_key + '\" filter_val=\"' + cf_arg + '\">' + cf_label + '</a>' +\n                                    '</span>';\n                }\n            }\n            tmpl +=             '</span>';\n        }\n        tmpl +=             '</td>' +\n                        '</tr>';\n        \n        // return template\n        return tmpl;\n    },\n    \n    // template for filter items\n    filter_element: function(filter_key, filter_value) {\n        filter_value = Utils.sanitize(filter_value);\n        return  '<span class=\"text-filter-val\">' + filter_value +\n                    '<a href=\"javascript:void(0);\" filter_key=\"' + filter_key + '\" filter_val=\"' + filter_value + '\">' +\n                        '<i class=\"fa fa-times\" style=\"padding-left: 5px; padding-bottom: 6px;\"/>' +\n                    '</a>' +\n                '</span>';\n\n    }\n};\n\n});"]}