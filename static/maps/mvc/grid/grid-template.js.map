{"version":3,"sources":["mvc/grid/grid-template.js"],"names":["_utils","require","grid","options","tmpl","grid_header","embedded","this","grid_table","info_text","insert","title","global_actions","show_popup","length","i","action","target","url_args","show_item_checkboxes","label","column","visible","grid_filters","columns","num_rows_rendered","key","href","items","encoded_id","popupmenu_id","extra","body","item","attach_popup","cls","current_item_id","id","j","nowrap","column_settings","column_config","link","value","num_page_links","cur_page_num","page_link_range","min_page","min_offset","max_offset","operations","num_pages","max_range","label_id_prefix","page_index","max_page","footer","use_paging","operation","global_operation","found_global","advanced_search_display","show_advanced_search_link","filterable","f_key","d_key","standard_search_display","grid_column_filter","default_filter_dict","column_label","is_text","legend","filter_value","message","column_filter","type","jQuery","status","filters","params","column_key","size","seperator","filter_element","toLowerCase","url","temp_column","JSON","stringify","filter","slice","cf_label","categorical_filters","cf","cf_key","cf_arg","filter_key","_utils2","default","sanitize"],"mappings":"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","file":"../../../scripts/mvc/grid/grid-template.js","sourcesContent":["// dependencies\nimport Utils from \"utils/utils\";\n// grid view templates\nexport default {\n    // template\n    grid: function(options) {\n        var tmpl = \"\";\n        if (options.embedded) {\n            tmpl = this.grid_header(options) + this.grid_table(options);\n        } else {\n            tmpl =\n                '<div class=\"loading-elt-overlay\"></div>' +\n                \"<table>\" +\n                \"<tr>\" +\n                '<td width=\"75%\">' +\n                this.grid_header(options) +\n                \"</td>\" +\n                \"<td></td>\" +\n                \"<td></td>\" +\n                \"</tr>\" +\n                \"<tr>\" +\n                '<td width=\"100%\" id=\"grid-message\" valign=\"top\"></td>' +\n                \"<td></td>\" +\n                \"<td></td>\" +\n                \"</tr>\" +\n                \"</table>\" +\n                this.grid_table(options);\n        }\n\n        // add info text\n        if (options.info_text) {\n            tmpl +=\n                '<br><div class=\"toolParamHelp\" style=\"clear: both;\">' +\n                options.info_text +\n                \"</div>\";\n        }\n\n        // return\n        return tmpl;\n    },\n\n    // template\n    grid_table: function(options) {\n        return (\n            '<form method=\"post\" onsubmit=\"return false;\">' +\n            '<table id=\"grid-table\" class=\"grid\">' +\n            '<thead id=\"grid-table-header\"></thead>' +\n            '<tbody id=\"grid-table-body\"></tbody>' +\n            '<tfoot id=\"grid-table-footer\"></tfoot>' +\n            \"</table>\" +\n            \"</form>\"\n        );\n    },\n\n    // template\n    grid_header: function(options) {\n        var tmpl = '<div class=\"grid-header\">';\n        if (!options.embedded) {\n            tmpl += \"<h2>\" + options.title + \"</h2>\";\n        }\n        if (options.global_actions) {\n            tmpl += '<ul class=\"manage-table-actions\">';\n            var show_popup = options.global_actions.length >= 3;\n            if (show_popup) {\n                tmpl +=\n                    '<li><a class=\"action-button\" id=\"popup-global-actions\" class=\"menubutton\">Actions</a></li>' +\n                    '<div popupmenu=\"popup-global-actions\">';\n            }\n            for (var i in options.global_actions) {\n                var action = options.global_actions[i];\n                tmpl +=\n                    \"<li>\" +\n                    '<a class=\"action-button use-target\" target=\"' +\n                    action.target +\n                    '\" href=\"' +\n                    action.url_args +\n                    '\" onclick=\"return false;\" >' +\n                    action.label +\n                    \"</a>\" +\n                    \"</li>\";\n            }\n            if (show_popup) {\n                tmpl += \"</div>\";\n            }\n            tmpl += \"</ul>\";\n        }\n        if (options.insert) {\n            tmpl += options.insert;\n        }\n\n        // add grid filters\n        tmpl += this.grid_filters(options);\n        tmpl += \"</div>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    header: function(options) {\n        // start\n        var tmpl = \"<tr>\";\n\n        // add checkbox\n        if (options.show_item_checkboxes) {\n            tmpl += \"<th>\";\n            if (options.items.length > 0) {\n                tmpl +=\n                    '<input type=\"checkbox\" id=\"check_all\" name=select_all_checkbox value=\"true\">' +\n                    '<input type=\"hidden\" name=select_all_checkbox value=\"true\">';\n            }\n            tmpl += \"</th>\";\n        }\n\n        // create header elements\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.visible) {\n                tmpl += '<th id=\"' + column.key + '-header\">';\n                if (column.href) {\n                    tmpl +=\n                        '<a href=\"' +\n                        column.href +\n                        '\" class=\"sort-link\" sort_key=\"' +\n                        column.key +\n                        '\">' +\n                        column.label +\n                        \"</a>\";\n                } else {\n                    tmpl += column.label;\n                }\n                tmpl +=\n                    '<span class=\"sort-arrow\">' +\n                    column.extra +\n                    \"</span>\" +\n                    \"</th>\";\n            }\n        }\n\n        // finalize\n        tmpl += \"</tr>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    body: function(options) {\n        // initialize\n        var tmpl = \"\";\n        var num_rows_rendered = 0;\n        var items_length = options.items.length;\n\n        // empty grid?\n        if (items_length == 0) {\n            // No results.\n            tmpl += '<tr><td colspan=\"100\"><em>No Items</em></td></tr>';\n            num_rows_rendered = 1;\n        }\n\n        // create rows\n        for (var i in options.items) {\n            // encode ids\n            var item = options.items[i];\n            var encoded_id = item.encode_id;\n            var popupmenu_id = \"grid-\" + i + \"-popup\";\n\n            // Tag current\n            tmpl += \"<tr \";\n            if (options.current_item_id == item.id) {\n                tmpl += 'class=\"current\"';\n            }\n            tmpl += \">\";\n\n            // Item selection column\n            if (options.show_item_checkboxes) {\n                tmpl +=\n                    '<td style=\"width: 1.5em;\">' +\n                    '<input type=\"checkbox\" name=\"id\" value=\"' +\n                    encoded_id +\n                    '\" id=\"' +\n                    encoded_id +\n                    '\" class=\"grid-row-select-checkbox\" />' +\n                    \"</td>\";\n            }\n\n            // Data columns\n            for (var j in options.columns) {\n                var column = options.columns[j];\n                if (column.visible) {\n                    // Nowrap\n                    var nowrap = \"\";\n                    if (column.nowrap) {\n                        nowrap = 'style=\"white-space:nowrap;\"';\n                    }\n\n                    // get column settings\n                    var column_settings = item.column_config[column.label];\n\n                    // load attributes\n                    var link = column_settings.link;\n                    var value = column_settings.value;\n                    var target = column_settings.target;\n\n                    // unescape value\n                    if (jQuery.type(value) === \"string\") {\n                        value = value.replace(/\\/\\//g, \"/\");\n                    }\n\n                    // Attach popup menu?\n                    var id = \"\";\n                    var cls = \"\";\n                    if (column.attach_popup) {\n                        id = \"grid-\" + i + \"-popup\";\n                        cls = \"menubutton\";\n                        if (link != \"\") {\n                            cls += \" split\";\n                        }\n                        cls += \" popup\";\n                    }\n\n                    // Check for row wrapping\n                    tmpl += \"<td \" + nowrap + \">\";\n\n                    // Link\n                    if (link) {\n                        if (options.operations.length != 0) {\n                            tmpl +=\n                                '<div id=\"' +\n                                id +\n                                '\" class=\"' +\n                                cls +\n                                '\" style=\"float: left;\">';\n                        }\n                        tmpl +=\n                            '<a class=\"menubutton-label use-target\" target=\"' +\n                            target +\n                            '\" href=\"' +\n                            link +\n                            '\" onclick=\"return false;\">' +\n                            value +\n                            \"</a>\";\n                        if (options.operations.length != 0) {\n                            tmpl += \"</div>\";\n                        }\n                    } else {\n                        tmpl +=\n                            '<div id=\"' +\n                            id +\n                            '\" class=\"' +\n                            cls +\n                            '\"><label id=\"' +\n                            column.label_id_prefix +\n                            encoded_id +\n                            '\" for=\"' +\n                            encoded_id +\n                            '\">' +\n                            (value || \"\") +\n                            \"</label></div>\";\n                    }\n                    tmpl += \"</td>\";\n                }\n            }\n            tmpl += \"</tr>\";\n            num_rows_rendered++;\n        }\n        return tmpl;\n    },\n\n    // template\n    footer: function(options) {\n        // create template string\n        var tmpl = \"\";\n\n        // paging\n        if (options.use_paging && options.num_pages > 1) {\n            // get configuration\n            var num_page_links = options.num_page_links;\n            var cur_page_num = options.cur_page_num;\n            var num_pages = options.num_pages;\n\n            // First pass on min page.\n            var page_link_range = num_page_links / 2;\n            var min_page = cur_page_num - page_link_range;\n            var min_offset = 0;\n            if (min_page <= 0) {\n                // Min page is too low.\n                min_page = 1;\n                min_offset = page_link_range - (cur_page_num - min_page);\n            }\n\n            // Set max page.\n            var max_range = page_link_range + min_offset;\n            var max_page = cur_page_num + max_range;\n            var max_offset;\n            if (max_page <= num_pages) {\n                // Max page is fine.\n                max_offset = 0;\n            } else {\n                // Max page is too high.\n                max_page = num_pages;\n                // +1 to account for the +1 in the loop below.\n                max_offset = max_range - (max_page + 1 - cur_page_num);\n            }\n\n            // Second and final pass on min page to add any unused\n            // offset from max to min.\n            if (max_offset != 0) {\n                min_page -= max_offset;\n                if (min_page < 1) {\n                    min_page = 1;\n                }\n            }\n\n            // template header\n            tmpl += '<tr id=\"page-links-row\">';\n            if (options.show_item_checkboxes) {\n                tmpl += \"<td></td>\";\n            }\n            tmpl +=\n                '<td colspan=\"100\">' +\n                '<span id=\"page-link-container\">' +\n                \"Page:\";\n\n            if (min_page > 1) {\n                tmpl +=\n                    '<span class=\"page-link\" id=\"page-link-1\"><a href=\"javascript:void(0);\" page_num=\"1\" onclick=\"return false;\">1</a></span> ...';\n            }\n\n            // create page urls\n            for (\n                var page_index = min_page;\n                page_index < max_page + 1;\n                page_index++\n            ) {\n                if (page_index == options.cur_page_num) {\n                    tmpl +=\n                        '<span class=\"page-link inactive-link\" id=\"page-link-' +\n                        page_index +\n                        '\">' +\n                        page_index +\n                        \"</span>\";\n                } else {\n                    tmpl +=\n                        '<span class=\"page-link\" id=\"page-link-' +\n                        page_index +\n                        '\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"' +\n                        page_index +\n                        '\">' +\n                        page_index +\n                        \"</a></span>\";\n                }\n            }\n\n            // show last page\n            if (max_page < num_pages) {\n                tmpl +=\n                    \"...\" +\n                    '<span class=\"page-link\" id=\"page-link-' +\n                    num_pages +\n                    '\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"' +\n                    num_pages +\n                    '\">' +\n                    num_pages +\n                    \"</a></span>\";\n            }\n            tmpl += \"</span>\";\n\n            // Show all link\n            tmpl +=\n                '<span class=\"page-link\" id=\"show-all-link-span\"> | <a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"all\">Show All</a></span>' +\n                \"</td>\" +\n                \"</tr>\";\n        }\n\n        // Grid operations for multiple items.\n        if (options.show_item_checkboxes) {\n            // start template\n            tmpl +=\n                \"<tr>\" +\n                '<input type=\"hidden\" id=\"operation\" name=\"operation\" value=\"\">' +\n                \"<td></td>\" +\n                '<td colspan=\"100\">' +\n                'For <span class=\"grid-selected-count\"></span> selected items: ';\n\n            // configure buttons for operations\n            for (var i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.allow_multiple) {\n                    tmpl +=\n                        '<input type=\"button\" value=\"' +\n                        operation.label +\n                        '\" class=\"operation-button action-button\">&nbsp;';\n                }\n            }\n\n            // finalize template\n            tmpl += \"</td>\" + \"</tr>\";\n        }\n\n        // count global operations\n        var found_global = false;\n        for (i in options.operations) {\n            if (options.operations[i].global_operation) {\n                found_global = true;\n                break;\n            }\n        }\n\n        // add global operations\n        if (found_global) {\n            tmpl += \"<tr>\" + '<td colspan=\"100\">';\n            for (i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.global_operation) {\n                    tmpl +=\n                        '<a class=\"action-button\" href=\"' +\n                        operation.global_operation +\n                        '\">' +\n                        operation.label +\n                        \"</a>\";\n                }\n            }\n            tmpl += \"</td>\" + \"</tr>\";\n        }\n\n        // add legend\n        if (options.legend) {\n            tmpl +=\n                \"<tr>\" +\n                '<td colspan=\"100\">' +\n                options.legend +\n                \"</td>\" +\n                \"</tr>\";\n        }\n\n        // return\n        return tmpl;\n    },\n\n    // template\n    message: function(options) {\n        var status = options.status == \"success\" ? \"done\" : options.status;\n        return (\n            \"<p>\" +\n            '<div class=\"' +\n            status +\n            'message transient-message\">' +\n            _.escape(options.message) +\n            \"</div>\" +\n            '<div style=\"clear: both\"></div>' +\n            \"</p>\"\n        );\n    },\n\n    // template\n    grid_filters: function(options) {\n        // get filters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n\n        // show advanced search if flag set or if there are filters for advanced search fields\n        var advanced_search_display = \"none\";\n        if (options.advanced_search) {\n            advanced_search_display = \"block\";\n        }\n\n        // identify columns with advanced filtering\n        var show_advanced_search_link = false;\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"advanced\") {\n                var column_key = column.key;\n                var f_key = filters[column_key];\n                var d_key = default_filter_dict[column_key];\n                if (f_key && d_key && f_key != d_key) {\n                    advanced_search_display = \"block\";\n                }\n                show_advanced_search_link = true;\n            }\n        }\n\n        // hide standard search if advanced is shown\n        var standard_search_display = \"block\";\n        if (advanced_search_display == \"block\") {\n            standard_search_display = \"none\";\n        }\n\n        //\n        // standard search\n        //\n        var tmpl =\n            '<div id=\"standard-search\" style=\"display: ' +\n            standard_search_display +\n            ';\">' +\n            \"<table>\" +\n            \"<tr>\" +\n            '<td style=\"padding: 0;\">' +\n            \"<table>\";\n\n        // add standard filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"standard\") {\n                tmpl += this.grid_column_filter(options, column);\n            }\n        }\n\n        // finalize standard search\n        tmpl += \"</table>\" + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td>\";\n\n        // show advanced search link in standard display\n        if (show_advanced_search_link) {\n            tmpl +=\n                '<a href=\"\" class=\"advanced-search-toggle\">Advanced Search</a>';\n        }\n\n        // finalize standard search display\n        tmpl += \"</td>\" + \"</tr>\" + \"</table>\" + \"</div>\";\n\n        //\n        // advanced search\n        //\n        tmpl +=\n            '<div id=\"advanced-search\" style=\"display: ' +\n            advanced_search_display +\n            '; margin-top: 5px; border: 1px solid #ccc;\">' +\n            \"<table>\" +\n            \"<tr>\" +\n            '<td style=\"text-align: left\" colspan=\"100\">' +\n            '<a href=\"\" class=\"advanced-search-toggle\">Close Advanced Search</a>' +\n            \"</td>\" +\n            \"</tr>\";\n\n        // add advanced filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"advanced\") {\n                tmpl += this.grid_column_filter(options, column);\n            }\n        }\n\n        // finalize advanced search template\n        tmpl += \"</table>\" + \"</div>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    grid_column_filter: function(options, column) {\n        // collect parameters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n        var column_label = column.label;\n        var column_key = column.key;\n        if (column.filterable == \"advanced\") {\n            column_label = column_label.toLowerCase();\n        }\n\n        // start\n        var tmpl = \"<tr>\";\n\n        if (column.filterable == \"advanced\") {\n            tmpl +=\n                '<td align=\"left\" style=\"padding-left: 10px\">' +\n                column_label +\n                \":</td>\";\n        }\n        tmpl += '<td style=\"padding-bottom: 1px;\">';\n        if (column.is_text) {\n            tmpl +=\n                '<form class=\"text-filter-form\" column_key=\"' +\n                column_key +\n                '\" action=\"' +\n                options.url +\n                '\" method=\"get\" >';\n            // Carry forward filtering criteria with hidden inputs.\n            for (i in options.columns) {\n                var temp_column = options.columns[i];\n                var filter_value = filters[temp_column.key];\n                if (filter_value) {\n                    if (filter_value != \"All\") {\n                        if (temp_column.is_text) {\n                            filter_value = JSON.stringify(filter_value);\n                        }\n                        tmpl +=\n                            '<input type=\"hidden\" id=\"' +\n                            temp_column.key +\n                            '\" name=\"f-' +\n                            temp_column.key +\n                            '\" value=\"' +\n                            filter_value +\n                            '\"/>';\n                    }\n                }\n            }\n            // Print current filtering criteria and links to delete.\n            tmpl += '<span id=\"' + column_key + '-filtering-criteria\">';\n\n            // add filters\n            var column_filter = filters[column_key];\n            if (column_filter) {\n                // identify type\n                var type = jQuery.type(column_filter);\n\n                // single filter value\n                if (type == \"string\") {\n                    if (column_filter != \"All\") {\n                        // append template\n                        tmpl += this.filter_element(column_key, column_filter);\n                    }\n                }\n\n                // multiple filter values\n                if (type == \"array\") {\n                    for (var i in column_filter) {\n                        // get filter\n                        var filter = column_filter[i];\n\n                        // copy filters and remove entry\n                        var params = column_filter;\n                        params = params.slice(i);\n\n                        // append template\n                        tmpl += this.filter_element(column_key, filter);\n                    }\n                }\n            }\n\n            // close span\n            tmpl += \"</span>\";\n\n            // Set value, size of search input field. Minimum size is 20 characters.\n            var value = \"\";\n            if (column.filterable == \"standard\") {\n                value = column.label.toLowerCase();\n                var size = value.length;\n                if (size < 20) {\n                    size = 20;\n                }\n                // +4 to account for space after placeholder\n                size = size + 4;\n            }\n\n            // print input field for column\n            tmpl +=\n                '<span class=\"search-box\">' +\n                '<input class=\"search-box-input\" id=\"input-' +\n                column_key +\n                '-filter\" name=\"f-' +\n                column_key +\n                '\" type=\"text\" placeholder=\"' +\n                value +\n                '\" size=\"' +\n                size +\n                '\"/>' +\n                '<button type=\"submit\" style=\"background: transparent; border: none; padding: 4px; margin: 0px;\">' +\n                '<i class=\"fa fa-search\"></i>' +\n                \"</button>\" +\n                \"</span>\" +\n                \"</form>\";\n        } else {\n            // filter criteria\n            tmpl += '<span id=\"' + column_key + '-filtering-criteria\">';\n\n            // add category filters\n            var seperator = false;\n            for (var cf_label in options.categorical_filters[column_key]) {\n                // get category filter\n                var cf = options.categorical_filters[column_key][cf_label];\n\n                // each filter will have only a single argument, so get that single argument\n                var cf_key = \"\";\n                var cf_arg = \"\";\n                for (var key in cf) {\n                    cf_key = key;\n                    cf_arg = cf[key];\n                }\n\n                // add seperator\n                if (seperator) {\n                    tmpl += \" | \";\n                }\n                seperator = true;\n\n                // add category\n                var filter = filters[column_key];\n                if (filter && cf[column_key] && filter == cf_arg) {\n                    tmpl +=\n                        '<span class=\"categorical-filter ' +\n                        column_key +\n                        '-filter current-filter\">' +\n                        cf_label +\n                        \"</span>\";\n                } else {\n                    tmpl +=\n                        '<span class=\"categorical-filter ' +\n                        column_key +\n                        '-filter\">' +\n                        '<a href=\"javascript:void(0);\" filter_key=\"' +\n                        cf_key +\n                        '\" filter_val=\"' +\n                        cf_arg +\n                        '\">' +\n                        cf_label +\n                        \"</a>\" +\n                        \"</span>\";\n                }\n            }\n            tmpl += \"</span>\";\n        }\n        tmpl += \"</td>\" + \"</tr>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template for filter items\n    filter_element: function(filter_key, filter_value) {\n        filter_value = Utils.sanitize(filter_value);\n        return (\n            '<span class=\"text-filter-val\">' +\n            filter_value +\n            '<a href=\"javascript:void(0);\" filter_key=\"' +\n            filter_key +\n            '\" filter_val=\"' +\n            filter_value +\n            '\">' +\n            '<i class=\"fa fa-times\" style=\"padding-left: 5px; padding-bottom: 6px;\"/>' +\n            \"</a>\" +\n            \"</span>\"\n        );\n    }\n};\n"]}