{"version":3,"sources":["mvc/ui/ui-color-picker.js"],"names":["define","Utils","Backbone","View","extend","colors","standard","initialize","setElement","options","this","$panel","merge","$view","_template","$value","$","$header","_build","visible","value","$boxes","self","css","trigger","fadeIn","fadeOut","new_val","undefined","_getValue","_templateCheck","html","onchange","rgb","hex","x","parseInt","toString","slice","$content","_content","padding","base","line_def","theme","i","length","label","top","bottom","_templateContent","$label","find","hide","$line","append","$box","_templateBox","color"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-color-picker.js","sourcesContent":["/** Renders the color picker used e.g. in the tool form **/\ndefine(['utils/utils'], function( Utils ) {\n    return Backbone.View.extend({\n        colors: {\n            standard: ['c00000','ff0000','ffc000','ffff00','92d050','00b050','00b0f0','0070c0','002060','7030a0'],\n            base    : ['ffffff','000000','eeece1','1f497d','4f81bd','c0504d','9bbb59','8064a2','4bacc6','f79646'],\n            theme   :[['f2f2f2','7f7f7f','ddd9c3','c6d9f0','dbe5f1','f2dcdb','ebf1dd','e5e0ec','dbeef3','fdeada'],\n                      ['d8d8d8','595959','c4bd97','8db3e2','b8cce4','e5b9b7','d7e3bc','ccc1d9','b7dde8','fbd5b5'],\n                      ['bfbfbf','3f3f3f','938953','548dd4','95b3d7','d99694','c3d69b','b2a2c7','92cddc','fac08f'],\n                      ['a5a5a5','262626','494429','17365d','366092','953734','76923c','5f497a','31859b','e36c09'],\n                      ['7f7f7e','0c0c0c','1d1b10','0f243e','244061','632423','4f6128','3f3151','205867','974806']]\n        },\n\n        initialize : function( options ) {\n            this.options = Utils.merge( options, {} );\n            this.setElement( this._template() );\n            this.$panel = this.$( '.ui-color-picker-panel' );\n            this.$view = this.$( '.ui-color-picker-view' );\n            this.$value = this.$( '.ui-color-picker-value' );\n            this.$header = this.$( '.ui-color-picker-header' );\n            this._build();\n            this.visible = false;\n            this.value( this.options.value );\n            this.$boxes = this.$( '.ui-color-picker-box' );\n            var self = this;\n            this.$boxes.on( 'click', function() {\n                self.value( $( this ).css( 'background-color' ) );\n                self.$header.trigger( 'click' );\n            } );\n            this.$header.on( 'click', function() {\n                self.visible = !self.visible;\n                if ( self.visible ) {\n                    self.$view.fadeIn( 'fast' );\n                } else {\n                    self.$view.fadeOut( 'fast' );\n                }\n            } );\n        },\n\n        /** Get/set value */\n        value : function ( new_val ) {\n            if ( new_val !== undefined && new_val !== null ) {\n                this.$value.css( 'background-color', new_val );\n                this.$( '.ui-color-picker-box' ).empty();\n                this.$( this._getValue() ).html( this._templateCheck() );\n                this.options.onchange && this.options.onchange( new_val );\n            }\n            return this._getValue();\n        },\n\n        /** Get value from dom */\n        _getValue: function() {\n            var rgb = this.$value.css( 'background-color' );\n            rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n            if ( rgb ) {\n                function hex( x ) {\n                    return ( '0' + parseInt( x ).toString( 16 ) ).slice( -2 );\n                }\n                return '#' + hex( rgb[ 1] ) + hex( rgb[ 2 ] ) + hex( rgb[ 3 ] );\n            } else {\n                return null;\n            }\n        },\n\n        /** Build color panel */\n        _build: function() {\n            var $content = this._content({\n                label       : 'Theme Colors',\n                colors      : this.colors.base,\n                padding     : 10\n            });\n            for ( var i in this.colors.theme ) {\n                var line_def = {};\n                if ( i == 0 ) {\n                    line_def[ 'bottom' ] = true;\n                } else {\n                    if ( i != this.colors.theme.length - 1 ) {\n                        line_def[ 'top' ]     = true;\n                        line_def[ 'bottom' ]  = true;\n                    } else {\n                        line_def[ 'top' ]     = true;\n                        line_def[ 'padding' ] = 5;\n                    }\n                }\n                line_def[ 'colors' ] = this.colors.theme[ i ];\n                this._content( line_def );\n            }\n            this._content({\n                label       : 'Standard Colors',\n                colors      : this.colors.standard,\n                padding     : 5\n            });\n        },\n\n        /** Create content */\n        _content: function( options ) {\n            var label       = options.label;\n            var colors      = options.colors;\n            var padding     = options.padding;\n            var top         = options.top;\n            var bottom      = options.bottom;\n            var $content = $( this._templateContent() );\n            var $label = $content.find( '.label' );\n            if ( options.label ) {\n                $label.html( options.label );\n            } else {\n                $label.hide();\n            }\n            var $line = $content.find( '.line' );\n            this.$panel.append( $content );\n            for ( var i in colors ) {\n                var $box = $( this._templateBox( colors[ i ] ) );\n                if ( top ) {\n                    $box.css( 'border-top', 'none' );\n                    $box.css( 'border-top-left-radius', '0px' );\n                    $box.css( 'border-top-right-radius', '0px' );\n                }\n                if ( bottom ) {\n                    $box.css( 'border-bottom', 'none' );\n                    $box.css( 'border-bottom-left-radius', '0px' );\n                    $box.css( 'border-bottom-right-radius', '0px' );\n                }\n                $line.append( $box );\n            }\n            if (padding) {\n                $line.css( 'padding-bottom', padding );\n            }\n            return $content;\n        },\n\n        /** Check icon */\n        _templateCheck: function() {\n            return  '<div class=\"ui-color-picker-check fa fa-check\"/>';\n        },\n\n        /** Content template */\n        _templateContent: function() {\n            return  '<div class=\"ui-color-picker-content\">' +\n                        '<div class=\"label\"/>' +\n                        '<div class=\"line\"/>' +\n                    '</div>';\n        },\n\n        /** Box template */\n        _templateBox: function( color ) {\n            return '<div id=\"' + color + '\" class=\"ui-color-picker-box\" style=\"background-color: #' + color + ';\"/>';\n        },\n\n        /** Main template */\n        _template: function() {\n            return  '<div class=\"ui-color-picker\">' +\n                        '<div class=\"ui-color-picker-header\">' +\n                            '<div class=\"ui-color-picker-value\"/>' +\n                            '<div class=\"ui-color-picker-label\">Select a color</div>' +\n                        '</div>' +\n                        '<div class=\"ui-color-picker-view ui-input\">' +\n                            '<div class=\"ui-color-picker-panel\"/>' +\n                        '</div>'\n                    '</div>';\n        }\n    });\n});"]}