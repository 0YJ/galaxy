{"version":3,"sources":["mvc/ui/ui-color-picker.js"],"names":["define","Utils","Backbone","View","extend","colors","standard","base","theme","initialize","options","this","merge","setElement","_template","$panel","$","$view","$value","$header","_build","visible","value","$boxes","self","on","css","trigger","fadeIn","fadeOut","new_val","undefined","empty","_getValue","html","_templateCheck","onchange","hex","x","parseInt","toString","slice","rgb","match","_content","label","padding","i","line_def","length","top","bottom","$content","_templateContent","$label","find","hide","$line","append","$box","_templateBox","color"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-color-picker.js","sourcesContent":["/** Renders the color picker used e.g. in the tool form **/\ndefine(['utils/utils'], function( Utils ) {\n    return Backbone.View.extend({\n        colors: {\n            standard: ['c00000','ff0000','ffc000','ffff00','92d050','00b050','00b0f0','0070c0','002060','7030a0'],\n            base    : ['ffffff','000000','eeece1','1f497d','4f81bd','c0504d','9bbb59','8064a2','4bacc6','f79646'],\n            theme   :[['f2f2f2','7f7f7f','ddd9c3','c6d9f0','dbe5f1','f2dcdb','ebf1dd','e5e0ec','dbeef3','fdeada'],\n                      ['d8d8d8','595959','c4bd97','8db3e2','b8cce4','e5b9b7','d7e3bc','ccc1d9','b7dde8','fbd5b5'],\n                      ['bfbfbf','3f3f3f','938953','548dd4','95b3d7','d99694','c3d69b','b2a2c7','92cddc','fac08f'],\n                      ['a5a5a5','262626','494429','17365d','366092','953734','76923c','5f497a','31859b','e36c09'],\n                      ['7f7f7e','0c0c0c','1d1b10','0f243e','244061','632423','4f6128','3f3151','205867','974806']]\n        },\n\n        initialize : function( options ) {\n            this.options = Utils.merge( options, {} );\n            this.setElement( this._template() );\n            this.$panel = this.$( '.ui-color-picker-panel' );\n            this.$view = this.$( '.ui-color-picker-view' );\n            this.$value = this.$( '.ui-color-picker-value' );\n            this.$header = this.$( '.ui-color-picker-header' );\n            this._build();\n            this.visible = false;\n            this.value( this.options.value );\n            this.$boxes = this.$( '.ui-color-picker-box' );\n            var self = this;\n            this.$boxes.on( 'click', function() {\n                self.value( $( this ).css( 'background-color' ) );\n                self.$header.trigger( 'click' );\n            } );\n            this.$header.on( 'click', function() {\n                self.visible = !self.visible;\n                if ( self.visible ) {\n                    self.$view.fadeIn( 'fast' );\n                } else {\n                    self.$view.fadeOut( 'fast' );\n                }\n            } );\n        },\n\n        /** Get/set value */\n        value : function ( new_val ) {\n            if ( new_val !== undefined && new_val !== null ) {\n                this.$value.css( 'background-color', new_val );\n                this.$( '.ui-color-picker-box' ).empty();\n                this.$( this._getValue() ).html( this._templateCheck() );\n                this.options.onchange && this.options.onchange( new_val );\n            }\n            return this._getValue();\n        },\n\n        /** Get value from dom */\n        _getValue: function() {\n            var rgb = this.$value.css( 'background-color' );\n            rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n            if ( rgb ) {\n                function hex( x ) {\n                    return ( '0' + parseInt( x ).toString( 16 ) ).slice( -2 );\n                }\n                return '#' + hex( rgb[ 1] ) + hex( rgb[ 2 ] ) + hex( rgb[ 3 ] );\n            } else {\n                return null;\n            }\n        },\n\n        /** Build color panel */\n        _build: function() {\n            var $content = this._content({\n                label       : 'Theme Colors',\n                colors      : this.colors.base,\n                padding     : 10\n            });\n            for ( var i in this.colors.theme ) {\n                var line_def = {};\n                if ( i == 0 ) {\n                    line_def[ 'bottom' ] = true;\n                } else {\n                    if ( i != this.colors.theme.length - 1 ) {\n                        line_def[ 'top' ]     = true;\n                        line_def[ 'bottom' ]  = true;\n                    } else {\n                        line_def[ 'top' ]     = true;\n                        line_def[ 'padding' ] = 5;\n                    }\n                }\n                line_def[ 'colors' ] = this.colors.theme[ i ];\n                this._content( line_def );\n            }\n            this._content({\n                label       : 'Standard Colors',\n                colors      : this.colors.standard,\n                padding     : 5\n            });\n        },\n\n        /** Create content */\n        _content: function( options ) {\n            var label       = options.label;\n            var colors      = options.colors;\n            var padding     = options.padding;\n            var top         = options.top;\n            var bottom      = options.bottom;\n            var $content = $( this._templateContent() );\n            var $label = $content.find( '.label' );\n            if ( options.label ) {\n                $label.html( options.label );\n            } else {\n                $label.hide();\n            }\n            var $line = $content.find( '.line' );\n            this.$panel.append( $content );\n            for ( var i in colors ) {\n                var $box = $( this._templateBox( colors[ i ] ) );\n                if ( top ) {\n                    $box.css( 'border-top', 'none' );\n                    $box.css( 'border-top-left-radius', '0px' );\n                    $box.css( 'border-top-right-radius', '0px' );\n                }\n                if ( bottom ) {\n                    $box.css( 'border-bottom', 'none' );\n                    $box.css( 'border-bottom-left-radius', '0px' );\n                    $box.css( 'border-bottom-right-radius', '0px' );\n                }\n                $line.append( $box );\n            }\n            if (padding) {\n                $line.css( 'padding-bottom', padding );\n            }\n            return $content;\n        },\n\n        /** Check icon */\n        _templateCheck: function() {\n            return  '<div class=\"ui-color-picker-check fa fa-check\"/>';\n        },\n\n        /** Content template */\n        _templateContent: function() {\n            return  '<div class=\"ui-color-picker-content\">' +\n                        '<div class=\"label\"/>' +\n                        '<div class=\"line\"/>' +\n                    '</div>';\n        },\n\n        /** Box template */\n        _templateBox: function( color ) {\n            return '<div id=\"' + color + '\" class=\"ui-color-picker-box\" style=\"background-color: #' + color + ';\"/>';\n        },\n\n        /** Main template */\n        _template: function() {\n            return  '<div class=\"ui-color-picker\">' +\n                        '<div class=\"ui-color-picker-header\">' +\n                            '<div class=\"ui-color-picker-value\"/>' +\n                            '<div class=\"ui-color-picker-label\">Select a color</div>' +\n                        '</div>' +\n                        '<div class=\"ui-color-picker-view ui-input\">' +\n                            '<div class=\"ui-color-picker-panel\"/>' +\n                        '</div>'\n                    '</div>';\n        }\n    });\n});"]}