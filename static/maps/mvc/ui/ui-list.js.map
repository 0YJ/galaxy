{"version":3,"sources":["mvc/ui/ui-list.js"],"names":["define","Utils","Portlet","View","Backbone","extend","initialize","options","self","this","name","multiple","message","Ui","Message","portlet","cls","select","Select","optional","icon","ButtonIcon","tooltip","onclick","id","text","setElement","_template","append","$","button","$el","value","val","undefined","empty","isArray","i","v","v_id","v_name","type","_refresh","lst","each","prop","find","length","add","update","on","remove","addClass","removeClass","status","hide","disable","show","enable","onchange","_templateRow"],"mappings":"kCACAA,QAAQ,cAAe,oBAAqB,kBAAmB,SAC3DC,EAFJC,EACAF,GA0KI,OACIG,KApKAC,SAAAD,KAAAE,QAEIC,WAAA,SAAAC,GACA,IAAIC,EAAOC,KAIXA,KAAAF,QAAAA,EACAE,KAAAC,KAAKC,EAAWJ,MAAQI,UAAxBF,KAAKE,SAAWJ,EAAQI,WAAY,EAGpCF,KAAKG,QAAU,IAAIC,EAAGC,QAGtBL,KAAKM,QAAU,IAAIb,EAAQC,MAAOa,IAAK,uBAGvCP,KAAKQ,OAAS,IAAIJ,EAAGK,OAAOf,MAAOgB,SAAUZ,EAAQY,WAIjDC,KAAAA,OAAM,IAAAP,EAAAQ,YACNC,KAAAA,gBACAC,QAAAA,cAASd,KAAAC,KACLF,QAAAA,WACIgB,EAAAA,KACAd,GAAAA,EAAAA,OAAWO,QAFNP,KAATF,EAAAS,OAAAQ,YASRhB,KAAAiB,WAAOjB,KAAAkB,UAAoBC,IAC3BnB,KAAAoB,EAAA,oBAAOD,OAAoBA,KAAOhB,QAAKG,KACvCN,KAAAoB,EAAA,oBAAOD,OAAmBA,KAAOb,QAAKe,KACtCrB,KAAAoB,EAAA,mBAAOD,OAAmBA,KAAOE,OAAKb,KACzCR,KAtC2BoB,EAAA,mBAAAD,OAAAnB,KAAAQ,OAAAc,MA0CxBC,MAAA,SAAAC,GAEI,QAAAC,IAAAD,EAAaE,CAET,GADJ1B,KAAAM,QAAMqB,QACFP,EAAAO,QAAKH,GACD,IAAA,IAAAI,KAAIC,EAAIL,CACR,IAAAK,EAAIC,EAAAA,GACJA,EAAIC,KACJA,EAAMC,KACOjB,UAATe,EAAAA,KAAAA,IACAC,EAAAA,EAAAA,GACHA,EAAMF,EAAA5B,MAEN6B,EAAAC,EAAAF,EAEG,MAAAC,GACIf,KAAAA,KACAd,GAAAA,EAFKA,KAAT8B,IAQf/B,KAAAiC,WAGD,IAAAC,KAWA,OAVIA,KAAAA,EAAAA,eAASC,KAAA,WACLpB,EAAAA,MACAd,GAAAA,EAAAA,MAAQmC,KAAF,MAFDnC,KAATmB,EAAApB,MADJqC,KAAA,iBAQQC,WAGR,GAAAJ,EAAAI,OA/EwB,KAkF5BJ,GAIQK,IAAA,SAAAzC,GACI,IAAAC,EAAAC,KAEQe,GADc,IACdA,KAAAA,EAAAA,QAAIjB,EAAQiB,GADE,MAAAuB,OAEdrC,GAAAA,EAAAA,QAAMH,EAAQG,IAL9BD,KA0BOG,QAAAqC,QACHrC,QAAaqC,yBAAOxC,KAAAC,KAAA,IAChBE,OAAAA,eAvBsBF,CAFA,IAAAqB,EADtBF,EAMAE,KAAImB,cACAnB,GAAIoB,EAAJ3B,GACAhB,KAAKkC,EAALhC,QAGAqB,EAAAA,GAAAA,QAAIqB,WACPrB,EAFDoB,SAGApB,EAAImB,aAEHnB,EAAAmB,GAFD,YAAA,WAGAnB,EAAAqB,SAAaxB,uBAEhBG,EAnBDmB,GAmBO,WAAA,WACHnB,EAAAsB,YAAaJ,uBAETK,KAAAA,QAAAA,OAAQvB,GAFQtB,KAApBiC,gBAMJjC,KAAKG,QAAQqC,QAMrBrC,QAAA,QAAAH,KAAAC,KAAA,8BAMAgC,OAAAA,SAAUnC,GACNE,KAAAQ,OAAIgC,OAAO1C,IAIPmC,SAAA,WACAjC,KAAAoB,EAAA,eAAOkB,OAAoBQ,IAC9B9C,KAAAE,UAAAF,KAAAqB,OAAA0B,UACD/C,KAAKF,EAAAA,oBAAoBkD,SAHrBhD,KAAKqB,OAAO4B,SAMpBjD,KAAAoB,EAAA,oBAAA0B,QAEI9C,KAAAF,QACIoD,UAAAlD,KAAAF,QACAoD,YAWRC,UAAAA,SAAcrD,GACV,MAUH,wLAXDqD,aAAc,SAASrD,GACnB,MACI,YACAA,EAAQiB,GACR,6FAGAjB,EAAQG,KACR","file":"../../../scripts/mvc/ui/ui-list.js","sourcesContent":["// dependencies\ndefine([\"utils/utils\", \"mvc/ui/ui-portlet\", \"mvc/ui/ui-misc\"], function(\n    Utils,\n    Portlet,\n    Ui\n) {\n    // ui list element\n    var View = Backbone.View.extend({\n        // create portlet to keep track of selected list elements\n        initialize: function(options) {\n            // link this\n            var self = this;\n\n            // initialize options\n            this.options = options;\n            this.name = options.name || \"element\";\n            this.multiple = options.multiple || false;\n\n            // create message handler\n            this.message = new Ui.Message();\n\n            // create portlet\n            this.portlet = new Portlet.View({ cls: \"ui-portlet-section\" });\n\n            // create select field containing the options which can be inserted into the list\n            this.select = new Ui.Select.View({ optional: options.optional });\n\n            // create insert new list element button\n            this.button = new Ui.ButtonIcon({\n                icon: \"fa fa-sign-in\",\n                tooltip: \"Insert new \" + this.name,\n                onclick: function() {\n                    self.add({\n                        id: self.select.value(),\n                        name: self.select.text()\n                    });\n                }\n            });\n\n            // build main element\n            this.setElement(this._template(options));\n            this.$(\".ui-list-message\").append(this.message.$el);\n            this.$(\".ui-list-portlet\").append(this.portlet.$el);\n            this.$(\".ui-list-button\").append(this.button.$el);\n            this.$(\".ui-list-select\").append(this.select.$el);\n        },\n\n        /** Return/Set currently selected list elements */\n        value: function(val) {\n            // set new value\n            if (val !== undefined) {\n                this.portlet.empty();\n                if ($.isArray(val)) {\n                    for (var i in val) {\n                        var v = val[i];\n                        var v_id = null;\n                        var v_name = null;\n                        if ($.type(v) != \"string\") {\n                            v_id = v.id;\n                            v_name = v.name;\n                        } else {\n                            v_id = v_name = v;\n                        }\n                        if (v_id != null) {\n                            this.add({\n                                id: v_id,\n                                name: v_name\n                            });\n                        }\n                    }\n                }\n                this._refresh();\n            }\n            // get current value\n            var lst = [];\n            this.$(\".ui-list-id\").each(function() {\n                lst.push({\n                    id: $(this).prop(\"id\"),\n                    name: $(this)\n                        .find(\".ui-list-name\")\n                        .html()\n                });\n            });\n            if (lst.length == 0) {\n                return null;\n            }\n            return lst;\n        },\n\n        /** Add row */\n        add: function(options) {\n            var self = this;\n            if (this.$('[id=\"' + options.id + '\"]').length === 0) {\n                if (!Utils.isEmpty(options.id)) {\n                    var $el = $(\n                        this._templateRow({\n                            id: options.id,\n                            name: options.name\n                        })\n                    );\n                    $el.on(\"click\", function() {\n                        $el.remove();\n                        self._refresh();\n                    });\n                    $el.on(\"mouseover\", function() {\n                        $el.addClass(\"portlet-highlight\");\n                    });\n                    $el.on(\"mouseout\", function() {\n                        $el.removeClass(\"portlet-highlight\");\n                    });\n                    this.portlet.append($el);\n                    this._refresh();\n                } else {\n                    this.message.update({\n                        message: \"Please select a valid \" + this.name + \".\",\n                        status: \"danger\"\n                    });\n                }\n            } else {\n                this.message.update({\n                    message: \"This \" + this.name + \" is already in the list.\"\n                });\n            }\n        },\n\n        /** Update available options */\n        update: function(options) {\n            this.select.update(options);\n        },\n\n        /** Refresh view */\n        _refresh: function() {\n            if (this.$(\".ui-list-id\").length > 0) {\n                !this.multiple && this.button.disable();\n                this.$(\".ui-list-portlet\").show();\n            } else {\n                this.button.enable();\n                this.$(\".ui-list-portlet\").hide();\n            }\n            this.options.onchange && this.options.onchange();\n        },\n\n        /** Main Template */\n        _template: function(options) {\n            return (\n                '<div class=\"ui-list\">' +\n                '<div class=\"ui-margin-top\">' +\n                '<span class=\"ui-list-button\"/>' +\n                '<span class=\"ui-list-select\"/>' +\n                \"</div>\" +\n                '<div class=\"ui-list-message\"/>' +\n                '<div class=\"ui-list-portlet\"/>' +\n                \"</div>\"\n            );\n        },\n\n        /** Row Template */\n        _templateRow: function(options) {\n            return (\n                '<div id=\"' +\n                options.id +\n                '\" class=\"ui-list-id\">' +\n                '<span class=\"ui-list-delete fa fa-trash\"/>' +\n                '<span class=\"ui-list-name\">' +\n                options.name +\n                \"</span>\" +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}