{"version":3,"sources":["mvc/ui/ui-list.js"],"names":["define","Utils","Portlet","Ui","View","Backbone","extend","initialize","this","options","name","multiple","message","Message","portlet","cls","select","Select","optional","button","ButtonIcon","icon","floating","tooltip","onclick","self","value","text","setElement","_template","$","append","$el","val","undefined","empty","isArray","v_id","v_name","type","v","add","_refresh","lst","each","id","find","html","length","isEmpty","status","_templateRow","remove","on","addClass","removeClass","update","disable","enable","hide"],"mappings":"YACAA,SAAQ,cAAe,oBAAqB,kBAAmB,SAASC,EAAOC,EAASC,GAuJxF,OACIC,KArJOC,SAASD,KAAKE,QAAzBC,WAAWF,SAASD,GAEhBG,GAAAA,GAAAA,IAKIC,MAAKC,QAAUA,EADfD,KAAAE,KAAAD,EAAAC,MAAA,UACAF,KAAAG,SAAAF,EAAeA,WAAf,EAKAD,KAAKI,QAAU,GAAIT,GAAGU,QAGtBL,KAAKM,QAAU,GAAIZ,GAAQE,MAAOW,IAAK,uBAGvCP,KAAKQ,OAAS,GAAIb,GAAGc,OAAOb,MAAOc,SAAWT,EAAQS,WAGtDV,KAAKW,OAAS,GAAIhB,GAAGiB,YADrBC,KAAA,gBACAC,SAAc,OACVD,QAAc,cADcb,KAAAE,KAE5BY,QAAc,WACdC,EAAAA,KACAC,GAAcC,EAAAT,OAAAU,QACVD,KAASA,EAAAT,OAAAW,YAQjBnB,KAAKoB,WAAWpB,KAAKqB,UAAUpB,IAD/BD,KAAAsB,EAAA,oBAAAC,OAAAvB,KAAAI,QAAAoB,KACAxB,KAAAsB,EAAA,oBAAqBD,OAALrB,KAAeC,QAA/BuB,KACAxB,KAAAsB,EAAA,mBAAOC,OAAoBA,KAAOZ,OAAKP,KACvCJ,KAAAsB,EAAA,mBAAOC,OAAoBA,KAAOf,OAAKF,MAM3CY,MAAO,SAASO,GAAhBP,OAAOQ,KAAPR,EAAgBO,CAEZ,GADAzB,KAAAM,QAAAqB,QACIF,EAAAA,QAAQC,GACR,IAAKpB,GAAAA,KAAQqB,GAAb,CACIL,GAAEM,GAAAA,EAAQH,GACVI,EAAA,KACIC,EAAQL,IACG,WAAXH,EAAAS,KAAIF,IACJA,EAAIC,EAAAA,GACJA,EAAMC,EAAKC,MAEPF,EAAAA,EAAW5B,EAEX2B,MAAAA,GACH7B,KAAAiC,KACGJ,GAAQA,EACR3B,KAAS4B,IAKhB9B,KAAAkC,WAGR,GAAAC,KAIY,OAHbnC,MAAAsB,EAAA,eAAAc,KAAA,WACAD,EAAIA,MACJE,GAAOf,EAAAtB,MAAeoC,KAAK,MACvBD,KAASb,EAAAtB,MAAAsC,KAAA,iBAAAC,WAAT,GAASJ,EAAAK,OADb,KAOIL,GAMRF,IAAK,SAAShC,GADd,GAAAgB,GAAAjB,IACAiC,IAAuB,IAAvBA,KAAKX,EAAA,QAASrB,EAASoC,GAAA,MAAAG,OACnB,GAAIvB,EAAOwB,QAAXxC,EAAAoC,IAkBQrC,KAAAI,QAAK8B,QAAL9B,QAAA,yBAAAJ,KAAAE,KAAA,IAAAwC,OAAA,eAlBR,CACI,GAAAlB,GAAOF,EAAAtB,KAAUC,cACboC,GAAOI,EAAQxC,GACfC,KAAUoB,EAAOqB,OAEbzC,GAAAA,GAAAA,QAAUD,WAFgBuB,EAA9BoB,SAIApB,EAAIqB,aAEA5B,EAAAA,GAAAA,YAAKiB,WACRV,EAHDsB,SAAA,uBAKItB,EAAAA,GAAAA,WAAIsB,WACPtB,EAFDuB,YAAA,uBAIIvB,KAAAA,QAAIuB,OAAAA,GACP/C,KAFDkC,eAOHlC,MAAAI,QAAA4C,QAAA5C,QAAA,QAAAJ,KAAAE,KAAA,8BAOT8C,OAAQ,SAAS/C,GADjBD,KAAAQ,OAAAwC,OAAA/C,IAMAiC,SAAU,WADVlC,KAAAsB,EAAA,eAAAkB,OAAA,IACAN,KAAU/B,UAAAH,KAAAW,OAAWsC,UACjBjD,KAAIsB,EAAA,oBAAsBkB,SAEtBxC,KAAAW,OAAOuC,SACVlD,KAHDsB,EAGO,oBAAA6B,QAEHnD,KAAAC,QAAKqB,UAAEtB,KAAAC,QAAoBkD,YAMnC9B,UAAW,SAASpB,GADpB,MAAA,wLAqBJ0C,aAAO,SAAA1C,GACHL,MAAMA,YAAAA,EAAAA,GAAAA,6FAxJVK,EAAAC,KAAA","file":"../../../scripts/mvc/ui/ui-list.js","sourcesContent":["// dependencies\ndefine(['utils/utils', 'mvc/ui/ui-portlet', 'mvc/ui/ui-misc'], function(Utils, Portlet, Ui) {\n\n// ui list element\nvar View = Backbone.View.extend({\n    // create portlet to keep track of selected list elements\n    initialize : function(options) {\n        // link this\n        var self = this;\n\n        // initialize options\n        this.options = options;\n        this.name = options.name || 'element';\n        this.multiple = options.multiple || false;\n\n        // create message handler\n        this.message = new Ui.Message();\n\n        // create portlet\n        this.portlet = new Portlet.View({ cls: 'ui-portlet-section' });\n\n        // create select field containing the options which can be inserted into the list\n        this.select = new Ui.Select.View({ optional : options.optional });\n\n        // create insert new list element button\n        this.button = new Ui.ButtonIcon({\n            icon        : 'fa fa-sign-in',\n            floating    : 'left',\n            tooltip     : 'Insert new ' + this.name,\n            onclick     : function() {\n                self.add({\n                    id      : self.select.value(),\n                    name    : self.select.text()\n                });\n            }\n        });\n\n        // build main element\n        this.setElement(this._template(options));\n        this.$('.ui-list-message').append(this.message.$el);\n        this.$('.ui-list-portlet').append(this.portlet.$el);\n        this.$('.ui-list-button').append(this.button.$el);\n        this.$('.ui-list-select').append(this.select.$el);\n    },\n\n    /** Return/Set currently selected list elements */\n    value: function(val) {\n        // set new value\n        if (val !== undefined) {\n            this.portlet.empty();\n            if ($.isArray(val)) {\n                for (var i in val) {\n                    var v = val[i];\n                    var v_id = null;\n                    var v_name = null;\n                    if ($.type(v) != 'string') {\n                        v_id = v.id;\n                        v_name = v.name;\n                    } else {\n                        v_id = v_name = v;\n                    }\n                    if (v_id != null) {\n                        this.add({\n                            id      : v_id,\n                            name    : v_name\n                        });\n                    }\n                }\n            }\n            this._refresh();\n        }\n        // get current value\n        var lst = [];\n        this.$('.ui-list-id').each(function() {\n            lst.push({\n                id      : $(this).prop('id'),\n                name    : $(this).find('.ui-list-name').html()\n            });\n        });\n        if (lst.length == 0) {\n            return null;\n        }\n        return lst;\n    },\n\n    /** Add row */\n    add: function(options) {\n        var self = this;\n        if (this.$('[id=\"' + options.id + '\"]').length === 0) {\n            if (!Utils.isEmpty(options.id)) {\n                var $el = $(this._templateRow({\n                    id      : options.id,\n                    name    : options.name\n                }));\n                $el.on('click', function() {\n                    $el.remove();\n                    self._refresh();\n                });\n                $el.on('mouseover', function() {\n                    $el.addClass('portlet-highlight');\n                });\n                $el.on('mouseout', function() {\n                    $el.removeClass('portlet-highlight');\n                });\n                this.portlet.append($el);\n                this._refresh();\n            } else {\n                this.message.update({ message: 'Please select a valid ' + this.name + '.', status: 'danger' });\n            }\n        } else {\n            this.message.update({ message: 'This ' + this.name + ' is already in the list.' });\n        }\n    },\n\n    /** Update available options */\n    update: function(options) {\n        this.select.update(options);\n    },\n\n    /** Refresh view */\n    _refresh: function() {\n        if (this.$('.ui-list-id').length > 0) {\n            !this.multiple && this.button.disable();\n            this.$('.ui-list-portlet').show();\n        } else {\n            this.button.enable();\n            this.$('.ui-list-portlet').hide();\n        }\n        this.options.onchange && this.options.onchange();\n    },\n\n    /** Main Template */\n    _template: function(options) {\n        return  '<div class=\"ui-list\">' +\n                    '<div class=\"ui-margin-top\">' +\n                        '<span class=\"ui-list-button\"/>' +\n                        '<span class=\"ui-list-select\"/>' +\n                    '</div>' +\n                    '<div class=\"ui-list-message\"/>' +\n                    '<div class=\"ui-list-portlet\"/>' +\n                '</div>';\n    },\n\n    /** Row Template */\n    _templateRow: function(options) {\n        return  '<div id=\"' + options.id + '\" class=\"ui-list-id\">' +\n                    '<span class=\"ui-list-delete fa fa-trash\"/>' +\n                    '<span class=\"ui-list-name\">' + options.name + '</span>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n"]}