{"version":3,"sources":["mvc/ui/ui-list.js"],"names":["define","Utils","Portlet","Ui","View","Backbone","extend","initialize","options","self","this","name","multiple","message","Message","portlet","cls","select","Select","optional","button","ButtonIcon","icon","floating","tooltip","onclick","add","id","value","text","setElement","_template","$","append","$el","val","undefined","empty","isArray","i","v","v_id","v_name","type","_refresh","lst","each","push","prop","find","html","length","isEmpty","update","status","_templateRow","on","remove","addClass","removeClass","disable","show","enable","hide","onchange"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-list.js","sourcesContent":["// dependencies\ndefine(['utils/utils', 'mvc/ui/ui-portlet', 'mvc/ui/ui-misc'], function(Utils, Portlet, Ui) {\n\n// ui list element\nvar View = Backbone.View.extend({\n    // create portlet to keep track of selected list elements\n    initialize : function(options) {\n        // link this\n        var self = this;\n\n        // initialize options\n        this.options = options;\n        this.name = options.name || 'element';\n        this.multiple = options.multiple || false;\n\n        // create message handler\n        this.message = new Ui.Message();\n\n        // create portlet\n        this.portlet = new Portlet.View({ cls: 'ui-portlet-section' });\n\n        // create select field containing the options which can be inserted into the list\n        this.select = new Ui.Select.View({ optional : options.optional });\n\n        // create insert new list element button\n        this.button = new Ui.ButtonIcon({\n            icon        : 'fa fa-sign-in',\n            floating    : 'left',\n            tooltip     : 'Insert new ' + this.name,\n            onclick     : function() {\n                self.add({\n                    id      : self.select.value(),\n                    name    : self.select.text()\n                });\n            }\n        });\n\n        // build main element\n        this.setElement(this._template(options));\n        this.$('.ui-list-message').append(this.message.$el);\n        this.$('.ui-list-portlet').append(this.portlet.$el);\n        this.$('.ui-list-button').append(this.button.$el);\n        this.$('.ui-list-select').append(this.select.$el);\n    },\n\n    /** Return/Set currently selected list elements */\n    value: function(val) {\n        // set new value\n        if (val !== undefined) {\n            this.portlet.empty();\n            if ($.isArray(val)) {\n                for (var i in val) {\n                    var v = val[i];\n                    var v_id = null;\n                    var v_name = null;\n                    if ($.type(v) != 'string') {\n                        v_id = v.id;\n                        v_name = v.name;\n                    } else {\n                        v_id = v_name = v;\n                    }\n                    if (v_id != null) {\n                        this.add({\n                            id      : v_id,\n                            name    : v_name\n                        });\n                    }\n                }\n            }\n            this._refresh();\n        }\n        // get current value\n        var lst = [];\n        this.$('.ui-list-id').each(function() {\n            lst.push({\n                id      : $(this).prop('id'),\n                name    : $(this).find('.ui-list-name').html()\n            });\n        });\n        if (lst.length == 0) {\n            return null;\n        }\n        return lst;\n    },\n\n    /** Add row */\n    add: function(options) {\n        var self = this;\n        if (this.$('[id=\"' + options.id + '\"]').length === 0) {\n            if (!Utils.isEmpty(options.id)) {\n                var $el = $(this._templateRow({\n                    id      : options.id,\n                    name    : options.name\n                }));\n                $el.on('click', function() {\n                    $el.remove();\n                    self._refresh();\n                });\n                $el.on('mouseover', function() {\n                    $el.addClass('portlet-highlight');\n                });\n                $el.on('mouseout', function() {\n                    $el.removeClass('portlet-highlight');\n                });\n                this.portlet.append($el);\n                this._refresh();\n            } else {\n                this.message.update({ message: 'Please select a valid ' + this.name + '.', status: 'danger' });\n            }\n        } else {\n            this.message.update({ message: 'This ' + this.name + ' is already in the list.' });\n        }\n    },\n\n    /** Update available options */\n    update: function(options) {\n        this.select.update(options);\n    },\n\n    /** Refresh view */\n    _refresh: function() {\n        if (this.$('.ui-list-id').length > 0) {\n            !this.multiple && this.button.disable();\n            this.$('.ui-list-portlet').show();\n        } else {\n            this.button.enable();\n            this.$('.ui-list-portlet').hide();\n        }\n        this.options.onchange && this.options.onchange();\n    },\n\n    /** Main Template */\n    _template: function(options) {\n        return  '<div class=\"ui-list\">' +\n                    '<div class=\"ui-margin-top\">' +\n                        '<span class=\"ui-list-button\"/>' +\n                        '<span class=\"ui-list-select\"/>' +\n                    '</div>' +\n                    '<div class=\"ui-list-message\"/>' +\n                    '<div class=\"ui-list-portlet\"/>' +\n                '</div>';\n    },\n\n    /** Row Template */\n    _templateRow: function(options) {\n        return  '<div id=\"' + options.id + '\" class=\"ui-list-id\">' +\n                    '<span class=\"ui-list-delete fa fa-trash\"/>' +\n                    '<span class=\"ui-list-name\">' + options.name + '</span>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n"]}