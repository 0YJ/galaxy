{"version":3,"sources":["mvc/ui/ui-slider.js"],"names":["define","Utils","View","Backbone","extend","initialize","options","self","this","merge","id","uid","min","max","step","precise","split","setElement","_template","useslider","$slider","$","slider","on","event","ui","value","css","$text","undefined","pressed","val","e","which","onchange","v","is_workflow","preventDefault","indexOf","_isParameter","new_val","isNaN","Math","String","substring"],"mappings":"AAAAA,QAAS,eAAiB,SAAUC,GAqGpC,OACIC,KArGOC,SAASD,KAAKE,QACrBC,WAAa,SAAUC,GACnB,GAAIC,GAAOC,IACXA,MAAKF,QAAUL,EAAMQ,MAAOH,GACxBI,GAAUT,EAAMU,MAChBC,IAAU,KACVC,IAAU,KACVC,KAAU,KACVC,SAAU,EACVC,MAAU,MAIdR,KAAKS,WAAYT,KAAKU,UAAWV,KAAKF,UAGtCE,KAAKW,UAAiC,OAArBX,KAAKF,QAAQO,KAAqC,OAArBL,KAAKF,QAAQM,KAAgBJ,KAAKF,QAAQO,IAAML,KAAKF,QAAQM,IAGhF,OAAtBJ,KAAKF,QAAQQ,OACdN,KAAKF,QAAQQ,KAAO,EACfN,KAAKF,QAAQS,SAAWP,KAAKW,YAC9BX,KAAKF,QAAQQ,MAASN,KAAKF,QAAQO,IAAML,KAAKF,QAAQM,KAAQJ,KAAKF,QAAQU,QAK9ER,KAAKW,WACNX,KAAKY,QAAUZ,KAAKa,EAAG,WACvBb,KAAKY,QAAQE,OAAQd,KAAKF,SAC1BE,KAAKY,QAAQG,GAAI,QAAS,SAAWC,EAAOC,GACxClB,EAAKmB,MAAOD,EAAGC,UAGnBlB,KAAKa,EAAG,wBAAyBM,IAAK,QAAS,QAInDnB,KAAKoB,MAAQpB,KAAKa,EAAG,aAGEQ,KAAvBrB,KAAKF,QAAQoB,OAAyBlB,KAAKkB,MAAOlB,KAAKF,QAAQoB,MAG/D,IAAII,KACJtB,MAAKoB,MAAML,GAAI,SAAU,WACrBhB,EAAKmB,MAAOL,EAAGb,MAAOuB,SAE1BvB,KAAKoB,MAAML,GAAI,QAAS,SAAUS,GAC9BF,EAAQE,EAAEC,QAAS,EACnB1B,EAAKD,QAAQ4B,UAAY3B,EAAKD,QAAQ4B,SAAUb,EAAGb,MAAOuB,SAE9DvB,KAAKoB,MAAML,GAAI,UAAW,SAAWS,GACjC,GAAIG,GAAIH,EAAEC,KACVH,GAASK,IAAM,EACV5B,EAAKD,QAAQ8B,aAAeN,EAAS,KAAa,IAALK,GAC9C5B,EAAKmB,MAAO,KACZF,MAAMa,kBACS,GAALF,GAAe,GAALA,GAAe,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAaA,GAAK,IAAMA,GAAK,KAAOL,EAAS,KAAYK,GAAK,IAAMA,GAAK,MACjH,KAALA,GAAiB,KAALA,KAAiD,GAAnCd,EAAGb,MAAOuB,MAAMO,QAAS,MAAe/B,EAAKD,QAAQS,UAC1E,KAALoB,GAAiB,KAALA,KAAiD,GAAnCd,EAAGb,MAAOuB,MAAMO,QAAS,MACvD/B,EAAKgC,aAAclB,EAAGb,MAAOuB,QAC7BD,EAAS,KAAQA,EAAS,KAC7BN,MAAMa,oBAOlBX,MAAQ,SAAWc,GAWf,WAViBX,KAAZW,IACgB,OAAZA,GAAgC,KAAZA,GAAmBhC,KAAK+B,aAAcC,KAC3DC,MAAOD,KAAeA,EAAU,GACX,OAArBhC,KAAKF,QAAQO,MAAkB2B,EAAUE,KAAK9B,IAAK4B,EAAShC,KAAKF,QAAQO,MACpD,OAArBL,KAAKF,QAAQM,MAAkB4B,EAAUE,KAAK7B,IAAK2B,EAAShC,KAAKF,QAAQM,OAE7EJ,KAAKY,SAAWZ,KAAKY,QAAQE,OAAQ,QAASkB,GAC9ChC,KAAKoB,MAAMG,IAAKS,GAChBhC,KAAKF,QAAQ4B,UAAY1B,KAAKF,QAAQ4B,SAAUM,IAE7ChC,KAAKoB,MAAMG,OAKtBQ,aAAc,SAAUb,GACpB,MAAOlB,MAAKF,QAAQ8B,aAAqD,MAAtCO,OAAQjB,GAAQkB,UAAW,EAAG,IAKrE1B,UAAW,SAAUZ,GACjB,MAAQ,YAAcA,EAAQI,GAAK","file":"../../../scripts/mvc/ui/ui-slider.js","sourcesContent":["define([ 'utils/utils' ], function( Utils ) {\nvar View = Backbone.View.extend({\n    initialize : function( options ) {\n        var self = this;\n        this.options = Utils.merge( options, {\n            id      : Utils.uid(),\n            min     : null,\n            max     : null,\n            step    : null,\n            precise : false,\n            split   : 10000\n        } );\n\n        // create new element\n        this.setElement( this._template( this.options ) );\n\n        // determine wether to use the slider\n        this.useslider = this.options.max !== null && this.options.min !== null && this.options.max > this.options.min;\n\n        // set default step size\n        if ( this.options.step === null ) {\n            this.options.step = 1.0;\n            if ( this.options.precise && this.useslider ) {\n                this.options.step = ( this.options.max - this.options.min ) / this.options.split;\n            }\n        }\n\n        // create slider if min and max are defined properly\n        if ( this.useslider ) {\n            this.$slider = this.$( '#slider' );\n            this.$slider.slider( this.options );\n            this.$slider.on( 'slide', function ( event, ui ) {\n                self.value( ui.value );\n            });\n        } else {\n            this.$( '.ui-form-slider-text' ).css( 'width', '100%' );\n        }\n\n        // link text input field\n        this.$text = this.$( '#text' );\n\n        // set initial value\n        this.options.value !== undefined && ( this.value( this.options.value ) );\n\n        // add text field event\n        var pressed = [];\n        this.$text.on( 'change', function () {\n            self.value( $( this ).val() );\n        });\n        this.$text.on( 'keyup', function( e ) {\n            pressed[e.which] = false;\n            self.options.onchange && self.options.onchange( $( this ).val() );\n        });\n        this.$text.on( 'keydown', function ( e ) {\n            var v = e.which;\n            pressed[ v ] = true;\n            if ( self.options.is_workflow && pressed[ 16 ] && v == 52 ) {\n                self.value( '$' )\n                event.preventDefault();\n            } else if (!( v == 8 || v == 9 || v == 13 || v == 37 || v == 39 || ( v >= 48 && v <= 57 && !pressed[ 16 ] ) || ( v >= 96 && v <= 105 )\n                || ( ( v == 190 || v == 110 ) && $( this ).val().indexOf( '.' ) == -1 && self.options.precise )\n                || ( ( v == 189 || v == 109 ) && $( this ).val().indexOf( '-' ) == -1 )\n                || self._isParameter( $( this ).val() )\n                || pressed[ 91 ] || pressed[ 17 ] ) ) {\n                event.preventDefault();\n            }\n        });\n    },\n\n    /** Set and Return the current value\n    */\n    value : function ( new_val ) {\n        if ( new_val !== undefined ) {\n            if ( new_val !== null && new_val !== '' && !this._isParameter( new_val ) ) {\n                isNaN( new_val ) && ( new_val = 0 );\n                this.options.max !== null && ( new_val = Math.min( new_val, this.options.max ) );\n                this.options.min !== null && ( new_val = Math.max( new_val, this.options.min ) );\n            }\n            this.$slider && this.$slider.slider( 'value', new_val );\n            this.$text.val( new_val );\n            this.options.onchange && this.options.onchange( new_val );\n        }\n        return this.$text.val();\n    },\n\n    /** Return true if the field contains a workflow parameter i.e. $('name')\n    */\n    _isParameter: function( value ) {\n        return this.options.is_workflow && String( value ).substring( 0, 1 ) === '$';\n    },\n\n    /** Slider template\n    */\n    _template: function( options ) {\n        return  '<div id=\"' + options.id + '\" class=\"ui-form-slider\">' +\n                    '<input id=\"text\" type=\"text\" class=\"ui-form-slider-text\"/>' +\n                    '<div id=\"slider\" class=\"ui-form-slider-element\"/>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View : View\n};\n});"]}