{"version":3,"sources":["mvc/ui/ui-slider.js"],"names":["define","Utils","View","Backbone","extend","options","initialize","merge","id","self","uid","min","max","step","this","setElement","_template","useslider","split","$slider","$","event","ui","slider","css","$text","undefined","value","pressed","on","val","e","which","onchange","v","preventDefault","indexOf","precise","new_val","isNaN","Math","_isParameter","is_workflow","String","substring"],"mappings":"YAAAA,SAAS,eAAiB,SAAUC,GAqGpC,OACIC,KArGOC,SAASD,KAAKE,QADzBJ,WAAS,SAAiBK,GACtBH,GAAAA,GAAOC,IACPG,MAAAA,QAAaL,EAAAM,MAAAF,GACTG,GAAIC,EAAJC,MACAC,IAAKN,KACDG,IAAUP,KACVU,KAAU,KACVC,SAAU,EACVC,MAAU,MAMdC,KAAKC,WAAYD,KAAKE,UAAWF,KAAKT,UAGtCS,KAAKG,UAAiC,OAArBH,KAAKT,QAAQO,KAAqC,OAArBE,KAAKT,QAAQM,KAAgBG,KAAKT,QAAQO,IAAME,KAAKT,QAAQM,IAGhF,OAAtBG,KAAKT,QAAQQ,OADlBC,KAAAT,QAAAQ,KAAA,EACKC,KAAKT,QAAQQ,SAASC,KAAOG,YAC9BH,KAAKT,QAAQQ,MAAOC,KAApBT,QAAAO,IAAAE,KAAAT,QAAAM,KAAAG,KAAAT,QAAAa,QAOCJ,KAAKG,WADVH,KAAAK,QAAAL,KAAAM,EAAA,WACAN,KAAKK,QAAKF,OAAYH,KAAAT,SAClBS,KAAAK,QAAKA,GAAL,QAAuB,SAAvBE,EAAAC,GACAb,EAAKU,MAALG,EAAaC,UAGZT,KAFDM,EAAA,wBAAAI,IAAA,QAAA,QAQJV,KAAKW,MAAQX,KAAKM,EAAG,aAGEM,KAAvBZ,KAAKT,QAAQsB,OAAyBb,KAAKa,MAAOb,KAAKT,QAAQsB,MAG/D,IAAIC,KADJd,MAAAW,MAAAI,GAAA,SAAA,WACApB,EAAImB,MAAAA,EAAUd,MAAdgB,SAEIrB,KAAAA,MAAAA,GAAKkB,QAAU,SAAfI,GACHH,EAFDG,EAAAC,QAAA,EAGAvB,EAAKgB,QAALQ,UAAwBxB,EAAAJ,QAAc4B,SAAAb,EAAAN,MAAAgB,SAElCrB,KAAAA,MAAAA,GAAKJ,UAAQ4B,SAAYxB,GAC5B,GAHDyB,GAAAH,EAAAC,KAIAJ,GAAKH,IAAU,EACXhB,EAAIyB,QAAMF,aAAVJ,EAAA,KAAA,IAAAM,GACAN,EAAAA,MAAA,KACAP,MAAKZ,kBACW,GAAPkB,GAAL,GAAAO,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAAA,GAAA,IAAAA,GAAA,KAAAN,EAAA,KAAAM,GAAA,IAAAA,GAAA,MACMC,KAANd,GAAA,KAAMc,KAAN,GAAAf,EAAAN,MAAAgB,MAAAM,QAAA,MAAA3B,EAAAJ,QAAAgC,UACO,KAAJH,GAAiBA,KAAVA,KAAuDA,GAAnCA,EAAAA,MAApBJ,MAAoCM,QAAMF,MAKpDb,EAAAA,aAAMc,EAANrB,MAAAgB,QACHF,EAAA,KAAAA,EAAA,KAZLP,MAAAc,oBAoBIR,MAAA,SAAKW,GAST,WARQC,KAAAA,IACKlC,OAALiC,GAAA,KAAAA,GAA+BA,KAAUE,aAAUF,KACnDC,MAAAD,KAAAA,EAAA,GACH,OAAAxB,KAAAT,QAAAO,MAAA0B,EAAAE,KAAA7B,IAAA2B,EAAAxB,KAAAT,QAAAO,MACoBO,OAArBL,KAAKK,QAALR,MAA6BY,EAAQiB,KAASF,IAAAA,EAA9CxB,KAAAT,QAAAM,OAEAG,KAAAK,SAAAL,KAAamB,QAAYV,OAAKlB,QAAQ4B,GACzCnB,KAAAW,MAAAK,IAAAQ,GACDxB,KAAAT,QAAYoB,UAAZX,KAAAT,QAAA4B,SAAAK,IAAOxB,KAAKW,MAAMK,OAOrBW,aAxF2B,SAAAd,GAuFxB,MAAOb,MAAKT,QAAQqC,aAAqD,MAAtCC,OAAQhB,GAAQiB,UAAW,EAAG,IAUpE5B,UAAA,SAAAX,GAjGL,MAAA,YAAAA,EAAAG,GAAA","file":"../../../scripts/mvc/ui/ui-slider.js","sourcesContent":["define([ 'utils/utils' ], function( Utils ) {\nvar View = Backbone.View.extend({\n    initialize : function( options ) {\n        var self = this;\n        this.options = Utils.merge( options, {\n            id      : Utils.uid(),\n            min     : null,\n            max     : null,\n            step    : null,\n            precise : false,\n            split   : 10000\n        } );\n\n        // create new element\n        this.setElement( this._template( this.options ) );\n\n        // determine wether to use the slider\n        this.useslider = this.options.max !== null && this.options.min !== null && this.options.max > this.options.min;\n\n        // set default step size\n        if ( this.options.step === null ) {\n            this.options.step = 1.0;\n            if ( this.options.precise && this.useslider ) {\n                this.options.step = ( this.options.max - this.options.min ) / this.options.split;\n            }\n        }\n\n        // create slider if min and max are defined properly\n        if ( this.useslider ) {\n            this.$slider = this.$( '#slider' );\n            this.$slider.slider( this.options );\n            this.$slider.on( 'slide', function ( event, ui ) {\n                self.value( ui.value );\n            });\n        } else {\n            this.$( '.ui-form-slider-text' ).css( 'width', '100%' );\n        }\n\n        // link text input field\n        this.$text = this.$( '#text' );\n\n        // set initial value\n        this.options.value !== undefined && ( this.value( this.options.value ) );\n\n        // add text field event\n        var pressed = [];\n        this.$text.on( 'change', function () {\n            self.value( $( this ).val() );\n        });\n        this.$text.on( 'keyup', function( e ) {\n            pressed[e.which] = false;\n            self.options.onchange && self.options.onchange( $( this ).val() );\n        });\n        this.$text.on( 'keydown', function ( e ) {\n            var v = e.which;\n            pressed[ v ] = true;\n            if ( self.options.is_workflow && pressed[ 16 ] && v == 52 ) {\n                self.value( '$' )\n                event.preventDefault();\n            } else if (!( v == 8 || v == 9 || v == 13 || v == 37 || v == 39 || ( v >= 48 && v <= 57 && !pressed[ 16 ] ) || ( v >= 96 && v <= 105 )\n                || ( ( v == 190 || v == 110 ) && $( this ).val().indexOf( '.' ) == -1 && self.options.precise )\n                || ( ( v == 189 || v == 109 ) && $( this ).val().indexOf( '-' ) == -1 )\n                || self._isParameter( $( this ).val() )\n                || pressed[ 91 ] || pressed[ 17 ] ) ) {\n                event.preventDefault();\n            }\n        });\n    },\n\n    /** Set and Return the current value\n    */\n    value : function ( new_val ) {\n        if ( new_val !== undefined ) {\n            if ( new_val !== null && new_val !== '' && !this._isParameter( new_val ) ) {\n                isNaN( new_val ) && ( new_val = 0 );\n                this.options.max !== null && ( new_val = Math.min( new_val, this.options.max ) );\n                this.options.min !== null && ( new_val = Math.max( new_val, this.options.min ) );\n            }\n            this.$slider && this.$slider.slider( 'value', new_val );\n            this.$text.val( new_val );\n            this.options.onchange && this.options.onchange( new_val );\n        }\n        return this.$text.val();\n    },\n\n    /** Return true if the field contains a workflow parameter i.e. $('name')\n    */\n    _isParameter: function( value ) {\n        return this.options.is_workflow && String( value ).substring( 0, 1 ) === '$';\n    },\n\n    /** Slider template\n    */\n    _template: function( options ) {\n        return  '<div id=\"' + options.id + '\" class=\"ui-form-slider\">' +\n                    '<input id=\"text\" type=\"text\" class=\"ui-form-slider-text\"/>' +\n                    '<div id=\"slider\" class=\"ui-form-slider-element\"/>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View : View\n};\n});"]}