{"version":3,"sources":["mvc/ui/ui-slider.js"],"names":["View","Backbone","extend","initialize","options","self","this","model","Model","id","_utils2","default","uid","min","max","step","precise","split","value","onchange","setElement","$","set","val","on","e","pressed","_template","$slider","which","v","get","$text","preventDefault","event","indexOf","opts","_isParameter","attributes","has_slider","render","ui","listenTo","new_val","round","trigger","slider","isNaN","Math","String","substring"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-slider.js","sourcesContent":["import Utils from \"utils/utils\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                min: null,\n                max: null,\n                step: null,\n                precise: false,\n                split: 10000,\n                value: null,\n                onchange: function() {}\n            }).set(options);\n\n        // create new element\n        this.setElement(this._template());\n        this.$el.attr(\"id\", this.model.id);\n        this.$text = this.$(\".ui-form-slider-text\");\n        this.$slider = this.$(\".ui-form-slider-element\");\n\n        // add text field event\n        var pressed = [];\n        this.$text\n            .on(\"change\", function() {\n                self.value($(this).val());\n            })\n            .on(\"keyup\", e => {\n                pressed[e.which] = false;\n            })\n            .on(\"keydown\", function(e) {\n                var v = e.which;\n                pressed[v] = true;\n                if (self.model.get(\"is_workflow\") && pressed[16] && v == 52) {\n                    self.value(\"$\");\n                    event.preventDefault();\n                } else if (\n                    !(\n                        v == 8 ||\n                        v == 9 ||\n                        v == 13 ||\n                        v == 37 ||\n                        v == 39 ||\n                        (v >= 48 && v <= 57 && !pressed[16]) ||\n                        (v >= 96 && v <= 105) ||\n                        ((v == 190 || v == 110) &&\n                            $(this)\n                                .val()\n                                .indexOf(\".\") == -1 &&\n                            self.model.get(\"precise\")) ||\n                        ((v == 189 || v == 109) &&\n                            $(this)\n                                .val()\n                                .indexOf(\"-\") == -1) ||\n                        self._isParameter($(this).val()) ||\n                        pressed[91] ||\n                        pressed[17]\n                    )\n                ) {\n                    event.preventDefault();\n                }\n            });\n\n        // build slider, cannot be rebuild in render\n        var opts = this.model.attributes;\n        this.has_slider =\n            opts.max !== null && opts.min !== null && opts.max > opts.min;\n        var step = opts.step;\n        if (!step) {\n            if (opts.precise && this.has_slider) {\n                step = (opts.max - opts.min) / opts.split;\n            } else {\n                step = 1.0;\n            }\n        }\n        if (this.has_slider) {\n            this.$text.addClass(\"ui-form-slider-left\");\n            this.$slider\n                .slider({ min: opts.min, max: opts.max, step: step })\n                .on(\"slide\", (event, ui) => {\n                    self.value(ui.value);\n                });\n        } else {\n            this.$slider.hide();\n        }\n\n        // add listeners\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function() {\n        var value = this.model.get(\"value\");\n        this.has_slider && this.$slider.slider(\"value\", value);\n        value !== this.$text.val() && this.$text.val(value);\n    },\n\n    /** Set and return the current value */\n    value: function(new_val) {\n        var options = this.model.attributes;\n        if (new_val !== undefined) {\n            if (\n                new_val !== null &&\n                new_val !== \"\" &&\n                !this._isParameter(new_val)\n            ) {\n                isNaN(new_val) && (new_val = 0);\n                !options.precise && (new_val = Math.round(new_val));\n                options.max !== null &&\n                    (new_val = Math.min(new_val, options.max));\n                options.min !== null &&\n                    (new_val = Math.max(new_val, options.min));\n            }\n            this.model.set(\"value\", new_val);\n            this.model.trigger(\"change\");\n            options.onchange(new_val);\n        }\n        return this.model.get(\"value\");\n    },\n\n    /** Return true if the field contains a workflow parameter i.e. $('name') */\n    _isParameter: function(value) {\n        return (\n            this.model.get(\"is_workflow\") &&\n            String(value).substring(0, 1) === \"$\"\n        );\n    },\n\n    /** Slider template */\n    _template: function() {\n        return (\n            '<div class=\"ui-form-slider\">' +\n            '<input class=\"ui-form-slider-text\" type=\"text\"/>' +\n            '<div class=\"ui-form-slider-element\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}