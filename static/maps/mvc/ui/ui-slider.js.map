{"version":3,"sources":["mvc/ui/ui-slider.js"],"names":["define","Utils","View","Backbone","extend","initialize","options","Model","self","uid","min","id","max","step","precise","split","value","this","setElement","_template","$el","attr","model","$","pressed","$text","on","val","e","which","v","get","preventDefault","indexOf","event","opts","attributes","has_slider","$slider","slider","ui","hide","render","new_val","undefined","isNaN","_isParameter","Math","trigger","onchange","String","substring"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-slider.js","sourcesContent":["define([ 'utils/utils' ], function( Utils ) {\n    var View = Backbone.View.extend({\n        initialize : function( options ) {\n            var self = this;\n            this.model = options && options.model || new Backbone.Model({\n                id       : Utils.uid(),\n                min      : null,\n                max      : null,\n                step     : null,\n                precise  : false,\n                split    : 10000,\n                value    : null,\n                onchange : function(){}\n            }).set( options );\n\n            // create new element\n            this.setElement( this._template() );\n            this.$el.attr( 'id', this.model.id );\n            this.$text   = this.$( '.ui-form-slider-text' );\n            this.$slider = this.$( '.ui-form-slider-element' );\n\n            // add text field event\n            var pressed = [];\n            this.$text.on( 'change', function () {\n                self.value( $( this ).val() );\n            }).on( 'keyup', function( e ) {\n                pressed[e.which] = false;\n            }).on( 'keydown', function ( e ) {\n                var v = e.which;\n                pressed[ v ] = true;\n                if ( self.model.get( 'is_workflow' ) && pressed[ 16 ] && v == 52 ) {\n                    self.value( '$' );\n                    event.preventDefault();\n                } else if (!( v == 8 || v == 9 || v == 13 || v == 37 || v == 39 || ( v >= 48 && v <= 57 && !pressed[ 16 ] ) || ( v >= 96 && v <= 105 )\n                    || ( ( v == 190 || v == 110 ) && $( this ).val().indexOf( '.' ) == -1 && self.model.get( 'precise' ) )\n                    || ( ( v == 189 || v == 109 ) && $( this ).val().indexOf( '-' ) == -1 )\n                    || self._isParameter( $( this ).val() )\n                    || pressed[ 91 ] || pressed[ 17 ] ) ) {\n                    event.preventDefault();\n                }\n            });\n\n            // build slider, cannot be rebuild in render\n            var opts = this.model.attributes;\n            this.has_slider = opts.max !== null && opts.min !== null && opts.max > opts.min;\n            var step = opts.step;\n            if ( !step ) {\n                if ( opts.precise && this.has_slider ) {\n                    step = ( opts.max - opts.min ) / opts.split;\n                } else {\n                    step = 1.0;\n                }\n            }\n            if ( this.has_slider ) {\n                this.$text.addClass( 'ui-form-slider-left' );\n                this.$slider.slider( { min: opts.min, max: opts.max, step: step } )\n                            .on( 'slide', function ( event, ui ) { self.value( ui.value ) } );\n            } else {\n                this.$slider.hide();\n            }\n\n            // add listeners\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render: function() {\n            var value = this.model.get( 'value' );\n            this.has_slider && this.$slider.slider( 'value', value );\n            value !== this.$text.val() && this.$text.val( value );\n        },\n\n        /** Set and return the current value */\n        value : function ( new_val ) {\n            var options = this.model.attributes;\n            if ( new_val !== undefined ) {\n                if ( new_val !== null && new_val !== '' && !this._isParameter( new_val ) ) {\n                    isNaN( new_val ) && ( new_val = 0 );\n                    !options.precise && ( new_val = Math.round( new_val ) );\n                    options.max !== null && ( new_val = Math.min( new_val, options.max ) );\n                    options.min !== null && ( new_val = Math.max( new_val, options.min ) );\n                }\n                this.model.set( 'value', new_val );\n                this.model.trigger( 'change' );\n                options.onchange( new_val );\n            }\n            return this.model.get( 'value' );\n        },\n\n        /** Return true if the field contains a workflow parameter i.e. $('name') */\n        _isParameter: function( value ) {\n            return this.model.get( 'is_workflow' ) && String( value ).substring( 0, 1 ) === '$';\n        },\n\n        /** Slider template */\n        _template: function() {\n            return  '<div class=\"ui-form-slider\">' +\n                        '<input class=\"ui-form-slider-text\" type=\"text\"/>' +\n                        '<div class=\"ui-form-slider-element\"/>' +\n                    '</div>';\n        }\n    });\n\n    return {\n        View : View\n    };\n});"]}