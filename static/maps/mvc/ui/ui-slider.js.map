{"version":3,"sources":["mvc/ui/ui-slider.js"],"names":["define","Utils","View","Backbone","extend","initialize","options","self","this","model","Model","id","min","max","step","precise","split","value","onchange","setElement","_template","$el","$text","attr","$","$slider","pressed","on","val","e","which","v","event","preventDefault","opts","has_slider","addClass","slider","ui","get","indexOf","_isParameter","listenTo","attributes","new_val","undefined","hide","render","isNaN","Math","round","set","trigger","String","substring"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-slider.js","sourcesContent":["define([\"utils/utils\"], function(Utils) {\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    min: null,\n                    max: null,\n                    step: null,\n                    precise: false,\n                    split: 10000,\n                    value: null,\n                    onchange: function() {}\n                }).set(options);\n\n            // create new element\n            this.setElement(this._template());\n            this.$el.attr(\"id\", this.model.id);\n            this.$text = this.$(\".ui-form-slider-text\");\n            this.$slider = this.$(\".ui-form-slider-element\");\n\n            // add text field event\n            var pressed = [];\n            this.$text\n                .on(\"change\", function() {\n                    self.value($(this).val());\n                })\n                .on(\"keyup\", function(e) {\n                    pressed[e.which] = false;\n                })\n                .on(\"keydown\", function(e) {\n                    var v = e.which;\n                    pressed[v] = true;\n                    if (\n                        self.model.get(\"is_workflow\") &&\n                        pressed[16] &&\n                        v == 52\n                    ) {\n                        self.value(\"$\");\n                        event.preventDefault();\n                    } else if (\n                        !(\n                            v == 8 ||\n                            v == 9 ||\n                            v == 13 ||\n                            v == 37 ||\n                            v == 39 ||\n                            (v >= 48 && v <= 57 && !pressed[16]) ||\n                            (v >= 96 && v <= 105) ||\n                            ((v == 190 || v == 110) &&\n                                $(this)\n                                    .val()\n                                    .indexOf(\".\") == -1 &&\n                                self.model.get(\"precise\")) ||\n                            ((v == 189 || v == 109) &&\n                                $(this)\n                                    .val()\n                                    .indexOf(\"-\") == -1) ||\n                            self._isParameter($(this).val()) ||\n                            pressed[91] ||\n                            pressed[17]\n                        )\n                    ) {\n                        event.preventDefault();\n                    }\n                });\n\n            // build slider, cannot be rebuild in render\n            var opts = this.model.attributes;\n            this.has_slider =\n                opts.max !== null && opts.min !== null && opts.max > opts.min;\n            var step = opts.step;\n            if (!step) {\n                if (opts.precise && this.has_slider) {\n                    step = (opts.max - opts.min) / opts.split;\n                } else {\n                    step = 1.0;\n                }\n            }\n            if (this.has_slider) {\n                this.$text.addClass(\"ui-form-slider-left\");\n                this.$slider\n                    .slider({ min: opts.min, max: opts.max, step: step })\n                    .on(\"slide\", function(event, ui) {\n                        self.value(ui.value);\n                    });\n            } else {\n                this.$slider.hide();\n            }\n\n            // add listeners\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function() {\n            var value = this.model.get(\"value\");\n            this.has_slider && this.$slider.slider(\"value\", value);\n            value !== this.$text.val() && this.$text.val(value);\n        },\n\n        /** Set and return the current value */\n        value: function(new_val) {\n            var options = this.model.attributes;\n            if (new_val !== undefined) {\n                if (\n                    new_val !== null &&\n                    new_val !== \"\" &&\n                    !this._isParameter(new_val)\n                ) {\n                    isNaN(new_val) && (new_val = 0);\n                    !options.precise && (new_val = Math.round(new_val));\n                    options.max !== null &&\n                        (new_val = Math.min(new_val, options.max));\n                    options.min !== null &&\n                        (new_val = Math.max(new_val, options.min));\n                }\n                this.model.set(\"value\", new_val);\n                this.model.trigger(\"change\");\n                options.onchange(new_val);\n            }\n            return this.model.get(\"value\");\n        },\n\n        /** Return true if the field contains a workflow parameter i.e. $('name') */\n        _isParameter: function(value) {\n            return (\n                this.model.get(\"is_workflow\") &&\n                String(value).substring(0, 1) === \"$\"\n            );\n        },\n\n        /** Slider template */\n        _template: function() {\n            return (\n                '<div class=\"ui-form-slider\">' +\n                '<input class=\"ui-form-slider-text\" type=\"text\"/>' +\n                '<div class=\"ui-form-slider-element\"/>' +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}