{"version":3,"sources":["mvc/ui/ui-select-default.js"],"names":["define","Utils","Buttons","View","Backbone","extend","initialize","options","self","this","data","data2","model","Model","id","uid","cls","error_text","empty_text","visible","wait","multiple","searchable","optional","disabled","onchange","value","selectall","pagesize","set","on","get","listenTo","_changeData","_changeDisabled","_changeWait","_changeVisible","_changeValue","render","_renderSearchable","_renderClassic","$el","addClass","attr","$select","empty","prop","_getValue","trigger","append","$","$dropdown","$resize","$resize_icon","hide","show","removeClass","off","event","currentY","pageY","currentHeight","height","minHeight","Math","max","select2","all_button","ButtonCheck","onclick","new_value","_","each","option","push","prepend","_match","term","text","String","toUpperCase","indexOf","label","length","index","order","tags","matched_tags","closeOnSelect","query","q","results","filter","e","found","tag","callback","slice","page","more","formatResult","result","escape","reduce","memo","find","remove","html","_setValue","isArray","first","undefined","exists","findWhere","v","d","unwait","enable","disable","add","sorter","keep","sort","update","setOnChange","val","selected","a","b","isEmpty"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-select-default.js","sourcesContent":["/**\n *  This class creates/wraps a default html select field as backbone class.\n */\ndefine([ 'utils/utils', 'mvc/ui/ui-buttons' ], function( Utils, Buttons ) {\nvar View = Backbone.View.extend({\n    initialize: function( options ) {\n        var self = this;\n        this.data  = [];\n        this.data2 = [];\n        this.model = options && options.model || new Backbone.Model({\n            id          : Utils.uid(),\n            cls         : 'ui-select',\n            error_text  : 'No options available',\n            empty_text  : 'Nothing selected',\n            visible     : true,\n            wait        : false,\n            multiple    : false,\n            searchable  : true,\n            optional    : false,\n            disabled    : false,\n            onchange    : function(){},\n            value       : null,\n            selectall   : true,\n            pagesize    : 20\n        }).set( options );\n        this.on( 'change', function() { self.model.get( 'onchange' ) && self.model.get( 'onchange' )( self.value() ) } );\n        this.listenTo( this.model, 'change:data', this._changeData, this );\n        this.listenTo( this.model, 'change:disabled', this._changeDisabled, this );\n        this.listenTo( this.model, 'change:wait', this._changeWait, this );\n        this.listenTo( this.model, 'change:visible', this._changeVisible, this );\n        this.listenTo( this.model, 'change:value', this._changeValue, this );\n        this.listenTo( this.model, 'change:multiple change:searchable change:cls change:id', this.render, this );\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        this.model.get( 'searchable' ) ? this._renderSearchable() : this._renderClassic();\n        this.$el.addClass( this.model.get( 'cls' ) )\n                .attr( 'id', this.model.get( 'id' ) );\n        this.$select.empty().addClass( 'select' )\n                    .attr( 'id', this.model.get( 'id' ) + '_select' )\n                    .prop( 'multiple', this.model.get( 'multiple' ) )\n                    .on( 'change', function() {\n                        self.value( self._getValue() );\n                        self.trigger( 'change' );\n                    });\n        this._changeData();\n        this._changeWait();\n        this._changeVisible();\n        this._changeDisabled();\n    },\n\n    /** Renders the classic selection field */\n    _renderClassic: function() {\n        var self = this;\n        this.$el.addClass( this.model.get( 'multiple' ) ? 'ui-select-multiple' : 'ui-select' )\n                .append( this.$select      = $( '<select/>' ) )\n                .append( this.$dropdown    = $( '<div/>' ) )\n                .append( this.$resize      = $( '<div/>' )\n                .append( this.$resize_icon = $( '<i/>' ) ) );\n        if ( this.model.get( 'multiple' ) ) {\n            this.$dropdown.hide();\n            this.$resize_icon.addClass( 'fa fa-angle-double-right fa-rotate-45' ).show();\n            this.$resize.removeClass()\n                        .addClass( 'icon-resize' )\n                        .show()\n                        .off( 'mousedown' ).on( 'mousedown', function( event ) {\n                            var currentY = event.pageY;\n                            var currentHeight = self.$select.height();\n                            self.minHeight = self.minHeight || currentHeight;\n                            $( '#dd-helper' ).show().on( 'mousemove', function( event ) {\n                                self.$select.height( Math.max( currentHeight + ( event.pageY - currentY ), self.minHeight ) );\n                            }).on( 'mouseup mouseleave', function() {\n                                $( '#dd-helper' ).hide().off();\n                            });\n                        });\n        } else {\n            this.$dropdown.show();\n            this.$resize.hide();\n            this.$resize_icon.hide();\n        }\n    },\n\n    /** Renders the default select2 field */\n    _renderSearchable: function() {\n        var self = this;\n        this.$el.append( this.$select   = $( '<div/>' ) )\n                .append( this.$dropdown = $( '<div/>' ) );\n        this.$dropdown.hide();\n        if ( !this.model.get( 'multiple' ) ) {\n            this.$dropdown.show().on( 'click', function() {\n                self.$select.select2 && self.$select.select2( 'open' );\n            });\n        }\n        this.all_button = null;\n        if ( this.model.get( 'multiple' ) && this.model.get( 'selectall' ) ) {\n            this.all_button = new Buttons.ButtonCheck({\n                onclick: function() {\n                    var new_value = [];\n                    self.all_button.value() !== 0 && _.each( self.model.get( 'data' ), function( option ) {\n                        new_value.push( option.value );\n                    });\n                    self.value( new_value );\n                    self.trigger( 'change' );\n                }\n            });\n            this.$el.prepend( this.all_button.$el );\n        }\n    },\n\n    /** Matches a search term with a given text */\n    _match: function( term, text ) {\n        return !term || term == '' || String( text ).toUpperCase().indexOf( term.toUpperCase() ) >= 0\n    },\n\n    /** Updates the selection options */\n    _changeData: function() {\n        var self = this;\n        this.data = [];\n        if ( !this.model.get( 'multiple' ) && this.model.get( 'optional' ) ) {\n            this.data.push( { value: '__null__', label: self.model.get( 'empty_text' ) } );\n        }\n        _.each( this.model.get( 'data' ), function( option ) {\n            self.data.push( option );\n        });\n        if ( this.length() == 0 ) {\n            this.data.push( { value: '__null__', label: this.model.get( 'error_text' ) } );\n        }\n        if ( this.model.get( 'searchable' ) ) {\n            this.data2 = [];\n            _.each( this.data, function( option, index ) {\n                self.data2.push( { order: index, id: option.value, text: option.label, tags: option.tags } );\n            });\n            this.$select.data( 'select2' ) && this.$select.select2( 'destroy' );\n            this.matched_tags = {};\n            this.$select.select2({\n                data            : self.data2,\n                closeOnSelect   : !this.model.get( 'multiple' ),\n                multiple        : this.model.get( 'multiple' ),\n                query           : function( q ) {\n                    self.matched_tags = {};\n                    var pagesize = self.model.get( 'pagesize' );\n                    var results = _.filter( self.data2, function ( e ) {\n                        var found = false;\n                        _.each( e.tags, function( tag ) {\n                            if ( self._match( q.term, tag ) ) {\n                                found = self.matched_tags[ tag ] = true;\n                            }\n                        });\n                        return found || self._match( q.term, e.text );\n                    });\n                    q.callback({\n                        results: results.slice( ( q.page - 1 ) * pagesize, q.page * pagesize ),\n                        more   : results.length >= q.page * pagesize\n                    });\n                },\n                formatResult    : function( result ) {\n                    return _.escape( result.text ) +\n                        '<div class=\"ui-tags\">' +\n                            _.reduce( result.tags, function( memo, tag ) {\n                                if ( self.matched_tags[ tag ] ) {\n                                    return memo + '&nbsp;' +\n                                        '<div class=\"label label-info\">' +\n                                            _.escape( tag ) +\n                                        '</div>'\n                                }\n                                return memo;\n                            }, '' ) +\n                        '</div>';\n                }\n            });\n            this.$( '.select2-container .select2-search input' ).off( 'blur' );\n        } else {\n            this.$select.find( 'option' ).remove();\n            _.each( this.data, function( option ) {\n                self.$select.append( $( '<option/>' ).attr( 'value', option.value ).html( _.escape( option.label ) ) );\n            });\n        }\n        this.model.set( 'disabled', this.length() == 0 );\n        this._changeValue();\n    },\n\n    /** Handles field enabling/disabling, usually used when no options are available */\n    _changeDisabled: function() {\n        if ( this.model.get( 'searchable' ) ) {\n            this.$select.select2( this.model.get( 'disabled' ) ? 'disable' : 'enable' );\n        } else {\n            this.$select.prop( 'disabled', this.model.get( 'disabled' ) );\n        }\n    },\n\n    /** Searchable fields may display a spinner e.g. while waiting for a server response */\n    _changeWait: function() {\n        this.$dropdown.removeClass()\n                      .addClass( 'icon-dropdown fa' )\n                      .addClass( this.model.get( 'wait' ) ? 'fa-spinner fa-spin' : 'fa-caret-down' );\n    },\n\n    /** Handles field visibility */\n    _changeVisible: function() {\n        this.$el[ this.model.get( 'visible' ) ? 'show' : 'hide' ]();\n        this.$select[ this.model.get( 'visible' ) ? 'show' : 'hide' ]();\n    },\n\n    /** Synchronizes the model value with the actually selected field value */\n    _changeValue: function() {\n        this._setValue( this.model.get( 'value' ) );\n        if ( this.model.get( 'multiple' ) ) {\n            if ( this.all_button ) {\n                var value = this._getValue();\n                this.all_button.value( $.isArray( value ) ? value.length : 0, this.length() );\n            }\n        } else if ( this._getValue() === null && !this.model.get( 'optional' ) ) {\n            this._setValue( this.first() );\n        }\n    },\n\n    /** Return/Set current selection */\n    value: function ( new_value ) {\n        new_value !== undefined && this.model.set( 'value', new_value );\n        return this._getValue();\n    },\n\n    /** Return the first select option */\n    first: function() {\n        return this.data.length > 0 ? this.data[ 0 ].value : null;\n    },\n\n    /** Check if a value is an existing option */\n    exists: function( value ) {\n        return _.findWhere( this.data, { value: value } );\n    },\n\n    /** Return the label/text of the current selection */\n    text: function () {\n        var v = this._getValue();\n        var d = this.exists( $.isArray( v ) ? v[ 0 ] : v );\n        return d ? d.label : '';\n    },\n\n    /** Show the select field */\n    show: function() {\n        this.model.set( 'visible', true );\n    },\n\n    /** Hide the select field */\n    hide: function() {\n        this.model.set( 'visible', false );\n    },\n\n    /** Show a spinner indicating that the select options are currently loaded */\n    wait: function() {\n        this.model.set( 'wait', true );\n    },\n\n    /** Hide spinner indicating that the request has been completed */\n    unwait: function() {\n        this.model.set( 'wait', false );\n    },\n\n    /** Returns true if the field is disabled */\n    disabled: function() {\n        return this.model.get( 'disabled' );\n    },\n\n    /** Enable the select field */\n    enable: function() {\n        this.model.set( 'disabled', false );\n    },\n\n    /** Disable the select field */\n    disable: function() {\n        this.model.set( 'disabled', true );\n    },\n\n    /** Update all available options at once */\n    add: function( options, sorter ) {\n        _.each( this.model.get( 'data' ), function( v ) {\n            v.keep && !_.findWhere( options, { value: v.value } ) && options.push( v );\n        });\n        sorter && options && options.sort( sorter );\n        this.model.set( 'data', options );\n    },\n\n    /** Update available options */\n    update: function( options ) {\n        this.model.set( 'data', options );\n    },\n\n    /** Set the custom onchange callback function */\n    setOnChange: function( callback ) {\n        this.model.set( 'onchange', callback );\n    },\n\n    /** Number of available options */\n    length: function() {\n        return $.isArray( this.model.get( 'data' ) ) ? this.model.get( 'data' ).length : 0;\n    },\n\n    /** Set value to dom */\n    _setValue: function( new_value ) {\n        var self = this;\n        if( new_value === null || new_value === undefined ) {\n            new_value = '__null__';\n        }\n        if ( this.model.get( 'multiple' ) ) {\n            new_value = $.isArray( new_value ) ? new_value : [ new_value ];\n        } else if ( $.isArray( new_value ) ) {\n            if ( new_value.length > 0 ) {\n                new_value = new_value[ 0 ];\n            } else {\n                new_value = '__null__';\n            }\n        }\n        if ( this.model.get( 'searchable' ) ) {\n            if ( $.isArray( new_value ) ) {\n                val = [];\n                _.each( new_value, function( v ) {\n                    var d = _.findWhere( self.data2, { id: v } );\n                    d && val.push( d );\n                });\n                new_value = val;\n            } else {\n                var d = _.findWhere( this.data2, { id: new_value } );\n                new_value = d;\n            }\n            this.$select.select2( 'data', new_value );\n        } else {\n            this.$select.val( new_value );\n        }\n    },\n\n    /** Get value from dom */\n    _getValue: function() {\n        var val = null;\n        if ( this.model.get( 'searchable' ) ) {\n            var selected = this.$select.select2( 'data' );\n            if ( selected ) {\n                if ( $.isArray( selected ) ) {\n                    val = [];\n                    selected.sort( function( a, b ) { return a.order - b.order } );\n                    _.each( selected, function( v ) { val.push( v.id ) } );\n                } else {\n                    val = selected.id;\n                }\n            }\n        } else {\n            val = this.$select.val();\n        }\n        return Utils.isEmpty( val ) ? null : val;\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n"]}