{"version":3,"sources":["mvc/ui/ui-tabs.js"],"names":["define","Utils","View","Backbone","extend","initialize","options","this","self","model","Model","onchange","visible","$","_template","set","setElement","$nav","on","hide","$content","$el","render","_add","listenTo","collection","_remove","_change","id","length","first","children","removeClass","addClass","size","current","get","show","add","del","remove","delAll","reset","showTab","hideTab","tab_model","attributes","append","attr","_template_tab","placement","container","e","preventDefault","_reset","empty","$tmpl","$href","find","icon","title"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-tabs.js","sourcesContent":["/**\n *  Renders tabs e.g. used in the charts editor, behaves similar to repeat and section rendering\n */\ndefine( [ 'utils/utils' ], function( Utils ) {\n    var View = Backbone.View.extend({\n        initialize : function( options ) {\n            var self = this;\n            this.collection = new Backbone.Collection();\n            this.model = options && options.model || new Backbone.Model( {\n                onchange    : null,\n                visible     : true\n            }).set( options );\n            this.setElement( $( this._template() ) );\n            this.$nav       = this.$( '.tab-navigation' );\n            this.$content   = this.$( '.tab-content' );\n            this.$el.on( 'click', function() { $( '.tooltip' ).hide() } );\n            this.render();\n            this.listenTo( this.model, 'change', this.render, this );\n            this.listenTo( this.collection, 'add', this._add, this );\n            this.listenTo( this.collection, 'remove', this._remove, this );\n            this.listenTo( this.collection, 'change', this._change, this );\n            this.listenTo( this.collection, 'reset', this._reset, this );\n            this.listenTo( this.collection, 'add remove reset', this.render, this );\n        },\n\n        render: function() {\n            var id = this.model.get( 'current' );\n            id = this.$( '#' + id ).length > 0 ? id : this.first();\n            if ( id ) {\n                this.$nav.children().removeClass('active' );\n                this.$content.children().removeClass('active' );\n                this.$( '#tab-' + id ).addClass( 'active' );\n                this.$( '#' + id ).addClass( 'active' );\n            }\n            this.$el[ this.model.get( 'visible' ) ? 'fadeIn' : 'fadeOut' ]( 'fast' );\n            this.$nav[ this.size() > 1 ? 'show' : 'hide' ]();\n        },\n\n        /** Returns tab id for currently shown tab */\n        current: function() {\n            return this.model.get( 'current' );\n        },\n\n        /** Show tab view and highlight a tab by id */\n        show: function( id ) {\n            if ( id ) {\n                this.model.set( { 'current': id, 'visible': true } );\n                this.model.get( 'onchange' ) && this.model.get( 'onchange' )( id );\n            }\n        },\n\n        /** Hide tab view */\n        hide: function(){\n            this.model.set( 'visible', false );\n        },\n\n        /** Returns first tab */\n        first: function() {\n            var model = this.collection.first();\n            return model && model.id;\n        },\n\n        /** Returns current number of tabs */\n        size: function() {\n            return this.collection.length;\n        },\n\n        /** Adds a new tab */\n        add: function( options ) {\n            this.collection.add( options );\n        },\n\n        /** Delete tab */\n        del: function( id ) {\n            this.collection.remove( id );\n        },\n\n        /** Delete all tabs */\n        delAll: function() {\n            this.collection.reset();\n        },\n\n        /** Show tab */\n        showTab: function( id ) {\n            this.collection.get( id ).set( 'hidden', false );\n        },\n\n        /** Hide tab */\n        hideTab: function( id ) {\n            this.collection.get( id ).set( 'hidden', true );\n        },\n\n        /** Adds a new tab */\n        _add: function( tab_model ) {\n            var self = this;\n            var options = tab_model.attributes;\n            this.$content.append( $( '<div/>' ).attr( 'id', options.id ).addClass( 'tab-pane' ).append( options.$el ) );\n            this.$nav.append( $( this._template_tab( options ) )\n                .show()\n                .tooltip( { title: options.tooltip, placement: 'bottom', container: self.$el } )\n                .on( 'click', function( e ) {\n                    e.preventDefault();\n                    self.show( options.id );\n                }));\n            if ( this.size() == 1 ) {\n                this.show( options.id );\n            }\n        },\n\n        /** Delete tab */\n        _remove: function( tab_model ) {\n            this.$( '#tab-' + tab_model.id ).remove();\n            this.$( '#' + tab_model.id ).remove();\n        },\n\n        /** Reset collection */\n        _reset: function() {\n            this.$nav.empty();\n            this.$content.empty();\n        },\n\n        /** Change tab */\n        _change: function( tab_model ) {\n            this.$( '#tab-' + tab_model.id )[ tab_model.get( 'hidden' ) ? 'hide' : 'show' ]();\n        },\n\n        /** Main template */\n        _template: function() {\n            return  $( '<div/>' ).addClass( 'ui-tabs tabbable tabs-left' )\n                                 .append( $( '<ul/>' ).addClass( 'tab-navigation nav nav-tabs' ) )\n                                 .append( $( '<div/>' ).addClass( 'tab-content' ) );\n        },\n\n        /** Tab template */\n        _template_tab: function( options ) {\n            var $tmpl = $( '<li/>' ).addClass( 'tab-element' )\n                                    .attr( 'id', 'tab-' + options.id )\n                                    .append( $( '<a/>' ).attr( 'id', 'tab-title-link-' + options.id ) );\n            var $href = $tmpl.find( 'a' );\n            options.icon && $href.append( $( '<i/>' ).addClass( 'tab-icon fa' ).addClass( options.icon ) );\n            $href.append( $( '<span/>' ).attr( 'id', 'tab-title-text-' + options.id )\n                                        .addClass( 'tab-title-text' )\n                                        .append( options.title ) );\n            return $tmpl;\n        }\n    });\n\n    return { View : View }\n});"]}