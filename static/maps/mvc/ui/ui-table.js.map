{"version":3,"sources":["mvc/ui/ui-table.js"],"names":["define","Utils","View","Backbone","extend","initialize","options","this","merge","ondblclick","content","onchange","onconfirm","selectable","_template","cls_tr","$","$tbody","$tmessage","setElement","row","$thead","_row","row_count","events","click","dblclick","addHeader","$el","append","appendHeader","add","width","align","wrapper","css","id","fade","_commit","prepend","get","del","item","find","length","remove","delAll","empty","value","new_value","before","attr","removeClass","undefined","addClass","after","size","fadeIn","_refresh","_onclick","e","old_value","target","_ondblclick","hide","cls"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-table.js","sourcesContent":["/** This class creates a ui table element. */\ndefine([\"utils/utils\"], function(Utils) {\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            this.options = Utils.merge(options, {\n                content: \"No content available.\",\n                onchange: null,\n                ondblclick: null,\n                onconfirm: null,\n                cls: \"ui-table\",\n                selectable: true,\n                cls_tr: \"\"\n            });\n            this.setElement(this._template());\n            this.$thead = this.$(\"thead\");\n            this.$tbody = this.$(\"tbody\");\n            this.$tmessage = this.$(\"tmessage\");\n            this.row = this._row();\n            this.row_count = 0;\n        },\n\n        events: {\n            click: \"_onclick\",\n            dblclick: \"_ondblclick\"\n        },\n\n        /** Add cell to header row */\n        addHeader: function($el) {\n            this.row.append($(\"<th/>\").append($el));\n        },\n\n        /** Append header row to table */\n        appendHeader: function() {\n            this.$thead.append(this.row);\n            this.row = $(\"<tr/>\");\n        },\n\n        /** Add cell to row */\n        add: function($el, width, align) {\n            var wrapper = $(\"<td/>\");\n            if (width) {\n                wrapper.css(\"width\", width);\n            }\n            if (align) {\n                wrapper.css(\"text-align\", align);\n            }\n            this.row.append(wrapper.append($el));\n        },\n\n        /** Append row to table */\n        append: function(id, fade) {\n            this._commit(id, fade, false);\n        },\n\n        /** Prepend row to table */\n        prepend: function(id, fade) {\n            this._commit(id, fade, true);\n        },\n\n        /** Helper to get row element */\n        get: function(id) {\n            return this.$(\"#\" + id);\n        },\n\n        /** Delete row by id */\n        del: function(id) {\n            var item = this.$tbody.find(\"#\" + id);\n            if (item.length > 0) {\n                item.remove();\n                this.row_count--;\n                this._refresh();\n            }\n        },\n\n        /** Delete all rows */\n        delAll: function() {\n            this.$tbody.empty();\n            this.row_count = 0;\n            this._refresh();\n        },\n\n        /** Set a value i.e. selects/highlights a particular row by id */\n        value: function(new_value) {\n            if (this.options.selectable) {\n                this.before = this.$tbody.find(\".current\").attr(\"id\");\n                if (new_value !== undefined) {\n                    this.$tbody.find(\"tr\").removeClass(\"current\");\n                    if (new_value) {\n                        this.$tbody.find(\"#\" + new_value).addClass(\"current\");\n                    }\n                }\n                var after = this.$tbody.find(\".current\").attr(\"id\");\n                if (after === undefined) {\n                    return null;\n                } else {\n                    if (after != this.before && this.options.onchange) {\n                        this.options.onchange(new_value);\n                    }\n                    return after;\n                }\n            }\n        },\n\n        /** Return the number of rows */\n        size: function() {\n            return this.$tbody.find(\"tr\").length;\n        },\n\n        /** Helper to append rows */\n        _commit: function(id, fade, prepend) {\n            this.del(id);\n            this.row.attr(\"id\", id);\n            if (prepend) {\n                this.$tbody.prepend(this.row);\n            } else {\n                this.$tbody.append(this.row);\n            }\n            if (fade) {\n                this.row.hide();\n                this.row.fadeIn();\n            }\n            this.row = this._row();\n            this.row_count++;\n            this._refresh();\n        },\n\n        /** Helper to create new row */\n        _row: function() {\n            return $('<tr class=\"' + this.options.cls_tr + '\"></tr>');\n        },\n\n        /** Handles onclick events */\n        _onclick: function(e) {\n            var old_value = this.value();\n            var new_value = $(e.target)\n                .closest(\"tr\")\n                .attr(\"id\");\n            if (new_value != \"\") {\n                if (new_value && old_value != new_value) {\n                    if (this.options.onconfirm) {\n                        this.options.onconfirm(new_value);\n                    } else {\n                        this.value(new_value);\n                    }\n                }\n            }\n        },\n\n        /** Handles ondblclick events */\n        _ondblclick: function(e) {\n            var value = this.value();\n            if (value && this.options.ondblclick) {\n                this.options.ondblclick(value);\n            }\n        },\n\n        /** Refresh helper */\n        _refresh: function() {\n            if (this.row_count == 0) {\n                this.$tmessage.show();\n            } else {\n                this.$tmessage.hide();\n            }\n        },\n\n        /** Template */\n        _template: function() {\n            return (\n                \"<div>\" +\n                '<table class=\"' +\n                this.options.cls +\n                '\">' +\n                \"<thead/>\" +\n                \"<tbody/>\" +\n                \"</table>\" +\n                \"<tmessage>\" +\n                this.options.content +\n                \"</tmessage>\" +\n                \"<div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}