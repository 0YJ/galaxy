{"version":3,"sources":["mvc/ui/ui-table.js"],"names":["define","Utils","View","Backbone","extend","row","row_count","optionsDefault","content","onchange","ondblclick","onconfirm","cls","cls_tr","events","click","dblclick","initialize","options","this","merge","$el","$","_template","$thead","find","$tbody","$tmessage","setElement","_row","addHeader","wrapper","append","appendHeader","add","width","align","css","id","fade","_commit","prepend","get","del","item","length","remove","_refresh","delAll","empty","value","new_value","before","attr","undefined","removeClass","addClass","after","size","hide","fadeIn","_onclick","e","old_value","target","closest","_ondblclick","show"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-table.js","sourcesContent":["// dependencies\ndefine(['utils/utils'], function(Utils) {\n\n/**\n *  This class creates a ui table element.\n */\nvar View = Backbone.View.extend({\n    // current row\n    row: null,\n    \n    // count rows\n    row_count: 0,\n    \n    // defaults options\n    optionsDefault: {\n        content     : 'No content available.',\n        onchange    : null,\n        ondblclick  : null,\n        onconfirm   : null,\n        cls         : 'ui-table',\n        cls_tr      : ''\n    },\n    \n    // events\n    events : {\n        'click'     : '_onclick',\n        'dblclick'  : '_ondblclick'\n    },\n    \n    // initialize\n    initialize : function(options) {\n        // configure options\n        this.options = Utils.merge(options, this.optionsDefault);\n        \n        // create new element\n        var $el = $(this._template(this.options));\n        \n        // link sub-elements\n        this.$thead = $el.find('thead');\n        this.$tbody = $el.find('tbody');\n        this.$tmessage = $el.find('tmessage');\n        \n        // set element\n        this.setElement($el);\n                \n        // initialize row\n        this.row = this._row();\n    },\n    \n    // add header cell\n    addHeader: function($el) {\n        var wrapper = $('<th></th>');\n        wrapper.append($el);\n        this.row.append(wrapper);\n    },\n    \n    // header\n    appendHeader: function() {\n        // append header row\n        this.$thead.append(this.row);\n\n        // row\n        this.row = $('<tr></tr>');\n    },\n    \n    // add row cell\n    add: function($el, width, align) {\n        var wrapper = $('<td></td>');\n        if (width) {\n            wrapper.css('width', width);\n        }\n        if (align) {\n            wrapper.css('text-align', align);\n        }\n        wrapper.append($el);\n        this.row.append(wrapper);\n    },\n    \n    // append\n    append: function(id, fade) {\n        this._commit(id, fade, false);\n    },\n    \n    // prepend\n    prepend: function(id, fade) {\n        this._commit(id, fade, true);\n    },\n    \n    // get element\n    get: function(id) {\n        return this.$el.find('#' + id);\n    },\n    \n    // delete\n    del: function(id) {\n        var item = this.$tbody.find('#' + id);\n        if (item.length > 0) {\n            item.remove();\n            this.row_count--;\n            this._refresh();\n        }\n    },\n\n    // delete all\n    delAll: function() {\n        this.$tbody.empty();\n        this.row_count = 0;\n        this._refresh();\n    },\n        \n    // value\n    value: function(new_value) {\n        // get current id/value\n        this.before = this.$tbody.find('.current').attr('id');\n        \n        // check if new_value is defined\n        if (new_value !== undefined) {\n            this.$tbody.find('tr').removeClass('current');\n            if (new_value) {\n                this.$tbody.find('#' + new_value).addClass('current');\n            }\n        }\n        \n        // get current id/value\n        var after = this.$tbody.find('.current').attr('id');\n        if(after === undefined) {\n            return null;\n        } else {\n            // fire onchange\n            if (after != this.before && this.options.onchange) {\n                this.options.onchange(new_value);\n            }\n            \n            // return current value\n            return after;\n        }\n    },\n    \n    // size\n    size: function() {\n        return this.$tbody.find('tr').length;\n    },\n    \n    // commit\n    _commit: function(id, fade, prepend) {\n        // remove previous item with same id\n        this.del(id);\n        \n        // add\n        this.row.attr('id', id);\n        \n        // add row\n        if (prepend) {\n            this.$tbody.prepend(this.row);\n        } else {\n            this.$tbody.append(this.row);\n        }\n        \n        // fade mode\n        if (fade) {\n            this.row.hide();\n            this.row.fadeIn();\n        }\n        \n        // row\n        this.row = this._row();\n        \n        // row count\n        this.row_count++;\n        this._refresh();\n    },\n    \n    // create new row\n    _row: function() {\n        return $('<tr class=\"' + this.options.cls_tr + '\"></tr>');\n    },\n    \n    // onclick\n    _onclick: function(e) {\n        // get values\n        var old_value = this.value();\n        var new_value = $(e.target).closest('tr').attr('id');\n        if (new_value != ''){\n            // check equality\n            if (new_value && old_value != new_value) {\n                if (this.options.onconfirm) {\n                    this.options.onconfirm(new_value);\n                } else {\n                    this.value(new_value);\n                }\n            }\n        }\n    },\n\n    // ondblclick\n    _ondblclick: function(e) {\n        var value = this.value();\n        if (value && this.options.ondblclick) {\n            this.options.ondblclick(value);\n        }\n    },\n        \n    // refresh\n    _refresh: function() {\n        if (this.row_count == 0) {\n            this.$tmessage.show();\n        } else {\n            this.$tmessage.hide();\n        }\n    },\n        \n    // load html template\n    _template: function(options) {\n        return  '<div>' +\n                    '<table class=\"' + options.cls + '\">' +\n                        '<thead></thead>' +\n                        '<tbody></tbody>' +\n                    '</table>' +\n                    '<tmessage>' + options.content + '</tmessage>' +\n                '<div>';\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n"]}