{"version":3,"sources":["mvc/ui/ui-popover.js"],"names":["define","Utils","View","Backbone","extend","optionsDefault","with_close","title","body","options","this","setElement","_template","uid","initialize","_","defaults","parent","el","$title","$close","$body","container","append","self","$","on","e","visible","is","target","hide","render","html","removeClass","addClass","$el","placement","css","show","off","newTitle","undefined","empty","remove","_get_placement","$container","top","width","container_height","_get_height","height","container_position","_get_width","indexOf","left","container_width","parseInt"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-popover.js","sourcesContent":["/**\n * Popover wrapper\n*/\ndefine([\"utils/utils\"], function(Utils) {\n    var View = Backbone.View.extend({\n        optionsDefault: {\n            with_close: true,\n            title: null,\n            placement: \"top\",\n            container: \"body\",\n            body: null\n        },\n\n        initialize: function(options) {\n            this.setElement(this._template());\n            this.uid = Utils.uid();\n            this.options = _.defaults(options || {}, this.optionsDefault);\n            this.options.container.parent().append(this.el);\n            this.$title = this.$(\".popover-title-label\");\n            this.$close = this.$(\".popover-close\");\n            this.$body = this.$(\".popover-content\");\n\n            // add initial content\n            this.options.body && this.append(this.options.body);\n\n            // add event to hide if click is outside of popup and not on container\n            var self = this;\n            $(\"body\").on(\"mousedown.\" + this.uid, function(e) {\n                // the 'is' for buttons that trigger popups\n                // the 'has' for icons within a button that triggers a popup\n                self.visible &&\n                    !$(self.options.container).is(e.target) &&\n                    !$(self.el).is(e.target) &&\n                    $(self.el).has(e.target).length === 0 &&\n                    self.hide();\n            });\n        },\n\n        /**\n     * Render popover\n    */\n        render: function() {\n            this.$title.html(this.options.title);\n            this.$el\n                .removeClass()\n                .addClass(\"ui-popover popover fade in\")\n                .addClass(this.options.placement);\n            this.$el.css(this._get_placement(this.options.placement));\n\n            // configure close option\n            var self = this;\n            if (this.options.with_close) {\n                this.$close\n                    .on(\"click\", function() {\n                        self.hide();\n                    })\n                    .show();\n            } else {\n                this.$close.off().hide();\n            }\n        },\n\n        /**\n     * Set the popover title\n     * @params{ String }    newTitle    - New popover title\n    */\n        title: function(newTitle) {\n            if (newTitle !== undefined) {\n                this.options.title = newTitle;\n                this.$title.html(newTitle);\n            }\n        },\n\n        /**\n     * Show popover\n    */\n        show: function() {\n            this.render();\n            this.$el.show();\n            this.visible = true;\n        },\n\n        /**\n     * Hide popover\n    */\n        hide: function() {\n            this.$el.hide();\n            this.visible = false;\n        },\n\n        /**\n     * Append new content to the popover\n     * @params{ Object }  $el - Dom element\n    */\n        append: function($el) {\n            this.$body.append($el);\n        },\n\n        /**\n     * Remove all content\n    */\n        empty: function() {\n            this.$body.empty();\n        },\n\n        /**\n     * Remove popover\n    */\n        remove: function() {\n            $(\"body\").off(\"mousedown.\" + this.uid);\n            this.$el.remove();\n        },\n\n        /**\n     * Improve popover location/placement\n    */\n        _get_placement: function(placement) {\n            // get popover dimensions\n            var width = this._get_width(this.$el);\n            var height = this.$el.height();\n\n            // get container details\n            var $container = this.options.container;\n            var container_width = this._get_width($container);\n            var container_height = this._get_height($container);\n            var container_position = $container.position();\n\n            // get position\n            var top, left;\n            top = left = 0;\n            if ([\"top\", \"bottom\"].indexOf(placement) != -1) {\n                left =\n                    container_position.left -\n                    width +\n                    (container_width + width) / 2;\n                switch (placement) {\n                    case \"top\":\n                        top = container_position.top - height - 5;\n                        break;\n                    case \"bottom\":\n                        top = container_position.top + container_height + 5;\n                        break;\n                }\n            } else {\n                top =\n                    container_position.top -\n                    height +\n                    (container_height + height) / 2;\n                switch (placement) {\n                    case \"right\":\n                        left = container_position.left + container_width;\n                        break;\n                }\n            }\n            return { top: top, left: left };\n        },\n\n        /**\n     * Returns padding/margin corrected width\n    */\n        _get_width: function($el) {\n            return (\n                $el.width() +\n                parseInt($el.css(\"padding-left\")) +\n                parseInt($el.css(\"margin-left\")) +\n                parseInt($el.css(\"padding-right\")) +\n                parseInt($el.css(\"margin-right\"))\n            );\n        },\n\n        /**\n     * Returns padding corrected height\n    */\n        _get_height: function($el) {\n            return (\n                $el.height() +\n                parseInt($el.css(\"padding-top\")) +\n                parseInt($el.css(\"padding-bottom\"))\n            );\n        },\n\n        /**\n     * Return the popover template\n    */\n        _template: function(options) {\n            return (\n                '<div class=\"ui-popover popover fade in\">' +\n                '<div class=\"arrow\"/>' +\n                '<div class=\"popover-title\">' +\n                '<div class=\"popover-title-label\"/>' +\n                '<div class=\"popover-close fa fa-times-circle\"/>' +\n                \"</div>\" +\n                '<div class=\"popover-content\"/>' +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}