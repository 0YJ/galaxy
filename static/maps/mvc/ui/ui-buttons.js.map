{"version":3,"sources":["mvc/ui/ui-buttons.js"],"names":["ButtonDefault","Backbone","View","extend","initialize","options","this","model","Model","id","_utils2","default","uid","title","icon","cls","wait","wait_text","wait_cls","disabled","setElement","$icon","$","$title","append","$progress_bar","listenTo","attr","render","self","attributes","$el","removeClass","onclick","tooltip","$progress","addClass","off","on","placement","css","prop","show","hide","html","disable","set","enable","ButtonLink","href","target","ButtonCheck","icons","value","onchange","new_val","total","ButtonIcon","get","$button","undefined","ButtonMenu","onunload","visible","tag","collection","display","e","preventDefault","remove","$menu","each","suboptions","submodel","addMenu","divider","Collection","where","length","$root","$link","add","merge"],"mappings":"4LAGIA,EAAgBC,SAASC,KAAKC,QAC9BC,WAAY,SAASC,GACjBC,KAAKC,MACAF,GAAWA,EAAQE,OACpB,IAAIN,SAASO,OACTC,GAAIC,EAAAC,QAAMC,MACVC,MAAO,GACPC,KAAM,GACNC,IAAK,kBACLC,MAAM,EACNC,UAAW,aACXC,SAAU,eAZ1BC,UAAA,EACInB,YAAgBC,IAChBG,IAAAA,GACIE,KAAAc,WAGQX,EAAAA,aACAI,KAAAA,OAFe,UAGfC,OAHeR,KAAAe,MAAAC,EAAA,SAIfP,OAAKT,KAAAiB,OAJUD,EAAA,YAKfN,OACAC,KAAAA,UAAWK,EANI,UAAAE,OAOfN,KAAUO,cAPKH,EAAA,aAWvBhB,KAAAoB,SAAKN,KAALb,MACM,SACGoB,KAAKC,OAAQtB,MAStBA,KAAAsB,UAIJA,OAAQ,WAARA,IAAAA,EAAQtB,KACJD,EAAIwB,KAAJtB,MAAAuB,WACAxB,KAAAyB,IACAC,cAQQV,SAAE,qBACFjB,SAAAA,EAAQ4B,UAAiBd,YATjCQ,KAWKO,KAAQ7B,EAASA,IACtBsB,KAAKQ,WACAC,EAASjB,UAEdkB,IAAKZ,SAGLa,GAAA,QAAWN,WACXV,EAAKC,YAAOS,OACR3B,EAAQW,UAAMa,EAAAV,UAAAd,EAAA4B,YAEdC,SAAKb,MAAMe,EAASF,QAAAK,UAAA,WACpBjC,KAAA6B,UAHJC,SAIO,YACHI,IAAA,WAAA,IAASJ,EAAS/B,WAAlB,QAAA,QACAC,KAAAmB,cACAW,SAAKb,gBACLlB,KAAAA,MAAQS,EACJT,WADJ,MAGHC,KAAAe,MAAAW,cAAAI,SAAA,WACJ9B,KAjEoCiB,OAAAS,cAAAI,SAAA,SAqD7B/B,EAAQW,MAchBV,KAAAyB,IAAAK,SAAA/B,EAAAa,UAAAuB,KAAA,YAAA,GACAC,KAAMrB,MAAAe,SAAW,sCACb9B,KAAKyB,OAAIW,KAATrC,EAAAY,aAXIX,KAAKyB,IAAIK,SAAS/B,EAAQU,KAclCT,KAAAe,MAAAe,SAAA/B,EAAAS,MACA6B,KAAMpB,OAAAqB,KAAAvC,EAAWQ,OACbR,EAAAS,MA1EiCT,EAAAQ,OA+DzBP,KAAKe,MAAMe,SAAS,qBAKhCM,KAAM,WAcNpC,KAAAyB,IAAAW,QATAC,KAAM,WAcNrC,KAAAyB,IAAAY,QATAE,QAAS,WAcTvC,KAAAC,MAAAuC,IAAA,YAAA,IATAC,OAAQ,WAcRzC,KAAAC,MAAAuC,IAAA,YAAA,IAjGqC9B,KAAzC,WAyFQV,KAAKC,MAAMuC,IAAI,QAAQ,IAgB3B1C,OAAAA,WACIE,KAAAC,MAAKA,IAAL,QACKF,IAKGU,QAAAA,SAAKD,GAJUR,KAAnBC,MAKOF,IAAAA,OAPXS,MAFJkC,EAAahD,EAAcG,QAe3ByB,WAAQ,SAAAvB,GACJC,KAAAC,MACAF,GACK2B,EADLzB,OAIQE,IAAAA,SAAIJ,OACJ4C,GAAAA,EAAAA,QAAM5C,MACNQ,MAAOR,GACP6C,KAAAA,GACA/B,IAAAA,KAEHe,IAAAA,GAGG7B,KAAAA,WAAQ4B,EAAAA,QAART,OAAoBnB,KAAQc,MAA5BG,EAAwCjB,aAC3CC,KAdLoB,SAAApB,KAAAC,MAAA,SAAAD,KAAAsB,OAAAtB,MAeAA,KAAAsB,UAjBJA,OAAQ,WAqBZ,IAAAvB,EAAAC,KAAAC,MAAAuB,WACIqB,KAAAA,IACA/C,cACIgC,SAAA/B,EACKA,KAEGI,MACAI,GAAAA,EAAOJ,GACP2C,KAAAA,EACIH,MADG,qBAKPI,MAAOhD,EARQQ,MASfyC,OAAAA,EAAUJ,QAAA,OACXJ,SAVHzC,EAFJc,WAkBAe,SAAKR,UAAcnB,WACnB8B,IAAKT,SArB0BU,GAAA,QAAA,WAPvBjC,EAAQ4B,UAAY5B,EAAQc,UAAYd,EAAQ4B,YAgCxD3B,KAAAe,MAAIQ,cAAJO,SAAA/B,EAAAS,SAWKqC,EATLlD,SAAAC,KAAAC,QAUAC,WAAA,SAAYwC,GACZtC,KAAAC,MAtC+BF,GAAAA,EAAAE,OAI3B,IAAIN,SAASO,OAwCrBC,GAAAC,EAAAC,QAAAC,MAtCYC,MAAO,sBACPuC,OACI,cACA,oBACA,qBAyCRG,MAAAA,EACAD,SAAIE,eACAD,IAAAA,GACHjD,KAAAc,WACDE,EAAA,UACAE,OAAKjB,KAALc,MAAeC,EAAA,YAClBE,OAAAlB,KAAAiB,OAAAD,EAAA,aAEJhB,KAAAoB,SAAApB,KAAAC,MAAA,SAAAD,KAAAsB,OAAAtB,MA3DLA,KAAAsB,UA+DAA,OAAI6B,SAAazD,GACbI,IAAAA,EAAAA,KACIC,EAAAC,KACKD,MAAAA,WAEGI,KAAAA,IACAI,SAAAA,mBACAC,IAAAA,SACAC,GAAAA,QAAK,WACLI,EAAAA,MAAU2B,IACPzC,QAGF,IAFJe,EAAAA,MACCsC,IAAA,UACQC,GAAL,GAMTtD,EAAA4B,SAAA5B,EAAA4B,YA7CA3B,KAAKiB,OAAOqB,KAAKvC,EAAQQ,OAgD7Be,KAAAA,MACII,cACAI,SAAI/B,2BACJ+B,SACKJ,EAAAA,MACAI,EAAS/B,SA3BgBgD,MAAtC,SAAAE,EAAAC,GAwDgB3C,YApEQ+C,IAAZL,IA4DZC,GAAA,IAAAD,IACIM,EAAa7D,IAAcG,GAAO,GAAA,GAElCC,KAAAA,MAAY0C,IAAA,QAAAS,GACRjD,KAAKC,MAALmD,IACKrD,WADLC,CACgBD,KAAQE,MAApBmD,IACA,WAEI7C,KAAAA,MAFe6C,IAAA,YAOfxB,EAAAA,EAPe/B,QAQf+C,WAAAA,SAAQ7C,GACR4C,KAAAA,MACAa,GAAAA,EAVevD,OAWfwD,IAAAA,SAASvD,OACTwD,GAAAA,EAAAA,QAAKpD,MACNkC,MAAIzC,GACXS,KAAKmD,GACLlD,IAAKK,iBAOLD,UAAc,IACd2B,IAAKpB,GAMLpB,KAAAc,WAlC8BE,EAAA,UAAAE,OApCrBlB,KAAKqD,QAAUrC,EAAE,UAyEtBE,OAAAlB,KAAWe,MAAAC,EAAA,SACXO,OAAJvB,KAAAiB,OAAAD,EAAA,cAQQ4C,KAAAA,SAAAA,KACI7D,MAAQ0D,SACRzD,KAAK2D,OAAAA,MAHR3D,KALTsB,UAmBQuC,OAAAA,SAAEC,GACF/D,IACHA,EATLC,KAAAC,MAAAuB,WAUAxB,KAAAyB,IAIAC,cAIA3B,SAAQS,EAAQT,KAChB+B,SAAA/B,EAAcc,UAAWkD,YACzB1C,KAAI,WAAKsC,EAAL9C,UACAQ,KAAA,KAAK2C,EAAU7D,IAIf4B,IAAA,SACHC,GAAA,QAAA,WACDhB,EAAK2C,YAAWM,QACZlE,EAAImE,UAAaC,EAAS3C,SAA1BzB,EAAA4B,YAEI3B,KAAAqD,QAGQV,SAAAA,UACAC,SAAAA,MAAAA,EAAQsB,QAAWtB,UAAAA,WAFjB5C,KAAAe,MAeFW,cACImC,SAAAA,WACAK,SAAAA,EAAAA,MACHlE,KAAAiB,OAAAa,SAAA,SAAAQ,KAAAvC,EAAAQ,OACJR,EAAAS,MArBLT,EAAAQ,OAAAP,KAAAe,MAAAe,SAAA,sBA2BXyB,EA7GiC7D,EAAAG,QAClCmE,MAAO,KA8GPlE,WAAA,SAAAC,GACAqE,KAAAA,MACIrE,GAAK4D,EACD1D,OACIM,IAAAA,SADiBL,OAEjB0C,GAAAA,GACAD,MAAM,GACNhB,KAAAA,QACA0C,KAAAA,KACAZ,QAAS,KACTjD,IAAAA,gCACAC,QAAK,GATbmC,OAAA,GAYHD,KAAA,GA7HLa,SAAA,KAgBgBC,SAAS,EACTC,IAAK,KAgHjBhE,IAAAA,GACAgD,KAAAA,WAAYA,IAFD/C,SAAA2E,WAGXnB,KAAAA,WACAN,EAAAA,UAAaA,OACbU,KAAYA,MAAAA,EAAAA,UA9GKrC,OAAQlB,KAAKe,MAAQC,EAAE,SACvBE,OAAQlB,KAAKiB,OAASD,EAAE,cAGrChB,KAAKoB,SAASpB,KAAKC,MAAO,SAAUD,KAAKsB,OAAQtB,MACjDA,KAAKoB,SACDpB,KAAK2D,WACL,0BACA3D,KAAKsB,OACLtB,MAEJA,KAAKsB,UAGTA,OAAQ,WACJ,IAAIC,EAAOvB,KACPD,EAAUC,KAAKC,MAAMuB,WACzBxB,KAAKyB,IACAC,cACAI,SAAS,YACTA,SAAS/B,EAAQU,KACjBY,KAAK,KAAMtB,EAAQI,IACnB+B,KACG0B,QACI7D,EAAQ0D,SACRzD,KAAK2D,WAAWY,OAAQd,SAAS,IAAQe,OAAS,EAC5C,QACA,SAElBxE,KAAKyE,MACA3C,SAAS,+BACTT,KAAK,cAAe,YACpBO,SAAUrB,MAAOR,EAAQ6B,QAASK,UAAW,WAC7CF,IAAI,SACJC,GAAG,QAAS,SAAA6B,GACT7C,EAAE,YAAYqB,OACdwB,EAAEC,iBACF/D,EAAQ4B,SAAW5B,EAAQ4B,YAEnC3B,KAAKe,MACAW,cACAI,SAAS,WACTA,SAAS/B,EAAQS,MACtBR,KAAKiB,OACAS,cACAI,SAAS,SACTQ,KAAKvC,EAAQQ,OAClBR,EAAQS,MAAQT,EAAQQ,OAASP,KAAKe,MAAMe,SAAS,mBACrD9B,KAAKgE,OAAShE,KAAKgE,MAAMD,SACrB/D,KAAK2D,WAAWa,OAAS,IACzBxE,KAAKgE,MAAQhD,EAAE,SACVc,SAAS,sBACTA,SAAS,QAAUP,EAAKtB,MAAMmD,IAAI,SAClC/B,KAAK,OAAQ,QAClBrB,KAAKyB,IAAIP,OAAOlB,KAAKgE,QAEzBhE,KAAK2D,WAAWM,KAAK,SAAAE,GACjB,IAAID,EAAaC,EAAS3C,WAC1B,GAAI0C,EAAWT,QAAS,CACpB,IAAIiB,EAAQ1D,EAAE,QACTc,SAAS,iBACTT,MACGsB,KAAMuB,EAAWvB,KACjBC,OAAQsB,EAAWtB,SAEtB1B,OACGF,EAAE,QACGc,SAAS,MACTA,SAASoC,EAAW1D,MACpB0B,IACG,UACAgC,EAAW1D,KAAO,eAAiB,SAG9CU,OAAOgD,EAAW3D,OAClByB,GAAG,QAAS,SAAA6B,GACLK,EAAWvC,UACXkC,EAAEC,iBACFI,EAAWvC,aAGvBJ,EAAKyC,MAAM9C,OAAOF,EAAE,SAASE,OAAOwD,IACpCR,EAAWG,SACP9C,EAAKyC,MAAM9C,OAAOF,EAAE,SAASc,SAAS,gBAMtDsC,QAAS,SAASrE,GACdC,KAAK2D,WAAWgB,IACZvE,EAAAC,QAAMuE,MAAM7E,GACRQ,MAAO,GACPqC,OAAQ,GACRD,KAAM,GACNhB,QAAS,KACT0C,SAAS,EACTZ,SAAS,EACTjD,KAAM,KACNC,IAAK,yCAOjBf,cAAeA,EACfgD,WAAYA,EACZS,WAAYA,EACZN,YAAaA,EACbU,WAAYA","file":"../../../scripts/mvc/ui/ui-buttons.js","sourcesContent":["/** This module contains all button views. */\nimport Utils from \"utils/utils\";\n/** This renders the default button which is used e.g. at the bottom of the upload modal. */\nvar ButtonDefault = Backbone.View.extend({\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                title: \"\",\n                icon: \"\",\n                cls: \"btn btn-default\",\n                wait: false,\n                wait_text: \"Sending...\",\n                wait_cls: \"btn btn-info\",\n                disabled: false,\n                percentage: -1\n            }).set(options);\n        this.setElement(\n            $(\"<button/>\")\n                .attr(\"type\", \"button\")\n                .append((this.$icon = $(\"<i/>\")))\n                .append((this.$title = $(\"<span/>\")))\n                .append(\n                    (this.$progress = $(\"<div/>\").append(\n                        (this.$progress_bar = $(\"<div/>\"))\n                    ))\n                )\n        );\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el\n            .removeClass()\n            .addClass(\"ui-button-default\")\n            .addClass(options.disabled && \"disabled\")\n            .attr(\"id\", options.id)\n            .attr(\"disabled\", options.disabled)\n            .off(\"click\")\n            .on(\"click\", () => {\n                $(\".tooltip\").hide();\n                options.onclick && !self.disabled && options.onclick();\n            })\n            .tooltip({ title: options.tooltip, placement: \"bottom\" });\n        this.$progress\n            .addClass(\"progress\")\n            .css(\"display\", options.percentage !== -1 ? \"block\" : \"none\");\n        this.$progress_bar\n            .addClass(\"progress-bar\")\n            .css({ width: options.percentage + \"%\" });\n        this.$icon.removeClass().addClass(\"icon fa\");\n        this.$title.removeClass().addClass(\"title\");\n        if (options.wait) {\n            this.$el.addClass(options.wait_cls).prop(\"disabled\", true);\n            this.$icon.addClass(\"fa-spinner fa-spin ui-margin-right\");\n            this.$title.html(options.wait_text);\n        } else {\n            this.$el.addClass(options.cls);\n            this.$icon.addClass(options.icon);\n            this.$title.html(options.title);\n            options.icon &&\n                options.title &&\n                this.$icon.addClass(\"ui-margin-right\");\n        }\n    },\n\n    /** Show button */\n    show: function() {\n        this.$el.show();\n    },\n\n    /** Hide button */\n    hide: function() {\n        this.$el.hide();\n    },\n\n    /** Disable button */\n    disable: function() {\n        this.model.set(\"disabled\", true);\n    },\n\n    /** Enable button */\n    enable: function() {\n        this.model.set(\"disabled\", false);\n    },\n\n    /** Show spinner to indicate that the button is not ready to be clicked */\n    wait: function() {\n        this.model.set(\"wait\", true);\n    },\n\n    /** Hide spinner to indicate that the button is ready to be clicked */\n    unwait: function() {\n        this.model.set(\"wait\", false);\n    },\n\n    /** Change icon */\n    setIcon: function(icon) {\n        this.model.set(\"icon\", icon);\n    }\n});\n\n/** This button allows the right-click/open-in-new-tab feature, its used e.g. for panel buttons. */\nvar ButtonLink = ButtonDefault.extend({\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                title: \"\",\n                icon: \"\",\n                cls: \"\"\n            }).set(options);\n        this.setElement($(\"<a/>\").append((this.$icon = $(\"<span/>\"))));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function() {\n        var options = this.model.attributes;\n        this.$el\n            .removeClass()\n            .addClass(options.cls)\n            .attr({\n                id: options.id,\n                href: options.href || \"javascript:void(0)\",\n                title: options.title,\n                target: options.target || \"_top\",\n                disabled: options.disabled\n            })\n            .tooltip({ placement: \"bottom\" })\n            .off(\"click\")\n            .on(\"click\", () => {\n                options.onclick && !options.disabled && options.onclick();\n            });\n        this.$icon.removeClass().addClass(options.icon);\n    }\n});\n\n/** The check button is used in the tool form and allows to distinguish between multiple states e.g. all, partially and nothing selected. */\nvar ButtonCheck = Backbone.View.extend({\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                title: \"Select/Unselect all\",\n                icons: [\n                    \"fa-square-o\",\n                    \"fa-minus-square-o\",\n                    \"fa-check-square-o\"\n                ],\n                value: 0,\n                onchange: function() {}\n            }).set(options);\n        this.setElement(\n            $(\"<div/>\")\n                .append((this.$icon = $(\"<span/>\")))\n                .append((this.$title = $(\"<span/>\")))\n        );\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function(options) {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el\n            .addClass(\"ui-button-check\")\n            .off(\"click\")\n            .on(\"click\", () => {\n                self.model.set(\n                    \"value\",\n                    (self.model.get(\"value\") === 0 && 2) || 0\n                );\n                options.onclick && options.onclick();\n            });\n        this.$title.html(options.title);\n        this.$icon\n            .removeClass()\n            .addClass(\"icon fa ui-margin-right\")\n            .addClass(options.icons[options.value]);\n    },\n\n    /* Sets a new value and/or returns the value.\n        * @param{Integer}   new_val - Set a new value 0=unchecked, 1=partial and 2=checked.\n        * OR:\n        * @param{Integer}   new_val - Number of selected options.\n        * @param{Integer}   total   - Total number of available options.\n        */\n    value: function(new_val, total) {\n        if (new_val !== undefined) {\n            if (total && new_val !== 0) {\n                new_val = (new_val !== total && 1) || 2;\n            }\n            this.model.set(\"value\", new_val);\n            this.model.get(\"onchange\")(this.model.get(\"value\"));\n        }\n        return this.model.get(\"value\");\n    }\n});\n\n/** This renders a differently styled, more compact button version. */\nvar ButtonIcon = ButtonDefault.extend({\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                title: \"\",\n                icon: \"\",\n                cls: \"ui-button-icon\",\n                disabled: false\n            }).set(options);\n        this.setElement(\n            $(\"<div/>\").append(\n                (this.$button = $(\"<div/>\")\n                    .append((this.$icon = $(\"<i/>\")))\n                    .append((this.$title = $(\"<span/>\"))))\n            )\n        );\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function(options) {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el\n            .removeClass()\n            .addClass(options.cls)\n            .addClass(options.disabled && \"disabled\")\n            .attr(\"disabled\", options.disabled)\n            .attr(\"id\", options.id)\n            .off(\"click\")\n            .on(\"click\", () => {\n                $(\".tooltip\").hide();\n                !options.disabled && options.onclick && options.onclick();\n            });\n        this.$button\n            .addClass(\"button\")\n            .tooltip({ title: options.tooltip, placement: \"bottom\" });\n        this.$icon\n            .removeClass()\n            .addClass(\"icon fa\")\n            .addClass(options.icon);\n        this.$title.addClass(\"title\").html(options.title);\n        options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n    }\n});\n\n/** This class creates a button with dropdown menu. */\nvar ButtonMenu = ButtonDefault.extend({\n    $menu: null,\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: \"\",\n                title: \"\",\n                pull: \"right\",\n                icon: null,\n                onclick: null,\n                cls: \"ui-button-icon ui-button-menu\",\n                tooltip: \"\",\n                target: \"\",\n                href: \"\",\n                onunload: null,\n                visible: true,\n                tag: \"\"\n            }).set(options);\n        this.collection = new Backbone.Collection();\n        this.setElement(\n            $(\"<div/>\").append(\n                (this.$root = $(\"<div/>\")\n                    .append((this.$icon = $(\"<i/>\")))\n                    .append((this.$title = $(\"<span/>\"))))\n            )\n        );\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.listenTo(\n            this.collection,\n            \"change add remove reset\",\n            this.render,\n            this\n        );\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el\n            .removeClass()\n            .addClass(\"dropdown\")\n            .addClass(options.cls)\n            .attr(\"id\", options.id)\n            .css({\n                display:\n                    options.visible &&\n                    this.collection.where({ visible: true }).length > 0\n                        ? \"block\"\n                        : \"none\"\n            });\n        this.$root\n            .addClass(\"root button dropdown-toggle\")\n            .attr(\"data-toggle\", \"dropdown\")\n            .tooltip({ title: options.tooltip, placement: \"bottom\" })\n            .off(\"click\")\n            .on(\"click\", e => {\n                $(\".tooltip\").hide();\n                e.preventDefault();\n                options.onclick && options.onclick();\n            });\n        this.$icon\n            .removeClass()\n            .addClass(\"icon fa\")\n            .addClass(options.icon);\n        this.$title\n            .removeClass()\n            .addClass(\"title\")\n            .html(options.title);\n        options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n        this.$menu && this.$menu.remove();\n        if (this.collection.length > 0) {\n            this.$menu = $(\"<ul/>\")\n                .addClass(\"menu dropdown-menu\")\n                .addClass(\"pull-\" + self.model.get(\"pull\"))\n                .attr(\"role\", \"menu\");\n            this.$el.append(this.$menu);\n        }\n        this.collection.each(submodel => {\n            var suboptions = submodel.attributes;\n            if (suboptions.visible) {\n                var $link = $(\"<a/>\")\n                    .addClass(\"dropdown-item\")\n                    .attr({\n                        href: suboptions.href,\n                        target: suboptions.target\n                    })\n                    .append(\n                        $(\"<i/>\")\n                            .addClass(\"fa\")\n                            .addClass(suboptions.icon)\n                            .css(\n                                \"display\",\n                                suboptions.icon ? \"inline-block\" : \"none\"\n                            )\n                    )\n                    .append(suboptions.title)\n                    .on(\"click\", e => {\n                        if (suboptions.onclick) {\n                            e.preventDefault();\n                            suboptions.onclick();\n                        }\n                    });\n                self.$menu.append($(\"<li/>\").append($link));\n                suboptions.divider &&\n                    self.$menu.append($(\"<li/>\").addClass(\"divider\"));\n            }\n        });\n    },\n\n    /** Add a new menu item */\n    addMenu: function(options) {\n        this.collection.add(\n            Utils.merge(options, {\n                title: \"\",\n                target: \"\",\n                href: \"\",\n                onclick: null,\n                divider: false,\n                visible: true,\n                icon: null,\n                cls: \"button-menu btn-group\"\n            })\n        );\n    }\n});\n\nexport default {\n    ButtonDefault: ButtonDefault,\n    ButtonLink: ButtonLink,\n    ButtonIcon: ButtonIcon,\n    ButtonCheck: ButtonCheck,\n    ButtonMenu: ButtonMenu\n};\n"]}