{"version":3,"sources":["mvc/ui/ui-buttons.js"],"names":["define","Utils","ButtonDefault","Backbone","View","extend","initialize","options","this","model","Model","id","uid","title","floating","icon","cls","wait","wait_text","wait_cls","disabled","percentage","set","setElement","$","attr","append","$icon","$title","$progress","$progress_bar","listenTo","render","self","attributes","$el","removeClass","addClass","css","off","on","hide","onclick","tooltip","placement","width","prop","html","show","disable","enable","unwait","setIcon","ButtonLink","href","target","ButtonCheck","icons","value","onchange","get","new_val","total","undefined","ButtonIcon","$button","ButtonMenu","$menu","pull","onunload","visible","tag","collection","Collection","$root","float","display","where","length","e","preventDefault","remove","each","submodel","suboptions","$link","divider","addMenu","add","merge"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-buttons.js","sourcesContent":["/** This module contains all button views. */\ndefine( [ 'utils/utils' ], function( Utils ) {\n    /** This renders the default button which is used e.g. at the bottom of the upload modal. */\n    var ButtonDefault = Backbone.View.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id          : Utils.uid(),\n                title       : '',\n                floating    : 'right',\n                icon        : '',\n                cls         : 'btn btn-default',\n                wait        : false,\n                wait_text   : 'Sending...',\n                wait_cls    : 'btn btn-info',\n                disabled    : false,\n                percentage  : -1\n            }).set( options );\n            this.setElement( $( '<button/>' ).attr( 'type', 'button' )\n                                             .append( this.$icon        = $( '<i/>' ) )\n                                             .append( this.$title       = $( '<span/>' ) )\n                                             .append( this.$progress    = $( '<div/>' ).append( this.$progress_bar = $( '<div/>' ) ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass()\n                    .addClass( 'ui-button-default' )\n                    .addClass( options.disabled && 'disabled' )\n                    .attr( 'id', options.id )\n                    .attr( 'disabled', options.disabled )\n                    .css( 'float', options.floating )\n                    .off( 'click' ).on( 'click' , function() {\n                        $( '.tooltip' ).hide();\n                        options.onclick && !self.disabled && options.onclick();\n                    })\n                    .tooltip( { title: options.tooltip, placement: 'bottom' } );\n            this.$progress.addClass( 'progress' ).css( 'display', options.percentage !== -1 ? 'block' : 'none' );\n            this.$progress_bar.addClass( 'progress-bar' ).css( { width : options.percentage + '%' } );\n            this.$icon.removeClass().addClass( 'icon fa' );\n            this.$title.removeClass().addClass( 'title' );\n            if ( options.wait ) {\n                this.$el.addClass( options.wait_cls ).prop( 'disabled', true );\n                this.$icon.addClass( 'fa-spinner fa-spin ui-margin-right' );\n                this.$title.html( options.wait_text );\n            } else {\n                this.$el.addClass( options.cls );\n                this.$icon.addClass( options.icon );\n                this.$title.html( options.title );\n                options.icon && options.title && this.$icon.addClass( 'ui-margin-right' );\n            }\n        },\n\n        /** Show button */\n        show: function() {\n            this.$el.show();\n        },\n\n        /** Hide button */\n        hide: function() {\n            this.$el.hide();\n        },\n\n        /** Disable button */\n        disable: function() {\n            this.model.set( 'disabled', true );\n        },\n\n        /** Enable button */\n        enable: function() {\n            this.model.set( 'disabled', false );\n        },\n\n        /** Show spinner to indicate that the button is not ready to be clicked */\n        wait: function() {\n            this.model.set( 'wait', true );\n        },\n\n        /** Hide spinner to indicate that the button is ready to be clicked */\n        unwait: function() {\n            this.model.set( 'wait', false );\n        },\n\n        /** Change icon */\n        setIcon: function( icon ) {\n            this.model.set( 'icon', icon );\n        }\n    });\n\n    /** This button allows the right-click/open-in-new-tab feature, its used e.g. for panel buttons. */\n    var ButtonLink = ButtonDefault.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id          : Utils.uid(),\n                title       : '',\n                icon        : '',\n                cls         : ''\n            }).set( options );\n            this.setElement( $( '<a/>' ).append( this.$icon  = $( '<span/>' ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render: function() {\n            var options = this.model.attributes;\n            this.$el.removeClass()\n                    .addClass( options.cls )\n                    .attr( { id         : options.id,\n                             href       : options.href || 'javascript:void(0)',\n                             title      : options.title,\n                             target     : options.target || '_top',\n                             disabled   : options.disabled } )\n                    .off( 'click' ).on( 'click' , function() {\n                        options.onclick && !options.disabled && options.onclick();\n                    });\n            this.$icon.removeClass().addClass( options.icon );\n        }\n    });\n\n    /** The check button is used in the tool form and allows to distinguish between multiple states e.g. all, partially and nothing selected. */\n    var ButtonCheck = Backbone.View.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id          : Utils.uid(),\n                title       : 'Select/Unselect all',\n                icons       : [ 'fa-square-o', 'fa-minus-square-o', 'fa-check-square-o' ],\n                value       : 0,\n                onchange    : function(){}\n            }).set( options );\n            this.setElement( $( '<div/>' ).append( this.$icon   = $( '<span/>' ) )\n                                          .append( this.$title  = $( '<span/>' ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render: function( options ) {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.addClass( 'ui-button-check' )\n                    .off( 'click' ).on('click', function() {\n                        self.model.set( 'value', ( self.model.get( 'value' ) === 0 && 2 ) || 0 );\n                        options.onclick && options.onclick();\n                    });\n            this.$title.html( options.title );\n            this.$icon.removeClass()\n                      .addClass( 'icon fa ui-margin-right' )\n                      .addClass( options.icons[ options.value ] );\n        },\n\n        /* Sets a new value and/or returns the value.\n        * @param{Integer}   new_val - Set a new value 0=unchecked, 1=partial and 2=checked.\n        * OR:\n        * @param{Integer}   new_val - Number of selected options.\n        * @param{Integer}   total   - Total number of available options.\n        */\n        value: function ( new_val, total ) {\n            if ( new_val !== undefined ) {\n                if ( total && new_val !== 0 ) {\n                    new_val = ( new_val !== total ) && 1 || 2;\n                }\n                this.model.set( 'value', new_val );\n                this.model.get( 'onchange' )( this.model.get( 'value' ) );\n            }\n            return this.model.get( 'value' );\n        }\n    });\n\n    /** This renders a differently styled, more compact button version. */\n    var ButtonIcon = ButtonDefault.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id          : Utils.uid(),\n                title       : '',\n                floating    : 'right',\n                icon        : '',\n                cls         : 'ui-button-icon',\n                disabled    : false\n            }).set( options );\n            this.setElement( $( '<div/>' ).append( this.$button = $( '<div/>' ).append( this.$icon  = $( '<i/>' ) )\n                                                                               .append( this.$title = $( '<span/>' ) ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render : function( options ) {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass()\n                    .addClass( options.cls )\n                    .addClass( options.disabled && 'disabled' )\n                    .attr( 'disabled', options.disabled )\n                    .attr( 'id', options.id )\n                    .css( 'float', options.floating )\n                    .off( 'click' ).on( 'click', function() {\n                        $( '.tooltip' ).hide();\n                        !options.disabled && options.onclick && options.onclick();\n                    });\n            this.$button.addClass( 'button' ).tooltip( { title: options.tooltip, placement: 'bottom' } );\n            this.$icon.removeClass().addClass( 'icon fa' ).addClass( options.icon );\n            this.$title.addClass( 'title' ).html( options.title );\n            options.icon && options.title && this.$icon.addClass( 'ui-margin-right' );\n        }\n    });\n\n    /** This class creates a button with dropdown menu. */\n    var ButtonMenu = ButtonDefault.extend({\n        $menu: null,\n        initialize: function ( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id              : '',\n                title           : '',\n                floating        : 'right',\n                pull            : 'right',\n                icon            : null,\n                onclick         : null,\n                cls             : 'ui-button-icon ui-button-menu',\n                tooltip         : '',\n                target          : '',\n                href            : '',\n                onunload        : null,\n                visible         : true,\n                tag             : ''\n            }).set( options );\n            this.collection = new Backbone.Collection();\n            this.setElement( $( '<div/>' ).append( this.$root = $( '<div/>' ).append( this.$icon  = $( '<i/>' ) )\n                                                                             .append( this.$title = $( '<span/>' ) ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.listenTo( this.collection, 'change add remove reset', this.render, this );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass()\n                    .addClass( 'dropdown' )\n                    .addClass( options.cls )\n                    .attr( 'id', options.id )\n                    .css( { float   : options.floating,\n                            display : options.visible && this.collection.where( { visible: true } ).length > 0 ? 'block' : 'none' } );\n            this.$root.addClass( 'root button dropdown-toggle' )\n                      .attr( 'data-toggle', 'dropdown' )\n                      .tooltip( { title: options.tooltip, placement: 'bottom' } )\n                      .off( 'click' ).on( 'click', function( e ) {\n                            $( '.tooltip' ).hide();\n                            e.preventDefault();\n                            options.onclick && options.onclick();\n                      } );\n            this.$icon.removeClass().addClass( 'icon fa' ).addClass( options.icon );\n            this.$title.removeClass().addClass( 'title' ).html( options.title );\n            options.icon && options.title && this.$icon.addClass( 'ui-margin-right' );\n            this.$menu && this.$menu.remove();\n            if ( this.collection.length > 0 ) {\n                this.$menu = $( '<ul/>' ).addClass( 'menu dropdown-menu' )\n                                         .addClass( 'pull-' + self.model.get( 'pull' ) )\n                                         .attr( 'role', 'menu' );\n                this.$el.append( this.$menu );\n            }\n            this.collection.each( function( submodel ) {\n                var suboptions = submodel.attributes;\n                if ( suboptions.visible ) {\n                    var $link = $( '<a/>' ).addClass( 'dropdown-item' )\n                                           .attr( { href : suboptions.href, target : suboptions.target } )\n                                           .append( $( '<i/>' ).addClass( 'fa' )\n                                                               .addClass( suboptions.icon )\n                                                               .css( 'display', suboptions.icon ? 'inline-block' : 'none' ) )\n                                           .append( suboptions.title )\n                                           .on( 'click', function( e ) {\n                                                if ( suboptions.onclick ) {\n                                                    e.preventDefault();\n                                                    suboptions.onclick();\n                                                }\n                                           } );\n                    self.$menu.append( $( '<li/>' ).append( $link ) );\n                    suboptions.divider && self.$menu.append( $( '<li/>' ).addClass( 'divider' ) );\n                }\n            });\n        },\n\n        /** Add a new menu item */\n        addMenu: function ( options ) {\n            this.collection.add( Utils.merge( options, {\n                title       : '',\n                target      : '',\n                href        : '',\n                onclick     : null,\n                divider     : false,\n                visible     : true,\n                icon        : null,\n                cls         : 'button-menu btn-group'\n            }));\n        }\n    });\n\n    return {\n        ButtonDefault   : ButtonDefault,\n        ButtonLink      : ButtonLink,\n        ButtonIcon      : ButtonIcon,\n        ButtonCheck     : ButtonCheck,\n        ButtonMenu      : ButtonMenu\n    }\n});\n"]}