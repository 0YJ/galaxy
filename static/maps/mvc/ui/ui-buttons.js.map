{"version":3,"sources":["mvc/ui/ui-buttons.js"],"names":["define","Utils","ButtonDefault","Backbone","View","initialize","options","model","Model","uid","title","id","icon","cls","wait","wait_text","wait_cls","disabled","percentage","$","attr","append","this","$icon","$title","render","$progress","$progress_bar","self","removeClass","addClass","tooltip","placement","on","onclick","css","width","$el","html","show","hide","disable","set","enable","unwait","ButtonLink","extend","setElement","listenTo","href","attributes","target","value","ButtonCheck","off","new_val","total","get","undefined","icons","ButtonIcon","$menu","pull","onunload","visible","tag","ButtonMenu","e","collection","$root","submodel","suboptions","divider","display","where","length","add","preventDefault","remove","$link","addMenu","merge"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-buttons.js","sourcesContent":["/** This module contains all button views. */\ndefine( [ 'utils/utils' ], function( Utils ) {\n    /** This renders the default button which is used e.g. at the bottom of the upload modal. */\n    var ButtonDefault = Backbone.View.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id          : Utils.uid(),\n                title       : '',\n                icon        : '',\n                cls         : 'btn btn-default',\n                wait        : false,\n                wait_text   : 'Sending...',\n                wait_cls    : 'btn btn-info',\n                disabled    : false,\n                percentage  : -1\n            }).set( options );\n            this.setElement( $( '<button/>' ).attr( 'type', 'button' )\n                                             .append( this.$icon        = $( '<i/>' ) )\n                                             .append( this.$title       = $( '<span/>' ) )\n                                             .append( this.$progress    = $( '<div/>' ).append( this.$progress_bar = $( '<div/>' ) ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass()\n                    .addClass( 'ui-button-default' )\n                    .addClass( options.disabled && 'disabled' )\n                    .attr( 'id', options.id )\n                    .attr( 'disabled', options.disabled )\n                    .off( 'click' ).on( 'click' , function() {\n                        $( '.tooltip' ).hide();\n                        options.onclick && !self.disabled && options.onclick();\n                    })\n                    .tooltip( { title: options.tooltip, placement: 'bottom' } );\n            this.$progress.addClass( 'progress' ).css( 'display', options.percentage !== -1 ? 'block' : 'none' );\n            this.$progress_bar.addClass( 'progress-bar' ).css( { width : options.percentage + '%' } );\n            this.$icon.removeClass().addClass( 'icon fa' );\n            this.$title.removeClass().addClass( 'title' );\n            if ( options.wait ) {\n                this.$el.addClass( options.wait_cls ).prop( 'disabled', true );\n                this.$icon.addClass( 'fa-spinner fa-spin ui-margin-right' );\n                this.$title.html( options.wait_text );\n            } else {\n                this.$el.addClass( options.cls );\n                this.$icon.addClass( options.icon );\n                this.$title.html( options.title );\n                options.icon && options.title && this.$icon.addClass( 'ui-margin-right' );\n            }\n        },\n\n        /** Show button */\n        show: function() {\n            this.$el.show();\n        },\n\n        /** Hide button */\n        hide: function() {\n            this.$el.hide();\n        },\n\n        /** Disable button */\n        disable: function() {\n            this.model.set( 'disabled', true );\n        },\n\n        /** Enable button */\n        enable: function() {\n            this.model.set( 'disabled', false );\n        },\n\n        /** Show spinner to indicate that the button is not ready to be clicked */\n        wait: function() {\n            this.model.set( 'wait', true );\n        },\n\n        /** Hide spinner to indicate that the button is ready to be clicked */\n        unwait: function() {\n            this.model.set( 'wait', false );\n        },\n\n        /** Change icon */\n        setIcon: function( icon ) {\n            this.model.set( 'icon', icon );\n        }\n    });\n\n    /** This button allows the right-click/open-in-new-tab feature, its used e.g. for panel buttons. */\n    var ButtonLink = ButtonDefault.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id          : Utils.uid(),\n                title       : '',\n                icon        : '',\n                cls         : ''\n            }).set( options );\n            this.setElement( $( '<a/>' ).append( this.$icon  = $( '<span/>' ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render: function() {\n            var options = this.model.attributes;\n            this.$el.removeClass()\n                    .addClass( options.cls )\n                    .attr( { id         : options.id,\n                             href       : options.href || 'javascript:void(0)',\n                             title      : options.title,\n                             target     : options.target || '_top',\n                             disabled   : options.disabled } )\n                    .tooltip( { placement: 'bottom' } )\n                    .off( 'click' ).on( 'click' , function() {\n                        options.onclick && !options.disabled && options.onclick();\n                    });\n            this.$icon.removeClass().addClass( options.icon );\n        }\n    });\n\n    /** The check button is used in the tool form and allows to distinguish between multiple states e.g. all, partially and nothing selected. */\n    var ButtonCheck = Backbone.View.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id          : Utils.uid(),\n                title       : 'Select/Unselect all',\n                icons       : [ 'fa-square-o', 'fa-minus-square-o', 'fa-check-square-o' ],\n                value       : 0,\n                onchange    : function(){}\n            }).set( options );\n            this.setElement( $( '<div/>' ).append( this.$icon   = $( '<span/>' ) )\n                                          .append( this.$title  = $( '<span/>' ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render: function( options ) {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.addClass( 'ui-button-check' )\n                    .off( 'click' ).on('click', function() {\n                        self.model.set( 'value', ( self.model.get( 'value' ) === 0 && 2 ) || 0 );\n                        options.onclick && options.onclick();\n                    });\n            this.$title.html( options.title );\n            this.$icon.removeClass()\n                      .addClass( 'icon fa ui-margin-right' )\n                      .addClass( options.icons[ options.value ] );\n        },\n\n        /* Sets a new value and/or returns the value.\n        * @param{Integer}   new_val - Set a new value 0=unchecked, 1=partial and 2=checked.\n        * OR:\n        * @param{Integer}   new_val - Number of selected options.\n        * @param{Integer}   total   - Total number of available options.\n        */\n        value: function ( new_val, total ) {\n            if ( new_val !== undefined ) {\n                if ( total && new_val !== 0 ) {\n                    new_val = ( new_val !== total ) && 1 || 2;\n                }\n                this.model.set( 'value', new_val );\n                this.model.get( 'onchange' )( this.model.get( 'value' ) );\n            }\n            return this.model.get( 'value' );\n        }\n    });\n\n    /** This renders a differently styled, more compact button version. */\n    var ButtonIcon = ButtonDefault.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id          : Utils.uid(),\n                title       : '',\n                icon        : '',\n                cls         : 'ui-button-icon',\n                disabled    : false\n            }).set( options );\n            this.setElement( $( '<div/>' ).append( this.$button = $( '<div/>' ).append( this.$icon  = $( '<i/>' ) )\n                                                                               .append( this.$title = $( '<span/>' ) ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render : function( options ) {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass()\n                    .addClass( options.cls )\n                    .addClass( options.disabled && 'disabled' )\n                    .attr( 'disabled', options.disabled )\n                    .attr( 'id', options.id )\n                    .off( 'click' ).on( 'click', function() {\n                        $( '.tooltip' ).hide();\n                        !options.disabled && options.onclick && options.onclick();\n                    });\n            this.$button.addClass( 'button' ).tooltip( { title: options.tooltip, placement: 'bottom' } );\n            this.$icon.removeClass().addClass( 'icon fa' ).addClass( options.icon );\n            this.$title.addClass( 'title' ).html( options.title );\n            options.icon && options.title && this.$icon.addClass( 'ui-margin-right' );\n        }\n    });\n\n    /** This class creates a button with dropdown menu. */\n    var ButtonMenu = ButtonDefault.extend({\n        $menu: null,\n        initialize: function ( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id              : '',\n                title           : '',\n                pull            : 'right',\n                icon            : null,\n                onclick         : null,\n                cls             : 'ui-button-icon ui-button-menu',\n                tooltip         : '',\n                target          : '',\n                href            : '',\n                onunload        : null,\n                visible         : true,\n                tag             : ''\n            }).set( options );\n            this.collection = new Backbone.Collection();\n            this.setElement( $( '<div/>' ).append( this.$root = $( '<div/>' ).append( this.$icon  = $( '<i/>' ) )\n                                                                             .append( this.$title = $( '<span/>' ) ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.listenTo( this.collection, 'change add remove reset', this.render, this );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass()\n                    .addClass( 'dropdown' )\n                    .addClass( options.cls )\n                    .attr( 'id', options.id )\n                    .css( { display : options.visible && this.collection.where( { visible: true } ).length > 0 ? 'block' : 'none' } );\n            this.$root.addClass( 'root button dropdown-toggle' )\n                      .attr( 'data-toggle', 'dropdown' )\n                      .tooltip( { title: options.tooltip, placement: 'bottom' } )\n                      .off( 'click' ).on( 'click', function( e ) {\n                            $( '.tooltip' ).hide();\n                            e.preventDefault();\n                            options.onclick && options.onclick();\n                      } );\n            this.$icon.removeClass().addClass( 'icon fa' ).addClass( options.icon );\n            this.$title.removeClass().addClass( 'title' ).html( options.title );\n            options.icon && options.title && this.$icon.addClass( 'ui-margin-right' );\n            this.$menu && this.$menu.remove();\n            if ( this.collection.length > 0 ) {\n                this.$menu = $( '<ul/>' ).addClass( 'menu dropdown-menu' )\n                                         .addClass( 'pull-' + self.model.get( 'pull' ) )\n                                         .attr( 'role', 'menu' );\n                this.$el.append( this.$menu );\n            }\n            this.collection.each( function( submodel ) {\n                var suboptions = submodel.attributes;\n                if ( suboptions.visible ) {\n                    var $link = $( '<a/>' ).addClass( 'dropdown-item' )\n                                           .attr( { href : suboptions.href, target : suboptions.target } )\n                                           .append( $( '<i/>' ).addClass( 'fa' )\n                                                               .addClass( suboptions.icon )\n                                                               .css( 'display', suboptions.icon ? 'inline-block' : 'none' ) )\n                                           .append( suboptions.title )\n                                           .on( 'click', function( e ) {\n                                                if ( suboptions.onclick ) {\n                                                    e.preventDefault();\n                                                    suboptions.onclick();\n                                                }\n                                           } );\n                    self.$menu.append( $( '<li/>' ).append( $link ) );\n                    suboptions.divider && self.$menu.append( $( '<li/>' ).addClass( 'divider' ) );\n                }\n            });\n        },\n\n        /** Add a new menu item */\n        addMenu: function ( options ) {\n            this.collection.add( Utils.merge( options, {\n                title       : '',\n                target      : '',\n                href        : '',\n                onclick     : null,\n                divider     : false,\n                visible     : true,\n                icon        : null,\n                cls         : 'button-menu btn-group'\n            }));\n        }\n    });\n\n    return {\n        ButtonDefault   : ButtonDefault,\n        ButtonLink      : ButtonLink,\n        ButtonIcon      : ButtonIcon,\n        ButtonCheck     : ButtonCheck,\n        ButtonMenu      : ButtonMenu\n    }\n});\n"]}