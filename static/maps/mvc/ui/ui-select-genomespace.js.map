{"version":3,"sources":["mvc/ui/ui-select-genomespace.js"],"names":["define","Utils","Ui","View","Backbone","extend","initialize","options","self","this","title","ButtonIcon","icon","tooltip","onclick","browseGenomeSpace","filename_textbox","Input","type","setElement","_template","$","append","$el","token_textbox","GenomespaceBrowser","successCallback","value","destination","data","token","new_value","undefined","values","_setValue","_getValue","split"],"mappings":"kCACAA,QAAQ,cAAe,iBAAkB,6BAA8B,SACnEC,EAFJC,EACAF,GA4FI,OACIG,KApFAC,SAAAD,KAAAE,QAEIC,WAAA,SAAAC,GACA,IAAIC,EAAOC,KAIPC,KAAAA,cAAO,IAD4BR,EAAAS,YAEnCC,MAAAA,SACAC,KAAAA,gBACAC,QAAAA,qBACIN,QAAAA,WACHA,EAAAO,uBAILN,KAAKO,iBAAmB,IAAId,EAAGe,MAI3BC,KAAAA,cAAM,IAAAhB,EAAAe,OADwBC,KAAlC,aAMAT,KAAAU,WAAOV,KAAAW,UAAAb,IACPE,KAAAY,EAAA,wBAAOC,OAA2BA,KAAAA,cAAYN,KAC9CP,KAAAY,EAAA,2BAAAC,OAAAb,KAAsCO,iBAAmBO,KAC5Dd,KA7B2BY,EAAA,wBAAAC,OAAAb,KAAAe,cAAAD,MAiCxBR,kBAAW,SAAXR,GACAkB,IAAAA,EAAAA,KACIC,EAAAA,iBACIlB,gBAAKmB,SAAWC,GACnBpB,EAAAmB,MAAAE,EAAAD,YAAA,IAAAC,EAAAC,WAMLV,UAAA,SACIb,GAWP,MAXO,6SA4BPoB,MAxE2B,SAAAI,GA0E5B,QAAAC,IAAAD,EAGQE,OAAAA,KAAAA,YAFRC,KAAAA,UAAWH,IA3EiBI,UAAhC,WAqEQ,OAeD1B,KAAAO,iBAAAW,QAAA,IAAAlB,KAAAe,cAAAG,SATHO,UAAW,SAASH,GACZA,IACAE,OAASF,EAAUK,MAAM,KACzB3B,KAAKO,iBAAiBW,MAAMM,OAAO,IACnCxB,KAAKe,cAAcG,MAAMM,OAAO","file":"../../../scripts/mvc/ui/ui-select-genomespace.js","sourcesContent":["// dependencies\ndefine([\"utils/utils\", \"mvc/ui/ui-misc\", \"mvc/tool/tool-genomespace\"], function(\n    Utils,\n    Ui,\n    GenomespaceBrowser\n) {\n    /**\n * GenomeSpace file selector\n */\n    var View = Backbone.View.extend({\n        // initialize\n        initialize: function(options) {\n            // link this\n            var self = this;\n\n            // create insert new list element button\n            this.browse_button = new Ui.ButtonIcon({\n                title: \"Browse\",\n                icon: \"fa fa-sign-in\",\n                tooltip: \"Browse GenomeSpace\",\n                onclick: function() {\n                    self.browseGenomeSpace();\n                }\n            });\n\n            // create genomespace filepath textbox\n            this.filename_textbox = new Ui.Input();\n\n            // create genomespace token textbox\n            this.token_textbox = new Ui.Input({\n                type: \"password\"\n            });\n\n            // create elements\n            this.setElement(this._template(options));\n            this.$(\".ui-gs-browse-button\").append(this.browse_button.$el);\n            this.$(\".ui-gs-filename-textbox\").append(this.filename_textbox.$el);\n            this.$(\".ui-gs-token-textbox\").append(this.token_textbox.$el);\n        },\n\n        /** Browse GenomeSpace */\n        browseGenomeSpace: function(options) {\n            var self = this;\n            GenomespaceBrowser.openFileBrowser({\n                successCallback: function(data) {\n                    self.value(data.destination + \"^\" + data.token);\n                }\n            });\n        },\n\n        /** Main Template */\n        _template: function(options) {\n            return (\n                '<div class=\"ui-gs-select-file\">' +\n                '<div class=\"ui-gs-browse-field\">' +\n                '<span class=\"ui-gs-browse-button\" />' +\n                '<span class=\"ui-gs-filename-textbox\" />' +\n                \"</div>\" +\n                '<div class=\"ui-gs-token-field\">' +\n                '<span class=ui-gs-label\"><div class=\"ui-gs-token-label\">Token</div></span>' +\n                '<span class=\"ui-gs-token-textbox\" />' +\n                \"</div>\" +\n                \"</div>\"\n            );\n        },\n\n        /** Return/Set currently selected genomespace filename/token */\n        value: function(new_value) {\n            // check if new_value is defined\n            if (new_value !== undefined) {\n                this._setValue(new_value);\n            } else {\n                return this._getValue();\n            }\n        },\n\n        // get value\n        _getValue: function() {\n            return (\n                this.filename_textbox.value() + \"^\" + this.token_textbox.value()\n            );\n        },\n\n        // set value\n        _setValue: function(new_value) {\n            if (new_value) {\n                values = new_value.split(\"^\");\n                this.filename_textbox.value(values[0]);\n                this.token_textbox.value(values[1]);\n            }\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}