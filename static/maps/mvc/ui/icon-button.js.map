{"version":3,"sources":["mvc/ui/icon-button.js"],"names":["define","IconButton","Backbone","Model","extend","defaults","title","icon_class","on_click","menu_options","is_menu_button","id","href","target","enabled","visible","IconButtonView","View","this","model","attributes","tooltip_config","placement","render","$el","tooltip","new_elem","template","toJSON","get","replaceWith","setElement","events","click","event","_","isFunction","options","buffer","$","IconButtonCollection","Collection","IconButtonMenuView","initialize","self","each","button","elt","attr","addClass","make_popupmenu","create_icon_buttons_menu","global_config","buttons","map","config","button_config"],"mappings":"kCAAAA,UAGQ,WAOA,IAAIC,EAAaC,SAASC,MAAMC,QAA5BH,UACAI,MAAU,GACNC,WADM,GAENC,SAAAA,KACAC,aAHM,KAINC,gBAAc,EACdC,GAAAA,KACAC,KAAI,KACJC,OAAM,KACNC,SAAQ,EACRC,SAAS,EACTC,qBAQJC,EAAiBd,SAASe,KAAKb,QAA/BY,WAAAA,WAEIE,KAAAC,MAAAC,WAAAC,gBAAAC,UAAA,UACAJ,KAAKC,MAAMC,KAAAA,SAAWC,KAAAA,OAAiBH,OAI3CK,OAAQ,WACJL,KAAAM,IAAAC,QAAA,QAGA,IAAIC,EAAWR,KAAKS,SAAST,KAAKC,MAAMS,UAIxC,OAHAF,EAAAD,QAAAP,KAAAC,MAAAU,IAAA,mBACAH,KAAAA,IAASD,YAAQC,GACjBR,KAAKM,WAAIM,GACJC,MAITC,QAAAA,MAAQ,SAIRC,MAAO,SAASC,GACZ,OAAAC,EAAAC,WAAAlB,KAAAC,MAAAU,IAAA,eACIM,KAAEC,MAAAA,IAAW,WAAbD,CAAaD,IACRf,IAObQ,SAAA,SAAAU,GACAV,IAAAA,EAAU,UAASU,EAAS/B,MAAA,uBAqCxB,OAlCI+B,EAAQ3B,iBAAR2B,GAAQ3B,gBAIZ4B,GAAU,IAAMD,EAAQ9B,WAEnB8B,EAAQvB,UAATwB,GAASxB,aAIbwB,GAAA,IAGID,EAAQ1B,KAAR0B,GAAJ,QAAgBA,EAAA1B,GAAA,KAIhB2B,GAAU,UAAYD,EAAQzB,KAAO,IACrCyB,EAAAxB,SACIwB,GAAQxB,YAAQwB,EAAAxB,OAAA,KAGpBwB,EAAAtB,UACIuB,GAASvB,2BAKTsB,EADJA,EAAAvB,QACYA,MAASwB,EAAA,KAEd,SAAAA,EAAA,KAIPC,EAAAD,MAKRE,EAAAtC,SAAAuC,WAAArC,QACIoC,MAAAA,IAQAE,EAAqBxC,SAASe,KAAKb,QAAnCsC,QAAAA,MAGAC,WAAY,WAAZA,KAAAA,UAIApB,OAAQ,WACJ,IAAAqB,EAAA1B,KAyBA,OAxBAA,KAAI0B,WAAJC,KAAA,SAAAC,GAEI,IAAAC,EAAAR,EAAA,QACIQ,KAAMR,OAAA,sBAELS,KAAK,QAASF,EAAO1B,WAAWd,OAMrC2C,SAAA,2BACIH,SAAO1B,EAAPA,WAAkBC,YAClB0B,SAAItB,EAAQqB,KACfb,MAAAa,EAAA1B,WAAAZ,UAGGC,EAAAA,WAAeqC,gBACfrC,EAAAA,QAAJqC,EAAkB1B,WAAAC,gBADlB,IAAIZ,EAAeqC,EAAOjB,IAAI,WAMlCpB,GACOyC,eAAPH,EAAAtC,KAAOS,QA4Bf,OACIjB,WAAYA,EACZe,eAAgBA,EAChBwB,qBAAsBA,EACtBE,mBAAoBA,EACpBS,yBAlBkBX,SAAAA,EACdY,GADJA,IAAAA,MASA,IAAAC,EAAWX,IAAAA,EAdfP,EAAAmB,IAAAC,EAAA,SAAAC,GAOY,OAAO,IAAIvD,EAUvBkC,EAAA/B,OAAAoD,EAAAJ,OAMID,OAAAA,IAAAA,GAA0BA,WAAAA","file":"../../../scripts/mvc/ui/icon-button.js","sourcesContent":["define(\n    [\n        //jquery\n        //backbone\n    ],\n    function() {\n        //=============================================================================\n        /**\n * backbone model for icon buttons\n */\n        var IconButton = Backbone.Model.extend({\n            defaults: {\n                title: \"\",\n                icon_class: \"\",\n                on_click: null,\n                menu_options: null,\n                is_menu_button: true,\n                id: null,\n                href: null,\n                target: null,\n                enabled: true,\n                visible: true,\n                tooltip_config: {}\n            }\n        });\n\n        /**\n *  backbone view for icon buttons\n */\n        var IconButtonView = Backbone.View.extend({\n            initialize: function() {\n                // better rendering this way\n                this.model.attributes.tooltip_config = { placement: \"bottom\" };\n                this.model.bind(\"change\", this.render, this);\n            },\n\n            render: function() {\n                // hide tooltip\n                this.$el.tooltip(\"hide\");\n\n                var new_elem = this.template(this.model.toJSON());\n                // configure tooltip\n                new_elem.tooltip(this.model.get(\"tooltip_config\"));\n                this.$el.replaceWith(new_elem);\n                this.setElement(new_elem);\n                return this;\n            },\n\n            events: {\n                click: \"click\"\n            },\n\n            click: function(event) {\n                // if on_click pass to that function\n                if (_.isFunction(this.model.get(\"on_click\"))) {\n                    this.model.get(\"on_click\")(event);\n                    return false;\n                }\n                // otherwise, bubble up ( to href or whatever )\n                return true;\n            },\n\n            // generate html element\n            template: function(options) {\n                var buffer = 'title=\"' + options.title + '\" class=\"icon-button';\n\n                if (options.is_menu_button) {\n                    buffer += \" menu-button\";\n                }\n\n                buffer += \" \" + options.icon_class;\n\n                if (!options.enabled) {\n                    buffer += \"_disabled\";\n                }\n\n                // close class tag\n                buffer += '\"';\n\n                if (options.id) {\n                    buffer += ' id=\"' + options.id + '\"';\n                }\n\n                buffer += ' href=\"' + options.href + '\"';\n                // add target for href\n                if (options.target) {\n                    buffer += ' target=\"' + options.target + '\"';\n                }\n                // set visibility\n                if (!options.visible) {\n                    buffer += ' style=\"display: none;\"';\n                }\n\n                // enabled/disabled\n                if (options.enabled) {\n                    buffer = \"<a \" + buffer + \"/>\";\n                } else {\n                    buffer = \"<span \" + buffer + \"/>\";\n                }\n\n                // return element\n                return $(buffer);\n            }\n        });\n\n        // define collection\n        var IconButtonCollection = Backbone.Collection.extend({\n            model: IconButton\n        });\n\n        /**\n * menu with multiple icon buttons\n * views are not needed nor used for individual buttons\n */\n        var IconButtonMenuView = Backbone.View.extend({\n            tagName: \"div\",\n\n            initialize: function() {\n                this.render();\n            },\n\n            render: function() {\n                // initialize icon buttons\n                var self = this;\n                this.collection.each(function(button) {\n                    // create and add icon button to menu\n                    var elt = $(\"<a/>\")\n                        .attr(\"href\", \"javascript:void(0)\")\n                        .attr(\"title\", button.attributes.title)\n                        .addClass(\"icon-button menu-button\")\n                        .addClass(button.attributes.icon_class)\n                        .appendTo(self.$el)\n                        .click(button.attributes.on_click);\n\n                    // configure tooltip\n                    if (button.attributes.tooltip_config) {\n                        elt.tooltip(button.attributes.tooltip_config);\n                    }\n\n                    // add popup menu to icon\n                    var menu_options = button.get(\"options\");\n                    if (menu_options) {\n                        make_popupmenu(elt, menu_options);\n                    }\n                });\n\n                // return\n                return this;\n            }\n        });\n\n        /**\n * Returns an IconButtonMenuView for the provided configuration.\n * Configuration is a list of dictionaries where each dictionary\n * defines an icon button. Each dictionary must have the following\n * elements: icon_class, title, and on_click.\n */\n        var create_icon_buttons_menu = function(config, global_config) {\n            // initialize global configuration\n            if (!global_config) global_config = {};\n\n            // create and initialize menu\n            var buttons = new IconButtonCollection(\n                _.map(config, function(button_config) {\n                    return new IconButton(\n                        _.extend(button_config, global_config)\n                    );\n                })\n            );\n\n            // return menu\n            return new IconButtonMenuView({ collection: buttons });\n        };\n\n        //=============================================================================\n        return {\n            IconButton: IconButton,\n            IconButtonView: IconButtonView,\n            IconButtonCollection: IconButtonCollection,\n            IconButtonMenuView: IconButtonMenuView,\n            create_icon_buttons_menu: create_icon_buttons_menu\n        };\n    }\n);\n"]}