{"version":3,"sources":["mvc/ui/ui-drilldown.js"],"names":["define","Utils","Options","View","BaseIcons","extend","initialize","options","type","prototype","display","call","this","_setValue","new_value","undefined","header_index","_","each","self","v","values","isArray","element","list","_setState","header_id","is_expanded","$button","$","data","addClass","removeClass","_templateOptions","attach","$el","find","on","iterate","$tmpl","header","i","has_options","level","length","new_header","$group","uid","$subgroup","append","_templateOption","label","push","value","model","get","_template","attr","id"],"mappings":"aACAA,QAAS,cAAe,qBAAuB,SAAUC,EAAOC,GA0FhE,OACIC,KA3FKD,EAAAE,UAAeC,QAGpBC,WAAY,SAAUC,GADtBJ,EAAOD,KAAQE,EAAUC,SAAO,WAChCC,EAAAA,SAAsBC,YAAVA,EAAAC,KACRD,EAAAA,UAAAE,UAA2BC,WAAWC,KAAAC,KAAtCL,IAMJM,UAAW,SAAWC,GAAtBD,GADAX,EAAAE,UAAAK,UAAAI,UAAAF,KAAAC,KAAAE,QACWC,IAAXF,GAAkC,OAAZC,GAAYF,KAAAI,aAAA,CAC9Bd,IAAAA,EAAQE,KACHU,EAAAA,EAAAA,QAAcC,GAAaD,GAA3BA,GACDG,EAAAC,KAAIC,EAAO,SAAXC,GACA,IAAIC,EAAAA,EAAWC,aAASR,GACxBG,EAAEC,KAAMG,EAAR,SAAgBE,GACZJ,EAAIK,UAAYR,GAAAA,SAS5BS,UAAW,SAAWC,EAAWC,GADjC,IAAAC,EAAAhB,KAAAiB,EAAA,WAAAH,GACAD,EAAWb,KAAAiB,EAAA,aAAAH,GACPE,EAAIA,KAAAA,cAAkBD,GACtBA,GACAC,EAAQE,OACRF,EAAKD,YAAc,kBAAAI,SAAA,qBAEfH,EAAAA,OACHA,EAAMI,YAAA,mBAAAD,SAAA,oBAOXE,iBAAkB,WAKd,SAASC,EAAQC,EAAKT,GADtB,IAAAE,EAAAO,EAAAC,KAAA,WAAAV,GACAE,EAAAS,GAASH,QAAaR,WAClBP,EAAIS,UAAUO,GAAUP,EAAaF,KAAAA,kBAOzC,SAASY,EAAUC,EAAOhC,EAASiC,GADnCA,EAAAA,MACA,IAAA,IAASF,KAAAA,EAAiB/B,CACtBiC,IAAAA,EAASA,EAATC,GACAC,EAAcnC,EAAUA,SAAAoC,EAAApC,QAAAqC,OAAA,EACpBC,EAAYtC,EAASkC,MAArB,GACAtB,EAAAH,aAAI0B,EAAcC,OAAAE,EAAuBtC,MAAQqC,GACjD,IAAAE,EAAID,EAAAA,UACJ1B,GAAAA,EAAKH,CACL,IAAI8B,EAAY7C,EAAA8C,MACXL,EAAAA,EAAc,WAAAX,SAAA,UAAAL,GAAAK,SAAA,yCACfiB,EAAItB,EAAAA,UAAYK,SAAhB,YAAAL,GAAAK,SAAA,yBACAe,EAAAG,OAAIrB,EAAUC,UACEA,OAAGD,GACDqB,OAAH9B,EACM8B,iBACQ9B,MAAK+B,EAAAA,KAAAA,MAAmBC,EAAOR,UAC5DE,EAAAA,KAAWO,GACXd,EAAAA,EAAAK,EAAqBA,QAArBE,GACAC,EAAAA,OAAOG,GACPf,EAAAA,EAAQY,QAERA,EAAAA,OAAOG,EAAQ9B,iBAAsBgC,MAAEA,EAAOR,KAATU,MAAqBA,EAAOV,SAErEJ,EAAAA,OAAMU,IApClB,IAAA9B,EAAAP,KACAqB,KAAAA,gBAwCI,IAAAM,EAAIA,EAAAA,UAEJ,OADAD,EAAAA,EAASC,KAAOe,MAAKA,IAAMC,SAC3BhB,GAIJiB,UAAAA,WACI,OAAA3B,EAAA,UAAOE,SAAA,uCAAgE0B,KAAM,KAAM7C,KAAK0C,MAAMI","file":"../../../scripts/mvc/ui/ui-drilldown.js","sourcesContent":["/** This class creates/wraps a drill down element. */\ndefine([ 'utils/utils', 'mvc/ui/ui-options' ], function( Utils, Options ) {\n\nvar View = Options.BaseIcons.extend({\n    initialize: function( options ) {\n        options.type     = options.display || 'checkbox';\n        options.multiple = ( options.type == 'checkbox' );\n        Options.BaseIcons.prototype.initialize.call( this, options );\n    },\n\n    /** Set states for selected values */\n    _setValue: function ( new_value ) {\n        Options.BaseIcons.prototype._setValue.call( this, new_value );\n        if ( new_value !== undefined && new_value !== null && this.header_index ) {\n            var self = this;\n            var values = $.isArray( new_value ) ? new_value : [ new_value ];\n            _.each( values, function( v ) {\n                var list = self.header_index[ v ];\n                _.each( list, function( element ) {\n                    self._setState( element, true );\n                });\n            });\n        }\n    },\n\n    /** Expand/collapse a sub group */\n    _setState: function ( header_id, is_expanded ) {\n        var $button = this.$( '.button-' + header_id );\n        var $subgroup = this.$( '.subgroup-' + header_id );\n        $button.data( 'is_expanded', is_expanded );\n        if ( is_expanded ) {\n            $subgroup.show();\n            $button.removeClass( 'fa-plus-square' ).addClass( 'fa-minus-square' );\n        } else {\n            $subgroup.hide();\n            $button.removeClass( 'fa-minus-square' ).addClass( 'fa-plus-square' );\n        }\n    },\n\n    /** Template to create options tree */\n    _templateOptions: function() {\n        var self = this;\n        this.header_index = {};\n\n        // attach event handler\n        function attach( $el, header_id ) {\n            var $button = $el.find( '.button-' + header_id );\n            $button.on( 'click', function() {\n                self._setState( header_id, !$button.data( 'is_expanded' ) );\n            });\n        }\n\n        // recursive function which iterates through options\n        function iterate ( $tmpl, options, header ) {\n            header = header || [];\n            for (var i in options ) {\n                var level = options[ i ];\n                var has_options = level.options && level.options.length > 0;\n                var new_header = header.slice( 0 );\n                self.header_index[ level.value ] = new_header.slice( 0 );\n                var $group = $( '<div/>' );\n                if ( has_options ) {\n                    var header_id = Utils.uid();\n                    var $button = $( '<span/>' ).addClass( 'button-' + header_id ).addClass( 'ui-drilldown-button fa fa-plus-square' );\n                    var $subgroup = $( '<div/>' ).addClass( 'subgroup-' + header_id ).addClass( 'ui-drilldown-subgroup' );\n                    $group.append( $( '<div/>' )\n                                        .append( $button )\n                                        .append( self._templateOption( { label: level.name, value: level.value } ) ) );\n                    new_header.push( header_id );\n                    iterate ( $subgroup, level.options, new_header );\n                    $group.append( $subgroup );\n                    attach( $group, header_id );\n                } else {\n                    $group.append( self._templateOption( { label: level.name, value: level.value } ) );\n                }\n                $tmpl.append( $group );\n            }\n        }\n\n        // iterate through options and create dom\n        var $tmpl = $( '<div/>' );\n        iterate( $tmpl, this.model.get( 'data' ) );\n        return $tmpl;\n    },\n\n    /** Template for drill down view */\n    _template: function() {\n        return $( '<div/>' ).addClass( 'ui-options-list drilldown-container' ).attr( 'id', this.model.id );\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n"]}