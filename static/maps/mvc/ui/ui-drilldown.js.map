{"version":3,"sources":["mvc/ui/ui-drilldown.js"],"names":["define","Utils","Options","View","BaseIcons","extend","initialize","options","type","display","multiple","prototype","call","this","_setValue","new_value","undefined","header_index","self","values","$","isArray","_","each","v","list","element","_setState","header_id","is_expanded","$button","$subgroup","data","show","removeClass","addClass","hide","_templateOptions","attach","$el","find","on","iterate","$tmpl","header","i","level","has_options","length","new_header","slice","value","$group","uid","append","_templateOption","label","name","push","model","get","_template","attr","id"],"mappings":"AACAA,QAAS,cAAe,qBAAuB,SAAUC,EAAOC,GA0FhE,OACIC,KAzFOD,EAAQE,UAAUC,QACzBC,WAAY,SAAUC,GAClBA,EAAQC,KAAWD,EAAQE,SAAW,WACtCF,EAAQG,SAA6B,YAAhBH,EAAQC,KAC7BN,EAAQE,UAAUO,UAAUL,WAAWM,KAAMC,KAAMN,IAIvDO,UAAW,SAAWC,GAElB,GADAb,EAAQE,UAAUO,UAAUG,UAAUF,KAAMC,KAAME,OAC/BC,KAAdD,GAAyC,OAAdA,GAAsBF,KAAKI,aAAe,CACtE,GAAIC,GAAOL,KACPM,EAASC,EAAEC,QAASN,GAAcA,GAAcA,EACpDO,GAAEC,KAAMJ,EAAQ,SAAUK,GACtB,GAAIC,GAAOP,EAAKD,aAAcO,EAC9BF,GAAEC,KAAME,EAAM,SAAUC,GACpBR,EAAKS,UAAWD,GAAS,SAOzCC,UAAW,SAAWC,EAAWC,GAC7B,GAAIC,GAAUjB,KAAKO,EAAG,WAAaQ,GAC/BG,EAAYlB,KAAKO,EAAG,aAAeQ,EACvCE,GAAQE,KAAM,cAAeH,GACxBA,GACDE,EAAUE,OACVH,EAAQI,YAAa,kBAAmBC,SAAU,qBAElDJ,EAAUK,OACVN,EAAQI,YAAa,mBAAoBC,SAAU,oBAK3DE,iBAAkB,WAKd,QAASC,GAAQC,EAAKX,GAClB,GAAIE,GAAUS,EAAIC,KAAM,WAAaZ,EACrCE,GAAQW,GAAI,QAAS,WACjBvB,EAAKS,UAAWC,GAAYE,EAAQE,KAAM,kBAKlD,QAASU,GAAUC,EAAOpC,EAASqC,GAC/BA,EAASA,KACT,KAAMC,IAAKtC,GAAU,CACjB,GAAIuC,GAAQvC,EAASsC,GACjBE,EAAcD,EAAMvC,SAAWuC,EAAMvC,QAAQyC,OAAS,EACtDC,EAAaL,EAAOM,MAAO,EAC/BhC,GAAKD,aAAc6B,EAAMK,OAAUF,EAAWC,MAAO,EACrD,IAAIE,GAAShC,EAAG,SAChB,IAAK2B,EAAc,CACf,GAAInB,GAAY3B,EAAMoD,MAClBvB,EAAUV,EAAG,WAAYe,SAAU,UAAYP,GAAYO,SAAU,yCACrEJ,EAAYX,EAAG,UAAWe,SAAU,YAAcP,GAAYO,SAAU,wBAC5EiB,GAAOE,OAAQlC,EAAG,UACGkC,OAAQxB,GACRwB,OAAQpC,EAAKqC,iBAAmBC,MAAOV,EAAMW,KAAMN,MAAOL,EAAMK,UACrFF,EAAWS,KAAM9B,GACjBc,EAAUX,EAAWe,EAAMvC,QAAS0C,GACpCG,EAAOE,OAAQvB,GACfO,EAAQc,EAAQxB,OAEhBwB,GAAOE,OAAQpC,EAAKqC,iBAAmBC,MAAOV,EAAMW,KAAMN,MAAOL,EAAMK,QAE3ER,GAAMW,OAAQF,IAlCtB,GAAIlC,GAAOL,IACXA,MAAKI,eAsCL,IAAI0B,GAAQvB,EAAG,SAEf,OADAsB,GAASC,EAAO9B,KAAK8C,MAAMC,IAAK,SACzBjB,GAIXkB,UAAW,WACP,MAAOzC,GAAG,UAAWe,SAAU,uCAAwC2B,KAAM,KAAMjD,KAAK8C,MAAMI","file":"../../../scripts/mvc/ui/ui-drilldown.js","sourcesContent":["/** This class creates/wraps a drill down element. */\ndefine([ 'utils/utils', 'mvc/ui/ui-options' ], function( Utils, Options ) {\n\nvar View = Options.BaseIcons.extend({\n    initialize: function( options ) {\n        options.type     = options.display || 'checkbox';\n        options.multiple = ( options.type == 'checkbox' );\n        Options.BaseIcons.prototype.initialize.call( this, options );\n    },\n\n    /** Set states for selected values */\n    _setValue: function ( new_value ) {\n        Options.BaseIcons.prototype._setValue.call( this, new_value );\n        if ( new_value !== undefined && new_value !== null && this.header_index ) {\n            var self = this;\n            var values = $.isArray( new_value ) ? new_value : [ new_value ];\n            _.each( values, function( v ) {\n                var list = self.header_index[ v ];\n                _.each( list, function( element ) {\n                    self._setState( element, true );\n                });\n            });\n        }\n    },\n\n    /** Expand/collapse a sub group */\n    _setState: function ( header_id, is_expanded ) {\n        var $button = this.$( '.button-' + header_id );\n        var $subgroup = this.$( '.subgroup-' + header_id );\n        $button.data( 'is_expanded', is_expanded );\n        if ( is_expanded ) {\n            $subgroup.show();\n            $button.removeClass( 'fa-plus-square' ).addClass( 'fa-minus-square' );\n        } else {\n            $subgroup.hide();\n            $button.removeClass( 'fa-minus-square' ).addClass( 'fa-plus-square' );\n        }\n    },\n\n    /** Template to create options tree */\n    _templateOptions: function() {\n        var self = this;\n        this.header_index = {};\n\n        // attach event handler\n        function attach( $el, header_id ) {\n            var $button = $el.find( '.button-' + header_id );\n            $button.on( 'click', function() {\n                self._setState( header_id, !$button.data( 'is_expanded' ) );\n            });\n        }\n\n        // recursive function which iterates through options\n        function iterate ( $tmpl, options, header ) {\n            header = header || [];\n            for ( i in options ) {\n                var level = options[ i ];\n                var has_options = level.options && level.options.length > 0;\n                var new_header = header.slice( 0 );\n                self.header_index[ level.value ] = new_header.slice( 0 );\n                var $group = $( '<div/>' );\n                if ( has_options ) {\n                    var header_id = Utils.uid();\n                    var $button = $( '<span/>' ).addClass( 'button-' + header_id ).addClass( 'ui-drilldown-button fa fa-plus-square' );\n                    var $subgroup = $( '<div/>' ).addClass( 'subgroup-' + header_id ).addClass( 'ui-drilldown-subgroup' );\n                    $group.append( $( '<div/>' )\n                                        .append( $button )\n                                        .append( self._templateOption( { label: level.name, value: level.value } ) ) );\n                    new_header.push( header_id );\n                    iterate ( $subgroup, level.options, new_header );\n                    $group.append( $subgroup );\n                    attach( $group, header_id );\n                } else {\n                    $group.append( self._templateOption( { label: level.name, value: level.value } ) );\n                }\n                $tmpl.append( $group );\n            }\n        }\n\n        // iterate through options and create dom\n        var $tmpl = $( '<div/>' );\n        iterate( $tmpl, this.model.get( 'data' ) );\n        return $tmpl;\n    },\n\n    /** Template for drill down view */\n    _template: function() {\n        return $( '<div/>' ).addClass( 'ui-options-list drilldown-container' ).attr( 'id', this.model.id );\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n"]}