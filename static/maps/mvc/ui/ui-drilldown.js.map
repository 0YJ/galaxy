{"version":3,"sources":["mvc/ui/ui-drilldown.js"],"names":["define","Utils","Options","View","BaseIcons","extend","initialize","options","type","display","prototype","call","this","_setValue","new_value","undefined","self","values","_","each","list","header_index","element","_setState","$button","is_expanded","$subgroup","header_id","$","hide","removeClass","_templateOptions","attach","$el","find","on","iterate","$tmpl","data","new_header","header","i","$group","level","has_options","length","slice","append","label","value","addClass","_templateOption","name","push","get","model","_template","attr","id"],"mappings":"kCACAA,QAAQ,cAAe,qBAAsB,SAASC,EAAOC,GAmHzD,OACIC,KAnHOD,EAAQE,UAAUC,QAFjCC,WAAA,SAAAC,GACQA,EAAAC,KAAeD,EAAAE,SAAhB,WACCN,EAAOD,SAAyB,YAAjBE,EAAUC,KACzBC,EAAAA,UAAYI,UAAAJ,WAAAK,KAAkBC,KAAAL,IAI7BM,UAL+B,SAAAC,GAOhC,GAEIZ,EAAQE,UAAUM,UAAUG,UAAUF,KAAKC,KAAME,QAD1CC,IAAXF,GACYT,OAARF,GACAU,KACIE,aAIA,CACA,IAAAE,EAAIC,KACJC,EAAOD,EAAAA,QAAQH,GAAYA,GAAAA,GACvBI,EAAAC,KAAAF,EAAIG,SAAYC,GAChBH,IAAAA,EAAOE,EAAPC,aAAsBC,GAClBN,EAAAA,KAAAA,EAAKO,SAALD,GACHN,EAFDO,UAAAD,GAAA,SASRC,UAAA,SAAIC,EAAiBC,GACrB,IAAAD,EAAIE,KAAAA,EAAY,WAAOC,GACvBH,EAAAZ,KAAagB,EAAA,aAAeH,GAC5BD,EAAIC,KAAAA,cAAaA,GACbC,GACAF,EAAAA,OAGHA,EACGE,YAAUG,kBACVL,SACKM,qBAvCmBJ,EAAAG,OAsCxBL,EAMRM,YAAA,mBACAC,SAAkB,oBAKdA,iBAASC,WAKR,SAAAA,EAAAC,EAAAN,GAJG,IAAIH,EAAUS,EAAIC,KAAK,WAAaP,GAMxCH,EAAAW,GAAA,QAAA,WACAnB,EAASoB,UAAQC,GAAjBb,EAAAc,KAAyC,kBAKjC,SAAAF,EAAIG,EAAAA,EAAaC,GACjBxB,EAAAA,MACA,IAAA,IAAAyB,KAAIC,EAAW,CACf,IAAAC,EAAIC,EAAJH,GACIG,EAAIjB,EAAY1B,SAAhB0C,EAAApC,QAAAsC,OAAA,EACAN,EAAIf,EAAYsB,MAAA,GAGhB9B,EAAAK,aAAIK,EAAYE,OAAEW,EAAFO,MACF,GAEdJ,IAAAA,EAAAA,EAAOK,UAKSC,GAAAA,EAAAA,CACAC,IAAAA,EAAON,EAAMM,MAFIzB,EAJjCI,EAAA,WAUAW,SAAAA,UAAgBZ,GAChBS,SAAQV,yCACRgB,EAAOK,EAAOrB,UACdM,SAAOU,YAAPf,GArBJuB,SAsBO,yBACHR,EAAAA,OAEQM,EAAAA,UACAC,OAAON,GAHfI,OAMH/B,EAAAmC,iBACYT,MAAbC,EAAAS,KACHH,MAAAN,EAAAM,UAIDZ,EAAUgB,KAAd1B,GACQU,EAAOX,EAAW4B,EAAI/C,QAA9BgC,GACOF,EAAPU,OAAArB,GAvG4BM,EAAAU,EAAAf,QA0GhCe,EAAAK,OACW/B,EAAAmC,iBACEH,MACJE,EAASE,KAEjBH,MAAAN,EAAAM,SAIK9C,EAAAA,OAAAA,IAhEE,IAAAa,EAAAJ,KACAY,KAAAA,gBAiDJ,IAAIa,EAAQT,EAAE,UAEd,OADAQ,EAAQC,EAAOzB,KAAK2C,MAAMD,IAAI,SACvBjB,GAIXmB,UAAW,WACP,OAAO5B,EAAE,UACJsB,SAAS,uCACTO,KAAK,KAAM7C,KAAK2C,MAAMG","file":"../../../scripts/mvc/ui/ui-drilldown.js","sourcesContent":["/** This class creates/wraps a drill down element. */\ndefine([\"utils/utils\", \"mvc/ui/ui-options\"], function(Utils, Options) {\n    var View = Options.BaseIcons.extend({\n        initialize: function(options) {\n            options.type = options.display || \"checkbox\";\n            options.multiple = options.type == \"checkbox\";\n            Options.BaseIcons.prototype.initialize.call(this, options);\n        },\n\n        /** Set states for selected values */\n        _setValue: function(new_value) {\n            Options.BaseIcons.prototype._setValue.call(this, new_value);\n            if (\n                new_value !== undefined &&\n                new_value !== null &&\n                this.header_index\n            ) {\n                var self = this;\n                var values = $.isArray(new_value) ? new_value : [new_value];\n                _.each(values, function(v) {\n                    var list = self.header_index[v];\n                    _.each(list, function(element) {\n                        self._setState(element, true);\n                    });\n                });\n            }\n        },\n\n        /** Expand/collapse a sub group */\n        _setState: function(header_id, is_expanded) {\n            var $button = this.$(\".button-\" + header_id);\n            var $subgroup = this.$(\".subgroup-\" + header_id);\n            $button.data(\"is_expanded\", is_expanded);\n            if (is_expanded) {\n                $subgroup.show();\n                $button\n                    .removeClass(\"fa-plus-square\")\n                    .addClass(\"fa-minus-square\");\n            } else {\n                $subgroup.hide();\n                $button\n                    .removeClass(\"fa-minus-square\")\n                    .addClass(\"fa-plus-square\");\n            }\n        },\n\n        /** Template to create options tree */\n        _templateOptions: function() {\n            var self = this;\n            this.header_index = {};\n\n            // attach event handler\n            function attach($el, header_id) {\n                var $button = $el.find(\".button-\" + header_id);\n                $button.on(\"click\", function() {\n                    self._setState(header_id, !$button.data(\"is_expanded\"));\n                });\n            }\n\n            // recursive function which iterates through options\n            function iterate($tmpl, options, header) {\n                header = header || [];\n                for (var i in options) {\n                    var level = options[i];\n                    var has_options = level.options && level.options.length > 0;\n                    var new_header = header.slice(0);\n                    self.header_index[level.value] = new_header.slice(0);\n                    var $group = $(\"<div/>\");\n                    if (has_options) {\n                        var header_id = Utils.uid();\n                        var $button = $(\"<span/>\")\n                            .addClass(\"button-\" + header_id)\n                            .addClass(\"ui-drilldown-button fa fa-plus-square\");\n                        var $subgroup = $(\"<div/>\")\n                            .addClass(\"subgroup-\" + header_id)\n                            .addClass(\"ui-drilldown-subgroup\");\n                        $group.append(\n                            $(\"<div/>\")\n                                .append($button)\n                                .append(\n                                    self._templateOption({\n                                        label: level.name,\n                                        value: level.value\n                                    })\n                                )\n                        );\n                        new_header.push(header_id);\n                        iterate($subgroup, level.options, new_header);\n                        $group.append($subgroup);\n                        attach($group, header_id);\n                    } else {\n                        $group.append(\n                            self._templateOption({\n                                label: level.name,\n                                value: level.value\n                            })\n                        );\n                    }\n                    $tmpl.append($group);\n                }\n            }\n\n            // iterate through options and create dom\n            var $tmpl = $(\"<div/>\");\n            iterate($tmpl, this.model.get(\"data\"));\n            return $tmpl;\n        },\n\n        /** Template for drill down view */\n        _template: function() {\n            return $(\"<div/>\")\n                .addClass(\"ui-options-list drilldown-container\")\n                .attr(\"id\", this.model.id);\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}