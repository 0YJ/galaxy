{"version":3,"sources":["mvc/ui/ui-frames.js"],"names":["define","FrameView","Backbone","View","extend","initialize","options","Model","this","setElement","$","addClass","$el","model","append","tooltip","title","placement","$title","$content","render","$header","listenTo","_","$option","attributes","isFunction","option","disabled","remove","each","menu","on","icon","onclick","self","html","attr","url","indexOf","content","rows","cell","margin","scroll","frame_max","visible","cols","top","top_max","frame_uid","frame_list","frame_shadow","event","defaults","defaultOptions","_frameInit","width","height","_panelRefresh","el","window","resize","_frameResize","show","hide","top_min","Galaxy","frame_counter","modal","body","frame_id","buttons","Close","frame","_toPixelCoord","parseInt","css","frame_z","_frameInsert","left","trigger","$frame","fadeOut","_panelAnimationComplete","fadeIn","type","length","events","mousemove","mouseup","mouseleave","mousewheel","DOMMouseScroll","mousedown .frame","mousedown .frame-background","mousedown .frame-scroll-up","mousedown .frame-scroll-down","mousedown .f-close","e","target","hasClass","preventDefault","_frameIdentify","x","y","originalEvent","pageY","_frameDragStart","_eventFrameMouseMove","event_xy_new","xy","p","_frameScreen","event_xy_delta","min_dim","Math","max","_toGridCoord","_frameOffset","l","_eventFrameMouseUp","_frameDragStop","_eventFrameClose","del","_eventHide","_eventPanelScroll","stopPropagation","frames","parents","_panelScroll","detail","wheelDelta","_eventPanelScroll_up","_eventPanelScroll_down","closest","_frameFocus","grid_location","_frameGrid","sign","px","g","_toGrid","_toPixel","_isCollision","is_collision_pair","i","b","a","_locationRank","loc","animate","promise","done","delta","top_new","min","screen_location","id","substring","new_loc","place_list","f","sort","place","_framePlace","j","console","log","has_focus","grid_rank"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-frames.js","sourcesContent":["define([], function() {\n\n/** Frame view */\nvar FrameView = Backbone.View.extend({\n    initialize: function( options ) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model( options );\n        this.setElement( $( '<div/>' ).addClass( 'corner frame' ) );\n        this.$el.append( $( '<div/>' ).addClass( 'f-header corner' )\n                                      .append( $( '<div/>' ).addClass( 'f-title' ) )\n                                      .append( $( '<div/>' ).addClass( 'f-icon f-close fa fa-close' )\n                                                            .tooltip( { title: 'Close', placement: 'bottom' } ) ) )\n                .append( $( '<div/>' ).addClass( 'f-content' ) )\n                .append( $( '<div/>' ).addClass( 'f-resize f-icon corner fa fa-expand' ).tooltip( { title: 'Resize' } ) )\n                .append( $( '<div/>' ).addClass( 'f-cover' ) );\n        this.$header  = this.$( '.f-header' );\n        this.$title   = this.$( '.f-title' );\n        this.$content = this.$( '.f-content' );\n        this.render();\n        this.listenTo( this.model, 'change', this.render, this );\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$title.html( options.title || '' );\n        this.$header.find( '.f-icon-left' ).remove();\n        _.each( options.menu, function( option ) {\n            var $option = $( '<div/>' ).addClass( 'f-icon-left' ).addClass( option.icon );\n            if ( _.isFunction( option.disabled ) && option.disabled() ) {\n                $option.attr( 'disabled', true );\n            } else {\n                $option.on( 'click', function() { option.onclick( self ) } )\n                       .tooltip( { title: option.tooltip, placement: 'bottom' } );\n            }\n            self.$header.append( $option );\n        } );\n        if ( options.url ) {\n            this.$content.html( $ ( '<iframe/>' ).addClass( 'f-iframe' )\n                                                 .attr( 'scrolling', 'auto' )\n                                                 .attr( 'src', options.url + ( options.url.indexOf( '?' ) === -1 ? '?' : '&' ) + 'widget=True' ) );\n        } else if ( options.content ) {\n            _.isFunction( options.content ) ? options.content( self.$content ) : self.$content.html( options.content );\n        }\n    }\n});\n\n/** Scratchbook viewer */\nvar View = Backbone.View.extend({\n    defaultOptions: {\n        frame: {             // default frame size in cells\n            cols : 6,\n            rows : 3\n        },\n        rows        : 1000,  // maximum number of rows\n        cell        : 130,   // cell size in px\n        margin      : 5,     // margin between frames\n        scroll      : 5,     // scroll speed\n        top_min     : 40,    // top margin\n        frame_max   : 9,     // maximum number of frames\n        visible     : true,  // initial visibility\n    },\n\n    cols            : 0,     // number of columns\n    top             : 0,     // scroll/element top\n    top_max         : 0,     // viewport scrolling state\n    frame_z         : 0,     // frame z-index\n    frame_counter   : 0,     // frame counter\n    frame_uid       : 0,     // unique frame id counter\n    frame_list      : {},    // list of all frames\n    frame_shadow    : null,  // frame shown as placeholder when moving active frames\n    visible         : false, // flag indicating if scratchbook viewer is visible or not\n    event           : {},    // dictionary keeping track of current event\n\n    initialize : function( options ) {\n        var self = this;\n        this.options = _.defaults( options || {}, this.defaultOptions );\n        this.visible = this.options.visible;\n        this.top = this.top_max = this.options.top_min;\n        this.setElement( $( '<div/>' ).addClass( 'galaxy-frame' )\n                            .append( $( '<div/>' ).addClass( 'frame-background' ) )\n                            .append( $( '<div/>' ).addClass( 'frame-menu frame-scroll-up fa fa-chevron-up fa-2x' ) )\n                            .append( $( '<div/>' ).addClass( 'frame-menu frame-scroll-down fa fa-chevron-down fa-2x' ) ) );\n\n        // initialize shadow to guiding drag/resize events\n        this.frame_shadow = new Backbone.View({ el: $( '<div/>' ).addClass( 'corner frame-shadow' ) } );\n        this.$el.append( this.frame_shadow.$el );\n        this._frameInit( this.frame_shadow, '#frame-shadow' );\n        this._frameResize( this.frame_shadow, { width: 0, height: 0 } );\n        this.frame_list[ '#frame-shadow' ] = this.frame_shadow;\n\n        // initialize panel\n        this.visible ? this.show() : this.hide();\n        this._panelRefresh();\n        $( window ).resize( function() { self.visible && self._panelRefresh() } );\n    },\n\n    /** Render */\n    render: function() {\n        this.$( '.frame-scroll-up' ) [ this.top != this.options.top_min && 'show' || 'hide' ]();\n        this.$( '.frame-scroll-down')[ this.top != this.top_max && 'show' || 'hide' ]();\n    },\n\n    /**\n     * Adds and displays a new frame.\n     *\n     * options:\n     *  url     : loaded into an iframe\n     *  content : content is treated as a function or raw HTML, function is passed a single\n     *              argument that is the frame's content DOM element\n     */\n    add: function( options ) {\n        if ( this.frame_counter >= this.options.frame_max ) {\n            Galaxy.modal.show( {\n                title   : 'Warning',\n                body    : 'You have reached the maximum number of allowed frames (' + this.options.frame_max + ').',\n                buttons : { 'Close' : function() { Galaxy.modal.hide() } }\n            });\n\n        } else {\n            var frame_id = '#frame-' + ( this.frame_uid++ );\n            if ( $ ( frame_id ).length !== 0 ) {\n                Galaxy.modal.show( {\n                    title   : 'Error',\n                    body    : 'This frame already exists. This page might contain multiple frame managers.',\n                    buttons : { 'Close' : function() { Galaxy.modal.hide() } }\n                });\n            } else {\n                // initialize new frame elements\n                this.top = this.options.top_min;\n                var frame = new FrameView( options );\n                this.$el.append( frame.$el );\n\n                // set dimensions\n                options.width   = this._toPixelCoord( 'width', this.options.frame.cols );\n                options.height  = this._toPixelCoord( 'height', this.options.frame.rows );\n\n                // set default z-index and add to ui and frame list\n                this.frame_z = parseInt( frame.$el.css( 'z-index' ) );\n                this.frame_list[ frame_id ] = frame;\n                this.frame_counter++;\n                this._frameInit( frame, frame_id );\n                this._frameResize( frame, { width: options.width, height: options.height } );\n                this._frameInsert( frame, { top: 0, left: 0 }, true );\n                !this.visible && this.show();\n                this.trigger( 'add' );\n            }\n        }\n    },\n\n    /** Remove a frame */\n    del: function( frame ) {\n        var self = this;\n        var $frame = frame.$el;\n        $frame.fadeOut( 'fast', function() {\n            $frame.remove();\n            delete self.frame_list[ frame.id ];\n            self.frame_counter--;\n            self._panelRefresh( true );\n            self._panelAnimationComplete();\n            self.trigger( 'remove' );\n        });\n    },\n\n    /** Show panel */\n    show: function() {\n        this.visible = true;\n        this.$el.fadeIn( 'fast' );\n        this.trigger( 'show' );\n    },\n\n    /** Hide panel */\n    hide: function() {\n        if ( !this.event.type ) {\n            this.visible = false;\n            this.$el.fadeOut('fast', function() { $( this ).hide() });\n            this.trigger( 'hide' );\n        }\n    },\n\n    /** Returns the number of frames */\n    length: function() {\n        return this.frame_counter;\n    },\n\n    /*\n        EVENT HANDLING\n    */\n    events: {\n        // global frame events\n        'mousemove'                         : '_eventFrameMouseMove',\n        'mouseup'                           : '_eventFrameMouseUp',\n        'mouseleave'                        : '_eventFrameMouseUp',\n        'mousewheel'                        : '_eventPanelScroll',\n        'DOMMouseScroll'                    : '_eventPanelScroll',\n\n        // events fixed to elements\n        'mousedown .frame'                  : '_eventFrameMouseDown',\n        'mousedown .frame-background'       : '_eventHide',\n        'mousedown .frame-scroll-up'        : '_eventPanelScroll_up',\n        'mousedown .frame-scroll-down'      : '_eventPanelScroll_down',\n        'mousedown .f-close'                : '_eventFrameClose'\n    },\n\n    /** Start drag/resize event */\n    _eventFrameMouseDown: function ( e ) {\n        $( '.tooltip' ).hide();\n        if ( !this.event.type ) {\n            if ( $( e.target ).hasClass( 'f-header' ) || $( e.target ).hasClass( 'f-title' ) ) {\n                this.event.type = 'drag';\n            }\n            if ( $( e.target ).hasClass( 'f-resize' ) ) {\n                this.event.type = 'resize';\n            }\n            if ( this.event.type ) {\n                e.preventDefault();\n                this.event.target = this._frameIdentify( e.target );\n                this.event.xy = {\n                    x: e.originalEvent.pageX,\n                    y: e.originalEvent.pageY\n                };\n                this._frameDragStart( this.event.target );\n            }\n        }\n    },\n\n    /** Processes drag/resize events */\n    _eventFrameMouseMove: function ( e ) {\n        if ( this.event.type ) {\n            // get mouse motion and delta\n            var event_xy_new = {\n                x : e.originalEvent.pageX,\n                y : e.originalEvent.pageY\n            };\n            var event_xy_delta = {\n                x : event_xy_new.x - this.event.xy.x,\n                y : event_xy_new.y - this.event.xy.y\n            };\n            this.event.xy = event_xy_new;\n\n            // get current screen position and size of frame\n            var p = this._frameScreen ( this.event.target );\n\n            // drag/resize event\n            if ( this.event.type == 'resize' ) {\n                p.width  += event_xy_delta.x;\n                p.height += event_xy_delta.y;\n                var min_dim = this.options.cell - this.options.margin - 1;\n                p.width = Math.max( p.width, min_dim );\n                p.height = Math.max( p.height, min_dim );\n                this._frameResize( this.event.target, p );\n                p.width = this._toGridCoord( 'width', p.width ) + 1;\n                p.height = this._toGridCoord( 'height', p.height ) + 1;\n                p.width = this._toPixelCoord( 'width', p.width );\n                p.height = this._toPixelCoord( 'height', p.height );\n                this._frameResize( this.frame_shadow, p );\n                this._frameInsert( this.frame_shadow, {\n                    top     : this._toGridCoord( 'top', p.top ),\n                    left    : this._toGridCoord( 'left', p.left )\n                });\n            } else if ( this.event.type == 'drag' ) {\n                p.left  += event_xy_delta.x;\n                p.top   += event_xy_delta.y;\n                this._frameOffset( this.event.target, p );\n                var l = {\n                    top     : this._toGridCoord( 'top', p.top ),\n                    left    : this._toGridCoord( 'left', p.left )\n                };\n                l.left !== 0 && l.left++;\n                this._frameInsert( this.frame_shadow, l );\n            }\n        }\n    },\n\n    /** Stop drag/resize events */\n    _eventFrameMouseUp: function ( e ) {\n        if ( this.event.type ) {\n            this._frameDragStop( this.event.target );\n            this.event.type = null;\n        }\n    },\n\n    /** Destroy a frame */\n    _eventFrameClose: function ( e ) {\n        if ( !this.event.type ) {\n            e.preventDefault();\n            this.del( this._frameIdentify( e.target ) );\n        }\n    },\n\n    /** Hide all frames */\n    _eventHide: function ( e ) {\n        !this.event.type && this.hide();\n    },\n\n    /** Fired when scrolling occurs on panel */\n    _eventPanelScroll: function( e ) {\n        if ( !this.event.type && this.visible ) {\n            // Stop propagation if scrolling is happening inside a frame.\n            // TODO: could propagate scrolling if at top/bottom of frame.\n            var frames = $( e.srcElement ).parents( '.frame' );\n            if ( frames.length !== 0 ) {\n                e.stopPropagation();\n            } else {\n                e.preventDefault();\n                this._panelScroll( e.originalEvent.detail ? e.originalEvent.detail : e.originalEvent.wheelDelta / -3 );\n            }\n        }\n    },\n\n    /** Handle scroll up event */\n    _eventPanelScroll_up: function( e ) {\n        if ( !this.event.type ) {\n            e.preventDefault();\n            this._panelScroll( -this.options.scroll );\n        }\n    },\n\n    /** Handle scroll down */\n    _eventPanelScroll_down: function(e) {\n        if ( !this.event.type ) {\n            e.preventDefault();\n            this._panelScroll( this.options.scroll );\n        }\n    },\n\n    /*\n        FRAME EVENTS SUPPORT\n    */\n\n    /** Identify the target frame */\n    _frameIdentify: function( target ) {\n        return this.frame_list[ '#' + $( target ).closest( '.frame' ).attr( 'id' ) ];\n    },\n\n    /** Provides drag support */\n    _frameDragStart : function ( frame ) {\n        this._frameFocus( frame, true );\n        var p = this._frameScreen( frame );\n        this._frameResize( this.frame_shadow, p );\n        this._frameGrid( this.frame_shadow, frame.grid_location );\n        frame.grid_location = null;\n        this.frame_shadow.$el.show();\n        $( '.f-cover' ).show();\n    },\n\n    /** Removes drag support */\n    _frameDragStop : function ( frame ) {\n        this._frameFocus( frame, false );\n        var p = this._frameScreen( this.frame_shadow );\n        this._frameResize( frame, p );\n        this._frameGrid( frame, this.frame_shadow.grid_location, true );\n        this.frame_shadow.grid_location = null;\n        this.frame_shadow.$el.hide();\n        $( '.f-cover' ).hide();\n        this._panelAnimationComplete();\n    },\n\n    /*\n        GRID/PIXEL CONVERTER\n    */\n\n    /** Converts a pixel to a grid dimension */\n    _toGridCoord: function ( type, px ) {\n        var sign = ( type == 'width' || type == 'height' ) ? 1 : -1;\n        type == 'top' && ( px -= this.top );\n        return parseInt( ( px + sign * this.options.margin ) / this.options.cell, 10 );\n    },\n    \n    /** Converts a grid to a pixels dimension */\n    _toPixelCoord: function ( type, g ) {\n        var sign = ( type == 'width' || type == 'height' ) ? 1 : -1;\n        var px = ( g * this.options.cell ) - sign * this.options.margin;\n        type == 'top' && ( px += this.top );\n        return px;\n    },\n\n    /** Converts a pixel to a grid coordinate set */\n    _toGrid: function ( px ) {\n        return {\n            top     : this._toGridCoord( 'top', px.top ),\n            left    : this._toGridCoord( 'left', px.left ),\n            width   : this._toGridCoord( 'width', px.width ),\n            height  : this._toGridCoord( 'height', px.height )\n        };\n    },\n\n    /** Converts a pixel to a grid coordinate set */\n    _toPixel: function( g ) {\n        return {\n            top     : this._toPixelCoord( 'top', g.top ),\n            left    : this._toPixelCoord( 'left', g.left ),\n            width   : this._toPixelCoord( 'width', g.width ),\n            height  : this._toPixelCoord( 'height', g.height )\n        };\n    },\n\n    /* \n        COLLISION DETECTION\n    */\n\n    /** Check collisions for a grid coordinate set */\n    _isCollision: function( g ) {\n        function is_collision_pair ( a, b ) {\n            return !( a.left > b.left + b.width - 1 || a.left + a.width - 1 < b.left ||\n                      a.top > b.top + b.height  - 1 || a.top + a.height - 1 < b.top );\n        }\n        for ( var i in this.frame_list ) {\n            var frame = this.frame_list[ i ];\n            if ( frame.grid_location !== null && is_collision_pair ( g, frame.grid_location ) ) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /** Return location/grid rank */\n    _locationRank: function( loc ) {\n        return ( loc.top * this.cols ) + loc.left;\n    },\n\n    /*\n        PANEL/WINDOW FUNCTIONS\n    */\n\n    /** Refresh panel */\n    _panelRefresh: function( animate ) {\n        this.cols = parseInt( $( window ).width() / this.options.cell, 10 ) + 1;\n        this._frameInsert( null, null, animate );\n    },\n\n    /** Complete panel animation / frames not moving */\n    _panelAnimationComplete: function() {\n        var self = this;\n        $( '.frame' ).promise().done( function() { self._panelScroll( 0, true ) } );\n    },\n\n    /** Scroll panel */\n    _panelScroll: function( delta, animate ) {\n        var top_new = this.top - this.options.scroll * delta;\n        top_new = Math.max( top_new, this.top_max );\n        top_new = Math.min( top_new, this.options.top_min );\n        if ( this.top != top_new ) {\n            for ( var i in this.frame_list ) {\n                var frame = this.frame_list[ i ];\n                if ( frame.grid_location !== null ) {\n                    var screen_location = {\n                        top  : frame.screen_location.top - ( this.top - top_new ),\n                        left : frame.screen_location.left\n                    }\n                    this._frameOffset( frame, screen_location, animate );\n                }\n            }\n            this.top = top_new;\n        }\n        this.render();\n    },\n\n    /*\n        FRAME FUNCTIONS\n    */\n\n    /** Initialize a new frame */\n    _frameInit: function( frame, id ) {\n        frame.id              = id\n        frame.screen_location = {};\n        frame.grid_location   = {};\n        frame.grid_rank       = null;\n        frame.$el.attr( 'id', id.substring( 1 ) );\n    },\n\n    /** Insert frame at given location */\n    _frameInsert: function( frame, new_loc, animate ) {\n        var self = this;\n        var place_list = [];\n        if ( frame ) {\n            frame.grid_location = null;\n            place_list.push( [ frame, this._locationRank( new_loc ) ] );\n        }\n        _.each( this.frame_list, function( f ) {\n            if ( f.grid_location !== null ) {\n                f.grid_location = null;\n                place_list.push( [ f, f.grid_rank ] );\n            }\n        });\n        place_list.sort( function( a, b ) {\n            return a[ 1 ] < b[ 1 ] ? -1 : ( a[ 1 ] > b[ 1 ] ? 1 : 0 );\n        });\n        _.each( place_list, function( place ) {\n            self._framePlace( place[ 0 ], animate );\n        });\n        this.top_max = 0;\n        _.each( this.frame_list, function( f ) {\n            if ( f.grid_location !== null ) {\n                self.top_max = Math.max( self.top_max, f.grid_location.top + f.grid_location.height );\n            }\n        });\n        this.top_max = $( window ).height() - this.top_max * this.options.cell - 2 * this.options.margin;\n        this.top_max = Math.min( this.top_max, this.options.top_min );\n        this.render();\n    },\n\n    /** Naive frame placement */\n    _framePlace: function( frame, animate ) {\n        frame.grid_location = null;\n        var g = this._toGrid( this._frameScreen( frame ) );\n        var done = false;\n        for ( var i = 0; i < this.options.rows; i++ ) {\n            for ( var j = 0; j < Math.max(1, this.cols - g.width ); j++ ) {\n                g.top   = i;\n                g.left  = j;\n                if ( !this._isCollision( g ) ) {\n                    done = true;\n                    break;\n                }\n            }\n            if ( done ) {\n                break;\n            }\n        }\n        if ( done ) {\n            this._frameGrid( frame, g, animate );\n        } else {\n            console.log( 'Grid dimensions exceeded.' );\n        }\n    },\n\n    /** Handle frame focussing */\n    _frameFocus: function( frame, has_focus ) {\n        frame.$el.css( 'z-index', this.frame_z + ( has_focus ? 1 : 0 ) );\n    },\n\n    /** New left/top position frame */\n    _frameOffset: function( frame, p, animate ) {\n        frame.screen_location.left = p.left;\n        frame.screen_location.top = p.top;\n        if ( animate ) {\n            this._frameFocus( frame, true );\n            var self = this;\n            frame.$el.animate({ top: p.top, left: p.left }, 'fast', function() {\n                self._frameFocus( frame, false );\n            });\n        } else {\n            frame.$el.css( { top: p.top, left: p.left } );\n        }\n    },\n\n    /** Resize frame */\n    _frameResize: function( frame, p ) {\n        frame.$el.css( { width: p.width, height: p.height } );\n        frame.screen_location.width = p.width;\n        frame.screen_location.height = p.height;\n    },\n\n    /** Push frame to new grid location */\n    _frameGrid: function ( frame, l, animate ) {\n        frame.grid_location = l;\n        this._frameOffset( frame, this._toPixel( l ), animate );\n        frame.grid_rank = this._locationRank( l );\n    },\n\n    /** Get frame dimensions */\n    _frameScreen: function( frame ) {\n        var p = frame.screen_location;\n        return { top: p.top, left: p.left, width: p.width, height: p.height };\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n"]}