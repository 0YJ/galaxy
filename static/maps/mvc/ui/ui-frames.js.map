{"version":3,"sources":["mvc/ui/ui-frames.js"],"names":["define","FrameView","Backbone","View","extend","initialize","options","Model","this","setElement","$","addClass","$el","model","append","tooltip","title","placement","$title","$content","render","$header","listenTo","_","$option","attributes","isFunction","option","disabled","remove","each","menu","on","icon","onclick","self","html","attr","url","indexOf","content","rows","cell","margin","scroll","frame_max","visible","cols","top","top_max","frame_z","frame_list","frame_shadow","event","frame_counter","el","_frameInit","top_min","_frameResize","_panelRefresh","width","height","show","hide","window","resize","add","Galaxy","modal","frame_id","body","buttons","length","Close","_toPixelCoord","parseInt","css","frame","_frameInsert","left","trigger","$frame","id","_panelAnimationComplete","fadeIn","type","fadeOut","events","mousemove","mouseup","mouseleave","mousewheel","DOMMouseScroll","mousedown .frame","mousedown .frame-background","mousedown .frame-scroll-up","mousedown .frame-scroll-down","mousedown .f-close","_eventFrameMouseDown","e","target","hasClass","preventDefault","x","originalEvent","y","pageX","_frameDragStart","_eventFrameMouseMove","event_xy_new","event_xy_delta","xy","p","_frameScreen","min_dim","Math","max","_toGridCoord","_frameOffset","l","_eventFrameMouseUp","_frameDragStop","del","_frameIdentify","_eventHide","_eventPanelScroll","stopPropagation","parents","_panelScroll","detail","wheelDelta","closest","_frameFocus","_frameGrid","grid_location","px","sign","g","_isCollision","i","a","b","_locationRank","loc","animate","promise","done","top_new","delta","min","screen_location","substring","new_loc","place_list","push","f","grid_rank","sort","_framePlace","place","_toGrid","j","console","log","has_focus"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-frames.js","sourcesContent":["define([], function() {\n\n/** Frame view */\nvar FrameView = Backbone.View.extend({\n    initialize: function( options ) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model( options );\n        this.setElement( $( '<div/>' ).addClass( 'corner frame' ) );\n        this.$el.append( $( '<div/>' ).addClass( 'f-header corner' )\n                                      .append( $( '<div/>' ).addClass( 'f-title' ) )\n                                      .append( $( '<div/>' ).addClass( 'f-icon f-close fa fa-close' )\n                                                            .tooltip( { title: 'Close', placement: 'bottom' } ) ) )\n                .append( $( '<div/>' ).addClass( 'f-content' ) )\n                .append( $( '<div/>' ).addClass( 'f-resize f-icon corner fa fa-expand' ).tooltip( { title: 'Resize' } ) )\n                .append( $( '<div/>' ).addClass( 'f-cover' ) );\n        this.$header  = this.$( '.f-header' );\n        this.$title   = this.$( '.f-title' );\n        this.$content = this.$( '.f-content' );\n        this.render();\n        this.listenTo( this.model, 'change', this.render, this );\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$title.html( options.title || '' );\n        this.$header.find( '.f-icon-left' ).remove();\n        _.each( options.menu, function( option ) {\n            var $option = $( '<div/>' ).addClass( 'f-icon-left' ).addClass( option.icon );\n            if ( _.isFunction( option.disabled ) && option.disabled() ) {\n                $option.attr( 'disabled', true );\n            } else {\n                $option.on( 'click', function() { option.onclick( self ) } )\n                       .tooltip( { title: option.tooltip, placement: 'bottom' } );\n            }\n            self.$header.append( $option );\n        } );\n        if ( options.url ) {\n            this.$content.html( $ ( '<iframe/>' ).addClass( 'f-iframe' )\n                                                 .attr( 'scrolling', 'auto' )\n                                                 .attr( 'src', options.url + ( options.url.indexOf( '?' ) === -1 ? '?' : '&' ) + 'widget=True' ) );\n        } else if ( options.content ) {\n            _.isFunction( options.content ) ? options.content( self.$content ) : self.$content.html( options.content );\n        }\n    }\n});\n\n/** Scratchbook viewer */\nvar View = Backbone.View.extend({\n    defaultOptions: {\n        frame: {             // default frame size in cells\n            cols : 6,\n            rows : 3\n        },\n        rows        : 1000,  // maximum number of rows\n        cell        : 130,   // cell size in px\n        margin      : 5,     // margin between frames\n        scroll      : 5,     // scroll speed\n        top_min     : 40,    // top margin\n        frame_max   : 9,     // maximum number of frames\n        visible     : true,  // initial visibility\n    },\n\n    cols            : 0,     // number of columns\n    top             : 0,     // scroll/element top\n    top_max         : 0,     // viewport scrolling state\n    frame_z         : 0,     // frame z-index\n    frame_counter   : 0,     // frame counter\n    frame_uid       : 0,     // unique frame id counter\n    frame_list      : {},    // list of all frames\n    frame_shadow    : null,  // frame shown as placeholder when moving active frames\n    visible         : false, // flag indicating if scratchbook viewer is visible or not\n    event           : {},    // dictionary keeping track of current event\n\n    initialize : function( options ) {\n        var self = this;\n        this.options = _.defaults( options || {}, this.defaultOptions );\n        this.visible = this.options.visible;\n        this.top = this.top_max = this.options.top_min;\n        this.setElement( $( '<div/>' ).addClass( 'galaxy-frame' )\n                            .append( $( '<div/>' ).addClass( 'frame-background' ) )\n                            .append( $( '<div/>' ).addClass( 'frame-menu frame-scroll-up fa fa-chevron-up fa-2x' ) )\n                            .append( $( '<div/>' ).addClass( 'frame-menu frame-scroll-down fa fa-chevron-down fa-2x' ) ) );\n\n        // initialize shadow to guiding drag/resize events\n        this.frame_shadow = new Backbone.View({ el: $( '<div/>' ).addClass( 'corner frame-shadow' ) } );\n        this.$el.append( this.frame_shadow.$el );\n        this._frameInit( this.frame_shadow, '#frame-shadow' );\n        this._frameResize( this.frame_shadow, { width: 0, height: 0 } );\n        this.frame_list[ '#frame-shadow' ] = this.frame_shadow;\n\n        // initialize panel\n        this.visible ? this.show() : this.hide();\n        this._panelRefresh();\n        $( window ).resize( function() { self.visible && self._panelRefresh() } );\n    },\n\n    /** Render */\n    render: function() {\n        this.$( '.frame-scroll-up' ) [ this.top != this.options.top_min && 'show' || 'hide' ]();\n        this.$( '.frame-scroll-down')[ this.top != this.top_max && 'show' || 'hide' ]();\n    },\n\n    /**\n     * Adds and displays a new frame.\n     *\n     * options:\n     *  url     : loaded into an iframe\n     *  content : content is treated as a function or raw HTML, function is passed a single\n     *              argument that is the frame's content DOM element\n     */\n    add: function( options ) {\n        if ( this.frame_counter >= this.options.frame_max ) {\n            Galaxy.modal.show( {\n                title   : 'Warning',\n                body    : 'You have reached the maximum number of allowed frames (' + this.options.frame_max + ').',\n                buttons : { 'Close' : function() { Galaxy.modal.hide() } }\n            });\n\n        } else {\n            var frame_id = '#frame-' + ( this.frame_uid++ );\n            if ( $ ( frame_id ).length !== 0 ) {\n                Galaxy.modal.show( {\n                    title   : 'Error',\n                    body    : 'This frame already exists. This page might contain multiple frame managers.',\n                    buttons : { 'Close' : function() { Galaxy.modal.hide() } }\n                });\n            } else {\n                // initialize new frame elements\n                this.top = this.options.top_min;\n                var frame = new FrameView( options );\n                this.$el.append( frame.$el );\n\n                // set dimensions\n                options.width   = this._toPixelCoord( 'width', this.options.frame.cols );\n                options.height  = this._toPixelCoord( 'height', this.options.frame.rows );\n\n                // set default z-index and add to ui and frame list\n                this.frame_z = parseInt( frame.$el.css( 'z-index' ) );\n                this.frame_list[ frame_id ] = frame;\n                this.frame_counter++;\n                this._frameInit( frame, frame_id );\n                this._frameResize( frame, { width: options.width, height: options.height } );\n                this._frameInsert( frame, { top: 0, left: 0 }, true );\n                !this.visible && this.show();\n                this.trigger( 'add' );\n            }\n        }\n    },\n\n    /** Remove a frame */\n    del: function( frame ) {\n        var self = this;\n        var $frame = frame.$el;\n        $frame.fadeOut( 'fast', function() {\n            $frame.remove();\n            delete self.frame_list[ frame.id ];\n            self.frame_counter--;\n            self._panelRefresh( true );\n            self._panelAnimationComplete();\n            self.trigger( 'remove' );\n        });\n    },\n\n    /** Show panel */\n    show: function() {\n        this.visible = true;\n        this.$el.fadeIn( 'fast' );\n        this.trigger( 'show' );\n    },\n\n    /** Hide panel */\n    hide: function() {\n        if ( !this.event.type ) {\n            this.visible = false;\n            this.$el.fadeOut('fast', function() { $( this ).hide() });\n            this.trigger( 'hide' );\n        }\n    },\n\n    /** Returns the number of frames */\n    length: function() {\n        return this.frame_counter;\n    },\n\n    /*\n        EVENT HANDLING\n    */\n    events: {\n        // global frame events\n        'mousemove'                         : '_eventFrameMouseMove',\n        'mouseup'                           : '_eventFrameMouseUp',\n        'mouseleave'                        : '_eventFrameMouseUp',\n        'mousewheel'                        : '_eventPanelScroll',\n        'DOMMouseScroll'                    : '_eventPanelScroll',\n\n        // events fixed to elements\n        'mousedown .frame'                  : '_eventFrameMouseDown',\n        'mousedown .frame-background'       : '_eventHide',\n        'mousedown .frame-scroll-up'        : '_eventPanelScroll_up',\n        'mousedown .frame-scroll-down'      : '_eventPanelScroll_down',\n        'mousedown .f-close'                : '_eventFrameClose'\n    },\n\n    /** Start drag/resize event */\n    _eventFrameMouseDown: function ( e ) {\n        $( '.tooltip' ).hide();\n        if ( !this.event.type ) {\n            if ( $( e.target ).hasClass( 'f-header' ) || $( e.target ).hasClass( 'f-title' ) ) {\n                this.event.type = 'drag';\n            }\n            if ( $( e.target ).hasClass( 'f-resize' ) ) {\n                this.event.type = 'resize';\n            }\n            if ( this.event.type ) {\n                e.preventDefault();\n                this.event.target = this._frameIdentify( e.target );\n                this.event.xy = {\n                    x: e.originalEvent.pageX,\n                    y: e.originalEvent.pageY\n                };\n                this._frameDragStart( this.event.target );\n            }\n        }\n    },\n\n    /** Processes drag/resize events */\n    _eventFrameMouseMove: function ( e ) {\n        if ( this.event.type ) {\n            // get mouse motion and delta\n            var event_xy_new = {\n                x : e.originalEvent.pageX,\n                y : e.originalEvent.pageY\n            };\n            var event_xy_delta = {\n                x : event_xy_new.x - this.event.xy.x,\n                y : event_xy_new.y - this.event.xy.y\n            };\n            this.event.xy = event_xy_new;\n\n            // get current screen position and size of frame\n            var p = this._frameScreen ( this.event.target );\n\n            // drag/resize event\n            if ( this.event.type == 'resize' ) {\n                p.width  += event_xy_delta.x;\n                p.height += event_xy_delta.y;\n                var min_dim = this.options.cell - this.options.margin - 1;\n                p.width = Math.max( p.width, min_dim );\n                p.height = Math.max( p.height, min_dim );\n                this._frameResize( this.event.target, p );\n                p.width = this._toGridCoord( 'width', p.width ) + 1;\n                p.height = this._toGridCoord( 'height', p.height ) + 1;\n                p.width = this._toPixelCoord( 'width', p.width );\n                p.height = this._toPixelCoord( 'height', p.height );\n                this._frameResize( this.frame_shadow, p );\n                this._frameInsert( this.frame_shadow, {\n                    top     : this._toGridCoord( 'top', p.top ),\n                    left    : this._toGridCoord( 'left', p.left )\n                });\n            } else if ( this.event.type == 'drag' ) {\n                p.left  += event_xy_delta.x;\n                p.top   += event_xy_delta.y;\n                this._frameOffset( this.event.target, p );\n                var l = {\n                    top     : this._toGridCoord( 'top', p.top ),\n                    left    : this._toGridCoord( 'left', p.left )\n                };\n                l.left !== 0 && l.left++;\n                this._frameInsert( this.frame_shadow, l );\n            }\n        }\n    },\n\n    /** Stop drag/resize events */\n    _eventFrameMouseUp: function ( e ) {\n        if ( this.event.type ) {\n            this._frameDragStop( this.event.target );\n            this.event.type = null;\n        }\n    },\n\n    /** Destroy a frame */\n    _eventFrameClose: function ( e ) {\n        if ( !this.event.type ) {\n            e.preventDefault();\n            this.del( this._frameIdentify( e.target ) );\n        }\n    },\n\n    /** Hide all frames */\n    _eventHide: function ( e ) {\n        !this.event.type && this.hide();\n    },\n\n    /** Fired when scrolling occurs on panel */\n    _eventPanelScroll: function( e ) {\n        if ( !this.event.type && this.visible ) {\n            // Stop propagation if scrolling is happening inside a frame.\n            // TODO: could propagate scrolling if at top/bottom of frame.\n            var frames = $( e.srcElement ).parents( '.frame' );\n            if ( frames.length !== 0 ) {\n                e.stopPropagation();\n            } else {\n                e.preventDefault();\n                this._panelScroll( e.originalEvent.detail ? e.originalEvent.detail : e.originalEvent.wheelDelta / -3 );\n            }\n        }\n    },\n\n    /** Handle scroll up event */\n    _eventPanelScroll_up: function( e ) {\n        if ( !this.event.type ) {\n            e.preventDefault();\n            this._panelScroll( -this.options.scroll );\n        }\n    },\n\n    /** Handle scroll down */\n    _eventPanelScroll_down: function(e) {\n        if ( !this.event.type ) {\n            e.preventDefault();\n            this._panelScroll( this.options.scroll );\n        }\n    },\n\n    /*\n        FRAME EVENTS SUPPORT\n    */\n\n    /** Identify the target frame */\n    _frameIdentify: function( target ) {\n        return this.frame_list[ '#' + $( target ).closest( '.frame' ).attr( 'id' ) ];\n    },\n\n    /** Provides drag support */\n    _frameDragStart : function ( frame ) {\n        this._frameFocus( frame, true );\n        var p = this._frameScreen( frame );\n        this._frameResize( this.frame_shadow, p );\n        this._frameGrid( this.frame_shadow, frame.grid_location );\n        frame.grid_location = null;\n        this.frame_shadow.$el.show();\n        $( '.f-cover' ).show();\n    },\n\n    /** Removes drag support */\n    _frameDragStop : function ( frame ) {\n        this._frameFocus( frame, false );\n        var p = this._frameScreen( this.frame_shadow );\n        this._frameResize( frame, p );\n        this._frameGrid( frame, this.frame_shadow.grid_location, true );\n        this.frame_shadow.grid_location = null;\n        this.frame_shadow.$el.hide();\n        $( '.f-cover' ).hide();\n        this._panelAnimationComplete();\n    },\n\n    /*\n        GRID/PIXEL CONVERTER\n    */\n\n    /** Converts a pixel to a grid dimension */\n    _toGridCoord: function ( type, px ) {\n        var sign = ( type == 'width' || type == 'height' ) ? 1 : -1;\n        type == 'top' && ( px -= this.top );\n        return parseInt( ( px + sign * this.options.margin ) / this.options.cell, 10 );\n    },\n    \n    /** Converts a grid to a pixels dimension */\n    _toPixelCoord: function ( type, g ) {\n        var sign = ( type == 'width' || type == 'height' ) ? 1 : -1;\n        var px = ( g * this.options.cell ) - sign * this.options.margin;\n        type == 'top' && ( px += this.top );\n        return px;\n    },\n\n    /** Converts a pixel to a grid coordinate set */\n    _toGrid: function ( px ) {\n        return {\n            top     : this._toGridCoord( 'top', px.top ),\n            left    : this._toGridCoord( 'left', px.left ),\n            width   : this._toGridCoord( 'width', px.width ),\n            height  : this._toGridCoord( 'height', px.height )\n        };\n    },\n\n    /** Converts a pixel to a grid coordinate set */\n    _toPixel: function( g ) {\n        return {\n            top     : this._toPixelCoord( 'top', g.top ),\n            left    : this._toPixelCoord( 'left', g.left ),\n            width   : this._toPixelCoord( 'width', g.width ),\n            height  : this._toPixelCoord( 'height', g.height )\n        };\n    },\n\n    /* \n        COLLISION DETECTION\n    */\n\n    /** Check collisions for a grid coordinate set */\n    _isCollision: function( g ) {\n        function is_collision_pair ( a, b ) {\n            return !( a.left > b.left + b.width - 1 || a.left + a.width - 1 < b.left ||\n                      a.top > b.top + b.height  - 1 || a.top + a.height - 1 < b.top );\n        }\n        for ( var i in this.frame_list ) {\n            var frame = this.frame_list[ i ];\n            if ( frame.grid_location !== null && is_collision_pair ( g, frame.grid_location ) ) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /** Return location/grid rank */\n    _locationRank: function( loc ) {\n        return ( loc.top * this.cols ) + loc.left;\n    },\n\n    /*\n        PANEL/WINDOW FUNCTIONS\n    */\n\n    /** Refresh panel */\n    _panelRefresh: function( animate ) {\n        this.cols = parseInt( $( window ).width() / this.options.cell, 10 ) + 1;\n        this._frameInsert( null, null, animate );\n    },\n\n    /** Complete panel animation / frames not moving */\n    _panelAnimationComplete: function() {\n        var self = this;\n        $( '.frame' ).promise().done( function() { self._panelScroll( 0, true ) } );\n    },\n\n    /** Scroll panel */\n    _panelScroll: function( delta, animate ) {\n        var top_new = this.top - this.options.scroll * delta;\n        top_new = Math.max( top_new, this.top_max );\n        top_new = Math.min( top_new, this.options.top_min );\n        if ( this.top != top_new ) {\n            for ( var i in this.frame_list ) {\n                var frame = this.frame_list[ i ];\n                if ( frame.grid_location !== null ) {\n                    var screen_location = {\n                        top  : frame.screen_location.top - ( this.top - top_new ),\n                        left : frame.screen_location.left\n                    }\n                    this._frameOffset( frame, screen_location, animate );\n                }\n            }\n            this.top = top_new;\n        }\n        this.render();\n    },\n\n    /*\n        FRAME FUNCTIONS\n    */\n\n    /** Initialize a new frame */\n    _frameInit: function( frame, id ) {\n        frame.id              = id\n        frame.screen_location = {};\n        frame.grid_location   = {};\n        frame.grid_rank       = null;\n        frame.$el.attr( 'id', id.substring( 1 ) );\n    },\n\n    /** Insert frame at given location */\n    _frameInsert: function( frame, new_loc, animate ) {\n        var self = this;\n        var place_list = [];\n        if ( frame ) {\n            frame.grid_location = null;\n            place_list.push( [ frame, this._locationRank( new_loc ) ] );\n        }\n        _.each( this.frame_list, function( f ) {\n            if ( f.grid_location !== null ) {\n                f.grid_location = null;\n                place_list.push( [ f, f.grid_rank ] );\n            }\n        });\n        place_list.sort( function( a, b ) {\n            return a[ 1 ] < b[ 1 ] ? -1 : ( a[ 1 ] > b[ 1 ] ? 1 : 0 );\n        });\n        _.each( place_list, function( place ) {\n            self._framePlace( place[ 0 ], animate );\n        });\n        this.top_max = 0;\n        _.each( this.frame_list, function( f ) {\n            if ( f.grid_location !== null ) {\n                self.top_max = Math.max( self.top_max, f.grid_location.top + f.grid_location.height );\n            }\n        });\n        this.top_max = $( window ).height() - this.top_max * this.options.cell - 2 * this.options.margin;\n        this.top_max = Math.min( this.top_max, this.options.top_min );\n        this.render();\n    },\n\n    /** Naive frame placement */\n    _framePlace: function( frame, animate ) {\n        frame.grid_location = null;\n        var g = this._toGrid( this._frameScreen( frame ) );\n        var done = false;\n        for ( var i = 0; i < this.options.rows; i++ ) {\n            for ( var j = 0; j < Math.max(1, this.cols - g.width ); j++ ) {\n                g.top   = i;\n                g.left  = j;\n                if ( !this._isCollision( g ) ) {\n                    done = true;\n                    break;\n                }\n            }\n            if ( done ) {\n                break;\n            }\n        }\n        if ( done ) {\n            this._frameGrid( frame, g, animate );\n        } else {\n            console.log( 'Grid dimensions exceeded.' );\n        }\n    },\n\n    /** Handle frame focussing */\n    _frameFocus: function( frame, has_focus ) {\n        frame.$el.css( 'z-index', this.frame_z + ( has_focus ? 1 : 0 ) );\n    },\n\n    /** New left/top position frame */\n    _frameOffset: function( frame, p, animate ) {\n        frame.screen_location.left = p.left;\n        frame.screen_location.top = p.top;\n        if ( animate ) {\n            this._frameFocus( frame, true );\n            var self = this;\n            frame.$el.animate({ top: p.top, left: p.left }, 'fast', function() {\n                self._frameFocus( frame, false );\n            });\n        } else {\n            frame.$el.css( { top: p.top, left: p.left } );\n        }\n    },\n\n    /** Resize frame */\n    _frameResize: function( frame, p ) {\n        frame.$el.css( { width: p.width, height: p.height } );\n        frame.screen_location.width = p.width;\n        frame.screen_location.height = p.height;\n    },\n\n    /** Push frame to new grid location */\n    _frameGrid: function ( frame, l, animate ) {\n        frame.grid_location = l;\n        this._frameOffset( frame, this._toPixel( l ), animate );\n        frame.grid_rank = this._locationRank( l );\n    },\n\n    /** Get frame dimensions */\n    _frameScreen: function( frame ) {\n        var p = frame.screen_location;\n        return { top: p.top, left: p.left, width: p.width, height: p.height };\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n"]}