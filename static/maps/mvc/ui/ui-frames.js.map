{"version":3,"sources":["mvc/ui/ui-frames.js"],"names":["define","FrameView","Backbone","View","extend","options","initialize","model","Model","this","setElement","$","addClass","$el","append","title","placement","tooltip","self","$title","$header","_","isFunction","disabled","$option","attr","on","option","listenTo","render","html","url","remove","each","$content","icon","onclick","cell","scroll","top_min","frame_max","indexOf","frame_list","content","frame_shadow","defaultOptions","frame","cols","el","rows","margin","visible","top","top_max","frame_z","frame_counter","event","defaults","Galaxy","body","Close","modal","_frameResize","width","height","show","hide","_panelRefresh","window","resize","parseInt","_frameInit","add","del","$frame","_panelAnimationComplete","trigger","frame_id","frame_uid","length","fadeIn","buttons","type","_toPixelCoord","mouseleave","css","mousewheel","DOMMouseScroll","_frameInsert","left","fadeOut","e","id","preventDefault","event_xy_new","x","originalEvent","y","p","events","mouseup","mousedown .frame","_toGridCoord","mousedown .frame-scroll-down","mousedown .f-close","_eventFrameMouseDown","l","hasClass","target","_frameIdentify","xy","pageX","pageY","_eventFrameClose","_eventFrameMouseMove","_eventPanelScroll","frames","_frameScreen","event_xy_delta","min_dim","Math","max","_eventPanelScroll_up","_panelScroll","_eventPanelScroll_down","_frameOffset","_eventFrameMouseUp","_frameFocus","_frameGrid","_frameDragStop","_eventHide","srcElement","parents","sign","detail","wheelDelta","_toGrid","_toPixel","closest","_isCollision","_frameDragStart","grid_location","px","g","screen_location","i","place_list","sort","a","b","f","place","_locationRank","loc","done","animate","j","promise","delta","console","top_new","min","grid_rank","substring","new_loc","_framePlace","log","has_focus"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-frames.js","sourcesContent":["define([], function() {\n    /** Frame view */\n    var FrameView = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.model =\n                (options && options.model) || new Backbone.Model(options);\n            this.setElement($(\"<div/>\").addClass(\"corner frame\"));\n            this.$el\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"f-header corner\")\n                        .append($(\"<div/>\").addClass(\"f-title\"))\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"f-icon f-close fa fa-close\")\n                                .tooltip({\n                                    title: \"Close\",\n                                    placement: \"bottom\"\n                                })\n                        )\n                )\n                .append($(\"<div/>\").addClass(\"f-content\"))\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"f-resize f-icon corner fa fa-expand\")\n                        .tooltip({ title: \"Resize\" })\n                )\n                .append($(\"<div/>\").addClass(\"f-cover\"));\n            this.$header = this.$(\".f-header\");\n            this.$title = this.$(\".f-title\");\n            this.$content = this.$(\".f-content\");\n            this.render();\n            this.listenTo(this.model, \"change\", this.render, this);\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$title.html(options.title || \"\");\n            this.$header.find(\".f-icon-left\").remove();\n            _.each(options.menu, function(option) {\n                var $option = $(\"<div/>\")\n                    .addClass(\"f-icon-left\")\n                    .addClass(option.icon);\n                if (_.isFunction(option.disabled) && option.disabled()) {\n                    $option.attr(\"disabled\", true);\n                } else {\n                    $option\n                        .on(\"click\", function() {\n                            option.onclick(self);\n                        })\n                        .tooltip({\n                            title: option.tooltip,\n                            placement: \"bottom\"\n                        });\n                }\n                self.$header.append($option);\n            });\n            if (options.url) {\n                this.$content.html(\n                    $(\"<iframe/>\")\n                        .addClass(\"f-iframe\")\n                        .attr(\"scrolling\", \"auto\")\n                        .attr(\n                            \"src\",\n                            options.url +\n                                (options.url.indexOf(\"?\") === -1 ? \"?\" : \"&\") +\n                                \"widget=True\"\n                        )\n                );\n            } else if (options.content) {\n                _.isFunction(options.content)\n                    ? options.content(self.$content)\n                    : self.$content.html(options.content);\n            }\n        }\n    });\n\n    /** Scratchbook viewer */\n    var View = Backbone.View.extend({\n        defaultOptions: {\n            frame: {\n                // default frame size in cells\n                cols: 6,\n                rows: 3\n            },\n            rows: 1000, // maximum number of rows\n            cell: 130, // cell size in px\n            margin: 5, // margin between frames\n            scroll: 5, // scroll speed\n            top_min: 40, // top margin\n            frame_max: 9, // maximum number of frames\n            visible: true // initial visibility\n        },\n\n        cols: 0, // number of columns\n        top: 0, // scroll/element top\n        top_max: 0, // viewport scrolling state\n        frame_z: 0, // frame z-index\n        frame_counter: 0, // frame counter\n        frame_uid: 0, // unique frame id counter\n        frame_list: {}, // list of all frames\n        frame_shadow: null, // frame shown as placeholder when moving active frames\n        visible: false, // flag indicating if scratchbook viewer is visible or not\n        event: {}, // dictionary keeping track of current event\n\n        initialize: function(options) {\n            var self = this;\n            this.options = _.defaults(options || {}, this.defaultOptions);\n            this.visible = this.options.visible;\n            this.top = this.top_max = this.options.top_min;\n            this.setElement(\n                $(\"<div/>\")\n                    .addClass(\"galaxy-frame\")\n                    .append($(\"<div/>\").addClass(\"frame-background\"))\n                    .append(\n                        $(\"<div/>\").addClass(\n                            \"frame-menu frame-scroll-up fa fa-chevron-up fa-2x\"\n                        )\n                    )\n                    .append(\n                        $(\"<div/>\").addClass(\n                            \"frame-menu frame-scroll-down fa fa-chevron-down fa-2x\"\n                        )\n                    )\n            );\n\n            // initialize shadow to guiding drag/resize events\n            this.frame_shadow = new Backbone.View({\n                el: $(\"<div/>\").addClass(\"corner frame-shadow\")\n            });\n            this.$el.append(this.frame_shadow.$el);\n            this._frameInit(this.frame_shadow, \"#frame-shadow\");\n            this._frameResize(this.frame_shadow, { width: 0, height: 0 });\n            this.frame_list[\"#frame-shadow\"] = this.frame_shadow;\n\n            // initialize panel\n            this.visible ? this.show() : this.hide();\n            this._panelRefresh();\n            $(window).resize(function() {\n                self.visible && self._panelRefresh();\n            });\n        },\n\n        /** Render */\n        render: function() {\n            this.$(\".frame-scroll-up\")[\n                (this.top != this.options.top_min && \"show\") || \"hide\"\n            ]();\n            this.$(\".frame-scroll-down\")[\n                (this.top != this.top_max && \"show\") || \"hide\"\n            ]();\n        },\n\n        /**\n     * Adds and displays a new frame.\n     *\n     * options:\n     *  url     : loaded into an iframe\n     *  content : content is treated as a function or raw HTML, function is passed a single\n     *              argument that is the frame's content DOM element\n     */\n        add: function(options) {\n            if (this.frame_counter >= this.options.frame_max) {\n                Galaxy.modal.show({\n                    title: \"Warning\",\n                    body:\n                        \"You have reached the maximum number of allowed frames (\" +\n                        this.options.frame_max +\n                        \").\",\n                    buttons: {\n                        Close: function() {\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n            } else {\n                var frame_id = \"#frame-\" + this.frame_uid++;\n                if ($(frame_id).length !== 0) {\n                    Galaxy.modal.show({\n                        title: \"Error\",\n                        body:\n                            \"This frame already exists. This page might contain multiple frame managers.\",\n                        buttons: {\n                            Close: function() {\n                                Galaxy.modal.hide();\n                            }\n                        }\n                    });\n                } else {\n                    // initialize new frame elements\n                    this.top = this.options.top_min;\n                    var frame = new FrameView(options);\n                    this.$el.append(frame.$el);\n\n                    // set dimensions\n                    options.width = this._toPixelCoord(\n                        \"width\",\n                        this.options.frame.cols\n                    );\n                    options.height = this._toPixelCoord(\n                        \"height\",\n                        this.options.frame.rows\n                    );\n\n                    // set default z-index and add to ui and frame list\n                    this.frame_z = parseInt(frame.$el.css(\"z-index\"));\n                    this.frame_list[frame_id] = frame;\n                    this.frame_counter++;\n                    this._frameInit(frame, frame_id);\n                    this._frameResize(frame, {\n                        width: options.width,\n                        height: options.height\n                    });\n                    this._frameInsert(frame, { top: 0, left: 0 }, true);\n                    !this.visible && this.show();\n                    this.trigger(\"add\");\n                }\n            }\n        },\n\n        /** Remove a frame */\n        del: function(frame) {\n            var self = this;\n            var $frame = frame.$el;\n            $frame.fadeOut(\"fast\", function() {\n                $frame.remove();\n                delete self.frame_list[frame.id];\n                self.frame_counter--;\n                self._panelRefresh(true);\n                self._panelAnimationComplete();\n                self.trigger(\"remove\");\n            });\n        },\n\n        /** Show panel */\n        show: function() {\n            this.visible = true;\n            this.$el.fadeIn(\"fast\");\n            this.trigger(\"show\");\n        },\n\n        /** Hide panel */\n        hide: function() {\n            if (!this.event.type) {\n                this.visible = false;\n                this.$el.fadeOut(\"fast\", function() {\n                    $(this).hide();\n                });\n                this.trigger(\"hide\");\n            }\n        },\n\n        /** Returns the number of frames */\n        length: function() {\n            return this.frame_counter;\n        },\n\n        /*\n        EVENT HANDLING\n    */\n        events: {\n            // global frame events\n            mousemove: \"_eventFrameMouseMove\",\n            mouseup: \"_eventFrameMouseUp\",\n            mouseleave: \"_eventFrameMouseUp\",\n            mousewheel: \"_eventPanelScroll\",\n            DOMMouseScroll: \"_eventPanelScroll\",\n\n            // events fixed to elements\n            \"mousedown .frame\": \"_eventFrameMouseDown\",\n            \"mousedown .frame-background\": \"_eventHide\",\n            \"mousedown .frame-scroll-up\": \"_eventPanelScroll_up\",\n            \"mousedown .frame-scroll-down\": \"_eventPanelScroll_down\",\n            \"mousedown .f-close\": \"_eventFrameClose\"\n        },\n\n        /** Start drag/resize event */\n        _eventFrameMouseDown: function(e) {\n            $(\".tooltip\").hide();\n            if (!this.event.type) {\n                if (\n                    $(e.target).hasClass(\"f-header\") ||\n                    $(e.target).hasClass(\"f-title\")\n                ) {\n                    this.event.type = \"drag\";\n                }\n                if ($(e.target).hasClass(\"f-resize\")) {\n                    this.event.type = \"resize\";\n                }\n                if (this.event.type) {\n                    e.preventDefault();\n                    this.event.target = this._frameIdentify(e.target);\n                    this.event.xy = {\n                        x: e.originalEvent.pageX,\n                        y: e.originalEvent.pageY\n                    };\n                    this._frameDragStart(this.event.target);\n                }\n            }\n        },\n\n        /** Processes drag/resize events */\n        _eventFrameMouseMove: function(e) {\n            if (this.event.type) {\n                // get mouse motion and delta\n                var event_xy_new = {\n                    x: e.originalEvent.pageX,\n                    y: e.originalEvent.pageY\n                };\n                var event_xy_delta = {\n                    x: event_xy_new.x - this.event.xy.x,\n                    y: event_xy_new.y - this.event.xy.y\n                };\n                this.event.xy = event_xy_new;\n\n                // get current screen position and size of frame\n                var p = this._frameScreen(this.event.target);\n\n                // drag/resize event\n                if (this.event.type == \"resize\") {\n                    p.width += event_xy_delta.x;\n                    p.height += event_xy_delta.y;\n                    var min_dim = this.options.cell - this.options.margin - 1;\n                    p.width = Math.max(p.width, min_dim);\n                    p.height = Math.max(p.height, min_dim);\n                    this._frameResize(this.event.target, p);\n                    p.width = this._toGridCoord(\"width\", p.width) + 1;\n                    p.height = this._toGridCoord(\"height\", p.height) + 1;\n                    p.width = this._toPixelCoord(\"width\", p.width);\n                    p.height = this._toPixelCoord(\"height\", p.height);\n                    this._frameResize(this.frame_shadow, p);\n                    this._frameInsert(this.frame_shadow, {\n                        top: this._toGridCoord(\"top\", p.top),\n                        left: this._toGridCoord(\"left\", p.left)\n                    });\n                } else if (this.event.type == \"drag\") {\n                    p.left += event_xy_delta.x;\n                    p.top += event_xy_delta.y;\n                    this._frameOffset(this.event.target, p);\n                    var l = {\n                        top: this._toGridCoord(\"top\", p.top),\n                        left: this._toGridCoord(\"left\", p.left)\n                    };\n                    l.left !== 0 && l.left++;\n                    this._frameInsert(this.frame_shadow, l);\n                }\n            }\n        },\n\n        /** Stop drag/resize events */\n        _eventFrameMouseUp: function(e) {\n            if (this.event.type) {\n                this._frameDragStop(this.event.target);\n                this.event.type = null;\n            }\n        },\n\n        /** Destroy a frame */\n        _eventFrameClose: function(e) {\n            if (!this.event.type) {\n                e.preventDefault();\n                this.del(this._frameIdentify(e.target));\n            }\n        },\n\n        /** Hide all frames */\n        _eventHide: function(e) {\n            !this.event.type && this.hide();\n        },\n\n        /** Fired when scrolling occurs on panel */\n        _eventPanelScroll: function(e) {\n            if (!this.event.type && this.visible) {\n                // Stop propagation if scrolling is happening inside a frame.\n                // TODO: could propagate scrolling if at top/bottom of frame.\n                var frames = $(e.srcElement).parents(\".frame\");\n                if (frames.length !== 0) {\n                    e.stopPropagation();\n                } else {\n                    e.preventDefault();\n                    this._panelScroll(\n                        e.originalEvent.detail\n                            ? e.originalEvent.detail\n                            : e.originalEvent.wheelDelta / -3\n                    );\n                }\n            }\n        },\n\n        /** Handle scroll up event */\n        _eventPanelScroll_up: function(e) {\n            if (!this.event.type) {\n                e.preventDefault();\n                this._panelScroll(-this.options.scroll);\n            }\n        },\n\n        /** Handle scroll down */\n        _eventPanelScroll_down: function(e) {\n            if (!this.event.type) {\n                e.preventDefault();\n                this._panelScroll(this.options.scroll);\n            }\n        },\n\n        /*\n        FRAME EVENTS SUPPORT\n    */\n\n        /** Identify the target frame */\n        _frameIdentify: function(target) {\n            return this.frame_list[\n                \"#\" +\n                    $(target)\n                        .closest(\".frame\")\n                        .attr(\"id\")\n            ];\n        },\n\n        /** Provides drag support */\n        _frameDragStart: function(frame) {\n            this._frameFocus(frame, true);\n            var p = this._frameScreen(frame);\n            this._frameResize(this.frame_shadow, p);\n            this._frameGrid(this.frame_shadow, frame.grid_location);\n            frame.grid_location = null;\n            this.frame_shadow.$el.show();\n            $(\".f-cover\").show();\n        },\n\n        /** Removes drag support */\n        _frameDragStop: function(frame) {\n            this._frameFocus(frame, false);\n            var p = this._frameScreen(this.frame_shadow);\n            this._frameResize(frame, p);\n            this._frameGrid(frame, this.frame_shadow.grid_location, true);\n            this.frame_shadow.grid_location = null;\n            this.frame_shadow.$el.hide();\n            $(\".f-cover\").hide();\n            this._panelAnimationComplete();\n        },\n\n        /*\n        GRID/PIXEL CONVERTER\n    */\n\n        /** Converts a pixel to a grid dimension */\n        _toGridCoord: function(type, px) {\n            var sign = type == \"width\" || type == \"height\" ? 1 : -1;\n            type == \"top\" && (px -= this.top);\n            return parseInt(\n                (px + sign * this.options.margin) / this.options.cell,\n                10\n            );\n        },\n\n        /** Converts a grid to a pixels dimension */\n        _toPixelCoord: function(type, g) {\n            var sign = type == \"width\" || type == \"height\" ? 1 : -1;\n            var px = g * this.options.cell - sign * this.options.margin;\n            type == \"top\" && (px += this.top);\n            return px;\n        },\n\n        /** Converts a pixel to a grid coordinate set */\n        _toGrid: function(px) {\n            return {\n                top: this._toGridCoord(\"top\", px.top),\n                left: this._toGridCoord(\"left\", px.left),\n                width: this._toGridCoord(\"width\", px.width),\n                height: this._toGridCoord(\"height\", px.height)\n            };\n        },\n\n        /** Converts a pixel to a grid coordinate set */\n        _toPixel: function(g) {\n            return {\n                top: this._toPixelCoord(\"top\", g.top),\n                left: this._toPixelCoord(\"left\", g.left),\n                width: this._toPixelCoord(\"width\", g.width),\n                height: this._toPixelCoord(\"height\", g.height)\n            };\n        },\n\n        /* \n        COLLISION DETECTION\n    */\n\n        /** Check collisions for a grid coordinate set */\n        _isCollision: function(g) {\n            function is_collision_pair(a, b) {\n                return !(\n                    a.left > b.left + b.width - 1 ||\n                    a.left + a.width - 1 < b.left ||\n                    a.top > b.top + b.height - 1 ||\n                    a.top + a.height - 1 < b.top\n                );\n            }\n            for (var i in this.frame_list) {\n                var frame = this.frame_list[i];\n                if (\n                    frame.grid_location !== null &&\n                    is_collision_pair(g, frame.grid_location)\n                ) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        /** Return location/grid rank */\n        _locationRank: function(loc) {\n            return loc.top * this.cols + loc.left;\n        },\n\n        /*\n        PANEL/WINDOW FUNCTIONS\n    */\n\n        /** Refresh panel */\n        _panelRefresh: function(animate) {\n            this.cols = parseInt($(window).width() / this.options.cell, 10) + 1;\n            this._frameInsert(null, null, animate);\n        },\n\n        /** Complete panel animation / frames not moving */\n        _panelAnimationComplete: function() {\n            var self = this;\n            $(\".frame\")\n                .promise()\n                .done(function() {\n                    self._panelScroll(0, true);\n                });\n        },\n\n        /** Scroll panel */\n        _panelScroll: function(delta, animate) {\n            var top_new = this.top - this.options.scroll * delta;\n            top_new = Math.max(top_new, this.top_max);\n            top_new = Math.min(top_new, this.options.top_min);\n            if (this.top != top_new) {\n                for (var i in this.frame_list) {\n                    var frame = this.frame_list[i];\n                    if (frame.grid_location !== null) {\n                        var screen_location = {\n                            top:\n                                frame.screen_location.top -\n                                (this.top - top_new),\n                            left: frame.screen_location.left\n                        };\n                        this._frameOffset(frame, screen_location, animate);\n                    }\n                }\n                this.top = top_new;\n            }\n            this.render();\n        },\n\n        /*\n        FRAME FUNCTIONS\n    */\n\n        /** Initialize a new frame */\n        _frameInit: function(frame, id) {\n            frame.id = id;\n            frame.screen_location = {};\n            frame.grid_location = {};\n            frame.grid_rank = null;\n            frame.$el.attr(\"id\", id.substring(1));\n        },\n\n        /** Insert frame at given location */\n        _frameInsert: function(frame, new_loc, animate) {\n            var self = this;\n            var place_list = [];\n            if (frame) {\n                frame.grid_location = null;\n                place_list.push([frame, this._locationRank(new_loc)]);\n            }\n            _.each(this.frame_list, function(f) {\n                if (f.grid_location !== null) {\n                    f.grid_location = null;\n                    place_list.push([f, f.grid_rank]);\n                }\n            });\n            place_list.sort(function(a, b) {\n                return a[1] < b[1] ? -1 : a[1] > b[1] ? 1 : 0;\n            });\n            _.each(place_list, function(place) {\n                self._framePlace(place[0], animate);\n            });\n            this.top_max = 0;\n            _.each(this.frame_list, function(f) {\n                if (f.grid_location !== null) {\n                    self.top_max = Math.max(\n                        self.top_max,\n                        f.grid_location.top + f.grid_location.height\n                    );\n                }\n            });\n            this.top_max =\n                $(window).height() -\n                this.top_max * this.options.cell -\n                2 * this.options.margin;\n            this.top_max = Math.min(this.top_max, this.options.top_min);\n            this.render();\n        },\n\n        /** Naive frame placement */\n        _framePlace: function(frame, animate) {\n            frame.grid_location = null;\n            var g = this._toGrid(this._frameScreen(frame));\n            var done = false;\n            for (var i = 0; i < this.options.rows; i++) {\n                for (var j = 0; j < Math.max(1, this.cols - g.width); j++) {\n                    g.top = i;\n                    g.left = j;\n                    if (!this._isCollision(g)) {\n                        done = true;\n                        break;\n                    }\n                }\n                if (done) {\n                    break;\n                }\n            }\n            if (done) {\n                this._frameGrid(frame, g, animate);\n            } else {\n                console.log(\"Grid dimensions exceeded.\");\n            }\n        },\n\n        /** Handle frame focussing */\n        _frameFocus: function(frame, has_focus) {\n            frame.$el.css(\"z-index\", this.frame_z + (has_focus ? 1 : 0));\n        },\n\n        /** New left/top position frame */\n        _frameOffset: function(frame, p, animate) {\n            frame.screen_location.left = p.left;\n            frame.screen_location.top = p.top;\n            if (animate) {\n                this._frameFocus(frame, true);\n                var self = this;\n                frame.$el.animate(\n                    { top: p.top, left: p.left },\n                    \"fast\",\n                    function() {\n                        self._frameFocus(frame, false);\n                    }\n                );\n            } else {\n                frame.$el.css({ top: p.top, left: p.left });\n            }\n        },\n\n        /** Resize frame */\n        _frameResize: function(frame, p) {\n            frame.$el.css({ width: p.width, height: p.height });\n            frame.screen_location.width = p.width;\n            frame.screen_location.height = p.height;\n        },\n\n        /** Push frame to new grid location */\n        _frameGrid: function(frame, l, animate) {\n            frame.grid_location = l;\n            this._frameOffset(frame, this._toPixel(l), animate);\n            frame.grid_rank = this._locationRank(l);\n        },\n\n        /** Get frame dimensions */\n        _frameScreen: function(frame) {\n            var p = frame.screen_location;\n            return {\n                top: p.top,\n                left: p.left,\n                width: p.width,\n                height: p.height\n            };\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}