{"version":3,"sources":["mvc/ui/ui-select-content.js"],"names":["define","Utils","Ui","Select","Batch","DISABLED","ENABLED","LINKED","Configurations","data","src","icon","tooltip","multiple","batch","data_multiple","data_collection","workflow_data","workflow_data_multiple","workflow_data_collection","module_data","module_data_collection","View","Backbone","extend","initialize","options","self","this","model","Model","src_labels","hda","hdca","pagelimit","set","setElement","$","addClass","button_product","RadioButton","value","$batch_div","append","html","$batch","linked","clone","enabled","$el","css","history","listenTo","_changeData","_changeWait","_changeCurrent","_changeValue","_changeType","render","on","onchange","wait","unwait","update","new_value","undefined","current","get","config","id_list","fields","isArray","length","result","_batch","values","i","details","Galaxy","emit","debug","push","sort","a","b","hid","_","each","field","show","$batchfield","batchmode","button_type","hide","config_id","String","extensions","textify","button_data","c","optional","searchable","selectall","error_text","trigger","empty","button_width","Math","max","margin-left","select_options","items","item","keep","label","name","id","tags","add","list","indexOf","map_over_type"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-select-content.js","sourcesContent":["define([ 'utils/utils', 'mvc/ui/ui-misc', 'mvc/ui/ui-select-default' ], function( Utils, Ui, Select ) {\n\n/** Batch mode variations */\nvar Batch = { DISABLED: 'disabled', ENABLED: 'enabled', LINKED: 'linked' };\n\n/** List of available content selectors options */\nvar Configurations = {\n    data: [\n        { src: 'hda',  icon: 'fa-file-o',   tooltip: 'Single dataset',       multiple: false,   batch: Batch.DISABLED   },\n        { src: 'hda',  icon: 'fa-files-o',  tooltip: 'Multiple datasets',    multiple: true,    batch: Batch.LINKED     },\n        { src: 'hdca', icon: 'fa-folder-o', tooltip: 'Dataset collection',   multiple: false,   batch: Batch.LINKED     } ],\n    data_multiple: [\n        { src: 'hda',  icon: 'fa-files-o',  tooltip: 'Multiple datasets',    multiple: true,    batch: Batch.DISABLED   },\n        { src: 'hdca', icon: 'fa-folder-o', tooltip: 'Dataset collection',   multiple: false,   batch: Batch.DISABLED   } ],\n    data_collection: [\n        { src: 'hdca', icon: 'fa-folder-o', tooltip: 'Dataset collection',   multiple: false,   batch: Batch.DISABLED   } ],\n    workflow_data: [\n        { src: 'hda',  icon: 'fa-file-o',   tooltip: 'Single dataset',       multiple: false,   batch: Batch.DISABLED   } ],\n    workflow_data_multiple: [\n        { src: 'hda',  icon: 'fa-files-o',  tooltip: 'Multiple datasets',    multiple: true,    batch: Batch.DISABLED   } ],\n    workflow_data_collection: [\n        { src: 'hdca', icon: 'fa-folder-o', tooltip: 'Dataset collection',   multiple: false,   batch: Batch.DISABLED   } ],\n    module_data: [\n        { src: 'hda',  icon: 'fa-file-o',   tooltip: 'Single dataset',       multiple: false,   batch: Batch.DISABLED   },\n        { src: 'hda',  icon: 'fa-files-o',  tooltip: 'Multiple datasets',    multiple: true,    batch: Batch.ENABLED    } ],\n    module_data_collection: [\n        { src: 'hdca', icon: 'fa-folder-o', tooltip: 'Dataset collection',   multiple: false,   batch: Batch.DISABLED   },\n        { src: 'hdca', icon: 'fa-folder',   tooltip: 'Multiple collections', multiple: true,    batch: Batch.ENABLED    } ]\n};\n\n/** View for hda and hdca content selector ui elements */\nvar View = Backbone.View.extend({\n    initialize : function( options ) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model({\n            src_labels  : { 'hda' : 'dataset', 'hdca': 'dataset collection' },\n            pagelimit   : 100\n        }).set( options );\n        this.setElement( $( '<div/>' ).addClass( 'ui-select-content' ) );\n        this.button_product = new Ui.RadioButton.View( {\n            value       : 'false',\n            data        : [ { icon: 'fa fa-chain', value: 'false',\n                              tooltip: 'Linked inputs will be run in matched order with other datasets e.g. use this for matching forward and reverse reads.' },\n                            { icon: 'fa fa-chain-broken',  value: 'true',\n                              tooltip: 'Unlinked dataset inputs will be run against *all* other inputs.' } ] } );\n        var $batch_div = $( '<div/>' ).addClass( 'ui-form-info' )\n                            .append( $( '<i/>' ).addClass( 'fa fa-sitemap' ) )\n                            .append( $( '<span/>' ).html( 'This is a batch mode input field. Separate jobs will be triggered for each dataset selection.' ) );\n        this.$batch = {\n            linked  : $batch_div.clone(),\n            enabled : $batch_div.clone().append( $( '<div/>' )\n                                                    .append( $( '<div/>' ).addClass( 'ui-form-title' ).html( 'Batch options:' ) )\n                                                    .append( this.button_product.$el ) )\n                                                    .append( $( '<div/>' ).css( 'clear', 'both' ) )\n        };\n\n        // track current history elements\n        this.history = {};\n\n        // add listeners\n        this.listenTo( this.model, 'change:data', this._changeData, this );\n        this.listenTo( this.model, 'change:wait', this._changeWait, this );\n        this.listenTo( this.model, 'change:current', this._changeCurrent, this );\n        this.listenTo( this.model, 'change:value', this._changeValue, this );\n        this.listenTo( this.model, 'change:type change:optional change:multiple change:extensions', this._changeType, this );\n        this.render();\n\n        // add change event\n        this.on( 'change', function() { options.onchange && options.onchange( self.value() ) } );\n    },\n\n    render: function() {\n        this._changeType();\n        this._changeValue();\n        this._changeWait();\n    },\n\n    /** Indicate that select fields are being updated */\n    wait: function() {\n        this.model.set( 'wait', true );\n    },\n\n    /** Indicate that the options update has been completed */\n    unwait: function() {\n        this.model.set( 'wait', false );\n    },\n\n    /** Update data representing selectable options */\n    update: function( options ) {\n        this.model.set( 'data', options );\n    },\n\n    /** Return the currently selected dataset values */\n    value: function ( new_value ) {\n        new_value !== undefined && this.model.set( 'value', new_value );\n        var current = this.model.get( 'current' );\n        if ( this.config[ current ] ) {\n            var id_list = this.fields[ current ].value();\n            if (id_list !== null) {\n                id_list = $.isArray( id_list ) ? id_list : [ id_list ];\n                if ( id_list.length > 0 ) {\n                    var result = this._batch( { values: [] } );\n                    for ( var i in id_list ) {\n                        var details = this.history[ id_list[ i ] + '_' + this.config[ current ].src ];\n                        if ( details ) {\n                            result.values.push( details );\n                        } else {\n                            Galaxy.emit.debug( 'ui-select-content::value()', 'Requested details not found for \\'' + id_list[ i ] + '\\'.'  );\n                            return null;\n                        }\n                    }\n                    result.values.sort( function( a, b ) { return a.hid - b.hid } );\n                    return result;\n                }\n            }\n        } else {\n            Galaxy.emit.debug( 'ui-select-content::value()', 'Invalid value/source \\'' + new_value + '\\'.'  );\n        }\n        return null;\n    },\n\n    /** Change of current select field */\n    _changeCurrent: function() {\n        var self = this;\n        _.each( this.fields, function( field, i ) {\n            if ( self.model.get( 'current' ) == i ) {\n                field.$el.show();\n                _.each( self.$batch, function( $batchfield, batchmode ) {\n                    $batchfield[ self.config[ i ].batch == batchmode ? 'show' : 'hide' ]();\n                });\n                self.button_type.value( i );\n            } else {\n                field.$el.hide();\n            }\n        });\n    },\n\n    /** Change of type */\n    _changeType: function() {\n        var self = this;\n\n        // identify selector type identifier i.e. [ flavor ]_[ type ]_[ multiple ]\n        var config_id = ( this.model.get( 'flavor' ) ? this.model.get( 'flavor' ) + '_' : '' ) +\n                        String( this.model.get( 'type' ) ) + ( this.model.get( 'multiple' ) ? '_multiple' : '' );\n        if ( Configurations[ config_id ] ) {\n            this.config = Configurations[ config_id ];\n        } else {\n            this.config = Configurations[ 'data' ];\n            Galaxy.emit.debug( 'ui-select-content::_changeType()', 'Invalid configuration/type id \\'' + config_id + '\\'.'  );\n        }\n\n        // prepare extension component of error message\n        var data = self.model.get( 'data' );\n        var extensions = Utils.textify( this.model.get( 'extensions' ) );\n        var src_labels = this.model.get( 'src_labels' );\n\n        // build views\n        this.fields = [];\n        this.button_data = [];\n        _.each( this.config, function( c, i ) {\n            self.button_data.push({\n                value   : i,\n                icon    : c.icon,\n                tooltip : c.tooltip\n            });\n            self.fields.push(\n                new Select.View({\n                    optional    : self.model.get( 'optional' ),\n                    multiple    : c.multiple,\n                    searchable  : !c.multiple || ( data && data[ c.src ] && data[ c.src ].length > self.model.get( 'pagelimit' ) ),\n                    selectall   : false,\n                    error_text  : 'No ' + ( extensions ? extensions + ' ' : '' ) + ( src_labels[ c.src ] || 'content' ) + ' available.',\n                    onchange    : function() {\n                        self.trigger( 'change' );\n                    }\n                })\n            );\n        });\n        this.button_type = new Ui.RadioButton.View({\n            value   : this.model.get( 'current' ),\n            data    : this.button_data,\n            onchange: function( value ) {\n                self.model.set( 'current', value );\n                self.trigger( 'change' );\n            }\n        });\n\n        // append views\n        this.$el.empty();\n        var button_width = 0;\n        if ( this.fields.length > 1 ) {\n            this.$el.append( this.button_type.$el );\n            button_width = Math.max( 0, this.fields.length * 36 ) + 'px';\n        }\n        _.each( this.fields, function( field ) {\n            self.$el.append( field.$el.css( { 'margin-left': button_width } ) );\n        });\n        _.each( this.$batch, function( $batchfield, batchmode ) {\n            self.$el.append( $batchfield.css( { 'margin-left': button_width } ) );\n        });\n        this.model.set( 'current', 0 );\n        this._changeCurrent();\n        this._changeData();\n    },\n\n    /** Change of wait flag */\n    _changeWait: function() {\n        var self = this;\n        _.each( this.fields, function( field ) { field[ self.model.get( 'wait' ) ? 'wait' : 'unwait' ]() } );\n    },\n\n    /** Change of available options */\n    _changeData: function() {\n        var options = this.model.get( 'data' );\n        var self = this;\n        var select_options = {};\n        _.each( options, function( items, src ) {\n            select_options[ src ] = [];\n            _.each( items, function( item ) {\n                select_options[ src ].push({\n                    hid  : item.hid,\n                    keep : item.keep,\n                    label: item.hid + ': ' + item.name,\n                    value: item.id,\n                    tags : item.tags\n                });\n                self.history[ item.id + '_' + src ] = item;\n            });\n        });\n        _.each( this.config, function( c, i ) {\n            select_options[ c.src ] && self.fields[ i ].add( select_options[ c.src ], function( a, b ) { return b.hid - a.hid } );\n        });\n    },\n\n    /** Change of incoming value */\n    _changeValue: function () {\n        var new_value = this.model.get( 'value' );\n        if ( new_value && new_value.values && new_value.values.length > 0 ) {\n            // create list with content ids\n            var list = [];\n            _.each( new_value.values, function( value ) {\n                list.push( value.id );\n            });\n            // sniff first suitable field type from config list\n            var src = new_value.values[ 0 ].src;\n            var multiple = new_value.values.length > 1;\n            for( var i = 0; i < this.config.length; i++ ) {\n                var field = this.fields[ i ];\n                var c = this.config[ i ];\n                if ( c.src == src && [ multiple, true ].indexOf( c.multiple ) !== -1 ) {\n                    this.model.set( 'current', i );\n                    field.value( list );\n                    break;\n                }\n            }\n        } else {\n            _.each( this.fields, function( field ) {\n                field.value( null );\n            });\n        }\n    },\n\n    /** Assists in identifying the batch mode */\n    _batch: function( result ) {\n        result[ 'batch' ] = false;\n        var current = this.model.get( 'current' );\n        var config = this.config[ current ];\n        if ( config.src == 'hdca' && !config.multiple ) {\n            var hdca = this.history[ this.fields[ current ].value() + '_hdca' ];\n            if ( hdca && hdca.map_over_type ) {\n                result[ 'batch' ] = true;\n            }\n        }\n        if ( config.batch == Batch.LINKED || config.batch == Batch.ENABLED ) {\n            result[ 'batch' ] = true;\n            if ( config.batch == Batch.ENABLED && this.button_product.value() === 'true' ) {\n                result[ 'product' ] = true;\n            }\n        }\n        return result;\n    }\n});\n\nreturn {\n    View: View\n}\n\n});"]}