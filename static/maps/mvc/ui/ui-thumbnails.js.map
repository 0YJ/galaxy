{"version":3,"sources":["mvc/ui/ui-thumbnails.js"],"names":["define","Utils","Ui","Tabs","View","Backbone","extend","events","initialize","options","this","model","Model","get","collection","Collection","tabs","setElement","$el","addClass","render","first","delAll","_renderDefault","self","index","title_length","indexOf","$","_templateThumbnailItem","title","id","append","substr","length","title_icon","placement","children","add","uid","_renderList","each","_templateRegularItem","attributes","value","new_value","undefined","attr","removeClass","before","after","change_handler","_onclick","e","target","closest","_ondblclick","image_src","description"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-thumbnails.js","sourcesContent":["/** This class renders the selection grid. */\ndefine( [ 'utils/utils', 'mvc/ui/ui-misc', 'mvc/ui/ui-tabs' ], function( Utils, Ui, Tabs ) {\n    var View = Backbone.View.extend({\n        events : {\n            'click .ui-thumbnails-item'    : '_onclick',\n            'dblclick .ui-thumbnails-item' : '_ondblclick'\n        },\n\n        initialize : function( options ) {\n            this.model = options.model || new Backbone.Model( options );\n            this.collection = new Backbone.Collection( this.model.get( 'collection' ) );\n            this.tabs = new Tabs.View({});\n            this.setElement( this.tabs.$el.addClass( 'ui-thumbnails' ) );\n            this.render();\n            this.listenTo( this.model, 'change', this.render, this );\n            this.listenTo( this.collection, 'reset change add remove', this.render, this );\n        },\n\n        render: function() {\n            this.first = null;\n            this.tabs.delAll();\n            this._renderDefault();\n            this._renderList();\n        },\n\n        _renderDefault: function() {\n            var self = this;\n            var index = [];\n            var title_length = 20;\n            var $el = $( '<div/>' ).addClass( 'ui-thumbnails-grid' );\n            this.collection.each( function( model ) {\n                if ( model.get( 'keywords' ).indexOf( 'default' ) !== -1 ) {\n                    var title = model.get( 'title' );\n                    $el.append( $( self._templateThumbnailItem( {\n                        id          : model.id,\n                        title       : title.length < title_length ? title : title.substr( 0, title_length ) + '...',\n                        title_icon  : model.get( 'title_icon' ),\n                        image_src   : model.get( 'image_src' )\n                    })).tooltip( { title: model.get( 'description' ), placement: 'bottom' } ) );\n                }\n            });\n            if ( $el.children().length > 0 ) {\n                this.tabs.add( { id: Utils.uid(), title: self.model.get( 'title_default' ), $el: $el } );\n            }\n        },\n\n        _renderList: function() {\n            var self = this;\n            if ( this.collection.length > 0 ) {\n                this.first = this.first || this.collection.first().id;\n                var $el = $( '<div/>' ).addClass( 'ui-thumbnails-grid' );\n                this.collection.each( function( model ) {\n                    $el.append( self._templateRegularItem( model.attributes ) );\n                });\n                this.tabs.add( { id: Utils.uid(), title: self.model.get( 'title_list' ), $el: $el } );\n            }\n        },\n\n        /** Set/Get value */\n        value: function( new_value ) {\n            if ( new_value !== undefined ) {\n                new_value = new_value == '__first' ? this.first : new_value;\n                var before = this.$( '.ui-thumbnail-current' ).attr( 'value' );\n                this.$( '.ui-thumbnail-current' ).removeClass( 'ui-thumbnail-current' );\n                this.$( '[value=\"' + new_value + '\"]' ).addClass( 'ui-thumbnail-current' );\n                var after = this.$( '.ui-thumbnail-current' ).attr( 'value' );\n                var change_handler = this.model.get( 'onchange' );\n                after != before && change_handler && change_handler( after );\n            }\n            return this.$( '.ui-thumbnail-current' ).attr( 'value' );\n        },\n\n        /** Add click handler */\n        _onclick: function( e ) {\n            this.value( $( e.target ).closest( '.ui-thumbnails-item' ).attr( 'value' ) );\n        },\n\n        /** Add double click handler */\n        _ondblclick: function( e ) {\n            this.model.get( 'ondblclick' ) && this.model.get( 'ondblclick' )( this.value() );\n        },\n\n        /* Thumbnail template with image */\n        _templateThumbnailItem: function( options ) {\n            return  '<div class=\"ui-thumbnails-item ui-thumbnails-item-float\" value=\"' + options.id + '\">' +\n                        '<img class=\"ui-thumbnails-image\" src=\"' + options.image_src + '\">' +\n                        '<div class=\"ui-thumbnails-title ui-form-info\">' +\n                            '<span class=\"fa ' + options.title_icon + '\"/>' + options.title +\n                        '</div>' +\n                    '<div>';\n        },\n\n        /* Thumbnail template with image and description */\n        _templateRegularItem: function( options ) {\n            return  '<div class=\"ui-thumbnails-item\" value=\"' + options.id + '\">' +\n                        '<table>' +\n                            '<tr>' +\n                                '<td>' +\n                                    '<img class=\"ui-thumbnails-image\" src=\"' + options.image_src + '\">' +\n                                '</td>' +\n                                '<td>' +\n                                    '<div class=\"ui-thumbnails-description-title ui-form-info\">' + options.title + '</div>' +\n                                    '<div class=\"ui-thumbnails-description-text ui-form-info\">' + options.description + '</div>' +\n                                '</td>' +\n                            '</tr>' +\n                    '<div>';\n        }\n    });\n\n    return { View: View }\n});"]}