{"version":3,"sources":["mvc/ui/ui-portlet.js"],"names":["define","Utils","Ui","View","Backbone","extend","initialize","options","visible","this","Model","id","uid","cls","title","icon","buttons","body","scrollable","nopadding","operations","collapsible","collapsible_button","collapsed","onchange_title","$body","$","$title_text","$title_icon","$header","$content","$backdrop","$buttons","$operations","model","get","append","ButtonIcon","tooltip","self","onclick","render","attributes","$el","removeClass","addClass","attr","html","_","each","show","hide","off","on","collapse","expand","make_text_editable","new_title","on_finish","name","item","prop","empty","header","fadeIn","disableButton","enableButton","find","hideOperation","showOperation","setOperation","callback","height","setIcon","disable","enable","_template"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-portlet.js","sourcesContent":["define([ 'utils/utils', 'mvc/ui/ui-misc' ], function( Utils, Ui ) {\nvar View = Backbone.View.extend({\n    visible     : false,\n    initialize  : function( options ) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model( {\n            id                  : Utils.uid(),\n            cls                 : 'ui-portlet',\n            title               : '',\n            icon                : '',\n            buttons             : null,\n            body                : null,\n            scrollable          : true,\n            nopadding           : false,\n            operations          : null,\n            collapsible         : false,\n            collapsible_button  : false,\n            collapsed           : false,\n            onchange_title      : null\n        } ).set( options );\n        this.setElement( this._template() );\n\n        // link all dom elements\n        this.$body          = this.$( '.portlet-body' );\n        this.$title_text    = this.$( '.portlet-title-text' );\n        this.$title_icon    = this.$( '.portlet-title-icon' );\n        this.$header        = this.$( '.portlet-header' );\n        this.$content       = this.$( '.portlet-content' );\n        this.$backdrop      = this.$( '.portlet-backdrop' );\n        this.$buttons       = this.$( '.portlet-buttons' );\n        this.$operations    = this.$( '.portlet-operations' );\n\n        // add body to component list\n        this.model.get( 'body' ) && this.append( this.model.get( 'body' ) );\n\n        // add icon for collapsible option\n        this.collapsible_button = new Ui.ButtonIcon({\n            icon    : 'fa-eye',\n            tooltip : 'Collapse/Expand',\n            cls     : 'ui-button-icon-plain',\n            onclick : function() { self[ self.collapsed ? 'expand' : 'collapse' ]() }\n        });\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el.removeClass().addClass( options.cls ).attr( 'id', options.id );\n        this.$header[ options.title ? 'show' : 'hide' ]();\n        this.$title_text.html( options.title );\n        _.each( [ this.$content, this.$body ], function( $el ) {\n            $el[ options.nopadding ? 'addClass' : 'removeClass' ]( 'no-padding' );\n        });\n\n        // render title icon\n        if ( options.icon ) {\n            this.$title_icon.removeClass().addClass( 'portlet-title-icon fa' ).addClass( options.icon ).show();\n        } else {\n            this.$title_icon.hide();\n        }\n\n        // make portlet collapsible\n        this.$title_text[ options.collapsible ? 'addClass' : 'removeClass' ]( 'no-highlight collapsible' ).off();\n        if ( options.collapsible ) {\n            this.$title_text.on( 'click', function() { self[ self.collapsed ? 'expand' : 'collapse' ]() } );\n            options.collapsed ? this.collapse() : this.expand();\n        }\n\n        // allow title editing\n        this.$title_text.prop( 'disabled', !options.onchange_title );\n        options.onchange_title && this.$title_text.make_text_editable({\n            on_finish: function( new_title ) {\n                options.onchange_title( new_title );\n            }\n        });\n\n        // render buttons\n        if ( options.buttons ) {\n            this.$buttons.empty().show();\n            $.each( this.model.get( 'buttons' ), function( name, item ) {\n                item.$el.prop( 'id', name );\n                self.$buttons.append( item.$el );\n            });\n        } else {\n            this.$buttons.hide();\n        }\n\n        // render operations\n        this.$operations.empty;\n        if ( options.collapsible_button ) {\n            this.$operations.append( this.collapsible_button.$el );\n        }\n        if ( options.operations ) {\n            $.each( options.operations, function( name, item ) {\n                item.$el.prop( 'id', name );\n                self.$operations.append( item.$el );\n            });\n        }\n        return this;\n    },\n\n    /** Append new doms to body */\n    append: function( $el ) {\n        this.$body.append( $el );\n    },\n\n    /** Remove all content */\n    empty: function() {\n        this.$body.empty();\n    },\n\n    /** Return header element */\n    header: function() {\n        return this.$header;\n    },\n\n    /** Return body element */\n    body: function() {\n        return this.$body;\n    },\n\n    /** Show portlet */\n    show: function(){\n        this.visible = true;\n        this.$el.fadeIn( 'fast' );\n    },\n\n    /** Hide portlet */\n    hide: function(){\n        this.visible = false;\n        this.$el.hide();\n    },\n\n    /** Enable a particular button */\n    enableButton: function( id ) {\n        this.$buttons.find( '#' + id ).prop( 'disabled', false );\n    },\n\n    /** Disable a particular button */\n    disableButton: function( id ) {\n        this.$buttons.find( '#' + id ).prop( 'disabled', true );\n    },\n\n    /** Hide a particular operation */\n    hideOperation: function( id ) {\n        this.$operations.find( '#' + id ).hide();\n    },\n\n    /** Show a particular operation */\n    showOperation: function( id ) {\n        this.$operations.find( '#' + id ).show();\n    },\n\n    /** Replaces the event callback of an existing operation */\n    setOperation: function( id, callback ) {\n        this.$operations.find( '#' + id ).off( 'click' ).on( 'click', callback );\n    },\n\n    /** Change title */\n    title: function( new_title ) {\n        new_title && this.$title_text.html( new_title );\n        return this.$title_text.html();\n    },\n\n    /** Collapse portlet */\n    collapse: function() {\n        this.collapsed = true;\n        this.$content.height( '0%' );\n        this.$body.hide();\n        this.collapsible_button.setIcon( 'fa-eye-slash' );\n    },\n\n    /** Expand portlet */\n    expand: function() {\n        this.collapsed = false;\n        this.$content.height( '100%' );\n        this.$body.fadeIn( 'fast' );\n        this.collapsible_button.setIcon( 'fa-eye' );\n    },\n\n    /** Disable content access */\n    disable: function() {\n        this.$backdrop.show();\n    },\n\n    /** Enable content access */\n    enable: function() {\n        this.$backdrop.hide();\n    },\n\n    _template: function() {\n        return $( '<div/>' ).append( $( '<div/>' ).addClass( 'portlet-header' )\n                                .append( $( '<div/>' ).addClass( 'portlet-operations' ) )\n                                .append( $( '<div/>' ).addClass( 'portlet-title' )\n                                    .append( $( '<i/>' ).addClass( 'portlet-title-icon' ) )\n                                    .append( $( '<span/>' ).addClass( 'portlet-title-text' ) ) ) )\n                            .append( $( '<div/>' ).addClass( 'portlet-content' )\n                                .append( $( '<div/>' ).addClass( 'portlet-body' ) )\n                                .append( $( '<div/>' ).addClass( 'portlet-buttons' ) ) )\n                            .append( $( '<div/>' ).addClass( 'portlet-backdrop' ) );\n    }\n});\nreturn {\n    View : View\n}\n});"]}