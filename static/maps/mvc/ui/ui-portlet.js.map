{"version":3,"sources":["mvc/ui/ui-portlet.js"],"names":["define","Utils","Ui","View","Backbone","extend","visible","options","initialize","model","self","Model","id","cls","title","icon","buttons","body","scrollable","nopadding","operations","collapsible","collapsible_button","collapsed","onchange_title","this","setElement","_template","$body","$","$title_text","$title_icon","$header","$content","$backdrop","$buttons","$operations","get","append","ButtonIcon","tooltip","onclick","render","attributes","$el","removeClass","addClass","attr","html","_","each","show","hide","on","collapse","expand","item","make_text_editable","on_finish","new_title","empty","name","prop","header","fadeIn","enableButton","find","disableButton","hideOperation","showOperation","setOperation","height","off","callback","disable","setIcon","enable"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-portlet.js","sourcesContent":["define([\"utils/utils\", \"mvc/ui/ui-misc\"], function(Utils, Ui) {\n    var View = Backbone.View.extend({\n        visible: false,\n        initialize: function(options) {\n            var self = this;\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    cls: \"ui-portlet\",\n                    title: \"\",\n                    icon: \"\",\n                    buttons: null,\n                    body: null,\n                    scrollable: true,\n                    nopadding: false,\n                    operations: null,\n                    collapsible: false,\n                    collapsible_button: false,\n                    collapsed: false,\n                    onchange_title: null\n                }).set(options);\n            this.setElement(this._template());\n\n            // link all dom elements\n            this.$body = this.$(\".portlet-body\");\n            this.$title_text = this.$(\".portlet-title-text\");\n            this.$title_icon = this.$(\".portlet-title-icon\");\n            this.$header = this.$(\".portlet-header\");\n            this.$content = this.$(\".portlet-content\");\n            this.$backdrop = this.$(\".portlet-backdrop\");\n            this.$buttons = this.$(\".portlet-buttons\");\n            this.$operations = this.$(\".portlet-operations\");\n\n            // add body to component list\n            this.model.get(\"body\") && this.append(this.model.get(\"body\"));\n\n            // add icon for collapsible option\n            this.collapsible_button = new Ui.ButtonIcon({\n                icon: \"fa-eye\",\n                tooltip: \"Collapse/Expand\",\n                cls: \"ui-button-icon-plain\",\n                onclick: function() {\n                    self[self.collapsed ? \"expand\" : \"collapse\"]();\n                }\n            });\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el\n                .removeClass()\n                .addClass(options.cls)\n                .attr(\"id\", options.id);\n            this.$header[options.title ? \"show\" : \"hide\"]();\n            this.$title_text.html(options.title);\n            _.each([this.$content, this.$body], function($el) {\n                $el[options.nopadding ? \"addClass\" : \"removeClass\"](\n                    \"no-padding\"\n                );\n            });\n\n            // render title icon\n            if (options.icon) {\n                this.$title_icon\n                    .removeClass()\n                    .addClass(\"portlet-title-icon fa\")\n                    .addClass(options.icon)\n                    .show();\n            } else {\n                this.$title_icon.hide();\n            }\n\n            // make portlet collapsible\n            this.$title_text\n                [options.collapsible ? \"addClass\" : \"removeClass\"](\n                    \"no-highlight collapsible\"\n                )\n                .off();\n            if (options.collapsible) {\n                this.$title_text.on(\"click\", function() {\n                    self[self.collapsed ? \"expand\" : \"collapse\"]();\n                });\n                options.collapsed ? this.collapse() : this.expand();\n            }\n\n            // allow title editing\n            this.$title_text.prop(\"disabled\", !options.onchange_title);\n            options.onchange_title &&\n                this.$title_text.make_text_editable({\n                    on_finish: function(new_title) {\n                        options.onchange_title(new_title);\n                    }\n                });\n\n            // render buttons\n            if (options.buttons) {\n                this.$buttons.empty().show();\n                $.each(this.model.get(\"buttons\"), function(name, item) {\n                    item.$el.prop(\"id\", name);\n                    self.$buttons.append(item.$el);\n                });\n            } else {\n                this.$buttons.hide();\n            }\n\n            // render operations\n            this.$operations.empty;\n            if (options.collapsible_button) {\n                this.$operations.append(this.collapsible_button.$el);\n            }\n            if (options.operations) {\n                $.each(options.operations, function(name, item) {\n                    item.$el.prop(\"id\", name);\n                    self.$operations.append(item.$el);\n                });\n            }\n            return this;\n        },\n\n        /** Append new doms to body */\n        append: function($el) {\n            this.$body.append($el);\n        },\n\n        /** Remove all content */\n        empty: function() {\n            this.$body.empty();\n        },\n\n        /** Return header element */\n        header: function() {\n            return this.$header;\n        },\n\n        /** Return body element */\n        body: function() {\n            return this.$body;\n        },\n\n        /** Show portlet */\n        show: function() {\n            this.visible = true;\n            this.$el.fadeIn(\"fast\");\n        },\n\n        /** Hide portlet */\n        hide: function() {\n            this.visible = false;\n            this.$el.hide();\n        },\n\n        /** Enable a particular button */\n        enableButton: function(id) {\n            this.$buttons.find(\"#\" + id).prop(\"disabled\", false);\n        },\n\n        /** Disable a particular button */\n        disableButton: function(id) {\n            this.$buttons.find(\"#\" + id).prop(\"disabled\", true);\n        },\n\n        /** Hide a particular operation */\n        hideOperation: function(id) {\n            this.$operations.find(\"#\" + id).hide();\n        },\n\n        /** Show a particular operation */\n        showOperation: function(id) {\n            this.$operations.find(\"#\" + id).show();\n        },\n\n        /** Replaces the event callback of an existing operation */\n        setOperation: function(id, callback) {\n            this.$operations\n                .find(\"#\" + id)\n                .off(\"click\")\n                .on(\"click\", callback);\n        },\n\n        /** Change title */\n        title: function(new_title) {\n            new_title && this.$title_text.html(new_title);\n            return this.$title_text.html();\n        },\n\n        /** Collapse portlet */\n        collapse: function() {\n            this.collapsed = true;\n            this.$content.height(\"0%\");\n            this.$body.hide();\n            this.collapsible_button.setIcon(\"fa-eye-slash\");\n        },\n\n        /** Expand portlet */\n        expand: function() {\n            this.collapsed = false;\n            this.$content.height(\"100%\");\n            this.$body.fadeIn(\"fast\");\n            this.collapsible_button.setIcon(\"fa-eye\");\n        },\n\n        /** Disable content access */\n        disable: function() {\n            this.$backdrop.show();\n        },\n\n        /** Enable content access */\n        enable: function() {\n            this.$backdrop.hide();\n        },\n\n        _template: function() {\n            return $(\"<div/>\")\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"portlet-header\")\n                        .append($(\"<div/>\").addClass(\"portlet-operations\"))\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"portlet-title\")\n                                .append(\n                                    $(\"<i/>\").addClass(\"portlet-title-icon\")\n                                )\n                                .append(\n                                    $(\"<span/>\").addClass(\"portlet-title-text\")\n                                )\n                        )\n                )\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"portlet-content\")\n                        .append($(\"<div/>\").addClass(\"portlet-body\"))\n                        .append($(\"<div/>\").addClass(\"portlet-buttons\"))\n                )\n                .append($(\"<div/>\").addClass(\"portlet-backdrop\"));\n        }\n    });\n    return {\n        View: View\n    };\n});\n"]}