{"version":3,"sources":["mvc/ui/ui-modal.js"],"names":["define","View","Backbone","extend","className","optionsDefault","container","title","cls","body","backdrop","height","width","closing_events","buttonList","initialize","options","this","_","defaults","prepend","el","$","show","visible","$el","fadeIn","self","document","e","keyCode","hide","$backdrop","on","canceled","fadeOut","closing_callback","off","render","html","_template","$header","$body","$footer","$buttons","$dialog","removeClass","addClass","find","buttons","counter","each","name","callback","attr","text","click","$button","append","title_separator","css","window","getButton","enableButton","prop","disableButton","showButton","hideButton","scrollTop"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-modal.js","sourcesContent":["define([], function() {\nvar View = Backbone.View.extend({\n\n    className: \"ui-modal\",\n\n    // defaults\n    optionsDefault  : {\n        container        : 'body',\n        title            : 'ui-modal',\n        cls              : 'ui-modal',\n        body             : '',\n        backdrop         : true,\n        height           : null,\n        width            : null,\n        closing_events   : false,\n        closing_callback : null,\n        title_separator  : true\n    },\n\n    // button list\n    buttonList: {},\n\n    // initialize\n    initialize: function( options ) {\n        this.options = _.defaults( options || {}, this.optionsDefault );\n        $( this.options.container ).prepend( this.el );\n        // optional render\n        options && this.render();\n    },\n\n    /**\n     * Displays modal\n    */\n    show: function( options ) {\n        if ( options ) {\n            this.options = _.defaults( options, this.optionsDefault );\n            this.render();\n        }\n        if ( !this.visible ) {\n            this.visible = true;\n            this.$el.fadeIn( 'fast' );\n            if ( this.options.closing_events ) {\n                var self = this;\n                $( document ).on( 'keyup.ui-modal', function( e ) { e.keyCode == 27 && self.hide( true ) });\n                this.$backdrop.on( 'click', function() { self.hide( true ) } );\n            }\n        }\n    },\n\n    /**\n     * Hide modal\n    */\n    hide: function( canceled ) {\n        this.visible = false;\n        this.$el.fadeOut( 'fast' );\n        this.options.closing_callback && this.options.closing_callback( canceled );\n        $( document ).off( 'keyup.ui-modal' );\n        this.$backdrop.off( 'click' );\n    },\n\n    /**\n     * Render modal\n    */\n    render: function() {\n        var self = this;\n        this.$el.html( this._template() );\n\n        // link elements\n        this.$header    = this.$( '.modal-header' );\n        this.$dialog    = this.$( '.modal-dialog' );\n        this.$body      = this.$( '.modal-body' );\n        this.$footer    = this.$( '.modal-footer' );\n        this.$backdrop  = this.$( '.modal-backdrop' );\n        this.$buttons   = this.$( '.buttons' );\n\n        if (this.options.body == 'progress') {\n            this.options.body = $(  '<div class=\"progress progress-striped active\">' +\n                                        '<div class=\"progress-bar progress-bar-info\" style=\"width:100%\"/>' +\n                                    '</div>' );\n        }\n\n        // fix main content\n        this.$el.removeClass().addClass( 'modal' ).addClass( this.options.cls );\n        this.$header.find( '.title' ).html( this.options.title );\n        this.$body.html( this.options.body );\n\n        // append buttons\n        this.$buttons.empty();\n        this.buttonList = {};\n        if ( this.options.buttons ) {\n            var counter = 0;\n            $.each( this.options.buttons, function( name, callback ) {\n                var $button = $( '<button/>' ).attr( 'id', 'button-' + counter++ ).text( name ).click( callback );\n                self.$buttons.append( $button ).append( '&nbsp;' );\n                self.buttonList[ name ] = $button;\n            });\n        } else {\n            this.$footer.hide();\n        }\n\n        // configure background, separator line\n        this.$backdrop[ this.options.backdrop && 'addClass' || 'removeClass' ]( 'in' );\n        this.$header[ !this.options.title_separator && 'addClass' || 'removeClass' ]( 'no-separator' );\n\n        // fix dimensions\n        // note: because this is a singleton, we need to clear inline styles from any previous invocations\n        this.$body.removeAttr( 'style' );\n        if ( this.options.height ) {\n            this.$body.css( 'height', this.options.height );\n            this.$body.css( 'overflow', 'hidden' );\n        } else {\n            this.$body.css( 'max-height', $( window ).height() / 2 );\n        }\n        if ( this.options.width ) {\n            this.$dialog.css( 'width', this.options.width );\n        }\n    },\n\n    /**\n     * Returns the button dom\n     * @param{String}   name    - Button name/title\n    */\n    getButton: function( name ) {\n        return this.buttonList[ name ];\n    },\n\n    /**\n     * Enables a button\n     * @param{String}   name    - Button name/title\n    */\n    enableButton: function( name ) {\n        this.getButton( name ).prop( 'disabled', false );\n    },\n\n    /**\n     * Disables a button\n     * @param{String}   name    - Button name/title\n    */\n    disableButton: function( name ) {\n        this.getButton( name ).prop( 'disabled', true );\n    },\n\n    /**\n     * Show a button\n     * @param{String}   name    - Button name/title\n    */\n    showButton: function( name ) {\n        this.getButton( name ).show();\n    },\n\n    /**\n     * Hide a button\n     * @param{String}   name    - Button name/title\n    */\n    hideButton: function( name ) {\n        this.getButton( name ).hide();\n    },\n\n    /**\n     * Returns scroll top for body element\n    */\n    scrollTop: function() {\n        return this.$body.scrollTop();\n    },\n\n    /**\n     * Returns the modal template\n    */\n    _template: function() {\n        return  '<div class=\"modal-backdrop fade\"/>' +\n                '<div class=\"modal-dialog\">' +\n                    '<div class=\"modal-content\">' +\n                        '<div class=\"modal-header\">' +\n                            '<h4 class=\"title\"/>' +\n                        '</div>' +\n                        '<div class=\"modal-body\"/>' +\n                        '<div class=\"modal-footer\">' +\n                            '<div class=\"buttons\"/>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View : View\n}\n\n});\n"]}