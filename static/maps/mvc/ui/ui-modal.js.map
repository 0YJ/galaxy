{"version":3,"sources":["mvc/ui/ui-modal.js"],"names":["define","View","Backbone","extend","className","container","title","optionsDefault","cls","body","backdrop","height","width","buttonList","options","this","_","defaults","$","prepend","el","render","show","visible","$el","fadeIn","closing_events","self","document","e","hide","canceled","fadeOut","closing_callback","off","$backdrop","html","_template","$header","$dialog","$body","$footer","$buttons","removeClass","addClass","empty","append","each","buttons","name","callback","$button","counter","text","click","title_separator","removeAttr","css","getButton","window","enableButton","prop","disableButton","showButton","hideButton","scrollTop"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-modal.js","sourcesContent":["define([], function() {\n    var View = Backbone.View.extend({\n        className: \"ui-modal\",\n\n        // defaults\n        optionsDefault: {\n            container: \"body\",\n            title: \"ui-modal\",\n            cls: \"ui-modal\",\n            body: \"\",\n            backdrop: true,\n            height: null,\n            width: null,\n            closing_events: false,\n            closing_callback: null,\n            title_separator: true\n        },\n\n        // button list\n        buttonList: {},\n\n        // initialize\n        initialize: function(options) {\n            this.options = _.defaults(options || {}, this.optionsDefault);\n            $(this.options.container).prepend(this.el);\n            // optional render\n            if (options) {\n                this.render();\n            }\n        },\n\n        /**\n     * Displays modal\n    */\n        show: function(options) {\n            if (options) {\n                this.options = _.defaults(options, this.optionsDefault);\n                this.render();\n            }\n            if (!this.visible) {\n                this.visible = true;\n                this.$el.fadeIn(\"fast\");\n                if (this.options.closing_events) {\n                    var self = this;\n                    $(document).on(\"keyup.ui-modal\", function(e) {\n                        if (e.keyCode == 27) {\n                            self.hide(true);\n                        }\n                    });\n                    this.$backdrop.on(\"click\", function() {\n                        self.hide(true);\n                    });\n                }\n            }\n        },\n\n        /**\n     * Hide modal\n    */\n        hide: function(canceled) {\n            this.visible = false;\n            this.$el.fadeOut(\"fast\");\n            if (this.options.closing_callback) {\n                this.options.closing_callback(canceled);\n            }\n            $(document).off(\"keyup.ui-modal\");\n            this.$backdrop.off(\"click\");\n        },\n\n        /**\n     * Render modal\n    */\n        render: function() {\n            var self = this;\n            this.$el.html(this._template());\n\n            // link elements\n            this.$header = this.$(\".modal-header\");\n            this.$dialog = this.$(\".modal-dialog\");\n            this.$body = this.$(\".modal-body\");\n            this.$footer = this.$(\".modal-footer\");\n            this.$backdrop = this.$(\".modal-backdrop\");\n            this.$buttons = this.$(\".buttons\");\n\n            if (this.options.body == \"progress\") {\n                this.options.body = $(\n                    '<div class=\"progress progress-striped active\">' +\n                        '<div class=\"progress-bar progress-bar-info\" style=\"width:100%\"/>' +\n                        \"</div>\"\n                );\n            }\n\n            // fix main content\n            this.$el\n                .removeClass()\n                .addClass(\"modal\")\n                .addClass(this.options.cls);\n            this.$header.find(\".title\").html(this.options.title);\n            this.$body.html(this.options.body);\n\n            // append buttons\n            this.$buttons.empty();\n            this.buttonList = {};\n            if (this.options.buttons) {\n                var counter = 0;\n                $.each(this.options.buttons, function(name, callback) {\n                    var $button = $(\"<button/>\")\n                        .attr(\"id\", \"button-\" + counter++)\n                        .text(name)\n                        .click(callback);\n                    self.$buttons.append($button).append(\"&nbsp;\");\n                    self.buttonList[name] = $button;\n                });\n            } else {\n                this.$footer.hide();\n            }\n\n            // configure background, separator line\n            this.$backdrop[\n                (this.options.backdrop && \"addClass\") || \"removeClass\"\n            ](\"in\");\n            this.$header[\n                (!this.options.title_separator && \"addClass\") || \"removeClass\"\n            ](\"no-separator\");\n\n            // fix dimensions\n            // note: because this is a singleton, we need to clear inline styles from any previous invocations\n            this.$body.removeAttr(\"style\");\n            if (this.options.height) {\n                this.$body.css(\"height\", this.options.height);\n                this.$body.css(\"overflow\", \"hidden\");\n            } else {\n                this.$body.css(\"max-height\", $(window).height() / 2);\n            }\n            if (this.options.width) {\n                this.$dialog.css(\"width\", this.options.width);\n            }\n        },\n\n        /**\n     * Returns the button dom\n     * @param{String}   name    - Button name/title\n    */\n        getButton: function(name) {\n            return this.buttonList[name];\n        },\n\n        /**\n     * Enables a button\n     * @param{String}   name    - Button name/title\n    */\n        enableButton: function(name) {\n            this.getButton(name).prop(\"disabled\", false);\n        },\n\n        /**\n     * Disables a button\n     * @param{String}   name    - Button name/title\n    */\n        disableButton: function(name) {\n            this.getButton(name).prop(\"disabled\", true);\n        },\n\n        /**\n     * Show a button\n     * @param{String}   name    - Button name/title\n    */\n        showButton: function(name) {\n            this.getButton(name).show();\n        },\n\n        /**\n     * Hide a button\n     * @param{String}   name    - Button name/title\n    */\n        hideButton: function(name) {\n            this.getButton(name).hide();\n        },\n\n        /**\n     * Returns scroll top for body element\n    */\n        scrollTop: function() {\n            return this.$body.scrollTop();\n        },\n\n        /**\n     * Returns the modal template\n    */\n        _template: function() {\n            return (\n                '<div class=\"modal-backdrop fade\"/>' +\n                '<div class=\"modal-dialog\">' +\n                '<div class=\"modal-content\">' +\n                '<div class=\"modal-header\">' +\n                '<h4 class=\"title\"/>' +\n                \"</div>\" +\n                '<div class=\"modal-body\"/>' +\n                '<div class=\"modal-footer\">' +\n                '<div class=\"buttons\"/>' +\n                \"</div>\" +\n                \"</div>\" +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}