{"version":3,"sources":["mvc/ui/ui-modal.js"],"names":["define","View","Backbone","extend","className","optionsDefault","container","title","cls","body","backdrop","height","width","closing_events","buttonList","initialize","options","this","_","defaults","prepend","el","$","render","show","visible","$el","fadeIn","self","document","e","keyCode","hide","$backdrop","on","canceled","fadeOut","closing_callback","off","$header","$dialog","$body","$buttons","_template","removeClass","addClass","html","empty","find","counter","each","buttons","name","callback","$button","attr","text","click","append","title_separator","removeAttr","css","window","getButton","enableButton","prop","disableButton","showButton","hideButton","scrollTop"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-modal.js","sourcesContent":["define([], function() {\nvar View = Backbone.View.extend({\n\n    className: \"ui-modal\",\n\n    // defaults\n    optionsDefault  : {\n        container        : 'body',\n        title            : 'ui-modal',\n        cls              : 'ui-modal',\n        body             : '',\n        backdrop         : true,\n        height           : null,\n        width            : null,\n        closing_events   : false,\n        closing_callback : null,\n        title_separator  : true\n    },\n\n    // button list\n    buttonList: {},\n\n    // initialize\n    initialize: function( options ) {\n        this.options = _.defaults( options || {}, this.optionsDefault );\n        $( this.options.container ).prepend( this.el );\n        // optional render\n        if (options){\n            this.render();\n        }\n    },\n\n    /**\n     * Displays modal\n    */\n    show: function( options ) {\n        if ( options ) {\n            this.options = _.defaults( options, this.optionsDefault );\n            this.render();\n        }\n        if ( !this.visible ) {\n            this.visible = true;\n            this.$el.fadeIn( 'fast' );\n            if ( this.options.closing_events ) {\n                var self = this;\n                $( document ).on( 'keyup.ui-modal', function( e ) { if (e.keyCode == 27){ self.hide( true ); }});\n                this.$backdrop.on( 'click', function() { self.hide( true ); } );\n            }\n        }\n    },\n\n    /**\n     * Hide modal\n    */\n    hide: function( canceled ) {\n        this.visible = false;\n        this.$el.fadeOut( 'fast' );\n        if (this.options.closing_callback){\n            this.options.closing_callback( canceled );\n        }\n        $( document ).off( 'keyup.ui-modal' );\n        this.$backdrop.off( 'click' );\n    },\n\n    /**\n     * Render modal\n    */\n    render: function() {\n        var self = this;\n        this.$el.html( this._template() );\n\n        // link elements\n        this.$header    = this.$( '.modal-header' );\n        this.$dialog    = this.$( '.modal-dialog' );\n        this.$body      = this.$( '.modal-body' );\n        this.$footer    = this.$( '.modal-footer' );\n        this.$backdrop  = this.$( '.modal-backdrop' );\n        this.$buttons   = this.$( '.buttons' );\n\n        if (this.options.body == 'progress') {\n            this.options.body = $(  '<div class=\"progress progress-striped active\">' +\n                                        '<div class=\"progress-bar progress-bar-info\" style=\"width:100%\"/>' +\n                                    '</div>' );\n        }\n\n        // fix main content\n        this.$el.removeClass().addClass( 'modal' ).addClass( this.options.cls );\n        this.$header.find( '.title' ).html( this.options.title );\n        this.$body.html( this.options.body );\n\n        // append buttons\n        this.$buttons.empty();\n        this.buttonList = {};\n        if ( this.options.buttons ) {\n            var counter = 0;\n            $.each( this.options.buttons, function( name, callback ) {\n                var $button = $( '<button/>' ).attr( 'id', 'button-' + counter++ ).text( name ).click( callback );\n                self.$buttons.append( $button ).append( '&nbsp;' );\n                self.buttonList[ name ] = $button;\n            });\n        } else {\n            this.$footer.hide();\n        }\n\n        // configure background, separator line\n        this.$backdrop[ this.options.backdrop && 'addClass' || 'removeClass' ]( 'in' );\n        this.$header[ !this.options.title_separator && 'addClass' || 'removeClass' ]( 'no-separator' );\n\n        // fix dimensions\n        // note: because this is a singleton, we need to clear inline styles from any previous invocations\n        this.$body.removeAttr( 'style' );\n        if ( this.options.height ) {\n            this.$body.css( 'height', this.options.height );\n            this.$body.css( 'overflow', 'hidden' );\n        } else {\n            this.$body.css( 'max-height', $( window ).height() / 2 );\n        }\n        if ( this.options.width ) {\n            this.$dialog.css( 'width', this.options.width );\n        }\n    },\n\n    /**\n     * Returns the button dom\n     * @param{String}   name    - Button name/title\n    */\n    getButton: function( name ) {\n        return this.buttonList[ name ];\n    },\n\n    /**\n     * Enables a button\n     * @param{String}   name    - Button name/title\n    */\n    enableButton: function( name ) {\n        this.getButton( name ).prop( 'disabled', false );\n    },\n\n    /**\n     * Disables a button\n     * @param{String}   name    - Button name/title\n    */\n    disableButton: function( name ) {\n        this.getButton( name ).prop( 'disabled', true );\n    },\n\n    /**\n     * Show a button\n     * @param{String}   name    - Button name/title\n    */\n    showButton: function( name ) {\n        this.getButton( name ).show();\n    },\n\n    /**\n     * Hide a button\n     * @param{String}   name    - Button name/title\n    */\n    hideButton: function( name ) {\n        this.getButton( name ).hide();\n    },\n\n    /**\n     * Returns scroll top for body element\n    */\n    scrollTop: function() {\n        return this.$body.scrollTop();\n    },\n\n    /**\n     * Returns the modal template\n    */\n    _template: function() {\n        return  '<div class=\"modal-backdrop fade\"/>' +\n                '<div class=\"modal-dialog\">' +\n                    '<div class=\"modal-content\">' +\n                        '<div class=\"modal-header\">' +\n                            '<h4 class=\"title\"/>' +\n                        '</div>' +\n                        '<div class=\"modal-body\"/>' +\n                        '<div class=\"modal-footer\">' +\n                            '<div class=\"buttons\"/>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View : View\n};\n\n});\n"]}