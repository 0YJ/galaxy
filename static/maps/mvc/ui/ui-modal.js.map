{"version":3,"sources":["mvc/ui/ui-modal.js"],"names":["define","View","Backbone","extend","className","optionsDefault","container","title","cls","body","backdrop","height","width","closing_events","closing_callback","title_separator","buttonList","initialize","options","this","_","defaults","$","prepend","el","render","show","visible","$el","fadeIn","self","document","on","e","keyCode","hide","$backdrop","canceled","fadeOut","off","html","_template","$header","$dialog","$body","$footer","$buttons","removeClass","addClass","find","empty","buttons","counter","each","name","callback","$button","attr","text","click","append","removeAttr","css","window","getButton","enableButton","prop","disableButton","showButton","hideButton","scrollTop"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-modal.js","sourcesContent":["define([], function() {\nvar View = Backbone.View.extend({\n\n    className: \"ui-modal\",\n\n    // defaults\n    optionsDefault  : {\n        container        : 'body',\n        title            : 'ui-modal',\n        cls              : 'ui-modal',\n        body             : '',\n        backdrop         : true,\n        height           : null,\n        width            : null,\n        closing_events   : false,\n        closing_callback : null,\n        title_separator  : true\n    },\n\n    // button list\n    buttonList: {},\n\n    // initialize\n    initialize: function( options ) {\n        this.options = _.defaults( options || {}, this.optionsDefault );\n        $( this.options.container ).prepend( this.el );\n        // optional render\n        options && this.render();\n    },\n\n    /**\n     * Displays modal\n    */\n    show: function( options ) {\n        if ( options ) {\n            this.options = _.defaults( options, this.optionsDefault );\n            this.render();\n        }\n        if ( !this.visible ) {\n            this.visible = true;\n            this.$el.fadeIn( 'fast' );\n            if ( this.options.closing_events ) {\n                var self = this;\n                $( document ).on( 'keyup.ui-modal', function( e ) { e.keyCode == 27 && self.hide( true ) });\n                this.$backdrop.on( 'click', function() { self.hide( true ) } );\n            }\n        }\n    },\n\n    /**\n     * Hide modal\n    */\n    hide: function( canceled ) {\n        this.visible = false;\n        this.$el.fadeOut( 'fast' );\n        this.options.closing_callback && this.options.closing_callback( canceled );\n        $( document ).off( 'keyup.ui-modal' );\n        this.$backdrop.off( 'click' );\n    },\n\n    /**\n     * Render modal\n    */\n    render: function() {\n        var self = this;\n        this.$el.html( this._template() );\n\n        // link elements\n        this.$header    = this.$( '.modal-header' );\n        this.$dialog    = this.$( '.modal-dialog' );\n        this.$body      = this.$( '.modal-body' );\n        this.$footer    = this.$( '.modal-footer' );\n        this.$backdrop  = this.$( '.modal-backdrop' );\n        this.$buttons   = this.$( '.buttons' );\n\n        if (this.options.body == 'progress') {\n            this.options.body = $(  '<div class=\"progress progress-striped active\">' +\n                                        '<div class=\"progress-bar progress-bar-info\" style=\"width:100%\"/>' +\n                                    '</div>' );\n        }\n\n        // fix main content\n        this.$el.removeClass().addClass( 'modal' ).addClass( this.options.cls );\n        this.$header.find( '.title' ).html( this.options.title );\n        this.$body.html( this.options.body );\n\n        // append buttons\n        this.$buttons.empty();\n        this.buttonList = {};\n        if ( this.options.buttons ) {\n            var counter = 0;\n            $.each( this.options.buttons, function( name, callback ) {\n                var $button = $( '<button/>' ).attr( 'id', 'button-' + counter++ ).text( name ).click( callback );\n                self.$buttons.append( $button ).append( '&nbsp;' );\n                self.buttonList[ name ] = $button;\n            });\n        } else {\n            this.$footer.hide();\n        }\n\n        // configure background, separator line\n        this.$backdrop[ this.options.backdrop && 'addClass' || 'removeClass' ]( 'in' );\n        this.$header[ !this.options.title_separator && 'addClass' || 'removeClass' ]( 'no-separator' );\n\n        // fix dimensions\n        // note: because this is a singleton, we need to clear inline styles from any previous invocations\n        this.$body.removeAttr( 'style' );\n        if ( this.options.height ) {\n            this.$body.css( 'height', this.options.height );\n            this.$body.css( 'overflow', 'hidden' );\n        } else {\n            this.$body.css( 'max-height', $( window ).height() / 2 );\n        }\n        if ( this.options.width ) {\n            this.$dialog.css( 'width', this.options.width );\n        }\n    },\n\n    /**\n     * Returns the button dom\n     * @param{String}   name    - Button name/title\n    */\n    getButton: function( name ) {\n        return this.buttonList[ name ];\n    },\n\n    /**\n     * Enables a button\n     * @param{String}   name    - Button name/title\n    */\n    enableButton: function( name ) {\n        this.getButton( name ).prop( 'disabled', false );\n    },\n\n    /**\n     * Disables a button\n     * @param{String}   name    - Button name/title\n    */\n    disableButton: function( name ) {\n        this.getButton( name ).prop( 'disabled', true );\n    },\n\n    /**\n     * Show a button\n     * @param{String}   name    - Button name/title\n    */\n    showButton: function( name ) {\n        this.getButton( name ).show();\n    },\n\n    /**\n     * Hide a button\n     * @param{String}   name    - Button name/title\n    */\n    hideButton: function( name ) {\n        this.getButton( name ).hide();\n    },\n\n    /**\n     * Returns scroll top for body element\n    */\n    scrollTop: function() {\n        return this.$body.scrollTop();\n    },\n\n    /**\n     * Returns the modal template\n    */\n    _template: function() {\n        return  '<div class=\"modal-backdrop fade\"/>' +\n                '<div class=\"modal-dialog\">' +\n                    '<div class=\"modal-content\">' +\n                        '<div class=\"modal-header\">' +\n                            '<h4 class=\"title\"/>' +\n                        '</div>' +\n                        '<div class=\"modal-body\"/>' +\n                        '<div class=\"modal-footer\">' +\n                            '<div class=\"buttons\"/>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View : View\n}\n\n});\n"]}