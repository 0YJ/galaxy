{"version":3,"sources":["mvc/tours.js"],"names":["gxy_root","Galaxy","root","tour_opts","storage","window","sessionStorage","onEnd","removeItem","delay","orphan","hooked_tour_from_data","tourpage_template","_","each","data","steps","step","preclick","$","click","postclick","onShow","textinsert","val","TourItem","Backbone","Model","extend","onShown","Tours","Collection","url","model","giveTour","urlRoot","tour_id","getJSON","JSON","stringify","tour","Tour","init","restart","View","initialize","ToursView","title","this","success","self","setElement","error","render","tpl","template","$el","html","tours","models","e"],"mappings":"wRAMIA,EAA6B,oBAAXC,OAAyB,IAAMA,OAAOC,KAgBxDC,GACAC,QAASC,OAAOC,eAChBC,MAAO,WACHD,eAAeE,WAAW,qBAE9BC,MAAO,IACPC,QAAQ,GApBZC,EAAIC,SAAAA,GAyCI,OAjBJC,EAAEC,KAAKC,EAAKC,MAAO,SAASC,GAV5Bd,EAAAA,WACAC,EAASC,OAAOC,WACTO,EAAAC,KAAAG,EAAAC,SAAW,SAAAA,GAFNC,EAAAD,GAAAE,YAmBJH,EAAKI,YAVbV,EAAAA,OAAAA,WACOI,EAAAA,KAAKC,EAAOK,UAASJ,SAAMI,GAE1BJ,EAAKK,GAASF,YAITH,EAAAM,aAILN,EAAAA,QAAA,WACIJ,EAAAA,EAAEC,SACEU,IAAAP,EAAAM,YACAJ,QAAEE,cAIdN,GAGIU,EAAAC,SAAAC,MAAAC,QACAX,QAAAA,EAAKY,cAKRC,EAAAJ,SAAAK,WAAAH,QACJI,IA3BDhC,EAAA,YA4BAiC,MAAAR,IAGJS,EAAIT,SAAWC,GACXS,IAAAA,EAAAA,EAASnC,aAAWoC,EADajB,EAArCkB,QAAAL,EAAA,SAAAjB,GAIIe,IAAAA,EAAQJ,EAA2BX,GACnCiB,eAAKhC,QAAW,mBADmBsC,KAAAC,UAAAxB,IAAvC,IAAAyB,EAAA,IAAAC,KAaY5B,EAAEe,QAPA5B,MAAAA,EAAWgB,OAEjBb,IAIAqC,EAAAE,OAGY1B,EAAAA,KAAAA,GADJwB,EADJG,aASJH,EAAAA,SAAAI,KAAAhB,QACAY,MAAAA,QAEPK,WApBD,WAqBIC,IAAAA,EAAAA,KACAC,KAAAA,WADiC,UAEjCC,KAAAf,MAAA,IAAAH,EACAe,KAAAA,MAAAA,OACII,QAAIC,WACJA,EAAKC,UAELC,MAAKnB,WAEGiB,QAAAA,MAAKG,8BAKRA,OAAA,WAPY,IAAAC,EAAjBzC,EAAA0C,SA5FJ3C,+fAqGCoC,KAhBgCQ,IAqBxBC,KAAKH,GAAMI,MAAOV,KAAKf,MAAM0B,UAHtCN,GAAQ,QAAA,YAAW,SAAAO,GACXN,EAAAA,iBACJpB,EAAAf,EACUmC,MAAMI,KAAAA,4BASpBZ,UAAWA,EACXnC,sBAFWA,EACXmC,UAAAA,EACAnC,SAAAA","file":"../../scripts/mvc/tours.js","sourcesContent":["/**\n *  This is the primary galaxy tours definition, currently only used for\n *  rendering a tour menu.\n */\n\nimport * as BootstrapTour from \"libs/bootstrap-tour\";\nvar gxy_root = typeof Galaxy === \"undefined\" ? \"/\" : Galaxy.root;\n\nvar tourpage_template = `<h2>Galaxy Tours</h2>\n<p>This page presents a list of interactive tours available on this Galaxy server.\nSelect any tour to get started (and remember, you can click 'End Tour' at any time).</p>\n<ul>\n<% _.each(tours, function(tour) { %>\n    <li>\n        <a href=\"/tours/<%- tour.id %>\" class=\"tourItem\" data-tour.id=<%- tour.id %>>\n            <%- tour.attributes.name || tour.id %>\n        </a>\n         - <%- tour.attributes.description || \"No description given.\" %>\n    </li>\n<% }); %>\n</ul>`;\n\nvar tour_opts = {\n    storage: window.sessionStorage,\n    onEnd: function() {\n        sessionStorage.removeItem(\"activeGalaxyTour\");\n    },\n    delay: 150, // Attempts to make it look natural\n    orphan: true\n};\n\nvar hooked_tour_from_data = function(data) {\n    _.each(data.steps, function(step) {\n        if (step.preclick) {\n            step.onShow = function() {\n                _.each(step.preclick, function(preclick) {\n                    // TODO: click delay between clicks\n                    $(preclick).click();\n                });\n            };\n        }\n        if (step.postclick) {\n            step.onHide = function() {\n                _.each(step.postclick, function(postclick) {\n                    // TODO: click delay between clicks\n                    $(postclick).click();\n                });\n            };\n        }\n        if (step.textinsert) {\n            // Have to manually trigger a change here, for some\n            // elements which have additional logic, like the\n            // upload input box\n            step.onShown = function() {\n                $(step.element)\n                    .val(step.textinsert)\n                    .trigger(\"change\");\n            };\n        }\n    });\n    return data;\n};\n\nvar TourItem = Backbone.Model.extend({\n    urlRoot: gxy_root + \"api/tours\"\n});\n\nvar Tours = Backbone.Collection.extend({\n    url: gxy_root + \"api/tours\",\n    model: TourItem\n});\n\nvar giveTour = function(tour_id) {\n    var url = gxy_root + \"api/tours/\" + tour_id;\n    $.getJSON(url, function(data) {\n        // Set hooks for additional click and data entry actions.\n        var tourdata = hooked_tour_from_data(data);\n        sessionStorage.setItem(\"activeGalaxyTour\", JSON.stringify(data));\n        // Store tour steps in sessionStorage to easily persist w/o hackery.\n        var tour = new Tour(\n            _.extend(\n                {\n                    steps: tourdata.steps\n                },\n                tour_opts\n            )\n        );\n        // Always clean restart, since this is a new, explicit giveTour execution.\n        tour.init();\n        tour.goTo(0);\n        tour.restart();\n    });\n};\nvar ToursView = Backbone.View.extend({\n    title: \"Tours\",\n    // initialize\n    initialize: function() {\n        var self = this;\n        this.setElement(\"<div/>\");\n        this.model = new Tours();\n        this.model.fetch({\n            success: function() {\n                self.render();\n            },\n            error: function() {\n                // Do something.\n                console.error(\"Failed to fetch tours.\");\n            }\n        });\n    },\n\n    render: function() {\n        var tpl = _.template(tourpage_template);\n        this.$el\n            .html(tpl({ tours: this.model.models }))\n            .on(\"click\", \".tourItem\", function(e) {\n                e.preventDefault();\n                giveTour($(this).data(\"tour.id\"));\n            });\n    }\n});\n\nexport default {\n    ToursView: ToursView,\n    hooked_tour_from_data: hooked_tour_from_data,\n    tour_opts: tour_opts,\n    giveTour: giveTour\n};\n"]}