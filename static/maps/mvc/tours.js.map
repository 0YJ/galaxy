{"version":3,"sources":["mvc/tours.js"],"names":["define","BootstrapTour","gxy_root","Galaxy","root","tour_opts","storage","window","sessionStorage","onEnd","removeItem","delay","orphan","hooked_tour_from_data","data","_","each","steps","step","preclick","onShow","$","click","postclick","onHide","textinsert","onShown","element","val","trigger","TourItem","Backbone","Model","extend","urlRoot","Tours","Collection","url","model","giveTour","tour_id","getJSON","tourdata","setItem","JSON","stringify","tour","Tour","init","goTo","restart","ToursView","View","initialize","self","this","setElement","fetch","success","render","error","console","tpl","template","join","$el","html","tours","models","on","e","preventDefault"],"mappings":"AAUAA,QAAQ,uBAAuB,SAASC,GAEpC,GAAIC,GAA6B,mBAAXC,QAAyB,IAAMA,OAAOC,KAExDC,GAAcC,QAASC,OAAOC,eAChBC,MAAO,WACHD,eAAeE,WAAW,qBAE9BC,MAAO,IACPC,QAAO,GAGrBC,EAAwB,SAASC,GA2BjC,MA1BAC,GAAEC,KAAKF,EAAKG,MAAO,SAASC,GACpBA,EAAKC,WACLD,EAAKE,OAAQ,WACTL,EAAEC,KAAKE,EAAKC,SAAU,SAASA,GAE3BE,EAAEF,GAAUG,YAIpBJ,EAAKK,YACLL,EAAKM,OAAS,WACVT,EAAEC,KAAKE,EAAKK,UAAW,SAASA,GAE5BF,EAAEE,GAAWD,YAIrBJ,EAAKO,aAILP,EAAKQ,QAAS,WACVL,EAAEH,EAAKS,SAASC,IAAIV,EAAKO,YAAYI,QAAQ,cAIlDf,GAGPgB,EAAWC,SAASC,MAAMC,QAC5BC,QAAShC,EAAW,cAGlBiC,EAAQJ,SAASK,WAAWH,QAC9BI,IAAMnC,EAAW,YACjBoC,MAAOR,IAILS,EAAY,SAASC,GACrB,GAAIH,GAAMnC,EAAW,aAAesC,CACpCnB,GAAEoB,QAASJ,EAAK,SAAUvB,GAEtB,GAAI4B,GAAW7B,EAAsBC,EACrCN,gBAAemC,QAAQ,mBAAoBC,KAAKC,UAAU/B,GAE1D,IAAIgC,GAAO,GAAIC,MAAKhC,EAAEkB,QAClBhB,MAAOyB,EAASzB,OACjBZ,GAEHyC,GAAKE,OACLF,EAAKG,KAAK,GACVH,EAAKI,YA0Cb,QAAQC,UAvCQpB,SAASqB,KAAKnB,QAE1BoB,WAAY,WACR,GAAIC,GAAOC,IACXA,MAAKC,WAAW,UAChBD,KAAKjB,MAAQ,GAAIH,GACjBoB,KAAKjB,MAAMmB,OACTC,QAAS,WACPJ,EAAKK,UAEPC,MAAO,WAELC,QAAQD,MAAM,8BAKtBD,OAAQ,WACJ,GAAIG,GAAM/C,EAAEgD,UACR,wBACA,uFACA,2FACA,OACA,uCACI,OACI,gFACI,yCACJ,OACA,mEACJ,QACJ,YACA,SAASC,KAAK,IAClBT,MAAKU,IAAIC,KAAKJ,GAAKK,MAAOZ,KAAKjB,MAAM8B,UAAUC,GAAG,QAAS,YAAa,SAASC,GAC7EA,EAAEC,iBACFhC,EAASlB,EAAEkC,MAAMzC,KAAK,iBAM1BD,sBAAuBA,EACvBR,UAAWA,EACXkC,SAAUA","file":"../../scripts/mvc/tours.js","sourcesContent":["/**\n *  This is the primary galaxy tours definition, currently only used for\n *  rendering a tour menu.\n *\n *  For now it's intended to be plunked into the center display a-la\n *  Galaxy.app.display, but we could use a modal as well for more flexibility.\n *\n *  DBTODO - This is downright backbone abuse, rewrite it.\n */\n\ndefine(['libs/bootstrap-tour'],function(BootstrapTour) {\n\n    var gxy_root = typeof Galaxy === \"undefined\" ? '/' : Galaxy.root;\n\n    var tour_opts = { storage: window.sessionStorage,\n                      onEnd: function(){\n                          sessionStorage.removeItem('activeGalaxyTour');\n                      },\n                      delay: 150, // Attempts to make it look natural\n                      orphan:true\n    };\n\n    var hooked_tour_from_data = function(data){\n        _.each(data.steps, function(step) {\n            if (step.preclick){\n                step.onShow= function(){\n                    _.each(step.preclick, function(preclick){\n                        // TODO: click delay between clicks\n                        $(preclick).click();\n                    });\n                };\n            }\n            if (step.postclick){\n                step.onHide = function(){\n                    _.each(step.postclick, function(postclick){\n                        // TODO: click delay between clicks\n                        $(postclick).click();\n                    });\n                };\n            }\n            if (step.textinsert){\n                // Have to manually trigger a change here, for some\n                // elements which have additional logic, like the\n                // upload input box\n                step.onShown= function(){\n                    $(step.element).val(step.textinsert).trigger(\"change\");\n                };\n            }\n        });\n        return data;\n    };\n\n    var TourItem = Backbone.Model.extend({\n      urlRoot: gxy_root + 'api/tours',\n    });\n\n    var Tours = Backbone.Collection.extend({\n      url:  gxy_root + 'api/tours',\n      model: TourItem,\n    });\n\n\n    var giveTour =  function(tour_id){\n        var url = gxy_root + 'api/tours/' + tour_id;\n        $.getJSON( url, function( data ) {\n            // Set hooks for additional click and data entry actions.\n            var tourdata = hooked_tour_from_data(data);\n            sessionStorage.setItem('activeGalaxyTour', JSON.stringify(data));\n            // Store tour steps in sessionStorage to easily persist w/o hackery.\n            var tour = new Tour(_.extend({\n                steps: tourdata.steps,\n            }, tour_opts));\n            // Always clean restart, since this is a new, explicit giveTour execution.\n            tour.init();\n            tour.goTo(0);\n            tour.restart();\n        });\n    };\n    var ToursView = Backbone.View.extend({\n        // initialize\n        initialize: function() {\n            var self = this;\n            this.setElement('<div/>');\n            this.model = new Tours();\n            this.model.fetch({\n              success: function(){\n                self.render();\n              },\n              error: function(){\n                // Do something.\n                console.error(\"Failed to fetch tours.\");\n              }\n            });\n        },\n\n        render: function(){\n            var tpl = _.template([\n                \"<h2>Galaxy Tours</h2>\",\n                \"<p>This page presents a list of interactive tours available on this Galaxy server.  \",\n                \"Select any tour to get started (and remember, you can click 'End Tour' at any time).</p>\",\n                \"<ul>\",\n                '<% _.each(tours, function(tour) { %>',\n                    '<li>',\n                        '<a href=\"/tours/<%- tour.id %>\" class=\"tourItem\" data-tour.id=<%- tour.id %>>',\n                            '<%- tour.attributes.name || tour.id %>',\n                        '</a>',\n                        ' - <%- tour.attributes.description || \"No description given.\" %>',\n                    '</li>',\n                '<% }); %>',\n                \"</ul>\"].join(''));\n            this.$el.html(tpl({tours: this.model.models})).on(\"click\", \".tourItem\", function(e){\n                e.preventDefault();\n                giveTour($(this).data(\"tour.id\"));\n            });\n        }\n    });\n\n    return {ToursView: ToursView,\n            hooked_tour_from_data: hooked_tour_from_data,\n            tour_opts: tour_opts,\n            giveTour: giveTour};\n});\n"]}