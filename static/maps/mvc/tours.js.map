{"version":3,"sources":["mvc/tours.js"],"names":["define","BootstrapTour","gxy_root","Galaxy","root","storage","sessionStorage","onEnd","removeItem","orphan","hooked_tour_from_data","data","_","each","steps","step","preclick","postclick","onHide","textinsert","onShown","$","element","val","trigger","TourItem","Backbone","Model","extend","urlRoot","Tours","Collection","url","model","giveTour","tour_id","getJSON","tourdata","JSON","stringify","tour","Tour","init","goTo","ToursView","View","initialize","this","self","setElement","fetch","success","error","console","render","tpl","template","e","tour_opts","join","$el","html","tours","models","on","preventDefault"],"mappings":"YAUAA,SAAQ,uBAAuB,SAASC,GAAxCD,GAAQE,GAAuB,mBAAvBC,QAAgCF,IAAeE,OAAAC,KAE/CF,GAAWG,QAAOF,OAAWG,eAGfC,MAAO,WADPF,eAAgBC,WAAlB,qBAEMA,MAAeE,IAFrBC,QAAA,GAAhBC,EAAA,SAAAC,GAiCS,MAxBLC,GAAEC,KAAKF,EAAKG,MAAO,SAASC,GAD5BL,EAAAA,WACOC,EAAKG,OAAO,WACXC,EAAKC,KAAAA,EAASA,SAAA,SAAAA,GAERH,EAAFG,GAAYA,YAIfD,EALDE,YAMHF,EAAAG,OAAA,WACGH,EAAKE,KAAAA,EAAUA,UAAA,SAAAA,GAETJ,EAAFI,GAAYA,YAIfF,EALDI,aASAJ,EAAAK,QAAA,WACAC,EAAAN,EAAAO,SAAAC,IAAAR,EAAAI,YAAAK,QAAA,cAIHb,GAzBTc,EAAAC,SAAAC,MAAAC,QA+BEC,QAAS3B,EAAW,cADtB4B,EAAAJ,SAAAK,WAAAH,QAKEI,IAAM9B,EAAW,YADnB+B,MAAIH,IAMAI,EAAY,SAASC,GAArBD,GAAAA,GAAAA,EAAAA,aAAYC,CACZd,GAAAe,QAAUlC,EAAAA,SAAWS,GAEjB,GAAA0B,GAAA3B,EAAAC,EACAL,gBAAeI,QAAAA,mBAAf4B,KAAAC,UAAA5B,GAEA,IAAA6B,GAAA,GAAAC,MAAA7B,EAAAgB,QACIY,MAAOH,EAASzB,OAChBE,GAEJ0B,GAAAE,OACAF,EAAKE,KAAL,GACAF,EAAKG,YA2Cb,QAAQC,UAvDRlB,SAAAmB,KAAAjB,QAiBIkB,WAAA,WACAA,GAAAA,GAAYC,IACRA,MAAIC,WAAJ,UACAD,KAAKE,MAAAA,GAAWnB,GAChBiB,KAAKd,MAALiB,OACAC,QAAWD,WACTC,EAAAA,UAECC,MAHc,WAKbC,QAAAD,MAAA,8BAMRE,OAAQ,WAARA,GAAQC,GAAA3C,EAAA4C,UACAD,wBAcJ,uFACIE,2FACAvB,OAFJ,uCAIH,OApCL,gFA0BwB,yCAaLU,OACXlC,mEACWgD,QACXxB,YA9GZ,SAAAyB,KAAA,IAoGYZ,MAAKa,IAAIC,KAAKN,GAAKO,MAAOf,KAAKd,MAAM8B,UAAUC,GAAG,QAAS,YAAa,SAASP,GAC7EA,EAAEQ,iBACF/B,EAASb,EAAE0B,MAAMpC,KAAK,iBAM1BD,sBAAuBA,EACvBgD,UAAWA,EACXxB,SAAUA","file":"../../scripts/mvc/tours.js","sourcesContent":["/**\n *  This is the primary galaxy tours definition, currently only used for\n *  rendering a tour menu.\n *\n *  For now it's intended to be plunked into the center display a-la\n *  Galaxy.app.display, but we could use a modal as well for more flexibility.\n *\n *  DBTODO - This is downright backbone abuse, rewrite it.\n */\n\ndefine(['libs/bootstrap-tour'],function(BootstrapTour) {\n\n    var gxy_root = typeof Galaxy === \"undefined\" ? '/' : Galaxy.root;\n\n    var tour_opts = { storage: window.sessionStorage,\n                      onEnd: function(){\n                          sessionStorage.removeItem('activeGalaxyTour');\n                      },\n                      delay: 150, // Attempts to make it look natural\n                      orphan:true\n    };\n\n    var hooked_tour_from_data = function(data){\n        _.each(data.steps, function(step) {\n            if (step.preclick){\n                step.onShow= function(){\n                    _.each(step.preclick, function(preclick){\n                        // TODO: click delay between clicks\n                        $(preclick).click();\n                    });\n                };\n            }\n            if (step.postclick){\n                step.onHide = function(){\n                    _.each(step.postclick, function(postclick){\n                        // TODO: click delay between clicks\n                        $(postclick).click();\n                    });\n                };\n            }\n            if (step.textinsert){\n                // Have to manually trigger a change here, for some\n                // elements which have additional logic, like the\n                // upload input box\n                step.onShown= function(){\n                    $(step.element).val(step.textinsert).trigger(\"change\");\n                };\n            }\n        });\n        return data;\n    };\n\n    var TourItem = Backbone.Model.extend({\n      urlRoot: gxy_root + 'api/tours',\n    });\n\n    var Tours = Backbone.Collection.extend({\n      url:  gxy_root + 'api/tours',\n      model: TourItem,\n    });\n\n\n    var giveTour =  function(tour_id){\n        var url = gxy_root + 'api/tours/' + tour_id;\n        $.getJSON( url, function( data ) {\n            // Set hooks for additional click and data entry actions.\n            var tourdata = hooked_tour_from_data(data);\n            sessionStorage.setItem('activeGalaxyTour', JSON.stringify(data));\n            // Store tour steps in sessionStorage to easily persist w/o hackery.\n            var tour = new Tour(_.extend({\n                steps: tourdata.steps,\n            }, tour_opts));\n            // Always clean restart, since this is a new, explicit giveTour execution.\n            tour.init();\n            tour.goTo(0);\n            tour.restart();\n        });\n    };\n    var ToursView = Backbone.View.extend({\n        // initialize\n        initialize: function() {\n            var self = this;\n            this.setElement('<div/>');\n            this.model = new Tours();\n            this.model.fetch({\n              success: function(){\n                self.render();\n              },\n              error: function(){\n                // Do something.\n                console.error(\"Failed to fetch tours.\");\n              }\n            });\n        },\n\n        render: function(){\n            var tpl = _.template([\n                \"<h2>Galaxy Tours</h2>\",\n                \"<p>This page presents a list of interactive tours available on this Galaxy server.  \",\n                \"Select any tour to get started (and remember, you can click 'End Tour' at any time).</p>\",\n                \"<ul>\",\n                '<% _.each(tours, function(tour) { %>',\n                    '<li>',\n                        '<a href=\"/tours/<%- tour.id %>\" class=\"tourItem\" data-tour.id=<%- tour.id %>>',\n                            '<%- tour.attributes.name || tour.id %>',\n                        '</a>',\n                        ' - <%- tour.attributes.description || \"No description given.\" %>',\n                    '</li>',\n                '<% }); %>',\n                \"</ul>\"].join(''));\n            this.$el.html(tpl({tours: this.model.models})).on(\"click\", \".tourItem\", function(e){\n                e.preventDefault();\n                giveTour($(this).data(\"tour.id\"));\n            });\n        }\n    });\n\n    return {ToursView: ToursView,\n            hooked_tour_from_data: hooked_tour_from_data,\n            tour_opts: tour_opts,\n            giveTour: giveTour};\n});\n"]}