{"version":3,"sources":["mvc/tours.js"],"names":["_bootstrapTour","require","gxy_root","Galaxy","root","tourpage_template","sessionStorage","storage","window","delay","orphan","removeItem","hooked_tour_from_data","step","data","_","preclick","$","each","click","postclick","textinsert","onShown","element","val","trigger","url","Model","extend","model","TourItem","giveTour","Collection","getJSON","setItem","tour_id","tour","tour_opts","JSON","stringify","Tour","restart","steps","tourdata","setElement","ToursView","Backbone","View","error","console","self","this","Tours","fetch","success","tpl","template","e","preventDefault","on"],"mappings":"4IAKA,IAAAA,eAAAC,QAAA,8EAAAC,SAAA,oBAAAC,OAAA,IAAAA,OAAAC,KAGIC,kBAAAA,8fAiBIC,WACHC,QAJWC,OAAAF,eAKZG,MAAO,WACPC,eAAQC,WAAA,qBADRF,MAAO,IAIPG,QAAAA,GAGQC,sBAAc,SAAAC,GA6B1B,OA5BgBC,EAAAA,KAAAA,EAAAA,MAAOF,SAAKG,GACRH,EAAAG,WACAC,EAAAA,OAAED,WACLD,EAHDG,KAAAL,EAAAG,SAAA,SAAAA,GAKPC,EAAAD,GAAAG,YAIWN,EAAAO,YACAH,EAAAA,OAAEG,WACLL,EAHDG,KAAAL,EAAAO,UAAA,SAAAA,GAKPH,EAAAG,GAAAD,YAIGN,EAAAQ,aAMHR,EAAAS,QAAA,WA1BLL,EAAAJ,EAAAU,SA4BAC,IAAAX,EAAAQ,YA7BJI,QAAA,cAgCAX,GAKIY,SAAKxB,SAAWyB,MAAAC,QAChBC,QAAOC,SAAAA,cAGPC,MAAAA,SAAWC,WAAAJ,QACXF,IAAIA,SAAMxB,YACVe,MAAEgB,WAGE3B,SAAAA,SAAe4B,GACf,IAAAR,EAAAxB,SAAA,aAAAiC,EACAlB,EAAAgB,QAAIG,EAAO,SACPrB,GACI,IAGAsB,EALRzB,sBAAAE,GAQAR,eAAA4B,QAAA,mBAAAI,KAAAC,UAAAzB,IAEAsB,IAAAA,EAAA,IAAAI,KACAJ,EAAKK,QAlBbC,MAAAC,EAAAD,OAsBWL,YAIHD,EAAKQ,OACLR,EAAKP,KAAL,GACAO,EAAKP,aAGAgB,UAHYC,SAAAC,KAAAnB,QAIboB,MAAAA,QAEIC,WAAAA,WACH,IAAAC,EAAAC,KAPYA,KAAjBP,WAAA,UAP6BO,KAAAtB,MAAA,IAAAuB,MAO7BD,KAAKtB,MAAMwB,OAWPC,QAAA,WACAC,EAAQC,UAIJC,MAAEC,WAHVT,QAAAD,MAAA,8BAUJH,OAAAA,WACAjC,IAAAA,EAAAA,EAAAA,SAAuBA,mBACvByB,KAAAA,IACAN,KAAUA,GAAAA,MAAAA,KAAAA,MAAAA,UAXD4B,GAAG,QAAS,YAAa,SAASF,GAC/BA,EAAEC,iBACF3B,SAASd,EAAEkC,MAAMrC,KAAK,kCAMlC+B,UAAWA,UACXjC,sBAAuBA,sBACvByB,UAAWA,UACXN,SAAUA","file":"../../scripts/mvc/tours.js","sourcesContent":["/**\n *  This is the primary galaxy tours definition, currently only used for\n *  rendering a tour menu.\n */\n\nimport BootstrapTour from \"libs/bootstrap-tour\";\nvar gxy_root = typeof Galaxy === \"undefined\" ? \"/\" : Galaxy.root;\n\nvar tourpage_template = `<h2>Galaxy Tours</h2>\n<p>This page presents a list of interactive tours available on this Galaxy server.\nSelect any tour to get started (and remember, you can click 'End Tour' at any time).</p>\n<ul>\n<% _.each(tours, function(tour) { %>\n    <li>\n        <a href=\"/tours/<%- tour.id %>\" class=\"tourItem\" data-tour.id=<%- tour.id %>>\n            <%- tour.attributes.name || tour.id %>\n        </a>\n         - <%- tour.attributes.description || \"No description given.\" %>\n    </li>\n<% }); %>\n</ul>`;\n\nvar tour_opts = {\n    storage: window.sessionStorage,\n    onEnd: function() {\n        sessionStorage.removeItem(\"activeGalaxyTour\");\n    },\n    delay: 150, // Attempts to make it look natural\n    orphan: true\n};\n\nvar hooked_tour_from_data = function(data) {\n    _.each(data.steps, function(step) {\n        if (step.preclick) {\n            step.onShow = function() {\n                _.each(step.preclick, function(preclick) {\n                    // TODO: click delay between clicks\n                    $(preclick).click();\n                });\n            };\n        }\n        if (step.postclick) {\n            step.onHide = function() {\n                _.each(step.postclick, function(postclick) {\n                    // TODO: click delay between clicks\n                    $(postclick).click();\n                });\n            };\n        }\n        if (step.textinsert) {\n            // Have to manually trigger a change here, for some\n            // elements which have additional logic, like the\n            // upload input box\n            step.onShown = function() {\n                $(step.element)\n                    .val(step.textinsert)\n                    .trigger(\"change\");\n            };\n        }\n    });\n    return data;\n};\n\nvar TourItem = Backbone.Model.extend({\n    urlRoot: gxy_root + \"api/tours\"\n});\n\nvar Tours = Backbone.Collection.extend({\n    url: gxy_root + \"api/tours\",\n    model: TourItem\n});\n\nvar giveTour = function(tour_id) {\n    var url = gxy_root + \"api/tours/\" + tour_id;\n    $.getJSON(url, function(data) {\n        // Set hooks for additional click and data entry actions.\n        var tourdata = hooked_tour_from_data(data);\n        sessionStorage.setItem(\"activeGalaxyTour\", JSON.stringify(data));\n        // Store tour steps in sessionStorage to easily persist w/o hackery.\n        var tour = new Tour(\n            _.extend(\n                {\n                    steps: tourdata.steps\n                },\n                tour_opts\n            )\n        );\n        // Always clean restart, since this is a new, explicit giveTour execution.\n        tour.init();\n        tour.goTo(0);\n        tour.restart();\n    });\n};\nvar ToursView = Backbone.View.extend({\n    title: \"Tours\",\n    // initialize\n    initialize: function() {\n        var self = this;\n        this.setElement(\"<div/>\");\n        this.model = new Tours();\n        this.model.fetch({\n            success: function() {\n                self.render();\n            },\n            error: function() {\n                // Do something.\n                console.error(\"Failed to fetch tours.\");\n            }\n        });\n    },\n\n    render: function() {\n        var tpl = _.template(tourpage_template);\n        this.$el\n            .html(tpl({ tours: this.model.models }))\n            .on(\"click\", \".tourItem\", function(e) {\n                e.preventDefault();\n                giveTour($(this).data(\"tour.id\"));\n            });\n    }\n});\n\nexport default {\n    ToursView: ToursView,\n    hooked_tour_from_data: hooked_tour_from_data,\n    tour_opts: tour_opts,\n    giveTour: giveTour\n};\n"]}