{"version":3,"sources":["mvc/tours.js"],"names":["gxy_root","Galaxy","root","tour_opts","storage","window","onEnd","sessionStorage","removeItem","delay","orphan","hooked_tour_from_data","data","_","each","steps","step","onShow","preclick","$","onHide","postclick","onShown","val","textinsert","trigger","TourItem","Backbone","Model","extend","urlRoot","model","url","getJSON","tour_id","tourdata","setItem","JSON","stringify","tour","goTo","init","initialize","restart","ToursView","fetch","success","error","this","setElement","console","self","render","html","tpl","template","tourpage_template","$el","models","giveTour"],"mappings":"0JAMIA,EAA6B,oBAAXC,OAAyB,IAAMA,OAAOC,KAgB5DC,GACIC,QAAAA,OAASC,eACTC,MAAAA,WACIC,eAAAA,WAAeC,qBAEnBC,MAAAA,IACAC,QAAAA,GAGJC,EAAIA,SAAwBC,GA6BxB,OA5BAC,EAAAA,KAAEC,EAAKF,MAAKG,SAAOC,GACfA,EAAIA,WACAA,EAAAA,OAAKC,WACDJ,EAAAA,KAAEC,EAAKE,SAAKE,SAAUA,GAElBC,EAAAA,GAAED,YAIdF,EAAIA,YACAA,EAAAA,OAAKI,WACDP,EAAAA,KAAEC,EAAKE,UAAKK,SAAWA,GAEnBF,EAAAA,GAAEE,YAIdL,EAAIA,aAIAA,EAAAA,QAAKM,WACDH,EAAAA,EAAEH,SADNO,IAAAP,EAAAQ,YAKHC,QAAA,cAEEb,GAG0Bc,EAArCC,SAAAC,MAAAC,QACIC,QAAS9B,EAAW,cAKpB+B,EAAAA,SAAOL,WAAAA,QAF4BM,IAAvChC,EAAA,YAEI+B,MAAOL,IAKPP,EAAEc,SAAaC,GACX,IAAAF,EAAAhC,EAAA,aAAAkC,EACAf,EAAAc,QAAAD,EAAIG,SAAWxB,GAEf,IAAAwB,EAAAxB,EAAAC,GACAL,eAAW6B,QAAA,mBAEHC,KAAAC,UAAA1B,IAAA,IAAA2B,EAGApC,IAAAA,KAGRU,EAAAgB,QAEKW,MAALL,EAAApB,OAfJZ,IAqBAoC,EAAAE,OACAC,EAAAA,KAAAA,GACIH,EAAAI,aAGAC,EAAAjB,SAAWkB,KAAMhB,QACbiB,MAAAA,QAECJ,WAAA,WACDK,IAAAA,EAAAA,KACIC,KAAAC,WAAA,UACAC,KAAAA,MAAAA,IAAAA,EACHF,KAAAjB,MAAAc,OAPYC,QAAjB,WAP6BK,EAAAC,UAkBjCA,MAAQ,WAEJF,QACKG,MAAS,8BArBeD,OAArC,WAmBQ,IAAIE,EAAMzC,EAAE0C,SAxGhBC,+fAyGIR,KAAKS,IAUTb,KAAAA,GAAWA,MADAI,KAAAjB,MAAA2B,UAEX/C,GAAAA,QAAAA,YAAuBA,SAAAA,GACvBR,EAAAA,iBACAwD,EAAUA,EAAAA,MAAAA,KAAAA,4BAHVf,UAAWA,EACXjC,sBAAuBA,EACvBR,UAAWA,EACXwD,SAAUA","file":"../../scripts/mvc/tours.js","sourcesContent":["/**\n *  This is the primary galaxy tours definition, currently only used for\n *  rendering a tour menu.\n */\n\nimport BootstrapTour from \"libs/bootstrap-tour\";\nvar gxy_root = typeof Galaxy === \"undefined\" ? \"/\" : Galaxy.root;\n\nvar tourpage_template = `<h2>Galaxy Tours</h2>\n<p>This page presents a list of interactive tours available on this Galaxy server.\nSelect any tour to get started (and remember, you can click 'End Tour' at any time).</p>\n<ul>\n<% _.each(tours, function(tour) { %>\n    <li>\n        <a href=\"/tours/<%- tour.id %>\" class=\"tourItem\" data-tour.id=<%- tour.id %>>\n            <%- tour.attributes.name || tour.id %>\n        </a>\n         - <%- tour.attributes.description || \"No description given.\" %>\n    </li>\n<% }); %>\n</ul>`;\n\nvar tour_opts = {\n    storage: window.sessionStorage,\n    onEnd: function() {\n        sessionStorage.removeItem(\"activeGalaxyTour\");\n    },\n    delay: 150, // Attempts to make it look natural\n    orphan: true\n};\n\nvar hooked_tour_from_data = function(data) {\n    _.each(data.steps, function(step) {\n        if (step.preclick) {\n            step.onShow = function() {\n                _.each(step.preclick, function(preclick) {\n                    // TODO: click delay between clicks\n                    $(preclick).click();\n                });\n            };\n        }\n        if (step.postclick) {\n            step.onHide = function() {\n                _.each(step.postclick, function(postclick) {\n                    // TODO: click delay between clicks\n                    $(postclick).click();\n                });\n            };\n        }\n        if (step.textinsert) {\n            // Have to manually trigger a change here, for some\n            // elements which have additional logic, like the\n            // upload input box\n            step.onShown = function() {\n                $(step.element)\n                    .val(step.textinsert)\n                    .trigger(\"change\");\n            };\n        }\n    });\n    return data;\n};\n\nvar TourItem = Backbone.Model.extend({\n    urlRoot: gxy_root + \"api/tours\"\n});\n\nvar Tours = Backbone.Collection.extend({\n    url: gxy_root + \"api/tours\",\n    model: TourItem\n});\n\nvar giveTour = function(tour_id) {\n    var url = gxy_root + \"api/tours/\" + tour_id;\n    $.getJSON(url, function(data) {\n        // Set hooks for additional click and data entry actions.\n        var tourdata = hooked_tour_from_data(data);\n        sessionStorage.setItem(\"activeGalaxyTour\", JSON.stringify(data));\n        // Store tour steps in sessionStorage to easily persist w/o hackery.\n        var tour = new Tour(\n            _.extend(\n                {\n                    steps: tourdata.steps\n                },\n                tour_opts\n            )\n        );\n        // Always clean restart, since this is a new, explicit giveTour execution.\n        tour.init();\n        tour.goTo(0);\n        tour.restart();\n    });\n};\nvar ToursView = Backbone.View.extend({\n    title: \"Tours\",\n    // initialize\n    initialize: function() {\n        var self = this;\n        this.setElement(\"<div/>\");\n        this.model = new Tours();\n        this.model.fetch({\n            success: function() {\n                self.render();\n            },\n            error: function() {\n                // Do something.\n                console.error(\"Failed to fetch tours.\");\n            }\n        });\n    },\n\n    render: function() {\n        var tpl = _.template(tourpage_template);\n        this.$el\n            .html(tpl({ tours: this.model.models }))\n            .on(\"click\", \".tourItem\", function(e) {\n                e.preventDefault();\n                giveTour($(this).data(\"tour.id\"));\n            });\n    }\n});\n\nexport default {\n    ToursView: ToursView,\n    hooked_tour_from_data: hooked_tour_from_data,\n    tour_opts: tour_opts,\n    giveTour: giveTour\n};\n"]}