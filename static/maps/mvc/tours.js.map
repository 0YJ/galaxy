{"version":3,"sources":["mvc/tours.js"],"names":["define","BootstrapTour","gxy_root","Galaxy","root","each","storage","step","preclick","_","$","orphan","hooked_tour_from_data","data","onHide","onShow","postclick","click","onShown","textinsert","element","val","trigger","TourItem","Model","extend","sessionStorage","setItem","url","model","tour","giveTour","tour_id","init","goTo","tourdata","JSON","stringify","Tour","initialize","setElement","steps","tour_opts","error","console","ToursView","Backbone","View","render","tpl","this","$el","e","preventDefault","success","self","template","html","tours","models","on"],"mappings":"YAKAA,SAAQ,uBAAwB,SAASC,GACvC,GAAIC,GAA6B,mBAAXC,QAAyB,IAAMA,OAAOC,KA0BxDC,GACAC,QAAIC,OAAKC,eACPD,MAAAA,WACEE,eAAOF,WAAe,qBAEpBG,MAAAA,IACDC,QAHD,GAMJC,EAAoB,SAAAC,GAwBxB,MAvBMN,GAAAA,KAAAA,EAAKO,MAAS,SAAAP,GACZE,EAAEJ,WACAE,EAAAQ,OAAA,WACAL,EAAAA,KAAEM,EAAAA,SAAF,SAAAR,GAHJE,EAAAF,GAAAS,YASAV,EAAAS,YACAT,EAAAO,OAAA,WACAP,EAAAA,KAAKW,EAALF,UAAe,SAAWA,GAA1BN,EAAAM,GAAAC,YAtBNV,EAAAY,aA8BAZ,EAAAW,QAAA,WAPQR,EAAEH,EAAKa,SAASC,IAAId,EAAKY,YAAYG,QAAQ,cAWrDT,GAMEU,EAAUrB,SAAWsB,MAAAC,QACrBf,QAAAR,EAAe,cAGbwB,EAAAA,SAAeC,WAAQF,QACvBG,IAAA1B,EAAA,YACA2B,MAAIC,IAQJC,EAAA,SAAAC,GACAF,GAAAA,GAAKG,EAAL,aAAAD,CACAF,GAAAA,QAAKI,EAAL,SAAArB,GAfF,GAAAsB,GAAAvB,EAAAC,EAFFa,gBAAAC,QAAA,mBAAAS,KAAAC,UAAAxB,GAsBE,IAAAiB,GAAA,GAAAQ,MACAC,EAAAA,QAEOC,MAAAA,EAAWC,OAEhBC,GAIEC,GAAAA,OACEb,EAAAI,KAAA,GACAU,EAAAA,YAgBR,QACEC,UA7BmCC,SAAAC,KAAAtB,QAiBnCuB,WAAQ,WACN,GAAIC,GAAMxC,IACVyC,MAAKC,WACGF,UAEJG,KAAEC,MAAAA,GAAAA,GACFtB,KAAAA,MAASrB,OAJb4C,QAAA,WAMDC,EAAAP,UAfGL,MAAO,WAmBXE,QAAWA,MADN,8BAlHTG,OAAA,WAwGM,GAAIC,GAAMxC,EAAE+C,SAvGZtD,8fAwGAgD,MAAKC,IACFM,KAAKR,GAAMS,MAAOR,KAAKrB,MAAM8B,UAC7BC,GAAG,QAAS,YAAa,SAASR,GACjCA,EAAEC,iBACFtB,EAASrB,EAAEwC,MAAMrC,KAAK,iBAO5BD,sBAAuBA,EACvB8B,UAAWA,EACXX,SAAUA","file":"../../scripts/mvc/tours.js","sourcesContent":["/**\n *  This is the primary galaxy tours definition, currently only used for\n *  rendering a tour menu.\n */\n\ndefine([\"libs/bootstrap-tour\"], function(BootstrapTour) {\n  var gxy_root = typeof Galaxy === \"undefined\" ? \"/\" : Galaxy.root;\n\n  var tourpage_template = `<h2>Galaxy Tours</h2>\n<p>This page presents a list of interactive tours available on this Galaxy server.\nSelect any tour to get started (and remember, you can click 'End Tour' at any time).</p>\n<ul>\n<% _.each(tours, function(tour) { %>\n    <li>\n        <a href=\"/tours/<%- tour.id %>\" class=\"tourItem\" data-tour.id=<%- tour.id %>>\n            <%- tour.attributes.name || tour.id %>\n        </a>\n         - <%- tour.attributes.description || \"No description given.\" %>\n    </li>\n<% }); %>\n</ul>`;\n\n  var tour_opts = {\n    storage: window.sessionStorage,\n    onEnd: function() {\n      sessionStorage.removeItem(\"activeGalaxyTour\");\n    },\n    delay: 150, // Attempts to make it look natural\n    orphan: true\n  };\n\n  var hooked_tour_from_data = function(data) {\n    _.each(data.steps, function(step) {\n      if (step.preclick) {\n        step.onShow = function() {\n          _.each(step.preclick, function(preclick) {\n            // TODO: click delay between clicks\n            $(preclick).click();\n          });\n        };\n      }\n      if (step.postclick) {\n        step.onHide = function() {\n          _.each(step.postclick, function(postclick) {\n            // TODO: click delay between clicks\n            $(postclick).click();\n          });\n        };\n      }\n      if (step.textinsert) {\n        // Have to manually trigger a change here, for some\n        // elements which have additional logic, like the\n        // upload input box\n        step.onShown = function() {\n          $(step.element).val(step.textinsert).trigger(\"change\");\n        };\n      }\n    });\n    return data;\n  };\n\n  var TourItem = Backbone.Model.extend({\n    urlRoot: gxy_root + \"api/tours\"\n  });\n\n  var Tours = Backbone.Collection.extend({\n    url: gxy_root + \"api/tours\",\n    model: TourItem\n  });\n\n  var giveTour = function(tour_id) {\n    var url = gxy_root + \"api/tours/\" + tour_id;\n    $.getJSON(url, function(data) {\n      // Set hooks for additional click and data entry actions.\n      var tourdata = hooked_tour_from_data(data);\n      sessionStorage.setItem(\"activeGalaxyTour\", JSON.stringify(data));\n      // Store tour steps in sessionStorage to easily persist w/o hackery.\n      var tour = new Tour(\n        _.extend(\n          {\n            steps: tourdata.steps\n          },\n          tour_opts\n        )\n      );\n      // Always clean restart, since this is a new, explicit giveTour execution.\n      tour.init();\n      tour.goTo(0);\n      tour.restart();\n    });\n  };\n  var ToursView = Backbone.View.extend({\n    // initialize\n    initialize: function() {\n      var self = this;\n      this.setElement(\"<div/>\");\n      this.model = new Tours();\n      this.model.fetch({\n        success: function() {\n          self.render();\n        },\n        error: function() {\n          // Do something.\n          console.error(\"Failed to fetch tours.\");\n        }\n      });\n    },\n\n    render: function() {\n      var tpl = _.template(tourpage_template);\n      this.$el\n        .html(tpl({ tours: this.model.models }))\n        .on(\"click\", \".tourItem\", function(e) {\n          e.preventDefault();\n          giveTour($(this).data(\"tour.id\"));\n        });\n    }\n  });\n\n  return {\n    ToursView: ToursView,\n    hooked_tour_from_data: hooked_tour_from_data,\n    tour_opts: tour_opts,\n    giveTour: giveTour\n  };\n});\n"]}