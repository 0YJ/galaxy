{"version":3,"sources":["mvc/webhooks.js"],"names":["define","WebhookModel","Backbone","Model","extend","defaults","activate","Webhooks","Collection","model","WebhookView","View","el","initialize","options","me","this","urlRoot","fetch","success","render","webhook","toJSON","$el","html","name","styles","$","type","text","appendTo","script","add","webhooks","url","Galaxy","root","async","callback"],"mappings":"AAGAA,UAAW,WAEP,GAAIC,GAAeC,SAASC,MAAMC,QAC9BC,UACIC,UAAU,KAIdC,EAAWL,SAASM,WAAWJ,QAC/BK,MAAOR,IAGPS,EAAcR,SAASS,KAAKP,QAC5BQ,GAAI,gBAEJC,WAAY,SAASC,GACjB,GAAIC,GAAKC,IAETA,MAAKP,MAAQ,GAAIR,GACjBe,KAAKP,MAAMQ,QAAUH,EAAQG,QAC7BD,KAAKP,MAAMS,OACPC,QAAS,WACLJ,EAAGK,aAKfA,OAAQ,WACJ,GAAIC,GAAUL,KAAKP,MAAMa,QAMzB,OAJAN,MAAKO,IAAIC,KAAK,YAAcH,EAAQI,KAAO,YACvCJ,EAAQK,QAAQC,EAAE,YAAaC,KAAM,aAAaC,KAAKR,EAAQK,QAAQI,SAAS,QAChFT,EAAQU,QAAQJ,EAAE,aAAcC,KAAM,oBAAoBC,KAAKR,EAAQU,QAAQD,SAAS,QAErFd,OAcf,QACIT,SAAUA,EACVG,YAAaA,EACbsB,IAbM,SAASlB,GACf,GAAImB,GAAW,GAAI1B,EAEnB0B,GAASC,IAAMC,OAAOC,KAAOtB,EAAQoB,IACrCD,EAASf,OACLmB,UAAgC,KAAjBvB,EAAQuB,OAAwBvB,EAAQuB,MACvDlB,QAASL,EAAQwB","file":"../../scripts/mvc/webhooks.js","sourcesContent":["/**\n  Webhooks\n**/\ndefine([], function() {\n\n    var WebhookModel = Backbone.Model.extend({\n        defaults: {\n            activate: false\n        }\n    });\n\n    var Webhooks = Backbone.Collection.extend({\n        model: WebhookModel\n    });\n\n    var WebhookView = Backbone.View.extend({\n        el: '#webhook-view',\n\n        initialize: function(options) {\n            var me = this;\n\n            this.model = new WebhookModel();\n            this.model.urlRoot = options.urlRoot;\n            this.model.fetch({\n                success: function() {\n                    me.render();\n                }\n            });\n        },\n\n        render: function() {\n            var webhook = this.model.toJSON();\n\n            this.$el.html('<div id=\"' + webhook.name + '\"></div>');\n            if (webhook.styles) $('<style/>', {type: 'text/css'}).text(webhook.styles).appendTo('head');\n            if (webhook.script) $('<script/>', {type: 'text/javascript'}).text(webhook.script).appendTo('head');\n            \n            return this;\n        }\n    });\n\n    var add = function(options) {\n        var webhooks = new Webhooks();\n\n        webhooks.url = Galaxy.root + options.url;\n        webhooks.fetch({\n            async: (typeof options.async != 'undefined') ? options.async : true,\n            success: options.callback\n        });\n    };\n\n    return {\n        Webhooks: Webhooks,\n        WebhookView: WebhookView,\n        add: add\n    };\n});\n"]}