{"version":3,"sources":["mvc/webhooks.js"],"names":["WebhookModel","Backbone","Model","extend","defaults","activate","Collection","WebhookView","View","Webhooks","initialize","options","me","this","toolVersion","attr","toolId","model","urlRoot","$el","success","render","webhook","toJSON","html","name","styles","$","type","appendTo","script","add","webhooks","fetch","Galaxy","root","url","async","callback"],"mappings":"oEAIA,IAAIA,aAAeC,SAASC,MAAMC,QAJlCC,UAMQC,UAAU,KADdD,SAAUH,SAAAK,WAAAH,QACNE,MAAAA,eAQJE,YAAcN,SAASO,KAAKL,QAJ5BM,GAAAA,gBAAJC,WAAA,SAAAC,GAQQ,IAAIC,EAAKC,KAJbN,EAAcN,EAASO,QAAY,GAC/BM,EAD+BH,EAAAG,aAAA,GAGnCJ,KAAAA,IAAYK,KAAA,UAAAC,GACRH,KAAID,IAAKG,KAAT,eAAAD,GAEAD,KAAIC,MAAAA,IAAAA,aAMJD,KAAKI,MAAMC,QAAUP,EAAQO,QAJ7BL,KAAKM,MAAIJ,OACTK,QAAA,WAMQR,EAAGS,aAAHT,OAAAA,WACH,IAAAU,EAAAT,KAAAI,MAAAM,SAkBR,OAlCkCV,KAAAM,IAAAK,KAAA,YAAAF,EAAAG,KAAA,YAwB3BH,EAAQI,QAJRC,EAAA,YAAAC,KAAW,aACXN,KAAUA,EAAKL,QAMVY,SAAS,QAJlBP,EAASE,QACLF,EAAAA,aACAK,KAAE,oBAGFL,KAAQQ,EACNA,QAEGD,SAAS,QAGrBhB,QAIDkB,IAAIC,SAAWrB,GAAf,IAAIqB,EAAW,IAAIvB,SAGnBuB,EAASC,IAAMC,OAAAC,KAAAxB,EAAAyB,IACXC,EAAAA,OACAjB,OAAAA,EAAST,OAAQ2B,EAAAA,MAFrBlB,QAAAT,EAAA2B,6BAQA/B,SAAAA,SACAwB,YAAKA,YAALA,IAAKA","file":"../../scripts/mvc/webhooks.js","sourcesContent":["/**\n  Webhooks\n**/\n\nvar WebhookModel = Backbone.Model.extend({\n    defaults: {\n        activate: false\n    }\n});\n\nvar Webhooks = Backbone.Collection.extend({\n    model: WebhookModel\n});\n\nvar WebhookView = Backbone.View.extend({\n    el: \"#webhook-view\",\n\n    initialize: function(options) {\n        var me = this;\n        var toolId = options.toolId || \"\";\n        var toolVersion = options.toolVersion || \"\";\n\n        this.$el.attr(\"tool_id\", toolId);\n        this.$el.attr(\"tool_version\", toolVersion);\n\n        this.model = new WebhookModel();\n        this.model.urlRoot = options.urlRoot;\n        this.model.fetch({\n            success: function() {\n                me.render();\n            }\n        });\n    },\n\n    render: function() {\n        var webhook = this.model.toJSON();\n\n        this.$el.html('<div id=\"' + webhook.name + '\"></div>');\n        if (webhook.styles)\n            $(\"<style/>\", { type: \"text/css\" })\n                .text(webhook.styles)\n                .appendTo(\"head\");\n        if (webhook.script)\n            $(\"<script/>\", { type: \"text/javascript\" })\n                .text(webhook.script)\n                .appendTo(\"head\");\n\n        return this;\n    }\n});\n\nvar add = function(options) {\n    var webhooks = new Webhooks();\n\n    webhooks.url = Galaxy.root + options.url;\n    webhooks.fetch({\n        async: options.async ? options.async : true,\n        success: options.callback\n    });\n};\n\nexport default {\n    Webhooks: Webhooks,\n    WebhookView: WebhookView,\n    add: add\n};\n"]}