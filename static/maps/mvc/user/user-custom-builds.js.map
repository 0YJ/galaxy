{"version":3,"sources":["mvc/user/user-custom-builds.js"],"names":["Collection","Backbone","extend","comparator","a","b","get","View","initialize","options","self","this","history_id","Galaxy","currHistoryPanel","model","id","Model","url","root","user","message","_uiMisc2","default","Message","installed_builds","Select","optional","value","empty_text","error_text","table","collection","selectable","onchange","$","text","$el","append","$installed","addHeader","addClass","setElement","_renderForm","$form","add","tooltip","onclick","listenTo","fetch","render","_renderTable","name","label","help","sort","type","undefined","data","inputs","area","cases","wait","success","status","error","form","buttons","icon","title","cls","_renderHelp","initial_type","create","response","update","err","responseJSON","err_msg","input_id","match","input_field","field_list","empty","length","show","hide","len_type","$help","html","_templateFasta","_templateLen"],"mappings":"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","file":"../../../scripts/mvc/user/user-custom-builds.js","sourcesContent":["/** This class renders the chart configuration form. */\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nimport Table from \"mvc/ui/ui-table\";\nvar Collection = Backbone.Collection.extend({\n    comparator: function(a, b) {\n        a = a.get(\"name\");\n        b = b.get(\"name\");\n        return a > b ? 1 : a < b ? -1 : 0;\n    }\n});\n\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        var history_id =\n            Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model.id;\n        this.model = new Backbone.Model();\n        this.model.url =\n            Galaxy.root +\n            \"api/histories/\" +\n            history_id +\n            \"/custom_builds_metadata\";\n        this.collection = new Collection();\n        this.collection.url =\n            Galaxy.root + \"api/users/\" + Galaxy.user.id + \"/custom_builds\";\n        this.message = new Ui.Message({});\n        this.installed_builds = new Ui.Select.View({\n            optional: true,\n            onchange: function() {\n                self.installed_builds.value(null);\n            },\n            empty_text: \"List of available builds:\",\n            error_text: \"No system installed builds available.\"\n        });\n        this.table = new Table.View({ cls: \"grid\", selectable: false });\n        this.table.addHeader(\"Name\");\n        this.table.addHeader(\"Key\");\n        this.table.addHeader(\"Number of chroms/contigs\");\n        this.table.addHeader(\"\");\n        this.table.appendHeader();\n        this.setElement(\n            $(\"<div/>\")\n                .append($(\"<h4/>\").text(\"Current Custom Builds\"))\n                .append(this.table.$el)\n                .append(\n                    (this.$installed = $(\"<div/>\")\n                        .append(\n                            $(\"<h4/>\")\n                                .text(\"System Installed Builds\")\n                                .addClass(\"ui-margin-top\")\n                        )\n                        .append(this.installed_builds.$el))\n                )\n                .append(\n                    $(\"<h4/>\")\n                        .text(\"Add a Custom Build\")\n                        .addClass(\"ui-margin-top\")\n                )\n                .append(\n                    $(\"<span/>\")\n                        .addClass(\"ui-column\")\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"ui-column-left\")\n                                .append(this.message.$el)\n                                .append(\n                                    (this.$form = $(\"<div/>\").addClass(\n                                        \"ui-margin-top\"\n                                    ))\n                                )\n                        )\n                        .append(\n                            (this.$help = $(\"<div/>\").addClass(\n                                \"ui-column-right\"\n                            ))\n                        )\n                )\n        );\n        this.listenTo(this.collection, \"add remove reset\", () => {\n            self._renderTable();\n        });\n        this.listenTo(this.model, \"change\", () => {\n            self._renderForm();\n        });\n        this.collection.fetch();\n        this.model.fetch();\n    },\n\n    render: function() {\n        this._renderTable();\n        this._renderForm();\n    },\n\n    _renderTable: function() {\n        var self = this;\n        this.table.delAll();\n        this.collection.sort();\n        this.collection.each(model => {\n            self.table.add(model.get(\"name\"));\n            self.table.add(model.id);\n            self.table.add(\n                model.get(\"count\") !== undefined\n                    ? model.get(\"count\")\n                    : \"Processing...\"\n            );\n            self.table.add(\n                new Ui.ButtonIcon({\n                    icon: \"fa-trash-o\",\n                    cls: \"ui-button-icon-plain\",\n                    tooltip: \"Delete custom build.\",\n                    onclick: function() {\n                        model.destroy();\n                    }\n                }).$el\n            );\n            self.table.append(model.id);\n        });\n    },\n\n    _renderForm: function() {\n        var self = this;\n        var initial_type = \"fasta\";\n        var form = new Form({\n            inputs: [\n                {\n                    type: \"text\",\n                    name: \"name\",\n                    label: \"Name\",\n                    help: \"Specify a build name e.g. Hamster.\"\n                },\n                {\n                    type: \"text\",\n                    name: \"id\",\n                    label: \"Key\",\n                    help: \"Specify a build key e.g. hamster_v1.\"\n                },\n                {\n                    name: \"len\",\n                    type: \"conditional\",\n                    test_param: {\n                        name: \"type\",\n                        label: \"Definition\",\n                        help: \"Provide the data source.\",\n                        type: \"select\",\n                        value: initial_type,\n                        data: [\n                            {\n                                value: \"fasta\",\n                                label: \"FASTA-file from history\"\n                            },\n                            {\n                                value: \"file\",\n                                label: \"Len-file from disk\"\n                            },\n                            {\n                                value: \"text\",\n                                label: \"Len-file by copy/paste\"\n                            }\n                        ]\n                    },\n                    cases: [\n                        {\n                            value: \"fasta\",\n                            inputs: [\n                                {\n                                    type: \"select\",\n                                    name: \"value\",\n                                    label: \"FASTA-file\",\n                                    data: this.model.get(\"fasta_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"file\",\n                            inputs: [\n                                {\n                                    type: \"upload\",\n                                    name: \"value\",\n                                    label: \"Len-file\",\n                                    data: this.model.get(\"len_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"text\",\n                            inputs: [\n                                {\n                                    type: \"text\",\n                                    area: true,\n                                    name: \"value\",\n                                    label: \"Edit/Paste\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ],\n            buttons: {\n                save: new Ui.Button({\n                    icon: \"fa-save\",\n                    tooltip: \"Create new Build\",\n                    title: \"Save\",\n                    cls: \"btn btn-primary ui-clear-float\",\n                    onclick: function() {\n                        var data = form.data.create();\n                        if (!data.id || !data.name) {\n                            self.message.update({\n                                message: \"All inputs are required.\",\n                                status: \"danger\"\n                            });\n                        } else {\n                            self.collection.create(data, {\n                                wait: true,\n                                success: function(response) {\n                                    if (response.get(\"message\")) {\n                                        self.message.update({\n                                            message: response.get(\"message\"),\n                                            status: \"warning\"\n                                        });\n                                    } else {\n                                        self.message.update({\n                                            message:\n                                                \"Successfully added a new custom build.\",\n                                            status: \"success\"\n                                        });\n                                    }\n                                },\n                                error: function(response, err) {\n                                    var message =\n                                        err &&\n                                        err.responseJSON &&\n                                        err.responseJSON.err_msg;\n                                    self.message.update({\n                                        message:\n                                            message ||\n                                            \"Failed to create custom build.\",\n                                        status: \"danger\"\n                                    });\n                                }\n                            });\n                        }\n                    }\n                })\n            },\n            onchange: function() {\n                var input_id = form.data.match(\"len|type\");\n                if (input_id) {\n                    var input_field = form.field_list[input_id];\n                    self._renderHelp(input_field.value());\n                }\n            }\n        });\n        this.$form.empty().append(form.$el);\n        var installed_builds = this.model.get(\"installed_builds\");\n        if (installed_builds && installed_builds.length) {\n            this.$installed.show();\n            this.installed_builds.update(this.model.get(\"installed_builds\"));\n        } else {\n            this.$installed.hide();\n        }\n        this._renderHelp(initial_type);\n    },\n\n    _renderHelp: function(len_type) {\n        this.$help\n            .empty()\n            .addClass(\"alert alert-info\")\n            .html(\n                len_type == \"fasta\"\n                    ? this._templateFasta()\n                    : this._templateLen()\n            );\n    },\n\n    _templateLen: function() {\n        return (\n            \"<h4>Length Format</h4>\" +\n            \"<p>\" +\n            \"The length format is two-column, separated by whitespace, of the form:\" +\n            \"<pre>chrom/contig   length of chrom/contig</pre>\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"For example, the first few entries of <em>mm9.len</em> are as follows:\" +\n            \"<pre>\" +\n            \"chr1    197195432\\n\" +\n            \"chr2    181748087\\n\" +\n            \"chr3    159599783\\n\" +\n            \"chr4    155630120\\n\" +\n            \"chr5    152537259\" +\n            \"</pre>\" +\n            \"</p>\" +\n            \"<p>Trackster uses this information to populate the select box for chrom/contig, and\" +\n            \"to set the maximum basepair of the track browser. You may either upload a .len file\" +\n            \"of this format (Len File option), or directly enter the information into the box \" +\n            \"(Len Entry option).</p>\"\n        );\n    },\n\n    _templateFasta: function() {\n        return (\n            \"<h4>FASTA format</h4>\" +\n            \"<p>\" +\n            \"This is a multi-fasta file from your current history that provides the genome\" +\n            \"sequences for each chromosome/contig in your build.\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"Here is a snippet from an example multi-fasta file:\" +\n            \"<pre>\" +\n            \">chr1\\n\" +\n            \"ATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\\n\\n\" +\n            \">chr2\\n\" +\n            \"GGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\\n\\n\" +\n            \"...\" +\n            \"</pre>\" +\n            \"</p>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}