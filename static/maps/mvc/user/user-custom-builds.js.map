{"version":3,"sources":["mvc/user/user-custom-builds.js"],"names":["Collection","Backbone","extend","comparator","a","b","get","View","initialize","options","self","this","history_id","Galaxy","currHistoryPanel","model","id","Model","url","root","collection","user","_uiMisc2","default","Message","Select","onchange","installed_builds","value","empty_text","table","_uiTable2","cls","selectable","setElement","$","optional","text","$el","$installed","addClass","addHeader","append","listenTo","_renderForm","fetch","message","$form","$help","add","undefined","tooltip","render","_renderTable","initial_type","form","inputs","type","name","label","help","test_param","destroy","cases","data","area","status","wait","success","response","buttons","save","Button","icon","onclick","update","create","len_type","error","err","responseJSON","err_msg","hide","input_id","match","input_field","field_list","_renderHelp","empty","length","show","html","_templateFasta","_templateLen"],"mappings":"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","file":"../../../scripts/mvc/user/user-custom-builds.js","sourcesContent":["/** This class renders the chart configuration form. */\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nimport Table from \"mvc/ui/ui-table\";\nvar Collection = Backbone.Collection.extend({\n    comparator: function(a, b) {\n        a = a.get(\"name\");\n        b = b.get(\"name\");\n        return a > b ? 1 : a < b ? -1 : 0;\n    }\n});\n\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        var history_id =\n            Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model.id;\n        this.model = new Backbone.Model();\n        this.model.url = `${Galaxy.root}api/histories/${history_id}/custom_builds_metadata`;\n        this.collection = new Collection();\n        this.collection.url = `${Galaxy.root}api/users/${Galaxy.user\n            .id}/custom_builds`;\n        this.message = new Ui.Message({});\n        this.installed_builds = new Ui.Select.View({\n            optional: true,\n            onchange: function() {\n                self.installed_builds.value(null);\n            },\n            empty_text: \"List of available builds:\",\n            error_text: \"No system installed builds available.\"\n        });\n        this.table = new Table.View({ cls: \"grid\", selectable: false });\n        this.table.addHeader(\"Name\");\n        this.table.addHeader(\"Key\");\n        this.table.addHeader(\"Number of chroms/contigs\");\n        this.table.addHeader(\"\");\n        this.table.appendHeader();\n        this.setElement(\n            $(\"<div/>\")\n                .append($(\"<h4/>\").text(\"Current Custom Builds\"))\n                .append(this.table.$el)\n                .append(\n                    (this.$installed = $(\"<div/>\")\n                        .append(\n                            $(\"<h4/>\")\n                                .text(\"System Installed Builds\")\n                                .addClass(\"ui-margin-top\")\n                        )\n                        .append(this.installed_builds.$el))\n                )\n                .append(\n                    $(\"<h4/>\")\n                        .text(\"Add a Custom Build\")\n                        .addClass(\"ui-margin-top\")\n                )\n                .append(\n                    $(\"<span/>\")\n                        .addClass(\"ui-column\")\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"ui-column-left\")\n                                .append(this.message.$el)\n                                .append(\n                                    (this.$form = $(\"<div/>\").addClass(\n                                        \"ui-margin-top\"\n                                    ))\n                                )\n                        )\n                        .append(\n                            (this.$help = $(\"<div/>\").addClass(\n                                \"ui-column-right\"\n                            ))\n                        )\n                )\n        );\n        this.listenTo(this.collection, \"add remove reset\", () => {\n            self._renderTable();\n        });\n        this.listenTo(this.model, \"change\", () => {\n            self._renderForm();\n        });\n        this.collection.fetch();\n        this.model.fetch();\n    },\n\n    render: function() {\n        this._renderTable();\n        this._renderForm();\n    },\n\n    _renderTable: function() {\n        var self = this;\n        this.table.delAll();\n        this.collection.sort();\n        this.collection.each(model => {\n            self.table.add(model.get(\"name\"));\n            self.table.add(model.id);\n            self.table.add(\n                model.get(\"count\") !== undefined\n                    ? model.get(\"count\")\n                    : \"Processing...\"\n            );\n            self.table.add(\n                new Ui.ButtonIcon({\n                    icon: \"fa-trash-o\",\n                    cls: \"ui-button-icon-plain\",\n                    tooltip: \"Delete custom build.\",\n                    onclick: function() {\n                        model.destroy();\n                    }\n                }).$el\n            );\n            self.table.append(model.id);\n        });\n    },\n\n    _renderForm: function() {\n        var self = this;\n        var initial_type = \"fasta\";\n        var form = new Form({\n            inputs: [\n                {\n                    type: \"text\",\n                    name: \"name\",\n                    label: \"Name\",\n                    help: \"Specify a build name e.g. Hamster.\"\n                },\n                {\n                    type: \"text\",\n                    name: \"id\",\n                    label: \"Key\",\n                    help: \"Specify a build key e.g. hamster_v1.\"\n                },\n                {\n                    name: \"len\",\n                    type: \"conditional\",\n                    test_param: {\n                        name: \"type\",\n                        label: \"Definition\",\n                        help: \"Provide the data source.\",\n                        type: \"select\",\n                        value: initial_type,\n                        data: [\n                            {\n                                value: \"fasta\",\n                                label: \"FASTA-file from history\"\n                            },\n                            {\n                                value: \"file\",\n                                label: \"Len-file from disk\"\n                            },\n                            {\n                                value: \"text\",\n                                label: \"Len-file by copy/paste\"\n                            }\n                        ]\n                    },\n                    cases: [\n                        {\n                            value: \"fasta\",\n                            inputs: [\n                                {\n                                    type: \"select\",\n                                    name: \"value\",\n                                    label: \"FASTA-file\",\n                                    data: this.model.get(\"fasta_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"file\",\n                            inputs: [\n                                {\n                                    type: \"upload\",\n                                    name: \"value\",\n                                    label: \"Len-file\",\n                                    data: this.model.get(\"len_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"text\",\n                            inputs: [\n                                {\n                                    type: \"text\",\n                                    area: true,\n                                    name: \"value\",\n                                    label: \"Edit/Paste\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ],\n            buttons: {\n                save: new Ui.Button({\n                    icon: \"fa-save\",\n                    tooltip: \"Create new Build\",\n                    title: \"Save\",\n                    cls: \"btn btn-primary ui-clear-float\",\n                    onclick: function() {\n                        var data = form.data.create();\n                        if (!data.id || !data.name) {\n                            self.message.update({\n                                message: \"All inputs are required.\",\n                                status: \"danger\"\n                            });\n                        } else {\n                            self.collection.create(data, {\n                                wait: true,\n                                success: function(response) {\n                                    if (response.get(\"message\")) {\n                                        self.message.update({\n                                            message: response.get(\"message\"),\n                                            status: \"warning\"\n                                        });\n                                    } else {\n                                        self.message.update({\n                                            message:\n                                                \"Successfully added a new custom build.\",\n                                            status: \"success\"\n                                        });\n                                    }\n                                },\n                                error: function(response, err) {\n                                    var message =\n                                        err &&\n                                        err.responseJSON &&\n                                        err.responseJSON.err_msg;\n                                    self.message.update({\n                                        message:\n                                            message ||\n                                            \"Failed to create custom build.\",\n                                        status: \"danger\"\n                                    });\n                                }\n                            });\n                        }\n                    }\n                })\n            },\n            onchange: function() {\n                var input_id = form.data.match(\"len|type\");\n                if (input_id) {\n                    var input_field = form.field_list[input_id];\n                    self._renderHelp(input_field.value());\n                }\n            }\n        });\n        this.$form.empty().append(form.$el);\n        var installed_builds = this.model.get(\"installed_builds\");\n        if (installed_builds && installed_builds.length) {\n            this.$installed.show();\n            this.installed_builds.update(this.model.get(\"installed_builds\"));\n        } else {\n            this.$installed.hide();\n        }\n        this._renderHelp(initial_type);\n    },\n\n    _renderHelp: function(len_type) {\n        this.$help\n            .empty()\n            .addClass(\"alert alert-info\")\n            .html(\n                len_type == \"fasta\"\n                    ? this._templateFasta()\n                    : this._templateLen()\n            );\n    },\n\n    _templateLen: function() {\n        return (\n            \"<h4>Length Format</h4>\" +\n            \"<p>\" +\n            \"The length format is two-column, separated by whitespace, of the form:\" +\n            \"<pre>chrom/contig   length of chrom/contig</pre>\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"For example, the first few entries of <em>mm9.len</em> are as follows:\" +\n            \"<pre>\" +\n            \"chr1    197195432\\n\" +\n            \"chr2    181748087\\n\" +\n            \"chr3    159599783\\n\" +\n            \"chr4    155630120\\n\" +\n            \"chr5    152537259\" +\n            \"</pre>\" +\n            \"</p>\" +\n            \"<p>Trackster uses this information to populate the select box for chrom/contig, and\" +\n            \"to set the maximum basepair of the track browser. You may either upload a .len file\" +\n            \"of this format (Len File option), or directly enter the information into the box \" +\n            \"(Len Entry option).</p>\"\n        );\n    },\n\n    _templateFasta: function() {\n        return (\n            \"<h4>FASTA format</h4>\" +\n            \"<p>\" +\n            \"This is a multi-fasta file from your current history that provides the genome\" +\n            \"sequences for each chromosome/contig in your build.\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"Here is a snippet from an example multi-fasta file:\" +\n            \"<pre>\" +\n            \">chr1\\n\" +\n            \"ATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\\n\\n\" +\n            \">chr2\\n\" +\n            \"GGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\\n\\n\" +\n            \"...\" +\n            \"</pre>\" +\n            \"</p>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}