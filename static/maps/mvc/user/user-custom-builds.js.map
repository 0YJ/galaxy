{"version":3,"sources":["mvc/user/user-custom-builds.js"],"names":["define","Utils","Ui","Form","Table","Collection","Backbone","extend","comparator","a","b","get","View","initialize","options","Galaxy","currHistoryPanel","model","id","this","self","Model","history_id","url","root","collection","optional","onchange","installed_builds","Select","value","table","cls","selectable","empty_text","error_text","addHeader","append","$","text","$el","$installed","addClass","message","$form","$help","listenTo","_renderTable","fetch","_renderForm","render","delAll","each","add","undefined","ButtonIcon","icon","tooltip","onclick","destroy","initial_type","form","inputs","type","name","label","test_param","help","data","area","save","Button","title","update","wait","create","success","response","status","error","err","responseJSON","err_msg","input_id","match","input_field","_renderHelp","length","hide","empty","html","len_type","_templateFasta","_templateLen"],"mappings":"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","file":"../../../scripts/mvc/user/user-custom-builds.js","sourcesContent":["/** This class renders the chart configuration form. */\ndefine( [ 'utils/utils', 'mvc/ui/ui-misc', 'mvc/form/form-view', 'mvc/ui/ui-table' ], function( Utils, Ui, Form, Table ) {\n    var Collection = Backbone.Collection.extend({\n        comparator: function( a, b ) {\n            a = a.get( 'name' );\n            b = b.get( 'name' );\n            return a > b ?  1 : a < b ? -1 : 0;\n        }\n    });\n\n    var View = Backbone.View.extend({\n        initialize: function( options ) {\n            var self = this;\n            var history_id = Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model.id;\n            this.model = new Backbone.Model();\n            this.model.url = Galaxy.root + 'api/histories/' + history_id + '/custom_builds_metadata';\n            this.collection = new Collection();\n            this.collection.url = Galaxy.root + 'api/users/' + Galaxy.user.id + '/custom_builds';\n            this.message = new Ui.Message({});\n            this.installed_builds = new Ui.Select.View({\n                optional    : true,\n                onchange    : function() { self.installed_builds.value( null ) },\n                empty_text  : 'List of available builds:',\n                error_text  : 'No system installed builds available.'\n            });\n            this.table = new Table.View( { cls: 'grid', selectable: false } );\n            this.table.addHeader( 'Name' );\n            this.table.addHeader( 'Key' );\n            this.table.addHeader( 'Number of chroms/contigs' );\n            this.table.addHeader( '' );\n            this.table.appendHeader();\n            this.setElement( $( '<div/>' ).append( $( '<h4/>' ).text( 'Current Custom Builds' ) )\n                                          .append( this.table.$el )\n                                          .append( this.$installed = $( '<div/>' ).append( $( '<h4/>' ).text( 'System Installed Builds' ).addClass( 'ui-margin-top' ) )\n                                                                                  .append( this.installed_builds.$el ) )\n                                          .append( $( '<h4/>' ).text( 'Add a Custom Build' ).addClass( 'ui-margin-top' ) )\n                                          .append( $( '<span/>').addClass( 'ui-column' )\n                                                                .append( $( '<div/>' ).addClass( 'ui-column-left' )\n                                                                                      .append( this.message.$el )\n                                                                                      .append( this.$form = $( '<div/>' ).addClass( 'ui-margin-top' ) ) )\n                                                                .append( this.$help = $( '<div/>' ).addClass( 'ui-column-right' ) ) ) );\n            this.listenTo( this.collection, 'add remove reset', function() { self._renderTable() } );\n            this.listenTo( this.model, 'change', function() { self._renderForm() } );\n            this.collection.fetch();\n            this.model.fetch();\n        },\n\n        render: function() {\n            this._renderTable();\n            this._renderForm();\n        },\n\n        _renderTable: function() {\n            var self = this;\n            this.table.delAll();\n            this.collection.sort();\n            this.collection.each( function( model ) {\n                self.table.add( model.id );\n                self.table.add( model.get( 'name' ) );\n                self.table.add( model.get( 'count' ) !== undefined ? model.get( 'count' ) : 'Processing...' );\n                self.table.add( ( new Ui.ButtonIcon({\n                    icon    : 'fa-trash-o',\n                    cls     : 'ui-button-icon-plain',\n                    tooltip : 'Delete custom build.',\n                    onclick : function() { model.destroy() }\n                } ) ).$el );\n                self.table.append( model.id );\n            });\n        },\n\n        _renderForm: function() {\n            var self = this;\n            var initial_type = 'fasta';\n            var form = new Form({\n                inputs  : [{\n                    type    : 'text',\n                    name    : 'name',\n                    label   : 'Name',\n                    help    : 'Specify a build name e.g. Hamster.'\n                },{\n                    type    : 'text',\n                    name    : 'id',\n                    label   : 'Key',\n                    help    : 'Specify a build key e.g. hamster_v1.'\n                },{\n                    name        : 'len',\n                    type        : 'conditional',\n                    test_param  : {\n                        name    : 'type',\n                        label   : 'Definition',\n                        help    : 'Provide the data source.',\n                        type    : 'select',\n                        value   : initial_type,\n                        data    : [ { value : 'fasta',  label : 'FASTA-file from history' },\n                                    { value : 'file',   label : 'Len-file from disk' },\n                                    { value : 'text',   label : 'Len-file by copy/paste' } ]\n                    },\n                    cases       : [ {\n                        value   : 'fasta',\n                        inputs  : [ {\n                            type   : 'select',\n                            name   : 'value',\n                            label  : 'FASTA-file',\n                            data   : this.model.get( 'fasta_hdas' )\n                        } ]\n                    },{\n                        value   : 'file',\n                        inputs  : [ {\n                            type   : 'upload',\n                            name   : 'value',\n                            label  : 'Len-file',\n                            data   : this.model.get( 'len_hdas' )\n                        } ]\n                    },{\n                        value   : 'text',\n                        inputs  : [ {\n                            type   : 'text',\n                            area   : true,\n                            name   : 'value',\n                            label  : 'Edit/Paste'\n                        } ]\n                    } ]\n                }],\n                buttons : {\n                    save    : new Ui.Button({\n                        icon     : 'fa-save',\n                        tooltip  : 'Create new Build',\n                        title    : 'Save',\n                        cls      : 'btn btn-primary ui-clear-float',\n                        onclick  : function() {\n                            var data = form.data.create();\n                            if ( !data.id || !data.name ) {\n                                self.message.update( { message: 'All inputs are required.', status: 'danger' } );\n                            } else {\n                                self.collection.create( data, {\n                                    wait    : true,\n                                    success : function( response ) {\n                                        if ( response.get( 'message' ) ) {\n                                            self.message.update( { message: response.get( 'message' ), status: 'warning' } );\n                                        } else {\n                                            self.message.update( { message: 'Successfully added a new custom build.', status: 'success' } );\n                                        }\n                                    },\n                                    error   : function( response, err ) {\n                                        var message = err && err.responseJSON && err.responseJSON.err_msg;\n                                        self.message.update( { message: message || 'Failed to create custom build.', status: 'danger' } );\n                                    }\n                                });\n                            }\n                        }\n                    })\n                },\n                onchange: function() {\n                    var input_id = form.data.match( 'len|type' );\n                    if ( input_id ) {\n                        var input_field = form.field_list[ input_id ];\n                        self._renderHelp( input_field.value() );\n                    }\n                }\n            });\n            this.$form.empty().append( form.$el );\n            var installed_builds = this.model.get( 'installed_builds' );\n            if ( installed_builds && installed_builds.length ) {\n                this.$installed.show();\n                this.installed_builds.update( this.model.get( 'installed_builds' ) );\n            } else {\n                this.$installed.hide();\n            }\n            this._renderHelp( initial_type );\n        },\n\n        _renderHelp: function( len_type ) {\n            this.$help.empty()\n                      .addClass( 'alert alert-info' )\n                      .html( len_type == 'fasta' ? this._templateFasta() : this._templateLen() );\n        },\n\n        _templateLen: function() {\n            return  '<h4>Length Format</h4>' +\n                    '<p>' +\n                        'The length format is two-column, separated by whitespace, of the form:' +\n                        '<pre>chrom/contig   length of chrom/contig</pre>' +\n                    '</p>' +\n                    '<p>' +\n                        'For example, the first few entries of <em>mm9.len</em> are as follows:' +\n                        '<pre>' +\n                            'chr1    197195432\\n' +\n                            'chr2    181748087\\n' +\n                            'chr3    159599783\\n' +\n                            'chr4    155630120\\n' +\n                            'chr5    152537259' +\n                        '</pre>' +\n                    '</p>' +\n                    '<p>Trackster uses this information to populate the select box for chrom/contig, and' +\n                    'to set the maximum basepair of the track browser. You may either upload a .len file' +\n                    'of this format (Len File option), or directly enter the information into the box ' +\n                    '(Len Entry option).</p>';\n        },\n\n        _templateFasta: function() {\n            return  '<h4>FASTA format</h4>' +\n                    '<p>' +\n                        'This is a multi-fasta file from your current history that provides the genome' +\n                        'sequences for each chromosome/contig in your build.' +\n                    '</p>' +\n                    '<p>' +\n                        'Here is a snippet from an example multi-fasta file:' +\n                        '<pre>' +\n                            '>chr1\\n' +\n                            'ATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\\n\\n' +\n                            '>chr2\\n' +\n                            'GGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\\n\\n' +\n                            '...' +\n                        '</pre>' +\n                    '</p>';\n        }\n    });\n\n    return {\n        View: View\n    }\n});"]}