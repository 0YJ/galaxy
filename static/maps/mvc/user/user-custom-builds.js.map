{"version":3,"sources":["mvc/user/user-custom-builds.js"],"names":["_utils","require","_uiMisc","_formView","_uiTable","Collection","Backbone","extend","comparator","a","b","get","View","initialize","options","self","this","history_id","Galaxy","currHistoryPanel","model","id","Model","url","root","collection","user","_uiMisc2","default","Message","Select","optional","onchange","installed_builds","value","selectable","addHeader","message","$","text","append","empty_text","$installed","addClass","$el","table","setElement","_renderTable","listenTo","_renderForm","fetch","$form","$help","icon","tooltip","onclick","render","form","inputs","type","name","sort","label","each","help","add","undefined","ButtonIcon","test_param","destroy","data","_formView2","area","wait","success","response","update","error","buttons","save","Button","empty","create","hide","status","err","responseJSON","err_msg","initial_type","input_id","match","input_field","field_list","_renderHelp","length","show","len_type","html","_templateFasta","_templateLen"],"mappings":"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","file":"../../../scripts/mvc/user/user-custom-builds.js","sourcesContent":["/** This class renders the chart configuration form. */\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nimport Table from \"mvc/ui/ui-table\";\nvar Collection = Backbone.Collection.extend({\n    comparator: function(a, b) {\n        a = a.get(\"name\");\n        b = b.get(\"name\");\n        return a > b ? 1 : a < b ? -1 : 0;\n    }\n});\n\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        var history_id =\n            Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model.id;\n        this.model = new Backbone.Model();\n        this.model.url =\n            Galaxy.root +\n            \"api/histories/\" +\n            history_id +\n            \"/custom_builds_metadata\";\n        this.collection = new Collection();\n        this.collection.url =\n            Galaxy.root + \"api/users/\" + Galaxy.user.id + \"/custom_builds\";\n        this.message = new Ui.Message({});\n        this.installed_builds = new Ui.Select.View({\n            optional: true,\n            onchange: function() {\n                self.installed_builds.value(null);\n            },\n            empty_text: \"List of available builds:\",\n            error_text: \"No system installed builds available.\"\n        });\n        this.table = new Table.View({ cls: \"grid\", selectable: false });\n        this.table.addHeader(\"Name\");\n        this.table.addHeader(\"Key\");\n        this.table.addHeader(\"Number of chroms/contigs\");\n        this.table.addHeader(\"\");\n        this.table.appendHeader();\n        this.setElement(\n            $(\"<div/>\")\n                .append($(\"<h4/>\").text(\"Current Custom Builds\"))\n                .append(this.table.$el)\n                .append(\n                    (this.$installed = $(\"<div/>\")\n                        .append(\n                            $(\"<h4/>\")\n                                .text(\"System Installed Builds\")\n                                .addClass(\"ui-margin-top\")\n                        )\n                        .append(this.installed_builds.$el))\n                )\n                .append(\n                    $(\"<h4/>\")\n                        .text(\"Add a Custom Build\")\n                        .addClass(\"ui-margin-top\")\n                )\n                .append(\n                    $(\"<span/>\")\n                        .addClass(\"ui-column\")\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"ui-column-left\")\n                                .append(this.message.$el)\n                                .append(\n                                    (this.$form = $(\"<div/>\").addClass(\n                                        \"ui-margin-top\"\n                                    ))\n                                )\n                        )\n                        .append(\n                            (this.$help = $(\"<div/>\").addClass(\n                                \"ui-column-right\"\n                            ))\n                        )\n                )\n        );\n        this.listenTo(this.collection, \"add remove reset\", function() {\n            self._renderTable();\n        });\n        this.listenTo(this.model, \"change\", function() {\n            self._renderForm();\n        });\n        this.collection.fetch();\n        this.model.fetch();\n    },\n\n    render: function() {\n        this._renderTable();\n        this._renderForm();\n    },\n\n    _renderTable: function() {\n        var self = this;\n        this.table.delAll();\n        this.collection.sort();\n        this.collection.each(function(model) {\n            self.table.add(model.get(\"name\"));\n            self.table.add(model.id);\n            self.table.add(\n                model.get(\"count\") !== undefined\n                    ? model.get(\"count\")\n                    : \"Processing...\"\n            );\n            self.table.add(\n                new Ui.ButtonIcon({\n                    icon: \"fa-trash-o\",\n                    cls: \"ui-button-icon-plain\",\n                    tooltip: \"Delete custom build.\",\n                    onclick: function() {\n                        model.destroy();\n                    }\n                }).$el\n            );\n            self.table.append(model.id);\n        });\n    },\n\n    _renderForm: function() {\n        var self = this;\n        var initial_type = \"fasta\";\n        var form = new Form({\n            inputs: [\n                {\n                    type: \"text\",\n                    name: \"name\",\n                    label: \"Name\",\n                    help: \"Specify a build name e.g. Hamster.\"\n                },\n                {\n                    type: \"text\",\n                    name: \"id\",\n                    label: \"Key\",\n                    help: \"Specify a build key e.g. hamster_v1.\"\n                },\n                {\n                    name: \"len\",\n                    type: \"conditional\",\n                    test_param: {\n                        name: \"type\",\n                        label: \"Definition\",\n                        help: \"Provide the data source.\",\n                        type: \"select\",\n                        value: initial_type,\n                        data: [\n                            {\n                                value: \"fasta\",\n                                label: \"FASTA-file from history\"\n                            },\n                            {\n                                value: \"file\",\n                                label: \"Len-file from disk\"\n                            },\n                            {\n                                value: \"text\",\n                                label: \"Len-file by copy/paste\"\n                            }\n                        ]\n                    },\n                    cases: [\n                        {\n                            value: \"fasta\",\n                            inputs: [\n                                {\n                                    type: \"select\",\n                                    name: \"value\",\n                                    label: \"FASTA-file\",\n                                    data: this.model.get(\"fasta_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"file\",\n                            inputs: [\n                                {\n                                    type: \"upload\",\n                                    name: \"value\",\n                                    label: \"Len-file\",\n                                    data: this.model.get(\"len_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"text\",\n                            inputs: [\n                                {\n                                    type: \"text\",\n                                    area: true,\n                                    name: \"value\",\n                                    label: \"Edit/Paste\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ],\n            buttons: {\n                save: new Ui.Button({\n                    icon: \"fa-save\",\n                    tooltip: \"Create new Build\",\n                    title: \"Save\",\n                    cls: \"btn btn-primary ui-clear-float\",\n                    onclick: function() {\n                        var data = form.data.create();\n                        if (!data.id || !data.name) {\n                            self.message.update({\n                                message: \"All inputs are required.\",\n                                status: \"danger\"\n                            });\n                        } else {\n                            self.collection.create(data, {\n                                wait: true,\n                                success: function(response) {\n                                    if (response.get(\"message\")) {\n                                        self.message.update({\n                                            message: response.get(\"message\"),\n                                            status: \"warning\"\n                                        });\n                                    } else {\n                                        self.message.update({\n                                            message:\n                                                \"Successfully added a new custom build.\",\n                                            status: \"success\"\n                                        });\n                                    }\n                                },\n                                error: function(response, err) {\n                                    var message =\n                                        err &&\n                                        err.responseJSON &&\n                                        err.responseJSON.err_msg;\n                                    self.message.update({\n                                        message:\n                                            message ||\n                                            \"Failed to create custom build.\",\n                                        status: \"danger\"\n                                    });\n                                }\n                            });\n                        }\n                    }\n                })\n            },\n            onchange: function() {\n                var input_id = form.data.match(\"len|type\");\n                if (input_id) {\n                    var input_field = form.field_list[input_id];\n                    self._renderHelp(input_field.value());\n                }\n            }\n        });\n        this.$form.empty().append(form.$el);\n        var installed_builds = this.model.get(\"installed_builds\");\n        if (installed_builds && installed_builds.length) {\n            this.$installed.show();\n            this.installed_builds.update(this.model.get(\"installed_builds\"));\n        } else {\n            this.$installed.hide();\n        }\n        this._renderHelp(initial_type);\n    },\n\n    _renderHelp: function(len_type) {\n        this.$help\n            .empty()\n            .addClass(\"alert alert-info\")\n            .html(\n                len_type == \"fasta\"\n                    ? this._templateFasta()\n                    : this._templateLen()\n            );\n    },\n\n    _templateLen: function() {\n        return (\n            \"<h4>Length Format</h4>\" +\n            \"<p>\" +\n            \"The length format is two-column, separated by whitespace, of the form:\" +\n            \"<pre>chrom/contig   length of chrom/contig</pre>\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"For example, the first few entries of <em>mm9.len</em> are as follows:\" +\n            \"<pre>\" +\n            \"chr1    197195432\\n\" +\n            \"chr2    181748087\\n\" +\n            \"chr3    159599783\\n\" +\n            \"chr4    155630120\\n\" +\n            \"chr5    152537259\" +\n            \"</pre>\" +\n            \"</p>\" +\n            \"<p>Trackster uses this information to populate the select box for chrom/contig, and\" +\n            \"to set the maximum basepair of the track browser. You may either upload a .len file\" +\n            \"of this format (Len File option), or directly enter the information into the box \" +\n            \"(Len Entry option).</p>\"\n        );\n    },\n\n    _templateFasta: function() {\n        return (\n            \"<h4>FASTA format</h4>\" +\n            \"<p>\" +\n            \"This is a multi-fasta file from your current history that provides the genome\" +\n            \"sequences for each chromosome/contig in your build.\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"Here is a snippet from an example multi-fasta file:\" +\n            \"<pre>\" +\n            \">chr1\\n\" +\n            \"ATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\\n\\n\" +\n            \">chr2\\n\" +\n            \"GGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\\n\\n\" +\n            \"...\" +\n            \"</pre>\" +\n            \"</p>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}