{"version":3,"sources":["mvc/user/user-preferences.js"],"names":["Model","Backbone","extend","initialize","options","user_id","Galaxy","user","id","this","set","information","title","description","url","icon","redirect","password","submit_title","communication","permissions","api_key","submit_icon","toolbox_filters","href","root","openids","location","logout","custom_builds","modal","show","onclick","window","buttons","Cancel","hide","Sign out","session_csrf_token","View","model","setElement","render","self","config","data","$","append","_","escape","email","message","addClass","get","$preferences","prepend","status","use_remote_user","_addLink","$el","_templateFooter","empty","action","$a","$row","find","attr","$table","enable_quotas","nice_total_disk_usage"],"mappings":"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","file":"../../../scripts/mvc/user/user-preferences.js","sourcesContent":["/** User Preferences view */\nimport Form from \"mvc/form/form-view\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\n/** Contains descriptive dictionaries describing user forms */\nvar Model = Backbone.Model.extend({\n    initialize: function(options) {\n        options = options || {};\n        options.user_id = options.user_id || Galaxy.user.id;\n        this.set({\n            user_id: options.user_id,\n            information: {\n                title: \"Manage information\",\n                description:\n                    \"Edit your email, addresses and custom parameters or change your username.\",\n                url: `api/users/${options.user_id}/information/inputs`,\n                icon: \"fa-user\",\n                redirect: \"user\"\n            },\n            password: {\n                title: \"Change password\",\n                description: \"Allows you to change your login credentials.\",\n                icon: \"fa-unlock-alt\",\n                url: `api/users/${options.user_id}/password/inputs`,\n                submit_title: \"Save password\",\n                redirect: \"user\"\n            },\n            communication: {\n                title: \"Change communication settings\",\n                description:\n                    \"Enable or disable the communication feature to chat with other users.\",\n                url: `api/users/${options.user_id}/communication/inputs`,\n                icon: \"fa-comments-o\",\n                redirect: \"user\"\n            },\n            permissions: {\n                title: \"Set dataset permissions for new histories\",\n                description:\n                    \"Grant others default access to newly created histories. Changes made here will only affect histories created after these settings have been stored.\",\n                url: `api/users/${options.user_id}/permissions/inputs`,\n                icon: \"fa-users\",\n                submit_title: \"Save permissions\",\n                redirect: \"user\"\n            },\n            api_key: {\n                title: \"Manage API key\",\n                description: \"Access your current API key or create a new one.\",\n                url: `api/users/${options.user_id}/api_key/inputs`,\n                icon: \"fa-key\",\n                submit_title: \"Create a new key\",\n                submit_icon: \"fa-check\"\n            },\n            toolbox_filters: {\n                title: \"Manage Toolbox filters\",\n                description:\n                    \"Customize your Toolbox by displaying or omitting sets of Tools.\",\n                url: `api/users/${options.user_id}/toolbox_filters/inputs`,\n                icon: \"fa-filter\",\n                submit_title: \"Save filters\",\n                redirect: \"user\"\n            },\n            openids: {\n                title: \"Manage OpenIDs\",\n                description: \"Associate OpenIDs with your account.\",\n                icon: \"fa-openid\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}user/openid_manage?cntrller=user&use_panels=True`;\n                }\n            },\n            custom_builds: {\n                title: \"Manage custom builds\",\n                description:\n                    \"Add or remove custom builds using history datasets.\",\n                icon: \"fa-cubes\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}custom_builds`;\n                }\n            },\n            logout: {\n                title: \"Sign out\",\n                description: \"Click here to sign out of all sessions.\",\n                icon: \"fa-sign-out\",\n                onclick: function() {\n                    Galaxy.modal.show({\n                        title: \"Sign out\",\n                        body:\n                            \"Do you want to continue and sign out of all active sessions?\",\n                        buttons: {\n                            Cancel: function() {\n                                Galaxy.modal.hide();\n                            },\n                            \"Sign out\": function() {\n                                window.location.href = `${Galaxy.root}user/logout?session_csrf_token=${Galaxy.session_csrf_token}`;\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n});\n\n/** View of the main user preference panel with links to individual user forms */\nvar View = Backbone.View.extend({\n    title: \"User Preferences\",\n    initialize: function() {\n        this.model = new Model();\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var config = Galaxy.config;\n        $.getJSON(`${Galaxy.root}api/users/${Galaxy.user.id}`, data => {\n            self.$preferences = $(\"<div/>\")\n                .addClass(\"ui-panel\")\n                .append($(\"<h2/>\").append(\"User preferences\"))\n                .append(\n                    $(\"<p/>\").append(\n                        `You are logged in as <strong>${_.escape(\n                            data.email\n                        )}</strong>.`\n                    )\n                )\n                .append(\n                    (self.$table = $(\"<table/>\").addClass(\"ui-panel-table\"))\n                );\n            var message = QueryStringParsing.get(\"message\");\n            var status = QueryStringParsing.get(\"status\");\n            if (message && status) {\n                self.$preferences.prepend(\n                    new Ui.Message({ message: message, status: status }).$el\n                );\n            }\n            if (!config.use_remote_user) {\n                self._addLink(\"information\");\n                self._addLink(\"password\");\n            }\n            if (config.enable_communication_server) {\n                self._addLink(\"communication\");\n            }\n            self._addLink(\"custom_builds\");\n            self._addLink(\"permissions\");\n            self._addLink(\"api_key\");\n            if (config.has_user_tool_filters) {\n                self._addLink(\"toolbox_filters\");\n            }\n            if (config.enable_openid && !config.use_remote_user) {\n                self._addLink(\"openids\");\n            }\n            if (Galaxy.session_csrf_token) {\n                self._addLink(\"logout\");\n            }\n            self.$preferences.append(self._templateFooter(data));\n            self.$el.empty().append(self.$preferences);\n        });\n    },\n\n    _addLink: function(action) {\n        var options = this.model.get(action);\n        var $row = $(this._templateLink(options));\n        var $a = $row.find(\"a\");\n        if (options.onclick) {\n            $a.on(\"click\", () => {\n                options.onclick();\n            });\n        } else {\n            $a.attr(\"href\", `${Galaxy.root}user/${action}`);\n        }\n        this.$table.append($row);\n    },\n\n    _templateLink: function(options) {\n        return `<tr><td><div class=\"ui-panel-icon fa ${options.icon}\"></td><td><a class=\"ui-panel-anchor\" href=\"javascript:void(0)\">${options.title}</a><div class=\"ui-form-info\">${options.description}</div></td></tr>`;\n    },\n\n    _templateFooter: function(options) {\n        return `<p class=\"ui-panel-footer\">You are using <strong>${options.nice_total_disk_usage}</strong> of disk space in this Galaxy instance. ${Galaxy\n            .config.enable_quotas\n            ? `Your disk quota is: <strong>${options.quota}</strong>. `\n            : \"\"}Is your usage more than expected? See the <a href=\"https://galaxyproject.org/learn/managing-datasets/\" target=\"_blank\">documentation</a> for tips on how to find all of the data in your account.</p>`;\n    }\n});\n\nexport default {\n    View: View,\n    Model: Model\n};\n"]}