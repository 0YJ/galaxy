{"version":3,"sources":["mvc/user/user-preferences.js"],"names":["define","Form","Ui","Model","Backbone","extend","initialize","options","user_id","Galaxy","user","id","this","set","information","title","description","url","icon","password","submit_title","communication","permissions","api_key","submit_icon","toolbox_filters","openids","onclick","window","location","href","root","logout","modal","show","body","buttons","Cancel","hide","Sign out","View","model","message","Message","setElement","render","self","config","$","getJSON","data","$preferences","addClass","append","$el","_","escape","email","$table","use_remote_user","_addLink","enable_communication_server","has_user_tool_filters","enable_openid","_templateFooter","empty","action","get","$row","_templateLink","$a","find","on","attr","nice_total_disk_usage","enable_quotas","quota","Forms","page","form_id","ajax","type","done","response","form","inputs","operations","submit","ButtonIcon","tooltip","submit_tooltip","_submit","fail","status","persistent","JSON","stringify","create","contentType","updated_values","matchModel","input","input_id","field_list","value","update","console","log","responseJSON","err_msg"],"mappings":"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","file":"../../../scripts/mvc/user/user-preferences.js","sourcesContent":["/** User Preferences view */\ndefine( [ 'mvc/form/form-view', 'mvc/ui/ui-misc' ], function( Form, Ui ) {\n\n    /** Contains descriptive dictionaries describing user forms */\n    var Model = Backbone.Model.extend({\n        initialize: function( options ) {\n            options = options || {};\n            options.user_id = options.user_id || Galaxy.user.id;\n            this.set({\n                'user_id'           : options.user_id,\n                'information': {\n                    title           : 'Manage information',\n                    description     : 'Edit your email, addresses and custom parameters or change your username.',\n                    url             : 'api/users/' + options.user_id + '/information/inputs',\n                    icon            : 'fa-user'\n                },\n                'password': {\n                    title           : 'Change password',\n                    description     : 'Allows you to change your login credentials.',\n                    icon            : 'fa-unlock-alt',\n                    url             : 'api/users/' + options.user_id + '/password/inputs',\n                    submit_title    : 'Save password',\n                },\n                'communication': {\n                    title           : 'Change communication settings',\n                    description     : 'Enable or disable the communication feature to chat with other users.',\n                    url             : 'api/users/' + options.user_id + '/communication/inputs',\n                    icon            : 'fa-comments-o'\n                },\n                'permissions': {\n                    title           : 'Set dataset permissions for new histories',\n                    description     : 'Grant others default access to newly created histories. Changes made here will only affect histories created after these settings have been stored.',\n                    url             : 'api/users/' + options.user_id + '/permissions/inputs',\n                    icon            : 'fa-users',\n                    submit_title    : 'Save permissions'\n                },\n                'api_key': {\n                    title           : 'Manage API key',\n                    description     : 'Access your current API key or create a new one.',\n                    url             : 'api/users/' + options.user_id + '/api_key/inputs',\n                    icon            : 'fa-key',\n                    submit_title    : 'Create a new key',\n                    submit_icon     : 'fa-check'\n                },\n                'toolbox_filters': {\n                    title           : 'Manage Toolbox filters',\n                    description     : 'Customize your Toolbox by displaying or omitting sets of Tools.',\n                    url             : 'api/users/' + options.user_id + '/toolbox_filters/inputs',\n                    icon            : 'fa-filter',\n                    submit_title    : 'Save filters'\n                },\n                'openids': {\n                    title           : 'Manage OpenIDs',\n                    description     : 'Associate OpenIDs with your account.',\n                    icon            : 'fa-openid',\n                    onclick         : function() {\n                        window.location.href = Galaxy.root + 'user/openid_manage?cntrller=user&use_panels=True';\n                    }\n                },\n                'logout': {\n                    title           : 'Sign out',\n                    description     : 'Click here to sign out of all sessions.',\n                    icon            : 'fa-sign-out',\n                    onclick         : function() {\n                        Galaxy.modal.show({\n                            title   : 'Sign out',\n                            body    : 'Do you want to continue and sign out of all active sessions?',\n                            buttons : {\n                                'Cancel'    : function() { Galaxy.modal.hide(); },\n                                'Sign out'  : function() { window.location.href = Galaxy.root + 'user/logout'; }\n                            }\n                        });\n                    }\n                }\n            });\n        }\n    });\n\n    /** View of the main user preference panel with links to individual user forms */\n    var View = Backbone.View.extend({\n\n        initialize: function() {\n            this.model = new Model();\n            this.message = new Ui.Message();\n            this.setElement( '<div/>' );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var config = Galaxy.config;\n            $.getJSON( Galaxy.root + 'api/users/' + Galaxy.user.id, function( data ) {\n                self.$preferences = $( '<div/>' ).addClass( 'ui-panel' )\n                                                 .append( self.message.$el )\n                                                 .append( $( '<h2/>' ).append( 'User preferences' ) )\n                                                 .append( $( '<p/>' ).append( 'You are logged in as <strong>' +  _.escape( data.email ) + '</strong>.' ) )\n                                                 .append( self.$table = $( '<table/>' ).addClass( 'ui-panel-table' ) );\n                if( !config.use_remote_user ) {\n                    self._addLink( 'information' );\n                    self._addLink( 'password' );\n                }\n                if( config.enable_communication_server ) {\n                    self._addLink( 'communication' );\n                }\n                self._addLink( 'permissions' );\n                self._addLink( 'api_key' );\n                if( config.has_user_tool_filters ) {\n                    self._addLink( 'toolbox_filters' );\n                }\n                if( config.enable_openid && !config.use_remote_user ) {\n                    self._addLink( 'openids' );\n                }\n                self._addLink( 'logout' );\n                self.$preferences.append( self._templateFooter( data ) );\n                self.$el.empty().append( self.$preferences );\n            });\n        },\n\n        _addLink: function( action ) {\n            var options = this.model.get( action );\n            var $row =   $( this._templateLink( options ) );\n            var $a = $row.find( 'a' );\n            if ( options.onclick ) {\n                $a.on( 'click', function() { options.onclick() } );\n            } else {\n                $a.attr( 'href', Galaxy.root + 'user/' + action );\n            }\n            this.$table.append( $row );\n        },\n\n        _templateLink: function( options ) {\n            return  '<tr>' +\n                        '<td>' +\n                            '<div class=\"ui-panel-icon fa ' + options.icon + '\">' +\n                        '</td>' +\n                        '<td>' +\n                            '<a class=\"ui-panel-anchor\" href=\"javascript:void(0)\">' + options.title + '</a>' +\n                            '<div class=\"ui-form-info\">' + options.description + '</div>' +\n                        '</td>' +\n                    '</tr>';\n        },\n\n        _templateFooter: function( options ) {\n            return  '<p class=\"ui-panel-footer\">' +\n                        'You are using <strong>' + options.nice_total_disk_usage + '</strong> of disk space in this Galaxy instance. ' +\n                        ( Galaxy.config.enable_quotas ? 'Your disk quota is: <strong>' + options.quota + '</strong>. ' : '' ) +\n                        'Is your usage more than expected? See the <a href=\"https://wiki.galaxyproject.org/Learn/ManagingDatasets\" target=\"_blank\">documentation</a> for tips on how to find all of the data in your account.' +\n                    '</p>';\n        }\n    });\n\n    /** View of individual user forms */\n    var Forms = Backbone.View.extend({\n\n        initialize: function( options ) {\n            this.model = new Model( options );\n            this.page = this.model.get( options.form_id );\n            this.setElement( '<div/>' );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            $.ajax({\n                url     : Galaxy.root + this.page.url,\n                type    : 'GET'\n            }).done( function( response ) {\n                var options = $.extend( {}, self.page, response );\n                var form = new Form({\n                    title  : options.title,\n                    icon   : options.icon,\n                    inputs : options.inputs,\n                    operations: {\n                        'submit': new Ui.ButtonIcon({\n                            tooltip  : options.submit_tooltip,\n                            title    : options.submit_title || 'Save settings',\n                            icon     : options.submit_icon || 'fa-save',\n                            onclick  : function() { self._submit( form, options ) }\n                        })\n                    }\n                });\n                self.$el.empty().append( form.$el );\n            }).fail( function( response ) {\n                self.$el.empty().append( new Ui.Message({\n                    message     : 'Failed to load resource ' + self.page.url + '.',\n                    status      : 'danger',\n                    persistent  : true\n                }).$el );\n            });\n        },\n\n        _submit: function( form, options ) {\n            var self = this;\n            $.ajax( {\n                url         : Galaxy.root + options.url,\n                data        : JSON.stringify( form.data.create() ),\n                type        : 'PUT',\n                contentType : 'application/json'\n            }).done( function( response ) {\n                var updated_values = false;\n                form.data.matchModel( response, function ( input, input_id ) {\n                    form.field_list[ input_id ].value( input.value );\n                    updated_values = true;\n                });\n                form.message.update( { message: response.message, status: 'success' } );\n            }).fail( function( response ) {\n                window.console.log( response );\n                form.message.update( { message: response.responseJSON.err_msg, status: 'danger' } );\n            });\n        }\n    });\n\n    return {\n        View  : View,\n        Forms : Forms\n    };\n});\n"]}