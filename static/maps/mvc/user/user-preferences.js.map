{"version":3,"sources":["mvc/user/user-preferences.js"],"names":["define","Form","Ui","Model","Backbone","extend","initialize","options","user_id","Galaxy","user","id","information","title","description","icon","submit_title","url","submit_icon","location","href","root","custom_builds","configure_menu","logout","modal","show","onclick","body","hide","buttons","window","View","this","model","message","Message","setElement","render","self","config","$","getJSON","data","$preferences","addClass","append","$el","_","escape","email","$table","use_remote_user","_addLink","_templateFooter","action","get","_templateLink","find","$row","$a","on","nice_total_disk_usage","enable_quotas","quota","Forms","ajax","page","form_id","type","done","inputs","operations","tooltip","response","_submit","submit","ButtonIcon","submit_tooltip","empty","form","fail","status","contentType","field_list","input_id","input","JSON","stringify","create","update","matchModel","value","responseJSON","err_msg"],"mappings":"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","file":"../../../scripts/mvc/user/user-preferences.js","sourcesContent":["/** User Preferences view */\ndefine( [ 'mvc/form/form-view', 'mvc/ui/ui-misc' ], function( Form, Ui ) {\n\n    /** Contains descriptive dictionaries describing user forms */\n    var Model = Backbone.Model.extend({\n        initialize: function( options ) {\n            options = options || {};\n            options.user_id = options.user_id || Galaxy.user.id;\n            this.set({\n                'user_id'           : options.user_id,\n                'information': {\n                    title           : 'Manage information',\n                    description     : 'Edit your email, addresses and custom parameters or change your username.',\n                    url             : 'api/users/' + options.user_id + '/information/inputs',\n                    icon            : 'fa-user'\n                },\n                'password': {\n                    title           : 'Change password',\n                    description     : 'Allows you to change your login credentials.',\n                    icon            : 'fa-unlock-alt',\n                    url             : 'api/users/' + options.user_id + '/password/inputs',\n                    submit_title    : 'Save password',\n                },\n                'communication': {\n                    title           : 'Change communication settings',\n                    description     : 'Enable or disable the communication feature to chat with other users.',\n                    url             : 'api/users/' + options.user_id + '/communication/inputs',\n                    icon            : 'fa-comments-o'\n                },\n                'permissions': {\n                    title           : 'Set dataset permissions for new histories',\n                    description     : 'Grant others default access to newly created histories. Changes made here will only affect histories created after these settings have been stored.',\n                    url             : 'api/users/' + options.user_id + '/permissions/inputs',\n                    icon            : 'fa-users',\n                    submit_title    : 'Save permissions'\n                },\n                'api_key': {\n                    title           : 'Manage API key',\n                    description     : 'Access your current API key or create a new one.',\n                    url             : 'api/users/' + options.user_id + '/api_key/inputs',\n                    icon            : 'fa-key',\n                    submit_title    : 'Create a new key',\n                    submit_icon     : 'fa-check'\n                },\n                'toolbox_filters': {\n                    title           : 'Manage Toolbox filters',\n                    description     : 'Customize your Toolbox by displaying or omitting sets of Tools.',\n                    url             : 'api/users/' + options.user_id + '/toolbox_filters/inputs',\n                    icon            : 'fa-filter',\n                    submit_title    : 'Save filters'\n                },\n                'openids': {\n                    title           : 'Manage OpenIDs',\n                    description     : 'Associate OpenIDs with your account.',\n                    icon            : 'fa-openid',\n                    onclick         : function() {\n                        window.location.href = Galaxy.root + 'user/openid_manage?cntrller=user&use_panels=True';\n                    }\n                },\n                'custom_builds': {\n                    title           : 'Manage custom builds',\n                    description     : 'Add or remove custom builds using history datasets.',\n                    icon            : 'fa-cubes',\n                    onclick         : function() {\n                        window.location.href = Galaxy.root + 'custom_builds';\n                    }\n                },\n                'configure_menu': {\n                    title           : 'Configure workflow menu',\n                    description     : 'Configure your workflow items which appear in the Tool panel.',\n                    icon            : 'fa-cog',\n                    onclick         : function() {\n                        window.location.href = Galaxy.root + 'workflow/configure_menu';\n                    }\n                },\n                'logout': {\n                    title           : 'Sign out',\n                    description     : 'Click here to sign out of all sessions.',\n                    icon            : 'fa-sign-out',\n                    onclick         : function() {\n                        Galaxy.modal.show({\n                            title   : 'Sign out',\n                            body    : 'Do you want to continue and sign out of all active sessions?',\n                            buttons : {\n                                'Cancel'    : function() { Galaxy.modal.hide(); },\n                                'Sign out'  : function() { window.location.href = Galaxy.root + 'user/logout'; }\n                            }\n                        });\n                    }\n                }\n            });\n        }\n    });\n\n    /** View of the main user preference panel with links to individual user forms */\n    var View = Backbone.View.extend({\n\n        initialize: function() {\n            this.model = new Model();\n            this.message = new Ui.Message();\n            this.setElement( '<div/>' );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var config = Galaxy.config;\n            $.getJSON( Galaxy.root + 'api/users/' + Galaxy.user.id, function( data ) {\n                self.$preferences = $( '<div/>' ).addClass( 'ui-panel' )\n                                                 .append( self.message.$el )\n                                                 .append( $( '<h2/>' ).append( 'User preferences' ) )\n                                                 .append( $( '<p/>' ).append( 'You are logged in as <strong>' +  _.escape( data.email ) + '</strong>.' ) )\n                                                 .append( self.$table = $( '<table/>' ).addClass( 'ui-panel-table' ) );\n                if( !config.use_remote_user ) {\n                    self._addLink( 'information' );\n                    self._addLink( 'password' );\n                }\n                if( config.enable_communication_server ) {\n                    self._addLink( 'communication' );\n                }\n                self._addLink( 'custom_builds' );\n                self._addLink( 'permissions' );\n                self._addLink( 'api_key' );\n                if( config.has_user_tool_filters ) {\n                    self._addLink( 'toolbox_filters' );\n                }\n                if( config.enable_openid && !config.use_remote_user ) {\n                    self._addLink( 'openids' );\n                }\n                self._addLink( 'configure_menu' );\n                self._addLink( 'logout' );\n                self.$preferences.append( self._templateFooter( data ) );\n                self.$el.empty().append( self.$preferences );\n            });\n        },\n\n        _addLink: function( action ) {\n            var options = this.model.get( action );\n            var $row =   $( this._templateLink( options ) );\n            var $a = $row.find( 'a' );\n            if ( options.onclick ) {\n                $a.on( 'click', function() { options.onclick() } );\n            } else {\n                $a.attr( 'href', Galaxy.root + 'user/' + action );\n            }\n            this.$table.append( $row );\n        },\n\n        _templateLink: function( options ) {\n            return  '<tr>' +\n                        '<td>' +\n                            '<div class=\"ui-panel-icon fa ' + options.icon + '\">' +\n                        '</td>' +\n                        '<td>' +\n                            '<a class=\"ui-panel-anchor\" href=\"javascript:void(0)\">' + options.title + '</a>' +\n                            '<div class=\"ui-form-info\">' + options.description + '</div>' +\n                        '</td>' +\n                    '</tr>';\n        },\n\n        _templateFooter: function( options ) {\n            return  '<p class=\"ui-panel-footer\">' +\n                        'You are using <strong>' + options.nice_total_disk_usage + '</strong> of disk space in this Galaxy instance. ' +\n                        ( Galaxy.config.enable_quotas ? 'Your disk quota is: <strong>' + options.quota + '</strong>. ' : '' ) +\n                        'Is your usage more than expected? See the <a href=\"https://galaxyproject.org/learn/managing-datasets/\" target=\"_blank\">documentation</a> for tips on how to find all of the data in your account.' +\n                    '</p>';\n        }\n    });\n\n    /** View of individual user forms */\n    var Forms = Backbone.View.extend({\n\n        initialize: function( options ) {\n            this.model = new Model( options );\n            this.page = this.model.get( options.form_id );\n            this.setElement( '<div/>' );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            $.ajax({\n                url     : Galaxy.root + this.page.url,\n                type    : 'GET'\n            }).done( function( response ) {\n                var options = $.extend( {}, self.page, response );\n                var form = new Form({\n                    title  : options.title,\n                    icon   : options.icon,\n                    inputs : options.inputs,\n                    operations: {\n                        'submit': new Ui.ButtonIcon({\n                            tooltip  : options.submit_tooltip,\n                            title    : options.submit_title || 'Save settings',\n                            icon     : options.submit_icon || 'fa-save',\n                            onclick  : function() { self._submit( form, options ) }\n                        })\n                    }\n                });\n                self.$el.empty().append( form.$el );\n            }).fail( function( response ) {\n                self.$el.empty().append( new Ui.Message({\n                    message     : 'Failed to load resource ' + self.page.url + '.',\n                    status      : 'danger',\n                    persistent  : true\n                }).$el );\n            });\n        },\n\n        _submit: function( form, options ) {\n            var self = this;\n            $.ajax( {\n                url         : Galaxy.root + options.url,\n                data        : JSON.stringify( form.data.create() ),\n                type        : 'PUT',\n                contentType : 'application/json'\n            }).done( function( response ) {\n                form.data.matchModel( response, function ( input, input_id ) {\n                    form.field_list[ input_id ].value( input.value );\n                });\n                form.message.update( { message: response.message, status: 'success' } );\n            }).fail( function( response ) {\n                form.message.update( { message: response.responseJSON.err_msg, status: 'danger' } );\n            });\n        }\n    });\n\n    return {\n        View  : View,\n        Forms : Forms\n    };\n});\n"]}