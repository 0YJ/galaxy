{"version":3,"sources":["mvc/user/user_api_keys.js"],"names":["define","Vue","mod_toastr","View","Backbone","extend","options","timeOut","UserAPIKeysView","initialize","render","self","this","url","Galaxy","root","empty","append","_template","fetchUsers","$","getJSON","users","setTimeout","applyVue","el","form_vue","data","generateKey","id","methods","uid","success","error","_data"],"mappings":"2DAAAA,QAAU,WAAY,eAAiB,SAAUC,EAAKC,GAmFlD,OACIC,KAlFkBC,SAASD,KAAKE,QAFxCL,WAAU,WAIEE,EAAWI,QAAQC,QAAU,IAFjCC,KAAAA,WAAAA,UACAC,KAAAA,UAGIC,OAAA,WACH,IALsCC,EAAAC,KAS/BC,EAAMC,OAAOC,KAAO,sBAF5BL,EAAAA,IAAQM,QAAAC,OAAAN,EAAWO,aACfP,EAAAQ,WAAWN,IAIdM,WAZsC,SAAAN,GAgBnC,IAAIF,EAAOC,KAFfQ,EAAAC,QAAAR,EAAA,SAAAS,GAIQC,WAAA,WACAZ,EAAAa,SAAAF,QAMPE,SAzBsC,SAAAF,GA6BpB,IAAIrB,GAFvBwB,GAAA,iBACAD,MACQE,MAAAA,GAEAC,SAAMC,YAFa,SAAAC,GAKnBC,IAAAA,EAASlB,KAELgB,EAAAA,MACIf,IAAIF,OAAOI,KAAX,2BACAY,MAAAI,IAAAF,GACAT,QAAO,SAAAE,GACHT,EAAKC,QAAc,qCAEnBkB,EAAAA,MAASV,MAAAA,GAELW,MAAA,WACAtB,EAAKuB,QAAMZ,4CAhBRJ,UAAvB,WAyBH,MAtDsC","file":"../../../scripts/mvc/user/user_api_keys.js","sourcesContent":["define( [ 'libs/vue', \"libs/toastr\" ], function( Vue, mod_toastr ) {\n\n    var UserAPIKeysView = Backbone.View.extend({\n        initialize: function() {\n            mod_toastr.options.timeOut = 1000;\n            this.setElement( '<div/>' );\n            this.render();\n        },\n\n        render: function() {\n            var self = this,\n                url = Galaxy.root + 'userskeys/all_users';\n            self.$el.empty().append( self._template() );\n            self.fetchUsers( url );\n        },\n\n        /** Load users and their keys */\n        fetchUsers: function( url ) {\n            var self = this;\n            $.getJSON( url, function( users ) {\n                // apply vue model on the dom\n                // timeout is used to ensure dom is created first and then\n                // vue model is applied with the required data\n                setTimeout(function() { \n                    self.applyVue( users );\n                });\n            });\n        },\n\n        /** Create model for the view using vue */\n        applyVue: function( users ) {\n            var form_vue = new Vue({\n                el: '#form-userkeys',\n                data: {\n                    users: users // data model\n                },\n                methods: {\n                    // bind event from view\n                    generateKey: function( id ) {\n                        var self = this;\n                        // fetch fresh model\n                        $.ajax({\n                            url: Galaxy.root + 'userskeys/admin_api_keys',\n                            data: { 'uid': id },\n                            success: function( users ) {\n                                mod_toastr.success(\"Successfully generated a user key\");\n                                // refresh the model\n                                self._data.users = users;\n                            },\n                            error: function( ) {\n                                mod_toastr.success(\"Error occured while loading data\");\n                            }\n                        });\n                    }\n                }\n            });\n        },\n\n        _template: function() {\n            return '<div id=\"form-userkeys\" class=\"toolForm\" v-cloak>' +\n                       '<div class=\"toolFormTitle\">User Information</div>' +\n                       '<div v-if=\"users && users.length > 0\">' +\n                           '<table class=\"grid\">' +\n                               '<thead><th>Encoded UID</th><th>Email</th><th>API Key</th><th>Actions</th></thead>' +\n                               '<tbody>' +\n                                   '<tr v-for=\"user in users\">' +\n                                       '<td>' + '{{ user.uid }}' + '</td>' +\n                                       '<td>' + '{{ user.email }}' + '</td>' +\n                                       '<td>' + '{{ user.key }}' + '</td>' +\n                                       '<td>' +\n                                           '<input type=\"button\" value=\"Generate a new key now\" v-on:click=\"generateKey( user.uid )\" />' +\n                                       '</td>' +\n                               '</tbody>' +\n                           '</table>' +\n                       '</div>' +\n                       '<div v-else>' +\n                           '<div>No informations available</div>' +\n                       '</div>' +\n                       '<div style=\"clear: both\"></div>' +\n                   '</div>';\n        }\n    });\n\n    return {\n        View: UserAPIKeysView\n    };\n});\n"]}