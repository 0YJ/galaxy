{"version":3,"sources":["mvc/toolshed/util.js"],"names":["searchShed","request","response","that","this","shed_url","base_url","Galaxy","root","$","get","term","tool_shed_url","data","result_list","shedParser","results","each","hits","hit","record","label","jsondata","result","repository","id","addToQueue","metadata","substr","length","key","queued_repos","localStorage","changeset_revision","Object","queueLength","hasOwnProperty","repositories","queue_length","JSON","stringify","repo_queue","parse","keys"],"mappings":"4HA2DIA,WA3Da,SAASC,EAASC,GAC/B,IAAIC,EAAOC,KACPC,EAAWD,KAAKC,SAChBC,EAAWC,OAAOC,KAAO,uBAC7BC,EAAEC,IAAIJ,GAAYK,KAAMV,EAAQU,KAAMC,cAAeP,GAAY,SAAAQ,GAC7D,IAAIC,EAAcX,EAAKY,WAAWF,GALtCb,EAAAA,MA4DAe,WAxDMT,SAAAA,GACF,IAAAU,KACAd,EAAAA,EAASY,KAiBZ,OAhBAL,EAAAQ,KAHDC,EAAA,SAAAC,GAJJ,IAAAC,EAAAF,EAAAC,GAeYE,EALRN,EAAAA,WAAAA,KACIC,OACAE,EAAOI,WAASJ,oBAClBD,KACEG,EAAIA,WAAcD,YAClBI,GAAIF,MACAD,EAAOI,WAAPC,GACAJ,MACAD,GAGJJ,EAAIO,KAAAA,KARRP,GAgDAU,WAlCa,SAAAC,GAAA,KAAbD,EAAAA,cAAAA,QAAAA,KACAC,EAAIA,cAASf,EAAqBA,cAAYgB,OAC1CD,EAIHA,EAAAf,cAAAiB,OAAA,IAQD,IAAAC,EACIC,EAAAA,cACH,IACDA,EAAAA,cACAC,IAlBJL,EAAAM,mBAaQF,EAAe,IAAIG,OAQvBC,aAAAA,eACAJ,EAAIC,KAAaI,MAAAA,aAAeC,eAE5BN,EAAIO,GAAAA,EACJN,aAAAK,aAAAE,KAAAC,UAAAT,IAUJI,YAPC,WACJ,GARDH,aAAAI,eAAA,gBAAA,CAEQ,IAAIK,EAAaF,KAAKG,MAAMV,aAAaK,cAS7CrC,OADWkC,OAAAS,KAAAF,GAAAZ,OAGXH,OAAAA","file":"../../../scripts/mvc/toolshed/util.js","sourcesContent":["var searchShed = function(request, response) {\n    var that = this;\n    var shed_url = this.shed_url;\n    var base_url = Galaxy.root + \"api/tool_shed/search\";\n    $.get(base_url, { term: request.term, tool_shed_url: shed_url }, data => {\n        var result_list = that.shedParser(data);\n        response(result_list);\n    });\n};\n\nvar shedParser = jsondata => {\n    var results = [];\n    var hits = jsondata.hits;\n    $.each(hits, hit => {\n        var record = hits[hit];\n        var label =\n            record.repository.name +\n            \" by \" +\n            record.repository.repo_owner_username +\n            \": \" +\n            record.repository.description;\n        var result = { value: record.repository.id, label: label };\n        results.push(result);\n    });\n    return results;\n};\n\nvar addToQueue = metadata => {\n    if (metadata.tool_shed_url.substr(-1) == \"/\") {\n        metadata.tool_shed_url = metadata.tool_shed_url.substr(\n            0,\n            metadata.tool_shed_url.length - 1\n        );\n    }\n    var key =\n        metadata.tool_shed_url +\n        \"|\" +\n        metadata.repository_id +\n        \"|\" +\n        metadata.changeset_revision;\n    var queued_repos = new Object();\n    if (localStorage.repositories) {\n        queued_repos = JSON.parse(localStorage.repositories);\n    }\n    queued_repos[key] = metadata;\n    localStorage.repositories = JSON.stringify(queued_repos);\n};\n\nvar queueLength = () => {\n    if (localStorage.hasOwnProperty(\"repositories\")) {\n        var repo_queue = JSON.parse(localStorage.repositories);\n        var queue_length = Object.keys(repo_queue).length;\n        return queue_length;\n    } else {\n        return 0;\n    }\n};\n\nexport default {\n    searchShed: searchShed,\n    shedParser: shedParser,\n    addToQueue: addToQueue,\n    queueLength: queueLength\n};\n"]}