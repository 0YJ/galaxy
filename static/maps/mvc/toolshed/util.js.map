{"version":3,"sources":["mvc/toolshed/util.js"],"names":["searchShed","request","response","that","this","shed_url","base_url","Galaxy","root","$","get","term","tool_shed_url","data","shedParser","result_list","results","hits","jsondata","each","hit","record","result","value","push","repository","id","label","addToQueue","metadata","substr","key","queued_repos","Object","localStorage","repository_id","queueLength","hasOwnProperty","repo_queue","queue_length","repositories","JSON","stringify","parse","keys","length"],"mappings":"4HA6DIA,WA7Da,SAASC,EAASC,GAC/B,IAAIC,EAAOC,KACPC,EAAWD,KAAKC,SAChBC,EAAWC,OAAOC,KAAO,uBAC7BC,EAAEC,IAAIJ,GAAYK,KAAMV,EAAQU,KAAMC,cAAeP,GAAY,SAC7DQ,GAJJ,IAAIV,EAAJA,EAAAW,WAAAD,GACAX,EAAIG,MA4DJS,WAtDIZ,SAASa,GACZ,IAAAC,KATLC,EAAAC,EAAAD,KA2BC,OAZGR,EAAEU,KAAKF,EAAM,SAASG,GAHtBN,IAAAA,EAAaG,EAAAG,GACTJ,EACAC,EAAOC,WAASD,KAClBE,OACEE,EAAIA,WAAcD,oBAClB,KAMAC,EAAIC,WAAWC,YACfP,GAAQQ,MAAKF,EAAbG,WAAAC,GAAAC,MAAAA,GACHX,EAVDQ,KAAAF,KAHJN,GAmDIY,WAjCIC,SAASjB,GACgBiB,KAAzBA,EAAAA,cAASjB,QAAgBiB,KAI5BA,EAAAjB,cAAAiB,EAAAjB,cAAAkB,OACGC,EAMAC,EAAAA,cAAmBC,OAAvB,IAGC,IAAAF,EACDC,EAAAA,cACAE,IAlBJL,EAAAM,cAWQ,IAUJC,EAAAA,mBACAJ,EAAIE,IAAaG,OACbH,aAAII,eACJN,EAAIO,KAAAA,MAAeN,aAAYK,eAElCN,EAAMD,GAAAF,EACHK,aAAAM,aAAAC,KAAAC,UAAAV,IAQJI,YAdc,WACd,GAAIF,aAAaG,eASN,gBAAA,CACXrC,IAAAA,EAAYA,KADD2C,MAAAT,aAAAM,cAGXZ,OADYd,OAFD8B,KAAAN,GAAAO,OAJP,OAAO","file":"../../../scripts/mvc/toolshed/util.js","sourcesContent":["var searchShed = function(request, response) {\n    var that = this;\n    var shed_url = this.shed_url;\n    var base_url = Galaxy.root + \"api/tool_shed/search\";\n    $.get(base_url, { term: request.term, tool_shed_url: shed_url }, function(\n        data\n    ) {\n        var result_list = that.shedParser(data);\n        response(result_list);\n    });\n};\n\nvar shedParser = function(jsondata) {\n    var results = [];\n    var hits = jsondata.hits;\n    $.each(hits, function(hit) {\n        var record = hits[hit];\n        var label =\n            record.repository.name +\n            \" by \" +\n            record.repository.repo_owner_username +\n            \": \" +\n            record.repository.description;\n        var result = { value: record.repository.id, label: label };\n        results.push(result);\n    });\n    return results;\n};\n\nvar addToQueue = function(metadata) {\n    if (metadata.tool_shed_url.substr(-1) == \"/\") {\n        metadata.tool_shed_url = metadata.tool_shed_url.substr(\n            0,\n            metadata.tool_shed_url.length - 1\n        );\n    }\n    var key =\n        metadata.tool_shed_url +\n        \"|\" +\n        metadata.repository_id +\n        \"|\" +\n        metadata.changeset_revision;\n    var queued_repos = new Object();\n    if (localStorage.repositories) {\n        queued_repos = JSON.parse(localStorage.repositories);\n    }\n    queued_repos[key] = metadata;\n    localStorage.repositories = JSON.stringify(queued_repos);\n};\n\nvar queueLength = function() {\n    if (localStorage.hasOwnProperty(\"repositories\")) {\n        var repo_queue = JSON.parse(localStorage.repositories);\n        var queue_length = Object.keys(repo_queue).length;\n        return queue_length;\n    } else {\n        return 0;\n    }\n};\n\nexport default {\n    searchShed: searchShed,\n    shedParser: shedParser,\n    addToQueue: addToQueue,\n    queueLength: queueLength\n};\n"]}