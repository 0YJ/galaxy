{"version":3,"sources":["mvc/toolshed/repository-view.js"],"names":["define","el","initialize","toolshed_model","jstree","defaults","Modal","options","toolshed_util","RepoDetails","RepositoryCollection","model","params","this","tool_shed","shed","category","repository_id","fetch","render","replace","url","repo_details_template","models","repository","queue","changesets","Object","current_changeset","repository_dependencies_template","repository_dependency_template","tps_template_global_select","tps_select_options","tool_dependencies","shed_tool_conf","keys","metadata","panel_section_dict","api_url","_","length","$el","current_metadata","checkInstalled","$","css","tool_shed_url","tools","templateRepoDependencies","bindEvents","templateRepoDependency","that","templateGlobalSectionSelect","tps_template_tool_select","templateToolSectionSelect","templatePanelSelectOptions","templateShedToolConf","stc_html","get","ev","preventDefault","Galaxy","tool_shed_repository_ids","JSON","install_tool_dependencies","install_resolver_dependencies","changeset","on","prepareInstall","find","text","each","reDraw","tpsSelection","repository_metadata","install_repository_dependencies","addToQueue","new_value","stringify","default_tps","attr","val","clean","panelSelect","name","desc","tsr_id","guid","data","toolform","Utils","input","key","modal","closing_events","title","modal_title","Close","tool_panel_section","already_installed","queued","index","changeset_match","substr","repoQueued","removeAttr","new_tool_panel_section","element_name","tool_guid","action","root","FormView","deepeach","inputs","indexOf","type","repositories","changeset_revision","extensions","queueKey","queued_repos","hasOwnProperty","show","body","buttons","hide","new_tps","owner","post","iri_parameters","doInstall","installed","deleted","uninstalled","controller_url","templateRepoDetails","prop","template","templateGlobalSectionCreate","templateToolSectionCreate","ToolShedRepositoryView","tool_panel_section_id","empty","localStorage","parse","queue_key","shed_url","new_route","join","console","log","Backbone","history","navigate","trigger","templateToolDependency"],"mappings":"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AS,KAIjBmH,oBAAqBhG,EAAEkG,UAEf,yEACA,iKACA,wJACA,SACA,6FACA,sGACA,mFACA,2FACA,yBACA,6CACA,uCACA,gEACA,uEACA,wGACA,0FACA,YACA,YACA,wMACA,6IACA,kIACA,SACA,SACA,wBACA,4DACA,gIACA,6BACA,oDACA,yEACA,uFACA,OACA,0FACA,oEACA,2BACA,wEACA,qGACA,OACA,SACA,4DACA,SACA,SACA,UACA,2DACA,qDACA,6BACA,kDACA,uEACA,mFACA,OACA,8CACA,mEACA,2EACA,OACA,8DACA,2BACA,kEACA,6FACA,OACA,SACA,8HACA,UACA,sGACA,4CACA,mBACA,gBACA,QACA,WACA,yBACA,4EACA,0EACA,mCACA,8BACA,qCACA,kCACA,QACA,YACA,WACA,WACA,SACA,SACA,UACA,yEACA,6IACA,6BACA,yDACA,kHACA,UACA,sGACA,4CACA,uBACA,mBACA,gHACA,WACA,6BACA,wDACA,0GACA,mCACA,wFACA,gPACA,SACA,QACA,mCACA,kDACA,0DACA,iHACA,QACA,QACA,YACA,WACA,WACA,SACA,SACA,UACA,UACA,UACFW,KAAK,KAGXpG,yBAA0BT,EAAEkG,UAEpB,2DACA,iFACA,OACA,qDACA,2CACA,+DACA,oFACA,oDACA,YACA,UACA,QACA,QACA,UACFW,KAAK,KAGXlG,uBAAwBX,EAAEkG,UAElB,4EACA,6HACA,2CACA,kCACA,+DACA,oFACA,oDACA,YACA,QACA,UACA,SACFW,KAAK,KAGX5F,qBAAsBjB,EAAEkG,UAEhB,iEACA,6BACA,yBACA,kBACA,kJACA,SACA,UACFW,KAAK,KAGXO,uBAAwBpH,EAAEkG,UAElB,2CACA,+DACA,qDACA,uEACA,8CACA,UACA,YACA,WACFW,KAAK,KAGXV,4BAA6BnG,EAAEkG,UAEvB,gCACA,sCACA,yGACA,+FACA,mDACA,0EACA,SACA,SACA,UACFW,KAAK,KAGXhG,4BAA6Bb,EAAEkG,UAEvB,gCACA,sDACA,6BACA,yCACA,iDACA,sDACA,YACA,qFACA,mDACA,mFACA,SACA,SACA,SACA,UACFW,KAAK,KAGXT,0BAA2BpG,EAAEkG,UAErB,uFACA,+KACA,uLACA,UACFW,KAAK,KAGX9F,0BAA2Bf,EAAEkG,UAErB,6FACA,kMACA,sDACA,YACA,8NACA,yDACA,UACFW,KAAK,KAGX7F,2BAA4BhB,EAAEkG,UAEtB,6CACA,iEACA,aACFW,KAAK","file":"../../../scripts/mvc/toolshed/repository-view.js","sourcesContent":["define(\n    [\n        \"mvc/toolshed/toolshed-model\",\n        \"libs/jquery/jstree\",\n        \"utils/utils\",\n        \"mvc/ui/ui-modal\",\n        \"mvc/form/form-view\",\n        \"mvc/toolshed/util\"\n    ],\n    function(toolshed_model, jstree, Utils, Modal, FormView, toolshed_util) {\n        var ToolShedRepositoryView = Backbone.View.extend({\n            el: \"#center\",\n\n            initialize: function(params) {\n                var self = this;\n                this.options = _.defaults(this.options || {}, this.defaults);\n                this.model = new toolshed_model.RepositoryCollection();\n                this.listenTo(this.model, \"sync\", this.render);\n                var shed = params.tool_shed.replace(/\\//g, \"%2f\");\n                this.model.url +=\n                    \"?tool_shed_url=\" +\n                    shed +\n                    \"&repository_id=\" +\n                    params.repository_id;\n                this.model.tool_shed_url = params.tool_shed.replace(\n                    /%2f/g,\n                    \"/\"\n                );\n                this.model.tool_shed = shed;\n                this.model.category = params.repository_id;\n                this.model.fetch();\n            },\n\n            render: function(options) {\n                var repo_details_template = this.templateRepoDetails;\n                var models = this.model.models[0];\n                this.options = {\n                    repository: models.get(\"repository\"),\n                    tool_shed: this.model.tool_shed,\n                    queue: toolshed_util.queueLength()\n                };\n                var changesets = Object.keys(this.options.repository.metadata);\n                this.options.current_changeset =\n                    this.options.current_changeset ||\n                    changesets[changesets.length - 1];\n                this.options.current_metadata = this.options.repository.metadata[\n                    this.options.current_changeset\n                ];\n                this.options.current_metadata.tool_shed_url = this.model.tool_shed_url;\n                this.options.tools = this.options.current_metadata.tools;\n                this.options.repository_dependencies_template = this.templateRepoDependencies;\n                this.options.repository_dependency_template = this.templateRepoDependency;\n                this.options.tps_template_global_select = this.templateGlobalSectionSelect;\n                this.options.tps_template_tool_select = this.templateToolSectionSelect;\n                this.options.tps_select_options = this.templatePanelSelectOptions;\n                this.options.tool_dependencies = models.get(\n                    \"tool_dependencies\"\n                );\n                this.options.shed_tool_conf = this.templateShedToolConf({\n                    stc_html: models.get(\"shed_conf\")\n                });\n                this.options.panel_section_dict = models.get(\n                    \"panel_section_dict\"\n                );\n                this.options.api_url =\n                    Galaxy.root +\n                    \"api/tool_shed_repositories/install?async=True\";\n                this.options = _.extend(this.options, options);\n                this.$el.html(repo_details_template(this.options));\n                this.checkInstalled(this.options.current_metadata);\n                this.bindEvents();\n                $(\"#center\").css(\"overflow\", \"auto\");\n            },\n\n            bindEvents: function() {\n                var that = this;\n                $(\"#changeset\").on(\"change\", function() {\n                    that.options.current_changeset = $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .text();\n                    that.options.current_metadata =\n                        that.options.repository.metadata[\n                            that.options.current_changeset\n                        ];\n                    that.checkInstalled(that.options.current_metadata);\n                    that.reDraw();\n                });\n                $(\"#tool_panel_section_select\").on(\"change\", function() {\n                    that.tpsSelection();\n                });\n                $(\"#install_repository\").on(\"click\", function(ev) {\n                    var form = $(\"#repository_installation\");\n                    ev.preventDefault();\n                    var params = {};\n                    params.repositories = JSON.stringify([\n                        [\n                            $(\"#install_repository\").attr(\"data-tsrid\"),\n                            $(\"#changeset\")\n                                .find(\"option:selected\")\n                                .val()\n                        ]\n                    ]);\n                    params.tool_shed_repository_ids = JSON.stringify([\n                        $(\"#install_repository\").attr(\"data-tsrid\")\n                    ]);\n                    params.tool_shed_url = that.model.tool_shed_url;\n                    params.install_tool_dependencies = $(\n                        \"#install_tool_dependencies\"\n                    ).val();\n                    params.install_repository_dependencies = $(\n                        \"#install_repository_dependencies\"\n                    ).val();\n                    params.install_resolver_dependencies = $(\n                        \"#install_resolver_dependencies\"\n                    ).val();\n                    var tps = that.panelSelect(params);\n                    params.tool_panel_section = JSON.stringify(\n                        that.panelSelect(params)\n                    );\n                    params.shed_tool_conf = $(\"select[name='shed_tool_conf']\")\n                        .find(\"option:selected\")\n                        .val();\n                    params.changeset = $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .val();\n                    var url = $(\"#repository_installation\").attr(\"action\");\n                    that.prepareInstall(params, url);\n                });\n                $(\"#queue_install\").on(\"click\", function(ev) {\n                    that.options.current_changeset = $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .text();\n                    that.options.current_metadata =\n                        that.options.repository.metadata[\n                            that.options.current_changeset\n                        ];\n                    var changeset = that.options.current_changeset;\n                    var repository_metadata = {};\n                    _.each(Object.keys(that.options.current_metadata), function(\n                        key\n                    ) {\n                        if (!repository_metadata[key]) {\n                            repository_metadata[key] =\n                                that.options.current_metadata[key];\n                        }\n                    });\n                    repository_metadata.install_tool_dependencies = $(\n                        \"#install_tool_dependencies\"\n                    ).val();\n                    repository_metadata.install_repository_dependencies = $(\n                        \"#install_repository_dependencies\"\n                    ).val();\n                    repository_metadata.install_resolver_dependencies = $(\n                        \"#install_resolver_dependencies\"\n                    ).val();\n                    repository_metadata.tool_panel_section = JSON.stringify(\n                        that.panelSelect({})\n                    );\n                    repository_metadata.shed_tool_conf = $(\n                        \"select[name='shed_tool_conf']\"\n                    )\n                        .find(\"option:selected\")\n                        .val();\n                    repository_metadata.tool_shed_url =\n                        that.model.tool_shed_url;\n                    if (repository_metadata.tool_shed_url.substr(-1) == \"/\") {\n                        repository_metadata.tool_shed_url = repository_metadata.tool_shed_url.substr(\n                            0,\n                            repository_metadata.tool_shed_url.length - 1\n                        );\n                    }\n                    toolshed_util.addToQueue(repository_metadata);\n                    that.checkInstalled(repository_metadata);\n                });\n                $(\".tool_panel_section_picker\").on(\"change\", function() {\n                    var new_value = $(this)\n                        .find(\"option:selected\")\n                        .val();\n                    var default_tps = $(\"#tool_panel_section_select\")\n                        .find(\"option:selected\")\n                        .val();\n                    if (new_value == default_tps) {\n                        $(this).attr(\"default\", \"active\");\n                    } else {\n                        $(this).removeAttr(\"default\");\n                    }\n                });\n                $(function() {\n                    $(\"#repository_dependencies\").jstree();\n                });\n                $(\".tool_form\").on(\"click\", function() {\n                    var guid = $(this).attr(\"data-guid\");\n                    var clean = $(this).attr(\"data-clean\");\n                    var name = $(this).attr(\"data-name\");\n                    var desc = $(this).attr(\"data-desc\");\n                    var tool_shed_url = that.model.tool_shed_url;\n                    var tsr_id = $(\"#repository_details\").attr(\"data-tsrid\");\n                    var changeset = $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .val();\n                    var api_url = Galaxy.root + \"api/tool_shed/tool_json\";\n                    var params = {\n                        guid: guid,\n                        tool_shed_url: tool_shed_url,\n                        tsr_id: tsr_id,\n                        changeset: changeset\n                    };\n                    $.get(api_url, params, function(data) {\n                        data.cls = \"ui-portlet-plain\";\n                        var toolform = new FormView(data);\n                        Utils.deepeach(data.inputs, function(input) {\n                            if (input.type) {\n                                if (\n                                    [\"data\", \"data_collection\"].indexOf(\n                                        input.type\n                                    ) != -1\n                                ) {\n                                    input.type = \"hidden\";\n                                    input.info =\n                                        \"Data input '\" +\n                                        input.name +\n                                        \"' (\" +\n                                        Utils.textify(input.extensions) +\n                                        \")\";\n                                }\n                            }\n                        });\n                        var modal = new Modal.View();\n                        var modal_title = \"<u>\" + name + \"</u> \" + desc;\n                        modal.show({\n                            closing_events: true,\n                            title: modal_title,\n                            body: toolform.$el,\n                            buttons: {\n                                Close: function() {\n                                    modal.hide();\n                                }\n                            }\n                        });\n                    });\n                });\n            },\n\n            checkInstalled: function(metadata) {\n                var that = this;\n                var params = { name: metadata.name, owner: metadata.owner };\n                var already_installed = false;\n                var queued = that.repoQueued(metadata);\n                $.get(\n                    Galaxy.root + \"api/tool_shed_repositories\",\n                    params,\n                    function(data) {\n                        for (var index = 0; index < data.length; index++) {\n                            var repository = data[index];\n                            var installed =\n                                !repository.deleted && !repository.uninstalled;\n                            var changeset_match =\n                                repository.changeset_revision ==\n                                    metadata.changeset_revision ||\n                                repository.installed_changeset_revision ==\n                                    metadata.changeset_revision;\n                            if (\n                                repository.name == metadata.repository.name &&\n                                repository.owner == metadata.repository.owner &&\n                                installed &&\n                                changeset_match\n                            ) {\n                                already_installed = true;\n                            }\n                            if (already_installed) {\n                                $(\"#install_repository\").prop(\"disabled\", true);\n                                $(\"#install_repository\").val(\n                                    \"This revision is already installed\"\n                                );\n                            } else {\n                                $(\"#install_repository\").prop(\n                                    \"disabled\",\n                                    false\n                                );\n                                $(\"#install_repository\").val(\n                                    \"Install this revision\"\n                                );\n                            }\n                        }\n                        if (that.repoQueued(metadata) || already_installed) {\n                            $(\"#queue_install\").hide();\n                            $(\"#queue_install\").val(\n                                \"This revision is already in the queue\"\n                            );\n                        } else {\n                            $(\"#queue_install\").show();\n                            $(\"#queue_install\").val(\n                                \"Install this revision later\"\n                            );\n                        }\n                    }\n                );\n            },\n\n            panelSelect: function(params) {\n                var tool_panel_section = {};\n                if ($(\"#tool_panel_section_select\").length) {\n                    params.tool_panel_section_id = $(\n                        \"#tool_panel_section_select\"\n                    )\n                        .find(\"option:selected\")\n                        .val();\n                } else {\n                    params.new_tool_panel_section = $(\n                        \"#new_tool_panel_section\"\n                    ).val();\n                }\n                $(\".tool_panel_section_picker\").each(function() {\n                    var element_name = $(this).attr(\"name\");\n                    var tool_guid = $(this).attr(\"data-toolguid\");\n                    if (element_name === \"tool_panel_section_id\") {\n                        tool_panel_section[tool_guid] = {\n                            tool_panel_section: $(this)\n                                .find(\"option:selected\")\n                                .val(),\n                            action: \"append\"\n                        };\n                    } else {\n                        tool_panel_section[tool_guid] = {\n                            tool_panel_section: $(this).val(),\n                            action: \"create\"\n                        };\n                    }\n                });\n                return tool_panel_section;\n            },\n\n            reDraw: function(options) {\n                this.$el.empty();\n                this.initialize(options);\n            },\n\n            repoQueued: function(metadata) {\n                var that = this;\n                if (!localStorage.repositories) {\n                    return;\n                }\n                var repository_queue = JSON.parse(localStorage.repositories);\n                var changeset = metadata.changeset_revision;\n                var queue_key = that.queueKey(metadata);\n                if (localStorage.repositories) {\n                    queued_repos = JSON.parse(localStorage.repositories);\n                }\n                if (queued_repos.hasOwnProperty(queue_key)) {\n                    return true;\n                }\n                return false;\n            },\n\n            queueKey: function(metadata) {\n                var shed_url = this.model.tool_shed_url;\n                // Make sure there is never a trailing slash on the shed URL.\n                if (shed_url.substr(-1) == \"/\") {\n                    shed_url = shed_url.substr(0, shed_url.length - 1);\n                }\n                return (\n                    shed_url +\n                    \"|\" +\n                    metadata.repository_id +\n                    \"|\" +\n                    metadata.changeset_revision\n                );\n            },\n\n            tpsSelection: function() {\n                new_tps = $(\"#tool_panel_section_select\")\n                    .find(\"option:selected\")\n                    .val();\n                $(\n                    '.tool_panel_section_picker[default=\"active\"]'\n                ).each(function() {\n                    $(this).val(new_tps);\n                });\n            },\n\n            prepareInstall: function(params, api_url) {\n                var that = this;\n                $.post(api_url, params, function(data) {\n                    var iri_parameters = JSON.parse(data);\n                    that.doInstall(iri_parameters);\n                });\n            },\n\n            doInstall: function(params) {\n                var controller_url =\n                    Galaxy.root + \"admin_toolshed/manage_repositories\";\n                var repositories = params.repositories;\n                var new_route = \"status/r/\" + repositories.join(\"|\");\n                $.post(controller_url, params, function(data) {\n                    console.log(\n                        \"Initializing repository installation succeeded\"\n                    );\n                });\n                Backbone.history.navigate(new_route, {\n                    trigger: true,\n                    replace: true\n                });\n            },\n\n            templateRepoDetails: _.template(\n                [\n                    '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n                    '<div class=\"unified-panel-header-inner\">Repository information for <strong><%= repository.name %></strong> from <strong><%= repository.owner %></strong></div>',\n                    '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n                    \"</div>\",\n                    '<div class=\"unified-panel-body\" id=\"repository_details\" data-tsrid=\"<%= repository.id %>\">',\n                    '<form id=\"repository_installation\" name=\"install_repository\" method=\"post\" action=\"<%= api_url %>\">',\n                    '<input type=\"hidden\" id=\"repositories\" name=\"<%= repository.id %>\" value=\"ID\" />',\n                    '<input type=\"hidden\" id=\"tool_shed_url\" name=\"tool_shed_url\" value=\"<%= tool_shed %>\" />',\n                    '<div class=\"toolForm\">',\n                    '<div class=\"toolFormTitle\">Changeset</div>',\n                    '<div class=\"toolFormBody changeset\">',\n                    '<select id=\"changeset\" name=\"changeset\" style=\"margin: 5px;\">',\n                    \"<% _.each(Object.keys(repository.metadata), function(changeset) { %>\",\n                    '<% if (changeset == current_changeset) { var selected = \"selected \"; } else { var selected = \"\"; } %>',\n                    '<option <%= selected %>value=\"<%= changeset.split(\":\")[1] %>\"><%= changeset %></option>',\n                    \"<% }); %>\",\n                    \"</select>\",\n                    '<input class=\"btn btn-primary preview-button\" data-tsrid=\"<%= current_metadata.repository.id %>\" type=\"submit\" id=\"install_repository\" name=\"install_repository\" value=\"Install this revision now\" />',\n                    '<input class=\"btn btn-primary preview-button\" type=\"button\" id=\"queue_install\" name=\"queue_install\" value=\"Install this revision later\" />',\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">Please select a revision and review the settings below before installing.</div>',\n                    \"</div>\",\n                    \"</div>\",\n                    \"<%= shed_tool_conf %>\",\n                    \"<% if (current_metadata.has_repository_dependencies) { %>\",\n                    '<div class=\"toolFormTitle\">Repository dependencies for <strong id=\"current_changeset\"><%= current_changeset %></strong></div>',\n                    '<div class=\"toolFormBody\">',\n                    '<p id=\"install_repository_dependencies_checkbox\">',\n                    '<input type=\"checkbox\" checked id=\"install_repository_dependencies\" />',\n                    '<label for=\"install_repository_dependencies\">Install repository dependencies</label>',\n                    \"</p>\",\n                    \"<% current_metadata.repository_dependency_template = repository_dependency_template; %>\",\n                    '<div class=\"tables container-table\" id=\"repository_dependencies\">',\n                    '<div class=\"expandLink\">',\n                    '<a class=\"toggle_folder\" data_target=\"repository_dependencies_table\">',\n                    \"Repository dependencies &ndash; <em>installation of these additional repositories is required</em>\",\n                    \"</a>\",\n                    \"</div>\",\n                    \"<%= repository_dependencies_template(current_metadata) %>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"<% } %>\",\n                    \"<% if (current_metadata.includes_tool_dependencies) { %>\",\n                    '<div class=\"toolFormTitle\">Tool dependencies</div>',\n                    '<div class=\"toolFormBody\">',\n                    '<p id=\"install_resolver_dependencies_checkbox\">',\n                    '<input type=\"checkbox\" checked id=\"install_resolver_dependencies\" />',\n                    '<label for=\"install_resolver_dependencies\">Install resolver dependencies</label>',\n                    \"</p>\",\n                    '<p id=\"install_tool_dependencies_checkbox\">',\n                    '<input type=\"checkbox\" checked id=\"install_tool_dependencies\" />',\n                    '<label for=\"install_tool_dependencies\">Install tool dependencies</label>',\n                    \"</p>\",\n                    '<div class=\"tables container-table\" id=\"tool_dependencies\">',\n                    '<div class=\"expandLink\">',\n                    '<a class=\"toggle_folder\" data_target=\"tool_dependencies_table\">',\n                    \"Tool dependencies &ndash; <em>repository tools require handling of these dependencies</em>\",\n                    \"</a>\",\n                    \"</div>\",\n                    '<table class=\"tables container-table\" id=\"tool_dependencies_table\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n                    \"<thead>\",\n                    '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n                    '<th style=\"padding-left: 40px;\">Name</th>',\n                    \"<th>Version</th>\",\n                    \"<th>Type</th>\",\n                    \"</tr>\",\n                    \"</thead>\",\n                    '<tbody id=\"tool_deps\">',\n                    \"<% _.each(tool_dependencies[current_changeset], function(dependency) { %>\",\n                    '<tr class=\"datasetRow tool_dependency_row\" style=\"display: table-row;\">',\n                    '<td style=\"padding-left: 40px;\">',\n                    \"<%= dependency.name %></td>\",\n                    \"<td><%= dependency.version %></td>\",\n                    \"<td><%= dependency.type %></td>\",\n                    \"</tr>\",\n                    \"<% }); %>\",\n                    \"</tbody>\",\n                    \"</table>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"<% } %>\",\n                    \"<% if (current_metadata.includes_tools_for_display_in_tool_panel) { %>\",\n                    '<div class=\"toolFormTitle\">Tools &ndash; <em>click the name to preview the tool and use the pop-up menu to inspect all metadata</em></div>',\n                    '<div class=\"toolFormBody\">',\n                    '<div class=\"tables container-table\" id=\"tools_toggle\">',\n                    '<table class=\"tables container-table\" id=\"valid_tools\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n                    \"<thead>\",\n                    '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n                    '<th style=\"padding-left: 40px;\">Name</th>',\n                    \"<th>Description</th>\",\n                    \"<th>Version</th>\",\n                    \"<th><%= tps_template_global_select({tps: panel_section_dict, tps_select_options: tps_select_options}) %></tr>\",\n                    \"</thead>\",\n                    '<tbody id=\"tools_in_repo\">',\n                    \"<% _.each(current_metadata.tools, function(tool) { %>\",\n                    '<tr id=\"libraryItem-<%= tool.clean %>\" class=\"tool_row\" style=\"display: table-row;\" style=\"width: 15%\">',\n                    '<td style=\"padding-left: 40px;\">',\n                    '<div id=\"tool-<%= tool.clean %>\" class=\"menubutton split popup\" style=\"float: left;\">',\n                    '<a class=\"tool_form view-info\" data-toggle=\"modal\" data-target=\"toolform_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" data-guid=\"<%= tool.guid %>\" data-name=\"<%= tool.name %>\" data-desc=\"<%= tool.description %>\"><%= tool.name %></a>',\n                    \"</div>\",\n                    \"</td>\",\n                    \"<td><%= tool.description %></td>\",\n                    '<td style=\"width: 15%\"><%= tool.version %></td>',\n                    '<td style=\"width: 35%\" id=\"tool_tps_<%= tool.clean %>\">',\n                    \"<%= tps_template_tool_select({tool: tool, tps: panel_section_dict, tps_select_options: tps_select_options}) %>\",\n                    \"</td>\",\n                    \"</tr>\",\n                    \"<% }); %>\",\n                    \"</tbody>\",\n                    \"</table>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"<% } %>\",\n                    \"</form>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateRepoDependencies: _.template(\n                [\n                    '<div class=\"toolFormTitle\">Repository Dependencies</div>',\n                    '<div class=\"toolFormBody tables container-table\" id=\"repository_dependencies\">',\n                    \"<ul>\",\n                    \"<li>Repository installation requires the following\",\n                    \"<% if (has_repository_dependencies) { %>\",\n                    \"<% _.each(repository_dependencies, function(dependency) { %>\",\n                    \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n                    \"<%= repository_dependency_template(dependency) %>\",\n                    \"<% }); %>\",\n                    \"<% } %>\",\n                    \"</li>\",\n                    \"</ul>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateRepoDependency: _.template(\n                [\n                    '<li id=\"metadata_<%= id %>\" class=\"datasetRow repository_dependency_row\">',\n                    \"Repository <b><%= repository.name %></b> revision <b><%= changeset_revision %></b> owned by <b><%= repository.owner %></b>\",\n                    \"<% if (has_repository_dependencies) { %>\",\n                    '<ul class=\"child_dependencies\">',\n                    \"<% _.each(repository_dependencies, function(dependency) { %>\",\n                    \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n                    \"<%= repository_dependency_template(dependency) %>\",\n                    \"<% }); %>\",\n                    \"</ul>\",\n                    \"<% } %>\",\n                    \"</li>\"\n                ].join(\"\")\n            ),\n\n            templateShedToolConf: _.template(\n                [\n                    '<div class=\"toolFormTitle\">Shed tool configuration file:</div>',\n                    '<div class=\"toolFormBody\">',\n                    '<div class=\"form-row\">',\n                    \"<%= stc_html %>\",\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">Select the file whose <b>tool_path</b> setting you want used for installing repositories.</div>',\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateToolDependency: _.template(\n                [\n                    \"<% if (has_repository_dependencies) { %>\",\n                    \"<% _.each(repository_dependencies, function(dependency) { %>\",\n                    \"<% if (dependency.includes_tool_dependencies) { %>\",\n                    \"<% dependency.tool_dependency_template = tool_dependency_template %>\",\n                    \"<%= tool_dependency_template(dependency) %>\",\n                    \"<% } %>\",\n                    \"<% }); %>\",\n                    \"<% } %>\"\n                ].join(\"\")\n            ),\n\n            templateGlobalSectionCreate: _.template(\n                [\n                    '<div id=\"tool_panel_section\">',\n                    '<div class=\"form-row\" id=\"new_tps\">',\n                    '<input id=\"new_tool_panel_section\" name=\"new_tool_panel_section\" type=\"textfield\" value=\"\" size=\"40\"/>',\n                    '<input class=\"btn btn-primary\" type=\"button\" id=\"select_existing\" value=\"Select existing\" />',\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n                    \"Add a new tool panel section to contain the installed tools (optional).\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateGlobalSectionSelect: _.template(\n                [\n                    '<div id=\"tool_panel_section\">',\n                    '<div class=\"toolFormTitle\">Tool Panel Section</div>',\n                    '<div class=\"toolFormBody\">',\n                    '<div class=\"tab-pane\" id=\"select_tps\">',\n                    '<select name=\"<%= name %>\" id=\"<%= tps.id %>\">',\n                    \"<%= tps_select_options({sections: tps.sections}) %>\",\n                    \"</select>\",\n                    '<input class=\"btn btn-primary\" type=\"button\" id=\"create_new\" value=\"Create new\" />',\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n                    \"Select an existing tool panel section to contain the installed tools (optional).\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateToolSectionCreate: _.template(\n                [\n                    '<div id=\"new_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"form-row\">',\n                    '<input data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" size=\"40\" name=\"new_tool_panel_section\" id=\"new_tool_panel_section_<%= tool.clean %>\" type=\"text\">',\n                    '<input id=\"per_tool_select_<%= tool.clean %>\" class=\"btn btn-primary\" data-toolguid=\"<%= tool.guid %>\" value=\"Select existing\" id=\"select_existing_<%= tool.clean %>\" type=\"button\">',\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateToolSectionSelect: _.template(\n                [\n                    '<div id=\"select_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"tps_creator\">',\n                    '<select default=\"active\" style=\"width: 30em;\" data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" name=\"tool_panel_section_id\" id=\"tool_panel_section_select_<%= tool.clean %>\">',\n                    \"<%= tps_select_options({sections: tps.sections}) %>\",\n                    \"</select>\",\n                    '<input id=\"per_tool_create_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"btn btn-primary create-tps-button\" data-toolguid=\"<%= tool.guid %>\" value=\"Create new\" id=\"create_new_<%= tool.clean %>\" type=\"button\">',\n                    '<div style=\"clear: both;\" class=\"toolParamHelp\"></div>',\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templatePanelSelectOptions: _.template(\n                [\n                    \"<% _.each(sections, function(section) { %>\",\n                    '<option value=\"<%= section.id %>\"><%= section.name %></option>',\n                    \"<% }); %>\"\n                ].join(\"\")\n            )\n        });\n\n        return {\n            RepoDetails: ToolShedRepositoryView\n        };\n    }\n);\n"]}