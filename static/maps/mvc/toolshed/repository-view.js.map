{"version":3,"sources":["mvc/toolshed/repository-view.js"],"names":["ToolShedRepositoryView","Backbone","View","extend","el","initialize","params","this","options","_","defaults","model","_toolshedModel2","default","RepositoryCollection","listenTo","render","shed","tool_shed","replace","url","repository_id","tool_shed_url","category","fetch","repo_details_template","templateRepoDetails","repository","models","get","queue","self","queueLength","changesets","Object","keys","length","metadata","current_metadata","tools","repository_dependencies_template","templateRepoDependencies","repository_dependency_template","templateRepoDependency","tps_template_global_select","templateGlobalSectionSelect","templatePanelSelectOptions","templateShedToolConf","panel_section_dict","Galaxy","current_changeset","$el","checkInstalled","bindEvents","$","that","on","shed_tool_conf","stc_html","find","api_url","reDraw","ev","JSON","stringify","tpsSelection","val","tool_shed_repository_ids","install_tool_dependencies","install_repository_dependencies","panelSelect","tool_panel_section","repository_metadata","changeset","attr","install_resolver_dependencies","each","key","new_value","default_tps","removeAttr","desc","guid","tsr_id","substr","_util2","addToQueue","deepeach","input","type","closing_events","body","toolform","modal","jstree","name","already_installed","queued","root","installed","changeset_match","data","cls","_formView2","inputs","indexOf","repoQueued","info","_utils2","textify","extensions","_uiModal2","show","tool_panel_section_id","title","modal_title","new_tool_panel_section","buttons","Close","element_name","action","owner","index","deleted","uninstalled","changeset_revision","installed_changeset_revision","repository_queue","localStorage","repositories","queued_repos","queue_key","prop","shed_url","new_tps","prepareInstall","iri_parameters","doInstall","controller_url","post","new_route","console","history","trigger","templateToolDependency","templateToolSectionCreate","parse","queueKey","hasOwnProperty","join","log","navigate","template","templateGlobalSectionCreate","templateToolSectionSelect","RepoDetails"],"mappings":"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A,wMACA,6IACA,kIACA,SACA,SACA,wBACA,4DACA,gIACA,6BACA,oDACA,yEACA,uFACA,OACA,0FACA,oEACA,2BACA,wEACA,qGACA,OACA,SACA,4DACA,SACA,SACA,UACA,2DACA,qDACA,6BACA,kDACA,uEACA,mFACA,OACA,8CACA,mEACA,2EACA,OACA,8DACA,2BACA,kEACA,6FACA,OACA,SACA,8HACA,UACA,sGACA,4CACA,mBACA,gBACA,QACA,WACA,yBACA,4EACA,0EACA,mCACA,8BACA,qCACA,kCACA,QACA,YACA,WACA,WACA,SACA,SACA,UACA,yEACA,6IACA,6BACA,yDACA,kHACA,UACA,sGACA,4CACA,uBACA,mBACA,gHACA,WACA,6BACA,wDACA,0GACA,mCACA,wFACA,gPACA,SACA,QACA,mCACA,kDACA,0DACA,iHACA,QACA,QACA,YACA,WACA,WACA,SACA,SACA,UACA,UACA,UACFH,KAAK,KAGX5G,yBAA0BhC,EAAE+I,UAEpB,2DACA,iFACA,OACA,qDACA,2CACA,+DACA,oFACA,oDACA,YACA,UACA,QACA,QACA,UACFH,KAAK,KAGX1G,uBAAwBlC,EAAE+I,UAElB,4EACA,6HACA,2CACA,kCACA,+DACA,oFACA,oDACA,YACA,QACA,UACA,SACFH,KAAK,KAGXtG,qBAAsBtC,EAAE+I,UAEhB,iEACA,6BACA,yBACA,kBACA,kJACA,SACA,UACFH,KAAK,KAGXL,uBAAwBvI,EAAE+I,UAElB,2CACA,+DACA,qDACA,uEACA,8CACA,UACA,YACA,WACFH,KAAK,KAGXI,4BAA6BhJ,EAAE+I,UAEvB,gCACA,sCACA,yGACA,+FACA,mDACA,0EACA,SACA,SACA,UACFH,KAAK,KAGXxG,4BAA6BpC,EAAE+I,UAEvB,gCACA,sDACA,6BACA,yCACA,iDACA,sDACA,YACA,qFACA,mDACA,mFACA,SACA,SACA,SACA,UACFH,KAAK,KAGXJ,0BAA2BxI,EAAE+I,UAErB,uFACA,+KACA,uLACA,UACFH,KAAK,KAGXK,0BAA2BjJ,EAAE+I,UAErB,6FACA,kMACA,sDACA,YACA,8NACA,yDACA,UACFH,KAAK,KAGXvG,2BAA4BrC,EAAE+I,UAEtB,6CACA,iEACA,aACFH,KAAK,kBAKXM,YAAa3J","file":"../../../scripts/mvc/toolshed/repository-view.js","sourcesContent":["import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport jstree from \"libs/jquery/jstree\";\nimport Utils from \"utils/utils\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport FormView from \"mvc/form/form-view\";\nimport toolshed_util from \"mvc/toolshed/util\";\nvar ToolShedRepositoryView = Backbone.View.extend({\n    el: \"#center\",\n\n    initialize: function(params) {\n        var self = this;\n        this.options = _.defaults(this.options || {}, this.defaults);\n        this.model = new toolshed_model.RepositoryCollection();\n        this.listenTo(this.model, \"sync\", this.render);\n        var shed = params.tool_shed.replace(/\\//g, \"%2f\");\n        this.model.url +=\n            \"?tool_shed_url=\" + shed + \"&repository_id=\" + params.repository_id;\n        this.model.tool_shed_url = params.tool_shed.replace(/%2f/g, \"/\");\n        this.model.tool_shed = shed;\n        this.model.category = params.repository_id;\n        this.model.fetch();\n    },\n\n    render: function(options) {\n        var repo_details_template = this.templateRepoDetails;\n        var models = this.model.models[0];\n        this.options = {\n            repository: models.get(\"repository\"),\n            tool_shed: this.model.tool_shed,\n            queue: toolshed_util.queueLength()\n        };\n        var changesets = Object.keys(this.options.repository.metadata);\n        this.options.current_changeset =\n            this.options.current_changeset || changesets[changesets.length - 1];\n        this.options.current_metadata = this.options.repository.metadata[\n            this.options.current_changeset\n        ];\n        this.options.current_metadata.tool_shed_url = this.model.tool_shed_url;\n        this.options.tools = this.options.current_metadata.tools;\n        this.options.repository_dependencies_template = this.templateRepoDependencies;\n        this.options.repository_dependency_template = this.templateRepoDependency;\n        this.options.tps_template_global_select = this.templateGlobalSectionSelect;\n        this.options.tps_template_tool_select = this.templateToolSectionSelect;\n        this.options.tps_select_options = this.templatePanelSelectOptions;\n        this.options.tool_dependencies = models.get(\"tool_dependencies\");\n        this.options.shed_tool_conf = this.templateShedToolConf({\n            stc_html: models.get(\"shed_conf\")\n        });\n        this.options.panel_section_dict = models.get(\"panel_section_dict\");\n        this.options.api_url =\n            Galaxy.root + \"api/tool_shed_repositories/install?async=True\";\n        this.options = _.extend(this.options, options);\n        this.$el.html(repo_details_template(this.options));\n        this.checkInstalled(this.options.current_metadata);\n        this.bindEvents();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    bindEvents: function() {\n        var that = this;\n        $(\"#changeset\").on(\"change\", function() {\n            that.options.current_changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .text();\n            that.options.current_metadata =\n                that.options.repository.metadata[\n                    that.options.current_changeset\n                ];\n            that.checkInstalled(that.options.current_metadata);\n            that.reDraw();\n        });\n        $(\"#tool_panel_section_select\").on(\"change\", function() {\n            that.tpsSelection();\n        });\n        $(\"#install_repository\").on(\"click\", function(ev) {\n            var form = $(\"#repository_installation\");\n            ev.preventDefault();\n            var params = {};\n            params.repositories = JSON.stringify([\n                [\n                    $(\"#install_repository\").attr(\"data-tsrid\"),\n                    $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .val()\n                ]\n            ]);\n            params.tool_shed_repository_ids = JSON.stringify([\n                $(\"#install_repository\").attr(\"data-tsrid\")\n            ]);\n            params.tool_shed_url = that.model.tool_shed_url;\n            params.install_tool_dependencies = $(\n                \"#install_tool_dependencies\"\n            ).val();\n            params.install_repository_dependencies = $(\n                \"#install_repository_dependencies\"\n            ).val();\n            params.install_resolver_dependencies = $(\n                \"#install_resolver_dependencies\"\n            ).val();\n            var tps = that.panelSelect(params);\n            params.tool_panel_section = JSON.stringify(\n                that.panelSelect(params)\n            );\n            params.shed_tool_conf = $(\"select[name='shed_tool_conf']\")\n                .find(\"option:selected\")\n                .val();\n            params.changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .val();\n            var url = $(\"#repository_installation\").attr(\"action\");\n            that.prepareInstall(params, url);\n        });\n        $(\"#queue_install\").on(\"click\", function(ev) {\n            that.options.current_changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .text();\n            that.options.current_metadata =\n                that.options.repository.metadata[\n                    that.options.current_changeset\n                ];\n            var changeset = that.options.current_changeset;\n            var repository_metadata = {};\n            _.each(Object.keys(that.options.current_metadata), function(key) {\n                if (!repository_metadata[key]) {\n                    repository_metadata[key] =\n                        that.options.current_metadata[key];\n                }\n            });\n            repository_metadata.install_tool_dependencies = $(\n                \"#install_tool_dependencies\"\n            ).val();\n            repository_metadata.install_repository_dependencies = $(\n                \"#install_repository_dependencies\"\n            ).val();\n            repository_metadata.install_resolver_dependencies = $(\n                \"#install_resolver_dependencies\"\n            ).val();\n            repository_metadata.tool_panel_section = JSON.stringify(\n                that.panelSelect({})\n            );\n            repository_metadata.shed_tool_conf = $(\n                \"select[name='shed_tool_conf']\"\n            )\n                .find(\"option:selected\")\n                .val();\n            repository_metadata.tool_shed_url = that.model.tool_shed_url;\n            if (repository_metadata.tool_shed_url.substr(-1) == \"/\") {\n                repository_metadata.tool_shed_url = repository_metadata.tool_shed_url.substr(\n                    0,\n                    repository_metadata.tool_shed_url.length - 1\n                );\n            }\n            toolshed_util.addToQueue(repository_metadata);\n            that.checkInstalled(repository_metadata);\n        });\n        $(\".tool_panel_section_picker\").on(\"change\", function() {\n            var new_value = $(this)\n                .find(\"option:selected\")\n                .val();\n            var default_tps = $(\"#tool_panel_section_select\")\n                .find(\"option:selected\")\n                .val();\n            if (new_value == default_tps) {\n                $(this).attr(\"default\", \"active\");\n            } else {\n                $(this).removeAttr(\"default\");\n            }\n        });\n        $(function() {\n            $(\"#repository_dependencies\").jstree();\n        });\n        $(\".tool_form\").on(\"click\", function() {\n            var guid = $(this).attr(\"data-guid\");\n            var clean = $(this).attr(\"data-clean\");\n            var name = $(this).attr(\"data-name\");\n            var desc = $(this).attr(\"data-desc\");\n            var tool_shed_url = that.model.tool_shed_url;\n            var tsr_id = $(\"#repository_details\").attr(\"data-tsrid\");\n            var changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .val();\n            var api_url = Galaxy.root + \"api/tool_shed/tool_json\";\n            var params = {\n                guid: guid,\n                tool_shed_url: tool_shed_url,\n                tsr_id: tsr_id,\n                changeset: changeset\n            };\n            $.get(api_url, params, function(data) {\n                data.cls = \"ui-portlet-plain\";\n                var toolform = new FormView(data);\n                Utils.deepeach(data.inputs, function(input) {\n                    if (input.type) {\n                        if (\n                            [\"data\", \"data_collection\"].indexOf(input.type) !=\n                            -1\n                        ) {\n                            input.type = \"hidden\";\n                            input.info =\n                                \"Data input '\" +\n                                input.name +\n                                \"' (\" +\n                                Utils.textify(input.extensions) +\n                                \")\";\n                        }\n                    }\n                });\n                var modal = new Modal.View();\n                var modal_title = \"<u>\" + name + \"</u> \" + desc;\n                modal.show({\n                    closing_events: true,\n                    title: modal_title,\n                    body: toolform.$el,\n                    buttons: {\n                        Close: function() {\n                            modal.hide();\n                        }\n                    }\n                });\n            });\n        });\n    },\n\n    checkInstalled: function(metadata) {\n        var that = this;\n        var params = { name: metadata.name, owner: metadata.owner };\n        var already_installed = false;\n        var queued = that.repoQueued(metadata);\n        $.get(Galaxy.root + \"api/tool_shed_repositories\", params, function(\n            data\n        ) {\n            for (var index = 0; index < data.length; index++) {\n                var repository = data[index];\n                var installed = !repository.deleted && !repository.uninstalled;\n                var changeset_match =\n                    repository.changeset_revision ==\n                        metadata.changeset_revision ||\n                    repository.installed_changeset_revision ==\n                        metadata.changeset_revision;\n                if (\n                    repository.name == metadata.repository.name &&\n                    repository.owner == metadata.repository.owner &&\n                    installed &&\n                    changeset_match\n                ) {\n                    already_installed = true;\n                }\n                if (already_installed) {\n                    $(\"#install_repository\").prop(\"disabled\", true);\n                    $(\"#install_repository\").val(\n                        \"This revision is already installed\"\n                    );\n                } else {\n                    $(\"#install_repository\").prop(\"disabled\", false);\n                    $(\"#install_repository\").val(\"Install this revision\");\n                }\n            }\n            if (that.repoQueued(metadata) || already_installed) {\n                $(\"#queue_install\").hide();\n                $(\"#queue_install\").val(\n                    \"This revision is already in the queue\"\n                );\n            } else {\n                $(\"#queue_install\").show();\n                $(\"#queue_install\").val(\"Install this revision later\");\n            }\n        });\n    },\n\n    panelSelect: function(params) {\n        var tool_panel_section = {};\n        if ($(\"#tool_panel_section_select\").length) {\n            params.tool_panel_section_id = $(\"#tool_panel_section_select\")\n                .find(\"option:selected\")\n                .val();\n        } else {\n            params.new_tool_panel_section = $(\"#new_tool_panel_section\").val();\n        }\n        $(\".tool_panel_section_picker\").each(function() {\n            var element_name = $(this).attr(\"name\");\n            var tool_guid = $(this).attr(\"data-toolguid\");\n            if (element_name === \"tool_panel_section_id\") {\n                tool_panel_section[tool_guid] = {\n                    tool_panel_section: $(this)\n                        .find(\"option:selected\")\n                        .val(),\n                    action: \"append\"\n                };\n            } else {\n                tool_panel_section[tool_guid] = {\n                    tool_panel_section: $(this).val(),\n                    action: \"create\"\n                };\n            }\n        });\n        return tool_panel_section;\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.initialize(options);\n    },\n\n    repoQueued: function(metadata) {\n        var that = this;\n        if (!localStorage.repositories) {\n            return;\n        }\n        var repository_queue = JSON.parse(localStorage.repositories);\n        var changeset = metadata.changeset_revision;\n        var queue_key = that.queueKey(metadata);\n        if (localStorage.repositories) {\n            queued_repos = JSON.parse(localStorage.repositories);\n        }\n        if (queued_repos.hasOwnProperty(queue_key)) {\n            return true;\n        }\n        return false;\n    },\n\n    queueKey: function(metadata) {\n        var shed_url = this.model.tool_shed_url;\n        // Make sure there is never a trailing slash on the shed URL.\n        if (shed_url.substr(-1) == \"/\") {\n            shed_url = shed_url.substr(0, shed_url.length - 1);\n        }\n        return (\n            shed_url +\n            \"|\" +\n            metadata.repository_id +\n            \"|\" +\n            metadata.changeset_revision\n        );\n    },\n\n    tpsSelection: function() {\n        new_tps = $(\"#tool_panel_section_select\")\n            .find(\"option:selected\")\n            .val();\n        $('.tool_panel_section_picker[default=\"active\"]').each(function() {\n            $(this).val(new_tps);\n        });\n    },\n\n    prepareInstall: function(params, api_url) {\n        var that = this;\n        $.post(api_url, params, function(data) {\n            var iri_parameters = JSON.parse(data);\n            that.doInstall(iri_parameters);\n        });\n    },\n\n    doInstall: function(params) {\n        var controller_url =\n            Galaxy.root + \"admin_toolshed/install_repositories\";\n        var repositories = params.repositories;\n        var new_route = \"status/r/\" + repositories.join(\"|\");\n        $.post(controller_url, params, function(data) {\n            console.log(\"Initializing repository installation succeeded\");\n        });\n        Backbone.history.navigate(new_route, {\n            trigger: true,\n            replace: true\n        });\n    },\n\n    templateRepoDetails: _.template(\n        [\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\">Repository information for <strong><%= repository.name %></strong> from <strong><%= repository.owner %></strong></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<div class=\"unified-panel-body\" id=\"repository_details\" data-tsrid=\"<%= repository.id %>\">',\n            '<form id=\"repository_installation\" name=\"install_repository\" method=\"post\" action=\"<%= api_url %>\">',\n            '<input type=\"hidden\" id=\"repositories\" name=\"<%= repository.id %>\" value=\"ID\" />',\n            '<input type=\"hidden\" id=\"tool_shed_url\" name=\"tool_shed_url\" value=\"<%= tool_shed %>\" />',\n            '<div class=\"toolForm\">',\n            '<div class=\"toolFormTitle\">Changeset</div>',\n            '<div class=\"toolFormBody changeset\">',\n            '<select id=\"changeset\" name=\"changeset\" style=\"margin: 5px;\">',\n            \"<% _.each(Object.keys(repository.metadata), function(changeset) { %>\",\n            '<% if (changeset == current_changeset) { var selected = \"selected \"; } else { var selected = \"\"; } %>',\n            '<option <%= selected %>value=\"<%= changeset.split(\":\")[1] %>\"><%= changeset %></option>',\n            \"<% }); %>\",\n            \"</select>\",\n            '<input class=\"btn btn-primary preview-button\" data-tsrid=\"<%= current_metadata.repository.id %>\" type=\"submit\" id=\"install_repository\" name=\"install_repository\" value=\"Install this revision now\" />',\n            '<input class=\"btn btn-primary preview-button\" type=\"button\" id=\"queue_install\" name=\"queue_install\" value=\"Install this revision later\" />',\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">Please select a revision and review the settings below before installing.</div>',\n            \"</div>\",\n            \"</div>\",\n            \"<%= shed_tool_conf %>\",\n            \"<% if (current_metadata.has_repository_dependencies) { %>\",\n            '<div class=\"toolFormTitle\">Repository dependencies for <strong id=\"current_changeset\"><%= current_changeset %></strong></div>',\n            '<div class=\"toolFormBody\">',\n            '<p id=\"install_repository_dependencies_checkbox\">',\n            '<input type=\"checkbox\" checked id=\"install_repository_dependencies\" />',\n            '<label for=\"install_repository_dependencies\">Install repository dependencies</label>',\n            \"</p>\",\n            \"<% current_metadata.repository_dependency_template = repository_dependency_template; %>\",\n            '<div class=\"tables container-table\" id=\"repository_dependencies\">',\n            '<div class=\"expandLink\">',\n            '<a class=\"toggle_folder\" data_target=\"repository_dependencies_table\">',\n            \"Repository dependencies &ndash; <em>installation of these additional repositories is required</em>\",\n            \"</a>\",\n            \"</div>\",\n            \"<%= repository_dependencies_template(current_metadata) %>\",\n            \"</div>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"<% if (current_metadata.includes_tool_dependencies) { %>\",\n            '<div class=\"toolFormTitle\">Tool dependencies</div>',\n            '<div class=\"toolFormBody\">',\n            '<p id=\"install_resolver_dependencies_checkbox\">',\n            '<input type=\"checkbox\" checked id=\"install_resolver_dependencies\" />',\n            '<label for=\"install_resolver_dependencies\">Install resolver dependencies</label>',\n            \"</p>\",\n            '<p id=\"install_tool_dependencies_checkbox\">',\n            '<input type=\"checkbox\" checked id=\"install_tool_dependencies\" />',\n            '<label for=\"install_tool_dependencies\">Install tool dependencies</label>',\n            \"</p>\",\n            '<div class=\"tables container-table\" id=\"tool_dependencies\">',\n            '<div class=\"expandLink\">',\n            '<a class=\"toggle_folder\" data_target=\"tool_dependencies_table\">',\n            \"Tool dependencies &ndash; <em>repository tools require handling of these dependencies</em>\",\n            \"</a>\",\n            \"</div>\",\n            '<table class=\"tables container-table\" id=\"tool_dependencies_table\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            \"<thead>\",\n            '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n            '<th style=\"padding-left: 40px;\">Name</th>',\n            \"<th>Version</th>\",\n            \"<th>Type</th>\",\n            \"</tr>\",\n            \"</thead>\",\n            '<tbody id=\"tool_deps\">',\n            \"<% _.each(tool_dependencies[current_changeset], function(dependency) { %>\",\n            '<tr class=\"datasetRow tool_dependency_row\" style=\"display: table-row;\">',\n            '<td style=\"padding-left: 40px;\">',\n            \"<%= dependency.name %></td>\",\n            \"<td><%= dependency.version %></td>\",\n            \"<td><%= dependency.type %></td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            \"</table>\",\n            \"</div>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"<% if (current_metadata.includes_tools_for_display_in_tool_panel) { %>\",\n            '<div class=\"toolFormTitle\">Tools &ndash; <em>click the name to preview the tool and use the pop-up menu to inspect all metadata</em></div>',\n            '<div class=\"toolFormBody\">',\n            '<div class=\"tables container-table\" id=\"tools_toggle\">',\n            '<table class=\"tables container-table\" id=\"valid_tools\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            \"<thead>\",\n            '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n            '<th style=\"padding-left: 40px;\">Name</th>',\n            \"<th>Description</th>\",\n            \"<th>Version</th>\",\n            \"<th><%= tps_template_global_select({tps: panel_section_dict, tps_select_options: tps_select_options}) %></tr>\",\n            \"</thead>\",\n            '<tbody id=\"tools_in_repo\">',\n            \"<% _.each(current_metadata.tools, function(tool) { %>\",\n            '<tr id=\"libraryItem-<%= tool.clean %>\" class=\"tool_row\" style=\"display: table-row;\" style=\"width: 15%\">',\n            '<td style=\"padding-left: 40px;\">',\n            '<div id=\"tool-<%= tool.clean %>\" class=\"menubutton split popup\" style=\"float: left;\">',\n            '<a class=\"tool_form view-info\" data-toggle=\"modal\" data-target=\"toolform_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" data-guid=\"<%= tool.guid %>\" data-name=\"<%= tool.name %>\" data-desc=\"<%= tool.description %>\"><%= tool.name %></a>',\n            \"</div>\",\n            \"</td>\",\n            \"<td><%= tool.description %></td>\",\n            '<td style=\"width: 15%\"><%= tool.version %></td>',\n            '<td style=\"width: 35%\" id=\"tool_tps_<%= tool.clean %>\">',\n            \"<%= tps_template_tool_select({tool: tool, tps: panel_section_dict, tps_select_options: tps_select_options}) %>\",\n            \"</td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            \"</table>\",\n            \"</div>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"</form>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateRepoDependencies: _.template(\n        [\n            '<div class=\"toolFormTitle\">Repository Dependencies</div>',\n            '<div class=\"toolFormBody tables container-table\" id=\"repository_dependencies\">',\n            \"<ul>\",\n            \"<li>Repository installation requires the following\",\n            \"<% if (has_repository_dependencies) { %>\",\n            \"<% _.each(repository_dependencies, function(dependency) { %>\",\n            \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n            \"<%= repository_dependency_template(dependency) %>\",\n            \"<% }); %>\",\n            \"<% } %>\",\n            \"</li>\",\n            \"</ul>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateRepoDependency: _.template(\n        [\n            '<li id=\"metadata_<%= id %>\" class=\"datasetRow repository_dependency_row\">',\n            \"Repository <b><%= repository.name %></b> revision <b><%= changeset_revision %></b> owned by <b><%= repository.owner %></b>\",\n            \"<% if (has_repository_dependencies) { %>\",\n            '<ul class=\"child_dependencies\">',\n            \"<% _.each(repository_dependencies, function(dependency) { %>\",\n            \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n            \"<%= repository_dependency_template(dependency) %>\",\n            \"<% }); %>\",\n            \"</ul>\",\n            \"<% } %>\",\n            \"</li>\"\n        ].join(\"\")\n    ),\n\n    templateShedToolConf: _.template(\n        [\n            '<div class=\"toolFormTitle\">Shed tool configuration file:</div>',\n            '<div class=\"toolFormBody\">',\n            '<div class=\"form-row\">',\n            \"<%= stc_html %>\",\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">Select the file whose <b>tool_path</b> setting you want used for installing repositories.</div>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateToolDependency: _.template(\n        [\n            \"<% if (has_repository_dependencies) { %>\",\n            \"<% _.each(repository_dependencies, function(dependency) { %>\",\n            \"<% if (dependency.includes_tool_dependencies) { %>\",\n            \"<% dependency.tool_dependency_template = tool_dependency_template %>\",\n            \"<%= tool_dependency_template(dependency) %>\",\n            \"<% } %>\",\n            \"<% }); %>\",\n            \"<% } %>\"\n        ].join(\"\")\n    ),\n\n    templateGlobalSectionCreate: _.template(\n        [\n            '<div id=\"tool_panel_section\">',\n            '<div class=\"form-row\" id=\"new_tps\">',\n            '<input id=\"new_tool_panel_section\" name=\"new_tool_panel_section\" type=\"textfield\" value=\"\" size=\"40\"/>',\n            '<input class=\"btn btn-primary\" type=\"button\" id=\"select_existing\" value=\"Select existing\" />',\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n            \"Add a new tool panel section to contain the installed tools (optional).\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateGlobalSectionSelect: _.template(\n        [\n            '<div id=\"tool_panel_section\">',\n            '<div class=\"toolFormTitle\">Tool Panel Section</div>',\n            '<div class=\"toolFormBody\">',\n            '<div class=\"tab-pane\" id=\"select_tps\">',\n            '<select name=\"<%= name %>\" id=\"<%= tps.id %>\">',\n            \"<%= tps_select_options({sections: tps.sections}) %>\",\n            \"</select>\",\n            '<input class=\"btn btn-primary\" type=\"button\" id=\"create_new\" value=\"Create new\" />',\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n            \"Select an existing tool panel section to contain the installed tools (optional).\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateToolSectionCreate: _.template(\n        [\n            '<div id=\"new_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"form-row\">',\n            '<input data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" size=\"40\" name=\"new_tool_panel_section\" id=\"new_tool_panel_section_<%= tool.clean %>\" type=\"text\">',\n            '<input id=\"per_tool_select_<%= tool.clean %>\" class=\"btn btn-primary\" data-toolguid=\"<%= tool.guid %>\" value=\"Select existing\" id=\"select_existing_<%= tool.clean %>\" type=\"button\">',\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateToolSectionSelect: _.template(\n        [\n            '<div id=\"select_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"tps_creator\">',\n            '<select default=\"active\" style=\"width: 30em;\" data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" name=\"tool_panel_section_id\" id=\"tool_panel_section_select_<%= tool.clean %>\">',\n            \"<%= tps_select_options({sections: tps.sections}) %>\",\n            \"</select>\",\n            '<input id=\"per_tool_create_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"btn btn-primary create-tps-button\" data-toolguid=\"<%= tool.guid %>\" value=\"Create new\" id=\"create_new_<%= tool.clean %>\" type=\"button\">',\n            '<div style=\"clear: both;\" class=\"toolParamHelp\"></div>',\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templatePanelSelectOptions: _.template(\n        [\n            \"<% _.each(sections, function(section) { %>\",\n            '<option value=\"<%= section.id %>\"><%= section.name %></option>',\n            \"<% }); %>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    RepoDetails: ToolShedRepositoryView\n};\n"]}