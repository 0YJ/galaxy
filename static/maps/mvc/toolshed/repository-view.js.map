{"version":3,"sources":["mvc/toolshed/repository-view.js"],"names":["define","ToolShedRepositoryView","toolshed_model","jstree","Utils","Modal","FormView","toolshed_util","RepoDetails","model","View","extend","el","initialize","tool_shed","this","fetch","defaults","options","RepositoryCollection","listenTo","render","params","repo_details_template","templateRepoDetails","repository_id","models","replace","shed","repository","changesets","current_changeset","current_metadata","repository_dependencies_template","queue","repository_dependency_template","tps_template_tool_select","templateToolSectionSelect","tps_select_options","templatePanelSelectOptions","length","tool_dependencies","metadata","shed_tool_conf","tool_shed_url","templateShedToolConf","panel_section_dict","tools","api_url","templateRepoDependencies","templateRepoDependency","$el","tps_template_global_select","checkInstalled","bindEvents","$","css","get","stc_html","Galaxy","root","that","_","html","tpsSelection","on","find","text","form","ev","preventDefault","tool_shed_repository_ids","stringify","install_repository_dependencies","install_resolver_dependencies","JSON","attr","val","changeset","url","prepareInstall","repository_metadata","Object","install_tool_dependencies","tool_panel_section","key","addToQueue","panelSelect","new_value","default_tps","substr","removeAttr","name","tsr_id","guid","data","cls","deepeach","input","type","info","toolform","inputs","modal","modal_title","indexOf","textify","extensions","desc","show","closing_events","title","body","buttons","Close","hide","owner","already_installed","changeset_match","index","deleted","uninstalled","changeset_revision","installed_changeset_revision","installed","prop","repoQueued","tool_panel_section_id","element_name","tool_guid","new_tool_panel_section","each","action","localStorage","reDraw","repository_queue","queue_key","queued_repos","repositories","queueKey","parse","shed_url","new_tps","iri_parameters","doInstall","new_route","post","controller_url","console","template","join","log","Backbone","history","navigate","trigger","templateGlobalSectionCreate","templateGlobalSectionSelect","templateToolSectionCreate","templateToolDependency"],"mappings":"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","file":"../../../scripts/mvc/toolshed/repository-view.js","sourcesContent":["define(['mvc/toolshed/toolshed-model',\n        'libs/jquery/jstree',\n        'utils/utils',\n        'mvc/ui/ui-modal',\n        'mvc/form/form-view',\n        'mvc/toolshed/util'], function(toolshed_model,\n                                       jstree,\n                                       Utils,\n                                       Modal,\n                                       FormView,\n                                       toolshed_util) {\n\n    var ToolShedRepositoryView = Backbone.View.extend({\n\n        el: '#center',\n\n        initialize: function(params) {\n            var self = this;\n            this.options = _.defaults(this.options || {}, this.defaults);\n            this.model = new toolshed_model.RepositoryCollection();\n            this.listenTo(this.model, 'sync', this.render);\n            shed = params.tool_shed.replace(/\\//g, '%2f');\n            this.model.url += '?tool_shed_url=' + shed + '&repository_id=' + params.repository_id;\n            this.model.tool_shed_url = params.tool_shed.replace(/%2f/g, '/');\n            this.model.tool_shed = shed;\n            this.model.category = params.repository_id;\n            this.model.fetch();\n        },\n\n        render: function(options) {\n            var repo_details_template = this.templateRepoDetails;\n            var models = this.model.models[0];\n            this.options = {\n                        repository: models.get('repository'),\n                        tool_shed: this.model.tool_shed,\n                        queue: toolshed_util.queueLength(),\n                        }\n            var changesets = Object.keys(this.options.repository.metadata);\n            this.options.current_changeset = (this.options.current_changeset || changesets[changesets.length - 1]);\n            this.options.current_metadata = this.options.repository.metadata[this.options.current_changeset];\n            this.options.current_metadata.tool_shed_url =  this.model.tool_shed_url;\n            this.options.tools = this.options.current_metadata.tools;\n            this.options.repository_dependencies_template = this.templateRepoDependencies;\n            this.options.repository_dependency_template = this.templateRepoDependency;\n            this.options.tps_template_global_select = this.templateGlobalSectionSelect;\n            this.options.tps_template_tool_select = this.templateToolSectionSelect;\n            this.options.tps_select_options = this.templatePanelSelectOptions;\n            this.options.tool_dependencies = models.get('tool_dependencies');\n            this.options.shed_tool_conf = this.templateShedToolConf({'stc_html': models.get('shed_conf')});\n            this.options.panel_section_dict = models.get('panel_section_dict');\n            this.options.api_url = Galaxy.root + 'api/tool_shed_repositories/install?async=True';\n            this.options = _.extend(this.options, options);\n            this.$el.html(repo_details_template(this.options));\n            this.checkInstalled(this.options.current_metadata);\n            this.bindEvents();\n            $(\"#center\").css('overflow', 'auto');\n        },\n\n        bindEvents: function(){\n            var that = this;\n            $('#changeset').on('change', function () {\n                that.options.current_changeset = $('#changeset').find(\"option:selected\").text();\n                that.options.current_metadata = that.options.repository.metadata[that.options.current_changeset];\n                that.checkInstalled(that.options.current_metadata);\n                that.reDraw();\n            });\n            $('#tool_panel_section_select').on('change', function() {\n                that.tpsSelection();\n            });\n            $('#install_repository').on('click', function(ev) {\n                var form = $('#repository_installation');\n                ev.preventDefault();\n                var params = {};\n                params.repositories = JSON.stringify([[$('#install_repository').attr('data-tsrid'), $('#changeset').find(\"option:selected\").val()]]);\n                params.tool_shed_repository_ids = JSON.stringify([$('#install_repository').attr('data-tsrid')]);\n                params.tool_shed_url = that.model.tool_shed_url;\n                params.install_tool_dependencies = $(\"#install_tool_dependencies\").val();\n                params.install_repository_dependencies = $(\"#install_repository_dependencies\").val();\n                params.install_resolver_dependencies = $(\"#install_resolver_dependencies\").val();\n                var tps = that.panelSelect(params);\n                params.tool_panel_section = JSON.stringify(that.panelSelect(params));\n                params.shed_tool_conf = $(\"select[name='shed_tool_conf']\").find('option:selected').val()\n                params.changeset = $('#changeset').find(\"option:selected\").val();\n                url = $('#repository_installation').attr('action');\n                that.prepareInstall(params, url);\n            });\n            $('#queue_install').on('click', function(ev) {\n                that.options.current_changeset = $('#changeset').find(\"option:selected\").text();\n                that.options.current_metadata = that.options.repository.metadata[that.options.current_changeset];\n                var changeset = that.options.current_changeset;\n                var repository_metadata = {};\n                _.each(Object.keys(that.options.current_metadata), function(key) {\n                    if (!repository_metadata[key]) {\n                        repository_metadata[key] = that.options.current_metadata[key];\n                    }\n                });\n                repository_metadata.install_tool_dependencies = $(\"#install_tool_dependencies\").val();\n                repository_metadata.install_repository_dependencies = $(\"#install_repository_dependencies\").val();\n                repository_metadata.install_resolver_dependencies = $(\"#install_resolver_dependencies\").val();\n                repository_metadata.tool_panel_section = JSON.stringify(that.panelSelect({}));\n                repository_metadata.shed_tool_conf = $(\"select[name='shed_tool_conf']\").find('option:selected').val()\n                repository_metadata.tool_shed_url = that.model.tool_shed_url;\n                if (repository_metadata.tool_shed_url.substr(-1) == '/') {\n                    repository_metadata.tool_shed_url = repository_metadata.tool_shed_url.substr(0, repository_metadata.tool_shed_url.length - 1);\n                }\n                toolshed_util.addToQueue(repository_metadata);\n                that.checkInstalled(repository_metadata);\n            });\n            $('.tool_panel_section_picker').on('change', function() {\n                new_value = $(this).find('option:selected').val();\n                default_tps = $('#tool_panel_section_select').find('option:selected').val();\n                if (new_value == default_tps) {\n                    $(this).attr('default', 'active');\n                }\n                else {\n                    $(this).removeAttr('default');\n                }\n            });\n            $(function() { $('#repository_dependencies').jstree(); });\n            $('.tool_form').on('click', function() {\n                var guid = $(this).attr('data-guid');\n                var clean = $(this).attr('data-clean');\n                var name = $(this).attr('data-name');\n                var desc = $(this).attr('data-desc');\n                var tool_shed_url = that.model.tool_shed_url;\n                var tsr_id = $('#repository_details').attr('data-tsrid');\n                var changeset = $('#changeset').find(\"option:selected\").val();\n                var api_url = Galaxy.root + 'api/tool_shed/tool_json';\n                var params = {'guid': guid, 'tool_shed_url': tool_shed_url, 'tsr_id': tsr_id, 'changeset': changeset};\n                $.get(api_url, params, function(data) {\n                    data.cls = 'ui-portlet-plain';\n                    var toolform = new FormView(data);\n                    Utils.deepeach(data.inputs, function( input ) {\n                        if (input.type) {\n                            if (['data', 'data_collection'].indexOf(input.type) != -1) {\n                                input.type = 'hidden';\n                                input.info = 'Data input \\'' + input.name + '\\' (' + Utils.textify(input.extensions) + ')';\n                            }\n                        }\n                    });\n                    var modal = new Modal.View();\n                    var modal_title = '<u>' + name + '</u> ' + desc;\n                    modal.show({'closing_events': true,\n                                'title': modal_title,\n                                'body': toolform.$el,\n                                'buttons': { 'Close': function() { modal.hide(); }}});\n                });\n            });\n        },\n\n        checkInstalled: function(metadata) {\n            var that = this;\n            var params = {name: metadata.name, owner: metadata.owner};\n            var already_installed = false;\n            var queued = that.repoQueued(metadata);\n            $.get(Galaxy.root + 'api/tool_shed_repositories', params, function(data) {\n                for (var index = 0; index < data.length; index++) {\n                    var repository = data[index];\n                    var installed = !repository.deleted && !repository.uninstalled;\n                    var changeset_match = repository.changeset_revision == metadata.changeset_revision ||\n                                          repository.installed_changeset_revision == metadata.changeset_revision;\n                    if (repository.name == metadata.repository.name && repository.owner == metadata.repository.owner && installed && changeset_match) {\n                        already_installed = true;\n                    }\n                    if (already_installed) {\n                        $('#install_repository').prop('disabled', true);\n                        $('#install_repository').val('This revision is already installed');\n                    }\n                    else {\n                        $('#install_repository').prop('disabled', false);\n                        $('#install_repository').val('Install this revision');\n                    }\n                }\n                if (that.repoQueued(metadata) || already_installed) {\n                    $('#queue_install').hide();\n                    $('#queue_install').val('This revision is already in the queue');\n                }\n                else {\n                    $('#queue_install').show();\n                    $('#queue_install').val('Install this revision later');\n                }\n            });\n        },\n\n        panelSelect: function(params) {\n            var tool_panel_section = {};\n            if ($('#tool_panel_section_select').length) {\n                params.tool_panel_section_id = $('#tool_panel_section_select').find(\"option:selected\").val();\n            }\n            else {\n                params.new_tool_panel_section = $(\"#new_tool_panel_section\").val();\n            }\n            $('.tool_panel_section_picker').each(function() {\n                element_name = $(this).attr('name');\n                tool_guid = $(this).attr('data-toolguid');\n                if (element_name === 'tool_panel_section_id') {\n                    tool_panel_section[tool_guid] = { tool_panel_section: $(this).find(\"option:selected\").val(), action: 'append' }\n                }\n                else {\n                    tool_panel_section[tool_guid] = { tool_panel_section: $(this).val(), action: 'create' }\n                }\n            });\n            return tool_panel_section;\n        },\n\n        reDraw: function(options) {\n            this.$el.empty();\n            this.initialize(options);\n        },\n\n        repoQueued: function(metadata) {\n            var that = this;\n            if (!localStorage.repositories) {\n                return;\n            }\n            var repository_queue = JSON.parse(localStorage.repositories);\n            var changeset = metadata.changeset_revision;\n            var queue_key = that.queueKey(metadata);\n            if (localStorage.repositories) {\n                queued_repos = JSON.parse(localStorage.repositories);\n            }\n            if (queued_repos.hasOwnProperty(queue_key)) {\n                return true;\n            }\n            return false;\n        },\n\n        queueKey: function (metadata) {\n            var shed_url = this.model.tool_shed_url;\n            // Make sure there is never a trailing slash on the shed URL.\n            if (shed_url.substr(-1) == '/') {\n                shed_url = shed_url.substr(0, shed_url.length - 1);\n            }\n            return shed_url + '|' + metadata.repository_id + '|' + metadata.changeset_revision;\n        },\n\n        tpsSelection: function() {\n            new_tps = $('#tool_panel_section_select').find('option:selected').val();\n            $('.tool_panel_section_picker[default=\"active\"]').each(function() {\n                $(this).val(new_tps);\n            });\n        },\n\n        prepareInstall: function(params, api_url) {\n            var that = this;\n            $.post(api_url, params, function(data) {\n                iri_parameters = JSON.parse(data);\n                that.doInstall(iri_parameters);\n            });\n        },\n\n        doInstall: function(params) {\n            controller_url = Galaxy.root + 'admin_toolshed/manage_repositories';\n            var repositories = params.repositories;\n            var new_route = 'status/r/' + repositories.join('|');\n            $.post(controller_url, params, function(data) {\n                console.log( \"Initializing repository installation succeeded\" );\n            })\n            Backbone.history.navigate(new_route, {trigger: true, replace:true});\n        },\n\n        templateRepoDetails: _.template([\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n                '<div class=\"unified-panel-header-inner\">Repository information for <strong><%= repository.name %></strong> from <strong><%= repository.owner %></strong></div>',\n                '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            '</div>',\n            '<div class=\"unified-panel-body\" id=\"repository_details\" data-tsrid=\"<%= repository.id %>\">',\n                '<form id=\"repository_installation\" name=\"install_repository\" method=\"post\" action=\"<%= api_url %>\">',\n                    '<input type=\"hidden\" id=\"repositories\" name=\"<%= repository.id %>\" value=\"ID\" />',\n                    '<input type=\"hidden\" id=\"tool_shed_url\" name=\"tool_shed_url\" value=\"<%= tool_shed %>\" />',\n                    '<div class=\"toolForm\">',\n                        '<div class=\"toolFormTitle\">Changeset</div>',\n                        '<div class=\"toolFormBody changeset\">',\n                            '<select id=\"changeset\" name=\"changeset\" style=\"margin: 5px;\">',\n                                '<% _.each(Object.keys(repository.metadata), function(changeset) { %>',\n                                    '<% if (changeset == current_changeset) { var selected = \"selected \"; } else { var selected = \"\"; } %>',\n                                    '<option <%= selected %>value=\"<%= changeset.split(\":\")[1] %>\"><%= changeset %></option>',\n                                '<% }); %>',\n                            '</select>',\n                            '<input class=\"btn btn-primary preview-button\" data-tsrid=\"<\\%= current_metadata.repository.id \\%>\" type=\"submit\" id=\"install_repository\" name=\"install_repository\" value=\"Install this revision now\" />',\n                            '<input class=\"btn btn-primary preview-button\" type=\"button\" id=\"queue_install\" name=\"queue_install\" value=\"Install this revision later\" />',\n                            '<div class=\"toolParamHelp\" style=\"clear: both;\">Please select a revision and review the settings below before installing.</div>',\n                        '</div>',\n                    '</div>',\n                    '<%= shed_tool_conf %>',\n                    '<% if (current_metadata.has_repository_dependencies) { %>',\n                        '<div class=\"toolFormTitle\">Repository dependencies for <strong id=\"current_changeset\"><%= current_changeset %></strong></div>',\n                        '<div class=\"toolFormBody\">',\n                            '<p id=\"install_repository_dependencies_checkbox\">',\n                                '<input type=\"checkbox\" checked id=\"install_repository_dependencies\" />',\n                                '<label for=\"install_repository_dependencies\">Install repository dependencies</label>',\n                            '</p>',\n                            '<% current_metadata.repository_dependency_template = repository_dependency_template; %>',\n                            '<div class=\"tables container-table\" id=\"repository_dependencies\">',\n                                '<div class=\"expandLink\">',\n                                    '<a class=\"toggle_folder\" data_target=\"repository_dependencies_table\">',\n                                        'Repository dependencies &ndash; <em>installation of these additional repositories is required</em>',\n                                    '</a>',\n                                '</div>',\n                                '<%= repository_dependencies_template(current_metadata) %>',\n                            '</div>',\n                        '</div>',\n                    '<% } %>',\n                    '<% if (current_metadata.includes_tool_dependencies) { %>',\n                        '<div class=\"toolFormTitle\">Tool dependencies</div>',\n                        '<div class=\"toolFormBody\">',\n                            '<p id=\"install_resolver_dependencies_checkbox\">',\n                                '<input type=\"checkbox\" checked id=\"install_resolver_dependencies\" />',\n                                '<label for=\"install_resolver_dependencies\">Install resolver dependencies</label>',\n                            '</p>',\n                            '<p id=\"install_tool_dependencies_checkbox\">',\n                                '<input type=\"checkbox\" checked id=\"install_tool_dependencies\" />',\n                                '<label for=\"install_tool_dependencies\">Install tool dependencies</label>',\n                            '</p>',\n                            '<div class=\"tables container-table\" id=\"tool_dependencies\">',\n                                '<div class=\"expandLink\">',\n                                    '<a class=\"toggle_folder\" data_target=\"tool_dependencies_table\">',\n                                        'Tool dependencies &ndash; <em>repository tools require handling of these dependencies</em>',\n                                    '</a>',\n                                '</div>',\n                                '<table class=\"tables container-table\" id=\"tool_dependencies_table\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n                                    '<thead>',\n                                        '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n                                            '<th style=\"padding-left: 40px;\">Name</th>',\n                                            '<th>Version</th>',\n                                            '<th>Type</th>',\n                                        '</tr>',\n                                    '</thead>',\n                                    '<tbody id=\"tool_deps\">',\n                                        '<% _.each(tool_dependencies[current_changeset], function(dependency) { %>',\n                                            '<tr class=\"datasetRow tool_dependency_row\" style=\"display: table-row;\">',\n                                                '<td style=\"padding-left: 40px;\">',\n                                                '<%= dependency.name %></td>',\n                                                '<td><%= dependency.version %></td>',\n                                                '<td><%= dependency.type %></td>',\n                                            '</tr>',\n                                        '<% }); %>',\n                                    '</tbody>',\n                                '</table>',\n                            '</div>',\n                        '</div>',\n                    '<% } %>',\n                    '<% if (current_metadata.includes_tools_for_display_in_tool_panel) { %>',\n                        '<div class=\"toolFormTitle\">Tools &ndash; <em>click the name to preview the tool and use the pop-up menu to inspect all metadata</em></div>',\n                        '<div class=\"toolFormBody\">',\n                            '<div class=\"tables container-table\" id=\"tools_toggle\">',\n                                '<table class=\"tables container-table\" id=\"valid_tools\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n                                    '<thead>',\n                                        '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n                                            '<th style=\"padding-left: 40px;\">Name</th>',\n                                            '<th>Description</th>',\n                                            '<th>Version</th>',\n                                            '<th><%= tps_template_global_select({tps: panel_section_dict, tps_select_options: tps_select_options}) %></tr>',\n                                    '</thead>',\n                                    '<tbody id=\"tools_in_repo\">',\n                                            '<% _.each(current_metadata.tools, function(tool) { %>',\n                                                '<tr id=\"libraryItem-<%= tool.clean %>\" class=\"tool_row\" style=\"display: table-row;\" style=\"width: 15%\">',\n                                                    '<td style=\"padding-left: 40px;\">',\n                                                        '<div id=\"tool-<%= tool.clean %>\" class=\"menubutton split popup\" style=\"float: left;\">',\n                                                            '<a class=\"tool_form view-info\" data-toggle=\"modal\" data-target=\"toolform_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" data-guid=\"<%= tool.guid %>\" data-name=\"<%= tool.name %>\" data-desc=\"<%= tool.description %>\"><%= tool.name %></a>',\n                                                        '</div>',\n                                                    '</td>',\n                                                    '<td><%= tool.description %></td>',\n                                                    '<td style=\"width: 15%\"><%= tool.version %></td>',\n                                                    '<td style=\"width: 35%\" id=\"tool_tps_<%= tool.clean %>\">',\n                                                        '<%= tps_template_tool_select({tool: tool, tps: panel_section_dict, tps_select_options: tps_select_options}) %>',\n                                                    '</td>',\n                                                '</tr>',\n                                            '<% }); %>',\n                                    '</tbody>',\n                                '</table>',\n                            '</div>',\n                        '</div>',\n                    '<% } %>',\n                '</form>',\n            '</div>',\n        ].join('')),\n\n        templateRepoDependencies: _.template([\n            '<div class=\"toolFormTitle\">Repository Dependencies</div>',\n            '<div class=\"toolFormBody tables container-table\" id=\"repository_dependencies\">',\n                '<ul>',\n                    '<li>Repository installation requires the following',\n                        '<% if (has_repository_dependencies) { %>',\n                            '<% _.each(repository_dependencies, function(dependency) { %>',\n                                '<% dependency.repository_dependency_template = repository_dependency_template; %>',\n                                '<%= repository_dependency_template(dependency) %>',\n                            '<% }); %>',\n                        '<% } %>',\n                    '</li>',\n                '</ul>',\n            '</div>'].join('')),\n\n        templateRepoDependency: _.template([\n            '<li id=\"metadata_<%= id %>\" class=\"datasetRow repository_dependency_row\">',\n                'Repository <b><%= repository.name %></b> revision <b><%= changeset_revision %></b> owned by <b><%= repository.owner %></b>',\n                '<% if (has_repository_dependencies) { %>',\n                    '<ul class=\"child_dependencies\">',\n                        '<% _.each(repository_dependencies, function(dependency) { %>',\n                            '<% dependency.repository_dependency_template = repository_dependency_template; %>',\n                            '<%= repository_dependency_template(dependency) %>',\n                        '<% }); %>',\n                    '</ul>',\n                '<% } %>',\n            '</li>',\n        ].join('')),\n\n        templateShedToolConf: _.template([\n            '<div class=\"toolFormTitle\">Shed tool configuration file:</div>',\n            '<div class=\"toolFormBody\">',\n                '<div class=\"form-row\">',\n                    '<%= stc_html %>',\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">Select the file whose <b>tool_path</b> setting you want used for installing repositories.</div>',\n                '</div>',\n            '</div>',\n        ].join('')),\n\n        templateToolDependency: _.template([\n            '<% if (has_repository_dependencies) { %>',\n                '<% _.each(repository_dependencies, function(dependency) { %>',\n                    '<% if (dependency.includes_tool_dependencies) { %>',\n                        '<% dependency.tool_dependency_template = tool_dependency_template %>',\n                        '<%= tool_dependency_template(dependency) %>',\n                    '<% } %>',\n                '<% }); %>',\n            '<% } %>',\n        ].join('')),\n\n        templateGlobalSectionCreate: _.template([\n            '<div id=\"tool_panel_section\">',\n                '<div class=\"form-row\" id=\"new_tps\">',\n                    '<input id=\"new_tool_panel_section\" name=\"new_tool_panel_section\" type=\"textfield\" value=\"\" size=\"40\"/>',\n                    '<input class=\"btn btn-primary\" type=\"button\" id=\"select_existing\" value=\"Select existing\" />',\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n                        'Add a new tool panel section to contain the installed tools (optional).',\n                    '</div>',\n                '</div>',\n            '</div>',\n        ].join('')),\n\n        templateGlobalSectionSelect: _.template([\n            '<div id=\"tool_panel_section\">',\n                '<div class=\"toolFormTitle\">Tool Panel Section</div>',\n                '<div class=\"toolFormBody\">',\n                    '<div class=\"tab-pane\" id=\"select_tps\">',\n                        '<select name=\"<%= name %>\" id=\"<%= tps.id %>\">',\n                            '<%= tps_select_options({sections: tps.sections}) %>',\n                        '</select>',\n                        '<input class=\"btn btn-primary\" type=\"button\" id=\"create_new\" value=\"Create new\" />',\n                        '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n                            'Select an existing tool panel section to contain the installed tools (optional).',\n                        '</div>',\n                    '</div>',\n                '</div>',\n            '</div>',\n        ].join('')),\n\n        templateToolSectionCreate: _.template([\n            '<div id=\"new_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"form-row\">',\n                '<input data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" size=\"40\" name=\"new_tool_panel_section\" id=\"new_tool_panel_section_<%= tool.clean %>\" type=\"text\">',\n                '<input id=\"per_tool_select_<%= tool.clean %>\" class=\"btn btn-primary\" data-toolguid=\"<%= tool.guid %>\" value=\"Select existing\" id=\"select_existing_<%= tool.clean %>\" type=\"button\">',\n            '</div>',\n        ].join('')),\n\n        templateToolSectionSelect: _.template([\n            '<div id=\"select_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"tps_creator\">',\n                '<select default=\"active\" style=\"width: 30em;\" data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" name=\"tool_panel_section_id\" id=\"tool_panel_section_select_<%= tool.clean %>\">',\n                    '<%= tps_select_options({sections: tps.sections}) %>',\n                '</select>',\n                '<input id=\"per_tool_create_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"btn btn-primary create-tps-button\" data-toolguid=\"<%= tool.guid %>\" value=\"Create new\" id=\"create_new_<%= tool.clean %>\" type=\"button\">',\n                '<div style=\"clear: both;\" class=\"toolParamHelp\"></div>',\n            '</div>',\n        ].join('')),\n\n        templatePanelSelectOptions: _.template([\n            '<% _.each(sections, function(section) { %>',\n                '<option value=\"<%= section.id %>\"><%= section.name %></option>',\n            '<% }); %>',\n        ].join(''))\n    });\n\n    return {\n        RepoDetails: ToolShedRepositoryView,\n    };\n\n});\n\n"]}