{"version":3,"sources":["mvc/toolshed/categories-view.js"],"names":["define","toolshed_model","toolshed_util","CategoryView","ToolShedCategories","Backbone","View","el","defaults","tool_shed","initialize","options","shed","replace","this","model","listenTo","render","fetch","categories","category_list_template","queueLength","$","html","bindEvents","that","require","autocomplete","source","shed_url","base_url","Galaxy","root","term","console","log","tool_shed_url","result_list","post","params","data","minLength","shedParser","select","tsr_id","new_route","history","navigate","trigger","empty","reDraw","$el","url","templateCategoryList","_","template","join"],"mappings":"kCAAAA,QAAQ,8BAA+B,qBAAsB,SACzDC,EACAC,GAyHA,OACIC,aAxHAC,SAAqBC,KAASC,QAC9BC,GAAAA,UAEAC,UACIC,UAAAA,mCAGJC,WAAAA,SAAYC,GACR,IACAC,EAAIA,EAAOD,UAAQF,QAAUI,MAAQ,OACrCC,KAAAH,QAAKA,EAALH,SAAiBA,KAASG,SAAAA,EAAgBA,KAASH,UACnDM,KAAAC,MAAKA,IAAQd,EAAIA,WACjBa,KAAAE,SAAKA,KAASD,MAAKA,OAAOD,KAAQG,QAClCH,KAAAC,MAAKA,IAELD,KAAKC,MAAMN,IAAAA,kBAAXK,KAAAH,QAAAF,UACAK,KAAAC,MAAKA,UAALH,EACHE,KAjByCC,MAAAG,SAoBtCD,OAAA,SAAKN,GACLG,KAAAH,QAAKA,EAAQQ,OAAAA,KAAbR,QAA+BI,GAC/BD,KAAAH,QAAKA,WAAgBT,KAAAA,MAAAA,OACrBY,KAAAH,QAAIS,MAAAA,EAAyBC,cAC7B,IAAAD,EAAcA,KAAAA,qBACdE,KAAAA,IAAEC,KAAAH,EAA2BN,KAA7BH,UACAW,EAAA,WAAKE,IAAAA,WAAL,QACHV,KA3ByCU,cA8BtCA,WAAIC,WACJC,IAAAA,EAAAA,KACIJ,SAAAA,yBAAiBK,WACbC,EAAAA,eAAQD,cACJC,OAAA,SAAIC,EAAWJ,GAIf,IAAAI,EAAIC,EAAWC,MAAOC,UAAOnB,QAC7B,OACIoB,KADSH,EAAbC,OAAAC,KAAA,uBAIAV,GACIY,KAAAA,EAAQC,KACRC,cAAIC,GAEPf,EAAAgB,KAJDR,EAAAS,EAAA,SAAAC,GAXsBN,QAAAC,IAAAK,GAiB1BC,IAAAA,EAjB0BvC,EAAAwC,WAAAF,GAkB1BG,EAAQN,MAGJI,UAAA,EACIL,OAAAA,SAAAA,EAAAA,GACAQ,IAAAA,EAAAA,EAAQA,KAAAA,MAOyBC,GATrCd,OAAAC,KASSc,EAAQC,MAASF,UAI7B,gBAlCLpB,EAAAV,MAAAN,UADJ,MA/BsCmC,GA8D1BvC,SAASyC,QAAQC,SAASF,GASlCG,SAASrC,EACJsC,SAAT,UADJC,OAAQ,SAASvC,GAgDrBG,KAAOqC,IAAAF,QACH9C,KAAAA,MAAAA,IADJW,KAAAC,MAAAqC,IAAA,kBAAAtC,KAAAH,QAAAF,UA3HJK,KAAAJ,WAAAC,IAkFQ0C,qBAAsBC,EAAEC,UAEhB,0BACA,+CACA,6CACA,WACA,yEACA,4HACA,wJACA,SACA,wDACA,+DACA,4BACA,8LACA,UACA,SACA,8CACA,uBACA,iCACA,OACA,gBACA,uBACA,wBACA,QACA,WACA,gDACA,OACA,OACA,sGACA,QACA,8CACA,+CACA,QACA,YACA,WACA,SACA,UACFC,KAAK","file":"../../../scripts/mvc/toolshed/categories-view.js","sourcesContent":["define([\"mvc/toolshed/toolshed-model\", \"mvc/toolshed/util\"], function(\n    toolshed_model,\n    toolshed_util\n) {\n    var ToolShedCategories = Backbone.View.extend({\n        el: \"#center\",\n\n        defaults: {\n            tool_shed: \"https://toolshed.g2.bx.psu.edu/\"\n        },\n\n        initialize: function(options) {\n            var self = this;\n            var shed = options.tool_shed.replace(/\\//g, \"%2f\");\n            this.options = _.defaults(this.options || options, this.defaults);\n            this.model = new toolshed_model.Categories();\n            this.listenTo(this.model, \"sync\", this.render);\n            this.model.url =\n                this.model.url + \"?tool_shed_url=\" + this.options.tool_shed;\n            this.model.tool_shed = shed;\n            this.model.fetch();\n        },\n\n        render: function(options) {\n            this.options = _.extend(this.options, options);\n            this.options.categories = this.model.models;\n            this.options.queue = toolshed_util.queueLength();\n            var category_list_template = this.templateCategoryList;\n            this.$el.html(category_list_template(this.options));\n            $(\"#center\").css(\"overflow\", \"auto\");\n            this.bindEvents();\n        },\n\n        bindEvents: function() {\n            var that = this;\n            require([\"libs/jquery/jquery-ui\"], function() {\n                $(\"#search_box\").autocomplete({\n                    source: function(request, response) {\n                        var shed_url = that.model.tool_shed.replace(\n                            /%2f/g,\n                            \"/\"\n                        );\n                        var base_url = Galaxy.root + \"api/tool_shed/search\";\n                        var params = {\n                            term: request.term,\n                            tool_shed_url: shed_url\n                        };\n                        $.post(base_url, params, function(data) {\n                            console.log(data);\n                            var result_list = toolshed_util.shedParser(data);\n                            response(result_list);\n                        });\n                    },\n                    minLength: 3,\n                    select: function(event, ui) {\n                        var tsr_id = ui.item.value;\n                        var api_url = Galaxy.root + \"api/tool_shed/repository\";\n                        var params = {\n                            tool_shed_url: that.model.tool_shed,\n                            tsr_id: tsr_id\n                        };\n                        var new_route =\n                            \"repository/s/\" +\n                            that.model.tool_shed +\n                            \"/r/\" +\n                            tsr_id;\n                        Backbone.history.navigate(new_route, {\n                            trigger: true,\n                            replace: true\n                        });\n                    }\n                });\n            });\n        },\n\n        reDraw: function(options) {\n            this.$el.empty();\n            this.model.url =\n                this.model.url + \"?tool_shed_url=\" + this.options.tool_shed;\n            this.initialize(options);\n        },\n\n        templateCategoryList: _.template(\n            [\n                '<style type=\"text/css\">',\n                \".ui-autocomplete { background-color: #fff; }\",\n                \"li.ui-menu-item { list-style-type: none; }\",\n                \"</style>\",\n                '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n                '<div class=\"unified-panel-header-inner\" style=\"layout: inline;\">Categories in <%= tool_shed.replace(/%2f/g, \"/\") %></div>',\n                '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n                \"</div>\",\n                '<div class=\"unified-panel-body\" id=\"list_categories\">',\n                '<div id=\"standard-search\" style=\"height: 2em; margin: 1em;\">',\n                '<span class=\"ui-widget\" >',\n                '<input class=\"search-box-input\" id=\"search_box\" data-shedurl=\"<%= tool_shed.replace(/%2f/g, \"/\") %>\" name=\"search\" placeholder=\"Search repositories by name or id\" size=\"60\" type=\"text\" />',\n                \"</span>\",\n                \"</div>\",\n                '<div style=\"clear: both; margin-top: 1em;\">',\n                '<table class=\"grid\">',\n                '<thead id=\"grid-table-header\">',\n                \"<tr>\",\n                \"<th>Name</th>\",\n                \"<th>Description</th>\",\n                \"<th>Repositories</th>\",\n                \"</tr>\",\n                \"</thead>\",\n                \"<% _.each(categories, function(category) { %>\",\n                \"<tr>\",\n                \"<td>\",\n                '<a href=\"#/category/s/<%= tool_shed %>/c/<%= category.get(\"id\") %>\"><%= category.get(\"name\") %></a>',\n                \"</td>\",\n                '<td><%= category.get(\"description\") %></td>',\n                '<td><%= category.get(\"repositories\") %></td>',\n                \"</tr>\",\n                \"<% }); %>\",\n                \"</table>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        )\n    });\n\n    return {\n        CategoryView: ToolShedCategories\n    };\n});\n"]}