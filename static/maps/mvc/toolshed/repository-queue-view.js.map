{"version":3,"sources":["mvc/toolshed/repository-queue-view.js"],"names":["View","Backbone","extend","el","defaults","initialize","options","that","this","model","_toolshedModel2","default","RepoQueue","listenTo","render","fetch","templateRepoQueue","repositories","models","$el","html","title","_util2","queueLength","$","repo_queue_template","queue","attr","on","queue_key","bindEvents","JSON","parse","localStorage","hasOwnProperty","repository_id","repo_queue","repository","id","repository_metadata","remove","stringify","trigger","replace","install_tool_dependencies","params","install_repository_dependencies","install_resolver_dependencies","installFromQueue","tool_panel_section","shed_tool_conf","Object","tool_shed_repository_ids","tool_shed_url","root","split","url","undefined","repository_queue","post","iri_params","new_route","console","join","history","log","reDraw","empty","RepoQueueView","_","template"],"mappings":"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","file":"../../../scripts/mvc/toolshed/repository-queue-view.js","sourcesContent":["import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport toolshed_util from \"mvc/toolshed/util\";\nvar View = Backbone.View.extend({\n    el: \"#center\",\n\n    defaults: [{}],\n\n    initialize: function(options) {\n        var that = this;\n        this.model = new toolshed_model.RepoQueue();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.fetch();\n        that.render();\n    },\n\n    render: function(options) {\n        var that = this;\n        var repo_queue_template = that.templateRepoQueue;\n        var repositories = that.model.models;\n        that.$el.html(\n            repo_queue_template({\n                title: \"Repository Installation Queue\",\n                repositories: repositories,\n                queue: toolshed_util.queueLength()\n            })\n        );\n        $(\"#center\").css(\"overflow\", \"auto\");\n        that.bindEvents();\n    },\n\n    bindEvents: function() {\n        var that = this;\n        $(\".install_one\").on(\"click\", function() {\n            var repository_metadata = that.loadFromQueue(\n                $(this).attr(\"data-repokey\")\n            );\n            that.installFromQueue(\n                repository_metadata,\n                $(this).attr(\"data-repokey\")\n            );\n        });\n        $(\".remove_one\").on(\"click\", function() {\n            var queue_key = $(this).attr(\"data-repokey\");\n            var repo_queue = JSON.parse(localStorage.repositories);\n            if (repo_queue.hasOwnProperty(queue_key)) {\n                var repository_id = repo_queue[queue_key].repository.id;\n                delete repo_queue[queue_key];\n                $(`#queued_repository_${repository_id}`).remove();\n            }\n            localStorage.repositories = JSON.stringify(repo_queue);\n        });\n        $(\"#clear_queue\").on(\"click\", () => {\n            localStorage.repositories = \"{}\";\n        });\n        $(\"#from_workflow\").on(\"click\", () => {\n            Backbone.history.navigate(\"workflows\", {\n                trigger: true,\n                replace: true\n            });\n        });\n    },\n\n    installFromQueue: function(repository_metadata, queue_key) {\n        var that = this;\n        var params = Object();\n        params.install_tool_dependencies =\n            repository_metadata.install_tool_dependencies;\n        params.install_repository_dependencies =\n            repository_metadata.install_repository_dependencies;\n        params.install_resolver_dependencies =\n            repository_metadata.install_resolver_dependencies;\n        params.tool_panel_section = repository_metadata.tool_panel_section;\n        params.shed_tool_conf = repository_metadata.shed_tool_conf;\n        params.repositories = JSON.stringify([\n            [\n                repository_metadata.repository.id,\n                repository_metadata.changeset_revision\n            ]\n        ]);\n        params.tool_shed_repository_ids = JSON.stringify([\n            repository_metadata.repository.id\n        ]);\n        params.tool_shed_url = queue_key.split(\"|\")[0];\n        params.changeset = repository_metadata.changeset_revision;\n        var url = `${Galaxy.root}api/tool_shed_repositories/install?async=True`;\n        $(`#queued_repository_${repository_metadata.repository.id}`).remove();\n        if (localStorage.repositories) {\n            if (queue_key === undefined) {\n                queue_key = toolshed_util.queueKey(repository_metadata);\n            }\n            var repository_queue = JSON.parse(localStorage.repositories);\n            if (repository_queue.hasOwnProperty(queue_key)) {\n                delete repository_queue[queue_key];\n                localStorage.repositories = JSON.stringify(repository_queue);\n            }\n        }\n\n        $.post(url, params, data => {\n            var iri_params = JSON.parse(data);\n            var repositories = iri_params.repositories;\n            var new_route = `status/r/${repositories.join(\"|\")}`;\n            $.post(\n                `${Galaxy.root}admin_toolshed/install_repositories`,\n                iri_params,\n                data => {\n                    console.log(\n                        \"Initializing repository installation succeeded\"\n                    );\n                }\n            );\n            Backbone.history.navigate(new_route, {\n                trigger: true,\n                replace: true\n            });\n        });\n    },\n\n    loadFromQueue: function(queue_key) {\n        var repository_queue = JSON.parse(localStorage.repositories);\n        if (repository_queue.hasOwnProperty(queue_key)) {\n            return repository_queue[queue_key];\n        }\n        return undefined;\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.initialize(options);\n        this.model.fetch();\n        this.render(options);\n    },\n\n    templateRepoQueue: _.template(\n        [\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\"><%= title %></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<div class=\"tab-pane\" id=\"panel_header\" id=\"repository_queue\">',\n            '<table id=\"queued_repositories\" class=\"grid\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            '<thead id=\"grid-table-header\">',\n            \"<tr>\",\n            '<th class=\"datasetRow\">Name</th>',\n            '<th class=\"datasetRow\">Owner</th>',\n            '<th class=\"datasetRow\">Revision</th>',\n            '<th class=\"datasetRow\">ToolShed</th>',\n            '<th class=\"datasetRow\">Install</th>',\n            '<th class=\"datasetRow\"><input class=\"btn btn-primary\" type=\"submit\" id=\"clear_queue\" name=\"clear_queue\" value=\"Clear queue\" /></th>',\n            \"</tr>\",\n            \"</thead>\",\n            \"<tbody>\",\n            \"<% _.each(repositories, function(repository) { %>\",\n            '<tr id=\"queued_repository_<%= repository.get(\"id\") %>\">',\n            '<td class=\"datasetRow\"><%= repository.get(\"repository\").name %></td>',\n            '<td class=\"datasetRow\"><%= repository.get(\"repository\").owner %></td>',\n            '<td class=\"datasetRow\"><%= repository.get(\"changeset_revision\") %></td>',\n            '<td class=\"datasetRow\"><%= repository.get(\"tool_shed_url\") %></td>',\n            '<td class=\"datasetRow\">',\n            '<input class=\"btn btn-primary install_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"install_repository_<%= repository.get(\"id\") %>\" name=\"install_repository\" value=\"Install now\" />',\n            \"</td>\",\n            '<td class=\"datasetRow\">',\n            '<input class=\"btn btn-primary remove_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"unqueue_repository_<%= repository.get(\"id\") %>\" name=\"unqueue_repository\" value=\"Remove from queue\" />',\n            \"</td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            \"</table>\",\n            '<input type=\"button\" class=\"btn btn-primary\" id=\"from_workflow\" value=\"Add from workflow\" />',\n            \"</div>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    RepoQueueView: View\n};\n"]}