{"version":3,"sources":["mvc/citations.js"],"names":["bibtexParse","Citation","Backbone","Model","extend","_baseMvc2","default","LoggableMixin","_logNamespace","defaults","content","initialize","parsed","toJSON","this","attributes","err","log","_fields","entry","_","first","rawFields","entryTags","key","value","lowerKey","toLowerCase","logNamespace","entryType","undefined","BaseCitationCollection","Collection","urlRoot","Galaxy","partial","model","HistoryCitationCollection","url","history_id","ToolCitationCollection","fields","CitationView","View","tagName","className","render","$el","append","formattedReference","root","ref","authorsAndYear","_asSentence","author","year","title","pages","address","volume","number","tool_id","journal","booktitle","howpublished","note","institution","_formatBookInfo","doiUrl","doi","_latexToUnicodeConverter","convertLaTeX","onError","error","latex","_latexParser","stringifyLaTeX","chapter","info","editor","publisher","series","issn","str","trim","CitationListView","setElement","listenTo","collection","renderCitation","events","click .citations-to-formatted","citation","citationView","el","rawTextarea","$","val","each","item","showFormatted","showBibtex","show","hide","select","partialWarningElement","join","citationsElement","_localization2"],"mappings":"iRAAYA,2KAeRC,EAAWC,SAASC,MAAMC,OAAOC,EAAAC,QAAQC,eAAeH,QACxDI,cAPe,WASfC,UACIC,QAAS,IAGbC,WAAY,WACR,IAAIC,EACJ,IAEIA,EAASZ,EAAYa,OAAOC,KAAKC,WAAWL,SAC9C,MAAOM,GACLF,KAAKG,IAAI,yBAA2BD,GAKxC,GAFAF,KAAKI,WACLJ,KAAKK,MAAQC,EAAEC,MAAMT,GACjBE,KAAKK,MAAO,CACZ,IAAIG,EAAYR,KAAKK,MAAMI,UAC3B,IAAK,IAAIC,KAAOF,EAAW,CA5BvC,IAAAG,EAAAH,EAAAE,GA8BoBE,EAAWF,EAAIG,cA5B/BC,KAAAA,QAAeF,GAAnBD,KAiCII,UAAW,WACP,OAAOf,KAAKK,MAAQL,KAAKK,MAAMU,eAAYC,GA3B/CtB,OAAAA,WA8BI,OAAOM,KAAKI,WAtBZa,EAAI7B,SAAA8B,WAAA5B,OAAAC,EAAAC,QAAAC,eAAAH,QACAI,cAhBO,WAmBPyB,QAAAC,OAAKjB,KAAL,MACHkB,SAAA,EA8BLC,MAAOnC,IA1BHoC,EAAgBN,EAAA3B,QAEZkC,IAAA,WACI,OAAAxB,KAAAmB,QAAA,cAAsBT,KAAtBe,WAAA,gBAIPC,EAAAT,EAAA3B,QAELyB,IAAAA,WACI,OAAAf,KAAOmB,QAAP,UAAyBd,KAAMU,QAA/B,cAEJY,SAAAA,IA9B+DC,EAAnExC,SAAAyC,KAAAvC,QA+DIwC,QAAS,MA5BbC,UAAA,YACAC,OAAA,WAEIf,OA4BIjB,KAAKiC,IAAIC,OAAT,MAAsBlC,KAAKmC,qBAA3B,QA5BJlB,MA+BAkB,mBAAoB,WA5BpB,IAAAb,EAAAtB,KAAAsB,MACAH,EAAmBiB,EAAnBrB,YACAM,EALkFC,EAKnEK,SALnBU,EAAA,GAUIC,EAAAtC,KAAAuC,aACKZ,EAAAa,OAAWb,EAAAa,OAAA,KAAAb,EAAAc,KAAA,KAAAd,EAAAc,KAAA,IAAA,KADhB,IAGCC,EAAAf,EAAAe,OAAA,GAJLC,EAAAhB,EAAAgB,MAAA,OAAAhB,EAAAgB,MAAA,GAmCYC,EAAUjB,EAAOiB,QA5BzBlB,GAAAA,WAAAA,EAAyBT,CACzB,IAAA4B,GACKlB,EAAAkB,OAAWlB,EAAAkB,OAAA,KACZlB,EAAeR,OAAf,KAAAQ,EAAAmB,OAAA,IAAqCC,KAHcJ,EAAAA,KAAAA,EAAA,IAKvDtB,EAASiB,EALbtC,KAAAuC,YAAAG,IAoCiBf,EAAOqB,QAAP,UAA2BrB,EAAOqB,QAAlC,KAAgD,IA5B7DpB,KAAAA,YAAwBC,GACxBC,KAASS,YAD2BZ,EAAAiB,SAHpCvB,aAMAW,EAHoC,iBAEzBjB,GAFyB,eAAAA,EAG5BuB,EACJtC,KAASkC,YAATQ,IACAf,EAAAsB,UAAA,UAAAtB,EAAAsB,UAAA,KAAA,KALgCN,GAAA,KAOpCR,EAAAA,KAAoBS,EAAA,IAJpBZ,SAKqBV,iBAAbA,GAAJ,aAAAP,EAEIY,EA8BI3B,KAAKuC,YAAYG,IA5BrBL,EAAJa,aAAAvB,EAAAuB,aAAIb,KAAJ,KACAV,EAAAwB,KAAAxB,EAAAwB,KAAA,IAAA,IACA,cAAApC,EAII2B,EACAC,KAAAA,YAAeA,GACfC,KAAAA,YAAiBA,EAArBQ,aACIrC,KAAAA,YAAaY,EAAWmB,QACxB9C,KAAI6C,YACClB,EAAOkB,MAGHP,QAATD,GACI,UAAAtB,GACC,gBAAAY,EAGFW,EAAN,IAAuBtC,KAAAqD,gBAAmBtC,GAMpCuB,EAAN,IAAuBtC,KAAAuC,YAAmBxB,GAAAA,KAAawB,YACpDF,EACIC,cAFDtC,KAMAuC,YAAIxB,EAAaoC,MAOvB,IAAAG,EAAM,GACHjB,EAAAA,MAEAA,GAAAA,cADHiB,EAAAA,qBAAM3B,EAAA4B,KACHlB,yBAA4CK,EAA5Ca,IAAAlB,SAIJ,IAAAb,EAAI8B,EAAS9B,KAAb8B,EAIC,OAHD9B,IACI8B,GAAAA,aAAAA,EAAAA,gCAEH,EAAAE,EAAAC,eAAAC,QAAA,SAAAC,EAAAC,GAAA,MAAA,KAAA,EAAAC,EAAAC,gBAAAF,GAAA,MAAAvB,IAEDgB,gBAAS,SAAA1B,GACLU,IAAAA,EAAAA,GAuBH,OAtBAV,EAAAoC,UACDC,GAAOrC,EAAAoC,QAAP,QAA8BpC,EAAvBe,QAlEyBsB,GAAAA,OAAArC,EAAAe,MAAA,SAqEhCf,EAAIqC,SACJA,GAAAA,eAAoBrC,EAAAsC,OAApB,MAECtC,EAAAuC,YACDF,GAAAA,KAAWtB,EAAOwB,WAEjBvC,EAAAgB,QACDqB,GAAAA,SAAArC,EAAmBgB,OAElBhB,EAAAwC,SACDH,GAAAA,SAAWE,EAAWC,OAAtB,SAECxC,EAAAkB,SACDmB,GAAAA,SAAArC,EAAkBkB,QAEjBlB,EAAAyC,OACDJ,GAAAA,WAAmBrC,EAAAyC,MAElBJ,EAAA,KAEGA,YAAAA,SAAAA,GACH,OAAAK,GAAAA,EAAAC,OAAAD,EAAA,KAAA,MAIDE,EAAAnF,SAAAyC,KAAAvC,QAIHO,WAAA,WAlGLG,KAAAwE,WAAA,UA2GQxE,KAAKyE,SAASzE,KAAK0E,WAAY,MAAO1E,KAAK2E,gBAN/CJ,KAAAA,UAUAK,QANA/E,6BAAY,aACRgF,gCAAA,iBAGHF,eARuC,SAAAG,GAgBpC,IAAIC,EAAe,IAAInD,GAAeN,MAAOwD,IANjDF,KAAAA,EAAAA,wBAAQ1C,OAAA6C,EAAA/C,SAAAgD,IACJ,IAAAC,EAAAjF,KAAAkF,EAAA,0BACAD,EAAAE,IAAAF,EAAAE,MAAA,OAAiCL,EAAA7E,WAAAL,UAGrC+E,OAAAA,WACI3E,KAAAiC,IAAI8C,KAAAA,KAAAA,oBACJ/E,KAAA0E,WAAOU,KAAA,SAAAC,GACPrF,KAAIiF,eAAcI,IAClBJ,MACHjF,KApBuCsF,iBAuBpCC,WAAA,WACAvF,KAAAkF,EAAA,2BAAqBM,OACjBxF,KAAAkF,EAAA,wBAAoBG,OACvBrF,KAFDkF,EAEG,qBAFHM,OAGAxF,KAAAkF,EAAA,wBAAAO,OACHzF,KA5BuCkF,EAAA,0BAAAQ,UA+BpCJ,cAAO,WACPtF,KAAAkF,EAAA,2BAAAO,OACAzF,KAAAkF,EAAA,wBAAAM,OACAxF,KAAAkF,EAAA,qBAAOO,OACPzF,KAAAkF,EAAA,wBAAOM,QAGXF,sBAAe,WACX,OAAAtF,KAAKkF,WAAE7D,SAEP,iCACA,sFA1CoC,qFAmD5B,iDANZsE,4FACQ,sEACA,UADJC,KAUO,IAEN,IAIDC,iBACI,WAeP,OA9EL,yBAgEY,+BACA,EAAAC,EAAAtG,SAAG,aAiBXL,8JACAoC,+JACAG,SACAE,sDACA2C,KAAAA,wBAfQ,2EACA,SACA,uEACA,0FACA,SACA,UACFqB,KAAK,kBAKXzG,SAAUA,EACVoC,0BAA2BA,EAC3BG,uBAAwBA,EACxBE,aAAcA,EACd2C,iBAAkBA","file":"../../scripts/mvc/citations.js","sourcesContent":["import * as bibtexParse from \"libs/bibtexParse\";\nimport baseMVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport {convertLaTeX} from 'latex-to-unicode-converter';\nimport {stringifyLaTeX} from 'latex-parser';\n\n\n/* global Backbone */\n\nvar logNamespace = \"citation\";\n//==============================================================================\n/** @class model for tool citations.\n *  @name Citation\n *  @augments Backbone.Model\n */\nvar Citation = Backbone.Model.extend(baseMVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    defaults: {\n        content: \"\"\n    },\n\n    initialize: function() {\n        var parsed;\n        try {\n            // TODO: to model.parse/.validate\n            parsed = bibtexParse.toJSON(this.attributes.content);\n        } catch (err) {\n            this.log(\"Error parsing bibtex: \" + err);\n        }\n\n        this._fields = {};\n        this.entry = _.first(parsed);\n        if (this.entry) {\n            var rawFields = this.entry.entryTags;\n            for (var key in rawFields) {\n                var value = rawFields[key];\n                var lowerKey = key.toLowerCase();\n                this._fields[lowerKey] = value;\n            }\n        }\n    },\n    entryType: function() {\n        return this.entry ? this.entry.entryType : undefined;\n    },\n    fields: function() {\n        return this._fields;\n    }\n});\n\n//==============================================================================\n/** @class Backbone collection of citations.\n */\nvar BaseCitationCollection = Backbone.Collection.extend(baseMVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    /** root api url */\n    urlRoot: `${Galaxy.root}api`,\n    partial: true, // Assume some tools in history/workflow may not be properly annotated yet.\n    model: Citation\n});\n\nvar HistoryCitationCollection = BaseCitationCollection.extend({\n    /** complete api url */\n    url: function() {\n        return `${this.urlRoot}/histories/${this.history_id}/citations`;\n    }\n});\n\nvar ToolCitationCollection = BaseCitationCollection.extend({\n    /** complete api url */\n    url: function() {\n        return `${this.urlRoot}/tools/${this.tool_id}/citations`;\n    },\n    partial: false // If a tool has citations, assume they are complete.\n});\n\nvar CitationView = Backbone.View.extend({\n    tagName: \"div\",\n    className: \"citations\",\n    render: function() {\n        this.$el.append(`<p>${this.formattedReference()}</p>`);\n        return this;\n    },\n    formattedReference: function() {\n        var model = this.model;\n        var entryType = model.entryType();\n        var fields = model.fields();\n\n        var ref = \"\";\n        // Code inspired by...\n        // https://github.com/vkaravir/bib-publication-list/blob/master/src/bib-publication-list.js\n        var authorsAndYear = `${this._asSentence(\n            (fields.author ? fields.author : \"\") + (fields.year ? ` (${fields.year})` : \"\")\n        )} `;\n        var title = fields.title || \"\";\n        var pages = fields.pages ? `pp. ${fields.pages}` : \"\";\n        var address = fields.address;\n        if (entryType == \"article\") {\n            var volume =\n                (fields.volume ? fields.volume : \"\") +\n                (fields.number ? ` (${fields.number})` : \"\") +\n                (pages ? `, ${pages}` : \"\");\n            ref = `${authorsAndYear +\n                this._asSentence(title) +\n                (fields.journal ? `In <em>${fields.journal}, ` : \"\") +\n                this._asSentence(volume) +\n                this._asSentence(fields.address)}</em>`;\n        } else if (entryType == \"inproceedings\" || entryType == \"proceedings\") {\n            ref = `${authorsAndYear +\n                this._asSentence(title) +\n                (fields.booktitle ? `In <em>${fields.booktitle}, ` : \"\") +\n                (pages ? pages : \"\") +\n                (address ? `, ${address}` : \"\")}.</em>`;\n        } else if (entryType == \"mastersthesis\" || entryType == \"phdthesis\") {\n            ref =\n                authorsAndYear +\n                this._asSentence(title) +\n                (fields.howpublished ? `${fields.howpublished}. ` : \"\") +\n                (fields.note ? `${fields.note}.` : \"\");\n        } else if (entryType == \"techreport\") {\n            ref =\n                authorsAndYear +\n                this._asSentence(title) +\n                this._asSentence(fields.institution) +\n                this._asSentence(fields.number) +\n                this._asSentence(fields.type);\n        } else if (entryType == \"book\" || entryType == \"inbook\" || entryType == \"incollection\") {\n            ref = `${authorsAndYear} ${this._formatBookInfo(fields)}`;\n        } else {\n            ref = `${authorsAndYear} ${this._asSentence(title)}${this._asSentence(\n                fields.howpublished\n            )}${this._asSentence(fields.note)}`;\n        }\n        var doiUrl = \"\";\n        if (fields.doi) {\n            doiUrl = `http://dx.doi.org/${fields.doi}`;\n            ref += `[<a href=\"${doiUrl}\" target=\"_blank\">doi:${fields.doi}</a>]`;\n        }\n        var url = fields.url || doiUrl;\n        if (url) {\n            ref += `[<a href=\"${url}\" target=\"_blank\">Link</a>]`;\n        }\n        return convertLaTeX({onError: (error, latex) => `\\{${stringifyLaTeX(latex)}\\}`}, ref);\n    },\n    _formatBookInfo: function(fields) {\n        var info = \"\";\n        if (fields.chapter) {\n            info += `${fields.chapter} in `;\n        }\n        if (fields.title) {\n            info += `<em>${fields.title}</em>`;\n        }\n        if (fields.editor) {\n            info += `, Edited by ${fields.editor}, `;\n        }\n        if (fields.publisher) {\n            info += `, ${fields.publisher}`;\n        }\n        if (fields.pages) {\n            info += `, pp. ${fields.pages}`;\n        }\n        if (fields.series) {\n            info += `, <em>${fields.series}</em>`;\n        }\n        if (fields.volume) {\n            info += `, Vol.${fields.volume}`;\n        }\n        if (fields.issn) {\n            info += `, ISBN: ${fields.issn}`;\n        }\n        return `${info}.`;\n    },\n    _asSentence: function(str) {\n        return str && str.trim() ? `${str}. ` : \"\";\n    }\n});\n\nvar CitationListView = Backbone.View.extend({\n    /**\n     * Set up view.\n     */\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        this.listenTo(this.collection, \"add\", this.renderCitation);\n        this.render();\n    },\n\n    events: {\n        \"click .citations-to-bibtex\": \"showBibtex\",\n        \"click .citations-to-formatted\": \"showFormatted\"\n    },\n\n    renderCitation: function(citation) {\n        var citationView = new CitationView({ model: citation });\n        this.$(\".citations-formatted\").append(citationView.render().el);\n        var rawTextarea = this.$(\".citations-bibtex-text\");\n        rawTextarea.val(`${rawTextarea.val()}\\n\\r${citation.attributes.content}`);\n    },\n\n    render: function() {\n        this.$el.html(this.citationsElement());\n        this.collection.each(function(item) {\n            this.renderCitation(item);\n        }, this);\n        this.showFormatted();\n    },\n\n    showBibtex: function() {\n        this.$(\".citations-to-formatted\").show();\n        this.$(\".citations-to-bibtex\").hide();\n        this.$(\".citations-bibtex\").show();\n        this.$(\".citations-formatted\").hide();\n        this.$(\".citations-bibtex-text\").select();\n    },\n\n    showFormatted: function() {\n        this.$(\".citations-to-formatted\").hide();\n        this.$(\".citations-to-bibtex\").show();\n        this.$(\".citations-bibtex\").hide();\n        this.$(\".citations-formatted\").show();\n    },\n\n    partialWarningElement: function() {\n        if (this.collection.partial) {\n            return [\n                '<div style=\"padding:5px 10px\">',\n                \"<b>Warning: This is a experimental feature.</b> Most Galaxy tools will not annotate\",\n                \" citations explicitly at this time. When writing up your analysis, please manually\",\n                \" review your histories and find all references\",\n                \" that should be cited in order to completely describe your work. Also, please remember to\",\n                ' <a href=\"https://galaxyproject.org/citing-galaxy\">cite Galaxy</a>.',\n                \"</div>\"\n            ].join(\"\");\n        } else {\n            return \"\";\n        }\n    },\n\n    citationsElement: function() {\n        return [\n            '<div class=\"toolForm\">',\n            '<div class=\"toolFormTitle\">',\n            _l(\"Citations\"),\n            ' <button type=\"button\" class=\"btn btn-xs citations-to-bibtex\" title=\"Show all in BibTeX format.\"><i class=\"fa fa-pencil-square-o\"></i> Show BibTeX</button>',\n            ' <button type=\"button\" class=\"btn btn-xs citations-to-formatted\" title=\"Return to formatted citation list.\"><i class=\"fa fa-times\"></i> Hide BibTeX</button>',\n            \"</div>\",\n            '<div class=\"toolFormBody\" style=\"padding:5px 10px\">',\n            this.partialWarningElement(),\n            '<span class=\"citations-formatted\" style=\"word-wrap: break-word;\"></span>',\n            \"</div>\",\n            '<div class=\"citations-bibtex toolFormBody\" style=\"padding:5px 10px\">',\n            '<textarea style=\"width: 100%; height: 500px;\" class=\"citations-bibtex-text\"></textarea>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\");\n    }\n});\n\nexport default {\n    Citation: Citation,\n    HistoryCitationCollection: HistoryCitationCollection,\n    ToolCitationCollection: ToolCitationCollection,\n    CitationView: CitationView,\n    CitationListView: CitationListView\n};\n"]}