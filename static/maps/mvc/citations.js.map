{"version":3,"sources":["mvc/citations.js"],"names":["bibtexParse","Citation","Backbone","Model","extend","_baseMvc2","default","LoggableMixin","_logNamespace","defaults","content","initialize","parsed","toJSON","this","attributes","err","log","_fields","entry","_","first","rawFields","entryTags","key","value","lowerKey","toLowerCase","entryType","undefined","fields","BaseCitationCollection","Collection","urlRoot","Galaxy","root","model","HistoryCitationCollection","url","history_id","ToolCitationCollection","tool_id","View","tagName","className","render","$el","append","formattedReference","logNamespace","authorsAndYear","_asSentence","author","year","title","pages","address","volume","journal","partial","CitationView","booktitle","howpublished","note","number","type","_formatBookInfo","ref","doi","doiUrl","info","chapter","editor","publisher","series","issn","CitationListView","setElement","listenTo","collection","renderCitation","events","click .citations-to-bibtex","citation","citationView","$","el","rawTextarea","val","citationsElement","item","hide","select","showBibtex","show","partialWarningElement","showFormatted","join","_localization2"],"mappings":"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","file":"../../scripts/mvc/citations.js","sourcesContent":["import * as bibtexParse from \"libs/bibtexParse\";\nimport baseMVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n/* global Backbone */\n\nvar logNamespace = \"citation\";\n//==============================================================================\n/** @class model for tool citations.\n *  @name Citation\n *  @augments Backbone.Model\n */\nvar Citation = Backbone.Model.extend(baseMVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    defaults: {\n        content: \"\"\n    },\n\n    initialize: function() {\n        var parsed;\n        try {\n            // TODO: to model.parse/.validate\n            parsed = bibtexParse.toJSON(this.attributes.content);\n        } catch (err) {\n            this.log(\"Error parsing bibtex: \" + err);\n        }\n\n        this._fields = {};\n        this.entry = _.first(parsed);\n        if (this.entry) {\n            var rawFields = this.entry.entryTags;\n            for (var key in rawFields) {\n                var value = rawFields[key];\n                var lowerKey = key.toLowerCase();\n                this._fields[lowerKey] = value;\n            }\n        }\n    },\n    entryType: function() {\n        return this.entry ? this.entry.entryType : undefined;\n    },\n    fields: function() {\n        return this._fields;\n    }\n});\n\n//==============================================================================\n/** @class Backbone collection of citations.\n */\nvar BaseCitationCollection = Backbone.Collection.extend(baseMVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    /** root api url */\n    urlRoot: `${Galaxy.root}api`,\n    partial: true, // Assume some tools in history/workflow may not be properly annotated yet.\n    model: Citation\n});\n\nvar HistoryCitationCollection = BaseCitationCollection.extend({\n    /** complete api url */\n    url: function() {\n        return `${this.urlRoot}/histories/${this.history_id}/citations`;\n    }\n});\n\nvar ToolCitationCollection = BaseCitationCollection.extend({\n    /** complete api url */\n    url: function() {\n        return `${this.urlRoot}/tools/${this.tool_id}/citations`;\n    },\n    partial: false // If a tool has citations, assume they are complete.\n});\n\nvar CitationView = Backbone.View.extend({\n    tagName: \"div\",\n    className: \"citations\",\n    render: function() {\n        this.$el.append(`<p>${this.formattedReference()}</p>`);\n        return this;\n    },\n    formattedReference: function() {\n        var model = this.model;\n        var entryType = model.entryType();\n        var fields = model.fields();\n\n        var ref = \"\";\n        // Code inspired by...\n        // https://github.com/vkaravir/bib-publication-list/blob/master/src/bib-publication-list.js\n        var authorsAndYear = `${this._asSentence(\n            (fields.author ? fields.author : \"\") + (fields.year ? ` (${fields.year})` : \"\")\n        )} `;\n        var title = fields.title || \"\";\n        var pages = fields.pages ? `pp. ${fields.pages}` : \"\";\n        var address = fields.address;\n        if (entryType == \"article\") {\n            var volume =\n                (fields.volume ? fields.volume : \"\") +\n                (fields.number ? ` (${fields.number})` : \"\") +\n                (pages ? `, ${pages}` : \"\");\n            ref = `${authorsAndYear +\n                this._asSentence(title) +\n                (fields.journal ? `In <em>${fields.journal}, ` : \"\") +\n                this._asSentence(volume) +\n                this._asSentence(fields.address)}</em>`;\n        } else if (entryType == \"inproceedings\" || entryType == \"proceedings\") {\n            ref = `${authorsAndYear +\n                this._asSentence(title) +\n                (fields.booktitle ? `In <em>${fields.booktitle}, ` : \"\") +\n                (pages ? pages : \"\") +\n                (address ? `, ${address}` : \"\")}.</em>`;\n        } else if (entryType == \"mastersthesis\" || entryType == \"phdthesis\") {\n            ref =\n                authorsAndYear +\n                this._asSentence(title) +\n                (fields.howpublished ? `${fields.howpublished}. ` : \"\") +\n                (fields.note ? `${fields.note}.` : \"\");\n        } else if (entryType == \"techreport\") {\n            ref =\n                authorsAndYear +\n                this._asSentence(title) +\n                this._asSentence(fields.institution) +\n                this._asSentence(fields.number) +\n                this._asSentence(fields.type);\n        } else if (entryType == \"book\" || entryType == \"inbook\" || entryType == \"incollection\") {\n            ref = `${authorsAndYear} ${this._formatBookInfo(fields)}`;\n        } else {\n            ref = `${authorsAndYear} ${this._asSentence(title)}${this._asSentence(\n                fields.howpublished\n            )}${this._asSentence(fields.note)}`;\n        }\n        var doiUrl = \"\";\n        if (fields.doi) {\n            doiUrl = `http://dx.doi.org/${fields.doi}`;\n            ref += `[<a href=\"${doiUrl}\" target=\"_blank\">doi:${fields.doi}</a>]`;\n        }\n        var url = fields.url || doiUrl;\n        if (url) {\n            ref += `[<a href=\"${url}\" target=\"_blank\">Link</a>]`;\n        }\n        return ref;\n    },\n    _formatBookInfo: function(fields) {\n        var info = \"\";\n        if (fields.chapter) {\n            info += `${fields.chapter} in `;\n        }\n        if (fields.title) {\n            info += `<em>${fields.title}</em>`;\n        }\n        if (fields.editor) {\n            info += `, Edited by ${fields.editor}, `;\n        }\n        if (fields.publisher) {\n            info += `, ${fields.publisher}`;\n        }\n        if (fields.pages) {\n            info += `, pp. ${fields.pages}`;\n        }\n        if (fields.series) {\n            info += `, <em>${fields.series}</em>`;\n        }\n        if (fields.volume) {\n            info += `, Vol.${fields.volume}`;\n        }\n        if (fields.issn) {\n            info += `, ISBN: ${fields.issn}`;\n        }\n        return `${info}.`;\n    },\n    _asSentence: function(str) {\n        return str && str.trim() ? `${str}. ` : \"\";\n    }\n});\n\nvar CitationListView = Backbone.View.extend({\n    /**\n     * Set up view.\n     */\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        this.listenTo(this.collection, \"add\", this.renderCitation);\n        this.render();\n    },\n\n    events: {\n        \"click .citations-to-bibtex\": \"showBibtex\",\n        \"click .citations-to-formatted\": \"showFormatted\"\n    },\n\n    renderCitation: function(citation) {\n        var citationView = new CitationView({ model: citation });\n        this.$(\".citations-formatted\").append(citationView.render().el);\n        var rawTextarea = this.$(\".citations-bibtex-text\");\n        rawTextarea.val(`${rawTextarea.val()}\\n\\r${citation.attributes.content}`);\n    },\n\n    render: function() {\n        this.$el.html(this.citationsElement());\n        this.collection.each(function(item) {\n            this.renderCitation(item);\n        }, this);\n        this.showFormatted();\n    },\n\n    showBibtex: function() {\n        this.$(\".citations-to-formatted\").show();\n        this.$(\".citations-to-bibtex\").hide();\n        this.$(\".citations-bibtex\").show();\n        this.$(\".citations-formatted\").hide();\n        this.$(\".citations-bibtex-text\").select();\n    },\n\n    showFormatted: function() {\n        this.$(\".citations-to-formatted\").hide();\n        this.$(\".citations-to-bibtex\").show();\n        this.$(\".citations-bibtex\").hide();\n        this.$(\".citations-formatted\").show();\n    },\n\n    partialWarningElement: function() {\n        if (this.collection.partial) {\n            return [\n                '<div style=\"padding:5px 10px\">',\n                \"<b>Warning: This is a experimental feature.</b> Most Galaxy tools will not annotate\",\n                \" citations explicitly at this time. When writing up your analysis, please manually\",\n                \" review your histories and find all references\",\n                \" that should be cited in order to completely describe your work. Also, please remember to\",\n                ' <a href=\"https://galaxyproject.org/citing-galaxy\">cite Galaxy</a>.',\n                \"</div>\"\n            ].join(\"\");\n        } else {\n            return \"\";\n        }\n    },\n\n    citationsElement: function() {\n        return [\n            '<div class=\"toolForm\">',\n            '<div class=\"toolFormTitle\">',\n            _l(\"Citations\"),\n            ' <button type=\"button\" class=\"btn btn-xs citations-to-bibtex\" title=\"Show all in BibTeX format.\"><i class=\"fa fa-pencil-square-o\"></i> Show BibTeX</button>',\n            ' <button type=\"button\" class=\"btn btn-xs citations-to-formatted\" title=\"Return to formatted citation list.\"><i class=\"fa fa-times\"></i> Hide BibTeX</button>',\n            \"</div>\",\n            '<div class=\"toolFormBody\" style=\"padding:5px 10px\">',\n            this.partialWarningElement(),\n            '<span class=\"citations-formatted\" style=\"word-wrap: break-word;\"></span>',\n            \"</div>\",\n            '<div class=\"citations-bibtex toolFormBody\" style=\"padding:5px 10px\">',\n            '<textarea style=\"width: 100%; height: 500px;\" class=\"citations-bibtex-text\"></textarea>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\");\n    }\n});\n\nexport default {\n    Citation: Citation,\n    HistoryCitationCollection: HistoryCitationCollection,\n    ToolCitationCollection: ToolCitationCollection,\n    CitationView: CitationView,\n    CitationListView: CitationListView\n};\n"]}