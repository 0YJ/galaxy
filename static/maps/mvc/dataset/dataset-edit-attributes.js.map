{"version":3,"sources":["mvc/dataset/dataset-edit-attributes.js"],"names":["define","Utils","Tabs","Ui","Form","_reloadHistory","Backbone","View","extend","initialize","Model","dataset_id","Galaxy","params","this","setElement","Message","persistent","model","message","$","append","_createTabs","$el","render","tabs","hide","ajax","url","success","initial_message","self","get","_","form","update","response","key","set","show","error","err_msg","responseJSON","status","_submit","data","create","operation","type","root","attribute","conversion","datatype","_getDatatype","permission","_getPermission","id","title","icon","tooltip","forms","_getAttribute","operations","ButtonIcon","onclick","submit_autodetect","_getConversion","submit_permission","window","currHistoryPanel","loadCurrentHistory"],"mappings":"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","file":"../../../scripts/mvc/dataset/dataset-edit-attributes.js","sourcesContent":["/** Dataset edit attributes view */\ndefine( [ 'utils/utils', 'mvc/ui/ui-tabs', 'mvc/ui/ui-misc', 'mvc/form/form-view' ], function( Utils, Tabs, Ui, Form ) {\n    var View = Backbone.View.extend({\n        initialize: function() {\n            this.setElement( '<div/>' );\n            this.model = new Backbone.Model( { 'dataset_id': Galaxy.params.dataset_id } );\n            this.message = new Ui.Message( { 'persistent': true } );\n            this.tabs = this._createTabs();\n            this.$el.append( $( '<h4/>' ).append( 'Edit dataset attributes' ) )\n                    .append( this.message.$el )\n                    .append( '<p/>' )\n                    .append( this.tabs.$el )\n                    .hide();\n            this.render();\n        },\n\n        /** fetch data for the selected dataset and build forms */\n        render: function() {\n            var self = this;\n            $.ajax({\n                url     : Galaxy.root + 'dataset/get_edit?dataset_id=' + self.model.get( 'dataset_id' ),\n                success : function( response ) {\n                    !self.initial_message && self.message.update( response );\n                    self.initial_message = true;\n                    _.each( self.forms, function( form, key ) {\n                        form.model.set( 'inputs', response[ key + '_inputs' ] );\n                        form.model.set( 'hide_operations', response[ key + '_disable' ] );\n                        form.render();\n                    });\n                    self.$el.show();\n                },\n                error   : function( response ) {\n                    var err_msg = response.responseJSON && response.responseJSON.err_msg;\n                    self.message.update({\n                        'status'    : 'danger',\n                        'message'   : err_msg || 'Error occured while loading the dataset.'\n                    });\n                }\n            });\n        },\n\n        /** submit data to backend to update attributes */\n        _submit: function( operation, form ) {\n            var self = this;\n            var data = form.data.create();\n            data.dataset_id = this.model.get( 'dataset_id' );\n            data.operation  = operation;\n            $.ajax({\n                type    : 'PUT',\n                url     : Galaxy.root + 'dataset/set_edit',\n                data    : data,\n                success : function( response ) {\n                    self.message.update( response );\n                    self.render();\n                    self._reloadHistory();\n                },\n                error   : function( response ) {\n                    var err_msg = response.responseJSON && response.responseJSON.err_msg;\n                    self.message.update({\n                        'status'    : 'danger',\n                        'message'   : err_msg || 'Error occured while editing the dataset attributes.'\n                    });\n                }\n            });\n        },\n\n        /** create tabs for different dataset attribute categories*/\n        _createTabs: function() {\n            this.forms = {\n                attribute   : this._getAttribute(),\n                conversion  : this._getConversion(),\n                datatype    : this._getDatatype(),\n                permission  : this._getPermission()\n            }\n            var tabs = new Tabs.View();\n            tabs.add({\n                id      : 'attribute',\n                title   : 'Attributes',\n                icon    : 'fa fa-bars',\n                tooltip : 'Edit dataset attributes',\n                $el     : this.forms.attribute.$el\n            });\n            tabs.add({\n                id      : 'convert',\n                title   : 'Convert',\n                icon    : 'fa-gear',\n                tooltip : 'Convert to new format',\n                $el     :  this.forms.conversion.$el\n            });\n            tabs.add({\n                id      : 'datatype',\n                title   : 'Datatypes',\n                icon    : 'fa-database',\n                tooltip : 'Change data type',\n                $el     : this.forms.datatype.$el\n            });\n            tabs.add({\n                id      : 'permissions',\n                title   : 'Permissions',\n                icon    : 'fa-user',\n                tooltip : 'Permissions',\n                $el     : this.forms.permission.$el\n            });\n            return tabs;\n        },\n\n        /** edit main attributes form */\n        _getAttribute: function() {\n            var self = this;\n            var form = new Form({\n                title       : 'Edit attributes',\n                operations  : {\n                    'submit_attributes' : new Ui.ButtonIcon({\n                        tooltip  : 'Save attributes of the dataset.',\n                        icon     : 'fa-floppy-o',\n                        title    : 'Save',\n                        onclick  : function() { self._submit( 'attributes', form ) }\n                    }),\n                    'submit_autodetect' : new Ui.ButtonIcon({\n                        tooltip  : 'This will inspect the dataset and attempt to correct the values of fields if they are not accurate.',\n                        icon     : 'fa-undo',\n                        title    : 'Auto-detect',\n                        onclick  : function() { self._submit( 'autodetect', form ) }\n                    })\n                }\n            });\n            return form;\n        },\n\n        /** datatype conversion form */\n        _getConversion: function() {\n            var self = this;\n            var form = new Form({\n                title       : 'Convert to new format',\n                operations  : {\n                    'submit_conversion' : new Ui.ButtonIcon({\n                        tooltip  : 'Convert the datatype to a new format.',\n                        title    : 'Convert datatype',\n                        icon     : 'fa-exchange',\n                        onclick  : function() { self._submit( 'conversion', form ) }\n                    })\n                }\n            });\n            return form;\n        },\n\n        /** change datatype form */\n        _getDatatype: function() {\n            var self = this;\n            var form = new Form({\n                title       : 'Change datatype',\n                operations  : {\n                    'submit_datatype' : new Ui.ButtonIcon({\n                        tooltip  : 'Change the datatype to a new type.',\n                        title    : 'Change datatype',\n                        icon     : 'fa-exchange',\n                        onclick  : function() { self._submit( 'datatype', form ) }\n                    })\n                }\n            });\n            return form;\n        },\n\n        /** dataset permissions form */\n        _getPermission: function() {\n            var self = this;\n            var form = new Form({\n                title       : 'Manage dataset permissions',\n                operations  : {\n                    'submit_permission': new Ui.ButtonIcon({\n                        tooltip  : 'Save permissions.',\n                        title    : 'Save permissions',\n                        icon     : 'fa-floppy-o ',\n                        onclick  : function() { self._submit( 'permission', form ) }\n                    })\n                }\n            });\n            return form;\n        },\n\n        /** reload Galaxy's history after updating dataset's attributes */\n        _reloadHistory: function() {\n            if ( window.Galaxy ) {\n                window.Galaxy.currHistoryPanel.loadCurrentHistory();\n            }\n        }\n    });\n\n    return {\n        View  : View\n    };\n});\n"]}