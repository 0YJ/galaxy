{"version":3,"sources":["mvc/dataset/dataset-edit-attributes.js"],"names":["define","Utils","Tabs","Ui","Form","reload_history","View","Backbone","extend","initialize","this","setElement","Model","dataset_id","Galaxy","params","model","render","url","root","self","get","data","response","success","error","error_response","message","persistent","cls","display_message","$","render_attribute_page","status","$el","empty","append","_templateHeader","create_tabs","call_ajax","tab_name","ajax","type","post_url","Message","$el_edit_attr","tabs","add","id","title","icon","tooltip","_getAttributesFormTemplate","_getConvertFormTemplate","_getChangeDataTypeFormTemplate","_getPermissionsFormTemplate","inputs","operations","edit_attributes_inputs","ButtonIcon","onclick","_submit","form","submit_autocorrect","convert_inputs","submit","convert_datatype_inputs","can_manage_dataset","display_name","permission_inputs","template","form_data","create","save","target_type","convert_data","post_data","permissions","JSON","stringify","update_roles_button","change","window","currHistoryPanel","loadCurrentHistory"],"mappings":"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","file":"../../../scripts/mvc/dataset/dataset-edit-attributes.js","sourcesContent":["\ndefine( [ 'utils/utils', 'mvc/ui/ui-tabs', 'mvc/ui/ui-misc', 'mvc/form/form-view' ], function( Utils, Tabs, Ui, Form ) {\n\n    /** Dataset edit attributes view */\n    var View = Backbone.View.extend({\n        initialize: function() {\n            this.setElement( '<div/>' );\n            this.model = new Backbone.Model( { 'dataset_id': Galaxy.params.dataset_id } );\n            this.render();\n        },\n\n        // Fetch data for the selected dataset and \n        // build tabs for editing its attributes\n        render: function() {\n            var url = Galaxy.root + 'dataset/edit',\n                self = this;\n            Utils.get({\n                url     : url,\n                data    : { 'dataset_id' : self.model.get( 'dataset_id' ) },\n                success : function( response ) {\n                   self.render_attribute_page( self, response );\n                },\n                error   : function( response ) {\n                    var error_response = {\n                        'status': 'error',\n                        'message': 'Error occured while loading the dataset.',\n                        'persistent': true,\n                        'cls': 'errormessage'\n                    };\n                    self.display_message( error_response, self.$( '.response-message' ) );\n                }\n            });\n        },\n\n        /** Render all the tabs view */\n        render_attribute_page: function( self, response ) {\n            var message = {\n                'message'     : response.message,\n                'status'      : response.status,\n                'persistent'  : true,\n                'cls'         : response.status + 'message'\n            };\n            self.$el.empty().append( self._templateHeader() );\n            self.display_message( message, self.$( '.response-message' ) );\n            // Create all tabs\n            self.create_tabs( response, self.$( '.edit-attr' ) );\n        },\n\n        /** Perform AJAX post call */\n        call_ajax: function( self, data, tab_name ) {\n            var post_url = Galaxy.root + 'dataset/edit';\n            $.ajax({\n                type: \"PUT\",\n                url: post_url,\n                data: data,\n                success: function( response ) {\n                    self.render_attribute_page( self, response );\n                    self.reload_history();\n                },\n                error   : function( response ) {\n                    var error_response = {\n                        'status': 'error',\n                        'message': 'Error occured while saving. Please fill all the required fields and try again.',\n                        'persistent': true,\n                        'cls': 'errormessage'\n                    };\n                    self.display_message( error_response, self.$( '.response-message' ) );\n                }\n            });\n        },\n\n        /** Display actions messages */\n        display_message: function( response, $el ) {\n            $el.empty().html( new Ui.Message( response ).$el );\n        },\n\n        /** Create tabs for different attributes of dataset*/\n        create_tabs: function( response, $el_edit_attr ) {\n            var self = this;\n            self.tabs = new Tabs.View();\n            self.tabs.add({\n                id      : 'attributes',\n                title   : 'Attributes',\n                icon    : 'fa fa-bars',\n                tooltip : 'Edit dataset attributes',\n                $el     : self._getAttributesFormTemplate( response )\n            });\n\n            self.tabs.add({\n                id      : 'convert',\n                title   : 'Convert',\n                icon    : 'fa-gear',\n                tooltip : 'Convert to new format',\n                $el     :  self._getConvertFormTemplate( response )\n            });\n\n            self.tabs.add({\n                id      : 'datatype',\n                title   : 'Datatypes',\n                icon    : 'fa-database',\n                tooltip : 'Change data type',\n                $el     : self._getChangeDataTypeFormTemplate( response )\n            });\n\n            self.tabs.add({\n                id      : 'permissions',\n                title   : 'Permissions',\n                icon    : 'fa-user',\n                tooltip : 'Permissions',\n                $el     : self._getPermissionsFormTemplate( response )\n            });\n            $el_edit_attr.append( self.tabs.$el );\n            self.tabs.showTab( 'attributes' );\n        },\n\n        /** Main template */\n        _templateHeader: function() {\n            return '<div class=\"page-container edit-attr\">' +\n                       '<div class=\"response-message\"></div>' +\n                       '<h3>Edit Dataset Attributes</h3>' +\n                   '</div>';\n        },\n\n        /** Attributes tab template */\n        _getAttributesFormTemplate: function( response ) {\n            var self = this;\n            var form = new Form({\n                title  : 'Edit attributes',\n                inputs : response.edit_attributes_inputs,\n                operations: {\n                    'submit_editattr' : new Ui.ButtonIcon({\n                        tooltip       : 'Save attributes of the dataset.',\n                        icon          : 'fa-floppy-o ',\n                        title         : 'Save attributes',\n                        onclick       : function() { self._submit( self, form, response, \"edit_attributes\" ) }\n                    }),\n                    'submit_autocorrect' : new Ui.ButtonIcon({\n                        tooltip          : 'This will inspect the dataset and attempt to correct the values of fields if they are not accurate.',\n                        icon             : 'fa-undo ',\n                        title            : 'Auto-detect',\n                        onclick          : function() { self._submit( self, form, response, \"auto-detect\" ) }\n                    })\n                }\n            });\n            return form.$el;\n        },\n\n        /** Convert tab template */\n        _getConvertFormTemplate: function( response ) {\n            var self = this;\n            var form = new Form({\n                title  : 'Convert to new format',\n                inputs : response.convert_inputs,\n                operations: {\n                        'submit' : new Ui.ButtonIcon({\n                        tooltip  : 'Convert the datatype to a new format.',\n                        title    : 'Convert datatype',\n                        icon     : 'fa-exchange ',\n                        onclick  : function() { self._submit( self, form, response, \"convert\" ) }\n                    })\n                }\n            });\n            return form.$el;\n        },\n\n        /** Change datatype template */\n        _getChangeDataTypeFormTemplate: function( response ) {\n            var self = this;\n            var form = new Form({\n                title  : 'Change datatype',\n                inputs : response.convert_datatype_inputs,\n                operations: {\n                        'submit' : new Ui.ButtonIcon({\n                        tooltip  : 'Change the datatype to a new type.',\n                        title    : 'Change datatype',\n                        icon     : 'fa-exchange ',\n                        onclick  : function() { self._submit( self, form, response, \"change\" ) }\n                    })\n                }\n            });\n            return form.$el;\n        },\n\n        /** Permissions template */\n        _getPermissionsFormTemplate: function( response ) {\n            var template = \"\",\n                self = this;\n            if( response.can_manage_dataset ) {\n                var form = new Form({\n                    title  : 'Manage dataset permissions on ' + response.display_name,\n                    inputs : response.permission_inputs,\n                    operations: {\n                        'submit': new Ui.ButtonIcon({\n                            tooltip  : 'Save permissions.',\n                            title    : 'Save permissions',\n                            icon     : 'fa-floppy-o ',\n                            onclick  : function() { self._submit( self, form, response, \"permissions\" ) }\n                        })\n                    }\n                });\n                return form.$el;\n            }\n            else {\n                var form = new Form({\n                    title  : 'View permissions',\n                    inputs : response.permission_inputs\n                });\n                return form.$el;\n            }\n        },\n\n        /** Submit action */\n        _submit: function( self, form, response, type ) {\n            var form_data = form.data.create();\n            form_data.dataset_id = response.dataset_id;\n            switch( type ) {\n                case \"edit_attributes\":\n                    form_data.save = 'Save';\n                    break;\n\n                case \"auto-detect\":\n                    form_data.detect = 'Auto-detect';\n                    break;\n          \n                case \"convert\":\n                    if ( form_data.target_type !== null && form_data.target_type ) {\n                        form_data.dataset_id = response.dataset_id;\n                        form_data.convert_data = 'Convert';\n                    }\n                    break;\n\n                case \"change\":\n                    form_data.change = 'Save';\n                    break;\n\n                case \"permissions\":\n                    var post_data = {};\n                    post_data.permissions = JSON.stringify( form_data );\n                    post_data.update_roles_button = \"Save\";\n                    post_data.dataset_id = response.dataset_id;\n                    form_data = post_data;\n                    break; \n            }\n            self.call_ajax( self, form_data );\n        },\n\n        /** Reload Galaxy's history after updating dataset's attributes */\n        reload_history: function() {\n            if ( window.Galaxy ) {\n                window.Galaxy.currHistoryPanel.loadCurrentHistory();\n            }\n        }\n    });\n\n    return {\n        View  : View\n    };\n});\n"]}