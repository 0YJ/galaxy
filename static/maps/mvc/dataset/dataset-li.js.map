{"version":3,"sources":["mvc/dataset/dataset-li.js"],"names":["define","LIST_ITEM","STATES","faIconButton","BASE_MVC","_l","_super","DatasetListItemView","className","prototype","id","initialize","this","model","get","attributes","join","log","logger","call","linkTarget","_setUpListeners","self","listenTo","change","changedAttributes","state","inReadyState","fetch","silent","done","render","_fetchModelDetails","jQuery","view","hasDetails","when","remove","callback","speed","fxSpeed","$el","fadeOut","Backbone","View","_swapNewRender","addClass","$newRender","has","_renderPrimaryActions","_renderDisplayButton","NOT_VIEWABLE","displayBtnData","target","classes","disabled","title","NEW","href","urls","display","onclick","ev","Galaxy","frame","active","preventDefault","faIcon","_renderDetails","$details","find","_renderSummary","templates","noAccess","html","toJSON","_renderDisplayApplications","summaryRenderFn","empty","append","_renderSecondaryActions","prepend","_renderDetailMessages","_setUpBehaviors","summaries","json","$warnings","unknown","$","templateFn","isDeletedOrPurged","debug","displayApplications","_renderShowParamsButton","OK","FAILED_METADATA","ERROR","show_params","add","url","stopPropagation","_renderDownloadButton","_renderMetaFileDownloadButton","hasData","_","isEmpty","download","events","trigger","map","meta_file","modelString","file_type","extend","clone","click .display-btn","error","wrapTemplate","click .download-btn","toString","warnings","failed_metadata","summaryTemplates","purged","detailMessageTemplates","resubmitted","deleted","displayApplicationsTemplate","details","detailsTemplate","noAccessTemplate","DISCARDED","QUEUED","RUNNING","UPLOAD","SETTING_METADATA","PAUSED","EMPTY","detailMessages"],"mappings":"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","file":"../../../scripts/mvc/dataset/dataset-li.js","sourcesContent":["define([\n    \"mvc/list/list-item\",\n    \"mvc/dataset/states\",\n    \"ui/fa-icon-button\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( LIST_ITEM, STATES, faIconButton, BASE_MVC, _l ){\n'use strict';\n\nvar logNamespace = 'dataset';\n/*==============================================================================\nTODO:\n    straighten out state rendering and templates used\n    inaccessible/STATES.NOT_VIEWABLE is a special case\n    simplify button rendering\n\n==============================================================================*/\nvar _super = LIST_ITEM.ListItemView;\n/** @class Read only list view for either LDDAs, HDAs, or HDADCEs.\n *      Roughly, any DatasetInstance (and not a raw Dataset).\n */\nvar DatasetListItemView = _super.extend(\n/** @lends DatasetListItemView.prototype */{\n    _logNamespace : logNamespace,\n\n    className   : _super.prototype.className + \" dataset\",\n    //TODO:?? doesn't exactly match an hda's type_id\n    id          : function(){\n        return [ 'dataset', this.model.get( 'id' ) ].join( '-' );\n    },\n\n    /** Set up: instance vars, options, and event handlers */\n    initialize : function( attributes ){\n        if( attributes.logger ){ this.logger = this.model.logger = attributes.logger; }\n        this.log( this + '.initialize:', attributes );\n        _super.prototype.initialize.call( this, attributes );\n\n        /** where should pages from links be displayed? (default to new tab/window) */\n        this.linkTarget = attributes.linkTarget || '_blank';\n    },\n\n    /** event listeners */\n    _setUpListeners : function(){\n        _super.prototype._setUpListeners.call( this );\n        var self = this;\n\n        // re-rendering on any model changes\n        return self.listenTo( self.model, {\n            'change': function( model, options ){\n                // if the model moved into the ready state and is expanded without details, fetch those details now\n                if( self.model.changedAttributes().state\n                &&  self.model.inReadyState()\n                &&  self.expanded\n                && !self.model.hasDetails() ){\n                    // normally, will render automatically (due to fetch -> change),\n                    // but! setting_metadata sometimes doesn't cause any other changes besides state\n                    // so, not rendering causes it to seem frozen in setting_metadata state\n                    self.model.fetch({ silent : true })\n                        .done( function(){ self.render(); });\n\n                } else {\n                    self.render();\n                }\n            }\n        });\n    },\n\n    // ......................................................................... expandable\n    /** In this override, only get details if in the ready state, get rerunnable if in other states.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n    _fetchModelDetails : function(){\n        var view = this;\n        if( view.model.inReadyState() && !view.model.hasDetails() ){\n            return view.model.fetch({ silent: true });\n        }\n        return jQuery.when();\n    },\n\n    // ......................................................................... removal\n    /** Remove this view's html from the DOM and remove all event listeners.\n     *  @param {Number or String} speed jq effect speed\n     *  @param {Function} callback      an optional function called when removal is done (scoped to this view)\n     */\n    remove : function( speed, callback ){\n        var view = this;\n        speed = speed || this.fxSpeed;\n        this.$el.fadeOut( speed, function(){\n            Backbone.View.prototype.remove.call( view );\n            if( callback ){ callback.call( view ); }\n        });\n    },\n\n    // ......................................................................... rendering\n    /* TODO:\n        dataset states are the issue primarily making dataset rendering complex\n            each state should have it's own way of displaying/set of details\n            often with different actions that can be applied\n        throw in deleted/purged/visible and things get complicated easily\n        I've considered (a couple of times) - creating a view for each state\n            - but recreating the view during an update...seems wrong\n    */\n    /** In this override, add the dataset state as a class for use with state-based CSS */\n    _swapNewRender : function( $newRender ){\n        _super.prototype._swapNewRender.call( this, $newRender );\n        if( this.model.has( 'state' ) ){\n            this.$el.addClass( 'state-' + this.model.get( 'state' ) );\n        }\n        return this.$el;\n    },\n\n    // ................................................................................ titlebar\n    /** In this override, add the dataset display button. */\n    _renderPrimaryActions : function(){\n        // render just the display for read-only\n        return [ this._renderDisplayButton() ];\n    },\n\n    /** Render icon-button to display dataset data */\n    _renderDisplayButton : function(){\n        // don't show display if not viewable or not accessible\n        var state = this.model.get( 'state' );\n        if( ( state === STATES.NOT_VIEWABLE )\n        ||  ( state === STATES.DISCARDED )\n        ||  ( !this.model.get( 'accessible' ) ) ){\n            return null;\n        }\n\n        var displayBtnData = {\n            target      : this.linkTarget,\n            classes     : 'display-btn'\n        };\n\n        // show a disabled display if the data's been purged\n        if( this.model.get( 'purged' ) ){\n            displayBtnData.disabled = true;\n            displayBtnData.title = _l( 'Cannot display datasets removed from disk' );\n\n        // disable if still uploading\n        } else if( state === STATES.UPLOAD ){\n            displayBtnData.disabled = true;\n            displayBtnData.title = _l( 'This dataset must finish uploading before it can be viewed' );\n\n        // disable if still new\n        } else if( state === STATES.NEW ){\n            displayBtnData.disabled = true;\n            displayBtnData.title = _l( 'This dataset is not yet viewable' );\n\n        } else {\n            displayBtnData.title = _l( 'View data' );\n\n            // default link for dataset\n            displayBtnData.href  = this.model.urls.display;\n\n            // add frame manager option onclick event\n            var self = this;\n            displayBtnData.onclick = function( ev ){\n                if (Galaxy.frame && Galaxy.frame.active) {\n                    // Add dataset to frames.\n                    Galaxy.frame.addDataset(self.model.get('id'));\n                    ev.preventDefault();\n                }\n            };\n        }\n        displayBtnData.faIcon = 'fa-eye';\n        return faIconButton( displayBtnData );\n    },\n\n    // ......................................................................... rendering details\n    /** Render the enclosing div of the hda body and, if expanded, the html in the body\n     *  @returns {jQuery} rendered DOM\n     */\n    _renderDetails : function(){\n        //TODO: generalize to be allow different details for each state\n\n        // no access - render nothing but a message\n        if( this.model.get( 'state' ) === STATES.NOT_VIEWABLE ){\n            return $( this.templates.noAccess( this.model.toJSON(), this ) );\n        }\n\n        var $details = _super.prototype._renderDetails.call( this );\n        $details.find( '.actions .left' ).empty().append( this._renderSecondaryActions() );\n        $details.find( '.summary' ).html( this._renderSummary() )\n            .prepend( this._renderDetailMessages() );\n        $details.find( '.display-applications' ).html( this._renderDisplayApplications() );\n\n        this._setUpBehaviors( $details );\n        return $details;\n    },\n\n    /** Defer to the appropo summary rendering fn based on state */\n    _renderSummary : function(){\n        var json = this.model.toJSON(),\n            summaryRenderFn = this.templates.summaries[ json.state ];\n        summaryRenderFn = summaryRenderFn || this.templates.summaries.unknown;\n        return summaryRenderFn( json, this );\n    },\n\n    /** Render messages to be displayed only when the details are shown */\n    _renderDetailMessages : function(){\n        var view = this,\n            $warnings = $( '<div class=\"detail-messages\"></div>' ),\n            json = view.model.toJSON();\n        //TODO:! unordered (map)\n        _.each( view.templates.detailMessages, function( templateFn ){\n            $warnings.append( $( templateFn( json, view ) ) );\n        });\n        return $warnings;\n    },\n\n    /** Render the external display application links */\n    _renderDisplayApplications : function(){\n        if( this.model.isDeletedOrPurged() ){ return ''; }\n        // render both old and new display apps using the same template\n        return [\n            this.templates.displayApplications( this.model.get( 'display_apps' ), this ),\n            this.templates.displayApplications( this.model.get( 'display_types' ), this )\n        ].join( '' );\n    },\n\n    // ......................................................................... secondary/details actions\n    /** A series of links/buttons for less commonly used actions: re-run, info, etc. */\n    _renderSecondaryActions : function(){\n        this.debug( '_renderSecondaryActions' );\n        switch( this.model.get( 'state' ) ){\n            case STATES.NOT_VIEWABLE:\n                return [];\n            case STATES.OK:\n            case STATES.FAILED_METADATA:\n            case STATES.ERROR:\n                return [ this._renderDownloadButton(), this._renderShowParamsButton() ];\n        }\n        return [ this._renderShowParamsButton() ];\n    },\n\n    /** Render icon-button to show the input and output (stdout/err) for the job that created this.\n     *  @returns {jQuery} rendered DOM\n     */\n    _renderShowParamsButton : function(){\n        // gen. safe to show in all cases\n        return faIconButton({\n            title       : _l( 'View details' ),\n            classes     : 'params-btn',\n            href        : this.model.urls.show_params,\n            target      : this.linkTarget,\n            faIcon      : 'fa-info-circle',\n            onclick     : function( ev ) {\n                if ( Galaxy.frame && Galaxy.frame.active ) {\n                    Galaxy.frame.add( { title: 'Dataset details', url: this.href } );\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n            }\n        });\n    },\n\n\n    /** Render icon-button/popupmenu to download the data (and/or the associated meta files (bai, etc.)) for this.\n     *  @returns {jQuery} rendered DOM\n     */\n    _renderDownloadButton : function(){\n        // don't show anything if the data's been purged\n        if( this.model.get( 'purged' ) || !this.model.hasData() ){ return null; }\n\n        // return either: a popupmenu with links to download assoc. meta files (if there are meta files)\n        //  or a single download icon-button (if there are no meta files)\n        if( !_.isEmpty( this.model.get( 'meta_files' ) ) ){\n            return this._renderMetaFileDownloadButton();\n        }\n\n        return $([\n            '<a class=\"download-btn icon-btn\" ',\n                'href=\"', this.model.urls.download, '\" title=\"' + _l( 'Download' ) + '\" download>',\n                '<span class=\"fa fa-floppy-o\"></span>',\n            '</a>'\n        ].join( '' ));\n    },\n\n    /** Render the download button which opens a dropdown with links to download assoc. meta files (indeces, etc.) */\n    _renderMetaFileDownloadButton : function(){\n        var urls = this.model.urls;\n        return $([\n            '<div class=\"metafile-dropdown dropdown\">',\n                '<a class=\"download-btn icon-btn\" href=\"javascript:void(0)\" data-toggle=\"dropdown\"',\n                    ' title=\"' + _l( 'Download' ) + '\">',\n                    '<span class=\"fa fa-floppy-o\"></span>',\n                '</a>',\n                '<ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dLabel\">',\n                    '<li><a href=\"' + urls.download + '\" download>', _l( 'Download dataset' ), '</a></li>',\n                    _.map( this.model.get( 'meta_files' ), function( meta_file ){\n                        return [\n                            '<li><a href=\"', urls.meta_download + meta_file.file_type, '\">',\n                                _l( 'Download' ), ' ', meta_file.file_type,\n                            '</a></li>'\n                        ].join( '' );\n                    }).join( '\\n' ),\n                '</ul>',\n            '</div>'\n        ].join( '\\n' ));\n    },\n\n    // ......................................................................... misc\n    events : _.extend( _.clone( _super.prototype.events ), {\n        'click .display-btn'    : function( ev ){ this.trigger( 'display', this, ev ); },\n        'click .params-btn'     : function( ev ){ this.trigger( 'params', this, ev ); },\n        'click .download-btn'   : function( ev ){ this.trigger( 'download', this, ev ); }\n    }),\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'DatasetListItemView(' + modelString + ')';\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemView.prototype.templates = (function(){\n//TODO: move to require text! plugin\n\n    var warnings = _.extend( {}, _super.prototype.templates.warnings, {\n        failed_metadata : BASE_MVC.wrapTemplate([\n            // failed metadata is rendered as a warning on an otherwise ok dataset view\n            '<% if( model.state === \"failed_metadata\" ){ %>',\n                '<div class=\"warningmessagesmall\">',\n                    _l( 'An error occurred setting the metadata for this dataset' ),\n                '</div>',\n            '<% } %>'\n        ]),\n        error : BASE_MVC.wrapTemplate([\n            // error during index fetch - show error on dataset\n            '<% if( model.error ){ %>',\n                '<div class=\"errormessagesmall\">',\n                    _l( 'There was an error getting the data for this dataset' ), ': <%- model.error %>',\n                '</div>',\n            '<% } %>'\n        ]),\n        purged : BASE_MVC.wrapTemplate([\n            '<% if( model.purged ){ %>',\n                '<div class=\"purged-msg warningmessagesmall\">',\n                    _l( 'This dataset has been deleted and removed from disk' ),\n                '</div>',\n            '<% } %>'\n        ]),\n        deleted : BASE_MVC.wrapTemplate([\n            // deleted not purged\n            '<% if( model.deleted && !model.purged ){ %>',\n                '<div class=\"deleted-msg warningmessagesmall\">',\n                    _l( 'This dataset has been deleted' ),\n                '</div>',\n            '<% } %>'\n        ])\n\n        //NOTE: hidden warning is only needed for HDAs\n    });\n\n    var detailsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"details\">',\n            '<div class=\"summary\"></div>',\n\n            '<div class=\"actions clear\">',\n                '<div class=\"left\"></div>',\n                '<div class=\"right\"></div>',\n            '</div>',\n\n            // do not display tags, annotation, display apps, or peek when deleted\n            '<% if( !dataset.deleted && !dataset.purged ){ %>',\n                '<div class=\"tags-display\"></div>',\n                '<div class=\"annotation-display\"></div>',\n\n                '<div class=\"display-applications\"></div>',\n\n                '<% if( dataset.peek ){ %>',\n                    '<pre class=\"dataset-peek\"><%= dataset.peek %></pre>',\n                '<% } %>',\n            '<% } %>',\n        '</div>'\n    ], 'dataset' );\n\n    var noAccessTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"details\">',\n            '<div class=\"summary\">',\n                _l( 'You do not have permission to view this dataset' ),\n            '</div>',\n        '</div>'\n    ], 'dataset' );\n\n//TODO: still toooooooooooooo complex - rework\n    var summaryTemplates = {};\n    summaryTemplates[ STATES.OK ] = summaryTemplates[ STATES.FAILED_METADATA ] = BASE_MVC.wrapTemplate([\n        '<% if( dataset.misc_blurb ){ %>',\n            '<div class=\"blurb\">',\n                '<span class=\"value\"><%- dataset.misc_blurb %></span>',\n            '</div>',\n        '<% } %>',\n\n        '<% if( dataset.file_ext ){ %>',\n            '<div class=\"datatype\">',\n                '<label class=\"prompt\">', _l( 'format' ), '</label>',\n                '<span class=\"value\"><%- dataset.file_ext %></span>',\n            '</div>',\n        '<% } %>',\n\n        '<% if( dataset.metadata_dbkey ){ %>',\n            '<div class=\"dbkey\">',\n                '<label class=\"prompt\">', _l( 'database' ), '</label>',\n                '<span class=\"value\">',\n                    '<%- dataset.metadata_dbkey %>',\n                '</span>',\n            '</div>',\n        '<% } %>',\n\n        '<% if( dataset.misc_info ){ %>',\n            '<div class=\"info\">',\n                '<span class=\"value\"><%- dataset.misc_info %></span>',\n            '</div>',\n        '<% } %>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.NEW ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'This is a new dataset and not all of its data are available yet' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.NOT_VIEWABLE ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'You do not have permission to view this dataset' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.DISCARDED ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'The job creating this dataset was cancelled before completion' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.QUEUED ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'This job is waiting to run' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.RUNNING ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'This job is currently running' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.UPLOAD ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'This dataset is currently uploading' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.SETTING_METADATA ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'Metadata is being auto-detected' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.PAUSED ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'This job is paused. Use the \"Resume Paused Jobs\" in the history menu to resume' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.ERROR ] = BASE_MVC.wrapTemplate([\n        '<% if( !dataset.purged ){ %>',\n            '<div><%- dataset.misc_blurb %></div>',\n        '<% } %>',\n        '<span class=\"help-text\">', _l( 'An error occurred with this dataset' ), ':</span>',\n        '<div class=\"job-error-text\"><%- dataset.misc_info %></div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.EMPTY ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'No data' ), ': <i><%- dataset.misc_blurb %></i></div>'\n    ], 'dataset' );\n    summaryTemplates.unknown = BASE_MVC.wrapTemplate([\n        '<div>Error: unknown dataset state: \"<%- dataset.state %>\"</div>'\n    ], 'dataset' );\n\n    // messages to be displayed only within the details section ('below the fold')\n    var detailMessageTemplates = {\n        resubmitted : BASE_MVC.wrapTemplate([\n            // deleted not purged\n            '<% if( model.resubmitted ){ %>',\n                '<div class=\"resubmitted-msg infomessagesmall\">',\n                    _l( 'The job creating this dataset has been resubmitted' ),\n                '</div>',\n            '<% } %>'\n        ])\n    };\n\n    // this is applied to both old and new style display apps\n    var displayApplicationsTemplate = BASE_MVC.wrapTemplate([\n        '<% _.each( apps, function( app ){ %>',\n            '<div class=\"display-application\">',\n                '<span class=\"display-application-location\"><%- app.label %></span> ',\n                '<span class=\"display-application-links\">',\n                    '<% _.each( app.links, function( link ){ %>',\n                        '<a target=\"<%- link.target %>\" href=\"<%- link.href %>\">',\n                            '<% print( _l( link.text ) ); %>',\n                        '</a> ',\n                    '<% }); %>',\n                '</span>',\n            '</div>',\n        '<% }); %>'\n    ], 'apps' );\n\n    return _.extend( {}, _super.prototype.templates, {\n        warnings    : warnings,\n        details     : detailsTemplate,\n        noAccess    : noAccessTemplate,\n        summaries   : summaryTemplates,\n        detailMessages      : detailMessageTemplates,\n        displayApplications : displayApplicationsTemplate\n    });\n}());\n\n\n// ============================================================================\n    return {\n        DatasetListItemView : DatasetListItemView\n    };\n});\n"]}