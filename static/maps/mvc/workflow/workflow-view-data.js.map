{"version":3,"sources":["mvc/workflow/workflow-view-data.js"],"names":["define","Globals","DataInputView","Backbone","View","extend","className","initialize","options","this","input","nodeView","terminalElement","$el","attr","name","html","label","skipResize","css","position","left","top","display","$","append","el","updateMaxWidth","outerWidth","remove","DataOutputView","output","node","extensions","indexOf","join","calloutView","type","OutputCalloutView","hover","hoverImage","resetImage","detach","redrawWorkflowOutput","tagName","view","Galaxy","root","click","outputName","isWorkflowOutput","removeWorkflowOutput","addWorkflowOutput","workflow","has_changes","canvas_manager","draw_overview","tooltip","delay","title","margin","right","show"],"mappings":"AAAAA,QAAQ,iCAAkC,SAAUC,GAEhD,GAAIC,GAAgBC,SAASC,KAAKC,QAC9BC,UAAW,kCAEXC,WAAY,SAAUC,GAClBC,KAAKC,MAAQF,EAAQE,MACrBD,KAAKE,SAAWH,EAAQG,SACxBF,KAAKG,gBAAkBJ,EAAQI,gBAE/BH,KAAKI,IAAIC,KAAM,OAAQL,KAAKC,MAAMK,MACzBC,KAAMP,KAAKC,MAAMO,OAEpBT,EAAQU,aACVT,KAAKI,IAAIM,KAAOC,SAAS,WACTC,MAAO,IACPC,KAAM,IACNC,QAAQ,SAC5BC,EAAE,QAAQC,OAAOhB,KAAKiB,IAClBjB,KAAKE,SAASgB,eAAgBlB,KAAKI,IAAIe,cACvCnB,KAAKI,IAAIM,KAAMC,SAAS,GACTC,KAAK,GACLC,IAAI,GACJC,QAAQ,KACvBd,KAAKI,IAAIgB,aAKjBC,EAAiB3B,SAASC,KAAKC,QAC/BC,UAAW,mBAEXC,WAAY,SAAUC,GAClBC,KAAKsB,OAASvB,EAAQuB,OACtBtB,KAAKG,gBAAkBJ,EAAQI,gBAC/BH,KAAKE,SAAWH,EAAQG,QAExB,IAAIoB,GAAStB,KAAKsB,OACdd,EAAQc,EAAOhB,KACfiB,EAAOvB,KAAKE,SAASqB,IAQzB,IANcD,EAAOE,WAAWC,QAAS,UAAa,GAAKH,EAAOE,WAAWC,QAAS,qBAAwB,IAE1GjB,EAAQA,EAAQ,KAAOc,EAAOE,WAAWE,KAAK,MAAQ,KAE1D1B,KAAKI,IAAIG,KAAMC,GACfR,KAAK2B,YAAc,MACd,OAAQ,eAAeF,QAAQF,EAAKK,OAAS,EAAE,CAChD,GAAID,GAAc,GAAIE,IAClBrB,MAASA,EACTc,OAAUA,EACVC,KAAQA,GAEZvB,MAAK2B,YAAcA,EACnB3B,KAAKI,IAAIY,OAAQW,EAAYV,IAC7BjB,KAAKI,IAAI0B,MAAO,WAAaH,EAAYI,cAAgB,WAAaJ,EAAYK,eAEtFhC,KAAKI,IAAIM,KAAOC,SAAS,WACTC,MAAO,IACPC,KAAM,IACNC,QAAQ,SACxBC,EAAE,QAAQC,OAAQhB,KAAKiB,IACvBjB,KAAKE,SAASgB,eAAgBlB,KAAKI,IAAIe,aAAe,IACtDnB,KAAKI,IAAIM,KAAMC,SAAS,GACTC,KAAK,GACLC,IAAI,GACJC,QAAQ,KACdmB,UAEbC,qBAAsB,WACdlC,KAAK2B,aACL3B,KAAK2B,YAAYK,gBAKzBH,EAAoBnC,SAASC,KAAKC,QAClCuC,QAAS,MAETrC,WAAY,SAAUC,GAClBC,KAAKQ,MAAQT,EAAQS,MACrBR,KAAKuB,KAAOxB,EAAQwB,KACpBvB,KAAKsB,OAASvB,EAAQuB,MAEtB,IAAIc,GAAOpC,KACPuB,EAAOvB,KAAKuB,IAChBvB,MAAKI,IACAC,KAAM,QAAS,WAAWL,KAAKQ,OAC/BE,KAAOI,QAAS,SAChBE,OACGD,EAAE,+BAA+BC,OAC7BD,EAAE,UAAUV,KAAK,MAAOgC,OAAOC,KAAO,kDAAkDC,MAAO,WAC3F,GAAIC,GAAaJ,EAAKd,OAAOhB,IACzBiB,GAAKkB,iBAAkBD,IACvBjB,EAAKmB,qBAAsBF,GAC3BJ,EAAKrB,EAAE,OAAOV,KAAK,MAAOgC,OAAOC,KAAO,oDAExCf,EAAKoB,kBAAmBH,GACxBJ,EAAKrB,EAAE,OAAOV,KAAK,MAAOgC,OAAOC,KAAO,2CAE5C9C,EAAQoD,SAASC,aAAc,EAC/BrD,EAAQsD,eAAeC,oBAElCC,SAASC,MAAM,IAAKC,MAAO,6EAEhClD,KAAKI,IAAIM,KACDG,IAAK,MACLsC,OAAO,mBACPC,MAAO,IAEfpD,KAAKI,IAAIiD,OACTrD,KAAKgC,cAGTA,WAAY,WACDhC,KAAKuB,KAAKkB,iBAAkBzC,KAAKsB,OAAOhB,MAG3CN,KAAKe,EAAE,OAAOV,KAAK,MAAOgC,OAAOC,KAAO,0CAFxCtC,KAAKe,EAAE,OAAOV,KAAK,MAAOgC,OAAOC,KAAO,mDAMhDP,WAAY,WACR/B,KAAKe,EAAE,OAAOV,KAAK,MAAOgC,OAAOC,KAAO,mDAIhD,QACI7C,cAAsBA,EACtB4B,eAAsBA","file":"../../../scripts/mvc/workflow/workflow-view-data.js","sourcesContent":["define(['mvc/workflow/workflow-globals'], function( Globals ){\n\n    var DataInputView = Backbone.View.extend( {\n        className: \"form-row dataRow input-data-row\",\n\n        initialize: function( options ){\n            this.input = options.input;\n            this.nodeView = options.nodeView;\n            this.terminalElement = options.terminalElement;\n\n            this.$el.attr( \"name\", this.input.name )\n                    .html( this.input.label );\n\n            if( ! options.skipResize ) {\n                this.$el.css({  position:'absolute',\n                                left: -1000,\n                                top: -1000,\n                                display:'none'});\n            $('body').append(this.el);\n                this.nodeView.updateMaxWidth( this.$el.outerWidth() );\n                this.$el.css({ position:'',\n                               left:'',\n                               top:'',\n                               display:'' });\n                this.$el.remove();\n            }\n        }\n    });\n\n    var DataOutputView = Backbone.View.extend( {\n        className: \"form-row dataRow\",\n\n        initialize: function( options ) {\n            this.output = options.output;\n            this.terminalElement = options.terminalElement;\n            this.nodeView = options.nodeView;\n\n            var output = this.output;\n            var label = output.name;\n            var node = this.nodeView.node;\n\n            var isInput = output.extensions.indexOf( 'input' ) >= 0 || output.extensions.indexOf( 'input_collection' ) >= 0;\n            if ( ! isInput ) {\n                label = label + \" (\" + output.extensions.join(\", \") + \")\";\n            }\n            this.$el.html( label )\n            this.calloutView = null;\n            if (['tool', 'subworkflow'].indexOf(node.type) >= 0){\n                var calloutView = new OutputCalloutView( {\n                    \"label\": label,\n                    \"output\": output,\n                    \"node\": node,\n                });\n                this.calloutView = calloutView;\n                this.$el.append( calloutView.el );\n                this.$el.hover( function() { calloutView.hoverImage() }, function() { calloutView.resetImage() } );\n            }\n            this.$el.css({  position:'absolute',\n                            left: -1000,\n                            top: -1000,\n                            display:'none'});\n            $('body').append( this.el );\n            this.nodeView.updateMaxWidth( this.$el.outerWidth() + 17 );\n            this.$el.css({ position:'',\n                           left:'',\n                           top:'',\n                           display:'' })\n                    .detach();\n        },\n        redrawWorkflowOutput: function() {\n            if( this.calloutView ) {\n                this.calloutView.resetImage();\n            }\n        }\n    });\n\n    var OutputCalloutView = Backbone.View.extend( {\n        tagName: \"div\",\n\n        initialize: function( options ) {\n            this.label = options.label;\n            this.node = options.node;\n            this.output = options.output;\n\n            var view = this;\n            var node = this.node;\n            this.$el\n                .attr( \"class\", 'callout '+this.label )\n                .css( { display: 'none' } )\n                .append(\n                    $(\"<div class='buttons'></div>\").append(\n                        $(\"<img/>\").attr('src', Galaxy.root + 'static/images/fugue/asterisk-small-outline.png').click( function() {\n                            var outputName = view.output.name;\n                            if( node.isWorkflowOutput( outputName ) ) {\n                                node.removeWorkflowOutput( outputName );\n                                view.$('img').attr('src', Galaxy.root + 'static/images/fugue/asterisk-small-outline.png');\n                            }else{\n                                node.addWorkflowOutput( outputName );\n                                view.$('img').attr('src', Galaxy.root + 'static/images/fugue/asterisk-small.png');\n                            }\n                            Globals.workflow.has_changes = true;\n                            Globals.canvas_manager.draw_overview();\n                        })))\n                .tooltip({delay:500, title: \"Mark dataset as a workflow output. All unmarked datasets will be hidden.\" });\n\n            this.$el.css({\n                    top: '50%',\n                    margin:'-8px 0px 0px 0px',\n                    right: 8\n                });\n            this.$el.show();\n            this.resetImage();\n        },\n\n        resetImage: function() {\n            if ( ! this.node.isWorkflowOutput( this.output.name ) ) {\n                this.$('img').attr('src', Galaxy.root + 'static/images/fugue/asterisk-small-outline.png');\n            } else{\n                this.$('img').attr('src', Galaxy.root + 'static/images/fugue/asterisk-small.png');\n            }\n        },\n\n        hoverImage: function() {\n            this.$('img').attr('src', Galaxy.root + 'static/images/fugue/asterisk-small-yellow.png');\n        }\n    });\n\n    return {\n        DataInputView       : DataInputView,\n        DataOutputView      : DataOutputView\n    }\n});\n"]}