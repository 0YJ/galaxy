{"version":3,"sources":["mvc/workflow/workflow-view-data.js"],"names":["define","Globals","DataInputView","Backbone","View","extend","className","options","this","input","initialize","nodeView","terminalElement","html","label","skipResize","position","top","display","el","$","append","$el","outerWidth","updateMaxWidth","DataOutputView","output","node","extensions","indexOf","join","calloutView","type","OutputCalloutView","hoverImage","resetImage","left","detach","tagName","view","attr","outputName","name","root","click","isWorkflowOutput","removeWorkflowOutput","Galaxy","canvas_manager","draw_overview","delay","title","margin","right","show"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow-view-data.js","sourcesContent":["define(['mvc/workflow/workflow-globals'], function( Globals ){\n\n    var DataInputView = Backbone.View.extend( {\n        className: \"form-row dataRow input-data-row\",\n\n        initialize: function( options ){\n            this.input = options.input;\n            this.nodeView = options.nodeView;\n            this.terminalElement = options.terminalElement;\n\n            this.$el.attr( \"name\", this.input.name )\n                    .html( this.input.label );\n\n            if( ! options.skipResize ) {\n                this.$el.css({  position:'absolute',\n                                left: -1000,\n                                top: -1000,\n                                display:'none'});\n            $('body').append(this.el);\n                this.nodeView.updateMaxWidth( this.$el.outerWidth() );\n                this.$el.css({ position:'',\n                               left:'',\n                               top:'',\n                               display:'' });\n                this.$el.remove();\n            }\n        }\n    });\n\n    var DataOutputView = Backbone.View.extend( {\n        className: \"form-row dataRow\",\n\n        initialize: function( options ) {\n            this.output = options.output;\n            this.terminalElement = options.terminalElement;\n            this.nodeView = options.nodeView;\n\n            var output = this.output;\n            var label = output.name;\n            var node = this.nodeView.node;\n\n            var isInput = output.extensions.indexOf( 'input' ) >= 0 || output.extensions.indexOf( 'input_collection' ) >= 0;\n            if ( ! isInput ) {\n                label = label + \" (\" + output.extensions.join(\", \") + \")\";\n            }\n            this.$el.html( label )\n            this.calloutView = null;\n            if (['tool', 'subworkflow'].indexOf(node.type) >= 0){\n                var calloutView = new OutputCalloutView( {\n                    \"label\": label,\n                    \"output\": output,\n                    \"node\": node,\n                });\n                this.calloutView = calloutView;\n                this.$el.append( calloutView.el );\n                this.$el.hover( function() { calloutView.hoverImage() }, function() { calloutView.resetImage() } );\n            }\n            this.$el.css({  position:'absolute',\n                            left: -1000,\n                            top: -1000,\n                            display:'none'});\n            $('body').append( this.el );\n            this.nodeView.updateMaxWidth( this.$el.outerWidth() + 17 );\n            this.$el.css({ position:'',\n                           left:'',\n                           top:'',\n                           display:'' })\n                    .detach();\n        },\n        redrawWorkflowOutput: function() {\n            if( this.calloutView ) {\n                this.calloutView.resetImage();\n            }\n        }\n    });\n\n    var OutputCalloutView = Backbone.View.extend( {\n        tagName: \"div\",\n\n        initialize: function( options ) {\n            this.label = options.label;\n            this.node = options.node;\n            this.output = options.output;\n\n            var view = this;\n            var node = this.node;\n            this.$el\n                .attr( \"class\", 'callout '+this.label )\n                .css( { display: 'none' } )\n                .append(\n                    $(\"<div class='buttons'></div>\").append(\n                        $(\"<img/>\").attr('src', Galaxy.root + 'static/images/fugue/asterisk-small-outline.png').click( function() {\n                            var outputName = view.output.name;\n                            if( node.isWorkflowOutput( outputName ) ) {\n                                node.removeWorkflowOutput( outputName );\n                                view.$('img').attr('src', Galaxy.root + 'static/images/fugue/asterisk-small-outline.png');\n                            }else{\n                                node.addWorkflowOutput( outputName );\n                                view.$('img').attr('src', Galaxy.root + 'static/images/fugue/asterisk-small.png');\n                            }\n                            Globals.workflow.has_changes = true;\n                            Globals.canvas_manager.draw_overview();\n                        })))\n                .tooltip({delay:500, title: \"Mark dataset as a workflow output. All unmarked datasets will be hidden.\" });\n\n            this.$el.css({\n                    top: '50%',\n                    margin:'-8px 0px 0px 0px',\n                    right: 8\n                });\n            this.$el.show();\n            this.resetImage();\n        },\n\n        resetImage: function() {\n            if ( ! this.node.isWorkflowOutput( this.output.name ) ) {\n                this.$('img').attr('src', Galaxy.root + 'static/images/fugue/asterisk-small-outline.png');\n            } else{\n                this.$('img').attr('src', Galaxy.root + 'static/images/fugue/asterisk-small.png');\n            }\n        },\n\n        hoverImage: function() {\n            this.$('img').attr('src', Galaxy.root + 'static/images/fugue/asterisk-small-yellow.png');\n        }\n    });\n\n    return {\n        DataInputView       : DataInputView,\n        DataOutputView      : DataOutputView\n    }\n});\n"]}