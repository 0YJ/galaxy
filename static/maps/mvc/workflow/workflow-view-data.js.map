{"version":3,"sources":["mvc/workflow/workflow-view-data.js"],"names":["DataInputView","Backbone","View","extend","className","initialize","options","this","input","nodeView","terminalElement","$el","attr","name","html","label","skipResize","css","position","left","append","el","outerWidth","top","display","DataOutputView","$","output","remove","node","extensions","indexOf","join","calloutView","type","OutputCalloutView","isInput","hoverImage","updateMaxWidth","redrawWorkflowOutput","resetImage","tagName","view","outputName","isWorkflowOutput","addWorkflowOutput","Galaxy","root","_workflowGlobals2","default","workflow","has_changes","tooltip","delay","title","margin","show"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow-view-data.js","sourcesContent":["import Globals from \"mvc/workflow/workflow-globals\";\nvar DataInputView = Backbone.View.extend({\n    className: \"form-row dataRow input-data-row\",\n\n    initialize: function(options) {\n        this.input = options.input;\n        this.nodeView = options.nodeView;\n        this.terminalElement = options.terminalElement;\n\n        this.$el.attr(\"name\", this.input.name).html(this.input.label);\n\n        if (!options.skipResize) {\n            this.$el.css({\n                position: \"absolute\",\n                left: -1000,\n                top: -1000,\n                display: \"none\"\n            });\n            $(\"body\").append(this.el);\n            this.nodeView.updateMaxWidth(this.$el.outerWidth());\n            this.$el.css({\n                position: \"\",\n                left: \"\",\n                top: \"\",\n                display: \"\"\n            });\n            this.$el.remove();\n        }\n    }\n});\n\nvar DataOutputView = Backbone.View.extend({\n    className: \"form-row dataRow\",\n\n    initialize: function(options) {\n        this.output = options.output;\n        this.terminalElement = options.terminalElement;\n        this.nodeView = options.nodeView;\n\n        var output = this.output;\n        var label = output.name;\n        var node = this.nodeView.node;\n\n        var isInput =\n            output.extensions.indexOf(\"input\") >= 0 ||\n            output.extensions.indexOf(\"input_collection\") >= 0;\n        if (!isInput) {\n            label = label + \" (\" + output.extensions.join(\", \") + \")\";\n        }\n        this.$el.html(label);\n        this.calloutView = null;\n        if ([\"tool\", \"subworkflow\"].indexOf(node.type) >= 0) {\n            var calloutView = new OutputCalloutView({\n                label: label,\n                output: output,\n                node: node\n            });\n            this.calloutView = calloutView;\n            this.$el.append(calloutView.el);\n            this.$el.hover(\n                function() {\n                    calloutView.hoverImage();\n                },\n                function() {\n                    calloutView.resetImage();\n                }\n            );\n        }\n        this.$el.css({\n            position: \"absolute\",\n            left: -1000,\n            top: -1000,\n            display: \"none\"\n        });\n        $(\"body\").append(this.el);\n        this.nodeView.updateMaxWidth(this.$el.outerWidth() + 17);\n        this.$el\n            .css({\n                position: \"\",\n                left: \"\",\n                top: \"\",\n                display: \"\"\n            })\n            .detach();\n    },\n    redrawWorkflowOutput: function() {\n        if (this.calloutView) {\n            this.calloutView.resetImage();\n        }\n    }\n});\n\nvar OutputCalloutView = Backbone.View.extend({\n    tagName: \"div\",\n\n    initialize: function(options) {\n        this.label = options.label;\n        this.node = options.node;\n        this.output = options.output;\n\n        var view = this;\n        var node = this.node;\n        this.$el\n            .attr(\"class\", \"callout \" + this.label)\n            .css({ display: \"none\" })\n            .append(\n                $(\"<div class='buttons'></div>\").append(\n                    $(\"<img/>\")\n                        .attr(\n                            \"src\",\n                            Galaxy.root +\n                                \"static/images/fugue/asterisk-small-outline.png\"\n                        )\n                        .click(function() {\n                            var outputName = view.output.name;\n                            if (node.isWorkflowOutput(outputName)) {\n                                node.removeWorkflowOutput(outputName);\n                                view\n                                    .$(\"img\")\n                                    .attr(\n                                        \"src\",\n                                        Galaxy.root +\n                                            \"static/images/fugue/asterisk-small-outline.png\"\n                                    );\n                            } else {\n                                node.addWorkflowOutput(outputName);\n                                view\n                                    .$(\"img\")\n                                    .attr(\n                                        \"src\",\n                                        Galaxy.root +\n                                            \"static/images/fugue/asterisk-small.png\"\n                                    );\n                            }\n                            Globals.workflow.has_changes = true;\n                            Globals.canvas_manager.draw_overview();\n                        })\n                )\n            )\n            .tooltip({\n                delay: 500,\n                title:\n                    \"Mark dataset as a workflow output. All unmarked datasets will be hidden.\"\n            });\n\n        this.$el.css({\n            top: \"50%\",\n            margin: \"-8px 0px 0px 0px\",\n            right: 8\n        });\n        this.$el.show();\n        this.resetImage();\n    },\n\n    resetImage: function() {\n        if (!this.node.isWorkflowOutput(this.output.name)) {\n            this.$(\"img\").attr(\n                \"src\",\n                Galaxy.root + \"static/images/fugue/asterisk-small-outline.png\"\n            );\n        } else {\n            this.$(\"img\").attr(\n                \"src\",\n                Galaxy.root + \"static/images/fugue/asterisk-small.png\"\n            );\n        }\n    },\n\n    hoverImage: function() {\n        this.$(\"img\").attr(\n            \"src\",\n            Galaxy.root + \"static/images/fugue/asterisk-small-yellow.png\"\n        );\n    }\n});\n\nexport default {\n    DataInputView: DataInputView,\n    DataOutputView: DataOutputView\n};\n"]}