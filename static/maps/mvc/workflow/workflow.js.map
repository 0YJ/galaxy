{"version":3,"sources":["mvc/workflow/workflow.js"],"names":["define","initialize","TAGS","WORKFLOWS","QueryStringParsing","mod_toastr","options","timeOut","extend","tagName","events","this","showInToolPanel","click #show-in-tool-panel","click #delete-workflow","click #rename-workflow","click #copy-workflow","render","removeWorkflow","_rowTemplate","wfName","success","model","get","save","renameWorkflow","Galaxy","root","name","newName","destroy","copyWorkflow","currentOwner","self","collection","at","wait","window","prompt","oldName","error","jqXHR","trHtml","renderTagEditor","TagEditor","el","workflow_mode","id","wfJson","toggle","user","attributes","username","_templateActions","create","View","setElement","resp","fetch","done","errorThrown","textStatus","responseJSON","err_msg","$","addClass","ev","preventDefault","checkboxHtml","show","unhighlightDropZone","wfId","_","readWorkflowFiles","reader","onload","wf_json","TagsEditor","find","msg_status","msg_text","header","templateActions","tableTemplate","confirmDelete","searchWorkflow","adjustActiondropdown","_showArgErrors","workflowItemView","$el_shared_wf_link","$el_searchinput","query","regular_expression","$el_tabletr","Backbone","css","bindAll","WorkflowCollection","bind","appendItem","on","_templateNoWorkflow","dragleave","drop","dragover","_templateActionButtons","_templateWorkflowTable","removeClass","tableHtml","e","ImportWorkflowView","files","dataTransfer","i","f","FileReader","theFile","getJSON","JSON","parse","result","WorkflowListView","readAsText","once","escape","info","_templateHeader","$el","html","models","each","item","WorkflowItemView","append","workflow","click","confirm","min_querylen","val","length","RegExp","hide","filter","test","text","empty","_mainTemplate","url","myexperiment_target_url"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow.js","sourcesContent":["/** Workflow view */\ndefine(\n    [\n        \"libs/toastr\",\n        \"mvc/tag\",\n        \"mvc/workflow/workflow-model\",\n        \"utils/query-string-parsing\"\n    ],\n    function(mod_toastr, TAGS, WORKFLOWS, QueryStringParsing) {\n        /** View of the individual workflows */\n        var WorkflowItemView = Backbone.View.extend({\n            tagName: \"tr\", // name of (orphan) root tag in this.el\n            initialize: function() {\n                _.bindAll(\n                    this,\n                    \"render\",\n                    \"_rowTemplate\",\n                    \"renderTagEditor\",\n                    \"_templateActions\",\n                    \"removeWorkflow\",\n                    \"copyWorkflow\"\n                ); // every function that uses 'this' as the current object should be in here\n                mod_toastr.options.timeOut = 1500;\n            },\n\n            events: {\n                \"click #show-in-tool-panel\": \"showInToolPanel\",\n                \"click #delete-workflow\": \"removeWorkflow\",\n                \"click #rename-workflow\": \"renameWorkflow\",\n                \"click #copy-workflow\": \"copyWorkflow\"\n            },\n\n            render: function() {\n                $(this.el).html(this._rowTemplate());\n                return this;\n            },\n\n            showInToolPanel: function() {\n                this.model.set(\n                    \"show_in_tool_panel\",\n                    !this.model.get(\"show_in_tool_panel\")\n                );\n                this.model.save();\n                // This reloads the whole page, so that the workflow appears in the tool panel.\n                // Ideally we would notify only the tool panel of a change\n                window.location = Galaxy.root + \"workflow\";\n            },\n\n            removeWorkflow: function() {\n                var wfName = this.model.get(\"name\");\n                if (\n                    window.confirm(\n                        \"Are you sure you want to delete workflow '\" +\n                            wfName +\n                            \"'?\"\n                    )\n                ) {\n                    this.model.destroy({\n                        success: function() {\n                            mod_toastr.success(\n                                \"Successfully deleted workflow '\" + wfName + \"'\"\n                            );\n                        }\n                    });\n                    this.remove();\n                }\n            },\n\n            renameWorkflow: function() {\n                var oldName = this.model.get(\"name\");\n                var newName = window.prompt(\n                    \"Enter a new Name for workflow '\" + oldName + \"'\",\n                    oldName\n                );\n                if (newName) {\n                    this.model.save(\n                        { name: newName },\n                        {\n                            success: function() {\n                                mod_toastr.success(\n                                    \"Successfully renamed workflow '\" +\n                                        oldName +\n                                        \"' to '\" +\n                                        newName +\n                                        \"'\"\n                                );\n                            }\n                        }\n                    );\n                    this.render();\n                }\n            },\n\n            copyWorkflow: function() {\n                var self = this;\n                var oldName = this.model.get(\"name\");\n                $.getJSON(\n                    this.model.urlRoot + \"/\" + this.model.id + \"/download\",\n                    function(wfJson) {\n                        var newName = \"Copy of \" + oldName;\n                        var currentOwner = self.model.get(\"owner\");\n                        if (currentOwner != Galaxy.user.attributes.username) {\n                            newName += \" shared by user \" + currentOwner;\n                        }\n                        wfJson.name = newName;\n                        self.collection.create(wfJson, {\n                            at: 0,\n                            wait: true,\n                            success: function() {\n                                mod_toastr.success(\n                                    \"Successfully copied workflow '\" +\n                                        oldName +\n                                        \"' to '\" +\n                                        newName +\n                                        \"'\"\n                                );\n                            },\n                            error: function(model, resp, options) {\n                                // signature seems to have changed over the course of backbone dev\n                                // see https://github.com/jashkenas/backbone/issues/2606#issuecomment-19289483\n                                mod_toastr.error(options.errorThrown);\n                            }\n                        });\n                    }\n                ).error(function(jqXHR, textStatus, errorThrown) {\n                    mod_toastr.error(jqXHR.responseJSON.err_msg);\n                });\n            },\n\n            _rowTemplate: function() {\n                var show = this.model.get(\"show_in_tool_panel\");\n                var wfId = this.model.id;\n                var checkboxHtml =\n                    '<input id=\"show-in-tool-panel\" type=\"checkbox\" class=\"show-in-tool-panel\" ' +\n                    (show ? 'checked=\"' + show + '\"' : \"\") +\n                    ' value=\"' +\n                    wfId +\n                    '\">';\n                var trHtml =\n                    \"<td>\" +\n                    '<div class=\"dropdown\">' +\n                    '<button class=\"menubutton\" type=\"button\" data-toggle=\"dropdown\">' +\n                    _.escape(this.model.get(\"name\")) +\n                    '<span class=\"caret\"></span>' +\n                    \"</button>\" +\n                    this._templateActions() +\n                    \"</div>\" +\n                    \"</td>\" +\n                    \"<td><span>\" +\n                    '<div class=\"' +\n                    wfId +\n                    ' tags-display\"></div>' +\n                    \"</td>\" +\n                    \"<td>\" +\n                    (this.model.get(\"owner\") === Galaxy.user.attributes.username\n                        ? \"You\"\n                        : this.model.get(\"owner\")) +\n                    \"</span></td>\" +\n                    \"<td>\" +\n                    this.model.get(\"number_of_steps\") +\n                    \"</td>\" +\n                    \"<td>\" +\n                    (this.model.get(\"published\") ? \"Yes\" : \"No\") +\n                    \"</td>\" +\n                    \"<td>\" +\n                    checkboxHtml +\n                    \"</td>\";\n                return trHtml;\n            },\n\n            renderTagEditor: function() {\n                var TagEditor = new TAGS.TagsEditor({\n                    model: this.model,\n                    el: $.find(\".\" + this.model.id + \".tags-display\"),\n                    workflow_mode: true\n                });\n                TagEditor.toggle(true);\n                TagEditor.render();\n            },\n\n            /** Template for user actions for workflows */\n            _templateActions: function() {\n                if (\n                    this.model.get(\"owner\") === Galaxy.user.attributes.username\n                ) {\n                    return (\n                        '<ul class=\"dropdown-menu action-dpd\">' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/editor?id=\" +\n                        this.model.id +\n                        '\">Edit</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/run?id=\" +\n                        this.model.id +\n                        '\">Run</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/sharing?id=\" +\n                        this.model.id +\n                        '\">Share</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"api/workflows/\" +\n                        this.model.id +\n                        '/download?format=json-download\">Download</a></li>' +\n                        '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' +\n                        '<li><a id=\"rename-workflow\" style=\"cursor: pointer;\">Rename</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/display_by_id?id=\" +\n                        this.model.id +\n                        '\">View</a></li>' +\n                        '<li><a id=\"delete-workflow\" style=\"cursor: pointer;\">Delete</a></li>' +\n                        \"</ul>\"\n                    );\n                } else {\n                    return (\n                        '<ul class=\"dropdown-menu action-dpd\">' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/display_by_username_and_slug?username=\" +\n                        this.model.get(\"owner\") +\n                        \"&slug=\" +\n                        this.model.get(\"slug\") +\n                        '\">View</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/run?id=\" +\n                        this.model.id +\n                        '\">Run</a></li>' +\n                        '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' +\n                        '<li><a class=\"link-confirm-shared-' +\n                        this.model.id +\n                        '\" href=\"' +\n                        Galaxy.root +\n                        \"workflow/sharing?unshare_me=True&id=\" +\n                        this.model.id +\n                        '\">Remove</a></li>' +\n                        \"</ul>\"\n                    );\n                }\n            }\n        });\n\n        /** View of the main workflow list page */\n        var WorkflowListView = Backbone.View.extend({\n            title: \"Workflows\",\n            initialize: function() {\n                this.setElement(\"<div/>\");\n                _.bindAll(this, \"adjustActiondropdown\");\n                this.collection = new WORKFLOWS.WorkflowCollection();\n                this.collection.fetch().done(this.render());\n                this.collection.bind(\"add\", this.appendItem);\n                this.collection.on(\"sync\", this.render, this);\n            },\n\n            events: {\n                dragleave: \"unhighlightDropZone\",\n                drop: \"drop\",\n                dragover: function(ev) {\n                    $(\".hidden_description_layer\").addClass(\"dragover\");\n                    $(\".menubutton\").addClass(\"background-none\");\n                    ev.preventDefault();\n                }\n            },\n\n            unhighlightDropZone: function() {\n                $(\".hidden_description_layer\").removeClass(\"dragover\");\n                $(\".menubutton\").removeClass(\"background-none\");\n            },\n\n            drop: function(e) {\n                // TODO: check that file is valid galaxy workflow\n                this.unhighlightDropZone();\n                e.preventDefault();\n                var files = e.dataTransfer.files;\n                var self = this;\n                for (var i = 0, f; (f = files[i]); i++) {\n                    self.readWorkflowFiles(f);\n                }\n            },\n\n            readWorkflowFiles: function(f) {\n                var self = this;\n                var reader = new FileReader();\n                reader.onload = function(theFile) {\n                    var wf_json;\n                    try {\n                        wf_json = JSON.parse(reader.result);\n                    } catch (e) {\n                        mod_toastr.error(\n                            \"Could not read file '\" +\n                                f.name +\n                                \"'. Verify it is a valid Galaxy workflow\"\n                        );\n                        wf_json = null;\n                    }\n                    if (wf_json) {\n                        self.collection.create(wf_json, {\n                            at: 0,\n                            wait: true,\n                            success: function() {\n                                mod_toastr.success(\n                                    \"Successfully imported workflow '\" +\n                                        wf_json.name +\n                                        \"'\"\n                                );\n                            },\n                            error: function(model, resp, options) {\n                                mod_toastr.error(options.errorThrown);\n                            }\n                        });\n                    }\n                };\n                reader.readAsText(f, \"utf-8\");\n            },\n\n            _showArgErrors: _.once(function() {\n                // Parse args out of params, display if there's a message.\n                var msg_text = QueryStringParsing.get(\"message\");\n                var msg_status = QueryStringParsing.get(\"status\");\n                if (msg_status === \"error\") {\n                    mod_toastr.error(\n                        _.escape(\n                            msg_text ||\n                                \"Unknown Error, please report this to an administrator.\"\n                        )\n                    );\n                } else if (msg_text) {\n                    mod_toastr.info(_.escape(msg_text));\n                }\n            }),\n\n            render: function() {\n                // Add workflow header\n                var header = this._templateHeader();\n                // Add the actions buttons\n                var templateActions = this._templateActionButtons();\n                var tableTemplate = this._templateWorkflowTable();\n                this.$el.html(header + templateActions + tableTemplate);\n                var self = this;\n                _(this.collection.models).each(function(item) {\n                    // in case collection is not empty\n                    self.appendItem(item);\n                    self.confirmDelete(item);\n                }, this);\n                var minQueryLength = 3;\n                this.searchWorkflow(\n                    this.$(\".search-wf\"),\n                    this.$(\".workflow-search tr\"),\n                    minQueryLength\n                );\n                this.adjustActiondropdown();\n                this._showArgErrors();\n                return this;\n            },\n\n            appendItem: function(item) {\n                var workflowItemView = new WorkflowItemView({\n                    model: item,\n                    collection: this.collection\n                });\n                $(\".workflow-search\").append(workflowItemView.render().el);\n                workflowItemView.renderTagEditor();\n            },\n\n            /** Add confirm box before removing/unsharing workflow */\n            confirmDelete: function(workflow) {\n                var $el_shared_wf_link = this.$(\n                    \".link-confirm-shared-\" + workflow.id\n                );\n                $el_shared_wf_link.click(function() {\n                    return window.confirm(\n                        \"Are you sure you want to remove the shared workflow '\" +\n                            workflow.attributes.name +\n                            \"'?\"\n                    );\n                });\n            },\n\n            /** Implement client side workflow search/filtering */\n            searchWorkflow: function(\n                $el_searchinput,\n                $el_tabletr,\n                min_querylen\n            ) {\n                $el_searchinput.on(\"keyup\", function() {\n                    var query = $(this).val();\n                    // Filter when query is at least 3 characters\n                    // otherwise show all rows\n                    if (query.length >= min_querylen) {\n                        // Ignore the query's case using 'i'\n                        var regular_expression = new RegExp(query, \"i\");\n                        $el_tabletr.hide();\n                        $el_tabletr\n                            .filter(function() {\n                                // Apply regular expression on each row's text\n                                // and show when there is a match\n                                return regular_expression.test($(this).text());\n                            })\n                            .show();\n                    } else {\n                        $el_tabletr.show();\n                    }\n                });\n            },\n\n            /** Ajust the position of dropdown with respect to table */\n            adjustActiondropdown: function() {\n                $(this.el).on(\"show.bs.dropdown\", function() {\n                    $(this.el).css(\"overflow\", \"inherit\");\n                });\n                $(this.el).on(\"hide.bs.dropdown\", function() {\n                    $(this.el).css(\"overflow\", \"auto\");\n                });\n            },\n\n            /** Template for no workflow */\n            _templateNoWorkflow: function() {\n                return '<div class=\"wf-nodata\"> You have no workflows. </div>';\n            },\n\n            /** Template for actions buttons */\n            _templateActionButtons: function() {\n                return (\n                    '<ul class=\"manage-table-actions\">' +\n                    \"<li>\" +\n                    '<input class=\"search-wf form-control\" type=\"text\" autocomplete=\"off\" placeholder=\"search for workflow...\">' +\n                    \"</li>\" +\n                    \"<li>\" +\n                    '<a class=\"action-button fa fa-plus wf-action\" id=\"new-workflow\" title=\"Create new workflow\" href=\"' +\n                    Galaxy.root +\n                    'workflow/create\">' +\n                    \"</a>\" +\n                    \"</li>\" +\n                    \"<li>\" +\n                    '<a class=\"action-button fa fa-upload wf-action\" id=\"import-workflow\" title=\"Upload or import workflow\" href=\"' +\n                    Galaxy.root +\n                    'workflow/import_workflow\">' +\n                    \"</a>\" +\n                    \"</li>\" +\n                    \"</ul>\"\n                );\n            },\n\n            /** Template for workflow table */\n            _templateWorkflowTable: function() {\n                var tableHtml =\n                    '<table class=\"table colored\"><thead>' +\n                    '<tr class=\"header\">' +\n                    \"<th>Name</th>\" +\n                    \"<th>Tags</th>\" +\n                    \"<th>Owner</th>\" +\n                    \"<th># of Steps</th>\" +\n                    \"<th>Published</th>\" +\n                    \"<th>Show in tools panel</th>\" +\n                    \"</tr></thead>\";\n                return (\n                    tableHtml +\n                    '<tbody class=\"workflow-search \"><div class=\"hidden_description_layer\"><p>Drop workflow files here to import</p>' +\n                    \"</tbody></table></div>\"\n                );\n            },\n\n            /** Main template */\n            _templateHeader: function() {\n                return (\n                    '<div class=\"page-container\">' +\n                    '<div class=\"user-workflows wf\">' +\n                    '<div class=\"response-message\"></div>' +\n                    \"<h2>Your workflows</h2>\" +\n                    \"</div>\" +\n                    \"</div>\"\n                );\n            }\n        });\n\n        var ImportWorkflowView = Backbone.View.extend({\n            initialize: function() {\n                this.setElement(\"<div/>\");\n                this.render();\n            },\n\n            /** Open page to import workflow */\n            render: function() {\n                var self = this;\n                $.getJSON(\n                    Galaxy.root + \"workflow/upload_import_workflow\",\n                    function(options) {\n                        self.$el.empty().append(self._mainTemplate(options));\n                    }\n                );\n            },\n\n            /** Template for the import workflow page */\n            _mainTemplate: function(options) {\n                return (\n                    \"<div class='toolForm'>\" +\n                    \"<div class='toolFormTitle'>Import Galaxy workflow</div>\" +\n                    \"<div class='toolFormBody'>\" +\n                    \"<form name='import_workflow' id='import_workflow' action='\" +\n                    Galaxy.root +\n                    \"workflow/upload_import_workflow\" +\n                    \"' enctype='multipart/form-data' method='POST'>\" +\n                    \"<div class='form-row'>\" +\n                    \"<label>Galaxy workflow URL:</label>\" +\n                    \"<input type='text' name='url' class='input-url' value='\" +\n                    options.url +\n                    \"' size='40'>\" +\n                    \"<div class='toolParamHelp' style='clear: both;'>\" +\n                    \"If the workflow is accessible via a URL, enter the URL above and click <b>Import</b>.\" +\n                    \"</div>\" +\n                    \"<div style='clear: both'></div>\" +\n                    \"</div>\" +\n                    \"<div class='form-row'>\" +\n                    \"<label>Galaxy workflow file:</label>\" +\n                    \"<div class='form-row-input'>\" +\n                    \"<input type='file' name='file_data' class='input-file'/>\" +\n                    \"</div>\" +\n                    \"<div class='toolParamHelp' style='clear: both;'>\" +\n                    \"If the workflow is in a file on your computer, choose it and then click <b>Import</b>.\" +\n                    \"</div>\" +\n                    \"<div style='clear: both'></div>\" +\n                    \"</div>\" +\n                    \"<div class='form-row'>\" +\n                    \"<input type='submit' class='primary-button wf-import' name='import_button' value='Import'>\" +\n                    \"</div>\" +\n                    \"</form>\" +\n                    \"<hr/>\" +\n                    \"<div class='form-row'>\" +\n                    \"<label>Import a Galaxy workflow from myExperiment:</label>\" +\n                    \"<div class='form-row-input'>\" +\n                    \"<a href='\" +\n                    options.myexperiment_target_url +\n                    \"'> Visit myExperiment</a>\" +\n                    \"</div>\" +\n                    \"<div class='toolParamHelp' style='clear: both;'>\" +\n                    \"Click the link above to visit myExperiment and browse for Galaxy workflows.\" +\n                    \"</div>\" +\n                    \"<div style='clear: both'></div>\" +\n                    \"</div>\" +\n                    \"</div>\" +\n                    \"</div>\"\n                );\n            }\n        });\n\n        return {\n            View: WorkflowListView,\n            ImportWorkflowView: ImportWorkflowView\n        };\n    }\n);\n"]}