{"version":3,"sources":["mvc/workflow/workflow.js"],"names":["mod_toastr","WorkflowItemView","Backbone","View","extend","tagName","initialize","_","bindAll","this","options","timeOut","events","click #show-in-tool-panel","click #delete-workflow","click #rename-workflow","click #copy-workflow","render","$","el","html","_rowTemplate","showInToolPanel","model","set","get","save","Galaxy","root","wfName","confirm","destroy","success","remove","renameWorkflow","oldName","window","location","prompt","newName","name","copyWorkflow","self","getJSON","urlRoot","id","user","attributes","username","currentOwner","wfJson","create","at","collection","error","errorThrown","jqXHR","textStatus","responseJSON","err_msg","trHtml","show","wfId","checkboxHtml","renderTagEditor","TagEditor","TagsEditor","workflow_mode","drop","escape","_templateActions","WorkflowListView","on","dragleave","ev","preventDefault","find","toggle","unhighlightDropZone","files","i","readWorkflowFiles","reader","wf_json","msg_text","msg_status","templateActions","tableTemplate","_showArgErrors","title","setElement","appendItem","workflowItemView","item","done","confirmDelete","addClass","$el_shared_wf_link","searchWorkflow","removeClass","$el_searchinput","e","f","$el_tabletr","hide","FileReader","onload","theFile","adjustActiondropdown","parse","result","css","_templateNoWorkflow","wait","_templateActionButtons","_templateWorkflowTable","resp","tableHtml","_templateHeader","once","ImportWorkflowView","_queryStringParsing2","default","$el","empty","append","header","workflow","click","min_querylen","query","val","length","regular_expression","RegExp","filter","test","text","_mainTemplate","url","myexperiment_target_url"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow.js","sourcesContent":["/** Workflow view */\nimport * as mod_toastr from \"libs/toastr\";\nimport TAGS from \"mvc/tag\";\nimport WORKFLOWS from \"mvc/workflow/workflow-model\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\n/** View of the individual workflows */\nvar WorkflowItemView = Backbone.View.extend({\n    tagName: \"tr\", // name of (orphan) root tag in this.el\n    initialize: function() {\n        _.bindAll(\n            this,\n            \"render\",\n            \"_rowTemplate\",\n            \"renderTagEditor\",\n            \"_templateActions\",\n            \"removeWorkflow\",\n            \"copyWorkflow\"\n        ); // every function that uses 'this' as the current object should be in here\n        mod_toastr.options.timeOut = 1500;\n    },\n\n    events: {\n        \"click #show-in-tool-panel\": \"showInToolPanel\",\n        \"click #delete-workflow\": \"removeWorkflow\",\n        \"click #rename-workflow\": \"renameWorkflow\",\n        \"click #copy-workflow\": \"copyWorkflow\"\n    },\n\n    render: function() {\n        $(this.el).html(this._rowTemplate());\n        return this;\n    },\n\n    showInToolPanel: function() {\n        this.model.set(\n            \"show_in_tool_panel\",\n            !this.model.get(\"show_in_tool_panel\")\n        );\n        this.model.save();\n        // This reloads the whole page, so that the workflow appears in the tool panel.\n        // Ideally we would notify only the tool panel of a change\n        window.location = Galaxy.root + \"workflow\";\n    },\n\n    removeWorkflow: function() {\n        var wfName = this.model.get(\"name\");\n        if (\n            window.confirm(\n                \"Are you sure you want to delete workflow '\" + wfName + \"'?\"\n            )\n        ) {\n            this.model.destroy({\n                success: function() {\n                    mod_toastr.success(\n                        \"Successfully deleted workflow '\" + wfName + \"'\"\n                    );\n                }\n            });\n            this.remove();\n        }\n    },\n\n    renameWorkflow: function() {\n        var oldName = this.model.get(\"name\");\n        var newName = window.prompt(\n            \"Enter a new Name for workflow '\" + oldName + \"'\",\n            oldName\n        );\n        if (newName) {\n            this.model.save(\n                { name: newName },\n                {\n                    success: function() {\n                        mod_toastr.success(\n                            \"Successfully renamed workflow '\" +\n                                oldName +\n                                \"' to '\" +\n                                newName +\n                                \"'\"\n                        );\n                    }\n                }\n            );\n            this.render();\n        }\n    },\n\n    copyWorkflow: function() {\n        var self = this;\n        var oldName = this.model.get(\"name\");\n        $.getJSON(\n            this.model.urlRoot + \"/\" + this.model.id + \"/download\",\n            wfJson => {\n                var newName = \"Copy of \" + oldName;\n                var currentOwner = self.model.get(\"owner\");\n                if (currentOwner != Galaxy.user.attributes.username) {\n                    newName += \" shared by user \" + currentOwner;\n                }\n                wfJson.name = newName;\n                self.collection.create(wfJson, {\n                    at: 0,\n                    wait: true,\n                    success: function() {\n                        mod_toastr.success(\n                            \"Successfully copied workflow '\" +\n                                oldName +\n                                \"' to '\" +\n                                newName +\n                                \"'\"\n                        );\n                    },\n                    error: function(model, resp, options) {\n                        // signature seems to have changed over the course of backbone dev\n                        // see https://github.com/jashkenas/backbone/issues/2606#issuecomment-19289483\n                        mod_toastr.error(options.errorThrown);\n                    }\n                });\n            }\n        ).error((jqXHR, textStatus, errorThrown) => {\n            mod_toastr.error(jqXHR.responseJSON.err_msg);\n        });\n    },\n\n    _rowTemplate: function() {\n        var show = this.model.get(\"show_in_tool_panel\");\n        var wfId = this.model.id;\n        var checkboxHtml =\n            '<input id=\"show-in-tool-panel\" type=\"checkbox\" class=\"show-in-tool-panel\" ' +\n            (show ? 'checked=\"' + show + '\"' : \"\") +\n            ' value=\"' +\n            wfId +\n            '\">';\n        var trHtml =\n            \"<td>\" +\n            '<div class=\"dropdown\">' +\n            '<button class=\"menubutton\" type=\"button\" data-toggle=\"dropdown\">' +\n            _.escape(this.model.get(\"name\")) +\n            '<span class=\"caret\"></span>' +\n            \"</button>\" +\n            this._templateActions() +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td><span>\" +\n            '<div class=\"' +\n            wfId +\n            ' tags-display\"></div>' +\n            \"</td>\" +\n            \"<td>\" +\n            (this.model.get(\"owner\") === Galaxy.user.attributes.username\n                ? \"You\"\n                : this.model.get(\"owner\")) +\n            \"</span></td>\" +\n            \"<td>\" +\n            this.model.get(\"number_of_steps\") +\n            \"</td>\" +\n            \"<td>\" +\n            (this.model.get(\"published\") ? \"Yes\" : \"No\") +\n            \"</td>\" +\n            \"<td>\" +\n            checkboxHtml +\n            \"</td>\";\n        return trHtml;\n    },\n\n    renderTagEditor: function() {\n        var TagEditor = new TAGS.TagsEditor({\n            model: this.model,\n            el: $.find(\".\" + this.model.id + \".tags-display\"),\n            workflow_mode: true\n        });\n        TagEditor.toggle(true);\n        TagEditor.render();\n    },\n\n    /** Template for user actions for workflows */\n    _templateActions: function() {\n        if (this.model.get(\"owner\") === Galaxy.user.attributes.username) {\n            return (\n                '<ul class=\"dropdown-menu action-dpd\">' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"workflow/editor?id=\" +\n                this.model.id +\n                '\">Edit</a></li>' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"workflow/run?id=\" +\n                this.model.id +\n                '\">Run</a></li>' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"workflow/sharing?id=\" +\n                this.model.id +\n                '\">Share</a></li>' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"api/workflows/\" +\n                this.model.id +\n                '/download?format=json-download\">Download</a></li>' +\n                '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' +\n                '<li><a id=\"rename-workflow\" style=\"cursor: pointer;\">Rename</a></li>' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"workflow/display_by_id?id=\" +\n                this.model.id +\n                '\">View</a></li>' +\n                '<li><a id=\"delete-workflow\" style=\"cursor: pointer;\">Delete</a></li>' +\n                \"</ul>\"\n            );\n        } else {\n            return (\n                '<ul class=\"dropdown-menu action-dpd\">' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"workflow/display_by_username_and_slug?username=\" +\n                this.model.get(\"owner\") +\n                \"&slug=\" +\n                this.model.get(\"slug\") +\n                '\">View</a></li>' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"workflow/run?id=\" +\n                this.model.id +\n                '\">Run</a></li>' +\n                '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' +\n                '<li><a class=\"link-confirm-shared-' +\n                this.model.id +\n                '\" href=\"' +\n                Galaxy.root +\n                \"workflow/sharing?unshare_me=True&id=\" +\n                this.model.id +\n                '\">Remove</a></li>' +\n                \"</ul>\"\n            );\n        }\n    }\n});\n\n/** View of the main workflow list page */\nvar WorkflowListView = Backbone.View.extend({\n    title: \"Workflows\",\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        _.bindAll(this, \"adjustActiondropdown\");\n        this.collection = new WORKFLOWS.WorkflowCollection();\n        this.collection.fetch().done(this.render());\n        this.collection.bind(\"add\", this.appendItem);\n        this.collection.on(\"sync\", this.render, this);\n    },\n\n    events: {\n        dragleave: \"unhighlightDropZone\",\n        drop: \"drop\",\n        dragover: function(ev) {\n            $(\".hidden_description_layer\").addClass(\"dragover\");\n            $(\".menubutton\").addClass(\"background-none\");\n            ev.preventDefault();\n        }\n    },\n\n    unhighlightDropZone: function() {\n        $(\".hidden_description_layer\").removeClass(\"dragover\");\n        $(\".menubutton\").removeClass(\"background-none\");\n    },\n\n    drop: function(e) {\n        // TODO: check that file is valid galaxy workflow\n        this.unhighlightDropZone();\n        e.preventDefault();\n        var files = e.dataTransfer.files;\n        var self = this;\n        for (var i = 0, f; (f = files[i]); i++) {\n            self.readWorkflowFiles(f);\n        }\n    },\n\n    readWorkflowFiles: function(f) {\n        var self = this;\n        var reader = new FileReader();\n        reader.onload = theFile => {\n            var wf_json;\n            try {\n                wf_json = JSON.parse(reader.result);\n            } catch (e) {\n                mod_toastr.error(\n                    \"Could not read file '\" +\n                        f.name +\n                        \"'. Verify it is a valid Galaxy workflow\"\n                );\n                wf_json = null;\n            }\n            if (wf_json) {\n                self.collection.create(wf_json, {\n                    at: 0,\n                    wait: true,\n                    success: function() {\n                        mod_toastr.success(\n                            \"Successfully imported workflow '\" +\n                                wf_json.name +\n                                \"'\"\n                        );\n                    },\n                    error: function(model, resp, options) {\n                        mod_toastr.error(options.errorThrown);\n                    }\n                });\n            }\n        };\n        reader.readAsText(f, \"utf-8\");\n    },\n\n    _showArgErrors: _.once(() => {\n        // Parse args out of params, display if there's a message.\n        var msg_text = QueryStringParsing.get(\"message\");\n        var msg_status = QueryStringParsing.get(\"status\");\n        if (msg_status === \"error\") {\n            mod_toastr.error(\n                _.escape(\n                    msg_text ||\n                        \"Unknown Error, please report this to an administrator.\"\n                )\n            );\n        } else if (msg_text) {\n            mod_toastr.info(_.escape(msg_text));\n        }\n    }),\n\n    render: function() {\n        // Add workflow header\n        var header = this._templateHeader();\n        // Add the actions buttons\n        var templateActions = this._templateActionButtons();\n        var tableTemplate = this._templateWorkflowTable();\n        this.$el.html(header + templateActions + tableTemplate);\n        var self = this;\n        _(this.collection.models).each(item => {\n            // in case collection is not empty\n            self.appendItem(item);\n            self.confirmDelete(item);\n        }, this);\n        var minQueryLength = 3;\n        this.searchWorkflow(\n            this.$(\".search-wf\"),\n            this.$(\".workflow-search tr\"),\n            minQueryLength\n        );\n        this.adjustActiondropdown();\n        this._showArgErrors();\n        return this;\n    },\n\n    appendItem: function(item) {\n        var workflowItemView = new WorkflowItemView({\n            model: item,\n            collection: this.collection\n        });\n        $(\".workflow-search\").append(workflowItemView.render().el);\n        workflowItemView.renderTagEditor();\n    },\n\n    /** Add confirm box before removing/unsharing workflow */\n    confirmDelete: function(workflow) {\n        var $el_shared_wf_link = this.$(\".link-confirm-shared-\" + workflow.id);\n        $el_shared_wf_link.click(() =>\n            window.confirm(\n                \"Are you sure you want to remove the shared workflow '\" +\n                    workflow.attributes.name +\n                    \"'?\"\n            )\n        );\n    },\n\n    /** Implement client side workflow search/filtering */\n    searchWorkflow: function($el_searchinput, $el_tabletr, min_querylen) {\n        $el_searchinput.on(\"keyup\", function() {\n            var query = $(this).val();\n            // Filter when query is at least 3 characters\n            // otherwise show all rows\n            if (query.length >= min_querylen) {\n                // Ignore the query's case using 'i'\n                var regular_expression = new RegExp(query, \"i\");\n                $el_tabletr.hide();\n                $el_tabletr\n                    .filter(function() {\n                        // Apply regular expression on each row's text\n                        // and show when there is a match\n                        return regular_expression.test($(this).text());\n                    })\n                    .show();\n            } else {\n                $el_tabletr.show();\n            }\n        });\n    },\n\n    /** Ajust the position of dropdown with respect to table */\n    adjustActiondropdown: function() {\n        $(this.el).on(\"show.bs.dropdown\", function() {\n            $(this.el).css(\"overflow\", \"inherit\");\n        });\n        $(this.el).on(\"hide.bs.dropdown\", function() {\n            $(this.el).css(\"overflow\", \"auto\");\n        });\n    },\n\n    /** Template for no workflow */\n    _templateNoWorkflow: function() {\n        return '<div class=\"wf-nodata\"> You have no workflows. </div>';\n    },\n\n    /** Template for actions buttons */\n    _templateActionButtons: function() {\n        return (\n            '<ul class=\"manage-table-actions\">' +\n            \"<li>\" +\n            '<input class=\"search-wf form-control\" type=\"text\" autocomplete=\"off\" placeholder=\"search for workflow...\">' +\n            \"</li>\" +\n            \"<li>\" +\n            '<a class=\"action-button fa fa-plus wf-action\" id=\"new-workflow\" title=\"Create new workflow\" href=\"' +\n            Galaxy.root +\n            'workflow/create\">' +\n            \"</a>\" +\n            \"</li>\" +\n            \"<li>\" +\n            '<a class=\"action-button fa fa-upload wf-action\" id=\"import-workflow\" title=\"Upload or import workflow\" href=\"' +\n            Galaxy.root +\n            'workflow/import_workflow\">' +\n            \"</a>\" +\n            \"</li>\" +\n            \"</ul>\"\n        );\n    },\n\n    /** Template for workflow table */\n    _templateWorkflowTable: function() {\n        var tableHtml =\n            '<table class=\"table colored\"><thead>' +\n            '<tr class=\"header\">' +\n            \"<th>Name</th>\" +\n            \"<th>Tags</th>\" +\n            \"<th>Owner</th>\" +\n            \"<th># of Steps</th>\" +\n            \"<th>Published</th>\" +\n            \"<th>Show in tools panel</th>\" +\n            \"</tr></thead>\";\n        return (\n            tableHtml +\n            '<tbody class=\"workflow-search \"><div class=\"hidden_description_layer\"><p>Drop workflow files here to import</p>' +\n            \"</tbody></table></div>\"\n        );\n    },\n\n    /** Main template */\n    _templateHeader: function() {\n        return (\n            '<div class=\"page-container\">' +\n            '<div class=\"user-workflows wf\">' +\n            '<div class=\"response-message\"></div>' +\n            \"<h2>Your workflows</h2>\" +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\n\nvar ImportWorkflowView = Backbone.View.extend({\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    /** Open page to import workflow */\n    render: function() {\n        var self = this;\n        $.getJSON(Galaxy.root + \"workflow/upload_import_workflow\", options => {\n            self.$el.empty().append(self._mainTemplate(options));\n        });\n    },\n\n    /** Template for the import workflow page */\n    _mainTemplate: function(options) {\n        return (\n            \"<div class='toolForm'>\" +\n            \"<div class='toolFormTitle'>Import Galaxy workflow</div>\" +\n            \"<div class='toolFormBody'>\" +\n            \"<form name='import_workflow' id='import_workflow' action='\" +\n            Galaxy.root +\n            \"workflow/upload_import_workflow\" +\n            \"' enctype='multipart/form-data' method='POST'>\" +\n            \"<div class='form-row'>\" +\n            \"<label>Galaxy workflow URL:</label>\" +\n            \"<input type='text' name='url' class='input-url' value='\" +\n            options.url +\n            \"' size='40'>\" +\n            \"<div class='toolParamHelp' style='clear: both;'>\" +\n            \"If the workflow is accessible via a URL, enter the URL above and click <b>Import</b>.\" +\n            \"</div>\" +\n            \"<div style='clear: both'></div>\" +\n            \"</div>\" +\n            \"<div class='form-row'>\" +\n            \"<label>Galaxy workflow file:</label>\" +\n            \"<div class='form-row-input'>\" +\n            \"<input type='file' name='file_data' class='input-file'/>\" +\n            \"</div>\" +\n            \"<div class='toolParamHelp' style='clear: both;'>\" +\n            \"If the workflow is in a file on your computer, choose it and then click <b>Import</b>.\" +\n            \"</div>\" +\n            \"<div style='clear: both'></div>\" +\n            \"</div>\" +\n            \"<div class='form-row'>\" +\n            \"<input type='submit' class='primary-button wf-import' name='import_button' value='Import'>\" +\n            \"</div>\" +\n            \"</form>\" +\n            \"<hr/>\" +\n            \"<div class='form-row'>\" +\n            \"<label>Import a Galaxy workflow from myExperiment:</label>\" +\n            \"<div class='form-row-input'>\" +\n            \"<a href='\" +\n            options.myexperiment_target_url +\n            \"'> Visit myExperiment</a>\" +\n            \"</div>\" +\n            \"<div class='toolParamHelp' style='clear: both;'>\" +\n            \"Click the link above to visit myExperiment and browse for Galaxy workflows.\" +\n            \"</div>\" +\n            \"<div style='clear: both'></div>\" +\n            \"</div>\" +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: WorkflowListView,\n    ImportWorkflowView: ImportWorkflowView\n};\n"]}