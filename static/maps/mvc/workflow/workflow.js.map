{"version":3,"sources":["mvc/workflow/workflow.js"],"names":["WorkflowItemView","Backbone","View","extend","tagName","initialize","_","bindAll","this","_toastr2","default","options","timeOut","events","click #show-in-tool-panel","render","$","el","html","_rowTemplate","showInToolPanel","model","set","get","window","location","Galaxy","root","removeWorkflow","wfName","confirm","destroy","success","remove","renameWorkflow","oldName","newName","save","name","wait","getJSON","error","resp","wfJson","currentOwner","self","user","attributes","username","collection","create","at","TagEditor","TagsEditor","workflow_mode","errorThrown","jqXHR","textStatus","responseJSON","err_msg","show","wfId","id","checkboxHtml","WorkflowListView","escape","drop","dragover","ev","preventDefault","e","readWorkflowFiles","_tag2","find","reader","_templateActions","readAsText","_showArgErrors","msg_text","msg_status","tableTemplate","confirmDelete","searchWorkflow","appendItem","workflowItemView","item","title","setElement","_workflowModel2","WorkflowCollection","$el_searchinput","done","query","val","on","dragleave","$el_tabletr","addClass","unhighlightDropZone","removeClass","adjustActiondropdown","f","dataTransfer","files","i","FileReader","onload","theFile","_templateActionButtons","wf_json","JSON","parse","result","_templateWorkflowTable","tableHtml","_templateHeader","ImportWorkflowView","_mainTemplate","_queryStringParsing2","info","header","templateActions","$el","models","each","append","renderTagEditor","workflow","click","min_querylen","length","regular_expression","RegExp","hide","filter","test","text","css","_templateNoWorkflow","empty","url","myexperiment_target_url"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow.js","sourcesContent":["/** Workflow view */\nimport mod_toastr from \"libs/toastr\";\nimport TAGS from \"mvc/tag\";\nimport WORKFLOWS from \"mvc/workflow/workflow-model\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\n/** View of the individual workflows */\nvar WorkflowItemView = Backbone.View.extend({\n    tagName: \"tr\", // name of (orphan) root tag in this.el\n    initialize: function() {\n        _.bindAll(\n            this,\n            \"render\",\n            \"_rowTemplate\",\n            \"renderTagEditor\",\n            \"_templateActions\",\n            \"removeWorkflow\",\n            \"copyWorkflow\"\n        ); // every function that uses 'this' as the current object should be in here\n        mod_toastr.options.timeOut = 1500;\n    },\n\n    events: {\n        \"click #show-in-tool-panel\": \"showInToolPanel\",\n        \"click #delete-workflow\": \"removeWorkflow\",\n        \"click #rename-workflow\": \"renameWorkflow\",\n        \"click #copy-workflow\": \"copyWorkflow\"\n    },\n\n    render: function() {\n        $(this.el).html(this._rowTemplate());\n        return this;\n    },\n\n    showInToolPanel: function() {\n        this.model.set(\n            \"show_in_tool_panel\",\n            !this.model.get(\"show_in_tool_panel\")\n        );\n        this.model.save();\n        // This reloads the whole page, so that the workflow appears in the tool panel.\n        // Ideally we would notify only the tool panel of a change\n        window.location = Galaxy.root + \"workflow\";\n    },\n\n    removeWorkflow: function() {\n        var wfName = this.model.get(\"name\");\n        if (\n            window.confirm(\n                \"Are you sure you want to delete workflow '\" + wfName + \"'?\"\n            )\n        ) {\n            this.model.destroy({\n                success: function() {\n                    mod_toastr.success(\n                        \"Successfully deleted workflow '\" + wfName + \"'\"\n                    );\n                }\n            });\n            this.remove();\n        }\n    },\n\n    renameWorkflow: function() {\n        var oldName = this.model.get(\"name\");\n        var newName = window.prompt(\n            \"Enter a new Name for workflow '\" + oldName + \"'\",\n            oldName\n        );\n        if (newName) {\n            this.model.save(\n                { name: newName },\n                {\n                    success: function() {\n                        mod_toastr.success(\n                            \"Successfully renamed workflow '\" +\n                                oldName +\n                                \"' to '\" +\n                                newName +\n                                \"'\"\n                        );\n                    }\n                }\n            );\n            this.render();\n        }\n    },\n\n    copyWorkflow: function() {\n        var self = this;\n        var oldName = this.model.get(\"name\");\n        $.getJSON(\n            this.model.urlRoot + \"/\" + this.model.id + \"/download\",\n            function(wfJson) {\n                var newName = \"Copy of \" + oldName;\n                var currentOwner = self.model.get(\"owner\");\n                if (currentOwner != Galaxy.user.attributes.username) {\n                    newName += \" shared by user \" + currentOwner;\n                }\n                wfJson.name = newName;\n                self.collection.create(wfJson, {\n                    at: 0,\n                    wait: true,\n                    success: function() {\n                        mod_toastr.success(\n                            \"Successfully copied workflow '\" +\n                                oldName +\n                                \"' to '\" +\n                                newName +\n                                \"'\"\n                        );\n                    },\n                    error: function(model, resp, options) {\n                        // signature seems to have changed over the course of backbone dev\n                        // see https://github.com/jashkenas/backbone/issues/2606#issuecomment-19289483\n                        mod_toastr.error(options.errorThrown);\n                    }\n                });\n            }\n        ).error(function(jqXHR, textStatus, errorThrown) {\n            mod_toastr.error(jqXHR.responseJSON.err_msg);\n        });\n    },\n\n    _rowTemplate: function() {\n        var show = this.model.get(\"show_in_tool_panel\");\n        var wfId = this.model.id;\n        var checkboxHtml =\n            '<input id=\"show-in-tool-panel\" type=\"checkbox\" class=\"show-in-tool-panel\" ' +\n            (show ? 'checked=\"' + show + '\"' : \"\") +\n            ' value=\"' +\n            wfId +\n            '\">';\n        var trHtml =\n            \"<td>\" +\n            '<div class=\"dropdown\">' +\n            '<button class=\"menubutton\" type=\"button\" data-toggle=\"dropdown\">' +\n            _.escape(this.model.get(\"name\")) +\n            '<span class=\"caret\"></span>' +\n            \"</button>\" +\n            this._templateActions() +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td><span>\" +\n            '<div class=\"' +\n            wfId +\n            ' tags-display\"></div>' +\n            \"</td>\" +\n            \"<td>\" +\n            (this.model.get(\"owner\") === Galaxy.user.attributes.username\n                ? \"You\"\n                : this.model.get(\"owner\")) +\n            \"</span></td>\" +\n            \"<td>\" +\n            this.model.get(\"number_of_steps\") +\n            \"</td>\" +\n            \"<td>\" +\n            (this.model.get(\"published\") ? \"Yes\" : \"No\") +\n            \"</td>\" +\n            \"<td>\" +\n            checkboxHtml +\n            \"</td>\";\n        return trHtml;\n    },\n\n    renderTagEditor: function() {\n        var TagEditor = new TAGS.TagsEditor({\n            model: this.model,\n            el: $.find(\".\" + this.model.id + \".tags-display\"),\n            workflow_mode: true\n        });\n        TagEditor.toggle(true);\n        TagEditor.render();\n    },\n\n    /** Template for user actions for workflows */\n    _templateActions: function() {\n        if (this.model.get(\"owner\") === Galaxy.user.attributes.username) {\n            return (\n                '<ul class=\"dropdown-menu action-dpd\">' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"workflow/editor?id=\" +\n                this.model.id +\n                '\">Edit</a></li>' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"workflow/run?id=\" +\n                this.model.id +\n                '\">Run</a></li>' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"workflow/sharing?id=\" +\n                this.model.id +\n                '\">Share</a></li>' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"api/workflows/\" +\n                this.model.id +\n                '/download?format=json-download\">Download</a></li>' +\n                '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' +\n                '<li><a id=\"rename-workflow\" style=\"cursor: pointer;\">Rename</a></li>' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"workflow/display_by_id?id=\" +\n                this.model.id +\n                '\">View</a></li>' +\n                '<li><a id=\"delete-workflow\" style=\"cursor: pointer;\">Delete</a></li>' +\n                \"</ul>\"\n            );\n        } else {\n            return (\n                '<ul class=\"dropdown-menu action-dpd\">' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"workflow/display_by_username_and_slug?username=\" +\n                this.model.get(\"owner\") +\n                \"&slug=\" +\n                this.model.get(\"slug\") +\n                '\">View</a></li>' +\n                '<li><a href=\"' +\n                Galaxy.root +\n                \"workflow/run?id=\" +\n                this.model.id +\n                '\">Run</a></li>' +\n                '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' +\n                '<li><a class=\"link-confirm-shared-' +\n                this.model.id +\n                '\" href=\"' +\n                Galaxy.root +\n                \"workflow/sharing?unshare_me=True&id=\" +\n                this.model.id +\n                '\">Remove</a></li>' +\n                \"</ul>\"\n            );\n        }\n    }\n});\n\n/** View of the main workflow list page */\nvar WorkflowListView = Backbone.View.extend({\n    title: \"Workflows\",\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        _.bindAll(this, \"adjustActiondropdown\");\n        this.collection = new WORKFLOWS.WorkflowCollection();\n        this.collection.fetch().done(this.render());\n        this.collection.bind(\"add\", this.appendItem);\n        this.collection.on(\"sync\", this.render, this);\n    },\n\n    events: {\n        dragleave: \"unhighlightDropZone\",\n        drop: \"drop\",\n        dragover: function(ev) {\n            $(\".hidden_description_layer\").addClass(\"dragover\");\n            $(\".menubutton\").addClass(\"background-none\");\n            ev.preventDefault();\n        }\n    },\n\n    unhighlightDropZone: function() {\n        $(\".hidden_description_layer\").removeClass(\"dragover\");\n        $(\".menubutton\").removeClass(\"background-none\");\n    },\n\n    drop: function(e) {\n        // TODO: check that file is valid galaxy workflow\n        this.unhighlightDropZone();\n        e.preventDefault();\n        var files = e.dataTransfer.files;\n        var self = this;\n        for (var i = 0, f; (f = files[i]); i++) {\n            self.readWorkflowFiles(f);\n        }\n    },\n\n    readWorkflowFiles: function(f) {\n        var self = this;\n        var reader = new FileReader();\n        reader.onload = function(theFile) {\n            var wf_json;\n            try {\n                wf_json = JSON.parse(reader.result);\n            } catch (e) {\n                mod_toastr.error(\n                    \"Could not read file '\" +\n                        f.name +\n                        \"'. Verify it is a valid Galaxy workflow\"\n                );\n                wf_json = null;\n            }\n            if (wf_json) {\n                self.collection.create(wf_json, {\n                    at: 0,\n                    wait: true,\n                    success: function() {\n                        mod_toastr.success(\n                            \"Successfully imported workflow '\" +\n                                wf_json.name +\n                                \"'\"\n                        );\n                    },\n                    error: function(model, resp, options) {\n                        mod_toastr.error(options.errorThrown);\n                    }\n                });\n            }\n        };\n        reader.readAsText(f, \"utf-8\");\n    },\n\n    _showArgErrors: _.once(function() {\n        // Parse args out of params, display if there's a message.\n        var msg_text = QueryStringParsing.get(\"message\");\n        var msg_status = QueryStringParsing.get(\"status\");\n        if (msg_status === \"error\") {\n            mod_toastr.error(\n                _.escape(\n                    msg_text ||\n                        \"Unknown Error, please report this to an administrator.\"\n                )\n            );\n        } else if (msg_text) {\n            mod_toastr.info(_.escape(msg_text));\n        }\n    }),\n\n    render: function() {\n        // Add workflow header\n        var header = this._templateHeader();\n        // Add the actions buttons\n        var templateActions = this._templateActionButtons();\n        var tableTemplate = this._templateWorkflowTable();\n        this.$el.html(header + templateActions + tableTemplate);\n        var self = this;\n        _(this.collection.models).each(function(item) {\n            // in case collection is not empty\n            self.appendItem(item);\n            self.confirmDelete(item);\n        }, this);\n        var minQueryLength = 3;\n        this.searchWorkflow(\n            this.$(\".search-wf\"),\n            this.$(\".workflow-search tr\"),\n            minQueryLength\n        );\n        this.adjustActiondropdown();\n        this._showArgErrors();\n        return this;\n    },\n\n    appendItem: function(item) {\n        var workflowItemView = new WorkflowItemView({\n            model: item,\n            collection: this.collection\n        });\n        $(\".workflow-search\").append(workflowItemView.render().el);\n        workflowItemView.renderTagEditor();\n    },\n\n    /** Add confirm box before removing/unsharing workflow */\n    confirmDelete: function(workflow) {\n        var $el_shared_wf_link = this.$(\".link-confirm-shared-\" + workflow.id);\n        $el_shared_wf_link.click(function() {\n            return window.confirm(\n                \"Are you sure you want to remove the shared workflow '\" +\n                    workflow.attributes.name +\n                    \"'?\"\n            );\n        });\n    },\n\n    /** Implement client side workflow search/filtering */\n    searchWorkflow: function($el_searchinput, $el_tabletr, min_querylen) {\n        $el_searchinput.on(\"keyup\", function() {\n            var query = $(this).val();\n            // Filter when query is at least 3 characters\n            // otherwise show all rows\n            if (query.length >= min_querylen) {\n                // Ignore the query's case using 'i'\n                var regular_expression = new RegExp(query, \"i\");\n                $el_tabletr.hide();\n                $el_tabletr\n                    .filter(function() {\n                        // Apply regular expression on each row's text\n                        // and show when there is a match\n                        return regular_expression.test($(this).text());\n                    })\n                    .show();\n            } else {\n                $el_tabletr.show();\n            }\n        });\n    },\n\n    /** Ajust the position of dropdown with respect to table */\n    adjustActiondropdown: function() {\n        $(this.el).on(\"show.bs.dropdown\", function() {\n            $(this.el).css(\"overflow\", \"inherit\");\n        });\n        $(this.el).on(\"hide.bs.dropdown\", function() {\n            $(this.el).css(\"overflow\", \"auto\");\n        });\n    },\n\n    /** Template for no workflow */\n    _templateNoWorkflow: function() {\n        return '<div class=\"wf-nodata\"> You have no workflows. </div>';\n    },\n\n    /** Template for actions buttons */\n    _templateActionButtons: function() {\n        return (\n            '<ul class=\"manage-table-actions\">' +\n            \"<li>\" +\n            '<input class=\"search-wf form-control\" type=\"text\" autocomplete=\"off\" placeholder=\"search for workflow...\">' +\n            \"</li>\" +\n            \"<li>\" +\n            '<a class=\"action-button fa fa-plus wf-action\" id=\"new-workflow\" title=\"Create new workflow\" href=\"' +\n            Galaxy.root +\n            'workflow/create\">' +\n            \"</a>\" +\n            \"</li>\" +\n            \"<li>\" +\n            '<a class=\"action-button fa fa-upload wf-action\" id=\"import-workflow\" title=\"Upload or import workflow\" href=\"' +\n            Galaxy.root +\n            'workflow/import_workflow\">' +\n            \"</a>\" +\n            \"</li>\" +\n            \"</ul>\"\n        );\n    },\n\n    /** Template for workflow table */\n    _templateWorkflowTable: function() {\n        var tableHtml =\n            '<table class=\"table colored\"><thead>' +\n            '<tr class=\"header\">' +\n            \"<th>Name</th>\" +\n            \"<th>Tags</th>\" +\n            \"<th>Owner</th>\" +\n            \"<th># of Steps</th>\" +\n            \"<th>Published</th>\" +\n            \"<th>Show in tools panel</th>\" +\n            \"</tr></thead>\";\n        return (\n            tableHtml +\n            '<tbody class=\"workflow-search \"><div class=\"hidden_description_layer\"><p>Drop workflow files here to import</p>' +\n            \"</tbody></table></div>\"\n        );\n    },\n\n    /** Main template */\n    _templateHeader: function() {\n        return (\n            '<div class=\"page-container\">' +\n            '<div class=\"user-workflows wf\">' +\n            '<div class=\"response-message\"></div>' +\n            \"<h2>Your workflows</h2>\" +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\n\nvar ImportWorkflowView = Backbone.View.extend({\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    /** Open page to import workflow */\n    render: function() {\n        var self = this;\n        $.getJSON(Galaxy.root + \"workflow/upload_import_workflow\", function(\n            options\n        ) {\n            self.$el.empty().append(self._mainTemplate(options));\n        });\n    },\n\n    /** Template for the import workflow page */\n    _mainTemplate: function(options) {\n        return (\n            \"<div class='toolForm'>\" +\n            \"<div class='toolFormTitle'>Import Galaxy workflow</div>\" +\n            \"<div class='toolFormBody'>\" +\n            \"<form name='import_workflow' id='import_workflow' action='\" +\n            Galaxy.root +\n            \"workflow/upload_import_workflow\" +\n            \"' enctype='multipart/form-data' method='POST'>\" +\n            \"<div class='form-row'>\" +\n            \"<label>Galaxy workflow URL:</label>\" +\n            \"<input type='text' name='url' class='input-url' value='\" +\n            options.url +\n            \"' size='40'>\" +\n            \"<div class='toolParamHelp' style='clear: both;'>\" +\n            \"If the workflow is accessible via a URL, enter the URL above and click <b>Import</b>.\" +\n            \"</div>\" +\n            \"<div style='clear: both'></div>\" +\n            \"</div>\" +\n            \"<div class='form-row'>\" +\n            \"<label>Galaxy workflow file:</label>\" +\n            \"<div class='form-row-input'>\" +\n            \"<input type='file' name='file_data' class='input-file'/>\" +\n            \"</div>\" +\n            \"<div class='toolParamHelp' style='clear: both;'>\" +\n            \"If the workflow is in a file on your computer, choose it and then click <b>Import</b>.\" +\n            \"</div>\" +\n            \"<div style='clear: both'></div>\" +\n            \"</div>\" +\n            \"<div class='form-row'>\" +\n            \"<input type='submit' class='primary-button wf-import' name='import_button' value='Import'>\" +\n            \"</div>\" +\n            \"</form>\" +\n            \"<hr/>\" +\n            \"<div class='form-row'>\" +\n            \"<label>Import a Galaxy workflow from myExperiment:</label>\" +\n            \"<div class='form-row-input'>\" +\n            \"<a href='\" +\n            options.myexperiment_target_url +\n            \"'> Visit myExperiment</a>\" +\n            \"</div>\" +\n            \"<div class='toolParamHelp' style='clear: both;'>\" +\n            \"Click the link above to visit myExperiment and browse for Galaxy workflows.\" +\n            \"</div>\" +\n            \"<div style='clear: both'></div>\" +\n            \"</div>\" +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: WorkflowListView,\n    ImportWorkflowView: ImportWorkflowView\n};\n"]}