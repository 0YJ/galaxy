{"version":3,"sources":["mvc/workflow/workflow-view.js"],"names":["define","Utils","Globals","Workflow","WorkflowCanvas","Node","WorkflowIcons","FormWrappers","Ui","async_save_text","Toastr","reset_tool_search","initValue","tool_menu_frame","$","contents","length","document","this","removeClass","find","hide","show","each","attr","hasClass","val","add_node_icon","$to_el","nodeType","iconStyle","$icon","addClass","before","Backbone","View","extend","initialize","options","workflow_save_as","body","window","show_modal","OK","rename_name","self","workflow","name","rename_annotation","ajax","url","urls","type","data","workflow_name","workflow_annotation","workflow_data","JSON","stringify","to_simple","done","id","onbeforeunload","undefined","location","Galaxy","root","hide_modal","fail","alert","Cancel","layout_editor","layout","fit_canvas_to_nodes","scroll_to_nodes","canvas_manager","draw_overview","show_overview","jStorage","set","css","hide_overview","app","close_editor","check_changes_in_active_form","has_changes","do_close","workflow_index","Save Changes","save_current_workflow","Don't Save","eventObj","success_callback","show_message","rectify_workflow_outputs","request","success","text","message","errors","errlist","i","v","appendTo","append","stored","showWorkflowParameters","Ok","error","response","err_msg","click","focus","select","keyup","value","lastValue","q","timer","clearTimeout","setTimeout","get","tool_search","s","map","n","index","parent","this_label","next","no_visible_tools","is","reset","datatypes","parse","async","responseText","datatypes_mapping","ext_to_type","ext_to_class_name","type_to_type","class_to_classes","_workflowLoadAjax","from_simple","upgrade_message","_","steps","step","step_id","details","upgrade_messages","m","parseInt","nodes","Continue","beforeSubmit","make_popupmenu","Save","Save As","Run","run_workflow","Edit Attributes","clear_active_node","Auto Re-layout","Close","overview_size","width","height","bind","e","d","op","offsetParent","opo","offset","new_size","Math","max","offsetX","left","offsetY","top","workflows","_buildToolPanelWorkflows","wrap","last_expanded","slideUp","slideDown","rename_async","annotate_async","$section","copy","ButtonIcon","icon","cls","tooltip","onclick","step_count","copy_into_workflow","modal","title","buttons","Copy","$add","html","on","add_node_for_subworkflow","latest_id","$el","workflowId","k","vv","remove_all","cv","cc","merge","load_workflow","dataType","cache","_moduleInitAjax","node","request_data","init_field_data","update_field_data","activate_node","add_node_for_tool","create_node","tool_id","content_id","add_node_for_module","display_pja","pja","get_pja_form","action_to_rem","closest","children","remove","active_node","post_job_actions","active_form_has_changes","display_pja_list","pja_list","display_file_list","addlist","out_terminal","output_terminals","new_pja","action_type","target","output_name","workflow_parameters","wf_parm_container","wf_parm_box","new_parameter_content","matches","config_form","inputs","deepeach","form_matches","match","concat","action_arguments","action_argument","arg_matches","element","inArray","push","substring","showAttributes","showForm","content","$container","form_wrapper","unshift","label","fixed","annotation","area","help","onchange","new_label","duplicate","input_id","form","element_list","model","trigger","create","Tool","Default","scrollTop","isSubType","child","prebuildNode","title_text","$f","$title","scrollLeft","tmp","destroy","o","position","p","prependTo","node_changed","po","x","y","terminal","redraw"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow-view.js","sourcesContent":["define('mvc/workflow/workflow-globals', {});\ndefine([\n    'utils/utils',\n    'mvc/workflow/workflow-globals',\n    'mvc/workflow/workflow-manager',\n    'mvc/workflow/workflow-canvas',\n    'mvc/workflow/workflow-node',\n    'mvc/workflow/workflow-icons',\n    'mvc/workflow/workflow-forms',\n    'mvc/ui/ui-misc',\n    'utils/async-save-text',\n    'libs/toastr',\n    'ui/editable-text'\n], function( Utils, Globals, Workflow, WorkflowCanvas, Node, WorkflowIcons, FormWrappers, Ui, async_save_text, Toastr ){\n\n    // Reset tool search to start state.\n    function reset_tool_search( initValue ) {\n        // Function may be called in top frame or in tool_menu_frame;\n        // in either case, get the tool menu frame.\n        var tool_menu_frame = $(\"#galaxy_tools\").contents();\n        if (tool_menu_frame.length === 0) {\n            tool_menu_frame = $(document);\n            // Remove classes that indicate searching is active.\n            $(this).removeClass(\"search_active\");\n            tool_menu_frame.find(\".toolTitle\").removeClass(\"search_match\");\n\n            // Reset visibility of tools and labels.\n            tool_menu_frame.find(\".toolSectionBody\").hide();\n            tool_menu_frame.find(\".toolTitle\").show();\n            tool_menu_frame.find(\".toolPanelLabel\").show();\n            tool_menu_frame.find(\".toolSectionWrapper\").each( function() {\n                if ($(this).attr('id') !== 'recently_used_wrapper') {\n                    // Default action.\n                    $(this).show();\n                } else if ($(this).hasClass(\"user_pref_visible\")) {\n                    $(this).show();\n                }\n            });\n            tool_menu_frame.find(\"#search-no-results\").hide();\n\n            // Reset search input.\n            tool_menu_frame.find(\"#search-spinner\").hide();\n            if (initValue) {\n                var search_input = tool_menu_frame.find(\"#tool-search-query\");\n                search_input.val(\"search tools\");\n            }\n        }\n    }\n\n    add_node_icon = function($to_el, nodeType) {\n        var iconStyle = WorkflowIcons[nodeType];\n        if(iconStyle) {\n            var $icon = $('<i class=\"icon fa\">&nbsp;</i>').addClass(iconStyle);\n            $to_el.before($icon);\n        }\n    }\n\n    // create form view\n    return Backbone.View.extend({\n        initialize: function(options) {\n            var self = Globals.app = this;\n            this.options = options;\n            this.urls = options && options.urls || {};\n            var close_editor = function() {\n                self.workflow.check_changes_in_active_form();\n                if ( workflow && self.workflow.has_changes ) {\n                    do_close = function() {\n                        window.onbeforeunload = undefined;\n                        window.document.location = self.urls.workflow_index;\n                    };\n                    window.show_modal( \"Close workflow editor\",\n                                \"There are unsaved changes to your workflow which will be lost.\",\n                                {\n                                    \"Cancel\" : hide_modal,\n                                    \"Save Changes\" : function() {\n                                        save_current_workflow( null, do_close );\n                                    }\n                                }, {\n                                    \"Don't Save\": do_close\n                                } );\n                } else {\n                    window.document.location = self.urls.workflow_index;\n                }\n            };\n            var save_current_workflow = function ( eventObj, success_callback ) {\n                show_message( \"Saving workflow\", \"progress\" );\n                self.workflow.check_changes_in_active_form();\n                if (!self.workflow.has_changes) {\n                    hide_modal();\n                    if ( success_callback ) {\n                        success_callback();\n                    }\n                    return;\n                }\n                self.workflow.rectify_workflow_outputs();\n                Utils.request( {\n                    url: Galaxy.root + 'api/workflows/' + self.options.id,\n                    type: \"PUT\",\n                    data: { workflow: self.workflow.to_simple() },\n                    success: function( data ) {\n                        var body = $( \"<div/>\" ).text( data.message );\n                        if ( data.errors ) {\n                            body.addClass( \"warningmark\" );\n                            var errlist = $( \"<ul/>\" );\n                            $.each( data.errors, function( i, v ) {\n                                $( \"<li/>\" ).text( v ).appendTo( errlist );\n                            });\n                            body.append( errlist );\n                        } else {\n                            body.addClass( \"donemark\" );\n                        }\n                        self.workflow.name = data.name;\n                        self.workflow.has_changes = false;\n                        self.workflow.stored = true;\n                        self.showWorkflowParameters();\n                        if ( data.errors ) {\n                            window.show_modal( \"Saving workflow\", body, { \"Ok\" : hide_modal } );\n                        } else {\n                            success_callback && success_callback();\n                            hide_modal();\n                        }\n                    },\n                    error: function( response ) {\n                        window.show_modal( \"Saving workflow failed.\", response.err_msg, { \"Ok\" : hide_modal } );\n                    }\n                });\n            };\n\n            // Init searching.\n            $(\"#tool-search-query\").click( function (){\n                $(this).focus();\n                $(this).select();\n            })\n            .keyup( function () {\n                // Remove italics.\n                $(this).css(\"font-style\", \"normal\");\n                // Don't update if same value as last time\n                if ( this.value.length < 3 ) {\n                    reset_tool_search(false);\n                } else if ( this.value != this.lastValue ) {\n                    // Add class to denote that searching is active.\n                    $(this).addClass(\"search_active\");\n                    // input.addClass(config.loadingClass);\n                    // Add '*' to facilitate partial matching.\n                    var q = this.value;\n                    // Stop previous ajax-request\n                    if (this.timer) {\n                        clearTimeout(this.timer);\n                    }\n                    // Start a new ajax-request in X ms\n                    $(\"#search-spinner\").show();\n                    this.timer = setTimeout(function () {\n                        $.get(self.urls.tool_search, { q: q }, function (data) {\n                            // input.removeClass(config.loadingClass);\n                            // Show live-search if results and search-term aren't empty\n                            $(\"#search-no-results\").hide();\n                            // Hide all tool sections.\n                            $(\".toolSectionWrapper\").hide();\n                            // This hides all tools but not workflows link (which is in a .toolTitle div).\n                            $(\".toolSectionWrapper\").find(\".toolTitle\").hide();\n                            if ( data.length != 0 ) {\n                                // Map tool ids to element ids and join them.\n                                var s = $.map( data, function( n, i ) { return \"link-\" + n; } );\n                                // First pass to show matching tools and their parents.\n                                $(s).each( function(index,id) {\n                                    // Add class to denote match.\n                                    $(\"[id='\"+id+\"']\").parent().addClass(\"search_match\");\n                                    $(\"[id='\"+id+\"']\").parent().show().parent().parent().show().parent().show();\n                                });\n                                // Hide labels that have no visible children.\n                                $(\".toolPanelLabel\").each( function() {\n                                   var this_label = $(this);\n                                   var next = this_label.next();\n                                   var no_visible_tools = true;\n                                   // Look through tools following label and, if none are visible, hide label.\n                                   while (next.length !== 0 && next.hasClass(\"toolTitle\")) {\n                                       if (next.is(\":visible\")) {\n                                           no_visible_tools = false;\n                                           break;\n                                       } else {\n                                           next = next.next();\n                                       }\n                                    }\n                                    if (no_visible_tools) {\n                                        this_label.hide();\n                                    }\n                                });\n                            } else {\n                                $(\"#search-no-results\").show();\n                            }\n                            $(\"#search-spinner\").hide();\n                        }, \"json\" );\n                    }, 400 );\n                }\n                this.lastValue = this.value;\n            });\n\n            // Canvas overview management\n            this.canvas_manager = Globals.canvas_manager = new WorkflowCanvas( this, $(\"#canvas-viewport\"), $(\"#overview\") );\n\n            // Initialize workflow state\n            this.reset();\n\n            // get available datatypes for post job action options\n            this.datatypes = JSON.parse($.ajax({\n                url     : Galaxy.root + 'api/datatypes',\n                async   : false\n            }).responseText);\n\n            // get datatype mapping options\n            this.datatypes_mapping = JSON.parse($.ajax({\n                url     : Galaxy.root + 'api/datatypes/mapping',\n                async   : false\n            }).responseText);\n\n            // set mapping sub lists\n            this.ext_to_type = this.datatypes_mapping.ext_to_class_name;\n            this.type_to_type = this.datatypes_mapping.class_to_classes;\n\n            // Load workflow definition\n            this._workflowLoadAjax(self.options.id, {\n                success: function( data ) {\n                     self.reset();\n                     self.workflow.from_simple( data, true );\n                     self.workflow.has_changes = false;\n                     self.workflow.fit_canvas_to_nodes();\n                     self.scroll_to_nodes();\n                     self.canvas_manager.draw_overview();\n                     // Determine if any parameters were 'upgraded' and provide message\n                     upgrade_message = \"\";\n                     _.each( data.steps, function( step, step_id ) {\n                        var details = \"\";\n                        if ( step.errors ) {\n                            details += \"<li>\" + step.errors + \"</li>\";\n                        }\n                        _.each( data.upgrade_messages[ step_id ], function( m ) {\n                            details += \"<li>\" + m + \"</li>\";\n                        });\n                        if ( details ) {\n                            upgrade_message += \"<li>Step \" + ( parseInt( step_id, 10 ) + 1 ) + \": \" + self.workflow.nodes[ step_id ].name + \"<ul>\" + details + \"</ul></li>\";\n                        }\n                     });\n                     if ( upgrade_message ) {\n                        window.show_modal( \"Issues loading this workflow\", \"Please review the following issues, possibly resulting from tool upgrades or changes.<p><ul>\" + upgrade_message + \"</ul></p>\", { \"Continue\" : hide_modal } );\n                     } else {\n                        hide_modal();\n                     }\n                     self.showWorkflowParameters();\n                 },\n                 beforeSubmit: function( data ) {\n                     show_message( \"Loading workflow\", \"progress\" );\n                 }\n            });\n\n            window.make_popupmenu && make_popupmenu( $(\"#workflow-options-button\"), {\n                \"Save\" : save_current_workflow,\n                \"Save As\": workflow_save_as,\n                \"Run\": function() {\n                    window.location = self.urls.run_workflow;\n                },\n                \"Edit Attributes\" : function() { self.workflow.clear_active_node() },\n                \"Auto Re-layout\": layout_editor,\n                \"Close\": close_editor\n            });\n\n            /******************************************** Issue 3000*/\n            function workflow_save_as() {\n                var body = $('<form><label style=\"display:inline-block; width: 100%;\">Save as name: </label><input type=\"text\" id=\"workflow_rename\" style=\"width: 80%;\" autofocus/>' + \n                '<br><label style=\"display:inline-block; width: 100%;\">Annotation: </label><input type=\"text\" id=\"wf_annotation\" style=\"width: 80%;\" /></form>');\n                    window.show_modal(\"Save As a New Workflow\", body, {\n                        \"OK\": function () {\n                            var rename_name = $('#workflow_rename').val().length > 0 ? $('#workflow_rename').val() : \"SavedAs_\" + self.workflow.name;\n                            var rename_annotation = $('#wf_annotation').val().length > 0 ? $('#wf_annotation').val() : \"\";\n                            $.ajax({\n                                url: self.urls.workflow_save_as,\n                                type: \"POST\",\n                                data: {\n                                    workflow_name: rename_name,\n                                    workflow_annotation: rename_annotation,\n                                    workflow_data: function() { return JSON.stringify( self.workflow.to_simple() ); }\n                                }\n                            }).done(function(id){\n                                window.onbeforeunload = undefined;\n                                window.location = Galaxy.root + \"workflow/editor?id=\" + id;\n                                hide_modal();\n                            }).fail(function(){\n                                hide_modal();\n                                alert(\"Saving this workflow failed. Please contact this site's administrator.\");\n                            });\n                        },\n                        \"Cancel\": hide_modal\n                    });\n            };\n\n            function edit_workflow_outputs(){\n                self.workflow.clear_active_node();\n                $('.right-content').hide();\n                var new_content = \"\";\n                for (var node_key in self.workflow.nodes){\n                    var node = self.workflow.nodes[node_key];\n                    if(['tool', 'subworkflow'].indexOf(node.type) >= 0){\n                        new_content += \"<div class='toolForm' style='margin-bottom:5px;'><div class='toolFormTitle'>Step \" + node.id + \" - \" + node.name + \"</div>\";\n                        for (var ot_key in node.output_terminals){\n                            var output = node.output_terminals[ot_key];\n                            if (node.isWorkflowOutput(output.name)) {\n                                new_content += \"<p>\"+output.name +\"<input type='checkbox' name='\"+ node.id + \"|\" + output.name +\"' checked /></p>\";\n                            }\n                            else{\n                                new_content += \"<p>\"+output.name +\"<input type='checkbox' name='\"+ node.id + \"|\" + output.name +\"' /></p>\";\n                            }\n                        }\n                        new_content += \"</div>\";\n                    }\n                }\n                $(\"#output-fill-area\").html(new_content);\n                $(\"#output-fill-area input\").bind('click', function(){\n                    var node_id = this.name.split('|')[0];\n                    var workflowNode = this.workflow.nodes[node_id];\n                    var output_name = this.name.split('|')[1];\n                    if (this.checked){\n                        workflowNode.addWorkflowOutput(output_name);\n                    }else{\n                        workflowNode.removeWorkflowOutput(output_name);\n                    }\n                    self.workflow.has_changes = true;\n                });\n                $('#workflow-output-area').show();\n            }\n\n            function layout_editor() {\n                self.workflow.layout();\n                self.workflow.fit_canvas_to_nodes();\n                self.scroll_to_nodes();\n                self.canvas_manager.draw_overview();\n            }\n\n            // On load, set the size to the pref stored in local storage if it exists\n            overview_size = $.jStorage.get(\"overview-size\");\n            if (overview_size !== undefined) {\n                $(\"#overview-border\").css( {\n                    width: overview_size,\n                    height: overview_size\n                });\n            }\n\n            // Show viewport on load unless pref says it's off\n            if ($.jStorage.get(\"overview-off\")) {\n                hide_overview();\n            } else {\n                show_overview();\n            }\n\n            // Stores the size of the overview into local storage when it's resized\n            $(\"#overview-border\").bind( \"dragend\", function( e, d ) {\n                var op = $(this).offsetParent();\n                var opo = op.offset();\n                var new_size = Math.max( op.width() - ( d.offsetX - opo.left ),\n                                         op.height() - ( d.offsetY - opo.top ) );\n                $.jStorage.set(\"overview-size\", new_size + \"px\");\n            });\n\n            function show_overview() {\n                $.jStorage.set(\"overview-off\", false);\n                $(\"#overview-border\").css(\"right\", \"0px\");\n                $(\"#close-viewport\").css(\"background-position\", \"0px 0px\");\n            }\n\n            function hide_overview() {\n                $.jStorage.set(\"overview-off\", true);\n                $(\"#overview-border\").css(\"right\", \"20000px\");\n                $(\"#close-viewport\").css(\"background-position\", \"12px 0px\");\n            }\n\n            // Lets the overview be toggled visible and invisible, adjusting the arrows accordingly\n            $(\"#close-viewport\").click( function() {\n                if ( $(\"#overview-border\").css(\"right\") === \"0px\" ) {\n                    hide_overview();\n                } else {\n                    show_overview();\n                }\n            });\n\n            // Unload handler\n            window.onbeforeunload = function() {\n                if ( workflow && self.workflow.has_changes ) {\n                    return \"There are unsaved changes to your workflow which will be lost.\";\n                }\n            };\n\n            this.options.workflows.length > 0 && $( \"#left\" ).find( \".toolMenu\" ).append( this._buildToolPanelWorkflows() );\n\n            // Tool menu\n            $( \"div.toolSectionBody\" ).hide();\n            $( \"div.toolSectionTitle > span\" ).wrap( \"<a href='#'></a>\" );\n            var last_expanded = null;\n            $( \"div.toolSectionTitle\" ).each( function() {\n               var body = $(this).next( \"div.toolSectionBody\" );\n               $(this).click( function() {\n                   if ( body.is( \":hidden\" ) ) {\n                       if ( last_expanded ) last_expanded.slideUp( \"fast\" );\n                       last_expanded = body;\n                       body.slideDown( \"fast\" );\n                   }\n                   else {\n                       body.slideUp( \"fast\" );\n                       last_expanded = null;\n                   }\n               });\n            });\n\n            // Rename async.\n            async_save_text(\"workflow-name\", \"workflow-name\", self.urls.rename_async, \"new_name\");\n\n            // Tag async. Simply have the workflow edit element generate a click on the tag element to activate tagging.\n            $('#workflow-tag').click( function() {\n                $('.tag-area').click();\n                return false;\n            });\n            // Annotate async.\n            async_save_text(\"workflow-annotation\", \"workflow-annotation\", self.urls.annotate_async, \"new_annotation\", 25, true, 4);\n        },\n\n        _buildToolPanelWorkflows: function() {\n            var self = this;\n            var $section = $(   '<div class=\"toolSectionWrapper\">' +\n                                    '<div class=\"toolSectionTitle\">' +\n                                        '<a href=\"#\"><span>Workflows</span></a>' +\n                                    '</div>' +\n                                    '<div class=\"toolSectionBody\">' +\n                                        '<div class=\"toolSectionBg\"/>' +\n                                    '</div>' +\n                                '</div>' );\n            _.each( this.options.workflows, function( workflow ) {\n                if( workflow.id !== self.options.id ) {\n                    var copy = new Ui.ButtonIcon({\n                        icon        : 'fa fa-copy',\n                        cls         : 'ui-button-icon-plain',\n                        tooltip     : 'Copy and insert individual steps',\n                        onclick     : function() {\n                            if( workflow.step_count < 2 ) {\n                                self.copy_into_workflow( workflow.id, workflow.name );\n                            } else {\n                                // don't ruin the workflow by adding 50 steps unprompted.\n                                Galaxy.modal.show({\n                                    title   : 'Warning',\n                                    body    : 'This will copy ' + workflow.step_count + ' new steps into your workflow.',\n                                    buttons : {\n                                        'Cancel' : function() { Galaxy.modal.hide(); },\n                                        'Copy'   : function() { Galaxy.modal.hide(); self.copy_into_workflow( workflow.id, workflow.name ); }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                    var $add = $( '<a/>' ).attr( 'href', '#' ).html( workflow.name ).on( 'click', function() {\n                        self.add_node_for_subworkflow( workflow.latest_id, workflow.name );\n                    });\n                    $section.find( '.toolSectionBg' ).append( $( '<div/>' ).addClass( 'toolTitle' ).append( $add ).append( copy.$el ) );\n                }\n            });\n            return $section;\n        },\n\n        copy_into_workflow: function(workflowId) {\n            // Load workflow definition\n            var self = this;\n            this._workflowLoadAjax(workflowId, {\n                success: function( data ) {\n                    self.workflow.from_simple( data, false );\n                    // Determine if any parameters were 'upgraded' and provide message\n                    upgrade_message = \"\";\n                    $.each( data.upgrade_messages, function( k, v ) {\n                       upgrade_message += ( \"<li>Step \" + ( parseInt(k, 10) + 1 ) + \": \" + self.workflow.nodes[k].name + \"<ul>\");\n                       $.each( v, function( i, vv ) {\n                           upgrade_message += \"<li>\" + vv +\"</li>\";\n                       });\n                       upgrade_message += \"</ul></li>\";\n                    });\n                    if ( upgrade_message ) {\n                       window.show_modal( \"Subworkflow embedded with changes\",\n                                   \"Problems were encountered loading this workflow (possibly a result of tool upgrades). Please review the following parameters and then save.<ul>\" + upgrade_message + \"</ul>\",\n                                   { \"Continue\" : hide_modal } );\n                    } else {\n                       hide_modal();\n                    }\n                },\n                beforeSubmit: function( data ) {\n                   show_message( \"Importing workflow\", \"progress\" );\n                }\n            });\n        },\n\n        // Global state for the whole workflow\n        reset: function() {\n            this.workflow && this.workflow.remove_all();\n            this.workflow = Globals.workflow = new Workflow( this, $(\"#canvas-container\") );\n        },\n\n        scroll_to_nodes: function () {\n            var cv = $(\"#canvas-viewport\");\n            var cc = $(\"#canvas-container\");\n            var top, left;\n            if ( cc.width() < cv.width() ) {\n                left = ( cv.width() - cc.width() ) / 2;\n            } else {\n                left = 0;\n            }\n            if ( cc.height() < cv.height() ) {\n                top = ( cv.height() - cc.height() ) / 2;\n            } else {\n                top = 0;\n            }\n            cc.css( { left: left, top: top } );\n        },\n\n        _workflowLoadAjax: function(workflowId, options) {\n            $.ajax(Utils.merge(options, {\n                url: this.urls.load_workflow,\n                data: { id: workflowId, \"_\": \"true\" },\n                dataType: 'json',\n                cache: false\n            }));\n        },\n\n        _moduleInitAjax: function(node, request_data) {\n            var self = this;\n            Utils.request({\n                type    : 'POST',\n                url     : Galaxy.root + 'api/workflows/build_module',\n                data    : request_data,\n                success : function( data ) {\n                    node.init_field_data( data );\n                    node.update_field_data( data );\n                    self.workflow.activate_node( node );\n                }\n            });\n        },\n\n        // Add a new step to the workflow by tool id\n        add_node_for_tool: function ( id, title ) {\n            node = this.workflow.create_node( 'tool', title, id );\n            this._moduleInitAjax(node, { type: \"tool\", tool_id: id, \"_\": \"true\" });\n        },\n\n        // Add a new step to the workflow by tool id\n        add_node_for_subworkflow: function ( id, title ) {\n            node = this.workflow.create_node( 'subworkflow', title, id );\n            this._moduleInitAjax(node, { type: \"subworkflow\", content_id: id, \"_\": \"true\" });\n        },\n\n        add_node_for_module: function ( type, title ) {\n            node = this.workflow.create_node( type, title );\n            this._moduleInitAjax(node, { type: type, \"_\": \"true\" });\n        },\n\n        // This function preloads how to display known pja's.\n        display_pja: function (pja, node) {\n            // DBTODO SANITIZE INPUTS.\n            var self = this;\n            $(\"#pja_container\").append( get_pja_form(pja, node) );\n            $(\"#pja_container>.toolForm:last>.toolFormTitle>.buttons\").click(function (){\n                action_to_rem = $(this).closest(\".toolForm\", \".action_tag\").children(\".action_tag:first\").text();\n                $(this).closest(\".toolForm\").remove();\n                delete self.workflow.active_node.post_job_actions[action_to_rem];\n                self.workflow.active_form_has_changes = true;\n            });\n        },\n\n        display_pja_list: function (){\n            return pja_list;\n        },\n\n        display_file_list: function (node){\n            addlist = \"<select id='node_data_list' name='node_data_list'>\";\n            for (var out_terminal in node.output_terminals){\n                addlist += \"<option value='\" + out_terminal + \"'>\"+ out_terminal +\"</option>\";\n            }\n            addlist += \"</select>\";\n            return addlist;\n        },\n\n        new_pja: function (action_type, target, node){\n            if (node.post_job_actions === undefined){\n                //New tool node, set up dict.\n                node.post_job_actions = {};\n            }\n            if (node.post_job_actions[action_type+target] === undefined) {\n                var new_pja = {};\n                new_pja.action_type = action_type;\n                new_pja.output_name = target;\n                node.post_job_actions[action_type+target] = null;\n                node.post_job_actions[action_type+target] =  new_pja;\n                display_pja(new_pja, node);\n                this.workflow.active_form_has_changes = true;\n                return true;\n            } else {\n                return false;\n            }\n        },\n\n        showWorkflowParameters: function () {\n            var parameter_re = /\\$\\{.+?\\}/g;\n            var workflow_parameters = [];\n            var wf_parm_container = $( '#workflow-parameters-container' );\n            var wf_parm_box = $( '#workflow-parameters-box' );\n            var new_parameter_content = '';\n            var matches = [];\n            $.each(this.workflow.nodes, function ( k, node ){\n                if ( node.config_form && node.config_form.inputs ) {\n                    Utils.deepeach( node.config_form.inputs, function( d ) {\n                        if ( typeof d.value == 'string' ) {\n                            var form_matches = d.value.match( parameter_re );\n                            if ( form_matches ) {\n                                matches = matches.concat( form_matches );\n                            }\n                        }\n                    });\n                }\n                if (node.post_job_actions){\n                    $.each(node.post_job_actions, function(k, pja){\n                        if (pja.action_arguments){\n                            $.each(pja.action_arguments, function(k, action_argument){\n                                var arg_matches = action_argument.match(parameter_re);\n                                if (arg_matches){\n                                    matches = matches.concat(arg_matches);\n                                }\n                            });\n                        }\n                    });\n                }\n                if (matches){\n                    $.each(matches, function(k, element){\n                        if ($.inArray(element, workflow_parameters) === -1){\n                            workflow_parameters.push(element);\n                        }\n                    });\n                }\n            });\n            if (workflow_parameters && workflow_parameters.length !== 0){\n                $.each(workflow_parameters, function(k, element){\n                    new_parameter_content += \"<div>\" + element.substring(2, element.length -1) + \"</div>\";\n                });\n                wf_parm_container.html(new_parameter_content);\n                wf_parm_box.show();\n            }else{\n                wf_parm_container.html(new_parameter_content);\n                wf_parm_box.hide();\n            }\n        },\n\n        showAttributes: function() {\n            $( '.right-content' ).hide();\n            $( '#edit-attributes' ).show();\n        },\n\n        showForm: function ( content, node ) {\n            var self = this;\n            var cls = 'right-content';\n            var id  = cls + '-' + node.id;\n            var $container = $( '#' + cls );\n            if ( content && $container.find( '#' + id ).length == 0 ) {\n                var $el = $( '<div id=\"' + id + '\" class=\"' + cls + '\"/>' );\n                var form_wrapper = null;\n                content.node = node;\n                content.workflow = this.workflow;\n                content.datatypes = this.datatypes;\n                content.icon = WorkflowIcons[ node.type ];\n                content.cls = 'ui-portlet-narrow';\n                content.inputs.unshift({\n                    type    : 'text',\n                    name    : '__annotation',\n                    label   : 'Annotation',\n                    fixed   : true,\n                    value   : node.annotation,\n                    area    : true,\n                    help    : 'Add an annotation or notes to this step. Annotations are available when a workflow is viewed.'\n                });\n                content.inputs.unshift({\n                    type    : 'text',\n                    name    : '__label',\n                    label   : 'Label',\n                    value   : node.label,\n                    help    : 'Add a step label.',\n                    fixed   : true,\n                    onchange: function( new_label ) {\n                        var duplicate = false;\n                        for ( var i in self.workflow.nodes ) {\n                            var n = self.workflow.nodes[ i ];\n                            if ( n.label && n.label == new_label && n.id != node.id ) {\n                                duplicate = true;\n                                break;\n                            }\n                        }\n                        var input_id = form_wrapper.form.data.match( '__label' );\n                        var input_element = form_wrapper.form.element_list[ input_id ];\n                        input_element.model.set( 'error_text', duplicate && 'Duplicate label. Please fix this before saving the workflow.' );\n                        form_wrapper.form.trigger( 'change' );\n                    }\n                });\n                content.onchange = function() {\n                    Utils.request({\n                        type    : 'POST',\n                        url     :  Galaxy.root + 'api/workflows/build_module',\n                        data    : {\n                            id          : node.id,\n                            type        : node.type,\n                            content_id  : node.content_id,\n                            inputs      : form_wrapper.form.data.create()\n                        },\n                        success : function( data ) {\n                            node.update_field_data( data );\n                        }\n                    });\n                };\n                if ( node.type == 'tool' ) {\n                    form_wrapper = new FormWrappers.Tool( content );\n                } else {\n                    form_wrapper = new FormWrappers.Default( content );\n                }\n                $el.append( form_wrapper.form.$el );\n                $container.append( $el );\n            }\n            $( '.' + cls ).hide();\n            $container.find( '#' + id ).show();\n            $container.show();\n            $container.scrollTop();\n        },\n\n        isSubType: function ( child, parent ) {\n            child = this.ext_to_type[child];\n            parent = this.ext_to_type[parent];\n            return ( this.type_to_type[child] ) && ( parent in this.type_to_type[child] );\n        },\n\n        prebuildNode: function ( type, title_text, content_id ) {\n            var self = this;\n            var $f = $(\"<div class='toolForm toolFormInCanvas'/>\");\n            var $title = $(\"<div class='toolFormTitle unselectable'><span class='nodeTitle'>\" + title_text + \"</div></div>\" );\n            add_node_icon($title.find('.nodeTitle'), type);\n            $f.append( $title );\n            $f.css( \"left\", $(window).scrollLeft() + 20 );\n            $f.css( \"top\", $(window).scrollTop() + 20 );\n            $f.append($(\"<div class='toolFormBody'></div>\"));\n            var node = new Node( this, { element: $f } );\n            node.type = type;\n            node.content_id = content_id;\n            var tmp = \"<div><img height='16' align='middle' src='\" + Galaxy.root + \"static/images/loading_small_white_bg.gif'/> loading tool info...</div>\";\n            $f.find(\".toolFormBody\").append(tmp);\n            // Fix width to computed width\n            // Now add floats\n            var buttons = $(\"<div class='buttons' style='float: right;'></div>\");\n            buttons.append( $(\"<div/>\").addClass(\"fa-icon-button fa fa-times\").click( function( e ) {\n                node.destroy();\n            }));\n            // Place inside container\n            $f.appendTo( \"#canvas-container\" );\n            // Position in container\n            var o = $(\"#canvas-container\").position();\n            var p = $(\"#canvas-container\").parent();\n            var width = $f.width();\n            var height = $f.height();\n            $f.css( { left: ( - o.left ) + ( p.width() / 2 ) - ( width / 2 ), top: ( - o.top ) + ( p.height() / 2 ) - ( height / 2 ) } );\n            buttons.prependTo( $f.find(\".toolFormTitle\" ) );\n            width += ( buttons.width() + 10 );\n            $f.css( \"width\", width );\n            $f.bind( \"dragstart\", function() {\n                self.workflow.activate_node( node );\n            }).bind( \"dragend\", function() {\n                self.workflow.node_changed( this );\n                self.workflow.fit_canvas_to_nodes();\n                self.canvas_manager.draw_overview();\n            }).bind( \"dragclickonly\", function() {\n                self.workflow.activate_node( node );\n            }).bind( \"drag\", function( e, d ) {\n                // Move\n                var po = $(this).offsetParent().offset(),\n                    x = d.offsetX - po.left,\n                    y = d.offsetY - po.top;\n                $(this).css( { left: x, top: y } );\n                // Redraw\n                $(this).find( \".terminal\" ).each( function() {\n                    this.terminal.redraw();\n                });\n            });\n            return node;\n        }\n    });\n});\n"]}