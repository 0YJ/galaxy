{"version":3,"sources":["mvc/workflow/workflow-view.js"],"names":["reset_tool_search","initValue","tool_menu_frame","$","contents","length","document","this","removeClass","find","hide","show","each","attr","workflow_globals","hasClass","nodeType","iconStyle","$icon","addClass","window","initialize","options","show_overview","Galaxy","modal","title","body","jStorage","set","Copy","self","app","urls","onbeforeunload","eventObj","undefined","location","workflow","check_changes_in_active_form","show_modal","Cancel","success_callback","save_current_workflow","rectify_workflow_outputs","_utils2","default","request","workflow_index","type","data","to_simple","show_message","text","message","errors","has_changes","hide_modal","i","v","appendTo","errlist","append","url","success","showWorkflowParameters","Ok","click","error","keyup","css","value","select","lastValue","q","timer","clearTimeout","get","tool_search","setTimeout","map","n","s","index","id","parent","this_label","next","no_visible_tools","is","canvas_manager","datatypes","async","datatypes_mapping","JSON","_workflowCanvas2","reset","_workflowLoadAjax","parse","ajax","_","steps","responseText","details","ext_to_class_name","type_to_type","class_to_classes","scroll_to_nodes","beforeSubmit","step","step_id","Save","m","workflow_save_as","upgrade_message","clear_active_node","layout_editor","name","close_editor","rename_annotation","workflow_name","workflow_data","make_popupmenu","fail","alert","new_content","output","OK","val","workflowNode","output_name","addWorkflowOutput","workflow_annotation","removeWorkflowOutput","stringify","layout","fit_canvas_to_nodes","root","overview_size","Run","Edit Attributes","last_expanded","search_input","do_close","Save Changes","width","height","hide_overview","workflows","op","opo","copy","icon","max","cls","d","offsetX","left","tooltip","offsetY","top","step_count","upgrade_messages","slideUp","slideDown","_asyncSaveText2","cc","request_data","ButtonIcon","node","init_field_data","update_field_data","copy_into_workflow","buttons","create_node","_moduleInitAjax","html","on","add_node_for_subworkflow","latest_id","$section","action_to_rem","closest","active_form_has_changes","$el","display_file_list","workflowId","addlist","from_simple","k","post_job_actions","parseInt","nodes","new_pja","vv","action_type","display_pja","Continue","parameter_re","wf_parm_box","new_parameter_content","form_matches","matches","cv","workflow_parameters","dataType","wf_parm_container","showAttributes","showForm","content","activate_node","emit","$container","isSubType","child","ext_to_type","prebuildNode","pja","$f","get_pja_form","add_node_icon","tmp","active_node","display_pja_list","pja_list","output_terminals","out_terminal","node_changed","bind","target","po","offsetParent","x","config_form","inputs","deepeach","match","concat","action_arguments","action_argument","arg_matches","element","inArray","push","substring","_workflowIcons2","form_type","_workflowForms2","form","debug","scrollTop","title_text","content_id","$title","scrollLeft","_workflowNode2","e","destroy","o","position","p","prependTo","draw_overview","offset","y","terminal","redraw"],"mappings":"iWAeA,SAASA,EAAkBC,GAGvB,IAAIC,EAAkBC,EAAE,iBAAiBC,WACV,IAA3BF,EAAgBG,SAChBH,EAAkBC,EAAEG,UAEpBH,EAAEI,MAAMC,YAAY,iBACpBN,EAAgBO,KAAK,cAAcD,YAAY,gBAG/CN,EAAgBO,KAAK,oBAAoBC,OACzCR,EAAgBO,KAAK,cAAcE,OACnCT,EAAgBO,KAAK,mBAAmBE,OACxCT,EAAgBO,KAAK,uBAAuBG,KAAK,WAClB,0BAAvBT,EAAEI,MAAMM,KAAK,MAlBtBC,EAAAA,MAAAA,OAqBgBX,EAAEI,MAAMQ,SAAS,sBAnBxCZ,EAAAI,MAAAI,SAGIT,EAAAO,KAAA,sBAAAC,OAGIR,EAAAA,KAAAA,mBAAAQ,OACAT,GACAC,EAAAO,KAAA,sBACAP,IAAgBO,iBAKhBP,SAAAA,EAAAA,EAAgBO,GAChBP,IAAAA,EAAAA,EAAAA,QAAqBc,GACjB,GAAAC,EAAA,CACI,IAAAC,EAAAf,EAAA,iCAAAgB,SAAAF,GACAd,EAAAA,OAAEe,sHApBlBE,OAAON,iBAAmBM,OAAON,+BAyBzBZ,SAAAA,KAAgBO,QAqBpBY,WAAY,SAASC,GA+eG,SAAAC,IACAC,EAAAA,SAAAA,IAAAA,gBAAOC,GACHC,EAAAA,oBAAAA,IAAAA,QAAO,OACPC,EAAAA,mBAAAA,IAAAA,sBACI,WAKIH,SAAAA,IACHrB,EAAAyB,SAAAC,IAAA,gBAHI,GAILC,EAAAA,oBAAAA,IAAAA,QAAM,WACFN,EAAAA,mBAAAA,IAAAA,sBAAad,YA9gB7C,IAAAqB,EAAAX,OAAAN,iBAAAkB,IAAAzB,KACAL,KAAAA,QAAAA,EACAK,KAAA0B,KAAIhC,GAAWqB,EAAAW,SACX,IAwBQb,EAAOc,SAAPC,EAAwBC,GAG5BhB,GAFIA,aAAAA,kBAAgBiB,YACnBN,EAAAO,SAHDC,gCAIAnB,EAAAA,SAAOoB,YAGH,OACIC,kBACAC,GACIC,KAGRZ,EAAAO,SATJM,2BAaHC,EAAAC,QAlBDC,SAmBI3B,IAAAA,OAAOd,KAAP,iBAAgC2B,EAAKe,QAAAA,GACxCC,KAAA,MAtBLC,MAAAZ,SAAAP,EAAAO,SAAAa,aAwBIR,QAAAA,SAAAA,GACAS,IAAAA,EAAajD,EAAA,UAAAkD,KAAmBH,EAAAI,SAChCvB,GAAKO,EAALiB,OAAchB,CACTR,EAAKO,SAASkB,eACfC,IAAAA,EAAAA,EAAAA,SACIf,EAAAA,KAAAA,EAAAA,OAAkB,SAAAgB,EAAAC,GAClBjB,EAAAA,SACHW,KAAAM,GACDC,SAAAC,KAECvB,EAALwB,OAAclB,QAEVmB,EAAKvC,SAAA,YAEL0B,EAAAA,SAAQZ,KAAUP,EAAKO,KACvB0B,EAAAA,SAASR,aAASN,EACdnB,EAAAO,SAAIX,QAAS,EACbI,EAAAkC,yBACItC,EAAAA,OACAP,OAAAoB,WAAcrC,kBAAdwB,GACAxB,GAAES,cAKFe,GAAYkC,IACfJ,eAGD1B,MAAAA,SAAKO,GACLP,OAAAA,WACAA,0BACAA,EAAKkC,SACLC,GAAIhB,iBAOH/C,EAAA,sBACJgE,MAAA,WACDC,EAAAA,MAAAA,QACIhD,EAAAA,MAAAA,WAhCMiD,MAAd,WA0CF,GAOMlE,EAAEI,MAAM+D,IAAI,aAAc,UAPhC/D,KAAAgE,MAAAlE,OACG8D,EACKnE,GAAF,QACA,GAAQwE,KAARD,OAAAhE,KAAAkE,UAAA,CAGAtE,EAAAI,MAAAY,SAAA,iBAGI,IAAAuD,EAAKH,KAAMlE,MAERE,KAAIoE,OACPC,aAAArE,KAAAoE,OAGAxE,EAAA,mBAAAQ,OACAJ,KAAImE,MAASH,WAAb,WACApE,EAAA0E,IACI9C,EAAK4C,KAAOG,aACZF,EAAAA,GACH,SAAA1B,GAaW,GAVZ/C,EAAa4E,sBAAsBrE,OAKvBP,EAAA,uBAAAO,OAEEP,EAAA,uBACFM,KAAA,cACEC,OACF,GAAAwC,EAAA7C,OAAA,CAII6C,IAAK7C,EAALF,EAAA6E,IAAkB9B,EAAA,SAAA+B,EAAAvB,GAClB,MAAA,QAAAuB,IACA9E,EAAA+E,GAAAtE,KAAA,SAAAuE,EAAAC,GAIKxE,EAAK,QAASuE,EAAT,MACNE,SACElE,SAAe,gBAGfhB,EAAA,QAAAiF,EAAF,MALJC,SAcA1E,OACE0E,SACMC,SACAC,OACAC,SACJ7E,SAMQ6E,EAAAA,mBAAAA,KAAAA,WAKP,IAJO,IAAAF,EAAAnF,EAAAI,MAFJgF,EAGOD,EAAAC,OACHA,GAAA,EAGc,IAAlBC,EAAAA,QACAF,EAAAA,SAAA,cACH,CAlBL,GAAAC,EAAAE,GAAA,YAAA,CAoBGD,GAAA,EACD,MAEND,EAAAA,EAAAA,OAKfC,GACDF,EAAA5E,cAIcU,EAAAA,sBAAwBsE,OAM9CvF,EAAA,mBAAAO,QAdoB,SAkBfiF,KAGGC,KAAAA,UAAOrF,KAAAgE,QAKfhE,KAAAmF,eAAKG,OAAoBC,iBACrBJ,eAAO,IAAAK,EAAAjD,QACHiB,KACA6B,EAAAA,oBAFGzF,EAAP,cAQJI,KAAAyF,QAGAzF,KAAAoF,UAAKM,KAAAA,MACDjC,EAAAA,MACIjC,IAAAA,OAAKiE,KAAL,gBACAjE,OAAAA,IACAA,cAIAxB,KAAAsF,kBAAAC,KAAAI,MACA/F,EAAAgG,MACAC,IAAAA,OAAOlD,KAAKmD,wBACRT,OAAA,IACAU,cAIIC,KAAAA,YAAAA,KAAAA,kBAAWC,kBACdjG,KAAAkG,aAFDlG,KAAAsF,kBAAAa,iBAYCnG,KAAA0F,kBAAAlE,EAAAT,QAAA8D,IACJpB,QAlBD,SAAAd,GAmBAnB,EAAAiE,QACI5E,EAAAA,SAAAA,YACI8B,GAAA,GAMPnB,EARDO,SAQOkB,aAAA,EACHC,EAAAA,SAAAA,sBACH1B,EAAA4E,kBACD5E,EAAAA,eAAKkC,gBAET2C,IAAAA,EAAc,GACVxD,EAAAA,KAAAA,EAAAA,MAAa,SAAAyD,EAAAC,GAChB,IAAAP,EAAA,GA5CLM,EAAAtD,SAagBgD,GAAW,OAASM,EAAKtD,OAAS,SAoC1CwD,EAAMpE,KAAAA,EAAAA,iBADoCmE,GAAA,SAAAE,GAE1CT,GAAWU,OAF+BD,EAAA,UAItC5F,IAJsC8F,GAO1C,aACS5E,SAAS6E,EAAAA,IAAd,GARsC,KAU1CpF,EAAAO,SAAkB8E,MAVwBN,GAAAO,KAWnCC,OAZff,EArBoB,gBAsCZ5E,EAIJP,OAAOoB,WACC,+BACA,+FAII+E,EAIFpB,aACEpC,SAAKhC,aAGDyF,aAEAC,EAAAA,0BAICb,aAAA,SAAA1D,GAPCE,aAAA,mBAAA,eAcFK,OAAAA,gBACHiE,eACAC,EAAAA,6BACGlE,KAAAA,EACAmE,UAeZ,WACIC,IAAAA,EAAAA,EAMA,sSAGQA,OAAAA,WAAAA,yBAEIC,GAMPC,GAAA,WACGF,IAAAA,EAQH1H,EAAA,oBAAA6H,MAAA3H,OAAA,EACJF,EAAA,oBAAA6H,MACDH,WAAe9F,EAAfO,SAAA+E,KACHE,EACJpH,EAAA,kBAAA6H,MAAA3H,OAAA,EACCF,EAAA,kBAA0B0H,MAC1B,GACE1H,EAAAgG,MACI8B,IAAAA,EAAAA,KAAehB,iBACfiB,KAAAA,OACAhF,MACA+E,cAAaE,EACVC,oBAAAb,EACHU,cAAaI,WAChB,OAAAvC,KAAAwC,UACa9E,EAAAA,SAAcL,iBAK3BiE,KAAAA,SAAgBhC,GAChB9C,OAASiG,oBAAdnG,EACKE,OAASkG,SACT7B,OAAL8B,KAAA,sBAAArD,EACKM,eApEQiC,KAAK,WAuEtBlE,aACIiF,MACAA,6EAC0BjG,OAA1BgB,cArEakF,IAAA,WACRvH,OAnC6CiB,SAoC9CI,OAAQgB,KAAAA,mBAAAA,EAAAA,QAAAA,IAEfmF,kBAAA,WAlDW7G,EAAKO,SAAS6E,qBAqDtBpF,iBAgIQ8G,WACAlH,EAAAA,SAAAA,SACHI,EAAAO,SAJDkG,sBAKI7G,EAAAA,kBACAkH,EAAAA,eAAAA,iBAnIR1I,MAxUI2I,WAEP,GADGA,EAAAA,SAAAA,+BACHxG,UAAAP,EAAAO,SAAAkB,YAAA,CACJ,IAAAuF,EAAA,WACJ3H,OAAAc,oBAAAE,EAqBmBhB,OAAOd,SAAS+B,SAAWN,EAAKE,KAAKe,gBAlBjD/B,OAAAA,WACAA,wBACIC,kEAEPuB,OAAAgB,WACJuF,eAAA,WAqB2BrG,EAAsB,KAAMoG,MAhBpC3H,aAAON,SAIfiB,OAAKO,SAASC,SAAAA,EAAAA,KAAAA,kBA8WlB,IAAImG,EAAgBvI,EAAEyB,SAASiD,IAAI,sBA6EnCzC,IAAAsG,GACAvI,EAAA,oBAAAmE,KA3EQ2E,MAAOP,EAkFfQ,OAAAR,IAKAvI,EAAAyB,SAAAiD,IAAA,gBACAsE,IA/EI5H,IAsGJ6E,EAAAA,oBAAY9E,KAAQ8H,UAAW,SAAS9G,EAAAA,GACpC,IAAA+G,EAAI/G,EAAAA,MAAS8C,eACTkE,EAAAD,EAAIE,SACAC,EAAAA,KAAMC,IACNC,EAAAA,SAAKC,EAAAC,QAAAN,EAAAO,MACLC,EAAAA,UAAAA,EAASC,QAAAT,EAAAU,MAEL7J,EAAAyB,SAAAC,IAAA,gBAAaoI,EAAb,QAIsB9J,EAAA,mBAAAgE,MAAlB,WAmBH,QAAAhE,EAAA,oBAAAmE,IAAA,SACJ6E,IAEL5H,MAgBPH,OAjDDc,eAAA,WAkDA,GAAAI,UAAAP,EAAAO,SAAAkB,YAxhB4B,MAAA,kEA6hB5BjD,KAAAe,QAAIS,UAAJ1B,OAAA,GACAF,EAAA,SACI6D,KAAAA,aACIjC,OAAAA,KAAKO,4BAGLnC,EAAAA,uBAAY+J,OACRhD,EAAAA,+BAAAA,KACI,oBAKJ/G,IAAAA,EAAES,KACEsG,EAAAA,wBAAAA,KAAAA,WACH,IAAAvF,EAAAxB,EAFDI,MAAAgF,KAAA,uBAGA2B,EAAAA,MAAAA,MAAAA,WACHvF,EAXD8D,GAAA,YAYIyB,GAAJ2B,EAAqBsB,QAAA,QACjB/I,EAAOoB,EAOVb,EARDyI,UAQO,UAENzI,EAAAwI,QAAA,QA3B0BtB,EAAA,WA5FnC,EAAAwB,EAAAvH,SA+HJ,gBACAkD,gBACIjE,EAAKO,KAAAA,aACL,YAOAnC,EAAA,iBAAWgE,MAAA,WAEX,OADAhE,EAAA,aAAWgE,SACX,KAGC,EAAAkG,EAAAvH,SACG+G,sBACH,sBACD9H,EAAIuI,KAAGpB,eACHc,iBACH,IACGA,EACH,IAIL/D,yBAAmB,WACf9F,IAAAA,EACII,KACIwD,EAAK5D,EACL+C,mLAmER,OAzDID,EAAAA,KAAAA,KAAAA,QADUmG,UAAA,SAAA9G,GAEVyB,GAAAA,EAAKvC,KAAAO,EAAcT,QAAA8D,GAAA,CACnBlC,IAAAA,EAAMqH,IAAAA,EAAAA,QAHIC,YAIVxG,KAAS,aACLyG,IAAKC,uBACLD,QAAKE,mCACL5I,QAAKO,WACRA,EAAA2H,WAAA,EARLlI,EAAA6I,mBAAAtI,EAAA8C,GAAA9C,EAAA+E,MAYJ7F,OAAAC,MAAAd,MACmBe,MAAA,UACCY,KACKmI,kBAAMnI,EAAA2H,WAAA,iCAGpBY,SAHPpI,OAAA,WAvnB4BjB,OAAAC,MAAAf,QA8nBhCoB,KAAA,WAC0BN,OAAAC,MAAAf,OACGoK,EAAAA,mBACExI,EAAA8C,GAAA9C,EAAA+E,aAStB0D,EAAAA,EAAAA,QA1oBuBlK,KAAA,OAAA,KAygBfmK,KAAK1I,EAAS+E,MAoI/B4D,GAAA,QAAA,WACalJ,EAAAmJ,yBACT5I,EAAA6I,UACA7I,EAAA+E,QAKI+D,EAAIC,KAAAA,kBACCC,OAGHnL,EAAF,UAGO4B,SAAKO,aACPA,OAASiJ,GAXlBzH,OAAAyF,EAAAiC,SAgBAJ,GAGJK,mBAAAA,SAAmBC,GAEf,IAAA3J,EAAKxB,KACDoL,KAAAA,kBACID,GAKP1H,QAAA,SAAAd,GACDyI,EAAAA,SAAWC,YAAX1I,GAAA,GA/qB4B,IAAAgE,EAAA,GAmiBpB/G,EAAES,KAAKsC,EAAKgH,iBAAkB,SAAS2B,EAAGlI,GAgJ7CuD,GACI4E,aACLC,SAAAF,EAAA,IAAA,GACKC,KACR/J,EAAAO,SAAA0J,MAAAH,GAAAxE,KACQyE,OACDG,EAAAA,KAAAA,EAAU,SAAdvI,EAAAwI,GACQC,GAAcA,OAAtBD,EAAA,UAEAzB,GAAsB0B,eAEtBC,EACAhL,OAAKkB,WACE,oCACJ,kJACH4E,EACH,SAnsB2BmF,SAAA5I,aAusBxB6I,cAGJ1F,aAAI2F,SAAgBrJ,GAChBsJ,aAAAA,qBAAJ,gBAMgBxG,MAAA,WACAzF,KAAA+B,UAAA/B,KAAA+B,SAAImK,aACAC,KAAAA,SAAAA,OAAAA,iBAAUA,SAAeD,IAAAA,EAAAA,QAC5BlM,KACJJ,EAAA,uBAILA,gBAAAA,WACI,IAKQ6J,EAAAH,EALR8C,EAAAxM,EAAA,oBACIA,EAAAA,EAAAA,qBAQQuM,EADJpC,EAAArB,QAAA0D,EAAA1D,SACIyD,EAAAA,QAAAA,EAAAA,SAAUA,EAEjB,EAGZ1C,EADIM,EAAApB,SAdDyD,EAAAzD,UAeHyD,EAAAzD,SAAAoB,EAAApB,UAAA,EAEG/I,EAEQyM,EAAAA,KAAAA,KAAAA,EAAAA,IAAAA,KAGX3G,kBAAA,SAAAyF,EAAApK,GACJnB,EAAAgG,KACDtD,EAAAC,QAAI8J,MAAAA,GACAzM,IAAES,KAAKgM,KAAAA,cACHJ,MAAAA,GAAAA,EAAAA,EAAAA,QAIHK,SALD,OAMAC,OAAAA,MAKH/B,gBAAA,SAAAN,EAAAF,GACJ,IA9vB+BxI,EAAAxB,KAwmB5BsC,EAAAC,QAAMC,SAwJVgK,KAAAA,OACI5M,IAAEqB,OAAAiH,KAAF,6BACAtI,KAAEoK,EAlwB0BvG,QAAA,SAAAd,GA6mBpBuH,EAAKC,gBAAgBxH,GAwJjC8J,EAAUrC,kBAASsC,GACXlL,EAAAA,SAAJmL,cAAAzC,OAMIwC,kBAAAA,SAAexC,EAAf/I,GACAuL,IAAAA,EAAAA,KAAQ3K,SAARwI,YAAwBxI,OAAxBZ,EAAA0D,GACA6H,KAAAA,gBAAQtH,GACRsH,KAAAA,OACAA,QAAAA,EACA7G,EAAA,UAKI5E,yBAAO2L,SACH/H,EAAA1D,GAGP,IAAA+I,EAAAlK,KAAA+B,SAAAwI,YAAA,cAAApJ,EAAA0D,GACJ7E,KAAAwK,gBAAAN,GACDtK,KAAE,cACFiN,WAAW3M,EACX2M,EAAAA,UAIJC,oBAAW,SAAApK,EAASqK,GAChBA,IAAAA,EAAAA,KAAQhL,SAAKiL,YAAbtK,EAAAvB,GACA2D,KAAAA,gBAAckI,GAALtK,KAAiBoC,EAA1Be,EAAA,UAIJoH,YAAAA,SAAcC,EAAAhD,GAEV,IAAA1I,EAAI2L,KACJvN,EAAA,kBACI2D,OAAA6J,aAAAF,EAAAhD,IAIJmD,EACAF,yDACAA,MAAGpJ,WACHoJ,IAAGpJ,EAAalD,EAAFb,MACXuD,QAAS,YAAA,eACR2G,SAAO,qBACNxH,OACLwH,EAAAA,MACIoD,QACA,aAGDpN,gBACHsB,EAAAO,SAAAwL,YAAAhC,iBAAAT,GACAtJ,EAAAO,SAAAiJ,yBAAA,KAOSwC,iBALT,WAOA,OAAAC,UAGAvC,kBAAU,SAAAhB,GACV,IAAAkB,EAAU,qDACV,IAAA,IAAI1C,KAAQwB,EAAZwD,iBACAtC,GACGrH,kBACCuF,EACAG,KAFJkE,EAIArD,YAGA6C,OADAA,GAAO,aAMC3L,QAAAA,SAAKO,EAAS6L,EAAa1D,GAM9B,QALiBjC,IAAdzG,EAAAA,mBAEH0I,EACA2D,0BAG4BhM,IAD5BqI,EACA2D,iBAAajC,EAAekC,GAAA,CACzB,IAAApC,KAWQ,OAVRA,EAAIqC,YACKC,EADTtC,EAGIuC,YAAIH,EAHR5D,EAAAqB,iBAIQK,EAJRkC,GAAA,KAKAlO,EAAAA,iBAAc0J,EAAdwE,GAAApC,EACAG,YAAAH,EAAAxB,GACAtK,KAAAA,SACKM,yBACK,GACF,EAEX,OA1BL,GA/IJwD,uBAAwB,WACpB,IAAIqI,EAAe,aACfM,KACAE,EAAoB3M,EAAE,kCACtBoM,EAAcpM,EAAE,4BAChBqM,EAAwB,GACxBE,KACJvM,EAAES,KAAKL,KAAK+B,SAAS0J,MAAO,SAASH,EAAGpB,GAChCA,EAAKgE,aAAehE,EAAKgE,YAAYC,QACrC7L,EAAAC,QAAM6L,SAASlE,EAAKgE,YAAYC,OAAQ,SAAS/E,GAC7C,GAAsB,iBAAXA,EAAEpF,MAAmB,CAC5B,IAAIkI,EAAe9C,EAAEpF,MAAMqK,MAAMtC,GAC7BG,IACAC,EAAUA,EAAQmC,OAAOpC,OAKrChC,EAAKqB,kBACL3L,EAAES,KAAK6J,EAAKqB,iBAAkB,SAASD,EAAG4B,GAClCA,EAAIqB,kBACJ3O,EAAES,KAAK6M,EAAIqB,iBAAkB,SACzBjD,EACAkD,GAEA,IAAIC,EAAcD,EAAgBH,MAC9BtC,GAEA0C,IACAtC,EAAUA,EAAQmC,OAAOG,QAMzCtC,GACAvM,EAAES,KAAK8L,EAAS,SAASb,EAAGoD,IACyB,IAA7C9O,EAAE+O,QAAQD,EAASrC,IACnBA,EAAoBuC,KAAKF,OAKrCrC,GAAsD,IAA/BA,EAAoBvM,QAC3CF,EAAES,KAAKgM,EAAqB,SAASf,EAAGoD,GACpCzC,GACI,QACAyC,EAAQG,UAAU,EAAGH,EAAQ5O,OAAS,GACtC,WAERyM,EAAkB9B,KAAKwB,GACvBD,EAAY5L,SAEZmM,EAAkB9B,KAAKwB,GACvBD,EAAY7L,SAIpBqM,eAAgB,WACZ5M,EAAE,kBAAkBO,OACpBP,EAAE,oBAAoBQ,QAG1BqM,SAAU,SAASC,EAASxC,GACxB,IACIf,EAAM,gBACNtE,EAAKsE,EAAM,IAAMe,EAAKrF,GACtBgI,EAAajN,EAAE,IAAMuJ,GACzB,GAAIuD,GAA+C,GAApCG,EAAW3M,KAAK,IAAM2E,GAAI/E,OAAa,CAClD,IAAImL,EAAMrL,EAAE,YAAciF,EAAK,YAAcsE,EAAM,OAMnD,GALAuD,EAAQxC,KAAOA,EACfwC,EAAQ3K,SAAW/B,KAAK+B,SACxB2K,EAAQtH,UAAYpF,KAAKoF,UACzBsH,EAAQzD,KAAO6F,EAAAvM,QAAc2H,EAAKxH,MAClCgK,EAAQvD,IAAM,oBACVe,EAAM,CACN,IAAI6E,EAAyB,QAAb7E,EAAKxH,KAAiB,OAAS,UAC/CuI,EAAI1H,OAAO,IAAIyL,EAAAzM,QAAawM,GAAWrC,GAASuC,KAAKhE,KACrD4B,EAAWtJ,OAAO0H,QAElBhK,OAAO2L,KAAKsC,MACR,8BACA,+BAIZtP,EAAE,IAAMuJ,GAAKhJ,OACb0M,EAAW3M,KAAK,IAAM2E,GAAIzE,OAC1ByM,EAAWzM,OACXyM,EAAWsC,aAGfrC,UAAW,SAASC,EAAOjI,GAGvB,OAFAiI,EAAQ/M,KAAKgN,YAAYD,GACzBjI,EAAS9E,KAAKgN,YAAYlI,GACnB9E,KAAKkG,aAAa6G,IAAUjI,KAAU9E,KAAKkG,aAAa6G,IAGnEE,aAAc,SAASvK,EAAM0M,EAAYC,GACrC,IAAI7N,EAAOxB,KACPmN,EAAKvN,EAAE,4CACP0P,EAAS1P,EACT,mEACIwP,EACA,gBAER/B,EAAciC,EAAOpP,KAAK,cAAewC,GACzCyK,EAAG5J,OAAO+L,GACVnC,EAAGpJ,IAAI,OAAQnE,EAAEiB,QAAQ0O,aAAe,IACxCpC,EAAGpJ,IAAI,MAAOnE,EAAEiB,QAAQsO,YAAc,IACtChC,EAAG5J,OAAO3D,EAAE,qCACZ,IAAIsK,EAAO,IAAAsF,EAAAjN,QAASvC,MAAQ0O,QAASvB,IACrCjD,EAAKxH,KAAOA,EACZwH,EAAKmF,WAAaA,EAClB,IAAI/B,EACA,6CACArM,OAAOiH,KACP,yEACJiF,EAAGjN,KAAK,iBAAiBqD,OAAO+J,GAGhC,IAAIhD,EAAU1K,EAAE,qDAChB0K,EAAQ/G,OACJ3D,EAAE,UACGgB,SAAS,8BACTgD,MAAM,SAAS6L,GACZvF,EAAKwF,aAIjBvC,EAAG9J,SAAS,qBAEZ,IAAIsM,EAAI/P,EAAE,qBAAqBgQ,WAC3BC,EAAIjQ,EAAE,qBAAqBkF,SAC3B4D,EAAQyE,EAAGzE,QACXC,EAASwE,EAAGxE,SAmChB,OAlCAwE,EAAGpJ,KACCuF,MAAOqG,EAAErG,KAAOuG,EAAEnH,QAAU,EAAIA,EAAQ,EACxCe,KAAMkG,EAAElG,IAAMoG,EAAElH,SAAW,EAAIA,EAAS,IAE5C2B,EAAQwF,UAAU3C,EAAGjN,KAAK,mBAC1BwI,GAAS4B,EAAQ5B,QAAU,GAC3ByE,EAAGpJ,IAAI,QAAS2E,GAChByE,EACKU,KAAK,YAAa,WACfrM,EAAKO,SAAS4K,cAAczC,KAE/B2D,KAAK,UAAW,WACbrM,EAAKO,SAAS6L,aAAa5N,MAC3BwB,EAAKO,SAASkG,sBACdzG,EAAK2D,eAAe4K,kBAEvBlC,KAAK,gBAAiB,WACnBrM,EAAKO,SAAS4K,cAAczC,KAE/B2D,KAAK,OAAQ,SAAS4B,EAAGrG,GAEtB,IAAI2E,EAAKnO,EAAEI,MACFgO,eACAgC,SACL/B,EAAI7E,EAAEC,QAAU0E,EAAGzE,KACnB2G,EAAI7G,EAAEI,QAAUuE,EAAGtE,IACvB7J,EAAEI,MAAM+D,KAAMuF,KAAM2E,EAAGxE,IAAKwG,IAE5BrQ,EAAEI,MACGE,KAAK,aACLG,KAAK,WACFL,KAAKkQ,SAASC,aAGvBjG","file":"../../../scripts/mvc/workflow/workflow-view.js","sourcesContent":["import Utils from \"utils/utils\";\nimport Workflow from \"mvc/workflow/workflow-manager\";\nimport WorkflowCanvas from \"mvc/workflow/workflow-canvas\";\nimport Node from \"mvc/workflow/workflow-node\";\nimport WorkflowIcons from \"mvc/workflow/workflow-icons\";\nimport FormWrappers from \"mvc/workflow/workflow-forms\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport async_save_text from \"utils/async-save-text\";\nimport Toastr from \"libs/toastr\";\nimport \"ui/editable-text\";\n\n// TODO; tie into Galaxy state?\nwindow.workflow_globals = window.workflow_globals || {};\n\n// Reset tool search to start state.\nfunction reset_tool_search(initValue) {\n    // Function may be called in top frame or in tool_menu_frame;\n    // in either case, get the tool menu frame.\n    var tool_menu_frame = $(\"#galaxy_tools\").contents();\n    if (tool_menu_frame.length === 0) {\n        tool_menu_frame = $(document);\n        // Remove classes that indicate searching is active.\n        $(this).removeClass(\"search_active\");\n        tool_menu_frame.find(\".toolTitle\").removeClass(\"search_match\");\n\n        // Reset visibility of tools and labels.\n        tool_menu_frame.find(\".toolSectionBody\").hide();\n        tool_menu_frame.find(\".toolTitle\").show();\n        tool_menu_frame.find(\".toolPanelLabel\").show();\n        tool_menu_frame.find(\".toolSectionWrapper\").each(function() {\n            if ($(this).attr(\"id\") !== \"recently_used_wrapper\") {\n                // Default action.\n                $(this).show();\n            } else if ($(this).hasClass(\"user_pref_visible\")) {\n                $(this).show();\n            }\n        });\n        tool_menu_frame.find(\"#search-no-results\").hide();\n\n        // Reset search input.\n        tool_menu_frame.find(\"#search-spinner\").hide();\n        if (initValue) {\n            var search_input = tool_menu_frame.find(\"#tool-search-query\");\n            search_input.val(\"search tools\");\n        }\n    }\n}\n\nfunction add_node_icon($to_el, nodeType) {\n    var iconStyle = WorkflowIcons[nodeType];\n    if (iconStyle) {\n        var $icon = $('<i class=\"icon fa\">&nbsp;</i>').addClass(iconStyle);\n        $to_el.before($icon);\n    }\n}\n\n// create form view\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = (window.workflow_globals.app = this);\n        this.options = options;\n        this.urls = (options && options.urls) || {};\n        var close_editor = function() {\n            self.workflow.check_changes_in_active_form();\n            if (workflow && self.workflow.has_changes) {\n                var do_close = function() {\n                    window.onbeforeunload = undefined;\n                    window.document.location = self.urls.workflow_index;\n                };\n                window.show_modal(\n                    \"Close workflow editor\",\n                    \"There are unsaved changes to your workflow which will be lost.\",\n                    {\n                        Cancel: hide_modal,\n                        \"Save Changes\": function() {\n                            save_current_workflow(null, do_close);\n                        }\n                    },\n                    {\n                        \"Don't Save\": do_close\n                    }\n                );\n            } else {\n                window.document.location = self.urls.workflow_index;\n            }\n        };\n        var save_current_workflow = function(eventObj, success_callback) {\n            show_message(\"Saving workflow\", \"progress\");\n            self.workflow.check_changes_in_active_form();\n            if (!self.workflow.has_changes) {\n                hide_modal();\n                if (success_callback) {\n                    success_callback();\n                }\n                return;\n            }\n            self.workflow.rectify_workflow_outputs();\n            Utils.request({\n                url: Galaxy.root + \"api/workflows/\" + self.options.id,\n                type: \"PUT\",\n                data: { workflow: self.workflow.to_simple() },\n                success: function(data) {\n                    var body = $(\"<div/>\").text(data.message);\n                    if (data.errors) {\n                        body.addClass(\"warningmark\");\n                        var errlist = $(\"<ul/>\");\n                        $.each(data.errors, function(i, v) {\n                            $(\"<li/>\")\n                                .text(v)\n                                .appendTo(errlist);\n                        });\n                        body.append(errlist);\n                    } else {\n                        body.addClass(\"donemark\");\n                    }\n                    self.workflow.name = data.name;\n                    self.workflow.has_changes = false;\n                    self.workflow.stored = true;\n                    self.showWorkflowParameters();\n                    if (data.errors) {\n                        window.show_modal(\"Saving workflow\", body, {\n                            Ok: hide_modal\n                        });\n                    } else {\n                        success_callback && success_callback();\n                        hide_modal();\n                    }\n                },\n                error: function(response) {\n                    window.show_modal(\n                        \"Saving workflow failed.\",\n                        response.err_msg,\n                        { Ok: hide_modal }\n                    );\n                }\n            });\n        };\n\n        // Init searching.\n        $(\"#tool-search-query\")\n            .click(function() {\n                $(this).focus();\n                $(this).select();\n            })\n            .keyup(function() {\n                // Remove italics.\n                $(this).css(\"font-style\", \"normal\");\n                // Don't update if same value as last time\n                if (this.value.length < 3) {\n                    reset_tool_search(false);\n                } else if (this.value != this.lastValue) {\n                    // Add class to denote that searching is active.\n                    $(this).addClass(\"search_active\");\n                    // input.addClass(config.loadingClass);\n                    // Add '*' to facilitate partial matching.\n                    var q = this.value;\n                    // Stop previous ajax-request\n                    if (this.timer) {\n                        clearTimeout(this.timer);\n                    }\n                    // Start a new ajax-request in X ms\n                    $(\"#search-spinner\").show();\n                    this.timer = setTimeout(function() {\n                        $.get(\n                            self.urls.tool_search,\n                            { q: q },\n                            function(data) {\n                                // input.removeClass(config.loadingClass);\n                                // Show live-search if results and search-term aren't empty\n                                $(\"#search-no-results\").hide();\n                                // Hide all tool sections.\n                                $(\".toolSectionWrapper\").hide();\n                                // This hides all tools but not workflows link (which is in a .toolTitle div).\n                                $(\".toolSectionWrapper\")\n                                    .find(\".toolTitle\")\n                                    .hide();\n                                if (data.length != 0) {\n                                    // Map tool ids to element ids and join them.\n                                    var s = $.map(data, function(n, i) {\n                                        return \"link-\" + n;\n                                    });\n                                    // First pass to show matching tools and their parents.\n                                    $(s).each(function(index, id) {\n                                        // Add class to denote match.\n                                        $(\"[id='\" + id + \"']\")\n                                            .parent()\n                                            .addClass(\"search_match\");\n                                        $(\"[id='\" + id + \"']\")\n                                            .parent()\n                                            .show()\n                                            .parent()\n                                            .parent()\n                                            .show()\n                                            .parent()\n                                            .show();\n                                    });\n                                    // Hide labels that have no visible children.\n                                    $(\".toolPanelLabel\").each(function() {\n                                        var this_label = $(this);\n                                        var next = this_label.next();\n                                        var no_visible_tools = true;\n                                        // Look through tools following label and, if none are visible, hide label.\n                                        while (\n                                            next.length !== 0 &&\n                                            next.hasClass(\"toolTitle\")\n                                        ) {\n                                            if (next.is(\":visible\")) {\n                                                no_visible_tools = false;\n                                                break;\n                                            } else {\n                                                next = next.next();\n                                            }\n                                        }\n                                        if (no_visible_tools) {\n                                            this_label.hide();\n                                        }\n                                    });\n                                } else {\n                                    $(\"#search-no-results\").show();\n                                }\n                                $(\"#search-spinner\").hide();\n                            },\n                            \"json\"\n                        );\n                    }, 400);\n                }\n                this.lastValue = this.value;\n            });\n\n        // Canvas overview management\n        this.canvas_manager = window.workflow_globals.canvas_manager = new WorkflowCanvas(\n            this,\n            $(\"#canvas-viewport\"),\n            $(\"#overview\")\n        );\n\n        // Initialize workflow state\n        this.reset();\n\n        // get available datatypes for post job action options\n        this.datatypes = JSON.parse(\n            $.ajax({\n                url: Galaxy.root + \"api/datatypes\",\n                async: false\n            }).responseText\n        );\n\n        // get datatype mapping options\n        this.datatypes_mapping = JSON.parse(\n            $.ajax({\n                url: Galaxy.root + \"api/datatypes/mapping\",\n                async: false\n            }).responseText\n        );\n\n        // set mapping sub lists\n        this.ext_to_type = this.datatypes_mapping.ext_to_class_name;\n        this.type_to_type = this.datatypes_mapping.class_to_classes;\n\n        // Load workflow definition\n        this._workflowLoadAjax(self.options.id, {\n            success: function(data) {\n                self.reset();\n                self.workflow.from_simple(data, true);\n                self.workflow.has_changes = false;\n                self.workflow.fit_canvas_to_nodes();\n                self.scroll_to_nodes();\n                self.canvas_manager.draw_overview();\n                // Determine if any parameters were 'upgraded' and provide message\n                var upgrade_message = \"\";\n                _.each(data.steps, function(step, step_id) {\n                    var details = \"\";\n                    if (step.errors) {\n                        details += \"<li>\" + step.errors + \"</li>\";\n                    }\n                    _.each(data.upgrade_messages[step_id], function(m) {\n                        details += \"<li>\" + m + \"</li>\";\n                    });\n                    if (details) {\n                        upgrade_message +=\n                            \"<li>Step \" +\n                            (parseInt(step_id, 10) + 1) +\n                            \": \" +\n                            self.workflow.nodes[step_id].name +\n                            \"<ul>\" +\n                            details +\n                            \"</ul></li>\";\n                    }\n                });\n                if (upgrade_message) {\n                    window.show_modal(\n                        \"Issues loading this workflow\",\n                        \"Please review the following issues, possibly resulting from tool upgrades or changes.<p><ul>\" +\n                            upgrade_message +\n                            \"</ul></p>\",\n                        { Continue: hide_modal }\n                    );\n                } else {\n                    hide_modal();\n                }\n                self.showWorkflowParameters();\n            },\n            beforeSubmit: function(data) {\n                show_message(\"Loading workflow\", \"progress\");\n            }\n        });\n\n        window.make_popupmenu &&\n            make_popupmenu($(\"#workflow-options-button\"), {\n                Save: save_current_workflow,\n                \"Save As\": workflow_save_as,\n                Run: function() {\n                    window.location =\n                        Galaxy.root + \"workflow/run?id=\" + self.options.id;\n                },\n                \"Edit Attributes\": function() {\n                    self.workflow.clear_active_node();\n                },\n                \"Auto Re-layout\": layout_editor,\n                Close: close_editor\n            });\n\n        /******************************************** Issue 3000*/\n        function workflow_save_as() {\n            var body = $(\n                '<form><label style=\"display:inline-block; width: 100%;\">Save as name: </label><input type=\"text\" id=\"workflow_rename\" style=\"width: 80%;\" autofocus/>' +\n                    '<br><label style=\"display:inline-block; width: 100%;\">Annotation: </label><input type=\"text\" id=\"wf_annotation\" style=\"width: 80%;\" /></form>'\n            );\n            window.show_modal(\"Save As a New Workflow\", body, {\n                OK: function() {\n                    var rename_name =\n                        $(\"#workflow_rename\").val().length > 0\n                            ? $(\"#workflow_rename\").val()\n                            : \"SavedAs_\" + self.workflow.name;\n                    var rename_annotation =\n                        $(\"#wf_annotation\").val().length > 0\n                            ? $(\"#wf_annotation\").val()\n                            : \"\";\n                    $.ajax({\n                        url: self.urls.workflow_save_as,\n                        type: \"POST\",\n                        data: {\n                            workflow_name: rename_name,\n                            workflow_annotation: rename_annotation,\n                            workflow_data: function() {\n                                return JSON.stringify(\n                                    self.workflow.to_simple()\n                                );\n                            }\n                        }\n                    })\n                        .done(function(id) {\n                            window.onbeforeunload = undefined;\n                            window.location =\n                                Galaxy.root + \"workflow/editor?id=\" + id;\n                            hide_modal();\n                        })\n                        .fail(function() {\n                            hide_modal();\n                            alert(\n                                \"Saving this workflow failed. Please contact this site's administrator.\"\n                            );\n                        });\n                },\n                Cancel: hide_modal\n            });\n        }\n\n        function edit_workflow_outputs() {\n            self.workflow.clear_active_node();\n            $(\".right-content\").hide();\n            var new_content = \"\";\n            for (var node_key in self.workflow.nodes) {\n                var node = self.workflow.nodes[node_key];\n                if ([\"tool\", \"subworkflow\"].indexOf(node.type) >= 0) {\n                    new_content +=\n                        \"<div class='toolForm' style='margin-bottom:5px;'><div class='toolFormTitle'>Step \" +\n                        node.id +\n                        \" - \" +\n                        node.name +\n                        \"</div>\";\n                    for (var ot_key in node.output_terminals) {\n                        var output = node.output_terminals[ot_key];\n                        if (node.isWorkflowOutput(output.name)) {\n                            new_content +=\n                                \"<p>\" +\n                                output.name +\n                                \"<input type='checkbox' name='\" +\n                                node.id +\n                                \"|\" +\n                                output.name +\n                                \"' checked /></p>\";\n                        } else {\n                            new_content +=\n                                \"<p>\" +\n                                output.name +\n                                \"<input type='checkbox' name='\" +\n                                node.id +\n                                \"|\" +\n                                output.name +\n                                \"' /></p>\";\n                        }\n                    }\n                    new_content += \"</div>\";\n                }\n            }\n            $(\"#output-fill-area\").html(new_content);\n            $(\"#output-fill-area input\").bind(\"click\", function() {\n                var node_id = this.name.split(\"|\")[0];\n                var workflowNode = this.workflow.nodes[node_id];\n                var output_name = this.name.split(\"|\")[1];\n                if (this.checked) {\n                    workflowNode.addWorkflowOutput(output_name);\n                } else {\n                    workflowNode.removeWorkflowOutput(output_name);\n                }\n                self.workflow.has_changes = true;\n            });\n            $(\"#workflow-output-area\").show();\n        }\n\n        function layout_editor() {\n            self.workflow.layout();\n            self.workflow.fit_canvas_to_nodes();\n            self.scroll_to_nodes();\n            self.canvas_manager.draw_overview();\n        }\n\n        // On load, set the size to the pref stored in local storage if it exists\n        var overview_size = $.jStorage.get(\"overview-size\");\n        if (overview_size !== undefined) {\n            $(\"#overview-border\").css({\n                width: overview_size,\n                height: overview_size\n            });\n        }\n\n        // Show viewport on load unless pref says it's off\n        if ($.jStorage.get(\"overview-off\")) {\n            hide_overview();\n        } else {\n            show_overview();\n        }\n\n        // Stores the size of the overview into local storage when it's resized\n        $(\"#overview-border\").bind(\"dragend\", function(e, d) {\n            var op = $(this).offsetParent();\n            var opo = op.offset();\n            var new_size = Math.max(\n                op.width() - (d.offsetX - opo.left),\n                op.height() - (d.offsetY - opo.top)\n            );\n            $.jStorage.set(\"overview-size\", new_size + \"px\");\n        });\n\n        function show_overview() {\n            $.jStorage.set(\"overview-off\", false);\n            $(\"#overview-border\").css(\"right\", \"0px\");\n            $(\"#close-viewport\").css(\"background-position\", \"0px 0px\");\n        }\n\n        function hide_overview() {\n            $.jStorage.set(\"overview-off\", true);\n            $(\"#overview-border\").css(\"right\", \"20000px\");\n            $(\"#close-viewport\").css(\"background-position\", \"12px 0px\");\n        }\n\n        // Lets the overview be toggled visible and invisible, adjusting the arrows accordingly\n        $(\"#close-viewport\").click(function() {\n            if ($(\"#overview-border\").css(\"right\") === \"0px\") {\n                hide_overview();\n            } else {\n                show_overview();\n            }\n        });\n\n        // Unload handler\n        window.onbeforeunload = function() {\n            if (workflow && self.workflow.has_changes) {\n                return \"There are unsaved changes to your workflow which will be lost.\";\n            }\n        };\n\n        this.options.workflows.length > 0 &&\n            $(\"#left\")\n                .find(\".toolMenu\")\n                .append(this._buildToolPanelWorkflows());\n\n        // Tool menu\n        $(\"div.toolSectionBody\").hide();\n        $(\"div.toolSectionTitle > span\").wrap(\"<a href='#'></a>\");\n        var last_expanded = null;\n        $(\"div.toolSectionTitle\").each(function() {\n            var body = $(this).next(\"div.toolSectionBody\");\n            $(this).click(function() {\n                if (body.is(\":hidden\")) {\n                    if (last_expanded) last_expanded.slideUp(\"fast\");\n                    last_expanded = body;\n                    body.slideDown(\"fast\");\n                } else {\n                    body.slideUp(\"fast\");\n                    last_expanded = null;\n                }\n            });\n        });\n\n        // Rename async.\n        async_save_text(\n            \"workflow-name\",\n            \"workflow-name\",\n            self.urls.rename_async,\n            \"new_name\"\n        );\n\n        // Tag async. Simply have the workflow edit element generate a click on the tag element to activate tagging.\n        $(\"#workflow-tag\").click(function() {\n            $(\".tag-area\").click();\n            return false;\n        });\n        // Annotate async.\n        async_save_text(\n            \"workflow-annotation\",\n            \"workflow-annotation\",\n            self.urls.annotate_async,\n            \"new_annotation\",\n            25,\n            true,\n            4\n        );\n    },\n\n    _buildToolPanelWorkflows: function() {\n        var self = this;\n        var $section = $(\n            '<div class=\"toolSectionWrapper\">' +\n                '<div class=\"toolSectionTitle\">' +\n                '<a href=\"#\"><span>Workflows</span></a>' +\n                \"</div>\" +\n                '<div class=\"toolSectionBody\">' +\n                '<div class=\"toolSectionBg\"/>' +\n                \"</div>\" +\n                \"</div>\"\n        );\n        _.each(this.options.workflows, function(workflow) {\n            if (workflow.id !== self.options.id) {\n                var copy = new Ui.ButtonIcon({\n                    icon: \"fa fa-copy\",\n                    cls: \"ui-button-icon-plain\",\n                    tooltip: \"Copy and insert individual steps\",\n                    onclick: function() {\n                        if (workflow.step_count < 2) {\n                            self.copy_into_workflow(workflow.id, workflow.name);\n                        } else {\n                            // don't ruin the workflow by adding 50 steps unprompted.\n                            Galaxy.modal.show({\n                                title: \"Warning\",\n                                body:\n                                    \"This will copy \" +\n                                    workflow.step_count +\n                                    \" new steps into your workflow.\",\n                                buttons: {\n                                    Cancel: function() {\n                                        Galaxy.modal.hide();\n                                    },\n                                    Copy: function() {\n                                        Galaxy.modal.hide();\n                                        self.copy_into_workflow(\n                                            workflow.id,\n                                            workflow.name\n                                        );\n                                    }\n                                }\n                            });\n                        }\n                    }\n                });\n                var $add = $(\"<a/>\")\n                    .attr(\"href\", \"#\")\n                    .html(workflow.name)\n                    .on(\"click\", function() {\n                        self.add_node_for_subworkflow(\n                            workflow.latest_id,\n                            workflow.name\n                        );\n                    });\n                $section.find(\".toolSectionBg\").append(\n                    $(\"<div/>\")\n                        .addClass(\"toolTitle\")\n                        .append($add)\n                        .append(copy.$el)\n                );\n            }\n        });\n        return $section;\n    },\n\n    copy_into_workflow: function(workflowId) {\n        // Load workflow definition\n        var self = this;\n        this._workflowLoadAjax(workflowId, {\n            success: function(data) {\n                self.workflow.from_simple(data, false);\n                // Determine if any parameters were 'upgraded' and provide message\n                var upgrade_message = \"\";\n                $.each(data.upgrade_messages, function(k, v) {\n                    upgrade_message +=\n                        \"<li>Step \" +\n                        (parseInt(k, 10) + 1) +\n                        \": \" +\n                        self.workflow.nodes[k].name +\n                        \"<ul>\";\n                    $.each(v, function(i, vv) {\n                        upgrade_message += \"<li>\" + vv + \"</li>\";\n                    });\n                    upgrade_message += \"</ul></li>\";\n                });\n                if (upgrade_message) {\n                    window.show_modal(\n                        \"Subworkflow embedded with changes\",\n                        \"Problems were encountered loading this workflow (possibly a result of tool upgrades). Please review the following parameters and then save.<ul>\" +\n                            upgrade_message +\n                            \"</ul>\",\n                        { Continue: hide_modal }\n                    );\n                } else {\n                    hide_modal();\n                }\n            },\n            beforeSubmit: function(data) {\n                show_message(\"Importing workflow\", \"progress\");\n            }\n        });\n    },\n\n    // Global state for the whole workflow\n    reset: function() {\n        this.workflow && this.workflow.remove_all();\n        this.workflow = window.workflow_globals.workflow = new Workflow(\n            this,\n            $(\"#canvas-container\")\n        );\n    },\n\n    scroll_to_nodes: function() {\n        var cv = $(\"#canvas-viewport\");\n        var cc = $(\"#canvas-container\");\n        var top, left;\n        if (cc.width() < cv.width()) {\n            left = (cv.width() - cc.width()) / 2;\n        } else {\n            left = 0;\n        }\n        if (cc.height() < cv.height()) {\n            top = (cv.height() - cc.height()) / 2;\n        } else {\n            top = 0;\n        }\n        cc.css({ left: left, top: top });\n    },\n\n    _workflowLoadAjax: function(workflowId, options) {\n        $.ajax(\n            Utils.merge(options, {\n                url: this.urls.load_workflow,\n                data: { id: workflowId, _: \"true\" },\n                dataType: \"json\",\n                cache: false\n            })\n        );\n    },\n\n    _moduleInitAjax: function(node, request_data) {\n        var self = this;\n        Utils.request({\n            type: \"POST\",\n            url: Galaxy.root + \"api/workflows/build_module\",\n            data: request_data,\n            success: function(data) {\n                node.init_field_data(data);\n                node.update_field_data(data);\n                self.workflow.activate_node(node);\n            }\n        });\n    },\n\n    // Add a new step to the workflow by tool id\n    add_node_for_tool: function(id, title) {\n        var node = this.workflow.create_node(\"tool\", title, id);\n        this._moduleInitAjax(node, {\n            type: \"tool\",\n            tool_id: id,\n            _: \"true\"\n        });\n    },\n\n    // Add a new step to the workflow by tool id\n    add_node_for_subworkflow: function(id, title) {\n        var node = this.workflow.create_node(\"subworkflow\", title, id);\n        this._moduleInitAjax(node, {\n            type: \"subworkflow\",\n            content_id: id,\n            _: \"true\"\n        });\n    },\n\n    add_node_for_module: function(type, title) {\n        var node = this.workflow.create_node(type, title);\n        this._moduleInitAjax(node, { type: type, _: \"true\" });\n    },\n\n    // This function preloads how to display known pja's.\n    display_pja: function(pja, node) {\n        // DBTODO SANITIZE INPUTS.\n        var self = this;\n        $(\"#pja_container\").append(get_pja_form(pja, node));\n        $(\n            \"#pja_container>.toolForm:last>.toolFormTitle>.buttons\"\n        ).click(function() {\n            var action_to_rem = $(this)\n                .closest(\".toolForm\", \".action_tag\")\n                .children(\".action_tag:first\")\n                .text();\n            $(this)\n                .closest(\".toolForm\")\n                .remove();\n            delete self.workflow.active_node.post_job_actions[action_to_rem];\n            self.workflow.active_form_has_changes = true;\n        });\n    },\n\n    display_pja_list: function() {\n        return pja_list;\n    },\n\n    display_file_list: function(node) {\n        var addlist = \"<select id='node_data_list' name='node_data_list'>\";\n        for (var out_terminal in node.output_terminals) {\n            addlist +=\n                \"<option value='\" +\n                out_terminal +\n                \"'>\" +\n                out_terminal +\n                \"</option>\";\n        }\n        addlist += \"</select>\";\n        return addlist;\n    },\n\n    new_pja: function(action_type, target, node) {\n        if (node.post_job_actions === undefined) {\n            //New tool node, set up dict.\n            node.post_job_actions = {};\n        }\n        if (node.post_job_actions[action_type + target] === undefined) {\n            var new_pja = {};\n            new_pja.action_type = action_type;\n            new_pja.output_name = target;\n            node.post_job_actions[action_type + target] = null;\n            node.post_job_actions[action_type + target] = new_pja;\n            display_pja(new_pja, node);\n            this.workflow.active_form_has_changes = true;\n            return true;\n        } else {\n            return false;\n        }\n    },\n\n    showWorkflowParameters: function() {\n        var parameter_re = /\\$\\{.+?\\}/g;\n        var workflow_parameters = [];\n        var wf_parm_container = $(\"#workflow-parameters-container\");\n        var wf_parm_box = $(\"#workflow-parameters-box\");\n        var new_parameter_content = \"\";\n        var matches = [];\n        $.each(this.workflow.nodes, function(k, node) {\n            if (node.config_form && node.config_form.inputs) {\n                Utils.deepeach(node.config_form.inputs, function(d) {\n                    if (typeof d.value == \"string\") {\n                        var form_matches = d.value.match(parameter_re);\n                        if (form_matches) {\n                            matches = matches.concat(form_matches);\n                        }\n                    }\n                });\n            }\n            if (node.post_job_actions) {\n                $.each(node.post_job_actions, function(k, pja) {\n                    if (pja.action_arguments) {\n                        $.each(pja.action_arguments, function(\n                            k,\n                            action_argument\n                        ) {\n                            var arg_matches = action_argument.match(\n                                parameter_re\n                            );\n                            if (arg_matches) {\n                                matches = matches.concat(arg_matches);\n                            }\n                        });\n                    }\n                });\n            }\n            if (matches) {\n                $.each(matches, function(k, element) {\n                    if ($.inArray(element, workflow_parameters) === -1) {\n                        workflow_parameters.push(element);\n                    }\n                });\n            }\n        });\n        if (workflow_parameters && workflow_parameters.length !== 0) {\n            $.each(workflow_parameters, function(k, element) {\n                new_parameter_content +=\n                    \"<div>\" +\n                    element.substring(2, element.length - 1) +\n                    \"</div>\";\n            });\n            wf_parm_container.html(new_parameter_content);\n            wf_parm_box.show();\n        } else {\n            wf_parm_container.html(new_parameter_content);\n            wf_parm_box.hide();\n        }\n    },\n\n    showAttributes: function() {\n        $(\".right-content\").hide();\n        $(\"#edit-attributes\").show();\n    },\n\n    showForm: function(content, node) {\n        var self = this;\n        var cls = \"right-content\";\n        var id = cls + \"-\" + node.id;\n        var $container = $(\"#\" + cls);\n        if (content && $container.find(\"#\" + id).length == 0) {\n            var $el = $('<div id=\"' + id + '\" class=\"' + cls + '\"/>');\n            content.node = node;\n            content.workflow = this.workflow;\n            content.datatypes = this.datatypes;\n            content.icon = WorkflowIcons[node.type];\n            content.cls = \"ui-portlet-narrow\";\n            if (node) {\n                var form_type = node.type == \"tool\" ? \"Tool\" : \"Default\";\n                $el.append(new FormWrappers[form_type](content).form.$el);\n                $container.append($el);\n            } else {\n                Galaxy.emit.debug(\n                    \"workflow-view::initialize()\",\n                    \"Node not found in workflow.\"\n                );\n            }\n        }\n        $(\".\" + cls).hide();\n        $container.find(\"#\" + id).show();\n        $container.show();\n        $container.scrollTop();\n    },\n\n    isSubType: function(child, parent) {\n        child = this.ext_to_type[child];\n        parent = this.ext_to_type[parent];\n        return this.type_to_type[child] && parent in this.type_to_type[child];\n    },\n\n    prebuildNode: function(type, title_text, content_id) {\n        var self = this;\n        var $f = $(\"<div class='toolForm toolFormInCanvas'/>\");\n        var $title = $(\n            \"<div class='toolFormTitle unselectable'><span class='nodeTitle'>\" +\n                title_text +\n                \"</div></div>\"\n        );\n        add_node_icon($title.find(\".nodeTitle\"), type);\n        $f.append($title);\n        $f.css(\"left\", $(window).scrollLeft() + 20);\n        $f.css(\"top\", $(window).scrollTop() + 20);\n        $f.append($(\"<div class='toolFormBody'></div>\"));\n        var node = new Node(this, { element: $f });\n        node.type = type;\n        node.content_id = content_id;\n        var tmp =\n            \"<div><img height='16' align='middle' src='\" +\n            Galaxy.root +\n            \"static/images/loading_small_white_bg.gif'/> loading tool info...</div>\";\n        $f.find(\".toolFormBody\").append(tmp);\n        // Fix width to computed width\n        // Now add floats\n        var buttons = $(\"<div class='buttons' style='float: right;'></div>\");\n        buttons.append(\n            $(\"<div/>\")\n                .addClass(\"fa-icon-button fa fa-times\")\n                .click(function(e) {\n                    node.destroy();\n                })\n        );\n        // Place inside container\n        $f.appendTo(\"#canvas-container\");\n        // Position in container\n        var o = $(\"#canvas-container\").position();\n        var p = $(\"#canvas-container\").parent();\n        var width = $f.width();\n        var height = $f.height();\n        $f.css({\n            left: -o.left + p.width() / 2 - width / 2,\n            top: -o.top + p.height() / 2 - height / 2\n        });\n        buttons.prependTo($f.find(\".toolFormTitle\"));\n        width += buttons.width() + 10;\n        $f.css(\"width\", width);\n        $f\n            .bind(\"dragstart\", function() {\n                self.workflow.activate_node(node);\n            })\n            .bind(\"dragend\", function() {\n                self.workflow.node_changed(this);\n                self.workflow.fit_canvas_to_nodes();\n                self.canvas_manager.draw_overview();\n            })\n            .bind(\"dragclickonly\", function() {\n                self.workflow.activate_node(node);\n            })\n            .bind(\"drag\", function(e, d) {\n                // Move\n                var po = $(this)\n                        .offsetParent()\n                        .offset(),\n                    x = d.offsetX - po.left,\n                    y = d.offsetY - po.top;\n                $(this).css({ left: x, top: y });\n                // Redraw\n                $(this)\n                    .find(\".terminal\")\n                    .each(function() {\n                        this.terminal.redraw();\n                    });\n            });\n        return node;\n    }\n});\n"]}