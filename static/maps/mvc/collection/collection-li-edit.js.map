{"version":3,"sources":["mvc/collection/collection-li-edit.js"],"names":["_collectionLi","require","_datasetLiEdit","_baseMvc","_localization","DCListItemView","_collectionLi2","default","DCListItemEdit","extend","initialize","attributes","prototype","call","this","toString","model","DCEListItemView","DCEListItemEdit","_datasetLiEdit2","DatasetListItemEdit","modelString","_fetchModelDetails","view","DatasetDCEListItemEdit","fetch","silent","jQuery","when","_renderDeleteButton","inReadyState","hasDetails","templates","_","DatasetDCEListItemView","titleBar","NestedDCDCEListItemEdit","NestedDCDCEListItemView"],"mappings":"4IAAA,IAAAA,cAAAC,QAAA,qFACAC,eAAAD,QAAA,sFACAE,SAAAF,QAAA,2DACAG,cAAAH,QAAA,2EAHAI,eAAAC,eAAAC,QAAAF,eASIG,eAAiBH,eAAeI,QAG5BC,WAAY,SAASC,GACjBN,eAAeO,UAAUF,WAAWG,KAAKC,KAAMH,IAV3DI,SAAA,WAiBY,MAAO,mBADWD,KAAKE,MAAQF,KAAKE,MAAQ,GAAK,cACR,OAbrDC,gBAAAX,eAAAC,QAAAU,gBAGIC,gBAAAD,gBAAuCR,QAwBnCC,WAAY,SAASC,GAlBrBM,gBAAAL,UAAAF,WAAAG,KAAAC,KAAAH,IAKCI,SAAA,WAqBG,MAAO,oBAjCnBD,KAAAE,MAAAF,KAAAE,MAAA,GAAA,cAiCsD,OAP1CC,uBAAgBL,gBAAAA,QAAqBC,oBAAWF,QAGpDD,WAAA,SAAAC,GACAQ,gBAAAZ,QAAAa,oBAAAR,UAAAF,WAAAG,KACUC,KACFO,IA2BRC,mBAAoB,WAChB,IAAIC,EAAOT,KAhBnBU,OAAAA,EAAAA,MAAAA,iBAAyBD,EAAAP,MAAgBI,aACzCG,EAAAP,MAAAS,OAAAC,QAA+C,IAE/BC,OAAAC,QAOZC,oBAAA,WACA,OAAA,MAKId,SAAIQ,WAEA,MAAOA,2BADIO,KAAXd,MAA8BO,KAAKP,MAAMe,GAAAA,cACzC,OAOJP,uBAAAZ,UAAAoB,UAxBuCC,EAAAxB,UA2B3CU,gBAAAZ,QAAAa,oBAAAR,UAAAoB,WAEAjB,SAAUT,eAAAC,QAAA2B,uBAAWtB,UAAAoB,UAAAG,WAUzB,IAAAC,wBAEI9B,eAAAC,QAAA8B,wBAAgBjB,QAHxBL,SAAA,WAUA,MAAA,4BAQ8BD,KAAKE,MAAQF,KAAKE,MAAQ,GAAK,cAR7D,wBAOQD,eAAUP,eACNU,gBAAIG,gBACJG,uBAAOA,uBACVY,wBAAAA","file":"../../../scripts/mvc/collection/collection-li-edit.js","sourcesContent":["import DC_LI from \"mvc/collection/collection-li\";\nimport DATASET_LI_EDIT from \"mvc/dataset/dataset-li-edit\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar DCListItemView = DC_LI.DCListItemView;\n/** @class Edit view for DatasetCollection.\n */\nvar DCListItemEdit = DCListItemView.extend(\n    /** @lends DCListItemEdit.prototype */ {\n        /** override to add linkTarget */\n        initialize: function(attributes) {\n            DCListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DCListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\nvar DCEListItemView = DC_LI.DCEListItemView;\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemEdit = DCEListItemView.extend(\n    /** @lends DCEListItemEdit.prototype */ {\n        //TODO: this might be expendable - compacted with HDAListItemView\n\n        /** set up */\n        initialize: function(attributes) {\n            DCEListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DCEListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\n// NOTE: this does not inherit from DatasetDCEListItemView as you would expect\n//TODO: but should - if we can find something simpler than using diamond\n/** @class Editable view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemEdit = DATASET_LI_EDIT.DatasetListItemEdit.extend(\n    /** @lends DatasetDCEListItemEdit.prototype */ {\n        /** set up */\n        initialize: function(attributes) {\n            DATASET_LI_EDIT.DatasetListItemEdit.prototype.initialize.call(\n                this,\n                attributes\n            );\n        },\n\n        // NOTE: this does not inherit from DatasetDCEListItemView - so we duplicate this here\n        //TODO: fix\n        /** In this override, only get details if in the ready state.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n            }\n            return jQuery.when();\n        },\n\n        /** Override to remove delete button */\n        _renderDeleteButton: function() {\n            return null;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DatasetDCEListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemEdit.prototype.templates = (function() {\n    return _.extend(\n        {},\n        DATASET_LI_EDIT.DatasetListItemEdit.prototype.templates,\n        {\n            titleBar: DC_LI.DatasetDCEListItemView.prototype.templates.titleBar\n        }\n    );\n})();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemEdit = DC_LI.NestedDCDCEListItemView.extend(\n    /** @lends NestedDCDCEListItemEdit.prototype */ {\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"NestedDCDCEListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    DCListItemEdit: DCListItemEdit,\n    DCEListItemEdit: DCEListItemEdit,\n    DatasetDCEListItemEdit: DatasetDCEListItemEdit,\n    NestedDCDCEListItemEdit: NestedDCDCEListItemEdit\n};\n"]}