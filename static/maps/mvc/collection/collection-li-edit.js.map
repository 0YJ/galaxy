{"version":3,"sources":["mvc/collection/collection-li-edit.js"],"names":["DCListItemView","_collectionLi2","default","DCListItemEdit","extend","initialize","attributes","prototype","call","this","toString","model","DCEListItemView","modelString","DatasetDCEListItemEdit","_datasetLiEdit2","DatasetListItemEdit","_fetchModelDetails","view","inReadyState","hasDetails","fetch","jQuery","when","_renderDeleteButton","templates","_","titleBar","DatasetDCEListItemView","NestedDCDCEListItemEdit","NestedDCDCEListItemView","DCEListItemEdit"],"mappings":"+SAMIA,aAAiBC,EAAAC,QAAMF,gBAGvBG,EAAiBH,EAAeI,QAG5BC,WAAY,SAASC,GACjBN,EAAeO,UAAUF,WAAWG,KAAKC,KAAMH,IAKnDI,SAAU,WAEN,MAAO,mBADWD,KAAKE,MAAQF,KAAKE,MAAQ,GAAK,cACR,OAVjDC,EAAAX,EAAAC,QAAAU,gBAGQZ,EAAAA,EAAyBK,QAK7BK,WAAU,SAAAJ,GACNM,EAAIC,UAAmBF,WAAaA,KAALF,KAAbH,IAM9BI,SAAA,WAEA,MAAA,oBADsBD,KAAAE,MAAAF,KAAAE,MAAMC,GAAAA,cAC5B,OAWQE,EAAAC,EAAAb,QAAAc,oBAAAZ,QAGIC,WAAIQ,SAAAA,GACJE,EAAAb,QAAOc,oBAAqBH,UAA5BR,WAAAG,KACHC,KAdTH,IAyBIW,mBAAA,WACI,IAAAC,EAAAT,KACAJ,OAAAA,EAAYM,MAAAQ,iBAASb,EAATK,MAAqBS,aAC7BF,EAAAP,MAAAU,OAAgBL,QAAAA,IAgBTM,OAAOC,QAIlBC,oBAAqB,WACjB,OAAO,MANNd,SAAA,WAlBsC,MAAA,2BAmBhCD,KAAPE,MAAAF,KAAAE,MAAA,GAAA,cAnBuC,OA2B3CG,EAAAP,UAAAkB,UACAC,EAAAtB,UAEIW,EAAAb,QAAIW,oBAA2BN,UAAAkB,WAElCE,SAAA1B,EAAAC,QAAA0B,uBAAArB,UAAAkB,UAAAE,WAcR,IAAAE,EARD5B,EAAAC,QAAA4B,wBAAA1B,QAWAM,SAAA,WAQY,MAAO,4BADWD,KAAKE,MAAQF,KAAKE,MAAQ,GAAK,cACC,kBACrDR,eAAAA,EAL2C4B,gBADpDA,EAcIjB,uBAAwBA,EAJ5Be,wBAAAA","file":"../../../scripts/mvc/collection/collection-li-edit.js","sourcesContent":["import DC_LI from \"mvc/collection/collection-li\";\nimport DATASET_LI_EDIT from \"mvc/dataset/dataset-li-edit\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar DCListItemView = DC_LI.DCListItemView;\n/** @class Edit view for DatasetCollection.\n */\nvar DCListItemEdit = DCListItemView.extend(\n    /** @lends DCListItemEdit.prototype */ {\n        /** override to add linkTarget */\n        initialize: function(attributes) {\n            DCListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DCListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\nvar DCEListItemView = DC_LI.DCEListItemView;\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemEdit = DCEListItemView.extend(\n    /** @lends DCEListItemEdit.prototype */ {\n        //TODO: this might be expendable - compacted with HDAListItemView\n\n        /** set up */\n        initialize: function(attributes) {\n            DCEListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DCEListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\n// NOTE: this does not inherit from DatasetDCEListItemView as you would expect\n//TODO: but should - if we can find something simpler than using diamond\n/** @class Editable view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemEdit = DATASET_LI_EDIT.DatasetListItemEdit.extend(\n    /** @lends DatasetDCEListItemEdit.prototype */ {\n        /** set up */\n        initialize: function(attributes) {\n            DATASET_LI_EDIT.DatasetListItemEdit.prototype.initialize.call(\n                this,\n                attributes\n            );\n        },\n\n        // NOTE: this does not inherit from DatasetDCEListItemView - so we duplicate this here\n        //TODO: fix\n        /** In this override, only get details if in the ready state.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n            }\n            return jQuery.when();\n        },\n\n        /** Override to remove delete button */\n        _renderDeleteButton: function() {\n            return null;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DatasetDCEListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemEdit.prototype.templates = (function() {\n    return _.extend(\n        {},\n        DATASET_LI_EDIT.DatasetListItemEdit.prototype.templates,\n        {\n            titleBar: DC_LI.DatasetDCEListItemView.prototype.templates.titleBar\n        }\n    );\n})();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemEdit = DC_LI.NestedDCDCEListItemView.extend(\n    /** @lends NestedDCDCEListItemEdit.prototype */ {\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"NestedDCDCEListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    DCListItemEdit: DCListItemEdit,\n    DCEListItemEdit: DCEListItemEdit,\n    DatasetDCEListItemEdit: DatasetDCEListItemEdit,\n    NestedDCDCEListItemEdit: NestedDCDCEListItemEdit\n};\n"]}