{"version":3,"sources":["mvc/collection/collection-view.js"],"names":["_listView","require","_collectionModel","_collectionLi","_baseMvc","_localization","logNamespace","_super","_listView2","default","ModelListPanel","CollectionView","extend","_logNamespace","className","prototype","DatasetDCEViewClass","_collectionLi2","DatasetDCEListItemView","NestedDCDCEViewClass","NestedDCDCEListItemView","modelCollectionKey","initialize","attributes","call","this","linkTarget","hasUser","panelStack","parentName","foldoutStyle","downloadUrl","model","url","$newRender","speed","undefined","fxSpeed","panel","log","_swapNewRender","_filterCollection","_getItemViewClass","TypeError","trigger","get","options","_getItemViewOptions","_","_setUpItemViewListeners","view","v","drilldown","_expandDrilldownPanel","collapsed:drilldown","$","listenTo","hide","$el","append","render","_collapseDrilldownPanel","pop","events","click .navigation .back","$list","close","event","remove","toString","templates","controlsTemplate","_baseMvc2","wrapTemplate","_localization2","controls","ListCollectionView","PairCollectionView","clone","ListOfPairsCollectionView","foldoutPanelClass","ListOfListsCollectionView"],"mappings":"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","file":"../../../scripts/mvc/collection/collection-view.js","sourcesContent":["import LIST_VIEW from \"mvc/list/list-view\";\nimport DC_MODEL from \"mvc/collection/collection-model\";\nimport DC_LI from \"mvc/collection/collection-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"collections\";\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class non-editable, read-only View/Controller for a dataset collection.\n */\nvar _super = LIST_VIEW.ModelListPanel;\nvar CollectionView = _super.extend(\n    /** @lends CollectionView.prototype */ {\n        //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n        _logNamespace: logNamespace,\n\n        className: _super.prototype.className + \" dataset-collection-panel\",\n\n        /** sub view class used for datasets */\n        DatasetDCEViewClass: DC_LI.DatasetDCEListItemView,\n        /** sub view class used for nested collections */\n        NestedDCDCEViewClass: DC_LI.NestedDCDCEListItemView,\n        /** key of attribute in model to assign to this.collection */\n        modelCollectionKey: \"elements\",\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes optional settings for the panel\n     */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n\n            this.hasUser = attributes.hasUser;\n            /** A stack of panels that currently cover or hide this panel */\n            this.panelStack = [];\n            /** The text of the link to go back to the panel containing this one */\n            this.parentName = attributes.parentName;\n            /** foldout or drilldown */\n            this.foldoutStyle = attributes.foldoutStyle || \"foldout\";\n            this.downloadUrl = this.model.attributes.url + \"/download\";\n        },\n\n        _queueNewRender: function($newRender, speed) {\n            speed = speed === undefined ? this.fxSpeed : speed;\n            var panel = this;\n            panel.log(\"_queueNewRender:\", $newRender, speed);\n\n            // TODO: jquery@1.12 doesn't change display when the elem has display: flex\n            // this causes display: block for those elems after the use of show/hide animations\n            // animations are removed from this view for now until fixed\n            panel._swapNewRender($newRender);\n            panel.trigger(\"rendered\", panel);\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** In this override, use model.getVisibleContents */\n        _filterCollection: function() {\n            //TODO: should *not* be model.getVisibleContents - visibility is not model related\n            return this.model.getVisibleContents();\n        },\n\n        /** override to return proper view class based on element_type */\n        _getItemViewClass: function(model) {\n            //this.debug( this + '._getItemViewClass:', model );\n            //TODO: subclasses use DCEViewClass - but are currently unused - decide\n            switch (model.get(\"element_type\")) {\n                case \"hda\":\n                    return this.DatasetDCEViewClass;\n                case \"dataset_collection\":\n                    return this.NestedDCDCEViewClass;\n            }\n            throw new TypeError(\n                \"Unknown element type:\",\n                model.get(\"element_type\")\n            );\n        },\n\n        /** override to add link target and anon */\n        _getItemViewOptions: function(model) {\n            var options = _super.prototype._getItemViewOptions.call(\n                this,\n                model\n            );\n            return _.extend(options, {\n                linkTarget: this.linkTarget,\n                hasUser: this.hasUser,\n                //TODO: could move to only nested: list:paired\n                foldoutStyle: this.foldoutStyle\n            });\n        },\n\n        // ------------------------------------------------------------------------ collection sub-views\n        /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            _super.prototype._setUpItemViewListeners.call(panel, view);\n\n            // use pub-sub to: handle drilldown expansion and collapse\n            panel.listenTo(view, {\n                \"expanded:drilldown\": function(v, drilldown) {\n                    this._expandDrilldownPanel(drilldown);\n                },\n                \"collapsed:drilldown\": function(v, drilldown) {\n                    this._collapseDrilldownPanel(drilldown);\n                }\n            });\n            return this;\n        },\n\n        /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n        _expandDrilldownPanel: function(drilldown) {\n            this.panelStack.push(drilldown);\n            // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n            this.$(\"> .controls\")\n                .add(this.$list())\n                .hide();\n            drilldown.parentName = this.model.get(\"name\");\n            this.$el.append(drilldown.render().$el);\n        },\n\n        /** Handle drilldown close by freeing the panel and re-rendering this panel */\n        _collapseDrilldownPanel: function(drilldown) {\n            this.panelStack.pop();\n            this.render();\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: {\n            \"click .navigation .back\": \"close\"\n        },\n\n        /** close/remove this collection panel */\n        close: function(event) {\n            this.remove();\n            this.trigger(\"close\");\n        },\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"CollectionView(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nCollectionView.prototype.templates = (function() {\n    var controlsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"controls\">',\n            '<div class=\"navigation\">',\n            '<a class=\"back\" href=\"javascript:void(0)\">',\n            '<span class=\"fa fa-icon fa-angle-left\"></span>',\n            _l(\"Back to \"),\n            \"<%- view.parentName %>\",\n            \"</a>\",\n            \"</div>\",\n\n            '<div class=\"title\">',\n            '<div class=\"name\"><%- collection.name || collection.element_identifier %></div>',\n            '<div class=\"subtitle\">',\n            '<% if( collection.collection_type === \"list\" ){ %>',\n            _l(\"a list of datasets\"),\n            '<% } else if( collection.collection_type === \"paired\" ){ %>',\n            _l(\"a pair of datasets\"),\n            '<% } else if( collection.collection_type === \"list:paired\" ){ %>',\n            _l(\"a list of paired datasets\"),\n            '<% } else if( collection.collection_type === \"list:list\" ){ %>',\n            _l(\"a list of dataset lists\"),\n            \"<% } %>\",\n            \"</div>\",\n            \"</div>\",\n\n            '<div class=\"tags-display\"></div>',\n\n            '<div class=\"actions\">',\n            '<a class=\"download-btn icon-btn\" ',\n            'href=\"<%- view.downloadUrl %>',\n            '\" title=\"\" download=\"\" data-original-title=\"Download Collection\">',\n            '<span class=\"fa fa-floppy-o\"></span>',\n            \"</a>\",\n            \"</div>\",\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        controls: controlsTemplate\n    });\n})();\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListCollectionView = CollectionView.extend(\n    /** @lends ListCollectionView.prototype */ {\n        //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n        /** sub view class used for datasets */\n        DatasetDCEViewClass: DC_LI.DatasetDCEListItemView,\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"ListCollectionView(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar PairCollectionView = ListCollectionView.extend(\n    /** @lends PairCollectionView.prototype */ {\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"PairCollectionView(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListOfPairsCollectionView = CollectionView.extend(\n    /** @lends ListOfPairsCollectionView.prototype */ {\n        //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n        /** sub view class used for nested collections */\n        NestedDCDCEViewClass: DC_LI.NestedDCDCEListItemView.extend({\n            foldoutPanelClass: PairCollectionView\n        }),\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"ListOfPairsCollectionView(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a list of lists dataset collection. */\nvar ListOfListsCollectionView = CollectionView.extend({\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: DC_LI.NestedDCDCEListItemView.extend({\n        foldoutPanelClass: PairCollectionView\n    }),\n\n    /** string rep */\n    toString: function() {\n        return (\n            \"ListOfListsCollectionView(\" +\n            (this.model ? this.model.get(\"name\") : \"\") +\n            \")\"\n        );\n    }\n});\n\n//==============================================================================\nexport default {\n    CollectionView: CollectionView,\n    ListCollectionView: ListCollectionView,\n    PairCollectionView: PairCollectionView,\n    ListOfPairsCollectionView: ListOfPairsCollectionView,\n    ListOfListsCollectionView: ListOfListsCollectionView\n};\n"]}