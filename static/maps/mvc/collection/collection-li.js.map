{"version":3,"sources":["mvc/collection/collection-li.js"],"names":["_listItem","require","_datasetLi","_baseMvc","_localization","FoldoutListItemView","_listItem2","default","ListItemView","DCListItemView","extend","className","prototype","id","this","model","get","join","initialize","attributes","linkTarget","hasUser","call","_setUpListeners","listenTo","options","_","has","changed","$","replaceWith","_renderSubtitle","templates","subtitle","_getFoldoutPanelOptions","$selector","toString","warnings","_baseMvc2","wrapTemplate","_localization2","deleted","titleBarTemplate","subtitleTemplate","DCEListItemView","modelString","DatasetDCEListItemView","logger","log","_fetchModelDetails","titleBar","_datasetLi2","DatasetListItemView","NestedDCDCEListItemView","_swapNewRender","state","$el","view","inReadyState","hasDetails","fetch","silent","$newRender","addClass"],"mappings":"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","file":"../../../scripts/mvc/collection/collection-li.js","sourcesContent":["import LIST_ITEM from \"mvc/list/list-item\";\nimport DATASET_LI from \"mvc/dataset/dataset-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar FoldoutListItemView = LIST_ITEM.FoldoutListItemView,\n    ListItemView = LIST_ITEM.ListItemView;\n/** @class Read only view for DatasetCollection.\n */\nvar DCListItemView = FoldoutListItemView.extend(\n    /** @lends DCListItemView.prototype */ {\n        className:\n            FoldoutListItemView.prototype.className + \" dataset-collection\",\n        id: function() {\n            return [\"dataset_collection\", this.model.get(\"id\")].join(\"-\");\n        },\n\n        /** override to add linkTarget */\n        initialize: function(attributes) {\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n            this.hasUser = attributes.hasUser;\n            FoldoutListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        /** event listeners */\n        _setUpListeners: function() {\n            FoldoutListItemView.prototype._setUpListeners.call(this);\n            this.listenTo(this.model, \"change\", function(model, options) {\n                // if the model has changed deletion status render it entirely\n                if (_.has(model.changed, \"deleted\")) {\n                    this.render();\n\n                    // if the model has been decorated after the fact with the element count,\n                    // render the subtitle where the count is displayed\n                } else if (_.has(model.changed, \"element_count\")) {\n                    this.$(\"> .title-bar .subtitle\").replaceWith(\n                        this._renderSubtitle()\n                    );\n                }\n            });\n        },\n\n        // ......................................................................... rendering\n        /** render a subtitle to show the user what sort of collection this is */\n        _renderSubtitle: function() {\n            return $(this.templates.subtitle(this.model.toJSON(), this));\n        },\n\n        // ......................................................................... foldout\n        /** override to add linktarget to sub-panel */\n        _getFoldoutPanelOptions: function() {\n            var options = FoldoutListItemView.prototype._getFoldoutPanelOptions.call(\n                this\n            );\n            return _.extend(options, {\n                linkTarget: this.linkTarget,\n                hasUser: this.hasUser\n            });\n        },\n\n        /** override to not catch sub-panel selectors */\n        $selector: function() {\n            return this.$(\"> .selector\");\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DCListItemView(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCListItemView.prototype.templates = (function() {\n    var warnings = _.extend(\n        {},\n        FoldoutListItemView.prototype.templates.warnings,\n        {\n            error: BASE_MVC.wrapTemplate([\n                // error during index fetch - show error on dataset\n                \"<% if( model.error ){ %>\",\n                '<div class=\"errormessagesmall\">',\n                _l(\"There was an error getting the data for this collection\"),\n                \": <%- model.error %>\",\n                \"</div>\",\n                \"<% } %>\"\n            ]),\n            purged: BASE_MVC.wrapTemplate([\n                \"<% if( model.purged ){ %>\",\n                '<div class=\"purged-msg warningmessagesmall\">',\n                _l(\"This collection has been deleted and removed from disk\"),\n                \"</div>\",\n                \"<% } %>\"\n            ]),\n            deleted: BASE_MVC.wrapTemplate([\n                // deleted not purged\n                \"<% if( model.deleted && !model.purged ){ %>\",\n                '<div class=\"deleted-msg warningmessagesmall\">',\n                _l(\"This collection has been deleted\"),\n                \"</div>\",\n                \"<% } %>\"\n            ])\n        }\n    );\n\n    // use element identifier\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- collection.element_identifier || collection.name %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    // use element identifier\n    var subtitleTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"subtitle\">',\n            '<% var countText = collection.element_count? ( collection.element_count + \" \" ) : \"\"; %>',\n            '<%        if( collection.collection_type === \"list\" ){ %>',\n            _l(\"a list of <%- countText %>datasets\"),\n            '<% } else if( collection.collection_type === \"paired\" ){ %>',\n            _l(\"a pair of datasets\"),\n            '<% } else if( collection.collection_type === \"list:paired\" ){ %>',\n            _l(\"a list of <%- countText %>dataset pairs\"),\n            '<% } else if( collection.collection_type === \"list:list\" ){ %>',\n            _l(\"a list of <%- countText %>dataset lists\"),\n            \"<% } %>\",\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend({}, FoldoutListItemView.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate,\n        subtitle: subtitleTemplate\n    });\n})();\n\n//==============================================================================\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemView = ListItemView.extend(\n    /** @lends DCEListItemView.prototype */ {\n        /** add the DCE class to the list item */\n        className:\n            ListItemView.prototype.className + \" dataset-collection-element\",\n\n        /** set up */\n        initialize: function(attributes) {\n            if (attributes.logger) {\n                this.logger = this.model.logger = attributes.logger;\n            }\n            this.log(\"DCEListItemView.initialize:\", attributes);\n            ListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DCEListItemView(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCEListItemView.prototype.templates = (function() {\n    // use the element identifier here - since that will persist and the user will need it\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- element.element_identifier %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            \"</div>\"\n        ],\n        \"element\"\n    );\n\n    return _.extend({}, ListItemView.prototype.templates, {\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemView = DATASET_LI.DatasetListItemView.extend(\n    /** @lends DatasetDCEListItemView.prototype */ {\n        className:\n            DATASET_LI.DatasetListItemView.prototype.className +\n            \" dataset-collection-element\",\n\n        /** set up */\n        initialize: function(attributes) {\n            if (attributes.logger) {\n                this.logger = this.model.logger = attributes.logger;\n            }\n            this.log(\"DatasetDCEListItemView.initialize:\", attributes);\n            DATASET_LI.DatasetListItemView.prototype.initialize.call(\n                this,\n                attributes\n            );\n        },\n\n        /** In this override, only get details if in the ready state.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n            }\n            return jQuery.when();\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DatasetDCEListItemView(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemView.prototype.templates = (function() {\n    // use the element identifier here and not the dataset name\n    //TODO:?? can we steal the DCE titlebar?\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- element.element_identifier %></span>',\n            \"</div>\",\n            \"</div>\"\n        ],\n        \"element\"\n    );\n\n    return _.extend({}, DATASET_LI.DatasetListItemView.prototype.templates, {\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemView = DCListItemView.extend(\n    /** @lends NestedDCDCEListItemView.prototype */ {\n        className:\n            DCListItemView.prototype.className + \" dataset-collection-element\",\n\n        /** In this override, add the state as a class for use with state-based CSS */\n        _swapNewRender: function($newRender) {\n            DCListItemView.prototype._swapNewRender.call(this, $newRender);\n            var state = this.model.get(\"state\") || \"ok\";\n            this.$el.addClass(\"state-\" + state);\n            return this.$el;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"NestedDCDCEListItemView(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    DCListItemView: DCListItemView,\n    DCEListItemView: DCEListItemView,\n    DatasetDCEListItemView: DatasetDCEListItemView,\n    NestedDCDCEListItemView: NestedDCDCEListItemView\n};\n"]}