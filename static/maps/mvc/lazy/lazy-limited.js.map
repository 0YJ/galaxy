{"version":3,"sources":["mvc/lazy/lazy-limited.js"],"names":["Backbone","View","extend","initialize","options","this","$container","collection","new_content","max","self","$","$message","content_list","_reset","addClass","_refresh","append","_remove","_done","done","_","size","each","content","remove","model","model_id","id","i","models","view"],"mappings":"oFAEeA,SAASC,KAAKC,QACzBC,WAAY,SAASC,GAHzBC,KAAAC,WAAAF,EAAAE,WAMQD,KAAKE,WAAaH,EAAQG,WAC1BF,KAAKG,YALWP,EAAKC,YACzBC,KAAAA,IAAYC,EAAAK,KAAA,GACRJ,KAAIK,gBACJL,KAAKC,SAALK,EAAkBP,UACbG,SAAAA,kBACAC,OAAAA,qBAAsBA,KAA3BC,IAAA,yBACAJ,KAAKI,WAAML,OAAAC,KAAXO,UACAP,KAAKQ,SAAAA,KAALN,WAAA,QAAAF,KAAAS,OAAAT,MACAA,KAAKO,SAALP,KAAkBE,WACbQ,MAASV,KAAAW,SADEX,MAGhBA,KAAKC,SAAAA,KAAWW,WAAYL,SAA5BP,KAAAa,QAAAb,OAIHc,MAf+B,WAmB5B,IAAIC,EAAOC,EAAEC,KAAKjB,KAAKQ,cAAgBR,KAAKI,IADhDU,OADAd,KAAAO,SAAAQ,EAAA,OAAA,UACOA,GAINN,OAtB+B,WA0B5BO,EAAEE,KAAKlB,KAAKQ,aAAc,SAASW,GAFvCA,EAAAC,WAEIJ,KAAEE,gBACEC,KAAAA,SAAQC,QAIfP,QA/B+B,SAAAQ,GAmC5B,IAAIC,EAAWD,EAAME,GAFzBJ,EAAAnB,KAAAQ,aAAAc,GACAT,IACQS,EAAAA,gBACAH,KAAUX,aAAKA,IAEfW,KAAAA,YAIPR,SA1C+B,WA8C5B,IAAKX,KAAKc,QAFd,IAAA,IAAAU,KAAAxB,KAAAE,WAAAuB,OAAA,CACU,IAAAJ,EAAArB,KAAAE,WAAWuB,OAAAD,GACExB,KAAAQ,aAAAa,EAAAE,IACf,IAASC,KAAKhB,aAAKN,EAAWuB,IAAQ,CAC9BJ,IAAAA,EAAanB,KAAAA,YAAkBsB,GAE/B,GADAE,KAAAA,aAAYlB,EAALe,IAAkBF,EACxBrB,KAAKQ,QACFW","file":"../../../scripts/mvc/lazy/lazy-limited.js","sourcesContent":["/** Contains helpers to limit/lazy load views for backbone views */\n\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.$container = options.$container;\n        this.collection = options.collection;\n        this.new_content = options.new_content;\n        this.max = options.max || 50;\n        this.content_list = {};\n        this.$message = $(\"<div/>\")\n            .addClass(\"ui-limitloader\")\n            .append(\"...only the first \" + this.max + \" entries are visible.\");\n        this.$container.append(this.$message);\n        this.listenTo(this.collection, \"reset\", this._reset, this);\n        this.listenTo(this.collection, \"add\", this._refresh, this);\n        this.listenTo(this.collection, \"remove\", this._remove, this);\n    },\n\n    /** Checks if the limit has been reached */\n    _done: function() {\n        var done = _.size(this.content_list) > this.max;\n        this.$message[done ? \"show\" : \"hide\"]();\n        return done;\n    },\n\n    /** Remove all content */\n    _reset: function() {\n        _.each(this.content_list, function(content) {\n            content.remove();\n        });\n        this.content_list = {};\n        this.$message.hide();\n    },\n\n    /** Remove content */\n    _remove: function(model) {\n        var model_id = model.id;\n        var content = this.content_list[model_id];\n        if (content) {\n            content.remove();\n            delete this.content_list[model_id];\n        }\n        this._refresh();\n    },\n\n    /** Refreshes container content by adding new views if visible */\n    _refresh: function() {\n        if (!this._done()) {\n            for (var i in this.collection.models) {\n                var model = this.collection.models[i];\n                var view = this.content_list[model.id];\n                if (!this.content_list[model.id]) {\n                    var content = this.new_content(model);\n                    this.content_list[model.id] = content;\n                    if (this._done()) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n});\n"]}