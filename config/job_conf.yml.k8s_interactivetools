execution:
  default: dynamic_k8s_dispatcher
  environments:
    dynamic_k8s_dispatcher:
      docker_default_container_id: 'galaxy/galaxy-min:latest'
      container_monitor: false
      docker_enabled: true
      function: k8s_container_mapper
      container_monitor: false
      runner: dynamic
      type: python
    local:
      runner: local
handling:
  assign:
  - db-skip-locked
limits:
- type: registered_user_concurrent_jobs
  value: 5
- type: anonymous_user_concurrent_jobs
  value: 2
runners:
  k8s:
    k8s_cleanup_job: onsuccess
    k8s_fs_group_id: "101"
    k8s_galaxy_instance_id: 'my-galaxy-instance'
    k8s_namespace: 'galaxy-namespace'
    k8s_pod_priority_class: 'my-galaxy-instance-job-priority'
    k8s_pull_policy: IfNotPresent
    k8s_run_as_group_id: "101"
    k8s_supplemental_group_id: "101"
    k8s_use_service_account: true
    k8s_run_as_user_id: "0"
    k8s_run_as_group_id: "0"
    k8s_interactivetools_use_ssl: true
    k8s_interactivetools_ingress_annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/tls-acme: "true"
    load: galaxy.jobs.runners.kubernetes:KubernetesJobRunner
  local:
    load: galaxy.jobs.runners.local:LocalJobRunner
    workers: 4
